[
{"content":{"body":"and browser support for :not is… :p","msgtype":"m.text"},"ts":1309478460000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"will attempt to rephrase more persuasively and email to the list. thanks for the feedback","msgtype":"m.text"},"ts":1309478520000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1309478580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't :not pretty widely supported by now?","msgtype":"m.text"},"ts":1309478581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it was in like acid2 wasn't it?","msgtype":"m.text"},"ts":1309478582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":not? no","msgtype":"m.text"},"ts":1309478583000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"who on earth doesn't support it?","msgtype":"m.text"},"ts":1309478640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess it was only acid3","msgtype":"m.text"},"ts":1309478641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":not() in css3-selectors is defined as only taking simple selectors, div.bq is not a simple selector","msgtype":"m.text"},"ts":1309478760000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"dunno who supports non-simple selectors in :not() these days","msgtype":"m.text"},"ts":1309478761000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"oh, right","msgtype":"m.text"},"ts":1309478762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'd just be :not(.bq) > blockquote { }","msgtype":"m.text"},"ts":1309478763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is Gmail now saying that every email sent by a Gmail user to the WHATWG list is phishing?","msgtype":"m.text"},"ts":1309483200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(as a change from its old approach of saying every email from @google.com was phishing)","msgtype":"m.text"},"ts":1309483201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah i just started seeing that today","msgtype":"m.text"},"ts":1309483440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not every mails, but enough to be problematic","msgtype":"m.text"},"ts":1309483441000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(every mails? english is hard)","msgtype":"m.text"},"ts":1309483442000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(every mail)","msgtype":"m.text"},"ts":1309483800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(english are hard)","msgtype":"m.text"},"ts":1309483801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"((Not the latter))","msgtype":"m.text"},"ts":1309483860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(i was puzzling at what strange series of edits I must have made to land on \"every mails\", heh)","msgtype":"m.text"},"ts":1309483920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"realises he is half asleep, and should go the rest of the way","msgtype":"m.emote"},"ts":1309483980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's pretty hyperactive","msgtype":"m.text"},"ts":1309483981000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i'm sure someone is tuning it","msgtype":"m.text"},"ts":1309484040000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"gmail suddenly started cramming way too much info in every from: section, too","msgtype":"m.text"},"ts":1309484041000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://blog.stateless.co/post/6246070973/how-offline-web-apps-should-work","msgtype":"m.text"},"ts":1309487340000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: I believe a big problem with that proposal is that it doesn't allow for safe updates. How does a Web author ensure that if a user visits a new version of the Web app, manages to download half of the resources and then goes offline, they still have a usable version of the app for offline use?","msgtype":"m.text"},"ts":1309489500000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm a bit worried about the increasing use of Function attributes instead of real DOM event listeners","msgtype":"m.text"},"ts":1309489920000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: in which ways localStorage prevent a partial update? (question, because I do not know)","msgtype":"m.text"},"ts":1309489921000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"localStorage a) sucked and b) is nothing to do with this really","msgtype":"m.text"},"ts":1309489980000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ooops","msgtype":"m.text"},"ts":1309489981000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"the feature he's talking about is the HTML5 \"appcache\"","msgtype":"m.text"},"ts":1309489982000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I meant the appcache","msgtype":"m.text"},"ts":1309489983000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"23:22 here","msgtype":"m.text"},"ts":1309489984000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I was talking to you at 4am my time last night, so deal with it :-)","msgtype":"m.text"},"ts":1309490040000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1309490041000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"but you are a roc(k)","msgtype":"m.text"},"ts":1309490042000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"in my head, anyway","msgtype":"m.text"},"ts":1309490043000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"appcache is specifically designed to ensure that you always get a consistent version","msgtype":"m.text"},"ts":1309490044000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it ensures that app resources are always loaded from the cache, not the network","msgtype":"m.text"},"ts":1309490045000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"when the manifest changes, it reloads all the resources in the background, while servicing requests from the old version of the app","msgtype":"m.text"},"ts":1309490100000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1309490101000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"when all the resources for the new version have downloaded, it atomically switches over","msgtype":"m.text"},"ts":1309490102000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's one reason you need a manifest","msgtype":"m.text"},"ts":1309490103000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"There may be ways to improve the appcache --- I'd be glad if there are --- but that guy hasn't quite thought through the problem enough","msgtype":"m.text"},"ts":1309490160000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hmm krijn server has hiccup","msgtype":"m.text"},"ts":1309490520000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://ariya.blogspot.com/2011/06/your-webkit-port-is-special-just-like.html","msgtype":"m.text"},"ts":1309491900000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"according to http://caniuse.com/#search=column css3 column support is pretty widespread","msgtype":"m.text"},"ts":1309493280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but when i try to use it i find a bunch of stuff isn't implemented","msgtype":"m.text"},"ts":1309493281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. column-span","msgtype":"m.text"},"ts":1309493282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the story?","msgtype":"m.text"},"ts":1309493283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"spec is fiction, or caniuse is fiction?","msgtype":"m.text"},"ts":1309493284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I'm not sure. But even the 'best' support for css columns is pretty lax. Subtle differences between browsers makes it tricky to use too","msgtype":"m.text"},"ts":1309493340000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"are there any rants about this online i could look at?","msgtype":"m.text"},"ts":1309493341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, nothing that comes to mind","msgtype":"m.text"},"ts":1309493520000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1309493521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in actuality, I don't think a lot of people are using them right now","msgtype":"m.text"},"ts":1309493580000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"columns of text, for the most part, don't really work on screen. better in print","msgtype":"m.text"},"ts":1309493581000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Hixie: I think you have to use vendor prefixes for the column stuff still","msgtype":"m.text"},"ts":1309494000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we don't support column-span","msgtype":"m.text"},"ts":1309494060000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and we require vendor prefix","msgtype":"m.text"},"ts":1309494061000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: e.g., http://platform.html5.org/style.css","msgtype":"m.text"},"ts":1309494062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah caniuse mentions the prefix","msgtype":"m.text"},"ts":1309494063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: is it planned? or is the spec in the weeds?","msgtype":"m.text"},"ts":1309494064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec's OK","msgtype":"m.text"},"ts":1309494065000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we need to check our implementation","msgtype":"m.text"},"ts":1309494120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1309494121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and implement column-span, which is not so easy","msgtype":"m.text"},"ts":1309494122000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"talking of css specs, anyone know how realistic http://dev.w3.org/csswg/css3-background/ is?","msgtype":"m.text"},"ts":1309494123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it looks quite... featureful","msgtype":"m.text"},"ts":1309494180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's mostly supported by most browsers","msgtype":"m.text"},"ts":1309494300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the best support for columns is currently in opera, though with -o-","msgtype":"m.text"},"ts":1309494720000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"in what sense is it better than webkit or gecko's support?","msgtype":"m.text"},"ts":1309494780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't seem to support span either","msgtype":"m.text"},"ts":1309494781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor honour -o-column-width?","msgtype":"m.text"},"ts":1309494782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what version should i be using?","msgtype":"m.text"},"ts":1309494840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Opera seems to support span, afaict","msgtype":"m.text"},"ts":1309495200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what version?","msgtype":"m.text"},"ts":1309495201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i couldn't get it to work at all","msgtype":"m.text"},"ts":1309495202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"11.11 and Opera.next","msgtype":"m.text"},"ts":1309495203000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i'm on 11.50","msgtype":"m.text"},"ts":1309495260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm using it on http://platform.html5.org/","msgtype":"m.text"},"ts":1309495261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Opera also support break-* properties for columns","msgtype":"m.text"},"ts":1309495320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., break-inside: avoid and break-after: avoid","msgtype":"m.text"},"ts":1309495380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what am i doing wrong? this works in webkit and gecko but not opera for me http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1053","msgtype":"m.text"},"ts":1309495381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm on mac, opera 11.50","msgtype":"m.text"},"ts":1309495382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: span works in my Opera 11.50 on Mac","msgtype":"m.text"},"ts":1309495383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1309495384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: just do column-count for Opera","msgtype":"m.text"},"ts":1309495440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you don't need the vendor prefix","msgtype":"m.text"},"ts":1309495441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh i thought karl said i had to use -o-","msgtype":"m.text"},"ts":1309495500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1309495501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, yes, that works","msgtype":"m.text"},"ts":1309495502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1309495503000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wtf now i can't get -span to work in opera either","msgtype":"m.text"},"ts":1309495620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yet it works in your doc","msgtype":"m.text"},"ts":1309495621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, it works in this case","msgtype":"m.text"},"ts":1309495680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1309495740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it works if i use <h1> but not if i use <span>?","msgtype":"m.text"},"ts":1309495800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, it only applies to block-level elements","msgtype":"m.text"},"ts":1309495801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i assumed it made them block-level","msgtype":"m.text"},"ts":1309495802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, webkit does -span as well","msgtype":"m.text"},"ts":1309498620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weirdo layout hack in gmail's mail index header, wonder when they started doing that ... looks really busted when you scroll around and it visibly changes modes","msgtype":"m.text"},"ts":1309499100000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wonders what WOW-playing Opera users think of the download progress bar WOW quip","msgtype":"m.emote"},"ts":1309504620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"searching for \"opera wow\" on twitter didn't bring up much about WoW","msgtype":"m.text"},"ts":1309505580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"karlcow: Yeah, I know, router and/or network cable to the second floor is broken. Will try to fix it tomorrow","msgtype":"m.text"},"ts":1309505820000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"hsivonen: http://www.sitepoint.com/forums/html-xhtml-52/link-anchor-doesnt-seem-working-ff4-ff5-766794.html \"Someone also pointed out that in about:config, setting \"html5.parser.enable\" to \"false\", makes this go away.\"","msgtype":"m.text"},"ts":1309506180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"doesn't know what the bug # is","msgtype":"m.emote"},"ts":1309506181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"boblet: what do you mean with \"excludes footer\"?","msgtype":"m.text"},"ts":1309507500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"boblet: \"Content inside a blockquote must be quoted from another source\" is a conformance requirement. so if you put content inside blockquote that is not from another source, it makes your document non-conforming","msgtype":"m.text"},"ts":1309507620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"AryehGregor: blockquote is sectioning root","msgtype":"m.text"},"ts":1309507680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should reply to teh email instead","msgtype":"m.text"},"ts":1309507740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that should have been stated not felt huh","msgtype":"m.text"},"ts":1309507741000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(took me a while to find where I’d written that :)","msgtype":"m.text"},"ts":1309507800000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: where did i state that?","msgtype":"m.text"},"ts":1309507801000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"however spec for footer says it’s allowed in sectioning root elements, and blockquote is a sectioning root element","msgtype":"m.text"},"ts":1309507802000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"indeed, i don't recall stating that blockquote must not contain footer","msgtype":"m.text"},"ts":1309507803000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I meant in that while footer is able to be quoted in blockquote, it’s not able to be used as a footer for blockquote","msgtype":"m.text"},"ts":1309507860000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"zcorpan: that is, not allowed to contain the attribution, only the quote itself","msgtype":"m.text"},"ts":1309507861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah ok","msgtype":"m.text"},"ts":1309507920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I’ve been thinking more about it, and am writing an email about the use cases the current spec makes difficult or excludes","msgtype":"m.text"},"ts":1309507921000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"will look forward to your feedback on it :) hopefully tomorrow…","msgtype":"m.text"},"ts":1309507980000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"biab","msgtype":"m.text"},"ts":1309507981000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Any of my regular contacts in here interested in testing Google+?","msgtype":"m.text"},"ts":1309509960000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"I am","msgtype":"m.text"},"ts":1309509961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: can you chime in here? https://bugzilla.mozilla.org/show_bug.cgi?id=389348#c6","msgtype":"m.text"},"ts":1309510080000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"it seems I'm in already","msgtype":"m.text"},"ts":1309510081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks arve!","msgtype":"m.text"},"ts":1309510082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1309510200000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Step out for 4 mins to talk to a colleague and annevk already gets invited, haha","msgtype":"m.text"},"ts":1309510260000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen:  how many extra names does IE have, are they listed somewhere?","msgtype":"m.text"},"ts":1309510261000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: my vague recollection is that there are more than 5 but fewer than 20.","msgtype":"m.text"},"ts":1309510440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"david_carlisle: the one that I remember is called &pdf; but that ungooglable, so I have trouble finding a list","msgtype":"m.text"},"ts":1309510500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: grmble, hopefully we'll decide not to do anything, then i can go back to sleep","msgtype":"m.text"},"ts":1309510501000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"we already decided that last time this came up","msgtype":"m.text"},"ts":1309510560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure what new information there is","msgtype":"m.text"},"ts":1309510561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes we did, but I don't recall the rationale.","msgtype":"m.text"},"ts":1309510562000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: had I recalled the rationale, I'd have WONTFIXed the bug already","msgtype":"m.text"},"ts":1309510563000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IE has entities for bidirectional characters","msgtype":"m.text"},"ts":1309510564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also, I'm not sure I agreed with the rationale last time","msgtype":"m.text"},"ts":1309510620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still, I don't like flipflopping on stuff like this forever","msgtype":"m.text"},"ts":1309510621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-March/014125.html","msgtype":"m.text"},"ts":1309510680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1309510681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm very skeptical about introducing entities for the codes that are","msgtype":"m.text"},"ts":1309510682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"redundant with dir=\"\" and <bdo> (namely, lre, lro, pdf, rle, rlo).","msgtype":"m.text"},"ts":1309510683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know enough about the others to have an educated opinion. I can","msgtype":"m.text"},"ts":1309510684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"set up a search to examine the data in more detail.\"","msgtype":"m.text"},"ts":1309510685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, in that email you can also find a list, just search for \"pdf\"","msgtype":"m.text"},"ts":1309510740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dir=\"\" and <bdo> don't work inside the title attribute","msgtype":"m.text"},"ts":1309510741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: thanks for the link","msgtype":"m.text"},"ts":1309510742000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Hixie: do you look at bugs in their order of priority?","msgtype":"m.text"},"ts":1309511100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hah, awesome: http://grantgalitz.org/get_the_hell_out/LegendOfZelda_Links_Awakening/","msgtype":"m.text"},"ts":1309513080000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"i love that game","msgtype":"m.text"},"ts":1309513200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is it possible to disable rich text in contenteditable? /inb4 “just use <textarea>”","msgtype":"m.text"},"ts":1309513380000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"seems it doesn't have the select glitch","msgtype":"m.text"},"ts":1309513500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks for the sitepoint link","msgtype":"m.text"},"ts":1309516320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I have no idea what's going on but I trust bz's guess: https://bugzilla.mozilla.org/show_bug.cgi?id=668213#c5","msgtype":"m.text"},"ts":1309516321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"PM `matjas`","msgtype":"m.text"},"ts":1309516980000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"Ms2ger, any chance I can get commit access to specification-data?","msgtype":"m.text"},"ts":1309520700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, I am going to try to do Progress Events with Anolis to see if I can make it work, but I need to add some references","msgtype":"m.text"},"ts":1309520701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, currently it does not even have XHR","msgtype":"m.text"},"ts":1309520760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought you had access already, fixed now","msgtype":"m.text"},"ts":1309520761000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Btw, you noticed anolis can create those files for you?","msgtype":"m.text"},"ts":1309520762000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I saw something about it creating the index for terms and such, but not sure how it works","msgtype":"m.text"},"ts":1309520820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anolis --dump-xrefs=data/xrefs/dom/xhr.json Overview.src.html /tmp/whatever would update xhr.json","msgtype":"m.text"},"ts":1309521000000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(You probably need a stub with the URL first)","msgtype":"m.text"},"ts":1309521001000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1309521120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, I updated references.json with an XHR entry but I still get","msgtype":"m.text"},"ts":1309521960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"SyntaxError: Specification not found: xhr.\"","msgtype":"m.text"},"ts":1309521961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does specs.data also need an update?","msgtype":"m.text"},"ts":1309522020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1309522021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"specs.json is for cross-spec cross-references, references.json is for the references section","msgtype":"m.text"},"ts":1309522022000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the error reporting is not so great","msgtype":"m.text"},"ts":1309522620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lots of times make just says nothing and I get an empty Overview.html","msgtype":"m.text"},"ts":1309522621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so http://people.opera.com/miket/2011/6/viewer.html is kinda broken if the user uses teh reload button after viewing an image","msgtype":"m.text"},"ts":1309522622000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It should print an exception at least","msgtype":"m.text"},"ts":1309522680000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But patches very welcome ;)","msgtype":"m.text"},"ts":1309522681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"would it be worth it to work around this misuse of the api so that if you reload a page that has used pushState, and the new page doesn't have an event listener for popstate, when you navigate back the browser uses the previous page (the one that used pushState) instead of staying on the current one","msgtype":"m.text"},"ts":1309522740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think there are no exceptions for missing reference entries","msgtype":"m.text"},"ts":1309522741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it just fails silently","msgtype":"m.text"},"ts":1309522742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe once it has thrown an exception it won't throw it again the next time you run make","msgtype":"m.text"},"ts":1309522800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Strange, there is \"raise SyntaxError, \"Reference not defined: %s.\" % ref\" in the code","msgtype":"m.text"},"ts":1309522860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/progress/ now uses Anolis","msgtype":"m.text"},"ts":1309523340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should check in my changes to specification-data","msgtype":"m.text"},"ts":1309523341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Please do","msgtype":"m.text"},"ts":1309523400000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"where can you put a global hg file with username info and such?","msgtype":"m.text"},"ts":1309523460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"~/.hgrc","msgtype":"m.text"},"ts":1309523520000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://bitbucket.org/ms2ger/specification-data/changeset/8390f4084a7a","msgtype":"m.text"},"ts":1309523580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lovely","msgtype":"m.text"},"ts":1309523581000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"how does Roboform integrate into Opera versions that didn't support extensions?","msgtype":"m.text"},"ts":1309524000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it claims compat with Opera 7 through 11","msgtype":"m.text"},"ts":1309524001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does it do some tricky native code injection without API support from Opera?","msgtype":"m.text"},"ts":1309524002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger, can you use Anolis from Python easily?","msgtype":"m.text"},"ts":1309524300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Depends on what you call easily, I guess","msgtype":"m.text"},"ts":1309524480000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'd look at http://hg.hoppipolla.co.uk/hgwebdir.cgi/aquarium/file/ebf539280b86/aquarium.py#l74","msgtype":"m.text"},"ts":1309524481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I need to do some pre-processing for XMLHttpRequest","msgtype":"m.text"},"ts":1309525020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"either that needs to move to the Makefile or the Makefile needs to move to Python","msgtype":"m.text"},"ts":1309525021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or I guess I can create a bash script that combines them...","msgtype":"m.text"},"ts":1309525022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, right","msgtype":"m.text"},"ts":1309525260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that last option is prolly the easiest","msgtype":"m.text"},"ts":1309525320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, maybe something like this would work? http://pastebin.com/XAMfTyCS","msgtype":"m.text"},"ts":1309525620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I actually want to generate both copies at the same time","msgtype":"m.text"},"ts":1309525800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I guess that's a step in that direction","msgtype":"m.text"},"ts":1309525801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, how do I do http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#ref-httpverbsec ?","msgtype":"m.text"},"ts":1309525802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait for me to implement it, I'm afraid","msgtype":"m.text"},"ts":1309525860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1309525861000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I sort of like that for XML too","msgtype":"m.text"},"ts":1309525920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because you never want XML without XMLNS","msgtype":"m.text"},"ts":1309525921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least not for specifications that matter, afaict","msgtype":"m.text"},"ts":1309525922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1309526520000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, { \"HTTPVERBSEC\": [{first link}, {second link}, {third link}] } should work if you update anolis","msgtype":"m.text"},"ts":1309526640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1309526700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm adding a bunch of missing references first","msgtype":"m.text"},"ts":1309526701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looks like Vlad doesn't edit Typed Arrays anymore","msgtype":"m.text"},"ts":1309526940000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, you mean after \"href\" and \"title\" right?","msgtype":"m.text"},"ts":1309526941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like some users don't want to update firefox because add-ons and other things break - http://www.sitepoint.com/forums/4908549-post15.html (search for \"Actually, two reasons:\")","msgtype":"m.text"},"ts":1309526942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger, I will update that right away","msgtype":"m.text"},"ts":1309527000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, http://pastebin.com/C9VbyrWK","msgtype":"m.text"},"ts":1309527180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1309527420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas, even though whitespace is not allowed it can still be made to work","msgtype":"m.text"},"ts":1309528200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas, so you should escape it appropriately on http://mothereffingcssescapes.com/ I think besides giving a warning","msgtype":"m.text"},"ts":1309528260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so IE10 PP2 has msRequestAnimationFrame","msgtype":"m.text"},"ts":1309528320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what's the Opera situation with that one?","msgtype":"m.text"},"ts":1309528321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we don't","msgtype":"m.text"},"ts":1309528322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sucks for Web authors (again) that this stuff isn't frozen and unprefixed faster","msgtype":"m.text"},"ts":1309528380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the first shipped implementation is only 3 months old","msgtype":"m.text"},"ts":1309528560000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: it's not like there's so many design decisions here","msgtype":"m.text"},"ts":1309528620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the webkit guys proposed a second argument to determine if the element is displayed","msgtype":"m.text"},"ts":1309528680000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"I wonder if MS is interested in supporting MathML. they have pretty cool other layout goodies in 10PP2","msgtype":"m.text"},"ts":1309528681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Rik`: that kind of change would have been backwards-compatible even if the method had been unprefixed already","msgtype":"m.text"},"ts":1309528682000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: done, thanks!","msgtype":"m.text"},"ts":1309528800000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"in cases like these, prefixing mainly serves to disadvantage browsers that authors didn't bother to support at a given point in time","msgtype":"m.text"},"ts":1309528801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for example, if Opera adds an o-prefixed version, it will suck that code written for moz and webkit prefixes will go to a fallback setTimout path","msgtype":"m.text"},"ts":1309528802000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even worse if a new engine wanted to break into the market","msgtype":"m.text"},"ts":1309528860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also, the point of prefixing is defeated if authors anticipate the o-prefixed and unprefixed versions to behave like the existing impls and write code anticipating that","msgtype":"m.text"},"ts":1309528920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes but the alternative is \"first to implement choose the API\"","msgtype":"m.text"},"ts":1309529040000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"hsivonen: And what we do now is often end up as the first to drop the prefix, which hurts too","msgtype":"m.text"},"ts":1309529100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Rik`: that happens anyway if Web authors write code that anticipates the unprefixed version working like the first prefixed version","msgtype":"m.text"},"ts":1309529101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: wait, not done. Line breaks won’t work when simply escaped through \\. Unicoads here I come!!1","msgtype":"m.text"},"ts":1309529220000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hsivonen: no, people who used the unprefixed version of the webkit gradients will not see it working","msgtype":"m.text"},"ts":1309529221000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: when someone with paul_irish's visibility has blogged http://paulirish.com/2011/requestanimationframe-for-smart-animating/ , it's game over for incompatible changes unless browsers are willing to break cool new legacy content","msgtype":"m.text"},"ts":1309529222000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I wonder about that too:-)","msgtype":"m.text"},"ts":1309529280000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"browser vendors should always be willing to break prefixed APIs","msgtype":"m.text"},"ts":1309529340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: note that copy-pasteable boilerplate in that post anticipates the future existence of compatible unprefixed version, o-prefixed version and ms-prefixed version","msgtype":"m.text"},"ts":1309529400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so far, guessing that an ms-prefixed version with the same behavior will emerge has paid off!","msgtype":"m.text"},"ts":1309529401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it will be interesiting to see what happens with flexbox","msgtype":"m.text"},"ts":1309529460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I changed prefixes to -ms- on code that worked in Gecko and WebKit using -moz- and -webkit- and got different results","msgtype":"m.text"},"ts":1309529461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(yes, I'm aware that TabAtkins has made actual spec changes after -moz- and -webkit- flexbox impls were made)","msgtype":"m.text"},"ts":1309529520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger, so I'm trying to populate a newly generated progress-events.json but it does not work","msgtype":"m.text"},"ts":1309529521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fwiw, I'll be away from the internets next week, so even if someone sorts out the incomplete registrations at http://wiki.whatwg.org/wiki/MetaExtensions , deployment on Validator.nu will have to way until the 11th of July","msgtype":"m.text"},"ts":1309530180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger, we should change <var> so that it never xrefs","msgtype":"m.text"},"ts":1309530420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks like the link that the Webtrends regs should have had is http://product.webtrends.com/WRC/7.0/Documents/TechRef.pdf","msgtype":"m.text"},"ts":1309530660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"converting XHR is a little more work than expected :/","msgtype":"m.text"},"ts":1309531980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it was a feature people have requested for ages though so hopefully it is worth it","msgtype":"m.text"},"ts":1309531981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: IE10 will have old flexbox behavior.  Webkit is switching to new flexbox behavior.","msgtype":"m.text"},"ts":1309533960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Of course, both -moz and -webkit flexbox were sufficiently different/buggy that you couldn't just spam the prefixes and get the same result in non-trivial cases.","msgtype":"m.text"},"ts":1309534020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger, anolis seems to strip _ from terms","msgtype":"m.text"},"ts":1309534260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, this creates problems for e.g. SYNTAX_ERR which becomes syntaxerr but is syntax_err in xrefs","msgtype":"m.text"},"ts":1309534320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I could hack Anolis but I have no commit rights","msgtype":"m.text"},"ts":1309534440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, I have a fix","msgtype":"m.text"},"ts":1309534740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: just curious, any estimate whether the new flexbox model will be stable, or will it be changed again in few months?","msgtype":"m.text"},"ts":1309534741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"-non_alphanumeric_spaces = re.compile(r\"[^a-zA-Z0-9 \\-]+\")","msgtype":"m.text"},"ts":1309534742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+non_alphanumeric_spaces = re.compile(r\"[^a-zA-Z0-9 \\-\\_]+\")","msgtype":"m.text"},"ts":1309534743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, ^^ in the xref files","msgtype":"m.text"},"ts":1309534744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, what is the reason for <command> element?","msgtype":"m.text"},"ts":1309534800000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: The underlying model is stable, though I'm re-adding the multiline feature today or next week.  Syntax may still be tweaked, but that's it.","msgtype":"m.text"},"ts":1309534920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess there is only one reason for <command>; to have icon with checkbox or radiobutton","msgtype":"m.text"},"ts":1309535100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"kind of weak reason","msgtype":"m.text"},"ts":1309535101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"boblet, zcorpan: Oops.  I should have read the spec before I commented.  :)","msgtype":"m.text"},"ts":1309535220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(on blockquote as sectioning root)","msgtype":"m.text"},"ts":1309535280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"matjas, I'll look.","msgtype":"m.text"},"ts":1309535400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: apparently the cases I've used (or, well, that Paul Rouget has used and that I've copied) have been simple enough to have the same flex stuff with -moz- and -webkit-","msgtype":"m.text"},"ts":1309536060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: btw i hear ya on rAF.. i wrote that post as a way to gather feedback on the spec primarily.. secondarily i wanted to share a shim that was a bit smarter than existing ones that were circulating. it does put vendors in weird place though as the script assumes certain behavior.. :/","msgtype":"m.text"},"ts":1309536240000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Few devs understand that the existence of a prefix means By Using this You are entering into a Contract where things may break and it is Your Fault if they do. :)","msgtype":"m.text"},"ts":1309536241000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"and then i'd also suggest many things stay prefixed too long anyhow, so that implication loses its authority over time","msgtype":"m.text"},"ts":1309536300000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"not sure what the right solution is.. but i do get the vibe most devs dont know where/how to submit the community feedback that is desired and implied by the prefix","msgtype":"m.text"},"ts":1309536360000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: I think the right solution is to allocate more people-time paid by browser vendors to spec writing","msgtype":"m.text"},"ts":1309537200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"paul_irish: to get specs in order sooner","msgtype":"m.text"},"ts":1309537201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1309537260000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1309537261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"could use some more spec writers to help out.","msgtype":"m.emote"},"ts":1309537262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not only spec writers, but also spec reviewers","msgtype":"m.text"},"ts":1309537680000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"speaking of spec review, would be nice to get more implementor feedback on the Notifications spec","msgtype":"m.text"},"ts":1309537800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we had estimated we could take that to LC this month","msgtype":"m.text"},"ts":1309537860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe even it was CR","msgtype":"m.text"},"ts":1309537861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"John should fix the things Hixie raised I guess","msgtype":"m.text"},"ts":1309537862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"need to ping him I guess","msgtype":"m.text"},"ts":1309537920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"whoah, Alastair left Bocoup","msgtype":"m.text"},"ts":1309538100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hm.  Is multipage partially broken?  Looks like http://www.whatwg.org/specs/web-apps/current-work/complete/rendering.html is coming through as an empty doc.","msgtype":"m.text"},"ts":1309540440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger, if you are still there, need to allow / too","msgtype":"m.text"},"ts":1309542000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-non_alphanumeric_spaces = re.compile(r\"[^a-zA-Z0-9 \\-]+\")","msgtype":"m.text"},"ts":1309542060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"+non_alphanumeric_spaces = re.compile(r\"[^a-zA-Z0-9 \\-\\_\\/]+\")","msgtype":"m.text"},"ts":1309542061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, ^^ is the new diff","msgtype":"m.text"},"ts":1309542062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does anyone know the current status of the keygen element support in IE? Is this post still the current sentiment of MS? http://blog.whatwg.org/this-week-in-html5-episode-35 e.g. no intention of support in IE?","msgtype":"m.text"},"ts":1309542300000,"senderName":"AnselmBradford","senderId":"AnselmBradford@irc"},
{"content":{"body":"AnselmBradford, that's the last I heard, yeah.","msgtype":"m.text"},"ts":1309542540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Everyone seems to agree keygen stinks.","msgtype":"m.text"},"ts":1309542541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But no one cares enough to replace it.","msgtype":"m.text"},"ts":1309542542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: thanks, seemed to be the sentiment I was reading","msgtype":"m.text"},"ts":1309542660000,"senderName":"AnselmBradford","senderId":"AnselmBradford@irc"},
{"content":{"body":"just wanted to double-check","msgtype":"m.text"},"ts":1309542661000,"senderName":"AnselmBradford","senderId":"AnselmBradford@irc"},
{"content":{"body":"you reckon it will be replaced anytime soon? Or who knows...","msgtype":"m.text"},"ts":1309542720000,"senderName":"AnselmBradford","senderId":"AnselmBradford@irc"},
{"content":{"body":"AnselmBradford: It'll be replaced when someone cares enough to.  ^_^  Which no one does currently, so...","msgtype":"m.text"},"ts":1309542780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: heh, fair enough","msgtype":"m.text"},"ts":1309542781000,"senderName":"AnselmBradford","senderId":"AnselmBradford@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/XMLHttpRequest-2/ and http://dev.w3.org/2006/webapi/XMLHttpRequest/ use Anolis as well now","msgtype":"m.text"},"ts":1309544760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahaa, accessKey handling is underspecified","msgtype":"m.text"},"ts":1309551960000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"needs to review and file a bug","msgtype":"m.emote"},"ts":1309551961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk-cloud: yt?","msgtype":"m.text"},"ts":1309554060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hm nm","msgtype":"m.text"},"ts":1309554061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk-cloud: should http://dvcs.w3.org/hg/from-origin/raw-file/tip/Overview.html just be merged into the Fetch algorithm?","msgtype":"m.text"},"ts":1309554120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm going to start making web pages which, isntead of using native controls or canvas or svg or whatever, draw everything pixel by pixel using one radio button per pixel and CSS to set the radio button pixels' colours","msgtype":"m.text"},"ts":1309554900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i demand that we add accessibility apis to support this authoring model!","msgtype":"m.text"},"ts":1309554901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why do you all hate accessibility! you're makign it imposssible for me to write accessible web pages using radio buttons for pixels!","msgtype":"m.text"},"ts":1309554902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, i prefer my \"canvas fallback through 1x1px table cells\" approach","msgtype":"m.text"},"ts":1309555320000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"dude authors would never use table cells for this kind of thing, it's clear that that's bad for accessibility. they will use radio buttons like me! which is why we should have a radio button pixel accessibility api!","msgtype":"m.text"},"ts":1309555380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we could... embed radio buttons in table cells for maximum compatibility AND accessability?","msgtype":"m.text"},"ts":1309555440000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"TabAtkins: if you could get some traction on http://code.google.com/p/chromium/issues/detail?id=80911&q=bzbarsky&colspec=ID%20Stars%20Pri%20Area%20Feature%20Type%20Status%20Summary%20Modified%20Owner%20Mstone%20OS that'd be fantastic; the difference is masking some potential issues with wf2 api changes","msgtype":"m.text"},"ts":1309555740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"google.com had table cell bitmaps for icons at one point briefly","msgtype":"m.text"},"ts":1309555741000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"with judicious use of rowspan/colspan to cut down on the # of cells","msgtype":"m.text"},"ts":1309555742000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"the shopping cart guys did that","msgtype":"m.text"},"ts":1309555743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i had words","msgtype":"m.text"},"ts":1309555744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1309555745000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"(not that they listened, but still)","msgtype":"m.text"},"ts":1309555746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it was only live for a few days","msgtype":"m.text"},"ts":1309555747000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: :)","msgtype":"m.text"},"ts":1309555748000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":" <jamesr> with judicious use of rowspan/colspan to cut down on the # of cells <- \"let's implement something atrociously slow and horrible. and then optimize it a bit. it'll be perfectly fine!\"","msgtype":"m.text"},"ts":1309555800000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1309555801000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the firmware update on my old wifi router actually uses a form submit button ... as a progress bar","msgtype":"m.text"},"ts":1309555802000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1309555803000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The_8472: i think the motivation was mainly to inline the image (to avoid another request) and support browsers that didn't handle data: urls","msgtype":"m.text"},"ts":1309555860000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"oh. static images. i was thinking of animating stuff with tables!","msgtype":"m.text"},"ts":1309555861000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1309556280000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"you could probably do something decent with paletted tables","msgtype":"m.text"},"ts":1309556281000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"annevk-cloud, I'll look at it tomorrow if I don't forget","msgtype":"m.text"},"ts":1309556940000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is anyone here following jason weber's setImmediate proposal discussions closely?","msgtype":"m.text"},"ts":1309561080000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i feel like i have a different set of assumptions going in and i'm not exactly sure what they are","msgtype":"m.text"},"ts":1309561081000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: http://www.w3.org/mid/CAD73md+Zp8J2bbdgTqPnK7FYW9A8ZHAEttz_6-H16g6sPKumUA⊙mgc is the crux of the matter as far as i can tell","msgtype":"m.text"},"ts":1309561560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, yeah","msgtype":"m.text"},"ts":1309561561000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"that's definitely an issue","msgtype":"m.text"},"ts":1309561620000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"So, hm.  How many of the use-cases for setImmediate can be solved by Workers?","msgtype":"m.text"},"ts":1309561621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jamesr: i don't understand what the proposal achieves other than that, and as you imply, it doesn't even achieve that","msgtype":"m.text"},"ts":1309561622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"After all, you can just infinite-loop a Worker and go about your business.","msgtype":"m.text"},"ts":1309561623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"presumably this is for things that update the dom?","msgtype":"m.text"},"ts":1309561680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then why not use settimeout-0","msgtype":"m.text"},"ts":1309561681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(well, workers still have the problem of not being able to receive events during a processing loop; maybe I should give that thread a kick at some point...)","msgtype":"m.text"},"ts":1309561682000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: true","msgtype":"m.text"},"ts":1309561740000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"we could unclamp settimeout() in workers","msgtype":"m.text"},"ts":1309561741000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"or rely on authors setting the timer early, like in my example code","msgtype":"m.text"},"ts":1309561800000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: You can just send a message to something in the page that'll update the dom for you.","msgtype":"m.text"},"ts":1309561801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jamesr: No need to setTimeout at all in workers.","msgtype":"m.text"},"ts":1309561802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you do in order to process incoming messages","msgtype":"m.text"},"ts":1309561803000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: not if the work to update the dom is the expensive work","msgtype":"m.text"},"ts":1309561804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or window.postMessage() yourself to yield","msgtype":"m.text"},"ts":1309561805000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"my proposal was to add a way to explicitly, synchronously receive a message from a MessagePort in workers; don't remember where that left off (just trailed off, iirc)","msgtype":"m.text"},"ts":1309561806000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which is equivalent to setImmediate","msgtype":"m.text"},"ts":1309561807000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: Ah, yes, recieving messages woudl require that.  If you're just sending them, you don't.","msgtype":"m.text"},"ts":1309561860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, unclamping in a Worker would work, since the primary use-case for the clamp is \"keep the UI thread from being hung\".","msgtype":"m.text"},"ts":1309561861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's more to keep really dumb pages from spinning 100%","msgtype":"m.text"},"ts":1309561862000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"with an unclamped setTimeout() you can still service UI stuff","msgtype":"m.text"},"ts":1309561863000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: But it'll get done in separate invocations of the message handler, right?","msgtype":"m.text"},"ts":1309561920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jamesr: iirc, an objection to that was that it may be hard to actually guarantee the message loop spins fully when a 0ms timer is looping","msgtype":"m.text"},"ts":1309561921000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(don't remember clearly, discussion was a while ago)","msgtype":"m.text"},"ts":1309561922000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smells like QoI","msgtype":"m.text"},"ts":1309561923000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"er, the event loop","msgtype":"m.text"},"ts":1309561924000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: oh, i see what you're saying","msgtype":"m.text"},"ts":1309561925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: yeah, you could do that. it's a bit non-intuitive.","msgtype":"m.text"},"ts":1309561980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the event loop impl in chrome is very carefully designed not to starve any task source (both the HTML-defined ones and the implementation-internal ones)","msgtype":"m.text"},"ts":1309561981000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: think of a case where you need to crawl a 5MB document and search for text nodes containing some text","msgtype":"m.text"},"ts":1309561982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: can't really do that in a worker, and you need to yield","msgtype":"m.text"},"ts":1309561983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr: Oh, if that's the major use-case, then setImmediate does nothing.  If someone was spinning the CPU with setTimeout(0), there's absolutely no reason they wouldn't spin it with setImmediate too.","msgtype":"m.text"},"ts":1309561984000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: (settimeout 0 seems fine for that in practice, to me)","msgtype":"m.text"},"ts":1309561985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's true, and yes.","msgtype":"m.text"},"ts":1309561986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that's my primary objection","msgtype":"m.text"},"ts":1309561987000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"anyway i don't really see the point of setImmediate()","msgtype":"m.text"},"ts":1309562040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'll never be possible to keep it unclamped","msgtype":"m.text"},"ts":1309562041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at which point, it's the same as setTimeout()","msgtype":"m.text"},"ts":1309562042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1309562043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr: I assumed the big reason was the whole \"starving everybody else of events\" thing, and because solving that with setTimout(0) can increase your running time by a non-trivial amount if you dont' split up the work large enough.","msgtype":"m.text"},"ts":1309562044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: there's an argument against that on that page: setTimeout(0) has never actually spun, since implementations have always clamped it (long before that was specced), and at least some people using setTimeout(0) are depending on that (probably without being aware of it)","msgtype":"m.text"},"ts":1309562100000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: then split your work better","msgtype":"m.text"},"ts":1309562101000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: i certainly wouldn't argue that *some* people wouldn't spin stupidly with setImmediate, of course","msgtype":"m.text"},"ts":1309562102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: that's just not true, though. mozilla was unclamped, they noticed that pages were using 100% CPU, and they clamped","msgtype":"m.text"},"ts":1309562103000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: because of people only testing in IE, is my first guess","msgtype":"m.text"},"ts":1309562104000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"in chrome we had an unclamped setTimeout for a while (before release)","msgtype":"m.text"},"ts":1309562160000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"couldn't go with it, of course, because too many pages spun the CPU too badly","msgtype":"m.text"},"ts":1309562161000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: Indeed.  Your code snippet was simple.  If it's a big problem, we can solve *that* case directly.","msgtype":"m.text"},"ts":1309562162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"people's macbook pros were setting their jeans on fire","msgtype":"m.text"},"ts":1309562163000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"(the set of people who would only test in IE and the set of people who would use a setTimeout(0) busy loop probably has a lot of overlap)","msgtype":"m.text"},"ts":1309562164000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"With, like, a \"yieldIfTooMuchTimeIsPassing()\" function.","msgtype":"m.text"},"ts":1309562165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well you wouldn't want a continuation","msgtype":"m.text"},"ts":1309562166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(well, you would, but vendors wouldn't)","msgtype":"m.text"},"ts":1309562220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"yieldIfTooMuchTimeHasPassedSinceTheLastTimeICalledThisFunction()\"","msgtype":"m.text"},"ts":1309562221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but the same principle applies","msgtype":"m.text"},"ts":1309562222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hasTooMuchTimeElaphsed()","msgtype":"m.text"},"ts":1309562223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I certainly do.  And at least some of us webkit people do.","msgtype":"m.text"},"ts":1309562224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1309562225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dude the moment browser vendors add continuations to the platform, i'm speccing features left right and center to use them","msgtype":"m.text"},"ts":1309562226000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah.  It's even in our Traceur thing.","msgtype":"m.text"},"ts":1309562280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We support an \"async\" keyword that does simple continuations.","msgtype":"m.text"},"ts":1309562281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"all the async apis can go away if we have real continuations","msgtype":"m.text"},"ts":1309562282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the vendor objection to them? just too hard to handle when calling scripts from lots of different exit points?","msgtype":"m.text"},"ts":1309562283000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"continuations are cool but they're a language level thing","msgtype":"m.text"},"ts":1309562284000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"dunno if you can just slip them in without a lot of careful design","msgtype":"m.text"},"ts":1309562285000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: Indeed, continuations are ridiculously more usable than callbacks.","msgtype":"m.text"},"ts":1309562286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyway my assumption is that they're not coming any time soon","msgtype":"m.text"},"ts":1309562287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but if that assumption is wrong, i look forward to being proven so :-)","msgtype":"m.text"},"ts":1309562340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr: You end up having to duplicate all the async methods into being task-based, but it's not too intrusive.","msgtype":"m.text"},"ts":1309562341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Tasks-via-continuations are just an inversation of iterator functions, which everyone wants to support (and FF already does).","msgtype":"m.text"},"ts":1309562400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/inversation/inversion/","msgtype":"m.text"},"ts":1309562401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's basically the same \"convert the code into a state machine\" transformation.","msgtype":"m.text"},"ts":1309562402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i thought iterator functions were very tied to specific objects","msgtype":"m.text"},"ts":1309562460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just to make sure we're talkinga bout the same thing, I'm referring to Python-like functions that use \"yield\" to return values.","msgtype":"m.text"},"ts":1309562520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1309562521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't just yield from a random function though, you can only yield from one that's known to be an iterator, right?","msgtype":"m.text"},"ts":1309562522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ok, then yeah, it's the same thing but inverted.  When you use an iterator function, the function is converted to a state machine.  When you use a task, *you're* converted to a state machine.","msgtype":"m.text"},"ts":1309562523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: your mom is converted to a state machine","msgtype":"m.text"},"ts":1309562580000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"And you magically transform into producing tasks as well.","msgtype":"m.text"},"ts":1309562581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so what happens if you're in the middle of processing a sync event or one of these new mutation callbacks, and you call yield()?","msgtype":"m.text"},"ts":1309562582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that sounds insanely painful","msgtype":"m.text"},"ts":1309562583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I won't think about Jonas's mutation callbacks, because they're not good.","msgtype":"m.text"},"ts":1309562584000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno how sync events are handled.  What's an example?","msgtype":"m.text"},"ts":1309562640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, you're in the middle of a signalling channel callback, and you call yield()","msgtype":"m.text"},"ts":1309562641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does the whole PeerConnection C++ implementation get \"converted to a state machine\"?","msgtype":"m.text"},"ts":1309562642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, there's how Python does it: if you use the yield keyword, then calling the function returns a generator object; which implies that you can only yield if the caller is expecting it, or the rest of the function just won't be executed","msgtype":"m.text"},"ts":1309562643000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so the exit points that actually support yielding is controllable and not everything necessarily needs to","msgtype":"m.text"},"ts":1309562700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Dunno how PeerConnection works either.","msgtype":"m.text"},"ts":1309562701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: right, but that yields to the caller. here we're talking about yielding to the event loop. whole different kettle of fish.","msgtype":"m.text"},"ts":1309562702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think having continuations is nice but it doesn't really reduce the complexity of re-entrancy by that much","msgtype":"m.text"},"ts":1309562760000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"right, but the callback or event could specify whether it supports it","msgtype":"m.text"},"ts":1309562761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"But the function that uses the async keyword (to magically make an async event look sync in the code) gets transformed to returning a task instead of its normal return value.","msgtype":"m.text"},"ts":1309562762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(not sure just how that would work with events)","msgtype":"m.text"},"ts":1309562763000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"And it returns that task as soon as the first \"async\" is hit.","msgtype":"m.text"},"ts":1309562764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tab: yeah, that sounds directly analogous to Python's model","msgtype":"m.text"},"ts":1309562765000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"If the caller doesn't know how to handle tasks, it'll get hurt.","msgtype":"m.text"},"ts":1309562766000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But everything on the UA level *should* know how to do so.","msgtype":"m.text"},"ts":1309562820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh so you're not just yielding to the event loop, you're just yielding to the parent, who then has to yield as well, etc","msgtype":"m.text"},"ts":1309562821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1309562822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh well that's not so interesting","msgtype":"m.text"},"ts":1309562823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's just a generator","msgtype":"m.text"},"ts":1309562824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think lua's model allows yielding all the way out, but it has a full coroutine system for that","msgtype":"m.text"},"ts":1309562825000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It still lets you write straight-line, callback-less code in many situations that would otherwise be messy.","msgtype":"m.text"},"ts":1309562826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: not really. you have to have your entire callchain expect you to be yielding, it's not much better than having the whole chain use callbacks.","msgtype":"m.text"},"ts":1309562880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Not quite.  Actually implementing it with a generator involves more fiddliness.","msgtype":"m.text"},"ts":1309562881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in other news, i just did a revamp of http://www.whatwg.org/specs/web-apps/current-work/complete.html#rendering to be organised by element, not property","msgtype":"m.text"},"ts":1309562882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: from my experience with Python, i disagree; having to yield up the call chain is annoying, but *way* better than callbacks or a direct state machine","msgtype":"m.text"},"ts":1309562940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"can y'all give it a quick sanity check?","msgtype":"m.text"},"ts":1309562941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(in particular if anyone can reorder the stylesheet at the top of 15.2.5 Phrasing content to make more sense, let me know)","msgtype":"m.text"},"ts":1309562942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i couldn't come up with a good organisation for it)","msgtype":"m.text"},"ts":1309562943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"callbacks and coroutines are nearly the same if you do callbacks with closures and the closure syntax is so thin that you could just as well continue the method...","msgtype":"m.text"},"ts":1309563000000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Hixie: wait, 'expected' is a MUST-level requirement?","msgtype":"m.text"},"ts":1309563060000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i never realized that (i think i always have skipped to the individual entries and skipped the intro text)","msgtype":"m.text"},"ts":1309563120000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: it's a kind-of-must-requirement for certain classes of UAs","msgtype":"m.text"},"ts":1309563121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iow: if you want to slap a \"standards-compliant\" label on your UA?","msgtype":"m.text"},"ts":1309563240000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"the: it's a significant difference in readability; being able to write algorithms linearly is, IMO, one of the major advantages of doing stuff in workers instead of with callbacks","msgtype":"m.text"},"ts":1309563241000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The_8472: you don't have to implement the rendering rules in general","msgtype":"m.text"},"ts":1309563300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: you do if you want to be a mainstream browser (\"user agent designated as supporting the suggested default rendering\")","msgtype":"m.text"},"ts":1309563301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's very weasel-y language","msgtype":"m.text"},"ts":1309563360000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"suggestions welcome on making it clearer","msgtype":"m.text"},"ts":1309563361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what's the opposite of \"replaced element\"?","msgtype":"m.text"},"ts":1309563362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(of course, on the same token I'd rather be able to offload more things into workers than worry about new ways to do complex tasks in the UI thread)","msgtype":"m.text"},"ts":1309563363000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: (in css)","msgtype":"m.text"},"ts":1309563364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"non-replaced element.","msgtype":"m.text"},"ts":1309563365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1309563366000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was hoping for something more puthy","msgtype":"m.text"},"ts":1309563367000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pithy","msgtype":"m.text"},"ts":1309563368000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We rarely have to talk about that.","msgtype":"m.text"},"ts":1309563369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Usually it's just general rules for all elements, and then exceptions for replaced.","msgtype":"m.text"},"ts":1309563420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i have a section on replaced elements, following a section on everything else","msgtype":"m.text"},"ts":1309563421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looking for a heading for that first section","msgtype":"m.text"},"ts":1309563422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt, problem with workers is that none of the core components (DOM/layout/javascript) have been designed with multithreading in mind. that's why the webworker api is so useless","msgtype":"m.text"},"ts":1309563423000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Hixie: Got some suggestion on how to fix 15.2.5 to be more readable.  How you want the feedback?","msgtype":"m.text"},"ts":1309563424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: whatever works for you","msgtype":"m.text"},"ts":1309563480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the: they've been designed with multithreading explicitly not in mind, which isn't quite the same thing","msgtype":"m.text"},"ts":1309563481000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'll email, then.","msgtype":"m.text"},"ts":1309563482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k, send it straight to ian⊙hc","msgtype":"m.text"},"ts":1309563483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not quite the right way of putting it, but I think you know what I mean)","msgtype":"m.text"},"ts":1309563484000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: eta? (just trying to work out if i should check it in now and handle the feedback async, or if i should check google+ then handle your feedback :-) )","msgtype":"m.text"},"ts":1309563540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah. the point was is that those design decisions (intentional or not) are what has lead to the web workers being so restricted","msgtype":"m.text"},"ts":1309563541000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Hixie: 5 min or less","msgtype":"m.text"},"ts":1309563542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1309563543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the: yeah; some of those will hopefully eventually be relaxed, some will probably never be (eg. multithreaded access to the same DOM tree)","msgtype":"m.text"},"ts":1309563600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"snapshotting","msgtype":"m.text"},"ts":1309563720000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"snapshot the dom tree, work on a read-only copy","msgtype":"m.text"},"ts":1309563721000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"could be \"good enough\" for some things","msgtype":"m.text"},"ts":1309563722000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Hixie: Sent.  Just some slight reordering, and some redundancy added to make things group better.","msgtype":"m.text"},"ts":1309563780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe, sounds complex, though","msgtype":"m.text"},"ts":1309563781000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"e.g. to collect all the data you need to generate a fragment, read the layout properties without risking layout reflows and then attach the generated fragment to the live dom","msgtype":"m.text"},"ts":1309563782000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"(how do you snapshot a WebGL context?)","msgtype":"m.text"},"ts":1309563783000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"texture","msgtype":"m.text"},"ts":1309563784000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"you'd need a \"get me the live equivalent of this dom node\" call of course","msgtype":"m.text"},"ts":1309563840000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1309563841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"STM DOM? :)","msgtype":"m.text"},"ts":1309563842000,"senderName":"nlogax","senderId":"nlogax@irc"},
{"content":{"body":"TabAtkins: you think redundancy is ok? i've been avoiding it like the plague in this section for some reason","msgtype":"m.text"},"ts":1309563900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1309563901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1309563902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I always feel icky when I remove redundancy from my stylesheet just for the sake of removing redundancy.","msgtype":"m.text"},"ts":1309563903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Selectors should communicate useful information, especially when grouped together.","msgtype":"m.text"},"ts":1309563904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(by redundancy i meant multiple rules applying the same property with the same value to the same element; is that what you meant?)","msgtype":"m.text"},"ts":1309563960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i don't see any)","msgtype":"m.text"},"ts":1309563961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think you meant multiple rules giving the same property/value pair","msgtype":"m.text"},"ts":1309564020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which seems ok","msgtype":"m.text"},"ts":1309564021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, I meant splitting up a selector into multiple decl blocks.","msgtype":"m.text"},"ts":1309564022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1309564023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"looks good","msgtype":"m.text"},"ts":1309564024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"regenning","msgtype":"m.text"},"ts":1309564080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"uses sass at work. the generated CSS can grow to humungous proportions if you don't pay attention... but it makes things so much easier","msgtype":"m.emote"},"ts":1309564081000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"tweak a few variables and the whole color scheme changes. gradients, text, borders... everything","msgtype":"m.text"},"ts":1309564140000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"can only be a decade until we have that in browsers too :(","msgtype":"m.text"},"ts":1309564200000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"I'm working on it.","msgtype":"m.text"},"ts":1309564201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]