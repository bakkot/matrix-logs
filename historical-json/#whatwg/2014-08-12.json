[
{"content":{"body":"Every type has at least two monoids.","msgtype":"m.text"},"ts":1407801624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyway, in provers you can usuallly just make the operator a parameter to the \"typeclass\"","msgtype":"m.text"},"ts":1407801627000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"a monoid sounds like something you go to the doctor to have removed","msgtype":"m.text"},"ts":1407801650000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"because dependant typing rocks like that","msgtype":"m.text"},"ts":1407801656000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Haskell just gives every object one monoid, and makes you use newtype (iirc?) to cast it into a new one.","msgtype":"m.text"},"ts":1407801670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah","msgtype":"m.text"},"ts":1407801677000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so it's not really a good idea to define one for Int or Integer","msgtype":"m.text"},"ts":1407801696000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I get confused calling the same thing a “frame”, ”window”, and “viewport”. Is there one name for that thing when I’m referring to it in CSS? Is it the viewport?","msgtype":"m.text"},"ts":1407801708000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Okay, okay, got my terms together again.  Any object that can be combined with other objects of the same type to produce a third object of the same type, is a magma.","msgtype":"m.text"},"ts":1407801710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If the combining option is associative, it's a semigroup. If there's an identity element, monoid. Inverses, group. Commutative, abelian group.","msgtype":"m.text"},"ts":1407801740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: viewport sounds like the thing you want?","msgtype":"m.text"},"ts":1407801744000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"JonathanNeal: In CSS, \"viewport\".","msgtype":"m.text"},"ts":1407801750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: But be careful when talking about SVG, who uses the term to mean something else. :/","msgtype":"m.text"},"ts":1407801761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: In SVG, does viewport mean something different than viewbox?","msgtype":"m.text"},"ts":1407801801000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: is that a representation of *potential* viewport in SVG, then?","msgtype":"m.text"},"ts":1407801807000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Nah, that's what it means.","msgtype":"m.text"},"ts":1407801810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And in the scenario <div id=“viewport\" style=“overflow:scroll”><div id=“something-that-triggers-overflow”> would id=“viewport” also be considered a viewport?","msgtype":"m.text"},"ts":1407801819000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"SamB: No, SVG just uses \"viewport\" to mean \"the coordinate space generated by an <svg>, or similar element that establishes its own coords\".","msgtype":"m.text"},"ts":1407801835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh.","msgtype":"m.text"},"ts":1407801843000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so they don't actually consider the edges?","msgtype":"m.text"},"ts":1407801848000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"JonathanNeal: It's unclear how to port those SVG terms to other CSS layout modes, and I don't really want to. ^_^","msgtype":"m.text"},"ts":1407801857000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: What do you mean?","msgtype":"m.text"},"ts":1407801866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"using viewport to refer to a coordinate space sounds very confused :-(","msgtype":"m.text"},"ts":1407801887000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, I guess sodipodi:namedview is not really standard ;-)","msgtype":"m.text"},"ts":1407802453000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"http://wtf.spec.whatwg.org","msgtype":"m.text"},"ts":1407802538000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can't tell in javascript if an HTTPS resource is weak/deprecated right?","msgtype":"m.text"},"ts":1407830570000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wonders if there are bugs with mixed content and document.domain","msgtype":"m.emote"},"ts":1407830995000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I don't think that's exposed","msgtype":"m.text"},"ts":1407831587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1407831607000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I was wondering if there was a difference between certificates for public content and intranet content. As in, can we make CORS-less work over HTTPS? Although I guess if you set up HTTPS, adding one more header is easy...","msgtype":"m.text"},"ts":1407831977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's the point of \"A descendant browsing context's document has a non-empty fullscreen element stack\" and why is it not in the fullscreen element ready check?","msgtype":"m.text"},"ts":1407832343000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"AFAICT, it's not possible for a descendant to a non-empty stack without an iframe in the current document being on the current stack, so...","msgtype":"m.text"},"ts":1407832387000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"+have","msgtype":"m.text"},"ts":1407832443000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I guess it catches the case where <iframe> has a child","msgtype":"m.text"},"ts":1407833371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I didn't want to make it part of ready check as to minimize cross-process activity, but I could give up on that","msgtype":"m.text"},"ts":1407833421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish Aryeh Gregor was still around to fix bugs in ranges","msgtype":"m.text"},"ts":1407833596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm never quite sure what I'm doing when changing that section","msgtype":"m.text"},"ts":1407833609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how about just checking if there's an ancestor <iframe> and saying no? that wouldn't require any cross-process tinkering","msgtype":"m.text"},"ts":1407834782000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and having the child of an iframe go fullscreen doesn't seem useful anyway","msgtype":"m.text"},"ts":1407834801000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: only <iframe> can pass fullscreen capabilities through right?","msgtype":"m.text"},"ts":1407834838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1407834858000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1407834862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although if that weren't the case one could say \"element which is a browsing context container\" or some such","msgtype":"m.text"},"ts":1407835051000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: should I file a bug or do you have a plan?","msgtype":"m.text"},"ts":1407835716000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: fixing now","msgtype":"m.text"},"ts":1407835797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk is teh awesome!","msgtype":"m.text"},"ts":1407835813000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: \"The context object\" should be <i>element</i> since we're not in requestFullscreen() anymore","msgtype":"m.text"},"ts":1407837162000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"shit","msgtype":"m.text"},"ts":1407837169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"copied that from the previous bullet point which is also wrong","msgtype":"m.text"},"ts":1407837208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh look, I didn't notice that","msgtype":"m.text"},"ts":1407837222000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"fixed both","msgtype":"m.text"},"ts":1407837308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"confirmed","msgtype":"m.text"},"ts":1407837320000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"would you mind making \"Fullscreen is not supported.\" a per-element thing?","msgtype":"m.text"},"ts":1407837345000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"currently Blink has a setting where only <video> elements can go fullscreen in Android WebView","msgtype":"m.text"},"ts":1407837361000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if you feel like it, it's supposedly temporary...","msgtype":"m.text"},"ts":1407837461000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hmm, discuss on WHATWG if we want to keep that?","msgtype":"m.text"},"ts":1407837554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if that actually remains the case we might want some API to figure out for which elements you can actually use it","msgtype":"m.text"},"ts":1407837572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1407837647000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if it remains the case for long I'll come back to it","msgtype":"m.text"},"ts":1407837668000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"now lunch","msgtype":"m.text"},"ts":1407837670000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"JakeA: can we get a \"needs input\" label for issues?","msgtype":"m.text"},"ts":1407850197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: something that indicates it needs input from others before we can proceed?","msgtype":"m.text"},"ts":1407850222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: added","msgtype":"m.text"},"ts":1407850379000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1407850449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wrote http://annevankesteren.nl/2014/08/asynchronicity so we have a pointer when people are not queuing tasks or some such","msgtype":"m.text"},"ts":1407854883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Suggestions welcome","msgtype":"m.text"},"ts":1407854888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: is there a way to clone/edit that huge graph you posted?","msgtype":"m.text"},"ts":1407855220000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"annevk: related are the two sections starting at https://github.com/w3ctag/promises-guide#note-asynchronous-steps-explicitly","msgtype":"m.text"},"ts":1407855319000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie_: putting the pipeline in the right order should help","msgtype":"m.text"},"ts":1407855341000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"annevk: your post approaches it from a different angle though which is probably more useful as a conceptual intro","msgtype":"m.text"},"ts":1407855376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: e.g. talking about things in parallel and how that could impact code","msgtype":"m.text"},"ts":1407855390000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I can add a pointer for more detailed instructions","msgtype":"m.text"},"ts":1407855440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1407855552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I'll add a pointer to yours for more conceptual background :)","msgtype":"m.text"},"ts":1407855556000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://twitter.com/W3CProphet/status/499213295023190017 I wonder what I'm missing","msgtype":"m.text"},"ts":1407859290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1407859417000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie_: http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting.html#selectors \"Everything else (attribute values on HTML elements, IDs and classes in no-quirks mode and limited-quirks mode, and element names, attribute names, and attribute values in XML documents)\" I don’t understand this. There are two \"and\", and it seems to leave attribute values on non-HTML elements in HTML documents","msgtype":"m.text"},"ts":1407861383000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"undefined","msgtype":"m.text"},"ts":1407861385000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Which set of multiple \"and\"s is confusing you?","msgtype":"m.text"},"ts":1407861746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in the parentheses I quoted","msgtype":"m.text"},"ts":1407861774000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: There are four \"and\"s there. ^_^","msgtype":"m.text"},"ts":1407861786000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"uh, maybe there is implied grouping, but it’s not clear what that should be","msgtype":"m.text"},"ts":1407861808000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(attribute values on html elements), (ids and classes) in (no-quirks mode and limited-quirks mode), and (element names, attribute names, and attribute values in XML documents).","msgtype":"m.text"},"ts":1407861860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"((element names, attribute names, and attribute values) in XML documents) or (element names, attribute names, and (attribute values in XML documents)) ?","msgtype":"m.text"},"ts":1407861952000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Former","msgtype":"m.text"},"ts":1407861969000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Definitely former.","msgtype":"m.text"},"ts":1407861997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, so attr values on non-HTML elements in HTML documents is not in \"everything else\"","msgtype":"m.text"},"ts":1407862082000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm not sure if the parenthetical is supposed to be exhaustive","msgtype":"m.text"},"ts":1407862137000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1407862162000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"in that case it sounds better to remove it entirely","msgtype":"m.text"},"ts":1407862192000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1407862374000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"File a bug?","msgtype":"m.text"},"ts":1407862376000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=26560","msgtype":"m.text"},"ts":1407862919000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yay bugzilla line breaking","msgtype":"m.text"},"ts":1407862925000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"didn't they have a gsoc project for making bugzilla support markdown? maybe the kids will improve the linewrapping, too :p","msgtype":"m.text"},"ts":1407863163000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"SimonSapin: generally speaking, parentheticals in prose i write aren't normative","msgtype":"m.text"},"ts":1407863284000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SimonSapin: or rather, they're intended to be redundant with other text","msgtype":"m.text"},"ts":1407863293000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SimonSapin: so in this case, since attributes in non-XML elements are already covered by the earlier paragraph, they're not \"everything else\"","msgtype":"m.text"},"ts":1407863319000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: the earlier paragraph is about attr names, not values","msgtype":"m.text"},"ts":1407863398000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"attribute values on HTML elements\" is the first thing listed","msgtype":"m.text"},"ts":1407863421000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"in the parenthetical","msgtype":"m.text"},"ts":1407863426000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: looks like i can share it with you?","msgtype":"m.text"},"ts":1407866404000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"By the way, I reverted these edits: http://wiki.whatwg.org/wiki/Special:Contributions/Ramanjeet.taneja","msgtype":"m.text"},"ts":1407868562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They pointed to a URL that was not really working","msgtype":"m.text"},"ts":1407868577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have not yet begun to lurk","msgtype":"m.text"},"ts":1407872000000,"senderName":"kriskowal","senderId":"kriskowal@irc"},
{"content":{"body":"kriskowal: By definition, you just *stopped* lurking.","msgtype":"m.text"},"ts":1407872338000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"does it count as lurking if it's only for 5 minutes?","msgtype":"m.text"},"ts":1407872387000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie_: yeah, second thoughts -- might be counterproductive since it's for your understanding.","msgtype":"m.text"},"ts":1407874168000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: well you're welcome to a copy you can do whatever you want with :-)","msgtype":"m.text"},"ts":1407874452000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: any idea what CreateLinkedModuleInstance() is supposed to be?","msgtype":"m.text"},"ts":1407875311000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"mentioned in Reflect.Loader.prototype.newModule","msgtype":"m.text"},"ts":1407875315000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but doesn't appear to be defined anywhere","msgtype":"m.text"},"ts":1407875319000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: not totally sure, because this is another area where allenwb changed some stuff without telling anybody","msgtype":"m.text"},"ts":1407875802000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1407875810000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: but I think what it's supposed to do is create a Module object that doesn't need to be linked with anything","msgtype":"m.text"},"ts":1407875830000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"the point of this loader.newModule() method is to support creating a Module object based on just provided keys and values","msgtype":"m.text"},"ts":1407875939000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it's interesting that there doesn't seem to be a way to create a Module object directly","msgtype":"m.text"},"ts":1407875958000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"unless i'm missing something","msgtype":"m.text"},"ts":1407875964000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like, new Module()","msgtype":"m.text"},"ts":1407875967000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: the original proposal offered exactly that and allenwb editorially changed it to loader.newModule","msgtype":"m.text"},"ts":1407875986000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"also, am i missing something or are Modules really very ES-specific? Like, there doesn't seem to be a way for the loader's [[Modules]] to map a name to something that isn't a JS module","msgtype":"m.text"},"ts":1407876008000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like, an image, or a <link> element, or whatever","msgtype":"m.text"},"ts":1407876013000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: that's correct, and people have complained about it, and the rationale for that is not good imho","msgtype":"m.text"},"ts":1407876049000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"the rationale is, (1) it does true linking so if one module does     export var x = 0;    export function f() { x++; }      then other modules that import x will observe its value changing","msgtype":"m.text"},"ts":1407876096000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Reading an imported variable is a read from the actual variable (declared in the other module).","msgtype":"m.text"},"ts":1407876120000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"It's fast and you don't make copies of the variables.","msgtype":"m.text"},"ts":1407876128000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sure, seems obvious that we should keep that","msgtype":"m.text"},"ts":1407876172000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"how does that affect the non-module case?","msgtype":"m.text"},"ts":1407876178000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh. well, that's a rationale for having the system \"know about\" module objects and use its privileged knowledge of their guts to do something that user scripts couldn't do","msgtype":"m.text"},"ts":1407876213000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but then why not also allow other random objects, just without the magic behavior, i don't know","msgtype":"m.text"},"ts":1407876227000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"there's one more piece of rationale i can quote (without endorsing) which is","msgtype":"m.text"},"ts":1407876254000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(2) at link time, we throw if you tried to import something and it isn't there","msgtype":"m.text"},"ts":1407876270000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"though, i guess you could *also* do that and still support non-module things in the [[Modules]] cache","msgtype":"m.text"},"ts":1407876295000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1407876300000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but it's certainly nicer with just Modules because the set of names they expose is immutable","msgtype":"m.text"},"ts":1407876309000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i'm thinking that e.g. style sheets would have a default export that is their <link> element or their StyleSheet object","msgtype":"m.text"},"ts":1407876316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i dunno. \"nicer\" :-P","msgtype":"m.text"},"ts":1407876321000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"and nothing else","msgtype":"m.text"},"ts":1407876323000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Their CSSStyleSheet object, please.","msgtype":"m.text"},"ts":1407876342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and images would have just their default export, an <img> element","msgtype":"m.text"},"ts":1407876343000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and so on","msgtype":"m.text"},"ts":1407876344000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: probably the <link> element in practice","msgtype":"m.text"},"ts":1407876352000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Modules also aren't exposed until after they're loaded and linked","msgtype":"m.text"},"ts":1407876391000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: If you're importing from a url that's a stylesheet, we're developing a stylesheet constructor, so there's no need for a <link>.","msgtype":"m.text"},"ts":1407876397000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jorendorff: they can be (e.g. in the case of circular dependencies)","msgtype":"m.text"},"ts":1407876406000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: i'm actually expecting that we would make <script type=module> just expose the Module off the HTMLScriptElement object","msgtype":"m.text"},"ts":1407876423000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: even in the case of circular dependencies","msgtype":"m.text"},"ts":1407876432000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: they are linked before evaluation starts","msgtype":"m.text"},"ts":1407876437000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: ah","msgtype":"m.text"},"ts":1407876448000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: how does the ordering work?","msgtype":"m.text"},"ts":1407876452000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"circular dependencies is the only case where a Module is exposed before all its dependencies are evaluated","msgtype":"m.text"},"ts":1407876459000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"so in \"normal\" cases you can even count on that","msgtype":"m.text"},"ts":1407876469000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie_: You'll be able to add a Stylesheet to the document's list of stylesheets.","msgtype":"m.text"},"ts":1407876470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: but my point was, people are going to want to know the load status of stuff, right? or are they? will that be exposed?","msgtype":"m.text"},"ts":1407876489000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"at least it seems like they can do it now","msgtype":"m.text"},"ts":1407876499000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"TabAtkins: will you be able to make two <link> elements that have one order in the DOM have a different order in the style sheets list?","msgtype":"m.text"},"ts":1407876499000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: yes, that's one reason i assumed we'd expose the Modules pre-linking","msgtype":"m.text"},"ts":1407876520000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Possibly, but unsure. It might be that document-created objects have a set order, dunno.","msgtype":"m.text"},"ts":1407876520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i beg of you, please make sure there's only one order, even if both can be mutated somehow :-)","msgtype":"m.text"},"ts":1407876553000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Well, we won't have it rearrange the DOM.","msgtype":"m.text"},"ts":1407876573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But, like, FontFaceSet always puts the CSS-created FontFaces first in matching order.","msgtype":"m.text"},"ts":1407876587000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: yeah. we didn't expose any of that. possibly a mistake on our part, but we didn't see prior art for that either. for code, it's maybe not common to want that","msgtype":"m.text"},"ts":1407876590000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"TabAtkins: yeah, not rearranging the dom seems wise (Especially given scoped style sheets deep in the DOM, etc)","msgtype":"m.text"},"ts":1407876627000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hmmmmm","msgtype":"m.text"},"ts":1407877218000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess \"locate\" doesn't have to return a URL, huh","msgtype":"m.text"},"ts":1407877225000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it could just return the Element","msgtype":"m.text"},"ts":1407877228000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nothing checks that [[Address]] is a string","msgtype":"m.text"},"ts":1407877241000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: is the output of \"normalize\" exposed anywhere?","msgtype":"m.text"},"ts":1407877594000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. can you walk the [[Modules]] list?","msgtype":"m.text"},"ts":1407877603000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah, Reflect.Loader.prototype has methods {keys,values,entries} for walking and {get,has,set,delete}. Very Map-like.","msgtype":"m.text"},"ts":1407877641000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"and i guess the Name is exposed in the LoadObjects","msgtype":"m.text"},"ts":1407877649000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"damnit","msgtype":"m.text"},"ts":1407877659000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Loads aren't exposed ... are they?","msgtype":"m.text"},"ts":1407877664000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"in the hooks","msgtype":"m.text"},"ts":1407877669000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1407877672000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1407877674000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i can't work out how to make normalize work","msgtype":"m.text"},"ts":1407877676000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well ... i'm not sure how to make it work either. url syntax is pretty complete, it's not sensible to add to it","msgtype":"m.text"},"ts":1407877744000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":" but it's also really annoying to use urls as module names","msgtype":"m.text"},"ts":1407877749000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"we need to support: import \"packagefoo.subbar.baz\"; import \"http://example.com/foo.js\"; import \"anIDinTheDocument\";","msgtype":"m.text"},"ts":1407877763000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(where the first one is some magical way of specifying a module that I don't yet understand)","msgtype":"m.text"},"ts":1407877779000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(the thing you were alluding to yesterday)","msgtype":"m.text"},"ts":1407877785000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the last one would be:   import \"#anIDinTheDocument\" surely?","msgtype":"m.text"},"ts":1407877823000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1407877872000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, it seems like it unifies the last two things","msgtype":"m.text"},"ts":1407877885000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"then people would think  import \"foo.html#anID\" would work","msgtype":"m.text"},"ts":1407877893000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess they would","msgtype":"m.text"},"ts":1407877899000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"we went down that route with usemap=\"\"","msgtype":"m.text"},"ts":1407877899000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it led to all kinds of hassles","msgtype":"m.text"},"ts":1407877903000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1407877914000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"also, side question","msgtype":"m.text"},"ts":1407877930000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wtf is a ModuleImport??","msgtype":"m.text"},"ts":1407877934000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but how do you distinguish an id from a relative url?","msgtype":"m.text"},"ts":1407877940000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i've no idea how you distinguish anything here. that's my problem.","msgtype":"m.text"},"ts":1407877953000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1407877963000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(how do you distinguish my.package.name from a url?)","msgtype":"m.text"},"ts":1407877965000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what does   module foo from \"foo.js\";   mean?","msgtype":"m.text"},"ts":1407878029000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: a ModuleImport creates a global binding like any other import, but its value is the Module object","msgtype":"m.text"},"ts":1407878038000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"rather than some exported value","msgtype":"m.text"},"ts":1407878045000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"so \"foo\" is now a variable whose value is the Module object?","msgtype":"m.text"},"ts":1407878058000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"instead of the default export?","msgtype":"m.text"},"ts":1407878062000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yes.","msgtype":"m.text"},"ts":1407878064000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it also creates a dependency edge like any other import.","msgtype":"m.text"},"ts":1407878066000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"ok, so, first of all, that's wildly confusing syntax for that. but ok.","msgtype":"m.text"},"ts":1407878081000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the default export (if any) is then foo.default","msgtype":"m.text"},"ts":1407878085000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"what's the use case?","msgtype":"m.text"},"ts":1407878085000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i dunno, why does python have both `import os` and `from os import system`?","msgtype":"m.text"},"ts":1407878108000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"haskell also has qualified and unqualified imports","msgtype":"m.text"},"ts":1407878119000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1407878133000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1407878135000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"seems very weird to have this be called \"module\"","msgtype":"m.text"},"ts":1407878147000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"doesn't sound like an import at all","msgtype":"m.text"},"ts":1407878151000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i agree","msgtype":"m.text"},"ts":1407878151000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sounds more like \"hey, this is a module!\"","msgtype":"m.text"},"ts":1407878160000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which i wish we had, but that's another story","msgtype":"m.text"},"ts":1407878167000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"mmhmm","msgtype":"m.text"},"ts":1407878174000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"<script type=module id=a> ... </script> <script type=module> import a; </script>","msgtype":"m.text"},"ts":1407878219000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: there's a certain logic to this but having both this and default exports makes me cringe","msgtype":"m.text"},"ts":1407878224000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"er, import \"a\"","msgtype":"m.text"},"ts":1407878227000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(where this = ModuleImport syntax)","msgtype":"m.text"},"ts":1407878245000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i guess in that example, \"locate\" should return the actual HTMLScriptElement.","msgtype":"m.text"},"ts":1407878261000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's not a string, but nothing seems to check that in practice so we're ok","msgtype":"m.text"},"ts":1407878276000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"right, the not checking in practice is deliberate","msgtype":"m.text"},"ts":1407878288000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"but what should \"normalize\" return? it can't return a URL...","msgtype":"m.text"},"ts":1407878289000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's the same problem as before","msgtype":"m.text"},"ts":1407878318000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1407878324000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"calling it module is indeed insane","msgtype":"m.text"},"ts":1407878386000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"do the people who disagree with us ever hang out on irc?","msgtype":"m.text"},"ts":1407878410000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"painting yourselves into a corner, you are","msgtype":"m.text"},"ts":1407878417000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it'd be good to get their perspective :-)","msgtype":"m.text"},"ts":1407878418000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"samth hangs out in moznet #jslang. dherman is occasionally on irc","msgtype":"m.text"},"ts":1407878449000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"samth is in either Central or Eastern time","msgtype":"m.text"},"ts":1407878471000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i dislike the syntax, I feel like any one human being could design better syntax from scratch","msgtype":"m.text"},"ts":1407878552000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"strong words","msgtype":"m.text"},"ts":1407878558000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"working incrementally i don't know how to improve it, except by deleting features.","msgtype":"m.text"},"ts":1407878574000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"other than using \"module\" it's mostly fine imho","msgtype":"m.text"},"ts":1407878577000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh JS as a whole?","msgtype":"m.text"},"ts":1407878582000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"JS as a whole is a different matter :-)","msgtype":"m.text"},"ts":1407878588000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the import syntax in particular.","msgtype":"m.text"},"ts":1407878589000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"too late for that though","msgtype":"m.text"},"ts":1407878591000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"quite.","msgtype":"m.text"},"ts":1407878594000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"that's our motto \"too late for that though\"","msgtype":"m.text"},"ts":1407878610000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"you really need to burn it with FIRE","msgtype":"m.text"},"ts":1407878639000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you could do  import \"foo\"; import \"foo\" as foo; import module \"foo\" as foo; import \"foo\" { explicit as foo, exports as bar };","msgtype":"m.text"},"ts":1407878686000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(that's all the features, right?)","msgtype":"m.text"},"ts":1407878704000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which features?","msgtype":"m.text"},"ts":1407878712000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"of es6 imports","msgtype":"m.text"},"ts":1407878717000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SamB: https://www.youtube.com/watch?v=aCbfMkh940Q","msgtype":"m.text"},"ts":1407878732000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"thought you might have meant of Python or Haskell imports","msgtype":"m.text"},"ts":1407878752000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"personally i think \"import foo;\" is enough, no need to change the name, no need to control what is imported, no need to expose the Module","msgtype":"m.text"},"ts":1407878805000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what's the difference between 'import \"foo\";' and 'import module \"foo\";'","msgtype":"m.text"},"ts":1407878808000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but i'm old fashioned ;-)","msgtype":"m.text"},"ts":1407878810000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"SamB: the same as today's import \"foo\"; vs module foo from \"foo\";","msgtype":"m.text"},"ts":1407878831000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that syntax is worse than Python's","msgtype":"m.text"},"ts":1407878853000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"mine or the current one?","msgtype":"m.text"},"ts":1407878861000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and Python's was grown","msgtype":"m.text"},"ts":1407878863000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the \"module\" one","msgtype":"m.text"},"ts":1407878867000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well python doesn't have that feature","msgtype":"m.text"},"ts":1407878881000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"as far as i know","msgtype":"m.text"},"ts":1407878884000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Python doesn't have a distinction","msgtype":"m.text"},"ts":1407878900000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"python does have that feature;  `import os` binds the os module object to os","msgtype":"m.text"},"ts":1407878902000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"what python doesn't have is \"default exports\"","msgtype":"m.text"},"ts":1407878907000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1407878911000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1407878912000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: isn't that what __all__ is?","msgtype":"m.text"},"ts":1407878922000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"__all__ only affects `from os import *`","msgtype":"m.text"},"ts":1407878932000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1407878936000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"keep asking questions i know the answers to, makes me feel helpful","msgtype":"m.text"},"ts":1407878950000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1407878963000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"then you have Haskell, where there are no exports but the default exports","msgtype":"m.text"},"ts":1407878983000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(but some things may not be exported *at all*)","msgtype":"m.text"},"ts":1407879013000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but one important commonality between the two languages: all the forms contain the \"import\" keyword!","msgtype":"m.text"},"ts":1407879081000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and, as you know, Haskell uses \"module\" to introduce the export list","msgtype":"m.text"},"ts":1407879135000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Haskell's module system seems about on par with the ES6 module system in terms of syntactic beauty","msgtype":"m.text"},"ts":1407879186000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Haskell doesn't have Module objects","msgtype":"m.text"},"ts":1407879205000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"though it does have `import qualified` in case you just enjoy using dot syntax","msgtype":"m.text"},"ts":1407879232000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: it's for avoiding clashes","msgtype":"m.text"},"ts":1407879265000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, there are a ton of modules that export super common Prelude names","msgtype":"m.text"},"ts":1407879285000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: do you know what the wildcard is supposed to do? https://github.com/ModuleLoader/es6-module-loader/blob/master/lib/system.js#L168","msgtype":"m.text"},"ts":1407879360000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so you'll typically \"import qualified Data.Map as M\" or something, iirc the syntax correctly","msgtype":"m.text"},"ts":1407879390000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie_: yeah, what this code is trying to do is let you say","msgtype":"m.text"},"ts":1407879401000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"loader.paths = { 'jquery': 'url/to/jquery', 'numerics/*': 'url/to/huge/numerical/package/*'}","msgtype":"m.text"},"ts":1407879451000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: Haskell at least knows that a construct beginning with \"module\" should declare a module","msgtype":"m.text"},"ts":1407879460000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie_: ^ and then","msgtype":"m.text"},"ts":1407879464000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1407879481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so numerics/foo becomes url/to/huge/numerical/package/foo","msgtype":"m.text"},"ts":1407879489000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1407879492000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"somehow i missed that this was applying to the paths and not to the input to the locate hook","msgtype":"m.text"},"ts":1407879509000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why is that in locate and not normalize?","msgtype":"m.text"},"ts":1407879538000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"maybe import foo from \"#foo\"; is the way to go after all","msgtype":"m.text"},"ts":1407879589000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't see any other solution","msgtype":"m.text"},"ts":1407879597000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the question being answered is \"where can i download this module?\" and .paths contains those answers","msgtype":"m.text"},"ts":1407879621000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sure but this means that if someone does import \"jquery\" and someone else does import \"url/to/jquery\" they'll end up with two modules","msgtype":"m.text"},"ts":1407879653000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why would you want that?","msgtype":"m.text"},"ts":1407879669000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: they'd probably use different mirrors anyway","msgtype":"m.text"},"ts":1407879670000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or different versions","msgtype":"m.text"},"ts":1407879675000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1407879677000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"these are the same final url","msgtype":"m.text"},"ts":1407879687000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's right, everyone should do |import \"jquery\"| because it's a bad idea to hardcode URLs in code that's going to be shared","msgtype":"m.text"},"ts":1407879724000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"so ... remind me why jquery doesn't start with 'module \"jquery\"'","msgtype":"m.text"},"ts":1407879774000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: because you need the name long before you've obtained the resource","msgtype":"m.text"},"ts":1407879832000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, sure","msgtype":"m.text"},"ts":1407879842000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: indeed you need the name before you know what resource to obtain","msgtype":"m.text"},"ts":1407879843000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ES6 modules don't know their names, it's a little weird","msgtype":"m.text"},"ts":1407879849000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"that doesn't stop ELF modules from having sonames, does it?","msgtype":"m.text"},"ts":1407879872000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the web is an extremely late-binding environment with extreme latency involved in finding resources","msgtype":"m.text"},"ts":1407879879000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"in this respect it's unlike most other systems","msgtype":"m.text"},"ts":1407879888000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"are .sonames enforced? if you try to link against something and the system can find that file, but the .soname doesn't match, is it an error?","msgtype":"m.text"},"ts":1407879926000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"it wouldn't be useful for anything except \"WTF, you imported this module by the wrong name!\"","msgtype":"m.text"},"ts":1407879926000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well it'd be useful for making it clear to people looking at a JS module that they're looking at a module","msgtype":"m.text"},"ts":1407879950000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i don't think the name buys you much of anything","msgtype":"m.text"},"ts":1407879955000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: well, the *linker* would get confused at least","msgtype":"m.text"},"ts":1407879984000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"having module foo { } would let us entirely get rid of type=module which alone would be a huge win imho","msgtype":"m.text"},"ts":1407880008000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jorendorff: it could help everyone agree on WHAT name to import it by","msgtype":"m.text"},"ts":1407880012000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but the es team seems unsold by this idea","msgtype":"m.text"},"ts":1407880017000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: actually i think that is going to happen in es7","msgtype":"m.text"},"ts":1407880055000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"hmm, perhaps comparing to elisp libraries would be more apt? I don't know.","msgtype":"m.text"},"ts":1407880063000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1407880064000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why are we taking a detour through pain land in the meantime then","msgtype":"m.text"},"ts":1407880074000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i pushed really hard for lexical modules in es6","msgtype":"m.text"},"ts":1407880078000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"to no avail obviously","msgtype":"m.text"},"ts":1407880211000,"senderName":"zenparsing","senderId":"zenparsing@irc"},
{"content":{"body":"why is ECMA even involved","msgtype":"m.text"},"ts":1407880239000,"senderName":"SamB","senderId":"SamB@irc"}
]