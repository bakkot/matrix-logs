[
{"content":{"body":"why some people like js symbols?","msgtype":"m.text"},"ts":1498471570000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"hasn't seen the light why symbols are a good thing","msgtype":"m.emote"},"ts":1498471587000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"When creating an about:blank iframe, then navigating it, the global is preserved from the original about:blank. This is according to the spec, but only Firefox seems to implement this.","msgtype":"m.text"},"ts":1498473051000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Anyone know the history here?","msgtype":"m.text"},"ts":1498473062000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If Firefox is the only browser that does the weird replacement stuff, shouldn't Firefox change?","msgtype":"m.text"},"ts":1498473179000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I thought only webkit based browsers had the weird setup of not reusing global","msgtype":"m.text"},"ts":1498476098000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: how does blink preverse event listeners when doing  var w = window.open(\"sameorigin.html\"); w.addEventListener(\"load\", function() {});","msgtype":"m.text"},"ts":1498476146000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: that is, I believe, the biggest reason for reusing global","msgtype":"m.text"},"ts":1498476194000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"moving listeners to some other object would be super weird","msgtype":"m.text"},"ts":1498476204000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: Yeah, load doesn't seem to fire for window.open in Chrome/Safari/Edge","msgtype":"m.text"},"ts":1498476338000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wait, what?","msgtype":"m.text"},"ts":1498476346000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Unless I've done something really wrong http://output.jsbin.com/rofecit/quiet","msgtype":"m.text"},"ts":1498476360000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you can't use window.open and observe when same origin page has been loaded?","msgtype":"m.text"},"ts":1498476371000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"That appears to be the case","msgtype":"m.text"},"ts":1498476392000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It works with iframes via iframe.onload, which also do the replacement thing (in Firefox only) http://output.jsbin.com/bifelu/","msgtype":"m.text"},"ts":1498476435000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(loaded www.yle.fi and then) var w = window.open(\"http://www.yle.fi\"); w.onload = function() { console.log(\"loaded\"); };","msgtype":"m.text"},"ts":1498476452000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: that certainly prints loaded to console","msgtype":"m.text"},"ts":1498476461000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: you're just doing  window.open();","msgtype":"m.text"},"ts":1498476518000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that is very different case","msgtype":"m.text"},"ts":1498476524000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"falls over","msgtype":"m.emote"},"ts":1498476534000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I thought that would create a same-origin about:blank window that could later be replaced?","msgtype":"m.text"},"ts":1498476557000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"window.open(); doesn't load anything. it just creates initial about:blank","msgtype":"m.text"},"ts":1498476589000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"_creates_, not _loads_","msgtype":"m.text"},"ts":1498476602000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Sure, but then when I navigate it","msgtype":"m.text"},"ts":1498476614000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"anyhow, var w = window.open(\"http://www.yle.fi\"); w.onload = function() { console.log(\"loaded\"); };  shows that blink does dispatch load","msgtype":"m.text"},"ts":1498476676000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"â€¦to a same origin URL I'd expect a load event, but only Firefox gives me that. Or have I stumbled on another different case?","msgtype":"m.text"},"ts":1498476676000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but I don't understand why blink works with my testcase. The event listener is added before anything has been loaded","msgtype":"m.text"},"ts":1498476712000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"if it doesn't reuse the global, it somehow mysteriously moves listeners to another object?","msgtype":"m.text"},"ts":1498476772000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: here's an example that doesn't use an empty url http://output.jsbin.com/bexuzaq/quiet","msgtype":"m.text"},"ts":1498476856000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and I see same stuff printed in chrome and ff","msgtype":"m.text"},"ts":1498477689000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but why does chrome ever print \"load fired\" ?","msgtype":"m.text"},"ts":1498477717000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"hmm yeah, my test is wrong","msgtype":"m.text"},"ts":1498477783000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: what is the model blink has for event listeners?","msgtype":"m.text"},"ts":1498477804000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: I guess it's doing something special for window.open(url), but I'm not sure what","msgtype":"m.text"},"ts":1498477853000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but it seems Safari & Edge do the same","msgtype":"m.text"},"ts":1498477862000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Given the results of http://output.jsbin.com/rofecit/quiet","msgtype":"m.text"},"ts":1498477876000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: since if I do var w = window.open(\"https://www.yle.fi\"); w.document.documentURI; also blink shows the uri is about:blank at that point","msgtype":"m.text"},"ts":1498477904000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"IIRC IE used to have same model as Netscape and then Gecko. (but my memory could be wrong here)","msgtype":"m.text"},"ts":1498477935000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: http://output.jsbin.com/bifelu/quiet is weird. In Firefox .hello is \"world\" in both cases, unless I wait for onload before setting .hello","msgtype":"m.text"},"ts":1498478192000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess it's because the navigate happens before the first navigation completes","msgtype":"m.text"},"ts":1498478251000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: iframes load about:blank, at least in gecko","msgtype":"m.text"},"ts":1498478255000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"looks like also blink loads about:blank there","msgtype":"m.text"},"ts":1498478343000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I mean even without src attribute","msgtype":"m.text"},"ts":1498478352000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"global reuse happens only when initial (not loaded about:blank) is replaced with something else from the same origin","msgtype":"m.text"},"ts":1498478394000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"\"if the nested browsing context's session history contained only one Document when the process the iframe attributes algorithm was invoked, and that was the about:blank Document created when the nested browsing context was created, then any navigation required of the user agent in that algorithm must be completed with replacement enabled.\"","msgtype":"m.text"},"ts":1498479052000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: so, you're saying Blink creates an about:blank iframe, then navigates it to about:blank?","msgtype":"m.text"},"ts":1498479077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So it's the about:blank to about:blank navigation that happens with replacement enabled?","msgtype":"m.text"},"ts":1498479095000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"in gecko initial about:blank -> sameorigin page happens with reuse","msgtype":"m.text"},"ts":1498479125000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not replacement","msgtype":"m.text"},"ts":1498479132000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(or perhaps one could call it replacement too :) )","msgtype":"m.text"},"ts":1498479158000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: but I still mainly wonder how blink deals with event listeners","msgtype":"m.text"},"ts":1498479183000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I think I'll resign myself to never understanding this :D","msgtype":"m.text"},"ts":1498479187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"FWIW, I think Gecko's model is reasonable sane, but I admit that I don't understand blink's model. Perhaps it is sane too.","msgtype":"m.text"},"ts":1498479279000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(document.open after load event is also related and makes this even more complicated. )","msgtype":"m.text"},"ts":1498479305000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I'm not sure there's a sensible solution here, but it sure is difficult to pick the least unexpected :D","msgtype":"m.text"},"ts":1498479469000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I change the src of an iframe, what's the source browsing context? The parent of the iframe or the iframe itself?","msgtype":"m.text"},"ts":1498482606000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/iframe-embed-object.html#otherwise-steps-for-iframe-or-frame-elements doesn't pass the source explicitly","msgtype":"m.text"},"ts":1498482641000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm assuming the source browsing context is the iframe if I do iframe.contentWindow.location.href = \"â€¦\"","msgtype":"m.text"},"ts":1498482768000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hey! Are there known patterns/examples for defining an object and its processing in one spec and then operating on that object (processing it and e.g. adding new proprties to it) from another spec?","msgtype":"m.text"},"ts":1498483582000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"JakeA: its not just gecko that implements reusing the global","msgtype":"m.text"},"ts":1498483793000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, you said navigating it","msgtype":"m.text"},"ts":1498483802000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess I'm in a muddle when it comes to when the reuse happens & when it doesn't. I thought I'd see globals live when creating an iframe, waiting for it to load, then navigating it to somewhere same-origin","msgtype":"m.text"},"ts":1498483865000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: from my testing it depends on when you call .src in blink","msgtype":"m.text"},"ts":1498483882000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"when you set .srv","msgtype":"m.text"},"ts":1498483886000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":".src","msgtype":"m.text"},"ts":1498483888000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"still drinking his coffee...","msgtype":"m.emote"},"ts":1498483893000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: let me find the irc conversation with bz where we talked about it","msgtype":"m.text"},"ts":1498483916000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: this is the case that surprised me in Firefox http://output.jsbin.com/lawumuw/1/quiet","msgtype":"m.text"},"ts":1498483977000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: if I comment out that \"await p\" (as in don't wait for the load event), the global lives on","msgtype":"m.text"},"ts":1498484000000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: see scrollback here: http://logs.glob.uno/?c=mozilla%23content&s=14+Jun+2017&e=14+Jun+2017#c447305","msgtype":"m.text"},"ts":1498484130000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: in chrome, if you do this:","msgtype":"m.text"},"ts":1498484149000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"var f = document.createElement('iframe'); document.body.appendChild(f); f.contentWindow.foo = 'foo'; f.src = '?foo';","msgtype":"m.text"},"ts":1498484150000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"then: f.contentWindow.foo","msgtype":"m.text"},"ts":1498484156000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"you get undefined","msgtype":"m.text"},"ts":1498484159000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but if you do this:","msgtype":"m.text"},"ts":1498484162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"var f = document.createElement('iframe'); f.src = '?foo'; document.body.appendChild(f); f.contentWindow.foo = 'foo';","msgtype":"m.text"},"ts":1498484169000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"then f.contentWindow.foo is \"foo\"","msgtype":"m.text"},"ts":1498484175000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: chrome has different behavior if you set .src before or after appending to the document","msgtype":"m.text"},"ts":1498484191000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1498484241000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: http://logs.glob.uno/?c=mozilla%23content&s=14+Jun+2017&e=14+Jun+2017#c447284 - this is exactly what I just ran into","msgtype":"m.text"},"ts":1498484255000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  my key take away from that irc log: http://logs.glob.uno/?c=mozilla%23content&s=14+Jun+2017&e=14+Jun+2017#c447305","msgtype":"m.text"},"ts":1498484303000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Makes sense","msgtype":"m.text"},"ts":1498484324000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and thats why I tried to focus on in that about:blank test I wrote","msgtype":"m.text"},"ts":1498484339000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"In a weird web way","msgtype":"m.text"},"ts":1498484340000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I mean... it explains why we all have some kind of functionality here... thats the use case sites actually use","msgtype":"m.text"},"ts":1498484361000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1498484429000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: at least in gecko I think we have a flag set on the about:blank that says its \"initial\"... and when the load event fires we set that flag false","msgtype":"m.text"},"ts":1498484486000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and we only re-use the global if the initial flag is set","msgtype":"m.text"},"ts":1498484495000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, that matches what I'm seeing in those jsbins","msgtype":"m.text"},"ts":1498484532000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for example, I believe window.open() with no args should give you an initial about:blank that would be reused... but we have a known conflict with the spec where we mark it non-initial and don't reuse","msgtype":"m.text"},"ts":1498484537000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think there is some desire to fix this, but not sure this corner case has attracted much attention in the past","msgtype":"m.text"},"ts":1498484572000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Ahh yes, that explains what I'm seeing in my other jsbin. But yeah, I don't think developers are hitting against this. I was just trying to see if browsers worked how I thought.","msgtype":"m.text"},"ts":1498484690000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The answer was \"no\". The answer is always \"no\".]","msgtype":"m.text"},"ts":1498484700000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1498484702000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: stuff like Clients API increases our exposure to these compat issues, though","msgtype":"m.text"},"ts":1498484720000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think your idea of initialClientId helps a lot. I think we should ditch reservedClientId in favour of it","msgtype":"m.text"},"ts":1498484773000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but maybe call it resultingClientId","msgtype":"m.text"},"ts":1498484784000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: uh... but we don't always have an initialClientId, right?","msgtype":"m.text"},"ts":1498484793000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1498484797000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"you mean combine them","msgtype":"m.text"},"ts":1498484800000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1498484804000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"resultingClientId - the potentially-reserved client that will house the resulting document/worker.","msgtype":"m.text"},"ts":1498484817000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how do you handle the difference in postMessage() behavior between them?","msgtype":"m.text"},"ts":1498484818000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that is my main concern with combining them","msgtype":"m.text"},"ts":1498484829000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: by the time you have the client, you can tell if it's .reserved or not","msgtype":"m.text"},"ts":1498484842000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1498484853000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ok, but that is pretty much the same as having initialClientId and reservedClientId","msgtype":"m.text"},"ts":1498484880000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: what do you think about removing the message queuing on reserved?","msgtype":"m.text"},"ts":1498484913000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think I'm missing the problem. If I want to send a message to the resulting client, resultingClientId is the place I go to do that. The queuing helps here, no?","msgtype":"m.text"},"ts":1498484985000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but if its not reserved, then the message might fire in the window before the message event handler has been setup by the final loading document","msgtype":"m.text"},"ts":1498485051000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so the message will work for reserved... but may or may not work for initial","msgtype":"m.text"},"ts":1498485069000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"making reserved not queue would avoid this since people wouldn't expect it to work","msgtype":"m.text"},"ts":1498485111000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I thought we buffered messages until something like dom-ready, or does that stop working in the replaced case?","msgtype":"m.text"},"ts":1498485135000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I kind of feel like instead of queuing messages we should provide some way to listen for the Client execution ready state change","msgtype":"m.text"},"ts":1498485141000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I'm not sure how existing message buffering works with initial about:blank","msgtype":"m.text"},"ts":1498485177000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: won't we have the same problem with a client-ready event? If it's initial about:blank, the client is ready","msgtype":"m.text"},"ts":1498485209000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Whereas we want to know \"the new document has loaded\"","msgtype":"m.text"},"ts":1498485229000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you can check the Client.url","msgtype":"m.text"},"ts":1498485235000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: So we'd need to know when the client url was the new url, and when dom-ready","msgtype":"m.text"},"ts":1498485289000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess I was assuming we wanted to allow sites to dynamically built frames and message them... which would mean we need to be able to message the client while it has the about:blank document","msgtype":"m.text"},"ts":1498485309000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: well, you can pretty much do `client.url !== 'about:blank'`","msgtype":"m.text"},"ts":1498485328000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but you can't do \"wait until client.url == 'foo.html'\"","msgtype":"m.text"},"ts":1498485356000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no.. but if we had a \"wait for execution ready\" thing you could do that then check the URL","msgtype":"m.text"},"ts":1498485395000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but what if the url is wrong? Wait 100ms and try again?","msgtype":"m.text"},"ts":1498485415000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe need to expose .initial as a boolean getter... and then have \"wait until execution ready and not initial\"","msgtype":"m.text"},"ts":1498485418000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1498485429000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: there is probably something that handles this stuff in the main window case without Clients API","msgtype":"m.text"},"ts":1498485449000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"script blockers or something","msgtype":"m.text"},"ts":1498485453000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: given Firefox's current behaviour, is this a problemâ€¦?","msgtype":"m.text"},"ts":1498485465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I would ask bz or smaug, but they are probably traveling today","msgtype":"m.text"},"ts":1498485475000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: replacement only happens if the page doesn't load","msgtype":"m.text"},"ts":1498485476000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"as in the initial page","msgtype":"m.text"},"ts":1498485494000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I'm not. I must avoid trumpland","msgtype":"m.text"},"ts":1498485496000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: that is wise","msgtype":"m.text"},"ts":1498485521000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"...for my mental health ;)","msgtype":"m.text"},"ts":1498485528000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1498485532000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: I saw at least on person was stopped from getting on a plane last night","msgtype":"m.text"},"ts":1498485537000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"one person","msgtype":"m.text"},"ts":1498485540000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"one person is working very much but is earning very less","msgtype":"m.text"},"ts":1498485540000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"I'm going to build a quick test for this postMessage stuff","msgtype":"m.text"},"ts":1498485564000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you mean without Clients API in the mix?","msgtype":"m.text"},"ts":1498485583000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1498485590000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1498485596000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in theory the clients postMessage stuff uses the same buffering","msgtype":"m.text"},"ts":1498485611000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or, it could do","msgtype":"m.text"},"ts":1498485620000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, not in my current code :-)","msgtype":"m.text"},"ts":1498485625000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1498485632000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: my WPT test right now specifically tries to postMessage() an initial about:blank while delaying the final document network load","msgtype":"m.text"},"ts":1498485661000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and I made that work","msgtype":"m.text"},"ts":1498485669000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that's pretty much the test I was about to write","msgtype":"m.text"},"ts":1498485691000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1498485692000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, if that works, we're fine then, right?","msgtype":"m.text"},"ts":1498485699000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but... the question is should it work","msgtype":"m.text"},"ts":1498485717000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I made it work in my Clients API re-write... but should it work?","msgtype":"m.text"},"ts":1498485730000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think so. Buffing like window.postMessage seems good","msgtype":"m.text"},"ts":1498485759000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: is there anything that prevents a page from adding a message handler to an initial about:blank and receiving postMessage events before the final document loads?","msgtype":"m.text"},"ts":1498485771000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1498485787000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: I don't think we're on the same page here... my test is designed to show no buffering","msgtype":"m.text"},"ts":1498485788000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"message events are just events, so if there is a listener for such, it should get called","msgtype":"m.text"},"ts":1498485808000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: we don't buffer postMessage() until a particular ready state or something?","msgtype":"m.text"},"ts":1498485829000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: see the \"ping\" cases in here: https://github.com/w3c/web-platform-tests/pull/6304/files","msgtype":"m.text"},"ts":1498485841000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"why would we...","msgtype":"m.text"},"ts":1498485858000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: uh... because JakeA thought we might? :-)","msgtype":"m.text"},"ts":1498485873000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"such buffering might take forever","msgtype":"m.text"},"ts":1498485881000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: I mean... the web does all kind of things that I can't explain","msgtype":"m.text"},"ts":1498485884000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I thought we did this with regular messages","msgtype":"m.text"},"ts":1498485890000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hence https://html.spec.whatwg.org/multipage/web-messaging.html#dom-messageport-start","msgtype":"m.text"},"ts":1498485934000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"window.postMessage is different","msgtype":"m.text"},"ts":1498485965000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"older and simpler, I'd say","msgtype":"m.text"},"ts":1498485975000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"client.postMessage is modelled to be similar","msgtype":"m.text"},"ts":1498485986000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh, hmm, you were talking about service worker stuff?","msgtype":"m.text"},"ts":1498486009000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"then no idea","msgtype":"m.text"},"ts":1498486011000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"tries to stay as far as possible from SW ;)","msgtype":"m.emote"},"ts":1498486033000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: well, I guess I assumed the various postMessage() things would be more aligned","msgtype":"m.text"},"ts":1498486041000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Gonne test window.postMessage & initial documentsâ€¦","msgtype":"m.text"},"ts":1498486060000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: when is the MessagePort enabled if start() is not called?","msgtype":"m.text"},"ts":1498486063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it's like dom ready or something","msgtype":"m.text"},"ts":1498486077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or when there's an assignment to window.onmessage","msgtype":"m.text"},"ts":1498486093000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's kinda weird","msgtype":"m.text"},"ts":1498486100000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: do windows with initial about:blank documents get the DOM ready event?","msgtype":"m.text"},"ts":1498486119000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we just dispatch the runnable in gecko and then Run() dispatches message event sync","msgtype":"m.text"},"ts":1498486123000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"wanderview: that I don't recall","msgtype":"m.text"},"ts":1498486148000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"readystatechange","msgtype":"m.text"},"ts":1498486155000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I assume no","msgtype":"m.text"},"ts":1498486158000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"since they are ready from the beginning","msgtype":"m.text"},"ts":1498486164000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"oh, they start ready from the beginning?","msgtype":"m.text"},"ts":1498486189000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: wouldn't that imply the MessagePort should be enabled? ^^^","msgtype":"m.text"},"ts":1498486200000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Let's find out!! :D","msgtype":"m.text"},"ts":1498486219000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(writing a test)","msgtype":"m.text"},"ts":1498486225000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1498486253000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"should probably start packing soon...","msgtype":"m.emote"},"ts":1498486269000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: bleh, yeah, the message gets delivered before the page loads https://clear-princess.glitch.me/","msgtype":"m.text"},"ts":1498486619000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how can you tell?","msgtype":"m.text"},"ts":1498486693000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"there is no message handler?","msgtype":"m.text"},"ts":1498486698000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, I see","msgtype":"m.text"},"ts":1498486717000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"your slow-ass-page has the handler","msgtype":"m.text"},"ts":1498486726000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: how do you do the slow load in glitch?","msgtype":"m.text"},"ts":1498486747000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: can you see https://glitch.com/edit/#!/clear-princess?path=server.js:17:23?","msgtype":"m.text"},"ts":1498486802000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, cool... didn't realize it had a server.js","msgtype":"m.text"},"ts":1498486824000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1498486826000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"<3 glitch","msgtype":"m.text"},"ts":1498486835000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do you think edge will have to implement URLSearchParams when they ship service workers?  I bet a fair number of service workers use URLSearchParams","msgtype":"m.text"},"ts":1498487179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I left a note at https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/16856668-support-the-searchparams-property-of-url-objects. It feels like a smallish thing to implement right? I know there are complications with windowProxy.location","msgtype":"m.text"},"ts":1498488060000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1498488091000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm writing up the buffering issue in that thread btw","msgtype":"m.text"},"ts":1498488139000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the github one I mean","msgtype":"m.text"},"ts":1498488152000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks... sorry, I was just throwing down my thoughts since I have to go get ready for travel shortly","msgtype":"m.text"},"ts":1498488162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not at all, thanks for throwing the rest of the details down!","msgtype":"m.text"},"ts":1498488194000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug: Symbols are the GENSYM of JS - they let you add properties to objects that are *guaranteed* to not collide with anything else.","msgtype":"m.text"},"ts":1498489426000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In particular, this means you can write mixins that are guaranteed safe. You can extend built-in prototypes without all the problems that causes today. Etc.","msgtype":"m.text"},"ts":1498489465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can't find where the HTML spec starts the window.onmessage queue automatically. I thought it was after DOMContentLoaded","msgtype":"m.text"},"ts":1498493566000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I know it starts if you assign to onmessage, but not if you use addEventListener('message', â€¦)","msgtype":"m.text"},"ts":1498493596000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"a question that came up in conversation with cbrewster wrt https://github.com/w3c/web-platform-tests/blob/master/html/semantics/embedded-content/the-iframe-element/iframe-append-to-child-document.html","msgtype":"m.text"},"ts":1498507167000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"the relevant bit of spec is https://dom.spec.whatwg.org/#concept-node-pre-insert","msgtype":"m.text"},"ts":1498507219000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"it looks like this passes the pre-insertion validity check https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity","msgtype":"m.text"},"ts":1498507256000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"because childWindow.document is not a descendant of iframe.","msgtype":"m.text"},"ts":1498507351000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"AFAICT the spec allows a cycle in the DOM + browsing context hierarchies, but I must be missing something :/","msgtype":"m.text"},"ts":1498507429000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"Domenic: any ideas ^","msgtype":"m.text"},"ts":1498507490000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"I don't remember any attempts to disallow cycles","msgtype":"m.text"},"ts":1498507887000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's some part of the spec that deals with iframe nesting level I think that tries to prevent infinite loading","msgtype":"m.text"},"ts":1498507906000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, cycles are definitely allowed and work right now, they just get broken at some point.","msgtype":"m.text"},"ts":1498508058000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Is it possible to specify, \"Wait for the queue's next dequeue operation\" ?","msgtype":"m.text"},"ts":1498509969000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I'm trying to use a queue to schedule request handling in WebDriver","msgtype":"m.text"},"ts":1498510059000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"so my question is just one possible implementation","msgtype":"m.text"},"ts":1498510076000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"although even that is probably too prescriptive","msgtype":"m.text"},"ts":1498510086000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Could I do something like, 1) Enqueue `request` in `pending requests`, 2) Wait for `request` to be the first element of `pending requests`","msgtype":"m.text"},"ts":1498510134000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I know this is blocking, but I think that's appropriate for a connection-oriented/request-initiated algorithm","msgtype":"m.text"},"ts":1498510230000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Hello. If a website has 50mb approx size video, how can the browser play it almost instantly? Whereas if i fetch the same file via XHR, the download takes approx 2.5 mins after which I can start playing it?","msgtype":"m.text"},"ts":1498510454000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"The browser is streaming it - playing what it has while it downloads the rest - while XHRing the whole file doesn't finish until the whole file is downloaded.","msgtype":"m.text"},"ts":1498511453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But if you use fetch(), you can stream the result straight into a <video> element. There are some tutorials out there with examples of this.","msgtype":"m.text"},"ts":1498511478000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I see. However, I can't find fetch + video tutorials. All I could find is https://jakearchibald.com/2016/streams-ftw/","msgtype":"m.text"},"ts":1498516598000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"Domenic: the pre-insertion check is indented to stop cycles in the DOM,","msgtype":"m.text"},"ts":1498518920000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"but it looks like there's nothing to stop cycles in the DOM+bc tree.","msgtype":"m.text"},"ts":1498518953000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"That is, can we get into a situation where A is a descendent of B, but B's browsing context is a child of A's?","msgtype":"m.text"},"ts":1498519274000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"bz: thoughts ^","msgtype":"m.text"},"ts":1498519328000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: don't think so since stuff is tied to documents","msgtype":"m.text"},"ts":1498520820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: bz doesn't hang out here unfortunately","msgtype":"m.text"},"ts":1498520836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so what stops it? I can see how DOM is acyclic, but not what in the spec stops examples like https://github.com/w3c/web-platform-tests/blob/master/html/semantics/embedded-content/the-iframe-element/iframe-append-to-child-document.html from forming cycles in DOM+bc.","msgtype":"m.text"},"ts":1498521003000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: https://dom.spec.whatwg.org/#concept-node-adopt I'd think","msgtype":"m.text"},"ts":1498521046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't see how that stops it, because \"nodeâ€™sÂ shadow-including inclusive descendants\" is just the DOM hierarchy, not anything to do with bcs.","msgtype":"m.text"},"ts":1498521200000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: when you append an iframe to its own BC, the iframe holding the BC gets removed and no new BC gets created as there's no top-level BC","msgtype":"m.text"},"ts":1498521374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: I might be missing something though","msgtype":"m.text"},"ts":1498521389000,"senderName":"annevk","senderId":"annevk@irc"}
]