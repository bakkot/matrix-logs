[
{"content":{"body":"dcheng: yt?","msgtype":"m.text"},"ts":1502755682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1502755720000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: could you add @ehsan to https://github.com/whatwg/html>","msgtype":"m.text"},"ts":1502761376000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: he's a Gecko contributor","msgtype":"m.text"},"ts":1502761383000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: added with read access","msgtype":"m.text"},"ts":1502763132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why so many people idling here?","msgtype":"m.text"},"ts":1502767864000,"senderName":"luxio","senderId":"luxio@irc"},
{"content":{"body":"luxio: lots of people trying to get rid of their sense of logic","msgtype":"m.text"},"ts":1502778647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: isn't document.all awesome!?","msgtype":"m.text"},"ts":1502783619000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hmm I just noticed that Bikeshed puts <script> elements way late in the document","msgtype":"m.text"},"ts":1502783945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do you get them in <head>?","msgtype":"m.text"},"ts":1502783951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And how would you do the same for a <style>?","msgtype":"m.text"},"ts":1502783958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: iirc BS puts all <style> elements in <head>.","msgtype":"m.text"},"ts":1502784981000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: no idea about <script>","msgtype":"m.text"},"ts":1502785042000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: https://drafts.fxtf.org/geometry/ or https://drafts.fxtf.org/geometry-1/?","msgtype":"m.text"},"ts":1502790755000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"zcorpan: only the latter has DOMRectList, but is an uglier URL","msgtype":"m.text"},"ts":1502790773000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: huh. they're supposed to be identical","msgtype":"m.text"},"ts":1502790823000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: a deploy problem perhaps?","msgtype":"m.text"},"ts":1502790838000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"took a guess and pinged plinss","msgtype":"m.text"},"ts":1502790914000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1502790924000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so linking to the one without the version should be the right thing?","msgtype":"m.text"},"ts":1502790930000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah, in general, but in web-platform-tests the linter will whine about versionless spec links under css/","msgtype":"m.text"},"ts":1502790965000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1502790969000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that's fine, those aren't URLs, just reviewing URL fixes in Blink's IDL files now","msgtype":"m.text"},"ts":1502790992000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: totally","msgtype":"m.text"},"ts":1502791083000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: https://github.com/w3c/web-platform-tests/pull/6890","msgtype":"m.text"},"ts":1502793882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"woo hoo!","msgtype":"m.text"},"ts":1502793905000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I guess I'll start filing some browser bugs too on the base64 bits that don't interoperate","msgtype":"m.text"},"ts":1502793995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: looking at your latest change. You seem to understand the difference between an Object Type with a [[Call]] internal method and ECMAScript Function Objects. TBH, I don't. Care to enlighten me (or someone else for that matter).","msgtype":"m.text"},"ts":1502796644000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic, annevk: ^","msgtype":"m.text"},"ts":1502798175000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: oh sorry, missed that","msgtype":"m.text"},"ts":1502800139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: np","msgtype":"m.text"},"ts":1502800154000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm not really sure on the difference","msgtype":"m.text"},"ts":1502800156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :(","msgtype":"m.text"},"ts":1502800166000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: do functions have [] accessors?","msgtype":"m.text"},"ts":1502800167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh; *that*. I have no idea.","msgtype":"m.text"},"ts":1502800207000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I vaguely recall some types having (), some [], and weird ones having both","msgtype":"m.text"},"ts":1502800214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: so object with call seems like one of those weird ones on the face of it, but I'd have to look into it more to be sure","msgtype":"m.text"},"ts":1502800276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what I'm trying to figure out is what do we mean when we say Function object","msgtype":"m.text"},"ts":1502800311000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it doesn't mean alert(Function)?","msgtype":"m.text"},"ts":1502800372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: related to https://github.com/heycam/webidl/pull/405#issuecomment-322244133","msgtype":"m.text"},"ts":1502800398000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: no. That would be \"the Function object\"?","msgtype":"m.text"},"ts":1502800419000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: hmm, a built-in function object is like a normal JavaScript function that's provided by the browser somehow","msgtype":"m.text"},"ts":1502800509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I think the most important bit is that the implementation is hidden","msgtype":"m.text"},"ts":1502800526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: and defined by a spec","msgtype":"m.text"},"ts":1502800540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so we have the notion of built-in down, that's fine.","msgtype":"m.text"},"ts":1502800574000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: the issue is around the non built-in ones.","msgtype":"m.text"},"ts":1502800594000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think what is called \"function object\" in that PR just refers to all JavaScript functions, with built-in ones being a subset","msgtype":"m.text"},"ts":1502800706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want venn diagrams of all the things.","msgtype":"m.text"},"ts":1502800854000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: pretty sure that would hang your computer","msgtype":"m.text"},"ts":1502800957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: WDYT about the bugs about <script>/<template> in the content model? Leave the spec as is or change it as I suggested back then?","msgtype":"m.text"},"ts":1502800985000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: that PR is changing a bunch of \"<emu-val>Function</emu-val> object\" to \"function object\" and linking to https://tc39.github.io/ecma262/#sec-object-internal-methods-and-internal-slots","msgtype":"m.text"},"ts":1502801091000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: maybe we should link it to https://tc39.github.io/ecma262/#sec-terms-and-definitions-function instead?","msgtype":"m.text"},"ts":1502801153000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: tbh I'm having a hard time figuring out how the ES spec is structured.","msgtype":"m.text"},"ts":1502801170000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: the section the PR refers to has the <dfn> it seems like: \"A function object is an object that supports the [[Call]] internal method.\"","msgtype":"m.text"},"ts":1502801965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed. Is that what we mean by \"<emu-val>Function</emu-val> object\" is my question, I suppose.","msgtype":"m.text"},"ts":1502802026000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think uppercase Function is likely to refer to global.Function","msgtype":"m.text"},"ts":1502802086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think that's what it was doing in the WebIDL spec.","msgtype":"m.text"},"ts":1502802129000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: not sure then, perhaps conventions changed between ES5 and ES6?","msgtype":"m.text"},"ts":1502802195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: a lot of IDL is aligned with ES5 language","msgtype":"m.text"},"ts":1502802207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know. :(","msgtype":"m.text"},"ts":1502802385000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: looking at https://es5.github.io/ it seems that ES was sloppy before ES6","msgtype":"m.text"},"ts":1502802521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: that has stuff like \"built-in Function object\"","msgtype":"m.text"},"ts":1502802556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: so IDL likely inherited a lot of that","msgtype":"m.text"},"ts":1502802567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1502802574000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: here's what I figured out","msgtype":"m.text"},"ts":1502802809000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"tobie: \"ECMAScript Function object\" is https://tc39.github.io/ecma262/#sec-ecmascript-function-objects . It is a function derived from ECMAScript source text written down by a developer.","msgtype":"m.text"},"ts":1502802811000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"^^ that :)","msgtype":"m.text"},"ts":1502802818000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"lol sorry ^_^","msgtype":"m.text"},"ts":1502802850000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I did try to make the distinctions between \"function object\" and \"built-in function object\" very clear, though there are some instances I'm not too sure what to link","msgtype":"m.text"},"ts":1502802933000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Right--so Object type with [[Call]] is a superset whose elements are built-ins and ES function objects?","msgtype":"m.text"},"ts":1502802936000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1502802951000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"The set also includes non-function objects who just happen to have [[Call]]","msgtype":"m.text"},"ts":1502802956000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like proxies, for example","msgtype":"m.text"},"ts":1502802963000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"also bound function exotic objects, proxies","msgtype":"m.text"},"ts":1502802966000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"e.g. for https://heycam.github.io/webidl/#es-map-size","msgtype":"m.text"},"ts":1502802988000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"And probably legacy-caller platform objects","msgtype":"m.text"},"ts":1502802991000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"built-in function objects have a specific [[Call]]: https://tc39.github.io/ecma262/#sec-built-in-function-objects","msgtype":"m.text"},"ts":1502803033000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wrote \"map size getter is a [=built-in function object=]\" but below I kept \"The value of the [=function object=]’s “length” property\"","msgtype":"m.text"},"ts":1502803039000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"felt writing \"built-in function object\" for the second case felt a bit redundant","msgtype":"m.text"},"ts":1502803068000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"What about https://tc39.github.io/ecma262/#sec-terms-and-definitions-function?","msgtype":"m.text"},"ts":1502803072000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it's too vague IMO","msgtype":"m.text"},"ts":1502803080000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"generally that section is full of vague definitions that will be defined in detail later","msgtype":"m.text"},"ts":1502803109000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: sure. But aren't we precisely aiming for vagueness here?","msgtype":"m.text"},"ts":1502803188000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: I mean it seems that by \"function object\" we sort of mean all the callable things","msgtype":"m.text"},"ts":1502803218000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"well, \"object with [[Call]]\" is similarly broad but more precise than \"member of the Object type that may be invoked as a subroutine\"","msgtype":"m.text"},"ts":1502803233000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: agreed. It's just ES spec doesn't really let you link to this.","msgtype":"m.text"},"ts":1502803265000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: which is a common issues with the ES spec.","msgtype":"m.text"},"ts":1502803279000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, that's unfortunate","msgtype":"m.text"},"ts":1502803282000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: agreed.","msgtype":"m.text"},"ts":1502803291000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So, now that everyone has provided greater context, I'm with you that \"object with [[Call]]\" is what we'd like to link to.","msgtype":"m.text"},"ts":1502803329000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: I'm not sure how to best do that, tbh.","msgtype":"m.text"},"ts":1502803363000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: I guess it depends who the intended audience of that linking is.","msgtype":"m.text"},"ts":1502803385000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"we can ask tc39 to put an id there","msgtype":"m.text"},"ts":1502803391000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: around here: https://tc39.github.io/ecma262/#_ref_40 ?","msgtype":"m.text"},"ts":1502803545000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"\"A function object is an object that supports the [[Call]] internal method.\"","msgtype":"m.text"},"ts":1502803567000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yes, specifically for \"function object\"","msgtype":"m.text"},"ts":1502803577000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Right, just like one of our DFNs","msgtype":"m.text"},"ts":1502803601000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1502803605000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"WFM.","msgtype":"m.text"},"ts":1502803617000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"they have a system to do that too, e.g. https://tc39.github.io/ecma262/#global-object","msgtype":"m.text"},"ts":1502803621000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"oh, neat.","msgtype":"m.text"},"ts":1502803680000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll send a PR.","msgtype":"m.text"},"ts":1502803685000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: do you have an opinion on the question I posed earlier, whether to use \"built-in function object\" for both cases or  \"built-in\" for the first one and just \"function object\" for the second?","msgtype":"m.text"},"ts":1502803786000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu | e.g. for https://heycam.github.io/webidl/#es-map-size","msgtype":"m.text"},"ts":1502803816000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: maybe not link it the second time at all?","msgtype":"m.text"},"ts":1502803821000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"it's not really the linking  I'm worried about but what to write","msgtype":"m.text"},"ts":1502803913000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Domenic: do you know where \"length\" property for built-in functions are defined in ES?","msgtype":"m.text"},"ts":1502803938000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Yes, there's a clause...","msgtype":"m.text"},"ts":1502804014000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean, I can find the one for normal ECMAScript functions but not built-in ones...","msgtype":"m.text"},"ts":1502804044000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"the one for ES functions is https://tc39.github.io/ecma262/#sec-functioninitialize","msgtype":"m.text"},"ts":1502804060000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"No, there's something that says \"look at the headings\"...","msgtype":"m.text"},"ts":1502804106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Every built-in function object, including constructors, has a length property whose value is an integer. Unless otherwise specified, this value is equal to the largest number of named arguments shown in the subclause headings for the function description. Optional parameters (which are indicated with brackets: [ ]) or rest parameters (which are shown using the form «...name») are not included in the default argument","msgtype":"m.text"},"ts":1502804122000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"count.","msgtype":"m.text"},"ts":1502804122000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah found it: https://tc39.github.io/ecma262/#sec-ecmascript-standard-built-in-objects","msgtype":"m.text"},"ts":1502804125000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Isn't there a way to use a more imperative style here? Similar to the last steps of https://heycam.github.io/webidl/#named-constructors","msgtype":"m.text"},"ts":1502804159000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"We don't use CreateBuiltinFunction at all for functions defined in the IDL spec, we should probably fix that first","msgtype":"m.text"},"ts":1502804284000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"we do for IDL operations though","msgtype":"m.text"},"ts":1502804303000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"There's a bug about that, I think","msgtype":"m.text"},"ts":1502804311000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"... there's a bug about everything...","msgtype":"m.text"},"ts":1502804325000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":":D :-/","msgtype":"m.text"},"ts":1502804601000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: that clause is always so hard to find","msgtype":"m.text"},"ts":1502804640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TimothyGu: kudos for multiple ;base64 occurrences","msgtype":"m.text"},"ts":1502804717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1502804869000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Domenic: I'm getting a lot of failures from Travis that are fixed after a couple restarts","msgtype":"m.text"},"ts":1502806131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: 'The command \"curl --remote-name --fail https://resources.whatwg.org/build/deploy.sh && bash ./deploy.sh\" exited with 1.'","msgtype":"m.text"},"ts":1502806138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm so that could be a problem with the deploy script since maybe we are hiding errors? But I suspect it means resources.whatwg.org is flaky.","msgtype":"m.text"},"ts":1502806169000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and it always seems to be the fetching that fails","msgtype":"m.text"},"ts":1502806174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah OK. So, more dreamhost problems.","msgtype":"m.text"},"ts":1502806187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe they're rate-limiting Travis?","msgtype":"m.text"},"ts":1502806213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems unlikely... we don't deploy that often. I think I hit the various specs myself more often than Travis does.","msgtype":"m.text"},"ts":1502806246000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe there's something in the logs though, indeed.","msgtype":"m.text"},"ts":1502806254000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: so I'd kind of like to avoid iso-...-decode since iso-... doesn't define mappings for various bytes","msgtype":"m.text"},"ts":1502806354000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I liked \"numeric\" because it's \"take the number of the byte and turn it into the number of the codepoint\"","msgtype":"m.text"},"ts":1502806366000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: wait what? it doesn't?","msgtype":"m.text"},"ts":1502806449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: source? http://ftp.unicode.org/Public/MAPPINGS/ISO8859/8859-1.TXT","msgtype":"m.text"},"ts":1502806489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ftp://std.dkuug.dk/JTC1/sc2/wg3/docs/n411.pdf  is missing several ranges","msgtype":"m.text"},"ts":1502806499000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Interesting!","msgtype":"m.text"},"ts":1502806510000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://en.wikipedia.org/wiki/ISO/IEC_8859-1#Codepage_layout matches the pdf","msgtype":"m.text"},"ts":1502806527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So it looks like Unicode has a different definition of iso-8859-1 than ISO does","msgtype":"m.text"},"ts":1502806574000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"One of them keeps 0x80–0x9F undefined, IIRC?","msgtype":"m.text"},"ts":1502806592000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Okay, the commonly understood meaning is that those are mapped as I understand it, although it's hard to test in browsers","msgtype":"m.text"},"ts":1502806596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And 0x00-0x20","msgtype":"m.text"},"ts":1502806600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Also 0x7F)","msgtype":"m.text"},"ts":1502806621000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't feel like there is any \"common meaning\" here :). Besides maybe windows-1252 :)","msgtype":"m.text"},"ts":1502806639000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"string convert\" and \"byte sequence convert\"?","msgtype":"m.text"},"ts":1502806649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that works for me","msgtype":"m.text"},"ts":1502806659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd kind of like to use \"encode\"/\"decode\" but those are OK-ish","msgtype":"m.text"},"ts":1502806674000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: isomorphic encode/decode?","msgtype":"m.text"},"ts":1502806730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oooh","msgtype":"m.text"},"ts":1502806743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that works for me.","msgtype":"m.text"},"ts":1502806797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1502806851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: can https://github.com/whatwg/infra/pull/145 land?","msgtype":"m.text"},"ts":1502807200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll do one more pass","msgtype":"m.text"},"ts":1502807228000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the jsDoc docs are… pretty bad, for a documentation project","msgtype":"m.text"},"ts":1502814219000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, are they also, by any chance, js;dr?","msgtype":"m.text"},"ts":1502814248000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: no, they aren't, AFAICT","msgtype":"m.text"},"ts":1502814307000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well that's a relief at least","msgtype":"m.text"},"ts":1502814317000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Domenic: Ain't that a case of IANA ISO-8859-1 vs ISO/CEI 8859-1?","msgtype":"m.text"},"ts":1502814809000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: resources.whatwg.org does seem super reliable to me though","msgtype":"m.text"},"ts":1502814853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: don't think so","msgtype":"m.text"},"ts":1502814912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: AFAIK the ISO/CEI one doesn't define mappings for all the bytes.","msgtype":"m.text"},"ts":1502814964000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: IANA's references don't either","msgtype":"m.text"},"ts":1502815015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I approved and then realized https://github.com/whatwg/infra/pull/146#issuecomment-322519502 sorry","msgtype":"m.text"},"ts":1502815047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: You sure?","msgtype":"m.text"},"ts":1502815054000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"ISO-8859-1 is the IANA preferred name for this standard when supplemented with the C0 and C1 control codes from ISO/IEC 6429 (see below for HTML5 exception). IBM calls it Code page 819 or CP819. The following other aliases are registered for ISO-8859-1: iso-ir-100, csISOLatin1, latin1, l1, IBM819. Oracle calls it WE8ISO8859P1.\"","msgtype":"m.text"},"ts":1502815111000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I'm not sure where that quote is from, but the references on https://www.iana.org/assignments/character-sets/character-sets.xhtml (both ISO and the RFC) don't seem to define those areas","msgtype":"m.text"},"ts":1502815271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://tools.ietf.org/html/rfc1345 lists ISO-8859-1 with mappings for all bytes AFAIK, but maybe I miscounted.","msgtype":"m.text"},"ts":1502815277000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: no worries","msgtype":"m.text"},"ts":1502815302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: oh I guess it does at the end, hmm","msgtype":"m.text"},"ts":1502815352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: oh well, IANA charsets is obsoleted too so best to avoid","msgtype":"m.text"},"ts":1502815374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've way more often saw the ISO-8859-1 version with the 256 code points,","msgtype":"m.text"},"ts":1502815401000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"than the ISO/IEC 8859-1 one with the subset of them.","msgtype":"m.text"},"ts":1502815412000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"the only time I see the one without the controls is when people are claiming Windows-1252 is a compliant implementation of ISO-8859-1, just giving meaning to undefined bytes","msgtype":"m.text"},"ts":1502815518000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: should we update that note though?","msgtype":"m.text"},"ts":1502815576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's still the best advice for getting a byte sequence out of a string","msgtype":"m.text"},"ts":1502815586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: isomorphic encode is mostly for legacy stuff","msgtype":"m.text"},"ts":1502815616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think we should update it, even if we keep recommending UTF-8. It's just weird to see that note and then two lines down see \"here's a procedure for going from strings to byte sequences\"","msgtype":"m.text"},"ts":1502815676000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: two lines down is the other procedure, but okay","msgtype":"m.text"},"ts":1502815800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lgtm","msgtype":"m.text"},"ts":1502815891000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I really don't understand what's wrong with the build process, resources.whatwg.org responds perfectly here","msgtype":"m.text"},"ts":1502816356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: oh right, if it's rate-limiting by DreamHost that would be it","msgtype":"m.text"},"ts":1502816367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm OK, maybe a Travis-specific thing then. Maybe we can add more debugging to the script somehow","msgtype":"m.text"},"ts":1502816377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: drag & drop is a bean bag of bugs and interoperability nightmare :(","msgtype":"m.text"},"ts":1502823487000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that's UI events","msgtype":"m.text"},"ts":1502824749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, not just that but dataTransfer behavior is really inconsistent","msgtype":"m.text"},"ts":1502824784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: one day I want to dig in, but I keep waiting and hoping someone else does it","msgtype":"m.text"},"ts":1502824787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: shall we merge https://github.com/whatwg/html/pull/2869 ?","msgtype":"m.text"},"ts":1502828361000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"@annevk As noted by tobie, Bikeshed auto-moves all <style> elements into the <head> automatically, because it's guaranteed to not be a behavior change. But I can't guarantee that for <script>s; you might be depending on relative ordering, or for a <script> to execute after a particular element was parsed into the DOM, and moving would break it.","msgtype":"m.text"},"ts":1502828712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Are these your own <script> elements you're having a problem with, or something that Bikeshed is generating?","msgtype":"m.text"},"ts":1502828729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]