[
{"content":{"body":"anyone know if there is a spec / polyfill implementation for the CSS colors API: http://dev.w3.org/csswg/css-color/#apis ?","msgtype":"m.text"},"ts":1405522779000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"s/spec/tests/","msgtype":"m.text"},"ts":1405522798000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"Neither","msgtype":"m.text"},"ts":1405522820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I might start working on one / look at turning into jQuery Color 3","msgtype":"m.text"},"ts":1405522837000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"the api is close enough i could consume it in jQuery color","msgtype":"m.text"},"ts":1405522854000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"i'm surprised lea doesn't have something like that already","msgtype":"m.text"},"ts":1405522909000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gnarf: I think that API is less than a week old :)","msgtype":"m.text"},"ts":1405525216000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1405525226000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"worth looking into","msgtype":"m.text"},"ts":1405525232000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"i already have most of it written","msgtype":"m.text"},"ts":1405525236000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"definitely! just, i would be surprised if any polyfills existed","msgtype":"m.text"},"ts":1405525364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'm never surprised when someone beats me to a polyfill though :)","msgtype":"m.text"},"ts":1405525403000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"Hixie: http://www.whatwg.org/specs/web-apps/current-work/#rules-for-parsing-a-hash-name-reference step 3. What is the context there? \"Return the first element\" is rather vague. Should it be return the first element in document ... Or is it about the same subtree where img element lives (in case of usamap)?","msgtype":"m.text"},"ts":1405534772000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"usemap","msgtype":"m.text"},"ts":1405534787000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"looks...","msgtype":"m.emote"},"ts":1405534790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm yeah, it doesn't say which Document, huh","msgtype":"m.text"},"ts":1405534846000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: do you happen to know the right answer?","msgtype":"m.text"},"ts":1405534986000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: i've filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=26359 -- if you happen to know what the compat need is, add a comment; otherwise, you can assume i'm going to make the spec use the Document of the <img> or <object>, not the home subtree","msgtype":"m.text"},"ts":1405535024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, Document sounds better","msgtype":"m.text"},"ts":1405535053000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"shadow DOM may want some changes, but not sure what kind of","msgtype":"m.text"},"ts":1405535069000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you open http://plnkr.co/edit/Wli7OkXQJ2V772jH95rb?p=preview in firefox, is the behaviour in firefox acceptable in terms of the spec? (like, is this an implementation-defined thing where no standard behaviour should ever be expected?)","msgtype":"m.text"},"ts":1405537502000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: you mean that gecko changes the value the moment you focus on it, instead of waiting for you to actually select it?","msgtype":"m.text"},"ts":1405540508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1405540543000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it seems to be correct as far as things are defined in the spec, but it still seems really bizarre","msgtype":"m.text"},"ts":1405540582000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: yeah, that's well into impl-defined behaviour","msgtype":"m.text"},"ts":1405540692000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't think that should be implementation defined, because it breaks interoperability under certain circumstances","msgtype":"m.text"},"ts":1405540728000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we've found a whole pile of interop issues between the different implementations with select controls, it makes things very difficult :(","msgtype":"m.text"},"ts":1405540789000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: gsnedders I think even if the spec doesn't explicitly prohibit it, that's bad UX for end users, and counter-intuitive for Web developers","msgtype":"m.text"},"ts":1405541678000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't expect my application behavior to change when a user simply changes the focus of a select control without actually you know, intentionally selecting something","msgtype":"m.text"},"ts":1405541735000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I feel like for some of the form widgets many mobile platforms don't have the clear focusing distinction that you get on most desktop OSes","msgtype":"m.text"},"ts":1405541936000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"one of the interns filed a bug about this with gecko, I'm just trying to make a case for it","msgtype":"m.text"},"ts":1405541937000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but maybe that's not true, idk","msgtype":"m.text"},"ts":1405541953000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well I think it's more that on mobile/touch screens you can't really \"hover\"","msgtype":"m.text"},"ts":1405541979000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: hard to judge from that plunk, since when I view it in Nightly on my mobile I don't even get a select control showing up","msgtype":"m.text"},"ts":1405542172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, I think plunker has some issues with a good number of browsers, have to talk to ggoodman about that =) it should work better in jsfiddle","msgtype":"m.text"},"ts":1405542302000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh http://run.plnkr.co/gZNU4S2M19ttmRa0/ does work on mobile though","msgtype":"m.text"},"ts":1405542339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: what is bizarre in the Gecko behavior ?","msgtype":"m.text"},"ts":1405542373000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, the bizarre thing is that the selectedness of options change when you hover the cursor over them","msgtype":"m.text"},"ts":1405542394000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"could be missing something","msgtype":"m.emote"},"ts":1405542396000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1405542400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so, this is not behaviour shared with any other browser on the market, and is kind of unexpected","msgtype":"m.text"},"ts":1405542414000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"why it is unexpected?","msgtype":"m.text"},"ts":1405542431000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"caitp: and if you use it on mobile the action of changing the focus of the select control does in fact amount to the same action as actually selecting a new value. No clear distinction, as gsnedders pointed out","msgtype":"m.text"},"ts":1405542434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes, but I think that's fine for touch screens","msgtype":"m.text"},"ts":1405542471000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's more awkward for actual pointers","msgtype":"m.text"},"ts":1405542489000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah, agreed","msgtype":"m.text"},"ts":1405542499000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on desktop that's counter-inutitive and badly surprising","msgtype":"m.text"},"ts":1405542534000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can't understand the issue","msgtype":"m.emote"},"ts":1405542569000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"imagine you're ordering a pizza, and you are just reading the menu, and the act of reading the menu causes your credit card to be charged before you've made a decision","msgtype":"m.text"},"ts":1405542621000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's kinda like that","msgtype":"m.text"},"ts":1405542626000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"smaug____: a user doesn't expect things to change in an application if they simply just focus on a different option in a select control prior to actually intentionally selecting a different option","msgtype":"m.text"},"ts":1405542631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's a two-step action on desktop, where you have a pointer","msgtype":"m.text"},"ts":1405542673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and gecko is prematurely deciding the user has selected something before the user has actually completed the action","msgtype":"m.text"},"ts":1405542723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it is the current selection","msgtype":"m.text"},"ts":1405542823000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't see the UX issue, but I can see how this could lead to issues if web apps rely on behavior of other browsers","msgtype":"m.text"},"ts":1405542876000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: you happen to be around?","msgtype":"m.text"},"ts":1405543850000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"TabAtkins: looking at implementing some tests / the ecmascript api for css color module 4 - one question i had - how do to deal with out of range values, i.e. 1.1 lightness - 110% ?","msgtype":"m.text"},"ts":1405543922000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"Nothing special. They're valid, and get handled by CSS when you serialize them.","msgtype":"m.text"},"ts":1405543979000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"to hex?","msgtype":"m.text"},"ts":1405544026000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"256 -> hex ?","msgtype":"m.text"},"ts":1405544038000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"Is possible to specify colors outside if the sRGB gamut.","msgtype":"m.text"},"ts":1405544040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The hex IDL prevents them from going above 255 or below 0","msgtype":"m.text"},"ts":1405544062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aha - i see","msgtype":"m.text"},"ts":1405544088000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"[Clamp] octet does that","msgtype":"m.text"},"ts":1405544093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gnarf: write them as web-platform-tests so you can contribute them to the common browser test suite!","msgtype":"m.text"},"ts":1405544095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"miseed that [Clamp] octet","msgtype":"m.text"},"ts":1405544098000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"smaug____: https://bugzilla.mozilla.org/show_bug.cgi?id=1039047 (regarding the select behavior) by way of caitp by way of https://github.com/angular/angular.js/pull/8221","msgtype":"m.text"},"ts":1405544156000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh man, our top secret conversation!","msgtype":"m.text"},"ts":1405544213000,"senderName":"caitp","senderId":"caitp@irc"}
]