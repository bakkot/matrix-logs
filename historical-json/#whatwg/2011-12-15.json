[
{"content":{"body":"sicking: it's an HTMLCollection in DOM4, and in that all four implementations agree","msgtype":"m.text"},"ts":1323907200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: hopefully we don't end up ping-pong each other's behavior","msgtype":"m.text"},"ts":1323907201000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: wait but webkit doesn't return HTMLCollection, right?","msgtype":"m.text"},"ts":1323907202000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"according to \"document.body.children instanceof HTMLCollection\"","msgtype":"m.text"},"ts":1323907203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: it doesn't return it--talking about children *itself* being an HTMLCollection","msgtype":"m.text"},"ts":1323907260000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: we just return an array","msgtype":"m.text"},"ts":1323907261000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: ah, I see. right.","msgtype":"m.text"},"ts":1323907262000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: if by \"all four\" you exclude FF10 :)","msgtype":"m.text"},"ts":1323907263000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: all four production releases","msgtype":"m.text"},"ts":1323907320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"insists on us needing data for IE6, 7, & 8","msgtype":"m.emote"},"ts":1323907321000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i don't have VMs for all of those it seems, testing 6 now","msgtype":"m.text"},"ts":1323907322000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: thanks","msgtype":"m.text"},"ts":1323907323000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: hmm.. it appears to be in FF10 as well.. bummer","msgtype":"m.text"},"ts":1323907324000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: that's good though","msgtype":"m.text"},"ts":1323907380000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: that means all browsers agree on that","msgtype":"m.text"},"ts":1323907381000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: ouch, we even still make getElementsByTagName return a HTMLCollection :(","msgtype":"m.text"},"ts":1323907382000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: HTMLCollection is a very messy API. I almost think it's strictly worse than NodeList","msgtype":"m.text"},"ts":1323907440000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"2011 and i'm debugging code to make it work in ie6","msgtype":"m.text"},"ts":1323907500000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"kill me","msgtype":"m.text"},"ts":1323907501000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just let it break, man","msgtype":"m.text"},"ts":1323907502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: you make it sound as if NodeList is a good API :P","msgtype":"m.text"},"ts":1323907503000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: the point is testing code for the above :)","msgtype":"m.text"},"ts":1323907504000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"infinite redirect on facebook :/","msgtype":"m.text"},"ts":1323907620000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"sicking: caching nodes for NodeList is just a nightmare","msgtype":"m.text"},"ts":1323907621000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: it's the reason inserting a node is O(depth of tree) in WebKit at the moment","msgtype":"m.text"},"ts":1323907622000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ie6 doesn't have HTMLCollection at all, and all four cases return an array-like object with two items","msgtype":"m.text"},"ts":1323907680000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: ah I see","msgtype":"m.text"},"ts":1323907681000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: but still consistent with being it array-like","msgtype":"m.text"},"ts":1323907682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1323907683000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: so I think we have a clear compat. issue here","msgtype":"m.text"},"ts":1323907684000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"also, namedItem is less clear","msgtype":"m.text"},"ts":1323907800000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"in IE6 it returned an array, in IE9 it returns a single item (matching FF); Chrome and Opera still return arrays","msgtype":"m.text"},"ts":1323907860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: :(","msgtype":"m.text"},"ts":1323907861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smells like IE changing to match the spec but the spec was wrong","msgtype":"m.text"},"ts":1323907862000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yeah...","msgtype":"m.text"},"ts":1323907863000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: they might need to play a ping-pong here.","msgtype":"m.text"},"ts":1323907864000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's odd that IE9 *only* changed to match the spec for namedItem and not the others, though","msgtype":"m.text"},"ts":1323907920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"maybe that was the only one they could change without breaking lots of pages","msgtype":"m.text"},"ts":1323907921000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: could be.","msgtype":"m.text"},"ts":1323908040000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: i mean they should be told us it won't work","msgtype":"m.text"},"ts":1323908041000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: then we didn't have to wait 'til now to figure this out :(","msgtype":"m.text"},"ts":1323908042000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"should have*","msgtype":"m.text"},"ts":1323908043000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: and not inconsistently changing one part of a tightly-related API and just confusing things further","msgtype":"m.text"},"ts":1323908100000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or that spec authors should have paid more attention..","msgtype":"m.text"},"ts":1323908101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: yeah,","msgtype":"m.text"},"ts":1323908102000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: just changing the behavior of namedItem is way too confusing","msgtype":"m.text"},"ts":1323908103000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if the implementors aren't giving back feedback (I wouldn't know either way) then there's only so much the editors can do","msgtype":"m.text"},"ts":1323908104000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(MS people--not all of them--seem to be in that group of people who wait until LC then give two years of withheld feedback all at once)","msgtype":"m.text"},"ts":1323908160000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: that's not a NodeList problem","msgtype":"m.text"},"ts":1323908220000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: you'd have the same problem if .childNodes was a HTMLCollection","msgtype":"m.text"},"ts":1323908221000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: right.","msgtype":"m.text"},"ts":1323908222000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so I think all of those are bad APIs","msgtype":"m.text"},"ts":1323908223000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: your definition of \"two years of withheld feedback\" is much smaller than mine...","msgtype":"m.text"},"ts":1323908224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rniwa: additionally, lots of things will force you to walk the parent chain when inserting nodes","msgtype":"m.text"},"ts":1323908280000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: so it's not a .childNodes problem either really","msgtype":"m.text"},"ts":1323908281000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: MutationObservers will force you to do the same","msgtype":"m.text"},"ts":1323908282000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well, i seem to recall seeing them dump feedback in response to CfC's (making me think: why did you wait?)","msgtype":"m.text"},"ts":1323908283000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: as do ranges likely","msgtype":"m.text"},"ts":1323908284000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: sure. but we should be able to insert nodes in O(1) as long as there are no ranges and no observers","msgtype":"m.text"},"ts":1323908340000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(or whatever magic TLA it is they use when calling for updating drafts)","msgtype":"m.text"},"ts":1323908341000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: which is fairly common","msgtype":"m.text"},"ts":1323908342000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: we're thinking to have some hash map for selection, focus, etc...","msgtype":"m.text"},"ts":1323908400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but most of those things need to happen at removal","msgtype":"m.text"},"ts":1323908401000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: e.g. inserting a node shouldn't require DOM traversal for ranges","msgtype":"m.text"},"ts":1323908402000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"anyway just my impression from the outside, i'm not an editor tearing out my hair at this stuff :)","msgtype":"m.text"},"ts":1323908460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: we just need to split spec into smaller pieces","msgtype":"m.text"},"ts":1323908461000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: and push them into LC as soon as possible","msgtype":"m.text"},"ts":1323908462000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: shrug. I don't think that walking the parent chain would be a big deal in most cases","msgtype":"m.text"},"ts":1323908520000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: it actually is.","msgtype":"m.text"},"ts":1323908521000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: I've found that most trees have depths of 5-20","msgtype":"m.text"},"ts":1323908522000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but walking all those nodes on every node insertion is quite expensive","msgtype":"m.text"},"ts":1323908523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: it's just a linked list","msgtype":"m.text"},"ts":1323908524000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and 20 is pretty short","msgtype":"m.text"},"ts":1323908580000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: simply because loading the node into memory may invalidate L1/L2 caches in the CPU","msgtype":"m.text"},"ts":1323908581000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"linked lists are notoriously troublesome for cache...","msgtype":"m.text"},"ts":1323908582000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you'll likely have to access the node anyway when laying it out","msgtype":"m.text"},"ts":1323908583000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: sure.","msgtype":"m.text"},"ts":1323908584000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: layout is super duper slow","msgtype":"m.text"},"ts":1323908585000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(though that can be alleviated with some/a lot of work)","msgtype":"m.text"},"ts":1323908586000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: but we should make DOM operation as fast as possible nonetheless","msgtype":"m.text"},"ts":1323908640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i don't actually know if walking the parent chain shows up in profile for us. I think most of the time it doesn't","msgtype":"m.text"},"ts":1323908641000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but i'm not fully sure","msgtype":"m.text"},"ts":1323908642000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"bz would know","msgtype":"m.text"},"ts":1323908643000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: in most pages it doesn't.","msgtype":"m.text"},"ts":1323908760000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but gmail, for example, spends 80-90% of its loading time in making DOM mutations","msgtype":"m.text"},"ts":1323908761000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"heh, gmail being the only web app i've ever used that actually takes so long to start up it needs a progress bar for it","msgtype":"m.text"},"ts":1323908820000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1323908880000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"anyway, I think making DOM operations faster is a good thing","msgtype":"m.text"},"ts":1323908940000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and we should make sure we don't introduce new APIs that makes everything slower","msgtype":"m.text"},"ts":1323909000000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: are you going to file a bug about changing HTMLCollection in dom4?","msgtype":"m.text"},"ts":1323909060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"don't know whether to recommend the results be NodeList or HTMLCollection","msgtype":"m.text"},"ts":1323909061000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(that's the lesser problem, though)","msgtype":"m.text"},"ts":1323909120000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I think you should file one since you have a test","msgtype":"m.text"},"ts":1323909121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1323909180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyone have FF8 to test?","msgtype":"m.text"},"ts":1323909540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(to narrow where the namedItem change was made)","msgtype":"m.text"},"ts":1323909541000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I have FF7...","msgtype":"m.text"},"ts":1323909660000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that'd get closer...","msgtype":"m.text"},"ts":1323909720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"document.body.children is an HTMLCollection: true","msgtype":"m.text"},"ts":1323909780000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"document.body.children[\"x\"]: [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement","msgtype":"m.text"},"ts":1323909781000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"document.body.children.item(\"x\"): [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement","msgtype":"m.text"},"ts":1323909782000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"document.body.children.namedItem(\"x\"): [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement","msgtype":"m.text"},"ts":1323909783000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"document.body.children.x: [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement","msgtype":"m.text"},"ts":1323909784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(FF7)","msgtype":"m.text"},"ts":1323909785000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"now onto FF8","msgtype":"m.text"},"ts":1323909786000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1323909787000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sorry, I meant IE7","msgtype":"m.text"},"ts":1323909788000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh IE7","msgtype":"m.text"},"ts":1323909840000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"to narrow where IE made the namedItem change we talked about before","msgtype":"m.text"},"ts":1323909841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not a huge data point, but worth noting)","msgtype":"m.text"},"ts":1323909842000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"no i don't...","msgtype":"m.text"},"ts":1323909843000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: if you have a windows machine, you can download these images: http://www.microsoft.com/download/en/details.aspx?id=11575","msgtype":"m.text"},"ts":1323909960000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yuck, trying to undo a lot in gmail's editor is *painful*","msgtype":"m.text"},"ts":1323909961000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hold down ^Z, go get a sandwich","msgtype":"m.text"},"ts":1323909962000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"like 1/3 second per undo","msgtype":"m.text"},"ts":1323909963000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh dear...","msgtype":"m.text"},"ts":1323910020000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: ^","msgtype":"m.text"},"ts":1323910021000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: on which UA?","msgtype":"m.text"},"ts":1323910022000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(started typing a mail, decided to copy my text and undo to get the original quotes back)","msgtype":"m.text"},"ts":1323910023000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: ?","msgtype":"m.text"},"ts":1323910080000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"FF8, html editor","msgtype":"m.text"},"ts":1323910081000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ojan: zewt tells me undo on gmail is super slow (takes 1/3 second)","msgtype":"m.text"},"ts":1323910082000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"slow enough that i held ^Z for a while, came here to grumble about it, and it was still going when I tabbed back :)","msgtype":"m.text"},"ts":1323910083000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I think gmail recently switched not to use iframes for editors","msgtype":"m.text"},"ts":1323910140000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: in \"new look\"","msgtype":"m.text"},"ts":1323910141000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: so that might be theculprit.","msgtype":"m.text"},"ts":1323910142000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(replying to hixie's 100-page mails is seriously painful in gmail's editor, but this is just two paragraphs)","msgtype":"m.text"},"ts":1323910143000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: havn't switched to \"new look\" (since google \"new looks\" are always ... not good)","msgtype":"m.text"},"ts":1323910144000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"pine baby","msgtype":"m.text"},"ts":1323910145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: given the choice of pains... :)","msgtype":"m.text"},"ts":1323910200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: sort of funny to see Microsoft distributing tools as RARs","msgtype":"m.text"},"ts":1323910920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: you want to know if skipping whitespace in atob causes issues?","msgtype":"m.text"},"ts":1323910921000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: i did a search of the bts without seeing any problems","msgtype":"m.text"},"ts":1323910922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: so i'm guessing the answer is that it was fine in practice","msgtype":"m.text"},"ts":1323910980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's about all I can do","msgtype":"m.text"},"ts":1323910981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: So I guess so","msgtype":"m.text"},"ts":1323910982000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well i updated the spec","msgtype":"m.text"},"ts":1323910983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to match opera","msgtype":"m.text"},"ts":1323910984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm amused by the e-mail i just sent that mentions a bug that i wontfixed back in 2000","msgtype":"m.text"},"ts":1323911040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"while interning at netscape","msgtype":"m.text"},"ts":1323911041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: You're aware of CORE-38656?","msgtype":"m.text"},"ts":1323911042000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I presume you found that.","msgtype":"m.text"},"ts":1323911043000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which was the original change based upon your proposal to not throw for whitespace.","msgtype":"m.text"},"ts":1323911100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But yeah, nothing seems to break.","msgtype":"m.text"},"ts":1323911101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah zcorpan posted that to the whatwg list which is what led me to have the question","msgtype":"m.text"},"ts":1323911102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't even find the prior evidence for not throwing breaking stuff, though I remember seeing bug reports about it","msgtype":"m.text"},"ts":1323911160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"my evidence was you saying so :-P","msgtype":"m.text"},"ts":1323911220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, I know that was your evidence.","msgtype":"m.text"},"ts":1323911280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh, i've talked to someone on mailing lists, gone \"uh where have I seen this name before\", and realized that it was someone I had talked to on some other mailing list literally exactly one decade earlier","msgtype":"m.text"},"ts":1323911281000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I just can't find the bugs. :P","msgtype":"m.text"},"ts":1323911282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1323911283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl.","msgtype":"m.text"},"ts":1323911400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see ya","msgtype":"m.text"},"ts":1323911401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: Oh, throwing for non-ASCII chars? That's CORE-36226 and all of the dupes","msgtype":"m.text"},"ts":1323911940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is blatantly too tired","msgtype":"m.emote"},"ts":1323911941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"geeh","msgtype":"m.text"},"ts":1323912900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: the result type of these methods depends on whether there's one result or more than one","msgtype":"m.text"},"ts":1323912960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hehehe. great.","msgtype":"m.text"},"ts":1323912961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'd go with D:","msgtype":"m.text"},"ts":1323912962000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"opera doesn't change behaviors","msgtype":"m.text"},"ts":1323913020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: maybe IE behaves differently depending on whether it's on strict mode or not LOL","msgtype":"m.text"},"ts":1323913021000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"well IE6 probably behaves differently depending on if you fed it after midnight","msgtype":"m.text"},"ts":1323913022000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"okay that's a bad comparison because IE6 isn't normally cute and fuzzy","msgtype":"m.text"},"ts":1323913023000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think the weird changing return type is isolated to old IE","msgtype":"m.text"},"ts":1323913080000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"waiting for giganto images to finish downloading to find out how isolated","msgtype":"m.text"},"ts":1323913081000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: ... sorry, no, looks like the difference is pretty common","msgtype":"m.text"},"ts":1323914040000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(opera, chrome)","msgtype":"m.text"},"ts":1323914041000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://tools.ietf.org/html/draft-carpenter-6man-uri-zoneid-00","msgtype":"m.text"},"ts":1323914160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Representing IPv6 Zone Identifiers in Uniform Resource Identifiers\"","msgtype":"m.text"},"ts":1323914161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa: https://zewt.org/~glenn/test-htmlcollection-results.html so looks like the only differences are when there are duplicate ids, which is a much smaller problem (nonconforming anyway)","msgtype":"m.text"},"ts":1323914400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor, ping","msgtype":"m.text"},"ts":1323915120000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"bugzilla bitching at me for using the same form to file two bugs. heh","msgtype":"m.text"},"ts":1323916440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"AryehGregor, when are you around, would you mind commenting on https://www.w3.org/Bugs/Public/show_bug.cgi?id=14887#c3 please.","msgtype":"m.text"},"ts":1323919320000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, in your reply http://www.w3.org/mid/op.v6g563va64w2qv⊙al does that mean I should not bother with making non-Array and Array objects distinguishable for now?","msgtype":"m.text"},"ts":1323919560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, (as well as not worrying about defining dictionary<DOMString>?)","msgtype":"m.text"},"ts":1323919561000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam|away: yeah","msgtype":"m.text"},"ts":1323935460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://twitter.com/bz_moz/status/147229432275415041 context?","msgtype":"m.text"},"ts":1323937980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably http://groups.google.com/group/mozilla.dev.platform/msg/6000e4ce6d744531","msgtype":"m.text"},"ts":1323938280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: and some German news site writing a story about that thread","msgtype":"m.text"},"ts":1323938281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: my guess about context could be wrong","msgtype":"m.text"},"ts":1323938282000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but unlikely","msgtype":"m.text"},"ts":1323938283000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: http://www.golem.de/1112/88347.html","msgtype":"m.text"},"ts":1323938400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: contrast with https://twitter.com/#!/eevee/status/147018826712756225","msgtype":"m.text"},"ts":1323938460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1323938700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"very cool to see responseType=json going into Firefox 10","msgtype":"m.text"},"ts":1323940560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: you got bugs left to fix on View Source?","msgtype":"m.text"},"ts":1323940620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: one regression left in View Source","msgtype":"m.text"},"ts":1323945660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: plus a bunch of features that it logically should have but doesn't","msgtype":"m.text"},"ts":1323945661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1323945662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you aren't using the built-in View Source viewer and are using an external app via a hidden pref, clicking links from the Error Console doesn't work","msgtype":"m.text"},"ts":1323945720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1323945721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yay hidden prefs that I had no idea existed when I was developing the new View Source","msgtype":"m.text"},"ts":1323945780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1323945781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how does one get to activate New New Twitter?","msgtype":"m.text"},"ts":1323947040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't think you can","msgtype":"m.text"},"ts":1323947400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you must wait to be chosen","msgtype":"m.text"},"ts":1323947401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what's a \"threaded web application\"?","msgtype":"m.text"},"ts":1323947460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1323947461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: any context for \"threaded web application\"?","msgtype":"m.text"},"ts":1323947462000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: a Web app that uses Workers maybe?","msgtype":"m.text"},"ts":1323947520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/streams-api/raw-file/tip/Overview.htm","msgtype":"m.text"},"ts":1323947521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: seems to me it means Workers","msgtype":"m.text"},"ts":1323947880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, OK","msgtype":"m.text"},"ts":1323947881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they should say \"workers\" then","msgtype":"m.text"},"ts":1323947882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it would be clearer if it just said \"Workers\"","msgtype":"m.text"},"ts":1323947883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1323947884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1323947885000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"especially since workers are not threads...","msgtype":"m.text"},"ts":1323947940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"depends on implementation","msgtype":"m.text"},"ts":1323947941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I mean as far as the API exposed to Web apps","msgtype":"m.text"},"ts":1323948060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at the JS level","msgtype":"m.text"},"ts":1323948120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1323950460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ?","msgtype":"m.text"},"ts":1323950520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"had a bug in my encoding source data","msgtype":"m.text"},"ts":1323950640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"added http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#preface","msgtype":"m.text"},"ts":1323950820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was `doctype` technically allowed to be lowercase in previous versions of HTML?","msgtype":"m.text"},"ts":1323952200000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1323952800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is it invocation or invokation ?","msgtype":"m.text"},"ts":1323952920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I would assume with c","msgtype":"m.text"},"ts":1323952921000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"websocket spec has invokation","msgtype":"m.text"},"ts":1323952922000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the protocol?","msgtype":"m.text"},"ts":1323952923000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"api","msgtype":"m.text"},"ts":1323952924000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1323952925000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah it's with c","msgtype":"m.text"},"ts":1323952926000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"unless the spec wanted to hotswap to swedish for one word","msgtype":"m.text"},"ts":1323952980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"websocket::send is bad","msgtype":"m.text"},"ts":1323953400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is strange to close the connection so easily","msgtype":"m.text"},"ts":1323953401000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"you mean when the buffer is full?","msgtype":"m.text"},"ts":1323953940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1323954480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think that handling should be different","msgtype":"m.text"},"ts":1323954481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=15209","msgtype":"m.text"},"ts":1323954540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it also says to increase bufferedAmount even if the connection is closed","msgtype":"m.text"},"ts":1323955140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"since it doesn't throw","msgtype":"m.text"},"ts":1323955200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: HTML that pretended to be SGML allowed lower case. HTML that pretended to be XML didn't.","msgtype":"m.text"},"ts":1323955201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*summon Ms2ger*","msgtype":"m.text"},"ts":1323957360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders what the typical response time is for \"summon\"","msgtype":"m.emote"},"ts":1323957361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"renamed the encodings to just use the iso- names http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html","msgtype":"m.text"},"ts":1323958140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"8858-9 and -11 are missing as they are actually a windows- encoding","msgtype":"m.text"},"ts":1323958141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, and -1 is too","msgtype":"m.text"},"ts":1323958142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and -12 does not exist","msgtype":"m.text"},"ts":1323958143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has anyone reviewed \"File API: Directories and System\" ?","msgtype":"m.text"},"ts":1323958620000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and, btw, is any of that implemented elsewhere than in Chrome","msgtype":"m.text"},"ts":1323958621000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think sicking objected to that","msgtype":"m.text"},"ts":1323958680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Apple did not seem interested either","msgtype":"m.text"},"ts":1323958681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(sicking wanted to use Indexed DB instead)","msgtype":"m.text"},"ts":1323958682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno about Opera, we have something similar so I guess there's some interest","msgtype":"m.text"},"ts":1323958683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1323958684000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but no one has reviewed the spec? I don't recall much discussion about that spec in web apps wg","msgtype":"m.text"},"ts":1323958740000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it was discussed during some of the meetings, but mostly on the level of, \"do we actually want to go there\"","msgtype":"m.text"},"ts":1323958741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML5 doesn’t seem to allow `<p//` instead of `<p></p>` anymore — anyone got a spec link for that? or is that hidden away in the parsing algo?","msgtype":"m.text"},"ts":1323958860000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#start-tags","msgtype":"m.text"},"ts":1323958920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1323959040000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: do the following look like what we need?","msgtype":"m.text"},"ts":1323959880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://trac.webkit.org/browser/trunk/LayoutTests/fast/url","msgtype":"m.text"},"ts":1323959881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., http://trac.webkit.org/export/102933/trunk/LayoutTests/fast/url/anchor.html","msgtype":"m.text"},"ts":1323959940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1323960420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: those combined with abarth's sketch might go a long way towards defining URLs","msgtype":"m.text"},"ts":1323960421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1323960422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I'll ping abarth later","msgtype":"m.text"},"ts":1323960423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can i ask something about validator.nu here?","msgtype":"m.text"},"ts":1323961680000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"kuya: yes","msgtype":"m.text"},"ts":1323961980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, for ES6, seems that engines are going to need to need to do mode-switching","msgtype":"m.text"},"ts":1323961981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://lists.webkit.org/pipermail/webkit-dev/2011-December/018903.html","msgtype":"m.text"},"ts":1323961982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what’s the correct name for the “URL part” after the formal public identifier in <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">?","msgtype":"m.text"},"ts":1323961983000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"or embed different engines","msgtype":"m.text"},"ts":1323962040000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"but single bytecode","msgtype":"m.text"},"ts":1323962041000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"im sending a multipart/form request with a field called content to validator.nu but whatever i do cant get it to return anything but html output. iv tried adding it to the url and to the form data but no joy - does it actually work?","msgtype":"m.text"},"ts":1323962042000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"matjas: transitional doesn't need <p>","msgtype":"m.text"},"ts":1323962043000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: i know, just want to learn the correct technical name","msgtype":"m.text"},"ts":1323962100000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"oooh no i didn’t know that","msgtype":"m.text"},"ts":1323962101000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: http://validator.w3.org/#validate_by_input says <!DOCTYPE html PUBLIC\"-//W3C//DTD HTML 4.01 Transitional//EN\"><title// is invalid","msgtype":"m.text"},"ts":1323962160000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: I think you mean the \"system ID\"?","msgtype":"m.text"},"ts":1323962161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kuya: yeah, it works","msgtype":"m.text"},"ts":1323962162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gimme a minute to fine an example","msgtype":"m.text"},"ts":1323962163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i just read the bit i was doing wrong!","msgtype":"m.text"},"ts":1323962164000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"MikeSmith: it is still called “System ID” if it’s a PUBLIC identifier?","msgtype":"m.text"},"ts":1323962165000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: I suppose that’s a bug in the W3C Validator then?","msgtype":"m.text"},"ts":1323962220000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"the public ID is the non-URL part","msgtype":"m.text"},"ts":1323962221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it didnt work in the url but i was specifying out=json after the content=<whatever>","msgtype":"m.text"},"ts":1323962222000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"MikeSmith: oh, i see","msgtype":"m.text"},"ts":1323962223000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: it needs body content","msgtype":"m.text"},"ts":1323962224000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"kuya: I see. So you ahve it working now?","msgtype":"m.text"},"ts":1323962225000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The content field must be the last field in the submission. \" was what i was missing","msgtype":"m.text"},"ts":1323962226000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"what a strange prerequisite","msgtype":"m.text"},"ts":1323962227000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"zcorpan: gotcha. <!DOCTYPE html PUBLIC\"-//W3C//DTD HTML 4.01 Transitional//EN\"><title//x it is","msgtype":"m.text"},"ts":1323962280000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: thanks!","msgtype":"m.text"},"ts":1323962281000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"kuya: fwiw, when I test the REST API with curl, I run it like this: curl --data-binary @foo.html -H \"Content-Type: text/html\" \"http://localhost:8888/?out=gnu\"","msgtype":"m.text"},"ts":1323962460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"matjas: are you sure iso html doesn't allow omitting tags etc?","msgtype":"m.text"},"ts":1323962520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think I created a test of some sorts","msgtype":"m.text"},"ts":1323962521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iv been trying to validate bits of html via a browser in some sort of automated way","msgtype":"m.text"},"ts":1323962522000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"which turns out to be quite a pita with jquery","msgtype":"m.text"},"ts":1323962580000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"sigh. <!DOCTYPE html><math><mtext><p><i></p>a","msgtype":"m.text"},"ts":1323962581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: not sure at all, but validator.w3.org says it’s invalid","msgtype":"m.text"},"ts":1323962582000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: system identifier","msgtype":"m.text"},"ts":1323962640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1323962700000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Note that the xmlns attribute on the root <html> element isn’t required in this version of XHTML. [citation needed]","msgtype":"m.text"},"ts":1323962701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no citation, just the result of trial and error using validator.w3.org :')","msgtype":"m.text"},"ts":1323962760000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1323962761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"kuya: the validator wants to ingest the form data in a streaming way in case the document is huge. it doesn't reorder fields on the server, so it wants to see the fields that set up the validation options before it seess the document","msgtype":"m.text"},"ts":1323962762000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: is it a validator bug?","msgtype":"m.text"},"ts":1323962820000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: xmlns is required if the recipient isn't processing external entities","msgtype":"m.text"},"ts":1323962821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: it's an XML design bug","msgtype":"m.text"},"ts":1323962822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1323962823000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: or a design bug in the XHTML 1.0 DTD, depending on your world view","msgtype":"m.text"},"ts":1323962824000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: dunno, i try not to spend my time on reading XHTML2 WG deliverables these days","msgtype":"m.text"},"ts":1323962880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: the DTD, if processed, implies the attribute on the XML 1.0 layer before the XMLNS layer does its thing","msgtype":"m.text"},"ts":1323962881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"matjas: but XML doesn't guaranteed DTD processing","msgtype":"m.text"},"ts":1323962940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i see, fair enuff. it was there in the docs so its my own fault :)","msgtype":"m.text"},"ts":1323962941000,"senderName":"kuya","senderId":"kuya@irc"},
{"content":{"body":"s/d//","msgtype":"m.text"},"ts":1323962942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Opera is more compliant than Firefox with <!DOCTYPE html><math><mtext><p><i></p>a","msgtype":"m.text"},"ts":1323963000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i ♥ these hardcore write-up reviews","msgtype":"m.text"},"ts":1323963001000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"not exactly fast... http://dump.testsuite.org/encoding/single-octet-test.html","msgtype":"m.text"},"ts":1323963002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dreamhost latency","msgtype":"m.text"},"ts":1323963003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: an out of band mode switch for JS seems like a bad thing","msgtype":"m.text"},"ts":1323964260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah","msgtype":"m.text"},"ts":1323964740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but sounds like that's where things are headed","msgtype":"m.text"},"ts":1323964741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"isn't the script type effectively deprecated, given that you can't even specify it with worker ctors, importScripts, etc","msgtype":"m.text"},"ts":1323965040000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess you could restrict to importing scripts of the same version, but that would be pretty nasty","msgtype":"m.text"},"ts":1323965100000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"someone should inform TC39 how ECMAScript is used in a browser...","msgtype":"m.text"},"ts":1323965101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the mere idea of having to specify @type to <script> again would make me want to throw food","msgtype":"m.text"},"ts":1323965102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"vacuum dev--","msgtype":"m.text"},"ts":1323965103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is anyone going to take that up with es-discuss?","msgtype":"m.text"},"ts":1323965280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg, forgot that doctype is optional in XHTML","msgtype":"m.text"},"ts":1323965340000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: not cool","msgtype":"m.text"},"ts":1323965400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ლ(ಠ益ಠლ) y u no tell me‽","msgtype":"m.text"},"ts":1323965460000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"having one person suggest mislabelling caption tracks in webvtt as metadata tracks (and write your own cue renderer in javascript) and having someone@microsoft nod agreement makes me sad for the world","msgtype":"m.text"},"ts":1323965640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah i saw that :-/","msgtype":"m.text"},"ts":1323965880000,"senderName":"ksweeney","senderId":"ksweeney@irc"},
{"content":{"body":"zewt: filed https://bugs.webkit.org/show_bug.cgi?id=74610 on removing UTF-7 and UTF-32 from Webkit/Chromium","msgtype":"m.text"},"ts":1323966720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, see how it goes","msgtype":"m.text"},"ts":1323966780000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I wonder if I should first start defining multi-octet encodings by reference with rules on top","msgtype":"m.text"},"ts":1323966840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: obscure as it is, trying to get them to either fix or remove ibm864 would be nice, since it's the only encoding here that screws with the ASCII range","msgtype":"m.text"},"ts":1323966841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: you mean Gecko?","msgtype":"m.text"},"ts":1323966842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anything else come to mind (outside of wide encodings) that breaks the \"all encodings are supersets of ascii\" rule?","msgtype":"m.text"},"ts":1323966843000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"actually, both, i guess :(","msgtype":"m.text"},"ts":1323966900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ooh yes","msgtype":"m.text"},"ts":1323966901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebKit/Chromium has some weird shit going on for all IBM encodings","msgtype":"m.text"},"ts":1323966902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's such an insanely noninteroperable encoding (remapping %? really?) that it seems to strongly suggest no to \"is this encoding in use\"","msgtype":"m.text"},"ts":1323966903000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh yeah didn't notice the one in ibm866","msgtype":"m.text"},"ts":1323966960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but Chromium only supports ibm864 and I think it is only because of WebKit, not because they want to","msgtype":"m.text"},"ts":1323966961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and Gecko supports a whole lot of IBM encodings","msgtype":"m.text"},"ts":1323966962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"muh","msgtype":"m.text"},"ts":1323967020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"doesn't seem worth spending a lot of time pushing uphill for those encodings, but nailing down the ASCII range would be a nice win","msgtype":"m.text"},"ts":1323967021000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but that does not seem needed for interoperability","msgtype":"m.text"},"ts":1323967022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"given that Chrome does not support ibm866 and Opera does not support ibm864 I think we can get all IBM stuff removed","msgtype":"m.text"},"ts":1323967080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kind of weird","msgtype":"m.text"},"ts":1323967620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whenever you file a bug on WebKit it's like it goes into a void unless you find some people to cc","msgtype":"m.text"},"ts":1323967621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whenever you file a bug on Gecko a whole bunch of people are paying attention","msgtype":"m.text"},"ts":1323967622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though that doesn't necessarily mean anyone who can do anything with it :P","msgtype":"m.text"},"ts":1323967680000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: People have a similar WebKit experience with Opera and IE, I guess.","msgtype":"m.text"},"ts":1323967740000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1323967741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, you'll have that with any large project; how often is more the question","msgtype":"m.text"},"ts":1323967742000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"after I saw what happened with the bugs zcorpan submitted to IE I stopped bothering","msgtype":"m.text"},"ts":1323967800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What happened?","msgtype":"m.text"},"ts":1323967801000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Velmont: resolved WONTFIX because they didn't make it for the release...","msgtype":"m.text"},"ts":1323968040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"very... stereotypically microsoft","msgtype":"m.text"},"ts":1323968041000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"... :|","msgtype":"m.text"},"ts":1323968100000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Velmont, hey, you got my message about the W3C mercurial repo?","msgtype":"m.text"},"ts":1323968101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you should be set up with perms to push to that repo now","msgtype":"m.text"},"ts":1323968102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can't remember now which one it was","msgtype":"m.text"},"ts":1323968160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but whatever one you asked about","msgtype":"m.text"},"ts":1323968161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yep! I moved webkit tests into submissions/.  I've been stalled on other stuff now. :-) But I'm actually looking through them now.","msgtype":"m.text"},"ts":1323968162000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1323968163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm a bit too afraid to just push, -- but, well, release early and often, can iterate and fix stuff later I guess ,-)","msgtype":"m.text"},"ts":1323968164000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1323968165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's what the submissions area's for, anyway","msgtype":"m.text"},"ts":1323968220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"filing Opera bugs has been really difficult. Few times the form has just failed (giving some server errors), and other times I've got some emails asking more information, but that is quite annoying way to handle bugs","msgtype":"m.text"},"ts":1323968280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Opera should just open their bug database ;)","msgtype":"m.text"},"ts":1323968340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no browser's bug handling makes me very inclined to file bugs","msgtype":"m.text"},"ts":1323968341000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i do from time to time but they're all ... unmotivating","msgtype":"m.text"},"ts":1323968400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we clearly need to gamify bug-filing","msgtype":"m.text"},"ts":1323968401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1323968402000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"badges..","msgtype":"m.text"},"ts":1323968403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"achievements unlocked","msgtype":"m.text"},"ts":1323968460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there should be some common bug database for browser bugs, at least for cases when browsers don't implement some API","msgtype":"m.text"},"ts":1323968461000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the bug could have fields for different browser engines.","msgtype":"m.text"},"ts":1323968520000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sounds more like a reference registry than a bug tracker","msgtype":"m.text"},"ts":1323968580000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, whatever it is called","msgtype":"m.text"},"ts":1323968640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Mozilla uses bugzilla for everything","msgtype":"m.text"},"ts":1323968641000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Sooo... When we have a nice big w3c-test.org with a cool test runner and all, that can be a nice reference :-)","msgtype":"m.text"},"ts":1323968642000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"I guess at some point I should tell whatwg⊙wo about the encoding standard...","msgtype":"m.text"},"ts":1323968700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shhh","msgtype":"m.text"},"ts":1323968701000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's not exactly a secret, but still :)","msgtype":"m.text"},"ts":1323968760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm afraid to find out what error handling interop looks like for multibyte encodings","msgtype":"m.text"},"ts":1323968761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"at least most encodings don't have as many error cases as utf-8, so there aren't quite so many ways they can differ","msgtype":"m.text"},"ts":1323968820000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk5, that's pretty much my experience submitting patches to Mozilla/WebKit. I guess the following data might explain this somehow.","msgtype":"m.text"},"ts":1323969840000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Summarizing 175 emails randomly selected from www-style: 31.4% Unkown Affliation, 24.6% Mozilla (5 people), 22.9% Google (1 people, that is TabAtkins), 13.7% Opera (3 people), 2.3% Microsoft (2 people), 1.1% Apple (1 person).","msgtype":"m.text"},"ts":1323969960000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"I guess you get similar figures if you count mails from whatwg⊙wo too.","msgtype":"m.text"},"ts":1323970080000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Well, except Micorsoft.","msgtype":"m.text"},"ts":1323970081000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"I'd guess Opera gets higher numbers in WhatWG","msgtype":"m.text"},"ts":1323970200000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk5, in this case about 3h30","msgtype":"m.text"},"ts":1323970500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk5: http://dvcs.w3.org/hg/webappsec/rev/8a0775f6d0eb","msgtype":"m.text"},"ts":1323971580000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Velmont: sweet","msgtype":"m.text"},"ts":1323972180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Velmont: did you tweet it?","msgtype":"m.text"},"ts":1323972240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Will do, -- but sending email first.","msgtype":"m.text"},"ts":1323972241000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"way to set your priorities :p","msgtype":"m.text"},"ts":1323972242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: what was the problem with patching Gecko for the encoding stuff?","msgtype":"m.text"},"ts":1323972720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: you said something earlier about a table that was hard to comprehend","msgtype":"m.text"},"ts":1323972721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvlatin/cp874.ut","msgtype":"m.text"},"ts":1323972780000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: also, what about http://krijnhoetmer.nl/irc-logs/whatwg/20111215#l-1037 ?","msgtype":"m.text"},"ts":1323972840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't know anything about multi-byte encodings","msgtype":"m.text"},"ts":1323972841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that is a weird table","msgtype":"m.text"},"ts":1323972960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it does seem like you should simply replace the FFFDs in that table with the code points from the standard","msgtype":"m.text"},"ts":1323973080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"weird but understandable, with a bit of squinting","msgtype":"m.text"},"ts":1323973081000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger: but then it says that file is generated so maybe you should fix the source file","msgtype":"m.text"},"ts":1323973082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's what it says, yes","msgtype":"m.text"},"ts":1323973140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I've never found a source file","msgtype":"m.text"},"ts":1323973141000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess you should ask smontagu","msgtype":"m.text"},"ts":1323973200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1323973201000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that file was added to cvs 1999","msgtype":"m.text"},"ts":1323973202000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, you don't have up-to-date contact details for ftang? :)","msgtype":"m.text"},"ts":1323973260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"better contact Netscape Client International Team, then","msgtype":"m.text"},"ts":1323973261000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1323973262000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ftang may still be alive, I'm pretty sure NSIT isn't","msgtype":"m.text"},"ts":1323973320000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it seems last time around you patched the source file Ms2ger","msgtype":"m.text"},"ts":1323973321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. looking at the change log of http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvlatin/8859-13.ut","msgtype":"m.text"},"ts":1323973380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Eh?","msgtype":"m.text"},"ts":1323973381000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"haa, Ms2ger owns the file then !","msgtype":"m.text"},"ts":1323973440000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In that case...","msgtype":"m.text"},"ts":1323973441000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Want to submit a patch to remove it? smaug____ claims I own it :)","msgtype":"m.text"},"ts":1323973442000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"see e.g. https://bug577945.bugzilla.mozilla.org/attachment.cgi?id=521559","msgtype":"m.text"},"ts":1323973500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I cannot write the spec, the test, and the implementation","msgtype":"m.text"},"ts":1323973501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I can","msgtype":"m.text"},"ts":1323973502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm afraid of being called a monopoly","msgtype":"m.text"},"ts":1323973503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger has too many personalities, they can't keep up with what each others have been doing. :)","msgtype":"m.text"},"ts":1323973504000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: sounds like http://thebjoernhoehrmannproject.org/ :p","msgtype":"m.text"},"ts":1323973560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know I changed the ut/uf files, yes","msgtype":"m.text"},"ts":1323973561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh, the scripts in there refer to files that google's never even heard of ... except in the scripts","msgtype":"m.text"},"ts":1323973620000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's what happens when people make the mistake of committing generated files to version control","msgtype":"m.text"},"ts":1323973621000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and that is also an example what happens when commit message doesn't have bug number","msgtype":"m.text"},"ts":1323973680000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I like how encodings are backed by probably four distinct implementations and how Google and Apple use ICU with different settings too, so maybe 4.5","msgtype":"m.text"},"ts":1323973740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(... that = you lose the source file and everyone gives up and just starts modifying the output)","msgtype":"m.text"},"ts":1323973741000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"var i = 10; while(i --> 0);","msgtype":"m.text"},"ts":1323973742000,"senderName":"bga","senderId":"bga@irc"},
{"content":{"body":"oh actually, iconv is ICU too I guess","msgtype":"m.text"},"ts":1323973800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i wonder how much microsoft's big CJK codepage tables have changed over the years","msgtype":"m.text"},"ts":1323973860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i think \"sorting it all out\" could tell you","msgtype":"m.text"},"ts":1323974700000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"http://blogs.msdn.com/b/michkap/","msgtype":"m.text"},"ts":1323974760000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"annevk: So, dented (and identi.ca will probably send it to twitter automatically soonish IIRC).","msgtype":"m.text"},"ts":1323975480000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"annevk, any chance you could generate http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/PC/CP864.TXT-style tables? :)","msgtype":"m.text"},"ts":1323977460000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The requested URL /Public/MAPPINGS/VENDORS/MICSFT/PC/CP864.TXT-style was not found on this server. :P","msgtype":"m.text"},"ts":1323977520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what's the right spec to look at for figuring out the correct return values for getComputedStyle?","msgtype":"m.text"},"ts":1323977580000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"mdn claims to use used value from css2.1","msgtype":"m.text"},"ts":1323977640000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"cssom or -view","msgtype":"m.text"},"ts":1323977641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ah, thanks","msgtype":"m.text"},"ts":1323977642000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Ms2ger: you know you're looking at stuff from a prior era when a text file actually ends with a ^Z","msgtype":"m.text"},"ts":1323977700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1323977701000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger. annevk: http://dev.w3.org/csswg/cssom/#resolved-value doesn't say what to do with shorthands","msgtype":"m.text"},"ts":1323977702000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"That or the IETF is involved","msgtype":"m.text"},"ts":1323977703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that's what I said","msgtype":"m.text"},"ts":1323977760000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(roundabout ietf burn)","msgtype":"m.text"},"ts":1323977761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: also, \"computed value\" is not defined anywhere in the spec...presumably it needs to link to the appropriate CSS spec","msgtype":"m.text"},"ts":1323977820000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1323978240000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"zewt: have you read sorting it all out?","msgtype":"m.text"},"ts":1323978300000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"annevk, also, can you please update https://bitbucket.org/annevk/webencodings?","msgtype":"m.text"},"ts":1323978480000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh, zewt, if you're looking for disasters","msgtype":"m.text"},"ts":1323978840000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"i have one for you","msgtype":"m.text"},"ts":1323978841000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"timeless: havn't read much of it","msgtype":"m.text"},"ts":1323978900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: I think it is generally accepted that we would like an open bug tracker but there are significant technical challenges","msgtype":"m.text"},"ts":1323980880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We were joking about maybe getting it as the company provided xmas gift this year. <3","msgtype":"m.text"},"ts":1323981120000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"That would be even weirder than the year that everyone got a whole Norwegian salmon","msgtype":"m.text"},"ts":1323981180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"which had to be taken on the train to Sweden","msgtype":"m.text"},"ts":1323981181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(this was long before I joined though)","msgtype":"m.text"},"ts":1323981240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: was it alive?","msgtype":"m.text"},"ts":1323981241000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"jgraham: is setting up a bugzilla really that difficult ;)","msgtype":"m.text"},"ts":1323981480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: setting is never hard","msgtype":"m.text"},"ts":1323981540000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Ms2ger: what do you want to have there?","msgtype":"m.text"},"ts":1323981541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ojan: I gave up on CSS","msgtype":"m.text"},"ts":1323981542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"> For the record, I replaced the word he used with freaking there. He used 𝓕𝓾𝓬𝓴𝓲𝓷𝓰 only he didn't do something clever with Unicode to avoid the publish filters.","msgtype":"m.text"},"ts":1323981543000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"fitting into a context and managing on a long term is always the issue.","msgtype":"m.text"},"ts":1323981544000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"The things I fixed in Gecko last year","msgtype":"m.text"},"ts":1323981545000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"chuckles","msgtype":"m.emote"},"ts":1323981546000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Velmont: if you're in Norway, i think the best company gift would be butter :)","msgtype":"m.text"},"ts":1323981600000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Ms2ger: okay","msgtype":"m.text"},"ts":1323981601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: for the Unicode-style tables, is it okay without the third column?","msgtype":"m.text"},"ts":1323981602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and what is the use case?","msgtype":"m.text"},"ts":1323981660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"timeless: lol, Opera gave us loads of butter yesterday for the «risgraut» (rice porridge) we were having.","msgtype":"m.text"},"ts":1323981661000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"smontagu pointed me at the tool that generates those tables","msgtype":"m.text"},"ts":1323981662000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And that's what they take","msgtype":"m.text"},"ts":1323981663000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: What karlcow said, mostly. The problem is more how to synchronise with our existing bugtracker which has some mix of stuff that anyone could know and internal-only stuff","msgtype":"m.text"},"ts":1323981664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*it takes","msgtype":"m.text"},"ts":1323981665000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: fork the \"security bug\" (hidden) flag to \"private bug\", and just set it to true for existing bugs?","msgtype":"m.text"},"ts":1323981720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Velmont: what's your twitter?","msgtype":"m.text"},"ts":1323981721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The butter crisis is evidence that Sweden is ahead of Norway; we had that months ago","msgtype":"m.text"},"ts":1323981722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think leaving out the last column should work","msgtype":"m.text"},"ts":1323981723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"     if(buf[0]=='0' && buf[1] == 'x')","msgtype":"m.text"},"ts":1323981724000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"        {","msgtype":"m.text"},"ts":1323981725000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"          sscanf(buf,\"%hx %hx\",&c,&u);","msgtype":"m.text"},"ts":1323981726000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"then they can be unhidden on a case-by-case basis and reporters can decide as they want for future bugs","msgtype":"m.text"},"ts":1323981780000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: I'm Velmont on identi.ca and my ghosting twitter-account.","msgtype":"m.text"},"ts":1323981781000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Velmont: sorry, it was just a hilarious news article to encounter","msgtype":"m.text"},"ts":1323981782000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"zewt: Of course solutions exist but you know how it is, you need to decide waht works and then get lots of buy in","msgtype":"m.text"},"ts":1323981783000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: I can also put #PLACEHOLDER there or some such if that is better","msgtype":"m.text"},"ts":1323981784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: fwiw, bugzilla bug groups are a lot more than \"security bug\"","msgtype":"m.text"},"ts":1323981785000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Ms2ger: rather not make things too fancy","msgtype":"m.text"},"ts":1323981786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1323981787000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's trivial to make all old bugs \"opera confidential\"","msgtype":"m.text"},"ts":1323981788000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"timeless: yes, bugzilla is notoriously massively overcomplicated :P","msgtype":"m.text"},"ts":1323981840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Having just 0xab 0xcdef should work, I think","msgtype":"m.text"},"ts":1323981841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and then let users file bugs as \"public\" (no group), \"security\" (security group), or \"private\" (another group)","msgtype":"m.text"},"ts":1323981842000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Or the \"timeless\" group, of course","msgtype":"m.text"},"ts":1323981843000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: bugzilla has an Asa group","msgtype":"m.text"},"ts":1323981900000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"jgraham: but that's not a technical challenge at all, just a political one","msgtype":"m.text"},"ts":1323981901000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"err s/has/had/","msgtype":"m.text"},"ts":1323981902000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Right, this is the sort of thing where it sounds like it ought to be easy in principle but in practice there are a lot of details that get in the way","msgtype":"m.text"},"ts":1323981903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"getting security and private to work requires a bit of trickery, the easiest way is 3 public products:","msgtype":"m.text"},"ts":1323981904000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Well, you say \"had\", but how can I know that? :)","msgtype":"m.text"},"ts":1323981905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Normal","msgtype":"m.text"},"ts":1323981906000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Security","msgtype":"m.text"},"ts":1323981907000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Private","msgtype":"m.text"},"ts":1323981908000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"where the Security group has a mandatory mark for the security group","msgtype":"m.text"},"ts":1323981909000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"and similar for private","msgtype":"m.text"},"ts":1323981910000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"and normal users aren't in either group","msgtype":"m.text"},"ts":1323981960000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"then you allow the various products to have bugs from Opera-confi, and Security/Private","msgtype":"m.text"},"ts":1323981961000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Ms2ger: i'm too lazy to check to see if the group is still present","msgtype":"m.text"},"ts":1323981962000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"remember that i have at times had editproducts/editgroupaccess controls","msgtype":"m.text"},"ts":1323981963000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"my favorite group was a group w/ 5 bugs","msgtype":"m.text"},"ts":1323981964000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"of course i can't actually look things up right now, mozilla.org is having issues","msgtype":"m.text"},"ts":1323982440000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"Yeah, the PHX datacenter broke down","msgtype":"m.text"},"ts":1323982441000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: should I just check them into dcvs?","msgtype":"m.text"},"ts":1323982620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I will","msgtype":"m.text"},"ts":1323982621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That works too","msgtype":"m.text"},"ts":1323982680000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: http://dvcs.w3.org/hg/encoding/rev/3bf01afcf6e5","msgtype":"m.text"},"ts":1323982681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1323982740000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I should check my Python scripts in too at some point","msgtype":"m.text"},"ts":1323982800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe when I feel I can handle the embarrassment","msgtype":"m.text"},"ts":1323982801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh right...forgot. someone else volunteered to take over cssom, right?","msgtype":"m.text"},"ts":1323982802000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"yes glenn and shane","msgtype":"m.text"},"ts":1323982860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1323982861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"glenn asked a bunch of questions, but I'm not sure anything happened","msgtype":"m.text"},"ts":1323982862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"your issue about computed style is probably already in http://lists.w3.org/Archives/Public/www-archive/2011Dec/0010.html","msgtype":"m.text"},"ts":1323982863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm not sure if they will go through that","msgtype":"m.text"},"ts":1323982864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sicking: when you argue that if people do things on the web it means they think it's the better thing... are you taking into account that they might not have any idea what they're doing? :-)","msgtype":"m.text"},"ts":1323983160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sure, it's not a great argument","msgtype":"m.text"},"ts":1323983161000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: but at least we can be informed by looking at how they used it","msgtype":"m.text"},"ts":1323983162000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: i think saying that only functions is the better way of doing callbacks, you are saying that people shouldn't use object-oriented programming style","msgtype":"m.text"},"ts":1323983220000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"should point that out","msgtype":"m.emote"},"ts":1323983221000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Ms2ger: the problem with updating webencodings is that I don't have up to date information for Opera on Windows","msgtype":"m.text"},"ts":1323983222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sicking: I fixed the status checked on state OPENED test problem, btw, so gecko's all green on it now.","msgtype":"m.text"},"ts":1323983223000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Ms2ger: maybe I should just remove that and hope we get it straight at some point","msgtype":"m.text"},"ts":1323983280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Velmont: sweet","msgtype":"m.text"},"ts":1323983281000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: No, that's a silly point.  Object-oriented doesn't necessarily include using a JS Object.","msgtype":"m.text"},"ts":1323983340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Using closures to encapsulate data in a function is OO as well.","msgtype":"m.text"},"ts":1323983341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it functions, by wrapping your OO code in non-oo","msgtype":"m.text"},"ts":1323983400000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"You have a pretty restricted view of what OO means.","msgtype":"m.text"},"ts":1323983520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i know that I'm annoyed any time I have to do that when I'm writing code in C++","msgtype":"m.text"},"ts":1323983580000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: i.e. any time i'm interacting with c-style APIs that take a closure","msgtype":"m.text"},"ts":1323983640000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Sure, because C++ is really crappy for functional code, so using functional OO style is also really crappy.","msgtype":"m.text"},"ts":1323983641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not sure what you mean by \"functional OO\"","msgtype":"m.text"},"ts":1323983642000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i take it you don't mean functional in the sense of programming languages that don't modify state","msgtype":"m.text"},"ts":1323983643000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"No, I mean in terms of functions being first-class objects.  Sorry for these terms having multiple meaning. ;_;","msgtype":"m.text"},"ts":1323983700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My point is that data-hiding with a Function object is just as OO as doing the same with an Object object.","msgtype":"m.text"},"ts":1323983701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, should we expose canvas' children when scripting is disabled?","msgtype":"m.text"},"ts":1323983820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Philip`? :)","msgtype":"m.text"},"ts":1323983821000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That might make sense, yeah.","msgtype":"m.text"},"ts":1323983880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, the spec actually suggests that","msgtype":"m.text"},"ts":1323984000000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh the flamewar about programming styles failed to get going, I see. Probably all the rain making everything damp.","msgtype":"m.text"},"ts":1323984180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Obviously python is the best language ever","msgtype":"m.text"},"ts":1323984181000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But only if written with emacs","msgtype":"m.text"},"ts":1323984240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sicking: i don't want to add more noise to that thread...","msgtype":"m.text"},"ts":1323984241000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"hang on, on phone","msgtype":"m.text"},"ts":1323984242000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: i guess i don't feel super strongly about this...we have bigger fish to fry wit the web platform","msgtype":"m.text"},"ts":1323984243000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"sicking: the whole thing just smells of useless bloat to me","msgtype":"m.text"},"ts":1323984300000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"do I even want to know","msgtype":"m.text"},"ts":1323984301000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"doesn't understand why \"useless\"","msgtype":"m.emote"},"ts":1323984420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"callback objects are very handy in some cases","msgtype":"m.text"},"ts":1323984421000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is why they are used as event listeners","msgtype":"m.text"},"ts":1323984422000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyone mind giving me some context here?","msgtype":"m.text"},"ts":1323984540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1323984541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":|","msgtype":"m.text"},"ts":1323984600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: It's about things that can take either a function or an object {handleEvent:function(){}}","msgtype":"m.text"},"ts":1323984720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i've never really understood the purpose of that (the latter)","msgtype":"m.text"},"ts":1323984721000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"There are people who want to allow more of the latter, but with different names","msgtype":"m.text"},"ts":1323984722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"much cleaner to do eg. addEventListener(\"event\", obj.func.bind(obj), false)","msgtype":"m.text"},"ts":1323984723000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"depending on the type of thing","msgtype":"m.text"},"ts":1323984724000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which I do all the time)","msgtype":"m.text"},"ts":1323984725000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think we have different definitions of \"cleaner\"","msgtype":"m.text"},"ts":1323984780000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"There are people who want to make both forms work everywhere just as stated","msgtype":"m.text"},"ts":1323984781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"possible","msgtype":"m.text"},"ts":1323984782000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"obj.func.bind(obj)  seems more messy than  obj  to me","msgtype":"m.text"},"ts":1323984783000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it's nice how python basically does that for you, but doing the binding manually i've never found to be a big deal","msgtype":"m.text"},"ts":1323984784000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and there are people who want to pretend that the second form doesn't exist and stop adding new instances of it","msgtype":"m.text"},"ts":1323984785000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think the binding thing is something that you have to live with in javascript","msgtype":"m.text"},"ts":1323984840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the only negative to binding manually in javascript is it makes unbinding harder (but that can be solved in other ways)","msgtype":"m.text"},"ts":1323984841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(removeEventListener, I mean)","msgtype":"m.text"},"ts":1323984842000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't think changing this one thing is going to make it so that people don't have to understand how binding works in general","msgtype":"m.text"},"ts":1323984900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sicking: i find passing in an object and having to know that some magically-named member function will be called to be fairly unpleasant, FWIW","msgtype":"m.text"},"ts":1323984901000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: so you don't like the UndoManager API then?","msgtype":"m.text"},"ts":1323984902000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i havn't looked at it","msgtype":"m.text"},"ts":1323984960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: understanding how the bind() method works is something I consider basic, mandatory knowledge--maybe just because I use it so much to work around JS's crappy basic behavior for member functions, but just the same","msgtype":"m.text"},"ts":1323985080000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i think python's method binding is one of its greatest features--too bad that doesn't help us at all)","msgtype":"m.text"},"ts":1323985140000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: how is anything \"magically-named\" ?","msgtype":"m.text"},"ts":1323985141000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is defined in the API","msgtype":"m.text"},"ts":1323985142000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"addEventListener is \"magically-named\"","msgtype":"m.text"},"ts":1323985143000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if I call addEventListener(..., foo.func, false), it's very clear and immediate what's going to be called; much less so for passing in an object","msgtype":"m.text"},"ts":1323985200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: I think the design is way more defensible if you have a group of things that you have to pass together","msgtype":"m.text"},"ts":1323985201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: pushed an update to bitbucket","msgtype":"m.text"},"ts":1323985202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"expanding that to other types of callbacks, with different names, would seem a very bad way forward (feels Ruby-ish)","msgtype":"m.text"},"ts":1323985203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1323985260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(or Java-ish, if you like)","msgtype":"m.text"},"ts":1323985261000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger: I guess I should host the new table somewhere","msgtype":"m.text"},"ts":1323985262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll have another look later","msgtype":"m.text"},"ts":1323985263000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: which it would be if the functions had different names and you listened for several things, no?","msgtype":"m.text"},"ts":1323985264000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jgraham: if it's a complex interface where you have to pass in a tightly-coupled set of callbacks, then yeah, I might buy that more","msgtype":"m.text"},"ts":1323985265000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger: I guess one more thing I can do is to make the spec definitions a \"browser\"","msgtype":"m.text"},"ts":1323985320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: for comparison purposes","msgtype":"m.text"},"ts":1323985321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That would be nice, if it isn't too hard","msgtype":"m.text"},"ts":1323985322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"shouldn't be in theory","msgtype":"m.text"},"ts":1323985323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sicking: That isn't how it works in the event case though. And it isn't really clear why that would be a logical way to group things","msgtype":"m.text"},"ts":1323985324000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe if the API was addEventListener({click:function(){}, mouseover:function(){}) etc.","msgtype":"m.text"},"ts":1323985380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the object allows one to store state easily","msgtype":"m.text"},"ts":1323985440000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and in that case we would probably want the whole jQuery-style delegates thing)","msgtype":"m.text"},"ts":1323985441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: Well, state is evil ;)","msgtype":"m.text"},"ts":1323985442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but seriously, if you need to store state there is no difficulty)","msgtype":"m.text"},"ts":1323985500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"some states only :)","msgtype":"m.text"},"ts":1323985501000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Arizona?","msgtype":"m.text"},"ts":1323985560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"while i don't buy into it *too* much, there's also something to be said for python's \"only have one way to do things\" philosophy--i don't see benefits to eg. handleEvent to offset splitting users down the middle and having everyone using basic APIs in two very different ways, in what seems mostly a style difference","msgtype":"m.text"},"ts":1323985561000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(eat run-on sentence, IRC)","msgtype":"m.text"},"ts":1323985620000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dashes are the new period","msgtype":"m.text"},"ts":1323985621000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: in the blob reader callback api briefly discussed recently, i had suggested an interface like that, actually; it made sense there, since it was implementing an interface with several different tightly-related callbacks","msgtype":"m.text"},"ts":1323985920000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since it was reduced down to one function I was going to suggest dropping that and just using a simple callback (don't think I bothered, since iirc we agreed the api probably wasn't worth it)","msgtype":"m.text"},"ts":1323985980000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sweet I think I made it work","msgtype":"m.text"},"ts":1323987480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/encoding/raw-file/tip/single-octet-research.html","msgtype":"m.text"},"ts":1323987900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1323987901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I am curious again about how much difference there is between the Chromium and WebKit trunk regarding Web standards. This one didn't get into WebKit trunk it seems → http://code.google.com/p/chromium/issues/detail?id=69594","msgtype":"m.text"},"ts":1323988800000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"WebKit trunk is explicitly the Chromium trunk + a few things that are restricted by licenses/patents/etc.","msgtype":"m.text"},"ts":1323988860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems rather odd for a bug to go \"this is explicitly disallowed for security reasons\" and then \"okay, implemented anyway\"","msgtype":"m.text"},"ts":1323988980000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"???\"","msgtype":"m.text"},"ts":1323988981000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(havn't touched appcache myself so not going to dig at it)","msgtype":"m.text"},"ts":1323988982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: i don't see how passing an object that has a function is any more \"object orientated\" than passing a function whose closure has that object","msgtype":"m.text"},"ts":1323989040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: the security concern already applied","msgtype":"m.text"},"ts":1323989041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kennyluck: Chromium has an separate private implementation of AppCache","msgtype":"m.text"},"ts":1323989042000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"zewt: to prevent the attack you need a header and that also prevents app cache","msgtype":"m.text"},"ts":1323989100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: so would you say that c-style structs are as object oriented as c++ classes?","msgtype":"m.text"},"ts":1323989101000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but in any case, while i think the \"pass an object with a function\" mechanism is pointless given that we have closures, i am not arguing against it. I'm just arguing against having lots of callbacks with lots of different names.","msgtype":"m.text"},"ts":1323989102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: (it's not at all)","msgtype":"m.text"},"ts":1323989103000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"kennyluck: https://bugs.webkit.org/show_bug.cgi?id=60571 tracks making this change for WebKit","msgtype":"m.text"},"ts":1323989104000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"hey ap_","msgtype":"m.text"},"ts":1323989105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey Anne","msgtype":"m.text"},"ts":1323989160000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"sicking: a c-style struct containing a c++ class instance is as object-orientated as a c++ class instance containing a c-style struct, which would be the equivalent analogy","msgtype":"m.text"},"ts":1323989161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: what do C or C++ have to do with it? neither has first-class functions or closures (well, ignoring insane new C++ stuff)","msgtype":"m.text"},"ts":1323989162000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ap_, well then that contradicts what TabAtkins said then.","msgtype":"m.text"},"ts":1323989163000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"ap_, thanks for the link!","msgtype":"m.text"},"ts":1323989164000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"ap_: other reason for removing UTF-32 is reducing encoding proliferation and making it less likely for content to start depending on one user agent","msgtype":"m.text"},"ts":1323989165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kennyluck: Believe ap_","msgtype":"m.text"},"ts":1323989166000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: the whole point is having functions on the object","msgtype":"m.text"},"ts":1323989167000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: functions in JS _are_ objects.","msgtype":"m.text"},"ts":1323989220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I guess I'm a bit allergic to ideas about limiting encoding support, because it often means special cases and more work","msgtype":"m.text"},"ts":1323989221000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"annevk: UTF-32 is not really one of those cases","msgtype":"m.text"},"ts":1323989222000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"as far as i'm concerned, the idea of passing an object containing a function when you really want to say \"call this function\" is just a nasty echo of java Runnable","msgtype":"m.text"},"ts":1323989223000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: text formats that HTML5 limits to UTF-8 definitely is more work for questionable benefit (at best)","msgtype":"m.text"},"ts":1323989224000,"senderName":"ap_","senderId":"ap_@irc"},
{"content":{"body":"ap_: guess that depends on the implementation, I can see how it's true for ICU","msgtype":"m.text"},"ts":1323989280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: i don't see how that's relevant","msgtype":"m.text"},"ts":1323989281000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: no-one is arguing that you can't do this with only function callbacks","msgtype":"m.text"},"ts":1323989282000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: it's a question of developer ergonomics","msgtype":"m.text"},"ts":1323989283000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: instead of  var o = { handleEvent: function () { ... }, state: 0 }; callback(o);  you can just do  var f = function () { ... }; f.state = 0; callback(f);","msgtype":"m.text"},"ts":1323989284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: it is not about \"call this function\". It is about call the function of this object.","msgtype":"m.text"},"ts":1323989285000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: indeed. Objects are totally unneccesary","msgtype":"m.text"},"ts":1323989340000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: anyway my argument isn't against objects. my argument is against having the callbacks have different names from each other.","msgtype":"m.text"},"ts":1323989341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: basic is just as turing complete as C++ and Java","msgtype":"m.text"},"ts":1323989342000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I don't understand what imaginary position you're attempting to argue against, sicking.","msgtype":"m.text"},"ts":1323989400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the question is what programming syntaxes we want to support","msgtype":"m.text"},"ts":1323989460000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"is sicking arguing against something?","msgtype":"m.text"},"ts":1323989461000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sicking: I understand that.  I'm wondering why the word \"BASIC\" got into the argument.","msgtype":"m.text"},"ts":1323989462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought he is arguing why object callbacks are a nice feature","msgtype":"m.text"},"ts":1323989463000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's \"do this thing\"; passing in a function (possibly created via function.bind) is much more direct than passing in an object containing a method to do the thing","msgtype":"m.text"},"ts":1323989464000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I suspect you're badly trying to make a reductio ad absurdum","msgtype":"m.text"},"ts":1323989465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: basic doesn't have objects","msgtype":"m.text"},"ts":1323989466000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: well.. it didn't used to","msgtype":"m.text"},"ts":1323989520000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"zewt: how is that \"much more direct\" ?","msgtype":"m.text"},"ts":1323989521000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"how is it not?","msgtype":"m.text"},"ts":1323989522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"here's the thing. do it\"","msgtype":"m.text"},"ts":1323989523000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"look at how people like google, facebook, jquery etc write their code. There's tons of objects and \"classes\"","msgtype":"m.text"},"ts":1323989524000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"\"here is the callback object, use it\"","msgtype":"m.text"},"ts":1323989580000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyhow, i'd rather argue on the mailing list than here","msgtype":"m.text"},"ts":1323989581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"to allow broader participation","msgtype":"m.text"},"ts":1323989582000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"you haven't argued here at all :-)","msgtype":"m.text"},"ts":1323989583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least, not against the point i was making","msgtype":"m.text"},"ts":1323989584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: no, it's \"here's the object, call the function with the implicit name XXX on it\"","msgtype":"m.text"},"ts":1323989585000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: then you're not understanding my argument","msgtype":"m.text"},"ts":1323989586000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i think a lot of us aren't :)","msgtype":"m.text"},"ts":1323989640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: of that i am sure","msgtype":"m.text"},"ts":1323989641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I certainly can't understand Hixie's argument why handleEvent should be the method name everywhere.","msgtype":"m.text"},"ts":1323989642000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what is wrong with that?","msgtype":"m.text"},"ts":1323989700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only argument I've seen for eg. handleEvent instead of passing a function is so you don't have to tack \".bind(obj)\" on the end of the object (which seems trivial to me)","msgtype":"m.text"},"ts":1323989701000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"er, end of the function name","msgtype":"m.text"},"ts":1323989702000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(actually, I often just pre-bind my functions, eg. this.mousemove = this.mousemove.bind(this), all in one block in the ctor)","msgtype":"m.text"},"ts":1323989760000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: if you're not handling any kind of \"event\", why the function name should be handleEvent? Also, different handleEvent functions would need to handle different kinds of parameters","msgtype":"m.text"},"ts":1323989761000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"you always handle some kind of \"event\"","msgtype":"m.text"},"ts":1323989762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the broad sense of \"event\"","msgtype":"m.text"},"ts":1323989763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: i've given several reasons. to summarise: authors would have to remember the names if it wasn't consistent, and can't rely on autocomplete in IDEs to do it for them, nor would it be easy to look up in documentation. Having multiple names would make using objects to do generic proxies harder as you've have to pass the callback name. Having different names would mean migrating from function-style to object-style in an environment that used proxies would me","msgtype":"m.text"},"ts":1323989820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the broad sense yes, but not in web api sense, I'd say","msgtype":"m.text"},"ts":1323989821000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that's what a callback is after all","msgtype":"m.text"},"ts":1323989822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"an event","msgtype":"m.text"},"ts":1323989823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where else in web apis is \"event\" use than in dom events","msgtype":"m.text"},"ts":1323989824000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: my question is: if handleEvent is to be used for things other than DOM events (for legacy compatibility): why should it be used instead of (or in addition to) the API accepting a function? what's the benefit, weighed against complicating the API and adding avoidable style variances?","msgtype":"m.text"},"ts":1323989825000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: [...] would mean migrating from function-style to object-style in an environment that used proxies would mean changing all the call sites as well. And finally, the main reason put forward for having different names -- being able to use one object for multiple callbacks -- is unrealistic as in practice you'd likely be needing multiple functions for the same callback type, not different callback types.","msgtype":"m.text"},"ts":1323989880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, at least if you are handling the same callback type it means you have the same argument list passed in -- and with DOM Events you can switch based on event.target/type","msgtype":"m.text"},"ts":1323989940000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zewt: consistency with event listeners, and also, apparently developers like callback objects, since it is used quite often","msgtype":"m.text"},"ts":1323989941000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you have different callback types handled by the same function, that's going to be impossible","msgtype":"m.text"},"ts":1323989942000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: if you're doing a proxy thing that just e.g. counts accesses, you'd just be forwarding all the arguments to the \"real\" handler","msgtype":"m.text"},"ts":1323990000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: so it doesn't matter what the arguments are","msgtype":"m.text"},"ts":1323990001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: 1: event listeners do this (from my perspective) for legacy compatibility; \"consistency with legacy APIs\" is not interesting (if this was taken as an argument, it would lead to very, very ugly APIs); 2: but I'd like to know *why* they like it, what the rational reason for doing/supporting this is","msgtype":"m.text"},"ts":1323990060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, I think that is not nearly going to be the common case, where you want the same function to handle all different kinds of callbacks","msgtype":"m.text"},"ts":1323990061000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: using this at all is not going to be the common case","msgtype":"m.text"},"ts":1323990062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, my argument is that if you are going to support the object style, and one of the reasons being so that you can have a single object with state, that you should have different names otherwise its usefulness is diminished","msgtype":"m.text"},"ts":1323990180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: being able to dispatch based on the argument is a rarity -- only applies to DOM Event callbacks","msgtype":"m.text"},"ts":1323990181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: so i argue that having different names does basically nothing to help with that","msgtype":"m.text"},"ts":1323990240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: e.g. if i have many canvases and i call toBlob() on lots of them -- can't use the same object","msgtype":"m.text"},"ts":1323990241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: I would assume people like callback objects since it allows developer to encapsulate the needed functions and properties to an object easily","msgtype":"m.text"},"ts":1323990242000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but you can do that with functions very easily too","msgtype":"m.text"},"ts":1323990243000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: or if i use DataTransferItem's getAsString() on lots of DataTransferItems, can't use the same callback object","msgtype":"m.text"},"ts":1323990244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: you need bind explicitly","msgtype":"m.text"},"ts":1323990245000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"big deal","msgtype":"m.text"},"ts":1323990246000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"need to","msgtype":"m.text"},"ts":1323990247000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"heycam: JS functions can have state, so you don't need to use the object style to have a single object with state","msgtype":"m.text"},"ts":1323990300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one line of code per function, at most","msgtype":"m.text"},"ts":1323990301000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, can't because of the semantics of your application? and because they don't pass an argument identifying the canvas/transferitem?","msgtype":"m.text"},"ts":1323990302000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zewt: it is, if you have simpler way to do it","msgtype":"m.text"},"ts":1323990303000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"heycam: can't because there's no context in the argumentsl ist","msgtype":"m.text"},"ts":1323990304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is not simpler, it's making the whole API more complex by having multiple ways to do things (which now everyone has to know)","msgtype":"m.text"},"ts":1323990305000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's not even in the ballpark of being worth it, for eliminating \"this.func = this.func.bind(this)\"","msgtype":"m.text"},"ts":1323990306000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, I think that is a reasonable point. with DOM Events it is easy to have the one handleEvent function handle different sources of the event. but with other callback APIs we have, that is not possible.","msgtype":"m.text"},"ts":1323990420000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, so we already have some limitation in the set of handlers you can put on a single object because of that","msgtype":"m.text"},"ts":1323990421000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"also that doesn't help with events at all (since events all use the same callback name), so it doesn't seem to explain why people use it","msgtype":"m.text"},"ts":1323990480000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(there is a reason why mutationobserver callback has mutationobserver as a parameter)","msgtype":"m.text"},"ts":1323990481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie, and you have to be \"lucky\" that you want to handle either only a single source per callback method name","msgtype":"m.text"},"ts":1323990482000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"s/either//","msgtype":"m.text"},"ts":1323990483000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: i have yet to see a single realistic example of a time where you would be so lucky. all the cases i've looked at are cases where you'd be using multiple callbacks of the same type.","msgtype":"m.text"},"ts":1323990540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: (e.g. DOM Events, toBlob(), etc)","msgtype":"m.text"},"ts":1323990541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah so I'm saying that with DOM Events (and apparently as smaug____ says with mutation observers) you get a parameter that lets you differentiate the source of the callback","msgtype":"m.text"},"ts":1323990720000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I would say then that to avoid this problem of using the same callback method for different sources, all these other callback APIs signatures should grow an argument to indicate the source","msgtype":"m.text"},"ts":1323990721000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: and i'm arguing that this means that the argument saying that we need different names so one object can be used with different callback types is too weak to consider, especially against all the other points raised against having multiple names.","msgtype":"m.text"},"ts":1323990722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(if you did indeed want to ensure that your single object can handle all kinds of different sources and callback types)","msgtype":"m.text"},"ts":1323990723000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: i've never found that to be a problem in practice (not one worth bloating every callback API for, certainly)","msgtype":"m.text"},"ts":1323990724000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm not convinced it's an interesting use case. just use closures.","msgtype":"m.text"},"ts":1323990725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I would agree it is weaker. (weak enough? not sure. maybe.)","msgtype":"m.text"},"ts":1323990726000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"is \"calling bind() is sort of annoying\" the only argument?","msgtype":"m.text"},"ts":1323990840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or did I miss others","msgtype":"m.text"},"ts":1323990841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, let's say you have a single object with multiple callback methods on it. you at least have to duplicate the method names on each callback registration function call, too.","msgtype":"m.text"},"ts":1323990900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so intead of addEventListener(type, obj, false) you need to do addEventlistener(type, obj.functionname.bind(obj), false)","msgtype":"m.text"},"ts":1323990901000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: let's back up a step, you're talking about two separate things there","msgtype":"m.text"},"ts":1323990960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not saying that is strong, just pointing out it's not only \".bind()\")","msgtype":"m.text"},"ts":1323990961000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"1: having to say obj.functionname instead of obj, and 2: having to tack on bind(obj)","msgtype":"m.text"},"ts":1323990962000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, it's the same thing. you need both, right? :)","msgtype":"m.text"},"ts":1323990963000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"1: i think is perfectly fine and a good API, in a language with first-class functions","msgtype":"m.text"},"ts":1323990964000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it is unrealistic to expect that someone will magically have a perfect mapping of types of callbacks to actuall callback functions","msgtype":"m.text"},"ts":1323990965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even if one did use objects one would _still_ have to pick the right callback","msgtype":"m.text"},"ts":1323990966000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, i think foo(obj.functionName) is a much much cleaner, more obvious API than foo(obj) where \"functionName\" is baked into the API, at least when there's only one callback involved","msgtype":"m.text"},"ts":1323991020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, \"pick the right callback\"? didn't quite follow that.","msgtype":"m.text"},"ts":1323991021000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"e.g. addEventListener('load', callbackObjects.myLoadCallbackObject); addEventListener('click', callbackObjects.myClickCallbackObject);","msgtype":"m.text"},"ts":1323991022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2: bind(obj)--yeah it's \"sort of annoying\" but that's about it","msgtype":"m.text"},"ts":1323991023000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, it is true you would still need to switch based on say the .type of the event object","msgtype":"m.text"},"ts":1323991140000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, (though you could do that in your handleEvent pretty simply by looking up a property based on the type, and calling that function if it exists.)","msgtype":"m.text"},"ts":1323991200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: https://bugs.webkit.org/show_bug.cgi?id=74648","msgtype":"m.text"},"ts":1323991201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: would prolly be good to decide on \"|\" or \"or\"","msgtype":"m.text"},"ts":1323991202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt, I think the clarity is a good point, where you don't have the functionName listed in your registration function call so it is less obvious exactly what is going to get called","msgtype":"m.text"},"ts":1323991203000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't think this.handleEvent = function(e) { switch(e.type) { case \"load\": this.onLoad(); break; case \"click\": this.onClick(); } } is a win over a couple bind() calls :)","msgtype":"m.text"},"ts":1323991204000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: oh, and define unions :)","msgtype":"m.text"},"ts":1323991260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you're arguing that encouraging a style where all event handling goes through one method that dispatches on target and type is better than encouraging a style where the browser just sends the event to the right code itself?","msgtype":"m.text"},"ts":1323991261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk, don't you mean we have to decide whether to include unions or not first? :)","msgtype":"m.text"},"ts":1323991262000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, I'm going to have to treat unions, overrides, [AllowAny] all at once","msgtype":"m.text"},"ts":1323991263000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since they all interrelate","msgtype":"m.text"},"ts":1323991264000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(unions? in javascript? whaaaat)","msgtype":"m.text"},"ts":1323991265000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: yeah","msgtype":"m.text"},"ts":1323991266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, I am not arguing that. I am just saying there that it doesn't matter so much that all DOM Events are smushed into the one handleEvent, because you can easily discriminate based on type/target and dispatch to the specific handler function based on that.","msgtype":"m.text"},"ts":1323991320000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://zewt.org/curves/draggable.js i do this a lot; it's a little annoying to have to, but none of this is better","msgtype":"m.text"},"ts":1323991380000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: in IDL so not every function will implement its own rudimentary argument checks","msgtype":"m.text"},"ts":1323991381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm","msgtype":"m.text"},"ts":1323991382000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: I am saying that it is terrible if all DOM Events are smushed into one method, because you have to discriminate based on type/target and dispatch to the specific handler function based on that.","msgtype":"m.text"},"ts":1323991383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: instead of just registering them in the first place and not having to do any of that work at event handling time.","msgtype":"m.text"},"ts":1323991440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: seems like a pretty strong example of why you would not want to use an object here","msgtype":"m.text"},"ts":1323991441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously you would use one object per event type","msgtype":"m.text"},"ts":1323991442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AFAIK, it is pretty common to have an object with handleEvent to handle different event types and event targets","msgtype":"m.text"},"ts":1323991500000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie, the reason you use an object is to get simple access to your state shared across multiple handlers","msgtype":"m.text"},"ts":1323991501000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: the reason you use a closure is to get simple access to your state shared across multiple handlers too","msgtype":"m.text"},"ts":1323991560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... but that's what objects are for (and we've looped the conversation)","msgtype":"m.text"},"ts":1323991561000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(er, what hixie said, of course)","msgtype":"m.text"},"ts":1323991620000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i mean using bind() gives you an object to share state on in exactly the same way","msgtype":"m.text"},"ts":1323991621000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so that comes back to zewt's question from before","msgtype":"m.text"},"ts":1323991622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Velmont: heh, just noticed you reused some of the code of my tests","msgtype":"m.text"},"ts":1323991623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you don't need bind() even","msgtype":"m.text"},"ts":1323991624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"about whether avoiding bind() is the real difference","msgtype":"m.text"},"ts":1323991680000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, sure","msgtype":"m.text"},"ts":1323991681000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just have the state in scope","msgtype":"m.text"},"ts":1323991682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, just closed over variables","msgtype":"m.text"},"ts":1323991683000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1323991684000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: that's just a stylistic difference","msgtype":"m.text"},"ts":1323991685000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1323991686000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Velmont: HTTP status \"699 WAY OUTTA RANGE\" :)","msgtype":"m.text"},"ts":1323991687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"both ways work","msgtype":"m.text"},"ts":1323991688000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: the whole discussion is about stylistic differences","msgtype":"m.text"},"ts":1323991689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: all of these ways work","msgtype":"m.text"},"ts":1323991690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1323991691000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't like writing large blocks of code as closures; i prefer member functions","msgtype":"m.text"},"ts":1323991692000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think that's why I dislike this issue, it's pretty much only style :)","msgtype":"m.text"},"ts":1323991693000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"in fact that's most of the difficult to resolve web idl issues :/","msgtype":"m.text"},"ts":1323991694000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm not arguing that we shouldn't allow authors to use objects (though i certainly wouldn't be sad if we only allowed functions)","msgtype":"m.text"},"ts":1323991740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm just saying that if we do allow objects, we should make them consistent so you know it's always handleEvent()","msgtype":"m.text"},"ts":1323991741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and don't have to look it up each time","msgtype":"m.text"},"ts":1323991742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I am arguing that we shouldn't allow authors to use objects if we use the same name, since it makes them less useful. (but I did say that before.)","msgtype":"m.text"},"ts":1323991743000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'd argue that the handleEvent thing shouldn't be propagated to new APIs","msgtype":"m.text"},"ts":1323991744000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and don't have to pass the method name around when you're making proxies","msgtype":"m.text"},"ts":1323991745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: i'd be fine with that too","msgtype":"m.text"},"ts":1323991746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, and not only less useful, but definitely not useful enough to support","msgtype":"m.text"},"ts":1323991747000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(i mean, APIs other than DOM event listeners)","msgtype":"m.text"},"ts":1323991748000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: i'm not sure the object style is useful enough to support at all, modulo compat needs","msgtype":"m.text"},"ts":1323991800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(btw I did mention on the list previously that I am mostly on the side of \"only allow functions\", but I am interested in teasing out the arguments here)","msgtype":"m.text"},"ts":1323991801000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"consistency in APIs is important","msgtype":"m.text"},"ts":1323991802000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the entire handleEvent thing feels like an API designed by a Java programmer, who's only ever used java Runnable objects and didn't understand first-class functiosn at all","msgtype":"m.text"},"ts":1323991803000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: but if we did have it, i think it'd be more useful to have them all the same name than have different names","msgtype":"m.text"},"ts":1323991804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: it _is_ a java thing","msgtype":"m.text"},"ts":1323991860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: the DOM was originally designed for Java","msgtype":"m.text"},"ts":1323991861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i try to avoid actually knowing about java things; it's one of the worst, most painful languages I've ever spent time in","msgtype":"m.text"},"ts":1323991862000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is that true? or is it just that it was designed with OMG IDL which doesn't allow non-Java-like interfaces to be designed?","msgtype":"m.text"},"ts":1323991863000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"my conclusion is always: Java Hates Programmers, And Wants To Hurt You","msgtype":"m.text"},"ts":1323991864000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heycam: as far as i can tell, it was designed for Java implementations, with JS as a secondary concern.","msgtype":"m.text"},"ts":1323992040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: or at least, was designed to have Java as at least as important a concern as JS","msgtype":"m.text"},"ts":1323992041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"class attribute uses space separated class names","msgtype":"m.text"},"ts":1323992640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in which case are some names separated using , ?","msgtype":"m.text"},"ts":1323992641000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nm, found","msgtype":"m.text"},"ts":1323992820000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: <input accept> <input type=email multiple value>, <meta name=keywords content>","msgtype":"m.text"},"ts":1323992821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think that's it","msgtype":"m.text"},"ts":1323992880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<area coords> maybe also","msgtype":"m.text"},"ts":1323992881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was just thinking to change allowfullscreen to allow=\"fullscreen pointerlock\"","msgtype":"m.text"},"ts":1323992940000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and whether it should use space or comma","msgtype":"m.text"},"ts":1323992941000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not that it matters much","msgtype":"m.text"},"ts":1323992942000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but apparently space is used more often","msgtype":"m.text"},"ts":1323992943000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"definitely space","msgtype":"m.text"},"ts":1323993000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and yeah, that would make much more sense than allowfullscreen allowpointerlock","msgtype":"m.text"},"ts":1323993001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and would go well with the sandbox=\"\" attribute","msgtype":"m.text"},"ts":1323993002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: ^^","msgtype":"m.text"},"ts":1323993120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1323993240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i sure wish the whole \"your download will start in *pointless delay*\" would die","msgtype":"m.text"},"ts":1323993420000,"senderName":"zewt","senderId":"zewt@irc"}
]