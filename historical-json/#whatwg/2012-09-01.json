[
{"content":{"body":"Hixie: Is this better (for :read-only) http://dev.w3.org/csswg/selectors4/#rw-pseudos","msgtype":"m.text"},"ts":1346459255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so all elements match one or the other?","msgtype":"m.text"},"ts":1346461451000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what should type=radio match? it's neither user-alterable, nor read-only...","msgtype":"m.text"},"ts":1346461471000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (also if you could make user-alterable some sort of obvious hook, e.g. give it an ID and make it italics or bold or something (<dfn>), that'd be ideal)","msgtype":"m.text"},"ts":1346461513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm thinking about implementing srcset and I have a question about the spec","msgtype":"m.text"},"ts":1346461665000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: shoot","msgtype":"m.text"},"ts":1346461673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(since I actually have free time to code this weekend)","msgtype":"m.text"},"ts":1346461679000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, if an image has both src and srcset set, and src appears first textually","msgtype":"m.text"},"ts":1346461696000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(the order doesn't matter)","msgtype":"m.text"},"ts":1346461716000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the parser treats this as the src attribute being added and then the srcset attribute being added","msgtype":"m.text"},"ts":1346461722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(attribute order never matters)","msgtype":"m.text"},"ts":1346461724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then the obvious consequence is that the load for the src resource will be initiated first","msgtype":"m.text"},"ts":1346461739000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the HTML parser is defined as adding all the attributes simultaneously","msgtype":"m.text"},"ts":1346461740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is that wrong?","msgtype":"m.text"},"ts":1346461744000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1346461745000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hence the \"or both\" in: \"A user agent that obtains images immediately must synchronously update the image data of an img element whenever that element is created with a src attribute, a srcset attribute, or both.\"","msgtype":"m.text"},"ts":1346461806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1346462202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I think WebKit probably has quite a few bugs in cases where that matters","msgtype":"m.text"},"ts":1346462354000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: hmm, on second thought, maybe not","msgtype":"m.text"},"ts":1346462375000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sorry for the noise","msgtype":"m.text"},"ts":1346462390000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it looks like we set them all, then process one at a time, but each attribute when processed checks if the relevant others have been set","msgtype":"m.text"},"ts":1346462406000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"man, if building wasn't so slow I'd be done implementing srcset by now (at least the subset handling resolution descriptors only)","msgtype":"m.text"},"ts":1346467149000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah, i've actually seen cases of browsers having bugs due to the attribute order mattering in practice","msgtype":"m.text"},"ts":1346468545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: surprisingly few, all things considered","msgtype":"m.text"},"ts":1346468556000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I misinterpreted our code (though I certainly wouldn't promise we are bug-free in this area)","msgtype":"m.text"},"ts":1346468577000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: Yeah, it's either/or.  This was based off the HTML definition. ^_^","msgtype":"m.text"},"ts":1346469042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"type=radio I'd consider user-alterable.  You can alter the checkedness, which is *like* it's content.","msgtype":"m.text"},"ts":1346469064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hixie: ping","msgtype":"m.text"},"ts":1346470359000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"I saw that you replace 'any' with a union in the Canvas spec","msgtype":"m.text"},"ts":1346470420000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"I think that that will change the behavior","msgtype":"m.text"},"ts":1346470536000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"TabAtkins: html's was based on css' old one, that's why i asked fantasai to change it :-)  there's some bug about it","msgtype":"m.text"},"ts":1346470723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier1: sounds plausible","msgtype":"m.text"},"ts":1346470732000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier1: which change in particular?","msgtype":"m.text"},"ts":1346470739000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[e] (0) Clean up some IDLs that use 'any' to specify the exact type instead, and clean up some surrounding markup","msgtype":"m.text"},"ts":1346470799000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"Fixing https://www.w3.org/Bugs/Public/show_bug.cgi?id=17952","msgtype":"m.text"},"ts":1346470800000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"Affected topics: Canvas, DOM APIs, Microdata","msgtype":"m.text"},"ts":1346470800000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"git-svn-id: http://svn.whatwg.org/webapps@7260 340c8d12-0b0e-0410-8428-c7bf67bfef74","msgtype":"m.text"},"ts":1346470800000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"what behaviour would it change?","msgtype":"m.text"},"ts":1346470839000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you pass it something that can't be converted to a string, you will get a type error.","msgtype":"m.text"},"ts":1346470880000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"while it should ignore it instead","msgtype":"m.text"},"ts":1346470889000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"what can't get converted to string?","msgtype":"m.text"},"ts":1346470912000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the argument you pass to strokestyle/fillstyle","msgtype":"m.text"},"ts":1346470941000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"do you have a concrete example of some code that would change behaviour?","msgtype":"m.text"},"ts":1346470957000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry i'm having trouble understanding","msgtype":"m.text"},"ts":1346470970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's say you pass in an object that implements its own 'tostring' method that returns a csscolor","msgtype":"m.text"},"ts":1346471055000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"with your change, you can pass in that object and it will be accepted","msgtype":"m.text"},"ts":1346471078000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"like   context.fillStyle = { toString: function () { return 'blue' } }; ?","msgtype":"m.text"},"ts":1346471101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1346471123000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"yeah, that would have been ignored before but is now treated properly, right?","msgtype":"m.text"},"ts":1346471158000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the wording doesn't allow that","msgtype":"m.text"},"ts":1346471159000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"that's true","msgtype":"m.text"},"ts":1346471178000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"I guess the prose should change","msgtype":"m.text"},"ts":1346471191000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"and we should try if it is allowed","msgtype":"m.text"},"ts":1346471204000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"what prose? it all looks right to me...","msgtype":"m.text"},"ts":1346471217000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"The style can be either a string containing a CSS color, or a http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasgradient or http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvaspattern object\"","msgtype":"m.text"},"ts":1346471255000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"oh the non-normative text","msgtype":"m.text"},"ts":1346471288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah i guess the next sentence is wrong, huh","msgtype":"m.text"},"ts":1346471294000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, no","msgtype":"m.text"},"ts":1346471332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's still true","msgtype":"m.text"},"ts":1346471334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because strings that don't parse as css colors are still ignored","msgtype":"m.text"},"ts":1346471341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm still trying to understand the WedIDL stuff...","msgtype":"m.text"},"ts":1346471341000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"yes. That's true","msgtype":"m.text"},"ts":1346471356000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"so, you can set an object. But when you look at the value, you would get a string back","msgtype":"m.text"},"ts":1346471379000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"i'm assuming \"you\" in those two sentences refer to different people","msgtype":"m.text"},"ts":1346471397000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1346471422000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"if you mean that this:   context.fillStyle = { toString: function () { return 'blue' } };   ...would result in the function defined in the canvas prose being handed a string, that's my understanding.","msgtype":"m.text"},"ts":1346471436000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(well, setter, not function)","msgtype":"m.text"},"ts":1346471450000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as long as people don't expect this to work: var mycolor=\"…\"; context.fillStyle = { toString: function () { return mycolor; } }; ...","msgtype":"m.text"},"ts":1346471521000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"canvaspattern and canvasgradient allow that","msgtype":"m.text"},"ts":1346471534000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"why would that not work?","msgtype":"m.text"},"ts":1346471546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"When set to a http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvaspattern or http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#canvasgradient object, the assignment is http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#live, meaning that changes made to the object after the assignment do affect subsequent stroking or filling of sh","msgtype":"m.text"},"ts":1346471553000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"oh you mean, dynamically","msgtype":"m.text"},"ts":1346471561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1346471562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'll work, it'll just set the fillStyle to whatever mycolor's value is at setting time","msgtype":"m.text"},"ts":1346471585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it won't be live","msgtype":"m.text"},"ts":1346471612000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1346471621000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"do you think that needs to be written down somehow?","msgtype":"m.text"},"ts":1346471675000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"well it's unambiguously required by the webidl spec","msgtype":"m.text"},"ts":1346471718000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it seems like a really esoteric detail to put in non-normative prose","msgtype":"m.text"},"ts":1346471738000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1346471781000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"I tried \"ctx.fillStyle={ toString: function () { return 'blue' } };\"","msgtype":"m.text"},"ts":1346471852000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"and the fillstyle is black","msgtype":"m.text"},"ts":1346471861000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"same on FireFox, Safari and Chrome...","msgtype":"m.text"},"ts":1346472150000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"If you have a moment, I think \"If x0 = x1 and y0 = y1, then the linear gradient must paint nothing.\" and \"If x0 = x1 and y0 = y1 and r0 = r1, then the radial gradient must paint nothing.\" in the spec should change.","msgtype":"m.text"},"ts":1346472253000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"The gradient should just become a line or a filled circle...","msgtype":"m.text"},"ts":1346472276000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"same with color stops at the same offsets","msgtype":"m.text"},"ts":1346472311000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"file a bug :-)","msgtype":"m.text"},"ts":1346472491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or mail the list, either way it ends up on my radar)","msgtype":"m.text"},"ts":1346472505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(whatwg.org/newbug and whatwg⊙wo respectively)","msgtype":"m.text"},"ts":1346472625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1346478728000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"I will file a bug on both issues :-P","msgtype":"m.text"},"ts":1346478741000,"senderName":"cabanier1","senderId":"cabanier1@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1346486870000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"I have a question... if I use say html4 or xhtml doc type statements will I still be able to use html5 tags?","msgtype":"m.text"},"ts":1346486987000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Calthropstu: Hi. Yes you can AFAIK, but, it wont validate.","msgtype":"m.text"},"ts":1346487076000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"Calthropstu: Just use <!DOCTYPE html> Why would you want to use old doctypes?","msgtype":"m.text"},"ts":1346487187000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"Im dont","msgtype":"m.text"},"ts":1346487222000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"*I dont","msgtype":"m.text"},"ts":1346487229000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"annevk (assuming you read the logs): could you perhaps chime in here? https://bugs.webkit.org/show_bug.cgi?id=17352","msgtype":"m.text"},"ts":1346487269000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I'm being considered for a position and when I looked at their work I noticed their website is using a mishmash of xhtml1.0 strict, xhtml 1.1 strict, and html4 transitional","msgtype":"m.text"},"ts":1346487311000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"and the biggest requirment is html 5","msgtype":"m.text"},"ts":1346487342000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Calthropstu: OIC. Sorry to jump to the wrong conclusion.","msgtype":"m.text"},"ts":1346487372000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"Calthropstu, so, doctypes basically don't do anything","msgtype":"m.text"},"ts":1346487390000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"they do","msgtype":"m.text"},"ts":1346487398000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Calthropstu, except for standards/quirks mode","msgtype":"m.text"},"ts":1346487412000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And some more modes in IE","msgtype":"m.text"},"ts":1346487419000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To answer your question, yes, you can use new HTML features regardless of doctype","msgtype":"m.text"},"ts":1346487448000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well I do know if you dont have 1 at all the whole thing goes  nuts","msgtype":"m.text"},"ts":1346487455000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1346487482000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Only in IE, though; other browsers will still support those features","msgtype":"m.text"},"ts":1346487507000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not exactly... because it also starts treating css wrong","msgtype":"m.text"},"ts":1346487535000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"A good resource -> http://hsivonen.iki.fi/doctype/","msgtype":"m.text"},"ts":1346487545000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"Ive had that issue as recently as may","msgtype":"m.text"},"ts":1346487584000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Calthropstu, I'd advise to just search&replace their doctypes, it's not going to break anything","msgtype":"m.text"},"ts":1346487587000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Unless they rely on quirks-mode differences","msgtype":"m.text"},"ts":1346487600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well I would if I already had the position :-)","msgtype":"m.text"},"ts":1346487608000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Any of the doctypes here: http://www.whatwg.org/html/#obsolete-permitted-doctype-string are fine too, fwiw","msgtype":"m.text"},"ts":1346487651000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1346487698000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Calthropstu: Good luck with the job.","msgtype":"m.text"},"ts":1346489283000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1346489959000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"my first resume submittal did not specify html5 so I have to resubmit it on tuesday","msgtype":"m.text"},"ts":1346490003000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"I just figured \"html\" would cover ALL forms of html and CSS would cover all forms of CSS but they specifically demand CSS3 and HTML5","msgtype":"m.text"},"ts":1346490063000,"senderName":"Calthropstu","senderId":"Calthropstu@irc"},
{"content":{"body":"Yeah, I guess then it's best to be specific.","msgtype":"m.text"},"ts":1346490102000,"senderName":"deane","senderId":"deane@irc"},
{"content":{"body":"hi, group","msgtype":"m.text"},"ts":1346497948000,"senderName":"jesusruiz","senderId":"jesusruiz@irc"},
{"content":{"body":"Anyone got tests for meta pre-parsing?","msgtype":"m.text"},"ts":1346523075000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Not me","msgtype":"m.text"},"ts":1346523128000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looks like html5lib has none. And it's totally broken in Py3.","msgtype":"m.text"},"ts":1346523129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: I think I saw some from you?","msgtype":"m.text"},"ts":1346523137000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: (meta pre-parsing tests)","msgtype":"m.text"},"ts":1346523144000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"... the synchronous nature of javascript is part of the web platform's *use* of javascript, not javascript/ecmascript per se, right?","msgtype":"m.text"},"ts":1346528692000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(nothing in the language seems to care one way or the other, but I'm not familiar with the spec itself)","msgtype":"m.text"},"ts":1346528712000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: asynchronous you mean?","msgtype":"m.text"},"ts":1346531040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Then no, it has nothing to do with JS. It's just how all the host object APIs for the DOM have developed with callbacks.","msgtype":"m.text"},"ts":1346531089000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Probably in large part because most JS impls (i.e., all but Opera's) block everything, so synchronous APIs would be Rather Bad.","msgtype":"m.text"},"ts":1346531119000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: synchronous in the sense of not seeing asynchronous side-effects","msgtype":"m.text"},"ts":1346531403000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(but yes, we're talking about the same thing)","msgtype":"m.text"},"ts":1346531417000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ah, right.","msgtype":"m.text"},"ts":1346531442000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's just a side-effect of impls, really.","msgtype":"m.text"},"ts":1346531456000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The JS spec doesn't address multiple threads of impl at all.","msgtype":"m.text"},"ts":1346531478000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, that's what I've always assumed intuitively, was just looking for a sanity check before it came up in a debate :)","msgtype":"m.text"},"ts":1346531620000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is anyone else driven mad by chrome's broken text searching, heh","msgtype":"m.text"},"ts":1346531684000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i type \"foo\" and instead of finding the next \"foo\" from where I am now, it goes to the first \"f\" in the document before I can type the rest","msgtype":"m.text"},"ts":1346531703000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"particularly annoying in the html spec when it makes me lose my place","msgtype":"m.text"},"ts":1346531901000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is rick waldron ever here?","msgtype":"m.text"},"ts":1346533701000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's pretty (something) that anyone would seriously suggest this atrocity as a solution to anything: https://github.com/kriskowal/q/blob/master/examples/all.js","msgtype":"m.text"},"ts":1346534743000,"senderName":"zewt","senderId":"zewt@irc"}
]