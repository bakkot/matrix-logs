[
{"content":{"body":"hi there, I'd like to ask, when using keyboard \"Up arrow\" key and \"Down arrow\" key to <input type=date>, which part of spec should I refer to? I didn't find similar things in https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date)","msgtype":"m.text"},"ts":1551416889000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1551416891000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"cybai: the spec intentionally doesnâ€™t prescribe any requirements for that","msgtype":"m.text"},"ts":1551421633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cybai: it is up to the browser to present the appropriate UI depending on the device and input method (e.g., on mobile youâ€™re not gonna be using up/down arrow keys there anyway)","msgtype":"m.text"},"ts":1551421710000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Ah! I see! (the mobile case makes sense to me!) and thanks answering to me! btw, I asked because when I tried to use keyboard to add date on <input type=date>, I can add to 2/31","msgtype":"m.text"},"ts":1551421803000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1551421827000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is a browser bug I guess","msgtype":"m.text"},"ts":1551421837000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I tried on Chrome and Firefox and both of them did the same trick","msgtype":"m.text"},"ts":1551421858000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"(I'm on macOS)","msgtype":"m.text"},"ts":1551421872000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"Should I file a bug for it?","msgtype":"m.text"},"ts":1551421888000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"I would yeah","msgtype":"m.text"},"ts":1551421893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok! thanks!","msgtype":"m.text"},"ts":1551421899000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1551421904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1551421918000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"MikeSmith: hmm, sorry, please let me ask a dummy question ðŸ™‡ Should I file the issue for both bugzilla and crbug? Or it's fine to file it at whatg/html GitHub repo? Thanks","msgtype":"m.text"},"ts":1551422164000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"cybai: for both Mozillaâ€™s bugzilla and crbug for Chrome, yeah","msgtype":"m.text"},"ts":1551422336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1551422345000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1531652","msgtype":"m.text"},"ts":1551422973000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"https://crbug.com/937192","msgtype":"m.text"},"ts":1551422982000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"here they are :)","msgtype":"m.text"},"ts":1551422985000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"cybai: thanks ãƒ¼ Ccâ€™d myself on both","msgtype":"m.text"},"ts":1551423244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":+1:","msgtype":"m.text"},"ts":1551423273000,"senderName":"cybai","senderId":"cybai@irc"},
{"content":{"body":"annevk, wanna review https://github.com/heycam/webidl/pull/668 too? :)","msgtype":"m.text"},"ts":1551439453000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it works, but it seems a little weird to me to use an ECMAScript object for an internal data structure","msgtype":"m.text"},"ts":1551443097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it makes me worried about that leaking somehow","msgtype":"m.text"},"ts":1551443107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: but maybe this is how implementations do it as well? ðŸ˜ƒ","msgtype":"m.text"},"ts":1551443117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Gecko certainly, yeah","msgtype":"m.text"},"ts":1551444171000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I guess it makes sense","msgtype":"m.text"},"ts":1551444224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, a Record could probably have worked too, but that would've meant duplicating all the \"define the attributes\" stuff","msgtype":"m.text"},"ts":1551444263000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: some things would have to be parameterized, indeed","msgtype":"m.text"},"ts":1551444340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, maybe I could add a note that the object will never escape","msgtype":"m.text"},"ts":1551444373000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I did think of that, but either way is fine","msgtype":"m.text"},"ts":1551444449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if you could direct whoever contacted you about attending the \"Web Components\" meeting to comment on https://github.com/w3c/webcomponents/issues/786 that'd be great","msgtype":"m.text"},"ts":1551447047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'll ensure they get in and have a say, assuming nobody objects to Mozilla hosting","msgtype":"m.text"},"ts":1551447089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi annevk. Re https://github.com/servo/rust-url/issues/488, do you think the spec should change to support path only (no authority) URLs with \"://\" ?","msgtype":"m.text"},"ts":1551455890000,"senderName":"SimonSapin_","senderId":"SimonSapin_@irc"},
{"content":{"body":"SimonSapin: what would that mean?","msgtype":"m.text"},"ts":1551456105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"such that indexeddb://foo/bar can parse without the cannot-be-a-base flag","msgtype":"m.text"},"ts":1551456156000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and without a host name","msgtype":"m.text"},"ts":1551456179000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(\"foo\" is part of the path)","msgtype":"m.text"},"ts":1551456185000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: but how would we decide the schemes to apply that to?","msgtype":"m.text"},"ts":1551456188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: seems rather incompatible with a generic URL parser","msgtype":"m.text"},"ts":1551456202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah thatâ€™s a good point","msgtype":"m.text"},"ts":1551456213000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Domenic: so apparently .close() queues a task to discard a bc, but .closed knows about it directly","msgtype":"m.text"},"ts":1551468520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: this stuff is...","msgtype":"m.text"},"ts":1551468542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Was that for all BCs or just auxiliary ones","msgtype":"m.text"},"ts":1551468579000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: top-level I suppose (you can .close() a non-aux too in certain cases)","msgtype":"m.text"},"ts":1551468665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Safari does keep opener/closed sync (in that closed will be false after close(), but true once discard happens","msgtype":"m.text"},"ts":1551468704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and in Firefox at least named targeting is also affected by the internal bit .closed looks at","msgtype":"m.text"},"ts":1551468781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what nightmare is this","msgtype":"m.text"},"ts":1551468794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for tests, when you have multiple arrays that signify parameters, is there a better pattern than nested forEach?","msgtype":"m.text"},"ts":1551474159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Don't think so. Maybe declaring the two arrays up-front instead of [.......].forEach() style. Also I prefer for-of to forEach myself.","msgtype":"m.text"},"ts":1551474210000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Itâ€™s so common Iâ€™d almost abstract it somehow","msgtype":"m.text"},"ts":1551474635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess with for-of Iâ€™d have to use a variable for the array","msgtype":"m.text"},"ts":1551474723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I find that a bit clearer","msgtype":"m.text"},"ts":1551475527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like, here's the matrix of test data, then here's the test","msgtype":"m.text"},"ts":1551475538000,"senderName":"Domenic","senderId":"Domenic@irc"}
]