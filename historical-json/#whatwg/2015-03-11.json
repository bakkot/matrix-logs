[
{"content":{"body":"jgraham: transpiler outputs source code, not object code, right?","msgtype":"m.text"},"ts":1426034330000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Mateon1: sounds like Swift","msgtype":"m.text"},"ts":1426034373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from what little I remember hearing about stuff that swift has","msgtype":"m.text"},"ts":1426034407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the benefit in practice of Optional is mainly preventing NPEs, right?","msgtype":"m.text"},"ts":1426034624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(I'm asking)","msgtype":"m.text"},"ts":1426034630000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"decides to read up some","msgtype":"m.emote"},"ts":1426034640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"... or avoiding segfaults or whatever consequence is","msgtype":"m.text"},"ts":1426034904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anybody have opinions on what HTTP client library is best practice to use in Java code these days?","msgtype":"m.text"},"ts":1426038043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"context is https://github.com/validator/validator/issues/61","msgtype":"m.text"},"ts":1426038070000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders about https://developers.google.com/api-client-library/java/google-http-java-client/setup but the fact that page causes a mixed-content warning doesn't inspire huge confidence","msgtype":"m.emote"},"ts":1426038165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh anyway that's not a general-purpose libary (\"provides simple, flexible, access to Google APIs for Java client applications\")","msgtype":"m.text"},"ts":1426038246000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: If you like. But early C++ compilers ouput C code and invoked an existing C compiler on that. The modern Nim compiler, for example, does the same thing. Other compilers like GHC have options to output C or JS code rather than object files. So it seems to me to be an arbitary distinction that doesn't really capture the most interesting part of what a compiler does.","msgtype":"m.text"},"ts":1426067005000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: what archive formats?","msgtype":"m.text"},"ts":1426067515000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"terinjokes: https://w3ctag.github.io/packaging-on-the-web/","msgtype":"m.text"},"ts":1426069625000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: indeed","msgtype":"m.text"},"ts":1426072623000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Mateon1: JS Typed Objects give you some of what you want.","msgtype":"m.text"},"ts":1426072711000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"So it seems foo::bar would be a valid URL, right? I'm writing a browser and wonder if I should always treat foo::bar as a searchterm (think C++) instead of a link with an explicit scheme - are there any common protocols which use URLs with a :bar path?","msgtype":"m.text"},"ts":1426078434000,"senderName":"The-Compiler","senderId":"The-Compiler@irc"},
{"content":{"body":"Domenic: i didn't think that went anywhere, since it wasn't very popular at EWS","msgtype":"m.text"},"ts":1426091271000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"I've been shimming this for about 2 years now","msgtype":"m.text"},"ts":1426091292000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"I might be very stupid, but I don't see where new Event() initializes the bubbled and cancelable attributes","msgtype":"m.text"},"ts":1426094892000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: new Event(\"plop\", {\"bubbles\":true, \"cancelable\":false})?","msgtype":"m.text"},"ts":1426095231000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: I mean if you do new Event() with no arguments, per the spec","msgtype":"m.text"},"ts":1426095284000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1426095288000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"it looks like, both as false?","msgtype":"m.text"},"ts":1426095302000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"in the IDL https://dom.spec.whatwg.org/#dfnReturnLink-0","msgtype":"m.text"},"ts":1426095311000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"but i don't see any prose other than that, no","msgtype":"m.text"},"ts":1426095353000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"better link https://dom.spec.whatwg.org/#interface-event","msgtype":"m.text"},"ts":1426095385000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Oh right, that thing there.","msgtype":"m.text"},"ts":1426095620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, event constructors are defined pretty magically","msgtype":"m.text"},"ts":1426095862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Heh. encoding/single-byte-decoder.html has \"interesting\" behavior in Chrome. In the iframe test, Chrome sniffs the byte stream ([0x00, 0x01 ... 0xFF]) - per [[MIMESNIFF]] - and overrides the content type as application/octet-stream and offers to download the file. Or, well, 167 files. :P","msgtype":"m.text"},"ts":1426116651000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Fun :)","msgtype":"m.text"},"ts":1426116888000,"senderName":"jgraham","senderId":"jgraham@irc"}
]