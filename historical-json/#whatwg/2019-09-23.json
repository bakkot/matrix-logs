[
{"content":{"body":"annevk: hey! I've aligned TAO processing to what we previously talked about CORS does: https://github.com/w3c/resource-timing/pull/214","msgtype":"m.text"},"ts":1569229865000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"now got a question on that PR saying that it'd be great to point at what CORS does https://github.com/w3c/resource-timing/pull/214#pullrequestreview-289023889","msgtype":"m.text"},"ts":1569229889000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"but I'm having a hard time finding what to point at. Fetch seems to run the CORS check above redirects, and I'm not 100% sure how tainted origins fit into that","msgtype":"m.text"},"ts":1569229990000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I'm not sure I understand the logic in the PR","msgtype":"m.text"},"ts":1569230039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I'm painfully aware that the PR in question doesn't provide full Fetch integration, but didn't want to hold that observable difference between CORS and TAO until full integration happened)","msgtype":"m.text"},"ts":1569230064000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: when following redirects Fetch will change the requesting origin to an opaque origin when multiple origins are crossed","msgtype":"m.text"},"ts":1569230079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: which means that only null can match it","msgtype":"m.text"},"ts":1569230093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: but I don't see that in your text","msgtype":"m.text"},"ts":1569230098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, and * for non-credentialed requests)","msgtype":"m.text"},"ts":1569230120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: ooh sorry, these days we set a tainted flag","msgtype":"m.text"},"ts":1569230171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: see step 10 of https://fetch.spec.whatwg.org/#http-redirect-fetch for when it gets set","msgtype":"m.text"},"ts":1569230211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, saw the flag set, but not sure where it's taken into account along with a CORS check","msgtype":"m.text"},"ts":1569230248000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: step 4 of https://fetch.spec.whatwg.org/#concept-cors-check","msgtype":"m.text"},"ts":1569230261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: in particular the request's origin will serialize as null","msgtype":"m.text"},"ts":1569230287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, https://fetch.spec.whatwg.org/#serializing-a-request-origin","msgtype":"m.text"},"ts":1569230296000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"got it!","msgtype":"m.text"},"ts":1569230300000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: one more point, is the tainted flag setting influenced by any CORS checks? Didn't see any","msgtype":"m.text"},"ts":1569230885000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: what do you mean?","msgtype":"m.text"},"ts":1569231004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should the cross-origin redirects also opt-in to CORS? Or is it sufficient that the final response does?","msgtype":"m.text"},"ts":1569231032000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: redirects also need to carry CORS headers","msgtype":"m.text"},"ts":1569231060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can you point me to that part in the processing? saw CORS checks only in HTTP fetch and CORS-Preflight fetch","msgtype":"m.text"},"ts":1569231137000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: 4.4 of https://fetch.spec.whatwg.org/#http-fetch happens before the redirect is processed","msgtype":"m.text"},"ts":1569231140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: and then if we hit another redirect, that'll go through 4.4 again","msgtype":"m.text"},"ts":1569231151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, cool","msgtype":"m.text"},"ts":1569231183000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: in particular note that before step 5 of HTTP fetch we haven't really done much with the status code (other than perhaps HTTP authentication)","msgtype":"m.text"},"ts":1569231206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(oh, and ranges and 304, they happen earlier)","msgtype":"m.text"},"ts":1569231223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: will you make the cancel() method throw if someone passes in a signal to a stream?","msgtype":"m.text"},"ts":1569236612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think so, it'd just be another mechanism for canceling the stream.","msgtype":"m.text"},"ts":1569236632000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: JakeA's comment made me wonder if we should add abort() to fetch()'s theoretical FetchObserver, but it seemed to me whoever vends the signal might not like that being an option","msgtype":"m.text"},"ts":1569236674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It depends on the programming model, yeah, I'm not sure.","msgtype":"m.text"},"ts":1569236707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: though I suppose that if you invoke fetch() yourself you can always not pass the signal anyway","msgtype":"m.text"},"ts":1569236713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but if someone handed you the result of fetch() or a created stream it might be nice if you get to do things with it, but not decide to cancel it","msgtype":"m.text"},"ts":1569236745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think for streams at least the single-consumer model means you should get all the powers once you have the stream","msgtype":"m.text"},"ts":1569236823000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like, reading is destructive, so allowing reads but not cancels isn't very useful.","msgtype":"m.text"},"ts":1569236842000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I had one other thought on import maps, rather than require import URLs, have a way to make all fetches go through it; that way you can use common names like jquery for images and CSS too","msgtype":"m.text"},"ts":1569236855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I mean we could do that especially for URL-like specifiers. But bare specifiers, I'm not sure, <a href=\"jquery\"> or <script src=\"jquery\"> already have a meaning.","msgtype":"m.text"},"ts":1569236896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm yeah, I guess there's all the API mismatch","msgtype":"m.text"},"ts":1569236976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a feeling this is the second time I've had this realization","msgtype":"m.text"},"ts":1569236991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: in the fetch abort discussions, folks seemed to want to keep observation and abort separate","msgtype":"m.text"},"ts":1569237003000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: doesn't make sense for streams at least","msgtype":"m.text"},"ts":1569237047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: since read() is just as destructive as cancel()","msgtype":"m.text"},"ts":1569237061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1569237450000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Anyone have a reference to the \"async decisions only\" policy that I've heard mentioned? Is it in some popular charters or something?","msgtype":"m.text"},"ts":1569237727000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what's the context? end-user UI?","msgtype":"m.text"},"ts":1569238183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: contrasting with TC39","msgtype":"m.text"},"ts":1569238199000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ooh WG decision making","msgtype":"m.text"},"ts":1569238232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so I looked at https://whatwg.org/working-mode#changes and we don't mention that even though it's a somewhat critical part of our Working Mode","msgtype":"m.text"},"ts":1569238283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We have a thing in FAQ about no F2F meetings","msgtype":"m.text"},"ts":1569238300000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We might have to adjust that a bit too since there certainly are meetings affecting stuff we develop","msgtype":"m.text"},"ts":1569238375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the main thing is that all decisions are subject to appeal when done within a reasonable amount of time","msgtype":"m.text"},"ts":1569238455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And generally we don't make substantive changes without allowing at least a week for discussion","msgtype":"m.text"},"ts":1569238502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe s/substantive/major/","msgtype":"m.text"},"ts":1569238538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: filed https://github.com/whatwg/sg/issues/98 and also created a PR for the FAQ","msgtype":"m.text"},"ts":1569240343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah you saw, doh","msgtype":"m.text"},"ts":1569240438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice, I ask a small question and annevk improves all our docs, my work here is done ^_^","msgtype":"m.text"},"ts":1569240487000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ramen time...","msgtype":"m.text"},"ts":1569240493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Jealous","msgtype":"m.text"},"ts":1569241250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oof just had some ramen myself","msgtype":"m.text"},"ts":1569246415000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I already miss the ramen in Fukuoka","msgtype":"m.text"},"ts":1569246941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: heya, when do you think we can make progress on https://github.com/tabatkins/bikeshed/issues/964?","msgtype":"m.text"},"ts":1569249822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it spans about 4 repos so there's some fun dependency problems, but there's also the issue of not having a patch at all for Bikeshed and me really wishing you would write it","msgtype":"m.text"},"ts":1569249890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^_^ I can go ahead and do it this week.","msgtype":"m.text"},"ts":1569250949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Taking some recovery days from losing weekends to travel, but I'll be working on Wednesday","msgtype":"m.text"},"ts":1569250976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\\o.","msgtype":"m.text"},"ts":1569251004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" /","msgtype":"m.text"},"ts":1569251011000,"senderName":"annevk","senderId":"annevk@irc"}
]