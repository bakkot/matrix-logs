[
{"content":{"body":"man, i hate twitter. not even enough room for \"thanks!\" in my last tweet.","msgtype":"m.text"},"ts":1377738252000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_ perhaps you should start tweeting from your own site instead. #indiewebcamp ;)","msgtype":"m.text"},"ts":1377739251000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"how would that reach the people on twitter?","msgtype":"m.text"},"ts":1377739266000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i only tweet when i have to respond to something there","msgtype":"m.text"},"ts":1377739291000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_ I've been tweeting from my own site since 2010-01-01","msgtype":"m.text"},"ts":1377739306000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"\"how would that reach the people on twitter?\" in short, POSSE","msgtype":"m.text"},"ts":1377739334000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"longer explanation: http://indiewebcamp.com/POSSE","msgtype":"m.text"},"ts":1377739374000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"specifically for responding to something on Twitter: http://indiewebcamp.com/Twitter#POSSE_Replies_to_Tweets","msgtype":"m.text"},"ts":1377739403000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so... that's exactly what i did","msgtype":"m.text"},"ts":1377739520000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i posted to \"my own site\", the whatwg mailing list, then responded to a comment on twitter by linking to that.","msgtype":"m.text"},"ts":1377739540000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ah, a manual POSSE ok","msgtype":"m.text"},"ts":1377739639000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(btw, automated syndication to third-party sites is terrible. it makes interaction with the syndicators on those sites horrible.)","msgtype":"m.text"},"ts":1377739698000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i love how many people have reforwarded paul_irish's tweet and my tweet vs how many have actually given any feedback. -_-","msgtype":"m.text"},"ts":1377739731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"email is hard, let's tweet","msgtype":"m.text"},"ts":1377739762000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"btw i was amused the other day","msgtype":"m.text"},"ts":1377739803000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i was reading some indieweb stuff that someone linked to on g+, i think it wa-- oh, he left.","msgtype":"m.text"},"ts":1377739818000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh well.","msgtype":"m.text"},"ts":1377739821000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh \"whenneeded\"","msgtype":"m.text"},"ts":1377740532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's quite a string a letteres in a row","msgtype":"m.text"},"ts":1377740552000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah the attribute name definitely leaves something to be desired","msgtype":"m.text"},"ts":1377740787000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"random thought for an alternative: \"earmarked\"","msgtype":"m.text"},"ts":1377740852000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"I encourage you to work on editing.\" hah yeah","msgtype":"m.text"},"ts":1377740891000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Less words please.\"","msgtype":"m.text"},"ts":1377740922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"earmarked=\"asap\" vs earmarked=\"jit\"? hmm...","msgtype":"m.text"},"ts":1377741051000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the thing about whenneeded=\"\" is that it is thematically consistent with needed=\"\", at least","msgtype":"m.text"},"ts":1377741071000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and markNeeded(), though i've since renamed that execute() in the proposal","msgtype":"m.text"},"ts":1377741081000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so could just use \"earmark\" as a noun instead of \"earmarked\"","msgtype":"m.text"},"ts":1377741132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there any purpose of the dependency count other than knowing whether it's zero or non-zero?","msgtype":"m.text"},"ts":1377741174000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or you need the actual count  for knowing how many times you need to iterate?","msgtype":"m.text"},"ts":1377741215000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's just a boolean, but having it be a count means you don't (as an author) need to do the count yourself","msgtype":"m.text"},"ts":1377741256000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377741291000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i haven't had a chance to go over that email in depth, but one early impression: having a set of strings is easier to debug than a refcount (if somebody forgets to decrement a count, or decrements it twice, it's harder to figure out who than if you add and remove a string from a set)","msgtype":"m.text"},"ts":1377741577000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: so how do I get the dependency count? Or I don't need to, I just do decDependencies() til and if it throws, that's all I need to know?","msgtype":"m.text"},"ts":1377744444000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also, you got an sentence there that you cut off in mid-thought, \"If  decDependencies() is called and it reduces the number to zero,","msgtype":"m.text"},"ts":1377744485000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1377744489000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you shouldn't need the number yourself, i don't think","msgtype":"m.text"},"ts":1377744658000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377744666000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, the sentence should be something like \"...zero, you check if you should run the script\" or some such","msgtype":"m.text"},"ts":1377744675000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: for the case of <table><input></table> do you think the validator should emit an error message or not?","msgtype":"m.text"},"ts":1377750706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ideally I mean","msgtype":"m.text"},"ts":1377750710000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: per spec it seems like <table><input></table> should cause a parse error to be reported before it gets foster-parented","msgtype":"m.text"},"ts":1377756667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but in the parser code I find no condition under which it will actually report an error","msgtype":"m.text"},"ts":1377756703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specifically, in the TreeBuilder code at http://hg.mozilla.org/projects/htmlparser/file/f5c39b263341/src/nu/validator/htmlparser/impl/TreeBuilder.java#l1875 before it checks for type=hidden (and falls back to IN_BODY) or otherwise proceeds, it seems like it should call errStartTagInTable(name) right away","msgtype":"m.text"},"ts":1377757364000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: OK","msgtype":"m.text"},"ts":1377758138000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: should I raise a bug and make a patch?","msgtype":"m.text"},"ts":1377758191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: makes senes","msgtype":"m.text"},"ts":1377758778000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sense","msgtype":"m.text"},"ts":1377758780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1377758797000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: application/xml doesn't work for .svg if you want to be able to embed it in <img>","msgtype":"m.text"},"ts":1377762154000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: also, mapping for .xhtml and .xht are usually application/xhtml+xml","msgtype":"m.text"},"ts":1377762207000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: iirc, the correct type for .ico is image/x-icon (MS don't use image/vnd.microsoft.icon and they didn't register it)","msgtype":"m.text"},"ts":1377762285000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie_: how about when=\"asap\", when=\"jit\"?","msgtype":"m.text"},"ts":1377762720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or when=needed :-)","msgtype":"m.text"},"ts":1377762762000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: could you retweet https://twitter.com/hsivonen/status/372993894767525888 from @encodings please?","msgtype":"m.text"},"ts":1377763784000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I agree with zewt about the refcount sounding hard to debug","msgtype":"m.text"},"ts":1377766964000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Clearly, I don't have enough Twitter followers using the Greek localization of Windows","msgtype":"m.text"},"ts":1377770362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: is there data on how often users switch style sheets in firefox?","msgtype":"m.text"},"ts":1377770596000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't know. probably not","msgtype":"m.text"},"ts":1377770662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377770671000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: why do you want to know?","msgtype":"m.text"},"ts":1377770699000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i'm investigating whether alternative stylesheets can be dropped from the web platform","msgtype":"m.text"},"ts":1377770758000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good point about SVG, I don't want to do XHTML unless we decide we need MIME type to decide Document type which would be unfortunate","msgtype":"m.text"},"ts":1377770768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: will do, if you have access to WHATWG GitHub you can do that too though","msgtype":"m.text"},"ts":1377770894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Would x%  of Firefox sessions involve an alternative stylesheet having been selected at least once during the session be a suitable metric?","msgtype":"m.text"},"ts":1377770922000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk:  If I have access, I don't know about it. Thanks.","msgtype":"m.text"},"ts":1377770945000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: do you want to be a member?","msgtype":"m.text"},"ts":1377771000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1377771016000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: added","msgtype":"m.text"},"ts":1377771070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you retweeted as URL, but close enough :-)","msgtype":"m.text"},"ts":1377771085000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1377771088000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh lol","msgtype":"m.text"},"ts":1377771108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fixes","msgtype":"m.emote"},"ts":1377771111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: yeah, i guess","msgtype":"m.text"},"ts":1377771207000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok. that would be pretty easy to do with telemetry","msgtype":"m.text"},"ts":1377771256000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Modules without module {}; that's kinda neat.","msgtype":"m.text"},"ts":1377772447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it would also be interesting to know how often stylesheets are switched using javascript. i would expect most users that switch stylesheets use page-provided button rather than the browser's View menu","msgtype":"m.text"},"ts":1377773047000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ah. that might be harder to detect","msgtype":"m.text"},"ts":1377773079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i think the most common way to switch is toggling .disabled on <link>, but i don't have data on that","msgtype":"m.text"},"ts":1377773134000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(and it doesn't work in webkit/blink (anymore))","msgtype":"m.text"},"ts":1377773181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: blink/webkit have UseCounter to measure API usage. does gecko have something like that?","msgtype":"m.text"},"ts":1377773713000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders if Opera had that first","msgtype":"m.emote"},"ts":1377774095000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: Looks like you can do something like that. Although I haven't quite worked out which API one uses for counting things","msgtype":"m.text"},"ts":1377774130000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: I don't think so","msgtype":"m.text"},"ts":1377774142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: not in genenic way","msgtype":"m.text"},"ts":1377775233000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"generic","msgtype":"m.text"},"ts":1377775239000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aargh. Our Macedonian localization defaults to UTF-8","msgtype":"m.text"},"ts":1377775285000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why not windows-1251?","msgtype":"m.text"},"ts":1377775291000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I'm done tilting at the localization windmills and will now endeavor to take this stuff away from localizations.","msgtype":"m.text"},"ts":1377775366000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The files on spec bugs, though.","msgtype":"m.text"},"ts":1377775375000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The spec doesn't cover Belarusian, Kazakh or Macedonian","msgtype":"m.text"},"ts":1377775394000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or Greek","msgtype":"m.text"},"ts":1377775398000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"-> lunch","msgtype":"m.emote"},"ts":1377775637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: is there a spec describing all that?","msgtype":"m.text"},"ts":1377775745000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: not all that. I need to file spec bugs to broaden the HTML spec's coverage","msgtype":"m.text"},"ts":1377775792000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: If I navigate to a file within a zip, how does the browser know how to render it, given the lack of content-type?","msgtype":"m.text"},"ts":1377775926000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(still working through the thread, so sorry if that came up)","msgtype":"m.text"},"ts":1377775935000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"has IE always had swapNode()?","msgtype":"m.text"},"ts":1377776535000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.documentElement.swapNode(document.doctype) works","msgtype":"m.text"},"ts":1377776588000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"haha, sweet","msgtype":"m.text"},"ts":1377777798000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: I have dim memories of using swapNode() from a long time ago; I suspect it's been around for quite a while","msgtype":"m.text"},"ts":1377777894000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's nice, too","msgtype":"m.text"},"ts":1377777897000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"JakeA: file extension","msgtype":"m.text"},"ts":1377779847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Would that be a new thing to add to the platform?","msgtype":"m.text"},"ts":1377779868000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes","msgtype":"m.text"},"ts":1377779877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1377779890000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: congrats on being the first to think about this","msgtype":"m.text"},"ts":1377779894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://etherpad.mozilla.org/zipurls explains it","msgtype":"m.text"},"ts":1377779899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: might put that text in http://fetch.spec.whatwg.org/ later today so it's more readable","msgtype":"m.text"},"ts":1377779917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: oh, many good points in your email","msgtype":"m.text"},"ts":1377780070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we'd need to forward some headers indeed","msgtype":"m.text"},"ts":1377780080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if index.html would be returned for a zip url for a directory that contained an index.html","msgtype":"m.emote"},"ts":1377780161000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you mean if you do html.zip%! ?","msgtype":"m.text"},"ts":1377780279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1377780288000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could","msgtype":"m.text"},"ts":1377780296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or whatever.zip%!dir","msgtype":"m.text"},"ts":1377780300000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"where there was a dir/index.html","msgtype":"m.text"},"ts":1377780306000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's more magical","msgtype":"m.text"},"ts":1377780318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: because there could be a \"dir\" too","msgtype":"m.text"},"ts":1377780325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although I guess we could go by lack of extension","msgtype":"m.text"},"ts":1377780334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or require a trailing /","msgtype":"m.text"},"ts":1377780343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess in general we could add those kind of things, but it would involve more logic and reinventing even more stuff","msgtype":"m.text"},"ts":1377780387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was pondering what would break if I took an existing static site and zipped it","msgtype":"m.text"},"ts":1377780391000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"e.g. would it then look for index.xml ?","msgtype":"m.text"},"ts":1377780393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agree it's magic, but perhaps expected","msgtype":"m.text"},"ts":1377780415000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tbh, most of the complication here is allowing full pages to load from a zip","msgtype":"m.text"},"ts":1377780462000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that's what pushes you from fragments to sub-scheme / zip-path, agreed","msgtype":"m.text"},"ts":1377780585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: either way complexity is there though","msgtype":"m.text"},"ts":1377780604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I thought for a moment the relative-url problem goes away if it was only allowed on resources, but it doesn't (css, svg etc)","msgtype":"m.text"},"ts":1377780649000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"in fact, having relative urls work feels super important for css","msgtype":"m.text"},"ts":1377780685000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, should probably start using CSS as example","msgtype":"m.text"},"ts":1377780854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: replied. Still don't quite a good argument against the \"use a fancy server setup\" annoyingly enough","msgtype":"m.text"},"ts":1377781806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess it sorta boils down to \"don't argue for XHTML2 when we can do this in HTML instead\" but it doesn't fit exactly","msgtype":"m.text"},"ts":1377781848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I know what you mean.","msgtype":"m.text"},"ts":1377781902000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"FWIW I assume that module syntax could be changed if there was a strong benefit to having multiple modules in a file","msgtype":"m.text"},"ts":1377781919000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But we already have concatenation of CSS, JS, image spriting… I don't think there's a benefit combining the different types together","msgtype":"m.text"},"ts":1377781935000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I combine CSS & JS, I'm delaying first-render","msgtype":"m.text"},"ts":1377781957000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: It was recently changed to remove it","msgtype":"m.text"},"ts":1377781959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that depends on request latency vs bandwidth too","msgtype":"m.text"},"ts":1377782038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: with high latency a single request might be good","msgtype":"m.text"},"ts":1377782048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: especially if we improve the zip archive format over time (or introduce a fancy researched alternative)","msgtype":"m.text"},"ts":1377782072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know, but that could have been because the use case wasn't discussed, or they didn't consider the problems with zip files or something","msgtype":"m.text"},"ts":1377782125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: If first render requires HTML + CSS (2 requests), then HTML + ZIP{CSS + JS} (2 requests) is going to take longer no matter what the latency is","msgtype":"m.text"},"ts":1377782155000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"since ZIP{CSS + JS} will be larger than CSS","msgtype":"m.text"},"ts":1377782171000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Uh","msgtype":"m.text"},"ts":1377782255000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume you mean ZIP(CSS+JS) will be larger than ZIP(CSS)","msgtype":"m.text"},"ts":1377782272000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it is also possible that the optimal is HTML(inc. minimal inline CSS) + ZIP(CSS+JS)","msgtype":"m.text"},"ts":1377782329000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: I'm saying it might be less long overall and for high latency that might be better","msgtype":"m.text"},"ts":1377782339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I was assuming the CSS would be gzipped","msgtype":"m.text"},"ts":1377782372000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you argue on perf grounds however you clearly want a fully optimized HTTP2 setup that's not going to be in the hands of anyone soon","msgtype":"m.text"},"ts":1377782381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: and yeah, inline CSS would be faster still","msgtype":"m.text"},"ts":1377782397000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is this stuff in any spec yet?","msgtype":"m.text"},"ts":1377782544000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"annevk: if the use-case here is cutting down http requests for performance reasons, we need a format that allows for streaming, otherwise we're trading time-to-first-render for overall load time, and I think the former is better in most cases","msgtype":"m.text"},"ts":1377782550000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Eg, I'd rather look at the core content but missing imagery than a blank screen","msgtype":"m.text"},"ts":1377782573000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think the use cases are easier management of files and dealing with the myriad of zip archive-based formats out there","msgtype":"m.text"},"ts":1377782603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it is inevitable that people will want to use this for performance","msgtype":"m.text"},"ts":1377782802000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"They might, and if it doesn't work they'll switch back. Or Google or Apple or Microsoft will invent a better format with the same properties.","msgtype":"m.text"},"ts":1377782845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it'd be useful for things I explicitly don't want to render progressively, like fonts maybe","msgtype":"m.text"},"ts":1377782864000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"especially different weights of the same typeface","msgtype":"m.text"},"ts":1377782892000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or things you want to have fetched together. Or things you want to distribute on lots of servers without having to worry about files going missing or getting replaced.","msgtype":"m.text"},"ts":1377782911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: more to the point, do you think Chrome would be interested in implementing something like this?","msgtype":"m.text"},"ts":1377785670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was considering adding recommended file extensions to mimesniff before; would that be helpful with zip packages?","msgtype":"m.text"},"ts":1377785682000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"No, and please don't do that","msgtype":"m.text"},"ts":1377785807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes back to not caring about things","msgtype":"m.emote"},"ts":1377785861000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Apart from one sad place in plugin loading, the web doesn't do extensions.","msgtype":"m.text"},"ts":1377785868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The original intent was for downloading","msgtype":"m.text"},"ts":1377785976000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Oh, opposite direction...","msgtype":"m.text"},"ts":1377786060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no idea tbh, Alex Russell has better contacts there. If it's required to sensibly work with ES modules, I guess it'll go in","msgtype":"m.text"},"ts":1377786061000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heycam|away: so we need actual Array in IDL","msgtype":"m.text"},"ts":1377791820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: and I'd like to hint in the IDL what developers can expect","msgtype":"m.text"},"ts":1377791837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: e.g. Promise<Array[DOMString]>","msgtype":"m.text"},"ts":1377791850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: So if the manifest files for w-p-t aren't going to be human-written, shall I just switch to manifestdestiny?","msgtype":"m.text"},"ts":1377792694000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So what did we end up with?","msgtype":"m.text"},"ts":1377792739000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Autogenerated manifests in the repo?","msgtype":"m.text"},"ts":1377792894000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think we ended up with -manual suffix indicates a manual test, -ref suffix indicates a ref, markup files containing testharness.js scripts are testharness files and markup files containing whatever the reftest stuff is are ref files. All other files are helper files except a blacklist of files/directories that are nothing","msgtype":"m.text"},"ts":1377792906000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And maybe we get override.manifest (which could be a different format)","msgtype":"m.text"},"ts":1377792935000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Depending on what happens about tests that want URLs","msgtype":"m.text"},"ts":1377792956000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think I'd prefer just having a python script that computes and returns the data","msgtype":"m.text"},"ts":1377793037000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Rather than that + its output","msgtype":"m.text"},"ts":1377793045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If you do that you can't cache it","msgtype":"m.text"},"ts":1377793182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is annoying","msgtype":"m.text"},"ts":1377793187000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In particular if you want to parse files rather than use regexps, it's necessary to allow incremental updates","msgtype":"m.text"},"ts":1377793213000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Alhtough I guess maybe just dumping JSON would work too","msgtype":"m.text"},"ts":1377793232000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In fact that seems far and away the simplest thing","msgtype":"m.text"},"ts":1377793270000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'll do that","msgtype":"m.text"},"ts":1377793273000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(also, for Moz. we need to store the expected result of each test somewhere, and I imagine that will also be in the manifest, on a local branch)","msgtype":"m.text"},"ts":1377793318000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How does updating work anyway? Based on timestamps?","msgtype":"m.text"},"ts":1377793324000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Based on git hash","msgtype":"m.text"},"ts":1377793332000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I haven't fully thought about this yet","msgtype":"m.text"},"ts":1377793342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And a local branch of what?","msgtype":"m.text"},"ts":1377793359000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"For the expected result","msgtype":"m.text"},"ts":1377793370000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You need to be able to easily update those in an m-c push","msgtype":"m.text"},"ts":1377793386000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1377793388000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This is the bit I haven't fully thought about yet","msgtype":"m.text"},"ts":1377793400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's a somewhat important bit :)","msgtype":"m.text"},"ts":1377793421000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But I figure you have a local clone with a \"mozilla\" branch","msgtype":"m.text"},"ts":1377793445000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: for the case of <table><input></table> - sure, why would it not be an error? i mean, it's a content model thing if nothing else","msgtype":"m.text"},"ts":1377793451000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And Mozilla is origin/master + a commit that adds the manifests","msgtype":"m.text"},"ts":1377793462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: note that <input type=hidden> doesn't get foster parented","msgtype":"m.text"},"ts":1377793465000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: <script when> doesn't really make sense though","msgtype":"m.text"},"ts":1377793476000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, content model how? There's no input in the table in the DOM","msgtype":"m.text"},"ts":1377793477000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and when you update origin you rebase onto that branch","msgtype":"m.text"},"ts":1377793487000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Uh","msgtype":"m.text"},"ts":1377793491000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You rebase that branch onto origin/master","msgtype":"m.text"},"ts":1377793501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: oh, fair enough","msgtype":"m.text"},"ts":1377793504000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"anything that's foster parented should always be a parse error","msgtype":"m.text"},"ts":1377793513000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Fair","msgtype":"m.text"},"ts":1377793519000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So you are always a few commits ahead of origin, but nothing should conflict","msgtype":"m.text"},"ts":1377793527000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and if it's not foster parented (e.g. cos type=hidden) then it's a content model error instead","msgtype":"m.text"},"ts":1377793531000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham, no idea what you're saying :)","msgtype":"m.text"},"ts":1377793558000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and then in m-c you either copy that branch across with all the manifest data, or make the build process pull in a specific revision of that repo (like gaia)","msgtype":"m.text"},"ts":1377793562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: Oh :(","msgtype":"m.text"},"ts":1377793573000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in other news, the updated dfn.js is cool.","msgtype":"m.text"},"ts":1377793591000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I *really* don't want to touch other repos to fix Gecko bugs","msgtype":"m.text"},"ts":1377793595000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why i didn't do this earlier, i dunno","msgtype":"m.text"},"ts":1377793600000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: Well if you want to commit a test to the other repo you kind of have to. But if you want to use it read-only then copying is a reasonable thing to do ofc.","msgtype":"m.text"},"ts":1377793648000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure which is best overall","msgtype":"m.text"},"ts":1377793659000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: what's new?","msgtype":"m.text"},"ts":1377793665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I'm sure this is at least a solvable problem","msgtype":"m.text"},"ts":1377793672000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: it moves the box to the bottom right when you click a link, so you can just go through the others without having to go back to the dfn each time","msgtype":"m.text"},"ts":1377793691000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"What I am even more worried about is how you get a all the expected data up to date automagically","msgtype":"m.text"},"ts":1377793703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like it has to be racy","msgtype":"m.text"},"ts":1377793715000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: wow","msgtype":"m.text"},"ts":1377793720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it was like 3 lines of new code","msgtype":"m.text"},"ts":1377793750000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Oooh! Neat","msgtype":"m.text"},"ts":1377793752000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: that's awesome","msgtype":"m.text"},"ts":1377793753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"brb commute","msgtype":"m.text"},"ts":1377793765000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham, how about \"each m-c revision knows which tests are expected to fail\"?","msgtype":"m.text"},"ts":1377793826000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: How though? If I import 100 new tests how do I work out which tests are expected to fail?","msgtype":"m.text"},"ts":1377793905000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can run those tests in a specific revision and update the expectations","msgtype":"m.text"},"ts":1377793922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But by the time I do that there will be a new revision","msgtype":"m.text"},"ts":1377793934000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"of m-c","msgtype":"m.text"},"ts":1377793942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which might fail different tests","msgtype":"m.text"},"ts":1377793950000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then make sure you push the expectations before something lands that changes the expectations","msgtype":"m.text"},"ts":1377793953000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That sounds racy…","msgtype":"m.text"},"ts":1377793974000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not more so than any change","msgtype":"m.text"},"ts":1377793983000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, maybeI have to think of m-c as a shared resource with some sort of optimistic concurrency","msgtype":"m.text"},"ts":1377794130000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or you can close all the trees :)","msgtype":"m.text"},"ts":1377794132000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Doesn't help if a change that breaks your expectation landed on fx-team while you landed your update to inbound","msgtype":"m.text"},"ts":1377794186000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Let's say I don't think someone breaking your tests while you're adding them is something you should worry about a lot","msgtype":"m.text"},"ts":1377794330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So the problem I have is that it doesn't obviously feel like it will be low contention. I don't know what the rate of changesets coming in that affect web platform support is","msgtype":"m.text"},"ts":1377794337000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Depends on how big your imports will be, I guess","msgtype":"m.text"},"ts":1377794572000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And how diverse","msgtype":"m.text"},"ts":1377794586000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, I guess that's a good point. If the imports are frequent there is less chance of conflicts.","msgtype":"m.text"},"ts":1377794858000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't control the diversity though if the goal is to run everything (which I think it is)","msgtype":"m.text"},"ts":1377794880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Zip archives: http://fetch.spec.whatwg.org/#zip-archives (has infrastructure plus API, but not the URL/Fetch stuff)","msgtype":"m.text"},"ts":1377794900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does the zip format have a spec you can refer to?","msgtype":"m.text"},"ts":1377795565000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I think it might be http://www.pkware.com/documents/casestudies/APPNOTE.TXT","msgtype":"m.text"},"ts":1377795597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My understanding is that that's a \"spec\" more in the tradition of HTML4","msgtype":"m.text"},"ts":1377795896000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i.e. it doesn't actually define enough to provide interop","msgtype":"m.text"},"ts":1377795918000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: are you suggesting that annevk should rewrite it? :)","msgtype":"m.text"},"ts":1377795929000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yeah, I wasn't sure if you mean \"refer to\" as in \"look at as a reference to write a spec\" or as in \"a normative reference\"","msgtype":"m.text"},"ts":1377795940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but yes, it definitely needs to be rewritten (a much smaller subset of)","msgtype":"m.text"},"ts":1377795956000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"otherwise it'll be an interop nightmare (for example, like we talked about on the list, the local file header vs. central file directory issue)","msgtype":"m.text"},"ts":1377795982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and all the usual error handling and parsing details that non-web-specs rarely address","msgtype":"m.text"},"ts":1377796070000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"afk","msgtype":"m.text"},"ts":1377796084000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SimonSapin: I'm suggesting that someone has to if we want this to not be a disaster","msgtype":"m.text"},"ts":1377796139000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So yes, in short","msgtype":"m.text"},"ts":1377796143000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That APPNOTE.TXT file seems to suggest that might not be okay with them? It's a bit unclear what the legal situation is to me.","msgtype":"m.text"},"ts":1377796348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which I guess might kill this thing altogether?","msgtype":"m.text"},"ts":1377796372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how does HTTP 1.1 reference gzip compression?","msgtype":"m.text"},"ts":1377796724000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"RFC 1952","msgtype":"m.text"},"ts":1377797007000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: (your zip idl has > where you want <)","msgtype":"m.text"},"ts":1377798599000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: is there a url format for accessing files in zip archives?","msgtype":"m.text"},"ts":1377798611000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: or do you have to get urls to files out of them by script?","msgtype":"m.text"},"ts":1377798644000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: That's what Anne is trying to come up with.","msgtype":"m.text"},"ts":1377798646000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"doesn't it have to be a fragment identifier?","msgtype":"m.text"},"ts":1377798699000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, it's semantically logical, no?","msgtype":"m.text"},"ts":1377798708000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"http://.../...zip#path/to/file.html#fragmentInHTMLFile","msgtype":"m.text"},"ts":1377798733000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess it makes relative urls weird","msgtype":"m.text"},"ts":1377798763000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i think all of the approaches do something weird with relative urls","msgtype":"m.text"},"ts":1377800928000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: sorry, suggest that what might not be okay with them?","msgtype":"m.text"},"ts":1377800979000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the file format needs respeccing no matter what, as for whether it's okay to use that as a reference I don't know...","msgtype":"m.text"},"ts":1377801019000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: fragment identifiers have problems, see the email","msgtype":"m.text"},"ts":1377805622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"the\"?","msgtype":"m.text"},"ts":1377805640000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: OP","msgtype":"m.text"},"ts":1377805656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Aug/0278.html ?","msgtype":"m.text"},"ts":1377805665000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah","msgtype":"m.text"},"ts":1377805673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you're going to change the url syntax anyway, you can make fragments work","msgtype":"m.text"},"ts":1377805719000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: see section 1.4 of http://www.pkware.com/documents/casestudies/APPNOTE.TXT","msgtype":"m.text"},"ts":1377805722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just redefine how relative urls are resolved when you're in a \"zip context\"","msgtype":"m.text"},"ts":1377805737000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: except then you also need to change HTML, CSS, etc. to make them aware they're loaded from a zip","msgtype":"m.text"},"ts":1377805742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1377805765000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \"zip context\" ;)","msgtype":"m.text"},"ts":1377805772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's a pretty localised change","msgtype":"m.text"},"ts":1377805788000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you'd just have http://.../...zip#path/to/file#subfrag","msgtype":"m.text"},"ts":1377805799000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"What about the links in #path/to/file ?","msgtype":"m.text"},"ts":1377805817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and you'd say that when you're in a zip file context resolving a url, \"foo/bar\" resolves relative to the #path/to/file part","msgtype":"m.text"},"ts":1377805824000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess you'd actually only have to change the relative url resolver, not the syntax","msgtype":"m.text"},"ts":1377805847000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And ##foo would cause scrolling?","msgtype":"m.text"},"ts":1377805857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just #foo would cause scrolling","msgtype":"m.text"},"ts":1377805876000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it'd require careful thought around how Location exposes these urls","msgtype":"m.text"},"ts":1377805947000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Given that the resolved URL would also still have the fragments and you'd sometimes have to move them over to Fetch and sometimes handle them locally it would all get rather messy...","msgtype":"m.text"},"ts":1377805975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think that's a given regardless of the solution...","msgtype":"m.text"},"ts":1377805990000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Using a sub-scheme or zip-path seems much simpler","msgtype":"m.text"},"ts":1377805992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well a subscheme doesn't seem to be any cleaner really","msgtype":"m.text"},"ts":1377806006000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you have all the same problems","msgtype":"m.text"},"ts":1377806010000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like, Location's API would be very confused","msgtype":"m.text"},"ts":1377806028000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"anyway, i'm not saying teh frag id thing is a better idea","msgtype":"m.text"},"ts":1377806046000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Your fragment idea is novel, admittedly. Should probably consider it some more.","msgtype":"m.text"},"ts":1377806636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might be worth looking at how compound e-mails handle relative urls","msgtype":"m.text"},"ts":1377806701000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, here's another idea","msgtype":"m.text"},"ts":1377806719000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so you navigate to http://example.com/foo.zip#baz/bar.html","msgtype":"m.text"},"ts":1377806741000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but the actual URL of the file that's loaded isn't that","msgtype":"m.text"},"ts":1377806749000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's zip:///baz/bar.html","msgtype":"m.text"},"ts":1377806761000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or zip://36573525327537/baz/bar.html","msgtype":"m.text"},"ts":1377806776000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or zip://example.com/36573525327537/baz/bar.html","msgtype":"m.text"},"ts":1377806807000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"where 36573525327537 is some unique id for the zip file","msgtype":"m.text"},"ts":1377806827000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"much like how blob: urls work","msgtype":"m.text"},"ts":1377806832000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, mnot suggested that too","msgtype":"m.text"},"ts":1377806881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably need to encode the origin in there somehow","msgtype":"m.text"},"ts":1377806886000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Then you have an outer and inner URL and need to deal with origin specially.","msgtype":"m.text"},"ts":1377806911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only problem %/ or %! has is that it's not legal URL syntax at the moment...","msgtype":"m.text"},"ts":1377806929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well we already have lots of logic for dealing with origins like that","msgtype":"m.text"},"ts":1377806931000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what would %/ have Location.path return?","msgtype":"m.text"},"ts":1377806962000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Your goal is preserving URL syntax to the extent it is ruined already?","msgtype":"m.text"},"ts":1377806972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my goal is mainly making it possible to take self-contained stuff, stick it in a zip file, and have it work unmodified","msgtype":"m.text"},"ts":1377807007000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it seems like it would be nice to not have blob's \"local magic URL segment\" so ZIP urls can always be sent around like any other URL","msgtype":"m.text"},"ts":1377807011000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"even if it messes around with locationpath","msgtype":"m.text"},"ts":1377807012000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: the bit up to %/ I think","msgtype":"m.text"},"ts":1377807016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: we'd have zipPath for the other bit","msgtype":"m.text"},"ts":1377807031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: you would have two URLs, one that you send around, and one used internally to make relative urls work","msgtype":"m.text"},"ts":1377807034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: so you'd still have to redefine relative url resolution","msgtype":"m.text"},"ts":1377807049000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes, definitely, the idea of %! is to confine changes to URL and Fetch","msgtype":"m.text"},"ts":1377807066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the whole idea of supporting navigation to zip urls makes me nervous, it's the part that makes everything complicated)","msgtype":"m.text"},"ts":1377807067000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: my concern with that is js-implemented url resolution would utterly break","msgtype":"m.text"},"ts":1377807080000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: no, CSS with subresources has the same issues","msgtype":"m.text"},"ts":1377807086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: please hop on the new URL() train?","msgtype":"m.text"},"ts":1377807125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1377807131000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: not familiar with that","msgtype":"m.text"},"ts":1377807143000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: maybe I'm not following your concern","msgtype":"m.text"},"ts":1377807170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: say you have some script that does path manipulation","msgtype":"m.text"},"ts":1377807183000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like, it concatenates \"/subresource/foo.png\" to location.path or something","msgtype":"m.text"},"ts":1377807201000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it would break if you took that whole app and packaged it in a zip, if we change how relative urls work","msgtype":"m.text"},"ts":1377807216000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it seems that's true for using fragments too","msgtype":"m.text"},"ts":1377807240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1377807247000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"only the inner/outer thing would keep that, of the suggestions i've seen so far, i think","msgtype":"m.text"},"ts":1377807265000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I guess there's some appeal to it, but it seems fairly bad to introduce even more origin-magic. Shit like that goes wrong all the time. :/","msgtype":"m.text"},"ts":1377807384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1377807403000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"like when?","msgtype":"m.text"},"ts":1377807408000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we use it e.g. for srcdoc:","msgtype":"m.text"},"ts":1377807414000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not to mention about:blank, of course","msgtype":"m.text"},"ts":1377807423000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(srcdoc=\"\", not srcdoc:)","msgtype":"m.text"},"ts":1377807435000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's not like data URLs work fine... Gecko had a bunch of problems with jar URLs. Not sure about srcdoc=\"\".","msgtype":"m.text"},"ts":1377807444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data: URLs work fine, the problem is that there's two different implementations and people disagree about which we should be doing.","msgtype":"m.text"},"ts":1377807473000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(plus some issues around redirects, but we get that kind of issue with other schemes too)","msgtype":"m.text"},"ts":1377807504000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Introducing inner/outer seems bad too. And will break code that uses e.g. document.location to get the origin...","msgtype":"m.text"},"ts":1377807690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can the browser render a html response half way through the transfer, without chunked encoding?","msgtype":"m.text"},"ts":1377807950000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1377807964000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Even if it's gzipped?","msgtype":"m.text"},"ts":1377807979000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1377807986000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(whether they do or not, i dunno. but they could.)","msgtype":"m.text"},"ts":1377808002000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk, noted (about Array)","msgtype":"m.text"},"ts":1377808010000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: yeah, that's why i was trying to put the origin into the url somehow...","msgtype":"m.text"},"ts":1377808021000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, thought so, in an argument where I'm being told it's not possible. Pfft.","msgtype":"m.text"},"ts":1377808024000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: why wouldn't it be possible?","msgtype":"m.text"},"ts":1377808034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yep, that's what I'm saying","msgtype":"m.text"},"ts":1377808057000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder how much people are confusing gzip and zip","msgtype":"m.text"},"ts":1377808070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"many...","msgtype":"m.text"},"ts":1377808090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: so yeah, we should fix the whole array mess and prolly remove []","msgtype":"m.text"},"ts":1377808118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the benefit of chunked encoding then? Flushing without knowing the content length?","msgtype":"m.text"},"ts":1377808138000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heycam: sequence<> seems good, but could just be \"... sequence\" maybe?","msgtype":"m.text"},"ts":1377808140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there are various advantages, but yeah, one is not having to know the length ahead of time","msgtype":"m.text"},"ts":1377808171000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: like Constructor(...Blob parts, Options dict)","msgtype":"m.text"},"ts":1377808179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure \"…\" is the right semantics if you want to pass an [] object","msgtype":"m.text"},"ts":1377808211000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"-> call","msgtype":"m.emote"},"ts":1377808213000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie_: cheers!","msgtype":"m.text"},"ts":1377808221000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heycam: I thought sequence was like var freshArr  = [...arrLike] in ES6","msgtype":"m.text"},"ts":1377808347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: I think that's what we want it to be anyway","msgtype":"m.text"},"ts":1377808358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: ah calls... boring","msgtype":"m.text"},"ts":1377808697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: I also wanted to talk about ByteString and [EnsureUTF16]","msgtype":"m.text"},"ts":1377808715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You don't want to use ... in that way.","msgtype":"m.text"},"ts":1377808792000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foo(...parts, dict) is equivalent to foo(parts[0], parts[1], parts[2], ..., dict) in user code.","msgtype":"m.text"},"ts":1377808816000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is not the same as what you're trying to indicate there.","msgtype":"m.text"},"ts":1377808827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah yeah, that's how the constructor should have worked.","msgtype":"m.text"},"ts":1377808833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So you want [...Blob] parts I guess","msgtype":"m.text"},"ts":1377808843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1377808847000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess.","msgtype":"m.text"},"ts":1377808860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Doing new-ES-style destructering makes a lot of sense now it exists","msgtype":"m.text"},"ts":1377808885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: I'm not really happy with the syntax at the moment, but http://fetch.spec.whatwg.org/#api is something like what should be expressible I guess","msgtype":"m.text"},"ts":1377808939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: annevk: TabAtkins: I think ideally parameters that can be \"sequences\" should just use `Array.from` semantics.","msgtype":"m.text"},"ts":1377813451000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: What does that mean?","msgtype":"m.text"},"ts":1377813467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: works on iterables, array-likes, and true arrays.","msgtype":"m.text"},"ts":1377813514000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ah, ok.  Yes.","msgtype":"m.text"},"ts":1377813520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"although, you have to anticipate the possibility of infinite iterators, hrm.","msgtype":"m.text"},"ts":1377813572000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i guess Array.from just loops forever for those","msgtype":"m.text"},"ts":1377813586000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1377813741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, for what you put in http://fetch.spec.whatwg.org/#api does Array differ from sequence at all?","msgtype":"m.text"},"ts":1377814364000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(just more obvious?)","msgtype":"m.text"},"ts":1377814367000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or is it that it's allowed to return a reference to a not-newly-created object?","msgtype":"m.text"},"ts":1377814383000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie_: about <table><input></table> Henri's parser wasn't emitting an error for it so I'd been assuming there was some reason for that, that it was intentional -- that the spec didn't require a parse error for it","msgtype":"m.text"},"ts":1377815623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then... I actually bothered to read the spec. So I filed https://bugzilla.mozilla.org/show_bug.cgi?id=910588 (log a parse error for <table><input></table>) & I'll send a patch there","msgtype":"m.text"},"ts":1377815712000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that thing is that when Henri's code isn't doing what I'd expect my first assumption is always that it's because I'm misunderstanding something or doing something wrong","msgtype":"m.text"},"ts":1377815791000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: hehe","msgtype":"m.text"},"ts":1377817242000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"MikeSmith: i know the feeling","msgtype":"m.text"},"ts":1377817247000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gar gmail's ui is stupid","msgtype":"m.text"},"ts":1377817756000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i can't collapse hixie's 50-page reply without it also hiding the reply I'm writing to it","msgtype":"m.text"},"ts":1377817771000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"2px scrollbar","msgtype":"m.text"},"ts":1377817779000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"pine baby","msgtype":"m.text"},"ts":1377817794000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"definitely not pining for pine","msgtype":"m.text"},"ts":1377817802000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"pine is so old school","msgtype":"m.text"},"ts":1377817874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mutt is what everybody's using these days","msgtype":"m.text"},"ts":1377817883000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gnus 4 eva","msgtype":"m.text"},"ts":1377818014000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"i could never figure gnus out","msgtype":"m.text"},"ts":1377818067000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"would make my life way easier given that i do everything else in emacs","msgtype":"m.text"},"ts":1377818080000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hober and howcome are keeping gnus alive","msgtype":"m.text"},"ts":1377818251000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what exactly happened to the idea of spammers being blacklisted","msgtype":"m.text"},"ts":1377818391000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"at some point spamming openly became \"okay\" and nobody asked me","msgtype":"m.text"},"ts":1377818405000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: sounds like a job for Peter Swire","msgtype":"m.text"},"ts":1377818443000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie_: if you hit yourself on the head with a brick first, gnus starts to make more sense","msgtype":"m.text"},"ts":1377818534000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wait sorry I guess that's the general strategy for using emacs","msgtype":"m.text"},"ts":1377818550000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zewt: it did?","msgtype":"m.text"},"ts":1377818560000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"spamming whom where?","msgtype":"m.text"},"ts":1377818566000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"on the internet","msgtype":"m.text"},"ts":1377818579000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't understand what you think changed","msgtype":"m.text"},"ts":1377818605000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"marketing departments somehow convinced the world that \"this person gave us his email address for transactional mails in order to complete a purchase\" == \"we can send commercials to this email address\"","msgtype":"m.text"},"ts":1377818685000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you're clearly transacting with the wrong merchants.","msgtype":"m.text"},"ts":1377818912000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that would be \"all merchants\" these days :(","msgtype":"m.text"},"ts":1377818953000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not the ones i use...","msgtype":"m.text"},"ts":1377818958000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins, are those section links in the margin css-variables positioned using ems? I wonder if it would look better with a fixed distance from the title of the section","msgtype":"m.text"},"ts":1377819527000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yes they are, and yes, I thought that too.  I hadn't gotten around to it yet.","msgtype":"m.text"},"ts":1377819542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1377819548000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Gonna move 'em with rems I guess.","msgtype":"m.text"},"ts":1377819549000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah that's what I was thinking","msgtype":"m.text"},"ts":1377819554000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the line-height (I guess?) also makes their yellow background look a bit big","msgtype":"m.text"},"ts":1377819587000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"not sure what you can do about that, while keeping them baseline aligned with the text of the section, though","msgtype":"m.text"},"ts":1377819599000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*text of the section title","msgtype":"m.text"},"ts":1377819607000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I tried to make the clickable area sufficiently large.  That does make it look a little weird.","msgtype":"m.text"},"ts":1377819637000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe I can just make the line-height bigger?","msgtype":"m.text"},"ts":1377819647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need to experiment.","msgtype":"m.text"},"ts":1377819651000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interestingly, the Chinese-style angle quotes used around tokens are shown as full width characters in Chrome, but narrowly in Firefox","msgtype":"m.text"},"ts":1377819652000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(the latter looks nicer)","msgtype":"m.text"},"ts":1377819661000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"They look very similar to me on Linux.","msgtype":"m.text"},"ts":1377819700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonder if a different font is being selected","msgtype":"m.text"},"ts":1377819709000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1377819712000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"now that we have variables, I want a CSS function that can be used to do operations on colours","msgtype":"m.text"},"ts":1377819732000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, must be.  I get ugly full-width on one of my machines, in some context.","msgtype":"m.text"},"ts":1377819733000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so I can hue rotate, desaturate, etc. based on a variable value","msgtype":"m.text"},"ts":1377819742000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"What do you take me for, an amateur? http://tabatkins.github.io/specs/css-color/Overview.html#modifying-colors","msgtype":"m.text"},"ts":1377819754000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I was thinking we could use the filter function values","msgtype":"m.text"},"ts":1377819756000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Got approved to go to ED yesterday.","msgtype":"m.text"},"ts":1377819764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh there you go ;)","msgtype":"m.text"},"ts":1377819765000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: you need approval to make an ED?","msgtype":"m.text"},"ts":1377820546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: To actually make a work item for the CSSWG, in the CSSWG's part of the w3 url namespace?  Yes, by convention.","msgtype":"m.text"},"ts":1377820581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I put \"personal\" EDs off in my github due to this.","msgtype":"m.text"},"ts":1377820591000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is partially a result of CSS editors always pointing people to look at our ED repo - anything in there is assumed to be \"real\".","msgtype":"m.text"},"ts":1377820613000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1377820733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"do we have anything in any spec that prevents scripts in inactive documents from running? e.g. when nodes in inactive documents receive events?","msgtype":"m.text"},"ts":1377820794000,"senderName":"Hixie_","senderId":"Hixie_@irc"}
]