[
{"content":{"body":"man, why is utf-8 so hard for libraries to get right","msgtype":"m.text"},"ts":1357523853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thinks this API for events is the way to go: https://gist.github.com/4463430","msgtype":"m.text"},"ts":1357553596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with the second and third argument reversed","msgtype":"m.text"},"ts":1357553603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and for now just make everything bubble and ignore capture altogether","msgtype":"m.text"},"ts":1357553627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is matchesSelector suppoed to be a built-in function on window, or something that a user could do in js?","msgtype":"m.text"},"ts":1357554243000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Builtin on Element, no?","msgtype":"m.text"},"ts":1357554289000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, the one in the proposal is different","msgtype":"m.text"},"ts":1357554305000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I put the <main> tests in a separate file and checked with jgraham and annevk first","msgtype":"m.text"},"ts":1357555391000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: you would do it in JS","msgtype":"m.text"},"ts":1357555430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: as in the proposal","msgtype":"m.text"},"ts":1357555444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well it was marked as \"syntactic sugar\" so I thought you were proposing a built-in equavalent to the following JS","msgtype":"m.text"},"ts":1357555506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since sugar is usually something that you don't have to implement yourself","msgtype":"m.text"},"ts":1357555538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: I think what you did was fine fwiw","msgtype":"m.text"},"ts":1357555564000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ah yeah","msgtype":"m.text"},"ts":1357555621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I think for Element.on we could overload and let the third argument be a string which would be interpreted as that sugar","msgtype":"m.text"},"ts":1357555643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Getting back a stop() function is a bit strange though?","msgtype":"m.text"},"ts":1357555645000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: why?","msgtype":"m.text"},"ts":1357555651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, I just haven't seen it. s/strange/unfamiliar/","msgtype":"m.text"},"ts":1357555666000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I quite like it, seems much more lightweight than returning an object with a method","msgtype":"m.text"},"ts":1357555685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"More used to getting back object I can do moar stuff on.","msgtype":"m.text"},"ts":1357555685000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"well, it can also be an object :)","msgtype":"m.text"},"ts":1357555721000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"And if we'd even want to do something else with the registered listener than stopping it?","msgtype":"m.text"},"ts":1357555725000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Though I guess the jqueryists would actually expect on to return eventTarget itself, so you could chain.","msgtype":"m.text"},"ts":1357555802000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Boo","msgtype":"m.text"},"ts":1357555865000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It'd be nice not having to write addEventListener all the time.","msgtype":"m.text"},"ts":1357555887000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I want to return a function/object as the other pattern of unregistering sucks","msgtype":"m.text"},"ts":1357555918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: True dat.","msgtype":"m.text"},"ts":1357555932000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"(I'm very for the .on it no matter how it's done)","msgtype":"m.text"},"ts":1357555941000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Yeah, I don't want to make addEventListener more complicated","msgtype":"m.text"},"ts":1357555961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only other thing I thought of was making the methods exclusive but I think that's too much inconvenience","msgtype":"m.text"},"ts":1357556008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"note that you could return an object and allow for chaining","msgtype":"m.text"},"ts":1357556059000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"all it takes would be for the returned object to also support .on() and know what event target to send it to (which it ought to)","msgtype":"m.text"},"ts":1357556105000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"of course, I'm not saying that's necessarily a good idea :)","msgtype":"m.text"},"ts":1357556116000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I thought it was just element.matches() these days btw?","msgtype":"m.text"},"ts":1357556266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: sounds like a bit too much magic","msgtype":"m.text"},"ts":1357556271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what bothers me more than the magic is that it actually only chains .on()","msgtype":"m.text"},"ts":1357556407000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"whereas in chaining I'd expect to be able to call whatever is callable on the original event target","msgtype":"m.text"},"ts":1357556429000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"$el.on(...).css(...).appendTo(...) etc.","msgtype":"m.text"},"ts":1357556459000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Eww","msgtype":"m.text"},"ts":1357556479000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"My new hobby: finding useful return values that break chaining","msgtype":"m.text"},"ts":1357556662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Isn't that the normal case?","msgtype":"m.text"},"ts":1357556686000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean typically you expect a function (or method) to return a value","msgtype":"m.text"},"ts":1357556720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Returning the object that you first thought of is a rather strange idea","msgtype":"m.text"},"ts":1357556741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It was a joke :)","msgtype":"m.text"},"ts":1357557117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Minutes are so bad... http://www.w3.org/2012/05/02-webapps-minutes.html#item04 \"[ Bike shedding about name ]\"","msgtype":"m.text"},"ts":1357557339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pretty sure we actually made a decision there","msgtype":"m.text"},"ts":1357557356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw, has anyone tested if IE10 has an “IE9 XML” mode in addition to an “IE10 XML” mode?","msgtype":"m.text"},"ts":1357557553000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess that’s something I need to test","msgtype":"m.text"},"ts":1357557595000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Also: Modes in mobile edition of IE9 and IE10","msgtype":"m.text"},"ts":1357557614000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. Google Maps for desktop renders in the IE10 Standard mode, so they don’t even have the excuse of that mode not existing on mobile","msgtype":"m.text"},"ts":1357557687000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://programmingisterrible.com/post/39812339693/are-16-bits-providing-at-most-65-536-distinct beautiful","msgtype":"m.text"},"ts":1357557787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1357557840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"beautiful","msgtype":"m.text"},"ts":1357557847000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"u2665 chaining","msgtype":"m.emote"},"ts":1357557890000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"also from that blog I learned about https://www.facebook.com/notes/facebook-engineering/xhp-a-new-way-to-write-php/294003943919","msgtype":"m.text"},"ts":1357558277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"The correct solution is to pass this input through htmlspecialchars() before displaying it to the user.\"","msgtype":"m.text"},"ts":1357559342000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"dude, the correct solution is to not use PHP in the first place","msgtype":"m.text"},"ts":1357559353000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"http://programmingisterrible.com/post/39590933826/the-ghost-of-http","msgtype":"m.text"},"ts":1357560078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this blog is getting better and better","msgtype":"m.text"},"ts":1357560084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: doesn't matter, every language has the same problem whenever you string concat HTML","msgtype":"m.text"},"ts":1357560120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it does matter","msgtype":"m.text"},"ts":1357560136000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if you build a templating language specifically for the web and you don't make it so that it escapes HTML by default, don't be surprised that there are so many exploits later","msgtype":"m.text"},"ts":1357560166000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"fair enough I suppose, but I don't really see PHP as a templating language, it's just another language","msgtype":"m.text"},"ts":1357560235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: points to the blogger for including Atom on the list of failures. We should have publishes an RSS5 instead.","msgtype":"m.text"},"ts":1357560794000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hmm. HTML6 is XML. Sneaky. Not even backwards compat afics. http://html6spec.com/","msgtype":"m.text"},"ts":1357562870000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"( http://lists.w3.org/Archives/Public/public-html/2013Jan/0016.html )","msgtype":"m.text"},"ts":1357562982000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"sigh. constant vigilance needed. I thought we agreed not to do stuff like http://html5.org/tools/web-apps-tracker?from=7621&to=7622 back in 2006 after burying the “significant inline content” concept","msgtype":"m.text"},"ts":1357563154000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Hixie seems to be saying he intended it that way all along, for the title element at least","msgtype":"m.text"},"ts":1357563321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if he pinged glazou first","msgtype":"m.text"},"ts":1357563400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't think he pinged anybody","msgtype":"m.text"},"ts":1357563428000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think he made that change as a result of a recent IRC discussion","msgtype":"m.text"},"ts":1357563501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll try to find a pointer to the logs","msgtype":"m.text"},"ts":1357563514000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: http://logbot.glob.com.au/?c=freenode%23whatwg&s=20+Dec+2012&e=21+Dec+2012#c756715 and http://logbot.glob.com.au/?c=freenode%23whatwg&s=21+Dec+2012&e=22+Dec+2012#c757484","msgtype":"m.text"},"ts":1357564782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1357565129000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I will end up sending email to the list :-(","msgtype":"m.text"},"ts":1357565269000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do we have a wiki page that explains why conneg is bad and you should not try to solve things by saying “I know! Let’s use conneg!”S","msgtype":"m.text"},"ts":1357565345000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/S/?/","msgtype":"m.text"},"ts":1357565352000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"slightlyoff: not sure if you're on IRC, but the Event class I pointed to is the same as the DOM has plus WebKit proprietary extensions","msgtype":"m.text"},"ts":1357565463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: not actually changed for Dart","msgtype":"m.text"},"ts":1357565473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: someone from Google is pushing it again: http://www.igvita.com/2012/12/18/deploying-new-image-formats-on-the-web/","msgtype":"m.text"},"ts":1357565531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: 386'ing conneg is not for me","msgtype":"m.text"},"ts":1357565544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boo. Dart’s “cleaned up” DOM still has live child collections","msgtype":"m.text"},"ts":1357565566000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"firstChild/nextSibling FTW","msgtype":"m.text"},"ts":1357565582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Part of it is \"cleaned up\", lots of it seems a straight copy of the existing classes/interfaces","msgtype":"m.text"},"ts":1357565603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, Eric Lawrence points out some problems with conneg in the comments","msgtype":"m.text"},"ts":1357565670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Dart hasn't died yet? How sad","msgtype":"m.text"},"ts":1357565868000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not like Google's bleeding money over it","msgtype":"m.text"},"ts":1357565927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well no, but it is keeping bright people from working on better things","msgtype":"m.text"},"ts":1357565957000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I ended up writing a short one-off comment about Accept: https://bugzilla.mozilla.org/show_bug.cgi?id=240493#c89","msgtype":"m.text"},"ts":1357566214000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does webarch say anything about conneg?","msgtype":"m.text"},"ts":1357566284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does","msgtype":"m.text"},"ts":1357566313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://gist.github.com/4475457","msgtype":"m.text"},"ts":1357569915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That includes all the syntax sugar libraries have...","msgtype":"m.text"},"ts":1357569929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: are you there? I wonder if the above overloading thingie actually works... Maybe Ms2ger knows?","msgtype":"m.text"},"ts":1357569969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dictionary<EventCallback>?","msgtype":"m.text"},"ts":1357569998000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"{click: callback1, resize: callback2}","msgtype":"m.text"},"ts":1357570036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1357570098000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"A dictionary with an open-ended set of keys?","msgtype":"m.text"},"ts":1357570111000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Because that doesn't exist","msgtype":"m.text"},"ts":1357570136000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes, with string keys and values of type between < and >","msgtype":"m.text"},"ts":1357570139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: well there's a bug for that","msgtype":"m.text"},"ts":1357570153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: that doesn't exist but there's a bug for it","msgtype":"m.text"},"ts":1357570159000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Oh?","msgtype":"m.text"},"ts":1357570159000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Has someone specced iteration order?","msgtype":"m.text"},"ts":1357570168000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://mail.mozilla.org/pipermail/es-discuss/2013-January/027842.html","msgtype":"m.text"},"ts":1357570202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: anything else? :)","msgtype":"m.text"},"ts":1357570208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But most likely, those wouldn't be distinguishable, no","msgtype":"m.text"},"ts":1357570277000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: don't know what the point of the weird dictionary thing is; not sure what \"EventFilter\" is but if it's the \"filter based on keys for keypress\" or whatever, like I said before that seems like a complex optimization for something having no need of optimization","msgtype":"m.text"},"ts":1357570624000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: it's so you can implement your own delegation","msgtype":"m.text"},"ts":1357570669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: e.g. based on a selector, or something else","msgtype":"m.text"},"ts":1357570683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can already do it manually now within the function if you want to do it yourself","msgtype":"m.text"},"ts":1357570734000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sure but that's less reusable","msgtype":"m.text"},"ts":1357570792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if(!event.target.matchesSelector(\"whatever\")) return;","msgtype":"m.text"},"ts":1357570801000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also, an options dictionary seems natural, instead of an infrequently-used optional parameter","msgtype":"m.text"},"ts":1357570941000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"OK. I started the wiki page: http://wiki.whatwg.org/wiki/Why_not_conneg","msgtype":"m.text"},"ts":1357571029000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: heh","msgtype":"m.text"},"ts":1357571036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: I believe it's quite frequently used actually","msgtype":"m.text"},"ts":1357571051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not to channel a hixie, but are there use cases for making up your own filters other than selectors? in my experience selectors are a pretty good fit","msgtype":"m.text"},"ts":1357571059000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"elem.addEventListener(\"click\", this.onClick, { filter: \".button\" }); seems nice and clean and clear to me","msgtype":"m.text"},"ts":1357571184000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"to back up zewt's point, is there a library that filters on something other than selectors?","msgtype":"m.text"},"ts":1357571202000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"can always start with string selectors, and make it a (DOMString or EventFilter) later if wanted","msgtype":"m.text"},"ts":1357571316000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well selectors don't make sense for non-RootNode nodes","msgtype":"m.text"},"ts":1357571320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's a RootNode?","msgtype":"m.text"},"ts":1357571342000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"see DOM","msgtype":"m.text"},"ts":1357571346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if that means \"document\" then that's wrong","msgtype":"m.text"},"ts":1357571352000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"why? if you register on a document you want to filter on its elemetn descendants, same for documentfragment","msgtype":"m.text"},"ts":1357571380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you register on an element you want to filter on its descendants too, why wouldn't that make sense? that's how it's used","msgtype":"m.text"},"ts":1357571413000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah, that's how it's used","msgtype":"m.text"},"ts":1357571422000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"sure, RootNode includes Element","msgtype":"m.text"},"ts":1357571424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"again, see DOM","msgtype":"m.text"},"ts":1357571455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then that's not what I said :P and that's a pretty broken name","msgtype":"m.text"},"ts":1357571465000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gotta head to work, later","msgtype":"m.text"},"ts":1357571490000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well it means Document","msgtype":"m.text"},"ts":1357571502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just as much as it means Element","msgtype":"m.text"},"ts":1357571505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and DocumentFragment","msgtype":"m.text"},"ts":1357571516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"those can all be roots","msgtype":"m.text"},"ts":1357571524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it doesn't mean the root node of a document, which is what it sounds like--it doesn't make sense for every node in a tree to be called a \"root node\", heh","msgtype":"m.text"},"ts":1357571534000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah it's not the best name ever","msgtype":"m.text"},"ts":1357571536000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it can be renamed if you have a suggestion","msgtype":"m.text"},"ts":1357571566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TreeNode?","msgtype":"m.text"},"ts":1357571570000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it doesn't really matter","msgtype":"m.text"},"ts":1357571571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but anyway selectors inside a document are the overwhelming majority of use cases, makes sense to me to optimize for that","msgtype":"m.text"},"ts":1357571577000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Comment is a TreeNode too","msgtype":"m.text"},"ts":1357571578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not really, no, but it's very confusing","msgtype":"m.text"},"ts":1357571579000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zewt: the proposal optimizes for that","msgtype":"m.text"},"ts":1357571603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but afk work for real","msgtype":"m.text"},"ts":1357571608000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"comments have children?","msgtype":"m.text"},"ts":1357571638000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"a comment is part of a Tree","msgtype":"m.text"},"ts":1357571655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, everything is :)","msgtype":"m.text"},"ts":1357571660000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"BranchNode","msgtype":"m.text"},"ts":1357571666000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357571667000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"right, that's why it's super confusing","msgtype":"m.text"},"ts":1357571670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"NonLeafNode?","msgtype":"m.text"},"ts":1357571671000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"TrunkNode","msgtype":"m.text"},"ts":1357571687000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"BlahNode","msgtype":"m.text"},"ts":1357571695000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ContainerNode","msgtype":"m.text"},"ts":1357571701000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1357571704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, what Ms2ger said","msgtype":"m.text"},"ts":1357571704000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"anything that doesn't imply it's a root when it's not :)","msgtype":"m.text"},"ts":1357571713000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Wikipedia suggests InternalNode and ExternalNode","msgtype":"m.text"},"ts":1357571715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, heya","msgtype":"m.text"},"ts":1357571716000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Feel like reviewing some tests? :)","msgtype":"m.text"},"ts":1357571724000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Tree_(data_structure)#Terminology","msgtype":"m.text"},"ts":1357571726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I will","msgtype":"m.text"},"ts":1357571733000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh but that doesn't work","msgtype":"m.text"},"ts":1357571736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: don't use wikipedia for that, you'll get some computer science terminology out of it","msgtype":"m.text"},"ts":1357571758000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah and it'd be wrong anyway","msgtype":"m.text"},"ts":1357571815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it should indicate it has the potential to have child nodes","msgtype":"m.text"},"ts":1357571824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MotherNode","msgtype":"m.text"},"ts":1357571830000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"uhuh","msgtype":"m.text"},"ts":1357571842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ParentNode","msgtype":"m.text"},"ts":1357571853000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess that could work","msgtype":"m.text"},"ts":1357571866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the other one is named ChildNode at the moment","msgtype":"m.text"},"ts":1357571873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and element is in both","msgtype":"m.text"},"ts":1357571877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"likes MotherNode better, but hey :)","msgtype":"m.emote"},"ts":1357571885000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"\"I found it and it's the MotherNode!\"","msgtype":"m.text"},"ts":1357571892000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"looks like your first contribution to the DOM spec","msgtype":"m.text"},"ts":1357571940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least from this generation","msgtype":"m.text"},"ts":1357571968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"committed","msgtype":"m.text"},"ts":1357572137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh hey, GitHub -> Twitter works again...","msgtype":"m.text"},"ts":1357572334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/thedomstandard/status/288304791833161728","msgtype":"m.text"},"ts":1357572347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: MotherNode sounds like something cool and nongeneric, should find some other use for it. :]","msgtype":"m.text"},"ts":1357572911000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: definitely :)","msgtype":"m.text"},"ts":1357572962000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wonders how many HTTP devices there are where gzip is significant in overhead","msgtype":"m.emote"},"ts":1357575795000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm guessing mostly old feature phones and the zigbee devices","msgtype":"m.text"},"ts":1357576171000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(and anything like the latter)","msgtype":"m.text"},"ts":1357576179000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"what's zigbee devices?","msgtype":"m.text"},"ts":1357576294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it's IoT stuff","msgtype":"m.text"},"ts":1357576532000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"like X10, but designed this decade","msgtype":"m.text"},"ts":1357576574000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I changed https://gist.github.com/4475457 around btw","msgtype":"m.text"},"ts":1357576588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they use HTTP on some ridiculously small devices","msgtype":"m.text"},"ts":1357576591000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: How many feature phones run full HTTP clients?","msgtype":"m.text"},"ts":1357576680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Opera Mini will at times use HTTP, but normally not.","msgtype":"m.text"},"ts":1357576720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And it's rare to see a full browser nowadays on a feature phone.","msgtype":"m.text"},"ts":1357576731000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: well many *have* an HTTP client, few would actually see much actual usage","msgtype":"m.text"},"ts":1357576746000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh yes","msgtype":"m.text"},"ts":1357576763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GitHub -> Twitter works again fully","msgtype":"m.text"},"ts":1357576769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"teehee","msgtype":"m.text"},"ts":1357576770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: there are quite a lot of very old Nokias out there, they all have browsers","msgtype":"m.text"},"ts":1357576790000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but browsing the web with those is unlikely to be a very happy experience :)","msgtype":"m.text"},"ts":1357576813000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"lots of phones have browsers, but are they used?","msgtype":"m.text"},"ts":1357576838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Most phones with browsers that get used have the power that gzip isn't massively noteworthy.","msgtype":"m.text"},"ts":1357576861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: agreed, but that's not the case for zigbee devices","msgtype":"m.text"},"ts":1357577485000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that said, I'm not sure what your context is — it's quite likely that those don't matter in your case","msgtype":"m.text"},"ts":1357577499000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"on really dumb devices gzip does have an impact","msgtype":"m.text"},"ts":1357577518000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in fact IIRC zigbee uses EXI for those","msgtype":"m.text"},"ts":1357577527000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1357578161000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"darobin: My context is hsivonen's claim HTTP would've been better without the negociation for gzip","msgtype":"m.text"},"ts":1357578166000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mmm, possibly","msgtype":"m.text"},"ts":1357578217000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"HTTP would have been better with no authoritative metadata whatsoever","msgtype":"m.text"},"ts":1357578303000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"so you drop content type and content encoding, and only use magic numbers (falling back to sniffing)","msgtype":"m.text"},"ts":1357578327000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"authoritative metadata is just a nightmare design antipattern","msgtype":"m.text"},"ts":1357578374000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Hmm, Twitter suggests people maybe want to encode to other encodings... http://cache.gyazo.com/2ad55482c4cbcc983ec49306dc3fa47d.png","msgtype":"m.text"},"ts":1357578549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin, I bet you like Content-MD5","msgtype":"m.text"},"ts":1357578610000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: that's a lie","msgtype":"m.text"},"ts":1357578640000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wonders how much Content-MD5 would help if everyone actually encforced it","msgtype":"m.emote"},"ts":1357578644000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: one of my faves!","msgtype":"m.text"},"ts":1357578647000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: Ms2ger is lying or I am?","msgtype":"m.text"},"ts":1357578658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is confused","msgtype":"m.emote"},"ts":1357578678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Eh?","msgtype":"m.text"},"ts":1357578682000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Ms2ger always is, but it's a lie that people want to encode to anything other than utf8","msgtype":"m.text"},"ts":1357578684000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"don't listen to the voices!","msgtype":"m.text"},"ts":1357578689000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1357578691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yay VCS!","msgtype":"m.text"},"ts":1357578702000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I wasn't planning on changing the API based on some rambling on twitter","msgtype":"m.text"},"ts":1357578705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bzr failing to clone because of some UnicodeDecodeError.","msgtype":"m.text"},"ts":1357578711000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I wonder how https://bugzilla.mozilla.org/show_bug.cgi?id=757726 helps if you can still do \"in\"","msgtype":"m.text"},"ts":1357578894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or just have an <object> and see if the fallback content is used.","msgtype":"m.text"},"ts":1357578919000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"all it does it seems is create a weird object","msgtype":"m.text"},"ts":1357578990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is this a reasonable place for html5lib questions, or do I have to use the mailing list for that?","msgtype":"m.text"},"ts":1357579260000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"Ask away","msgtype":"m.text"},"ts":1357579322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm just trying the basic documentation example, with an import html5lib, f = open(\"test.html\"), doc = html5lib.parse(f), but already the content of doc is <None>","msgtype":"m.text"},"ts":1357579363000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"using the smallest test html I could come up with that's a full document with some content, http://pastebin.mozilla.org/2043951","msgtype":"m.text"},"ts":1357579395000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"You almost certainly want to pass a treebuilder to it, so html5lib.parse(f, treebuilder=\"etree\") gives you an ElementTree","msgtype":"m.text"},"ts":1357579397000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hopes he's got the argument format right","msgtype":"m.emote"},"ts":1357579412000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh wow, I did.","msgtype":"m.text"},"ts":1357579435000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hm. in that case the docs definitely need a minor tweak, since the first example claims to already return a simpletree","msgtype":"m.text"},"ts":1357579436000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"heh, nice","msgtype":"m.text"},"ts":1357579439000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"alright, let me try that.","msgtype":"m.text"},"ts":1357579444000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"You basically don't want to use simpletree. We should probably just make etree the default.","msgtype":"m.text"},"ts":1357579469000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was using someone else's library (bleach) that relies on html5lib but things started going tremendously wrong once I used html docs with svg elements, so I figured I'd try to track down where it goes wrong.","msgtype":"m.text"},"ts":1357579483000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"<None> is the unhelpful representation of the root node in simpletree","msgtype":"m.text"},"ts":1357579483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is busy trying to fix 3to2 to get it converting Python 3 html5lib","msgtype":"m.emote"},"ts":1357579499000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So it actually did work","msgtype":"m.text"},"ts":1357579505000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But didn't look like it had","msgtype":"m.text"},"ts":1357579513000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ...","msgtype":"m.text"},"ts":1357579514000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I've contributed to this project for how long and didn't know this!","msgtype":"m.text"},"ts":1357579526000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well None != <None>","msgtype":"m.text"},"ts":1357579528000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The angle brackets are everything","msgtype":"m.text"},"ts":1357579542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, yes, but still. Looks like some container containing just None.","msgtype":"m.text"},"ts":1357579542000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well it is a side effect of the implementation of repr being \"<%s>\"%element.tagname and the root node having tagname of None","msgtype":"m.text"},"ts":1357579601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Should just override it in that case","msgtype":"m.text"},"ts":1357579619000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"File a bug?","msgtype":"m.text"},"ts":1357579650000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It would be faster to fix the bug","msgtype":"m.text"},"ts":1357579711000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Can you manually port the fix to Py3 then?","msgtype":"m.text"},"ts":1357579725000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is sufficently far along with this he wants to just get it done without doing Py2->Py3 again","msgtype":"m.emote"},"ts":1357579749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: about your tweet saying that hold html5lib runs much faster under latest PyPy for parsing the HTML5 spec","msgtype":"m.text"},"ts":1357579815000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how fast is that in absolute terms?","msgtype":"m.text"},"ts":1357579833000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"6s locally, which is 2x speed.","msgtype":"m.text"},"ts":1357579850000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean, does it make it actually usable for docs of that size?","msgtype":"m.text"},"ts":1357579852000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1357579855000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"When of the ugly bits of html5lib exhibits really bad perf in PyPy though, so it should be easy enough to make that quicker","msgtype":"m.text"},"ts":1357579884000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"When?","msgtype":"m.text"},"ts":1357579908000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: OK","msgtype":"m.text"},"ts":1357579919000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/When/One/","msgtype":"m.text"},"ts":1357579924000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"without PyPy it takes a lot longer than 12s even","msgtype":"m.text"},"ts":1357579925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Then I guess I have a quicker computer than you :P","msgtype":"m.text"},"ts":1357579942000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"$ time python  parse.py -b etree --no-html ../testdata/sites/web-apps-new.htm","msgtype":"m.text"},"ts":1357580000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"real    0m13.742s","msgtype":"m.text"},"ts":1357580004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That appears to be pretty much it.","msgtype":"m.text"},"ts":1357580013000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm lemme try it now","msgtype":"m.text"},"ts":1357580024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"web-apps-new.htm isn't in the repo, it's just http://www.whatwg.org/c yesterday evening","msgtype":"m.text"},"ts":1357580063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"real\t0m11.481s","msgtype":"m.text"},"ts":1357580118000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Interestingly, it's far slower with lxml","msgtype":"m.text"},"ts":1357580234000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I get 0m15.771s if I actually generate output from parse.py","msgtype":"m.text"},"ts":1357580275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: fwiw, www-international is now \"debating\" \"Why not conneg\"","msgtype":"m.text"},"ts":1357580445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"He can’t be serious, can he?\"","msgtype":"m.text"},"ts":1357580592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gotta love that","msgtype":"m.text"},"ts":1357580598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Bwahahahahahahahahaha","msgtype":"m.text"},"ts":1357580604000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Well, you expect shocking remarks out of WhatWG members.\" is good too","msgtype":"m.text"},"ts":1357580627000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Well, you expect shocking remarks out of WhatWG members.\" (Is this missing a \"can\"?)","msgtype":"m.text"},"ts":1357580630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it works this way too","msgtype":"m.text"},"ts":1357580674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Morning, whatwg!","msgtype":"m.text"},"ts":1357582989000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1357582991000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Ms2ger: step 9 in http://dom.spec.whatwg.org/#concept-event-dispatch is redundant with step 4.5 in invoke or not?","msgtype":"m.text"},"ts":1357584521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: (not step 9's substeps, those are needed)","msgtype":"m.text"},"ts":1357584535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, eh, why?","msgtype":"m.text"},"ts":1357584621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: oops","msgtype":"m.text"},"ts":1357584678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: hmm so yeah, bubbles needs to be checked either way :)","msgtype":"m.text"},"ts":1357584709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm, another html5lib question; if I want to parse an html5 doc that has embedded SVG with namespaced attributes like xlink:href, which creative mix of html5lib settings do I need to use to preserve those namespaces during parse? =)","msgtype":"m.text"},"ts":1357585094000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"How much \"like\" xlink:href?","msgtype":"m.text"},"ts":1357585540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are a few special cases where namespaces are preserved, but generally HTML (and SVG-in-HTML) doesn't have namespaces","msgtype":"m.text"},"ts":1357585574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(xlink:href is one such special case)","msgtype":"m.text"},"ts":1357585593000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"things like\" being used to mean \"things including\" =)","msgtype":"m.text"},"ts":1357585593000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"good point, the only namespaced attribute I found in the SVG spec attribute list for all the elements we need to support is the xlink:href one","msgtype":"m.text"},"ts":1357585636000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"although then that still leaves the question of how to preserve it when running the html doc through html5lib. with \"dom\" the 'xlink:","msgtype":"m.text"},"ts":1357585660000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"' bit is removed","msgtype":"m.text"},"ts":1357585663000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"at least when I print out the parse result using the \"Serialization of Streams\" example","msgtype":"m.text"},"ts":1357585701000,"senderName":"Pomax","senderId":"Pomax@irc"},
{"content":{"body":"hsivonen: what's wrong with http://html5.org/tools/web-apps-tracker?from=7621&to=7622 ? just s/must/should/ for <title> and <option>? and why so grumpy :-P","msgtype":"m.text"},"ts":1357585717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can anyone here help me with a doubt about cross-origin video text tracks processing?","msgtype":"m.text"},"ts":1357585917000,"senderName":"vcarbune","senderId":"vcarbune@irc"},
{"content":{"body":"Did people here look at http://wiki.ecmascript.org/doku.php?id=harmony:binary_data, btw?","msgtype":"m.text"},"ts":1357586024000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bz's feedback is orders of magnitude more complicated to deal with than almost anyone else's","msgtype":"m.text"},"ts":1357586245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"His brain is orders of magnitude more complex, too","msgtype":"m.text"},"ts":1357586279000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://w3cmemes.tumblr.com/post/39943615914/image-inline-image-1","msgtype":"m.text"},"ts":1357586462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure what's up with the text","msgtype":"m.text"},"ts":1357586467000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: shouldn't that binary_data include of the TypedArray stuff?","msgtype":"m.text"},"ts":1357586795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1357586804000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I thought that was the idea actually","msgtype":"m.text"},"ts":1357586819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know what the idea was :)","msgtype":"m.text"},"ts":1357586834000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I like how there's just as many opinions on es-discuss on how to design JS APIs as elsewhere","msgtype":"m.text"},"ts":1357586890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there a study available on the classnames or IDs that websites tend to use to label certain areas, like \"main\" for content, or the initial \"wrapper\"?","msgtype":"m.text"},"ts":1357587170000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Google had some of that, I think","msgtype":"m.text"},"ts":1357587199000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe MOMA too","msgtype":"m.text"},"ts":1357587203000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Or MAMA?)","msgtype":"m.text"},"ts":1357587207000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JonathanNeal: Steve Faulkner did one recently to look for justification for the <main> element, don't have a pointer handy","msgtype":"m.text"},"ts":1357587216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, wow, navigator.plugins is in installation-time order?","msgtype":"m.text"},"ts":1357587929000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: thanks, yea, hopefully someone will find that link.","msgtype":"m.text"},"ts":1357588020000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ms2ger: sounds whacky","msgtype":"m.text"},"ts":1357588149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That it does indeed","msgtype":"m.text"},"ts":1357588165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JonathanNeal, annevk, you might be thinking of: http://webdevdata.org/","msgtype":"m.text"},"ts":1357588402000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"It's even a community group: http://www.w3.org/community/webdevdata/","msgtype":"m.text"},"ts":1357588418000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jonathanNeal http://triin.net/2006/06/12/CSS#figure-34  http://westciv.typepad.com/dog_or_higher/2005/11/real_world_sema.html http://dev.opera.com/articles/view/mama-common-attributes/#id  http://lists.w3.org/Archives/Public/public-html/2012Oct/0109.html","msgtype":"m.text"},"ts":1357588732000,"senderName":"stevefaulkner","senderId":"stevefaulkner@irc"},
{"content":{"body":"Thanks stevefaulkner!","msgtype":"m.text"},"ts":1357588761000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1357588770000,"senderName":"stevefaulkner","senderId":"stevefaulkner@irc"},
{"content":{"body":"and thanks tantek!","msgtype":"m.text"},"ts":1357588773000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well that was easy http://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm","msgtype":"m.text"},"ts":1357588802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"container is much more popular than wrapper.","msgtype":"m.text"},"ts":1357588820000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"thanks Jacob / Travis (if you read this :))","msgtype":"m.text"},"ts":1357588826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hardly see any \"inset\" either, and that's my goto name.","msgtype":"m.text"},"ts":1357588832000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Which specification uses VoidFunction from IDL?","msgtype":"m.text"},"ts":1357589143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone got IE10 handy?","msgtype":"m.text"},"ts":1357589513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you really have to love the way we use IDL interfaces to define classes, not interfaces, and then implement them as prototypes, not classes.","msgtype":"m.text"},"ts":1357590678000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"To be fair, JS prototypes are the equivalent of classes.","msgtype":"m.text"},"ts":1357590795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But the interface/class thing is silly, yes.  ^_^","msgtype":"m.text"},"ts":1357590803000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And the \"class\" keyword coming in ES6 just desugars to prototype stuff.)","msgtype":"m.text"},"ts":1357590826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: do you know what's the latest thinking on the prototype-swizzling story around adoptNode, document.open?","msgtype":"m.text"},"ts":1357591121000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: yes, I'm waiting for input from non-Gecko vendors on what they're planning on doing","msgtype":"m.text"},"ts":1357591143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: plus maybe an explanation of what web components is doing in this area that has bz concerned","msgtype":"m.text"},"ts":1357591169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20567 is the tracking bug","msgtype":"m.text"},"ts":1357591183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could rename interface to class...","msgtype":"m.text"},"ts":1357591218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't really matter","msgtype":"m.text"},"ts":1357591223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: custom elements don't do anything in this area.","msgtype":"m.text"},"ts":1357591233000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it seems bz thought otherwise","msgtype":"m.text"},"ts":1357591253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was actually hopeful that if we had a precedent for this, I don't have to do the whole renameNode-style thing for custom elements","msgtype":"m.text"},"ts":1357591302000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"does this come down to the same thing though? not exactly...","msgtype":"m.text"},"ts":1357591357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I need to look at the bugs he filed to see what his thoughts were.","msgtype":"m.text"},"ts":1357591358000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that bug has pointers to the mailing list discussion, which is where bz provided feedback","msgtype":"m.text"},"ts":1357591381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but e.g. there's not going to be precedent for doing this if e.g. WebKit is not going to implement this or Opera/IE are not interested...","msgtype":"m.text"},"ts":1357591406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all that's somewhat clear is what Gecko does and why it does that","msgtype":"m.text"},"ts":1357591423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: bz doesn't actually list any specific concerns with web components in the thread. But he did file a bunch of bugs that might have more specifics.","msgtype":"m.text"},"ts":1357591502000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1357591513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi, can anyone recommend a resource that simply lists the attributes and methods of <video>?","msgtype":"m.text"},"ts":1357593898000,"senderName":"Steve^","senderId":"Steve^@irc"},
{"content":{"body":"Steve^: https://developer.mozilla.org/en-US/docs/HTML/Element/video","msgtype":"m.text"},"ts":1357593948000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek, it doesn't seem to list the methods","msgtype":"m.text"},"ts":1357594462000,"senderName":"Steve^","senderId":"Steve^@irc"},
{"content":{"body":"they're linked from that page","msgtype":"m.text"},"ts":1357594476000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"from the TOC: https://developer.mozilla.org/en-US/docs/HTML/Element/video#DOM_interface","msgtype":"m.text"},"ts":1357594488000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Aha! https://developer.mozilla.org/en-US/docs/DOM/HTMLMediaElement","msgtype":"m.text"},"ts":1357594545000,"senderName":"Steve^","senderId":"Steve^@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1357594547000,"senderName":"Steve^","senderId":"Steve^@irc"},
{"content":{"body":"and currently across two pages, for <video> and in general media elements: https://developer.mozilla.org/en-US/docs/DOM/HTMLVideoElement and https://developer.mozilla.org/en-US/docs/DOM/HTMLMediaElement","msgtype":"m.text"},"ts":1357594554000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1357594555000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1357594556000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I thought the world was crazy, was just me","msgtype":"m.text"},"ts":1357594569000,"senderName":"Steve^","senderId":"Steve^@irc"},
{"content":{"body":"you being crazy does not falsify the possibility of the world also being crazy ;)","msgtype":"m.text"},"ts":1357594610000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: i think there are qualitative differences between what i would consider a \"class\" and the js style oop","msgtype":"m.text"},"ts":1357597291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I submit that the definition of \"class\" is very very loose, unless you're purposely just using a single language's definition of the term.","msgtype":"m.text"},"ts":1357597562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And within the possibility-space of \"things that languages call 'classes' which are reasonable impls of some sort of OO thing\", I claim that JS's prototype-based stuff is a class.","msgtype":"m.text"},"ts":1357597602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Proof by example:","msgtype":"m.text"},"ts":1357597608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: classes aren't just syntactical sugar, because super.","msgtype":"m.text"},"ts":1357597641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"class foo { constructor(a) { this.a = a; return this; } bar(b) { print(b); } }","msgtype":"m.text"},"ts":1357597644000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"===","msgtype":"m.text"},"ts":1357597645000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"function foo(a) { this.a = a; return this; } foo.prototype.bar = function(b) { print(b); }","msgtype":"m.text"},"ts":1357597671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Modulo a few tiny bits like super which can't be strictly desugared.","msgtype":"m.text"},"ts":1357597681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah i'm not quite sure how to put into words what the difference is","msgtype":"m.text"},"ts":1357597690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Cause there isn't one.  ^_^","msgtype":"m.text"},"ts":1357597696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's definitely a difference between what JS does and what I think of as class-based-oop","msgtype":"m.text"},"ts":1357597719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it might be unrelated to the classness","msgtype":"m.text"},"ts":1357597724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"There are indeed differences, but every OOP implementation has differences, because OOP is a loosely-connected set of concepts.","msgtype":"m.text"},"ts":1357597760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1357597764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on another note, did we ever resolve http://lists.w3.org/Archives/Public/public-script-coord/2012OctDec/0363.html ?","msgtype":"m.text"},"ts":1357597871000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does webidl define what should happen here? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2061","msgtype":"m.text"},"ts":1357598202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox, safari, chrome: throw (various exceptions)","msgtype":"m.text"},"ts":1357598218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"opera: actually runs the method","msgtype":"m.text"},"ts":1357598223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: we did not resolve that","msgtype":"m.text"},"ts":1357598274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: my impression is that unless you file a bug, heycam might miss it","msgtype":"m.text"},"ts":1357598285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera doesn't even throw if you make the method 'select', which button doesn't have","msgtype":"m.text"},"ts":1357598300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"window.alert.call(document.body) in opera does response \"WRONG THIS\" though","msgtype":"m.text"},"ts":1357598347000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk, Hixie, I think that should throw","msgtype":"m.text"},"ts":1357598383000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1357598387000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: does the reason it should throw cover cases like http://lists.w3.org/Archives/Public/public-script-coord/2012OctDec/0363.html ?","msgtype":"m.text"},"ts":1357598417000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, (will read in a bit, email exceeds my \"reading simultaenous with attending meeting\" bandwidth...)","msgtype":"m.text"},"ts":1357598460000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that e-mail exceeded my bandwidth even when i was doing nothing else, so, understood","msgtype":"m.text"},"ts":1357598480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1357598524000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"It’s out! http://packages.python.org/cairocffi/ (sorry for the spam)","msgtype":"m.text"},"ts":1357598596000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: doesn't explain why I'd want this drop-in replacement","msgtype":"m.text"},"ts":1357598804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: or should I know what \"CFFI-based\" means for that? :)","msgtype":"m.text"},"ts":1357598826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: pycairo does not install with the usual python tools, is different on python 2 and 3, exposing new cairo stuff means requiring new cairo version, it’s a pain to maintain (C code doing manual refcounting of Python objects, yay!), and nobody seems to be really maintaining it","msgtype":"m.text"},"ts":1357599006000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: CFFI is an implementation detail, you don’t really need to care about it","msgtype":"m.text"},"ts":1357599028000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but it’s what makes it different from pycairo","msgtype":"m.text"},"ts":1357599052000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie, the reason I thought that example threw was because HTMLInputElement.prototype.checkValidity can't be called on an HTMLButtonElement (and vice versa)","msgtype":"m.text"},"ts":1357600358000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"webidl says that, i assume?","msgtype":"m.text"},"ts":1357600386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yes, there's a check if the object implements the interface that the operation is declared on","msgtype":"m.text"},"ts":1357600404000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1357600409000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, the origin issue is something that would need to be checked in the same place, but isn't currently","msgtype":"m.text"},"ts":1357600424000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1357600475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do i need to do anything to allow you to fix that one too?","msgtype":"m.text"},"ts":1357600484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you might yes -- if anything it'll probably be a hook in Web IDL that defines a \"security check\" to be done at that point","msgtype":"m.text"},"ts":1357600555000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, or maybe just define the origin of objects, and then I just check origins myself in that part of Web IDL","msgtype":"m.text"},"ts":1357600573000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"will reply on that thread","msgtype":"m.emote"},"ts":1357600588000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k, thanks","msgtype":"m.text"},"ts":1357600591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bz will not be happy with an additional check there","msgtype":"m.text"},"ts":1357601739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why is the additional check needed?  is there a way to get the value of the property despite the check that is done?  (before a navigation or something?)","msgtype":"m.text"},"ts":1357602286000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you can get the property from one Document","msgtype":"m.text"},"ts":1357602311000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and apply it to another","msgtype":"m.text"},"ts":1357602316000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh right, I understand","msgtype":"m.text"},"ts":1357602323000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or take it from one Location, navigate such that the origin has changed, then apply it","msgtype":"m.text"},"ts":1357602344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: why is it unreasonable for a subclass to supersede a method of a parent class?","msgtype":"m.text"},"ts":1357602577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: is that some particular kind of OO people don't like?","msgtype":"m.text"},"ts":1357602595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unreasonable if it makes the ancestor one invalid to be called on the object","msgtype":"m.text"},"ts":1357602609000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but why would you do that?","msgtype":"m.text"},"ts":1357602623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well why indeed :)","msgtype":"m.text"},"ts":1357602630000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so I don't want to disallow overriding","msgtype":"m.text"},"ts":1357602642000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sorry, I meant why would you call","msgtype":"m.text"},"ts":1357602644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the case i most commonly run into is where the superclass implementation is \"throw EAbstractMethod\"","msgtype":"m.text"},"ts":1357602670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, who knows why you would -- but for languages where it's possible I think it makes sense that it still be valid to call the ancestor method","msgtype":"m.text"},"ts":1357602673000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"how would you do it in JS?","msgtype":"m.text"},"ts":1357602697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you can get at the ancestor method that throws EAbstractMethod and you call it on an object that overrides that method, then I think it should still throw EAbstractMethod","msgtype":"m.text"},"ts":1357602712000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: grab something from HTMLCollection and apply it to HTMLAllCollection","msgtype":"m.text"},"ts":1357602714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: and your app will crash, right","msgtype":"m.text"},"ts":1357602725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in some languages, yes","msgtype":"m.text"},"ts":1357602745000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: i'm not saying it's the wrong thing to do, i'm just saying that on the web we can't let people crash the browser","msgtype":"m.text"},"ts":1357602755000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's not crashing because it has an unexpected object type it's been called on","msgtype":"m.text"},"ts":1357602760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: and why does the this check not make that throw here?","msgtype":"m.text"},"ts":1357602760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: because it's a parent class?","msgtype":"m.text"},"ts":1357602765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not saying that we should allow the browser to crash...","msgtype":"m.text"},"ts":1357602771000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: well if there's no overridden subclass method, you don't want it to throw, right?","msgtype":"m.text"},"ts":1357602815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the whole inheritance thing on most classes in DOM-land is basically a shortcut for defining stuff...","msgtype":"m.text"},"ts":1357602821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you define `interface A { void f(); };` then you need to write your f() prose such that it makes sense for any object that implements A, right?","msgtype":"m.text"},"ts":1357602824000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: oops yeah","msgtype":"m.text"},"ts":1357602846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: in the case of the web apis, the problem is that we sometimes think in terms of interfaces and sometimes in terms of classes","msgtype":"m.text"},"ts":1357602867000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe we should s/interface/class/ to get that out of the way?","msgtype":"m.text"},"ts":1357602889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/implements A/is of a class that inherits from A/ then","msgtype":"m.text"},"ts":1357602891000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: so e.g. HTMLElement is both an interface (HTMLElement.onblur is a property that means different things on HTMLAnchorElement and HTMLBodyElement), and a class (HTMLElement.click() is defined for HTMLElement and implemented identically for HTMLAnchorElement and HTMLBodyElement)","msgtype":"m.text"},"ts":1357602918000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think that's the relevant distinction, or at least, onblur ought to be defined so that its getter/setter makes sense when applied to both kinds of element","msgtype":"m.text"},"ts":1357602977000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's just that its behaviour is defined in terms of looking at what object \"this\" is when called","msgtype":"m.text"},"ts":1357602999000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"onblur on HTMLAnchorElement is a way to set an event listener on the element, and on HTMLBodyElement is a way to set an event listener on the Window.","msgtype":"m.text"},"ts":1357603014000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"onblur you could easily define generically no?","msgtype":"m.text"},"ts":1357603020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1357603027000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just checking if it's body and then forwarding","msgtype":"m.text"},"ts":1357603028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they're essentially completely different.","msgtype":"m.text"},"ts":1357603033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: sure. that's what i'm saying we should do for all these cases.","msgtype":"m.text"},"ts":1357603041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"completely?","msgtype":"m.text"},"ts":1357603041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: either check the this, and throw if it's not the right one, or, check the this, and run the right code.","msgtype":"m.text"},"ts":1357603068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: heycam is saying the same, but that you do it in prose :)","msgtype":"m.text"},"ts":1357603068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't really care where it's done","msgtype":"m.text"},"ts":1357603092000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as long as we have well defined behaviour for when HTMLElement.onblur's setter is applied to an HTMLBodyElement, that is fine","msgtype":"m.text"},"ts":1357603132000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if it's prose, it's gonna require you (anne) and I to edit our specs; if it's done in WebIDL's definition, it's just heycam","msgtype":"m.text"},"ts":1357603137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you need anything more than if onblur is set, these steps must be run: 1. if the context object is <body>, set a listener on Window. 2 otherwise set a listener on the context object","msgtype":"m.text"},"ts":1357603149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357603154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: for that one, there's only one in the idl. for onerror, there's two, and they have different types.","msgtype":"m.text"},"ts":1357603168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: i don't know that we really say what happens when you call HTMLElement.onerror's setter or getter on an HTMLBodyElement.","msgtype":"m.text"},"ts":1357603195000,"senderName":"Hixie","senderId":"Hixie@irc"}
]