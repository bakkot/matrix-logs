[
{"content":{"body":"For GitHub, anybody know of a tool that can show a graph of contributor growth for a particular repo?","msgtype":"m.text"},"ts":1605756561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, show how many new contributors were added each week (for this year, last year, etc.)","msgtype":"m.text"},"ts":1605756567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Context is that for https://github.com/mdn/browser-compat-data, I think we have been getting new contributors at the rate of at least one or two a week — but I don’t know how to confirm that","msgtype":"m.text"},"ts":1605756624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"last time I remember checking, I think we had 722 contributors there, and now today we already have 727","msgtype":"m.text"},"ts":1605756644000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: closest thing that comes to mind is git-shortlog which, if invoked with a summary \"one author per line + commit count\", gives you back something where `wc -l` is the number of distinct contributors. If you then invoke this a couple times with limited date ranges (`main@{3 weeks ago}` etc.) you can get the total as of Jan 2020, then Feb 2020 etc and see how quickly it rises.","msgtype":"m.text"},"ts":1605758578000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"happy b-day zcorpan_ \\o/","msgtype":"m.text"},"ts":1605772689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Krinkle: thanks yeah so I may write a script to automate something like that. But it’d just be surprising to me if somebody else hadn’t already. It seems like something a lot of projects would want. A Google search doesn’t turn up anything at all though. But maybe I’m just not thinking of the right words","msgtype":"m.text"},"ts":1605777329000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"..instead only lots of vanity stuff like https://github.com/sallar/github-contributions-chart for views of one’s own individual contributions","msgtype":"m.text"},"ts":1605777454000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's possible that there aren't many projects using \"number of new contributors\" as a metric (or just that people made one-off scripts for that which they didn't release)","msgtype":"m.text"},"ts":1605777580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For HTML we looked at the total number of contributors at times, it seems it's at 262 now which is pretty cool","msgtype":"m.text"},"ts":1605777835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also remember this is hard to get right because there's usually some people with >1 email address and cases where the email address is mangled","msgtype":"m.text"},"ts":1605778095000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So just using the git data you need to do significant project-specific normalisation","msgtype":"m.text"},"ts":1605778126000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah the e-mail thing can be addressed using .mailmap","msgtype":"m.text"},"ts":1605778142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but as far as maybe not many projects are using \"number of new contributors\" as a metric, it would seem odd to me for any project to not be interested in measuring project growth","msgtype":"m.text"},"ts":1605778247000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and number of unique contributors seems like an obvious thing to want to track over time, as an indicator of growth","msgtype":"m.text"},"ts":1605778295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well also the rate","msgtype":"m.text"},"ts":1605778379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, the rate at which the project is getting PRs from new contributors","msgtype":"m.text"},"ts":1605778422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I dunno, sustained contributions are more interesting than the one-off fixes to me, but the one-off fixes are still nice","msgtype":"m.text"},"ts":1605778559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is, with \"good first issue\" we attract a lot of contributors and can help people learn how to patch things, but it's rare for them to stay and tackle bigger things","msgtype":"m.text"},"ts":1605778662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah good point","msgtype":"m.text"},"ts":1605778882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for a project like MDN the long tail of one-off fixes can grow pretty big and actually be more interesting","msgtype":"m.text"},"ts":1605778998000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"part of the context for me for this now is that MDN content will be all be moving to github","msgtype":"m.text"},"ts":1605779032000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/mdn/content/issues/117","msgtype":"m.text"},"ts":1605779048000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"benjamingr__: re https://github.com/web-platform-tests/wpt/pull/26472 I suspect smaug____ means dispatching another event from the listener that triggers another listener","msgtype":"m.text"},"ts":1605780911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr__: however, I'm not entirely sure what the tricky signal cases would be in such a setup","msgtype":"m.text"},"ts":1605780932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe the nested event's listener cancels a listener the outer event would have triggered afterwards?","msgtype":"m.text"},"ts":1605781000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I have a `foo` listener that adds a `bar` listener, dispatches a `bar` event and that `bar` listener calls `.abort()` which makes sure a second `.foo` listener is removed?","msgtype":"m.text"},"ts":1605781128000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"I'm not entirely sure why that's tricky with regards to signals either - but if that's the case I'm happy to add such a test if you think it's a good idea to have one.","msgtype":"m.text"},"ts":1605781149000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: might be best to wait for smaug____ to get in and answer","msgtype":"m.text"},"ts":1605781203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ack","msgtype":"m.text"},"ts":1605781212000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"(but yeah, that's what I had in mind)","msgtype":"m.text"},"ts":1605781215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"talking with Dom right now and he pointed me to https://dontcallmedom.github.io/github-community-monitor/","msgtype":"m.text"},"ts":1605781250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"benjamingr__: to be fair, I also did not anticipate Chrome's bug of capture no longer working","msgtype":"m.text"},"ts":1605781253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr__: I was thinking playing with the same event type","msgtype":"m.text"},"ts":1605781514000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but nested events","msgtype":"m.text"},"ts":1605781519000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"@annevk Me neither - I wouldn't have tested for it initially and only found it by reading the implementation code and going through the spec trying to find differences. I have no idea what other inconsistencies may exist in other browsers or how EventTarget is implemented there so I'm happy to add tests for things people think are worth testing.","msgtype":"m.text"},"ts":1605781541000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"of course need to ensure the test doesn't end up to enless recursion loop","msgtype":"m.text"},"ts":1605781550000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The penalty for not implementing signal quickly will be endless loops on WPT :p","msgtype":"m.text"},"ts":1605781594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: Something like this? https://gist.github.com/benjamingr/f20d50ba6e02192debab93907a20f3ee","msgtype":"m.text"},"ts":1605781676000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"Haha, yeah don't run it on stock chrome/firefox it will probably run into an endless loop ^^","msgtype":"m.text"},"ts":1605781694000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"(also missing a dispatchEvent to fire things off at the end)","msgtype":"m.text"},"ts":1605781708000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"the first event listener would add more listeners and dispatch nested event","msgtype":"m.text"},"ts":1605781837000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"With the same event name?","msgtype":"m.text"},"ts":1605781866000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"The key is that while an event is being dispatch and handled, another listener is added and another event is dispatched","msgtype":"m.text"},"ts":1605781867000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1605781871000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I pressed enter and my browser just froze in a really weird way ^^ serves me right - something like this smaug____ https://gist.github.com/benjamingr/7ca1c3e50d2961173f3d12fee4945e14 ?","msgtype":"m.text"},"ts":1605782058000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"wait no that's a fork bomb lol","msgtype":"m.text"},"ts":1605782084000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"The listener is added each time, no wonder it froze my browser","msgtype":"m.text"},"ts":1605782094000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"The \"outer\" listener needs to be added with `once`","msgtype":"m.text"},"ts":1605782116000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"ok, updated to once, is that what you had in mind?","msgtype":"m.text"},"ts":1605782200000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"I guess that could work. Is does test some of the nested handling","msgtype":"m.text"},"ts":1605782333000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'll add it then :] I'm happy to change the test (or other tests) - note I don't have a lot of (well, any really) experience authoring WPTs so feedback and improvement suggestions are definitely appreciated and feedback will be swiftly applied.","msgtype":"m.text"},"ts":1605782538000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"it is also good to have some tests initially and then while implementing the feature one can add more","msgtype":"m.text"},"ts":1605782662000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sounds good to me :]","msgtype":"m.text"},"ts":1605782720000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"Perhaps better to test that nested dispatching only if the browser supports signal as an option for addEventListener","msgtype":"m.text"},"ts":1605782771000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think it's fine, I'd really rather not do feature testing in tests, timeout exists","msgtype":"m.text"},"ts":1605782966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ack, I think it will exit with a `RangeError` rather than do an infinite loop anyway","msgtype":"m.text"},"ts":1605783051000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"RangeError?","msgtype":"m.text"},"ts":1605783065000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yes, though that might be an implementation detail? I think that it pushes the next invocation on the call stack which eventually runs out of space so eventually you get a stack overflow","msgtype":"m.text"},"ts":1605783584000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"That's what Firefox/Chrome do with the above code anyway, I haven't checked Safari","msgtype":"m.text"},"ts":1605783605000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"JavaScript only defines OOM for ArrayBuffer allocation, iirc","msgtype":"m.text"},"ts":1605783659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr__: you should add an assert after dispatching the final event (though prolly only run the assert when count > 5)","msgtype":"m.text"},"ts":1605783835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds some ancient test he had for recursion http://mozilla.pettay.fi/moztests/events/event_loop.html","msgtype":"m.emote"},"ts":1605784050000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"from pre-Chrome era","msgtype":"m.text"},"ts":1605784072000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: i've been thinking about actually getting some normative prose in there about small allocation OOMs","msgtype":"m.text"},"ts":1605785289000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: cool cool","msgtype":"m.text"},"ts":1605785345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's implied in this one non-normative note in the regexp section","msgtype":"m.text"},"ts":1605785376000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1605785386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks, annevk!","msgtype":"m.text"},"ts":1605800505000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: related - https://wikimedia.biterg.io/app/kibana , https://insights.lfx.linuxfoundation.org/projects/ojsf%2Fojsf-jquery/dashboard","msgtype":"m.text"},"ts":1605805063000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"but a lot more overhead, and might still not exactly give you that metric :)","msgtype":"m.text"},"ts":1605805073000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"looks at Krinkle links","msgtype":"m.emote"},"ts":1605805127000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah nice","msgtype":"m.text"},"ts":1605805170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Krinkle: added a comment at https://github.com/mdn/content/issues/117#issuecomment-730508435 with those links","msgtype":"m.text"},"ts":1605805323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The biterg one is open source (runs something called Grimoirelab). I would assume the LF one is open source as well, but I haven't yet managed to find its source","msgtype":"m.text"},"ts":1605805586000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"https://css-tricks.com/using-details-for-menus-and-dialogs-is-an-interesting-idea/ - is this appropriate use of <details>? I was unsure first, but it doesn't seem wrong. Also wonder if any screen readers get confused, but assume it at least is accessible enough to be workable","msgtype":"m.text"},"ts":1605814508000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"If you check the the definition of \"value\" in the attributes table here: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input","msgtype":"m.text"},"ts":1605822625000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"it is just plain wrong?","msgtype":"m.text"},"ts":1605822630000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"zcorpan_: it doesn’t violate any conformance requirements?","msgtype":"m.text"},"ts":1605822776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: don't think so?","msgtype":"m.text"},"ts":1605822855000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<summary> has role=button as implicit role https://w3c.github.io/html-aria/#el-summary","msgtype":"m.text"},"ts":1605822894000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah the markup doesn’t at least, as far as I can see","msgtype":"m.text"},"ts":1605822897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"croraf: what’s plain wrong about it?","msgtype":"m.text"},"ts":1605822952000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"github uses <div> inside <summary>, but that could as well be a <span>","msgtype":"m.text"},"ts":1605822970000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"croraf: it links to https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue and what that says also does not seem plain wrong","msgtype":"m.text"},"ts":1605822974000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan_: yeah","msgtype":"m.text"},"ts":1605822983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The details element represents a disclosure widget from which the user can obtain additional information **or controls**.\"","msgtype":"m.text"},"ts":1605823074000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith, It says \"Current value of the form control. Submitted with the form as part of a name/value pair.\"","msgtype":"m.text"},"ts":1605823084000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This is not what value attribute is. It might be the initial value of the form control, but not the current value, which is the value that is submitted when the form is submitted.","msgtype":"m.text"},"ts":1605823134000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: you're right. the description in https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue is more accurate","msgtype":"m.text"},"ts":1605823237000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"croraf: OK, then sounds worth editing the article, or else using the Feedback link to raise a https://github.com/mdn/sprints/issues issue to request a fix","msgtype":"m.text"},"ts":1605823264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Even the thing you linked, the detailed description says in the first sentence: \"The input control's value.\"","msgtype":"m.text"},"ts":1605823318000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"And in the next sentence \"When specified in the HTML...\" The thing that is specified in the HTML is the attribute, which is not the same thing as \"value\" property of the HTMLInputElement. So they are also confusing these 2 things.","msgtype":"m.text"},"ts":1605823377000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: yes, it could certainly be clarified. please edit it :)","msgtype":"m.text"},"ts":1605823698000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, thanks for confirmation","msgtype":"m.text"},"ts":1605823716000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"np. thanks for checking!","msgtype":"m.text"},"ts":1605823743000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm checking the select element HTML spec: https://html.spec.whatwg.org/#the-select-element","msgtype":"m.text"},"ts":1605824203000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The only thing I see regarding the events is in the middle of that section, starting with: \"When the user agent is to send select update notifications, queue an element task on the user interaction task source given the select element to run these steps:\"","msgtype":"m.text"},"ts":1605824279000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I don't see from that which events can \"select\" trigger and when.","msgtype":"m.text"},"ts":1605824327000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Also I'm 99% sure that changing the \"value\" property using JS doesn't trigger any event, but where does this say in the spec.","msgtype":"m.text"},"ts":1605824425000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I guess there are common events fired on all elements, like \"click\", \"mouseenter\" and similar described somewhere in the spec. And the particular events \"input\" and \"change\" denoted in this section.","msgtype":"m.text"},"ts":1605824967000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: you can click the definition (the bold part) to get a list of references to that term","msgtype":"m.text"},"ts":1605824994000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"croraf: the 3 cases are all result of user interaction, afaict","msgtype":"m.text"},"ts":1605825074000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, aha, sorry, I skipped the paragraphs mentioning \"multiple\" but now I see that they say \"If multiple attribute is absent...\" :D","msgtype":"m.text"},"ts":1605825330000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I think they explain my question.","msgtype":"m.text"},"ts":1605825355000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Yes, these paragraphs explain the input and change events. I guess other events (like click) are handled in a common way as described somewhere for HTMLElements, because HTMLSelectElement inherits from HTMLElement.","msgtype":"m.text"},"ts":1605826025000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This section https://html.spec.whatwg.org/#global-attributes mentiones global eventHandler attributes, but I haven't really found the section that describes how, when and which events are dispatched from HTMLElement","msgtype":"m.text"},"ts":1605826203000,"senderName":"croraf","senderId":"croraf@irc"}
]