[
{"content":{"body":"@Domenic: am i right in thinking that encodingOverride doesn't actually do anything yet in https://github.com/jsdom/whatwg-url ?","msgtype":"m.text"},"ts":1459818302000,"senderName":"jhiesey","senderId":"jhiesey@irc"},
{"content":{"body":"in general, how finished is https://url.spec.whatwg.org/ and are there any complete reference implementations?","msgtype":"m.text"},"ts":1459818338000,"senderName":"jhiesey","senderId":"jhiesey@irc"},
{"content":{"body":"@Sebmaster: ^","msgtype":"m.text"},"ts":1459818483000,"senderName":"jhiesey","senderId":"jhiesey@irc"},
{"content":{"body":"jhiesey: https://url.spec.whatwg.org/ intends to be finished and has browser implementations that conform","msgtype":"m.text"},"ts":1459818750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk would be the person to ask for more details","msgtype":"m.text"},"ts":1459818761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and fwiw there is java implementation at https://github.com/smola/galimatias that was written from scratch to match the requirements in teh spec","msgtype":"m.text"},"ts":1459818812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jhiesey: yeah, encodingOverride isn't actually implemented","msgtype":"m.text"},"ts":1459818845000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"I'm not sure it actually matters because it produce queryParams yet, which is the only point where it's used if i remember correctly","msgtype":"m.text"},"ts":1459818891000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"s/because it produce/because it doesn't produce/","msgtype":"m.text"},"ts":1459819040000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Is anyone here  familiar with multipart streams? Forwarding on an inquiry from another channel \"can one file be split between two parts of the same multipart stream\"","msgtype":"m.text"},"ts":1459820032000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"Sebmaster: you need it for correctly parsing the query state","msgtype":"m.text"},"ts":1459827896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: URLSearchParams doesn't really use it","msgtype":"m.text"},"ts":1459827927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If I add crytographic nonce metadata to requests, would you like me to expose it via Request/RequestInit? (re: https://github.com/whatwg/fetch/issues/269)","msgtype":"m.text"},"ts":1459841655000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: is there a use case?","msgtype":"m.text"},"ts":1459841693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Beyond \"explain the platform\", I don't have one.","msgtype":"m.text"},"ts":1459841710000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: probably not for v0 then","msgtype":"m.text"},"ts":1459841720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it's rather tied to the CSP header, no?","msgtype":"m.text"},"ts":1459841734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes. I don't know of anything else using the `nonce` attribute for anything.","msgtype":"m.text"},"ts":1459841761000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that is, at the moment you also can't fake type or destination","msgtype":"m.text"},"ts":1459841761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so if nonce only works when type is script, it doesn't add much value","msgtype":"m.text"},"ts":1459841779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: you might want to add nonce support to workers though...","msgtype":"m.text"},"ts":1459841794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: style too.","msgtype":"m.text"},"ts":1459841798000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://github.com/w3c/webappsec-csp/issues/15 <-- worker nonces.","msgtype":"m.text"},"ts":1459841849000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Seems Nadoedalo is ahead of the curve","msgtype":"m.text"},"ts":1459841901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not tough to be ahead of me...","msgtype":"m.text"},"ts":1459841918000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Do you happen to know how the HTML bits of xref work?","msgtype":"m.text"},"ts":1459841979000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Do I just run `html.py` to regenerate the json files?","msgtype":"m.text"},"ts":1459841989000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: you need to update html.json unfortunately","msgtype":"m.text"},"ts":1459842021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and then run html.py","msgtype":"m.text"},"ts":1459842026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"um. ok? what does html.py do, then?","msgtype":"m.text"},"ts":1459842054000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: cleanup and multipage references","msgtype":"m.text"},"ts":1459842099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so you don't need to stick to alphabetical order when inserting stuff in html.json","msgtype":"m.text"},"ts":1459842136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. Well, it's throwing exceptions. :)","msgtype":"m.text"},"ts":1459842157000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Is that still being used?","msgtype":"m.text"},"ts":1459842166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Will you be terribly sad if I just add references without running html.py? :)","msgtype":"m.text"},"ts":1459842195000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ms2ger: yeah","msgtype":"m.text"},"ts":1459842332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I guess I can try to fix it","msgtype":"m.text"},"ts":1459842343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You could try to argue this is all my code, I suppose","msgtype":"m.text"},"ts":1459842417000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm mostly stuck with it since bikeshed has these odd things","msgtype":"m.text"},"ts":1459842587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should really try to get bikeshed not to do the things I dislike, that's probably more productive","msgtype":"m.text"},"ts":1459842605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: HTMLHyperlinkElementUtils doesn't provide a searchParams getter? is that intentional?","msgtype":"m.text"},"ts":1459843023000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah","msgtype":"m.text"},"ts":1459843044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. what was the rationale?","msgtype":"m.text"},"ts":1459843063000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: since it can't work for Location and WorkerLocation it seemed better to just have it for URL","msgtype":"m.text"},"ts":1459843073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: minor post-decision-reason could be that <a> and <area> use an override encoding and URL doesn't","msgtype":"m.text"},"ts":1459843126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: and that URLSearchParams always uses utf-8","msgtype":"m.text"},"ts":1459843140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok thanks","msgtype":"m.text"},"ts":1459843167000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: so for https://github.com/whatwg/fetch/pull/273 you didn't update xref at all?","msgtype":"m.text"},"ts":1459843607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: or it wasn't needed?","msgtype":"m.text"},"ts":1459843612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I updated it locally, and apparently didn't send a PR. 2 seconds.","msgtype":"m.text"},"ts":1459843639000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"https://github.com/whatwg/xref/pull/11","msgtype":"m.text"},"ts":1459843703000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: wasn't sure whether https://github.com/whatwg/fetch/issues/269 should be closed, will leave that to you","msgtype":"m.text"},"ts":1459844412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Probably not. It needs an HTML patch I'm writing now.","msgtype":"m.text"},"ts":1459844439000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And a CSP patch, but that's less relevant to Fetch.","msgtype":"m.text"},"ts":1459844448000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"GitHub is super slow?","msgtype":"m.text"},"ts":1459844587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk:  yes (see: https://status.github.com/messages)","msgtype":"m.text"},"ts":1459845065000,"senderName":"alrra","senderId":"alrra@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1459845369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so I got conflicts now for \"origin\"","msgtype":"m.text"},"ts":1459845379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: then I use \"spec\" as suggested to disambiguate","msgtype":"m.text"},"ts":1459845388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: but by default \"spec\" just picks the first <dfn> in HTML, even it says noexport!","msgtype":"m.text"},"ts":1459845406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: that's somewhat absurd, no?","msgtype":"m.text"},"ts":1459845420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Where's the best place to submit PRs for CSSOM? :)","msgtype":"m.text"},"ts":1459846276000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Just file something at https://www.w3.org/Bugs/Public/buglist.cgi?component=CSSOM&list_id=62622&product=CSS&resolution=--- ?","msgtype":"m.text"},"ts":1459846282000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: https://github.com/w3c/csswg-drafts/ - but create a fork, branches on this repo don't work because of the hg sync","msgtype":"m.text"},"ts":1459846850000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Thanks!","msgtype":"m.text"},"ts":1459846870000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"waits an hour for GitHub to catch up. :/","msgtype":"m.emote"},"ts":1459846921000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"lights his peace pipe and enjoys an early-evening break","msgtype":"m.emote"},"ts":1459847336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan_: If you have a moment, can you help me understand how \"fetch a CSS style sheet\" relates to \"create a CSS style sheet\"?","msgtype":"m.text"},"ts":1459847678000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"The latter has data I want to use in the former (namely the \"owner node\" of the sheet).","msgtype":"m.text"},"ts":1459847692000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"\"create\" is called from HTML.","msgtype":"m.text"},"ts":1459847735000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"\"fetch\" doesn't seem to be called at all.","msgtype":"m.text"},"ts":1459847742000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: https://github.com/whatwg/html/issues/968","msgtype":"m.text"},"ts":1459847811000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"mkwst: also i think several things in this area are currently broken, i haven't spent time yet to fix it","msgtype":"m.text"},"ts":1459847846000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Got it. Ok. Then I'll defer this PR a bit and file a bug for myself to come back to it. :)","msgtype":"m.text"},"ts":1459847944000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: happy to allocate time for this soon though and help with whatever you want to fix","msgtype":"m.text"},"ts":1459847952000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I know jochen__ wants clarity here for Referrer Policy, and it would be helpful for CSP and SRI, which both need to stuff things into Fetch for various checks.","msgtype":"m.text"},"ts":1459847994000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"*shrug* Not the most important thing ever, but it would be nice to have a clear path from `<link>` in HTML through to Fetch for stylesheets.","msgtype":"m.text"},"ts":1459848030000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yeah, he's always reminding me how CSS doesn't have its act together","msgtype":"m.text"},"ts":1459848031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But note that fixing that would also requiring some deeper fixes, such as defining what `background-image` and such do","msgtype":"m.text"},"ts":1459848050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup. Baby steps.","msgtype":"m.text"},"ts":1459848059000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yeah, it's only a two decade old feature","msgtype":"m.text"},"ts":1459848114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Would be a bit soon for it to be properly defined","msgtype":"m.text"},"ts":1459848125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fetch isn't two decades old. :)","msgtype":"m.text"},"ts":1459848149000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: background-image is","msgtype":"m.text"},"ts":1459848157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1459848177000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"1) Here's a URL. 2) ??? 3) It works!!","msgtype":"m.text"},"ts":1459848218000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Also, I think I could argue that parts of Fetch maybe are that old","msgtype":"m.text"},"ts":1459848223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_, hey, you know if attr() case-sensitivity is specced?","msgtype":"m.text"},"ts":1459848237000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what aspect of it?","msgtype":"m.text"},"ts":1459848249000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"E.g., the redirect behavior has existed since, well, browsers","msgtype":"m.text"},"ts":1459848256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_, something that says \"it's case-insensitive in HTML documents, case-sensitive elsewhere\"","msgtype":"m.text"},"ts":1459848301000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_, will file on HTML, I guess","msgtype":"m.text"},"ts":1459848562000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i don't find anything about that","msgtype":"m.text"},"ts":1459848564000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"html http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4034 xhtml http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4035","msgtype":"m.text"},"ts":1459848768000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Also http://test.csswg.org/suites/css21_dev/nightly-unstable/html4/content-attr-case-001.htm :)","msgtype":"m.text"},"ts":1459848817000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The case-sensitivity of attribute names depends on the document language.\" says CSS 2.1","msgtype":"m.text"},"ts":1459848947000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/991","msgtype":"m.text"},"ts":1459848969000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but no such text in https://drafts.csswg.org/css-values-3/#funcdef-attr","msgtype":"m.text"},"ts":1459848972000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'd file an issue there, but they use Tracker","msgtype":"m.text"},"ts":1459849221000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And that's really not worth my time","msgtype":"m.text"},"ts":1459849238000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, ^","msgtype":"m.text"},"ts":1459849398000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"squash and merge is very satisfying","msgtype":"m.text"},"ts":1459850149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: should the HTML parser hide nonce attributes?","msgtype":"m.text"},"ts":1459851165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Why?","msgtype":"m.text"},"ts":1459851304000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: probably not worth the complexity, but it reduces the risk of nonce being reused by an attacker","msgtype":"m.text"},"ts":1459851334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"An attacker could only gain access to the nonce if they had the ability to run script on the page though, right?","msgtype":"m.text"},"ts":1459851366000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"At that point, it's not clear what we'd be defending against.","msgtype":"m.text"},"ts":1459851376000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: sure, it's defense-in-depth, similar to your credential scheme","msgtype":"m.text"},"ts":1459851397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: e.g., it might prevent exfiltration","msgtype":"m.text"},"ts":1459851427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: File a bug? It's certainly worth considering, though I'm not sure the complexity is worth it.","msgtype":"m.text"},"ts":1459851594000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I've been thinking about something else that might be worth it, though:","msgtype":"m.text"},"ts":1459851606000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"An issue that keeps coming up is injection of partial tags to capture attributes on subsequent tagfs.","msgtype":"m.text"},"ts":1459851628000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Like, an attacker injects `<script src='whatever'` just before a page writes `<script nonce='whatever' ...>`.","msgtype":"m.text"},"ts":1459851669000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Could we prevent script execution for script elements that contain an attribute named \"<script\"?","msgtype":"m.text"},"ts":1459851705000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"If it's web-compatible we could...","msgtype":"m.text"},"ts":1459851725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm doing it in CSP (https://github.com/w3c/webappsec-csp/commit/2c92a09beeede27e45f2acef4041aa0a1770fa99), but I can't imagine there's any real use case.","msgtype":"m.text"},"ts":1459851786000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I guess I'll file a bug, add a use counter, and wait. :)","msgtype":"m.text"},"ts":1459851796000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yeah, that'd be a good approach","msgtype":"m.text"},"ts":1459851818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The cool alternative would be <script-[nonce]>, but that's not really backwards compatible","msgtype":"m.text"},"ts":1459851860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you'd have </script-[nonce]> too of course","msgtype":"m.text"},"ts":1459851884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, that's the next thing. :)","msgtype":"m.text"},"ts":1459851895000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And the parser inserts <script> if [nonce] is good","msgtype":"m.text"},"ts":1459851902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since HTML isn't XML, how about we add `<tag closes-with='nonce'> ... </tag nonce>` :)","msgtype":"m.text"},"ts":1459851931000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That'd be a lot more compatible, for sure","msgtype":"m.text"},"ts":1459851955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have no objections, XML compat hasn't really done us any favors","msgtype":"m.text"},"ts":1459851977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hooray! Maybe I'll look at our HTML parser to see if this is at all implementable.","msgtype":"m.text"},"ts":1459852002000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Attributes on the closing tag are definitely tokenized, but probably not along","msgtype":"m.text"},"ts":1459852045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"passed along*","msgtype":"m.text"},"ts":1459852052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's a good presentation framework these days? Other than Opera Presto which I can't really recommend anymore due to it not being maintained...","msgtype":"m.text"},"ts":1459859794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone experience with https://github.com/hakimel/reveal.js?","msgtype":"m.text"},"ts":1459859800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has http://ondras.github.io/jsslides/v3/","msgtype":"m.emote"},"ts":1459860772000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1459860773000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: ta, none of these looks very simple, but maybe it's not a simple problem anymore","msgtype":"m.text"},"ts":1459866604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: <style media=projection> was quite nice","msgtype":"m.text"},"ts":1459866616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"depends on your definition of \"simple\" I guess","msgtype":"m.text"},"ts":1459866712000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"media=projection is nice but you often want to have this functionality without projection","msgtype":"m.text"},"ts":1459866742000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and you want some interactivity not achievable with css","msgtype":"m.text"},"ts":1459866752000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I have this pure-css variant: http://ondras.zarovi.cz/demos/nojs/","msgtype":"m.text"},"ts":1459866764000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but it is more of a hack","msgtype":"m.text"},"ts":1459866768000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"anyway, my jsslides is generally done by one additional <script src=...> node, sounds quite accessible to me","msgtype":"m.text"},"ts":1459866816000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1459866819000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Always so interesting when someone's only GitHub contribution is a reasonable, non-spammy spec bug: https://github.com/whatwg/dom/issues/203","msgtype":"m.text"},"ts":1459874835000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Outside the filter bubble there are lots of technical people that never have occasion to use GitHub","msgtype":"m.text"},"ts":1459875061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: had not even noticed that","msgtype":"m.text"},"ts":1459875363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: We do not, in fact, use Tracker for anything; I'll go fix that spec to stop lying.","msgtype":"m.text"},"ts":1459878901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's nice, I guess","msgtype":"m.text"},"ts":1459878953000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And yeah, you're right, we should ref the \"CI defined by the host language\".","msgtype":"m.text"},"ts":1459878982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan also sent email","msgtype":"m.text"},"ts":1459879008000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Cool","msgtype":"m.text"},"ts":1459881795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: (re spec and noexport) That's actually intended behavior.  The entire point of noexport is to hide definitions *by default*, if they're not considered sufficiently useful to pollute the global namespace with.  The spec argument's main purpose is to *override* that, indicating that no, you really do want to look inside of this spec for a definition,","msgtype":"m.text"},"ts":1459881947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so that overrides noexport.","msgtype":"m.text"},"ts":1459881947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If spec didn't do that, I'd have to invent a *further* indicator to mean \"no, really, I don't care whether they're exported or not\".","msgtype":"m.text"},"ts":1459881980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"then how do you indicate which spec you want to get the definition from, while still respecting noexport?","msgtype":"m.text"},"ts":1459882050000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You don't.","msgtype":"m.text"},"ts":1459882056000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There is no such indicator right now. Hasn't been needed.","msgtype":"m.text"},"ts":1459882067000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As long as a single spec's definition are well-formed (all distinguishable), you don't need it - you can just say \"use this spec, and get me this particular definition\".","msgtype":"m.text"},"ts":1459882099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is possible in this case anyway - I don't know how correct it is, but the one exported HTML \"origin\" definition is for=origin","msgtype":"m.text"},"ts":1459882120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess this comes back to the conflict where you think textContent is unique and we think IDs are unique","msgtype":"m.text"},"ts":1459882135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"While the other three aren't for anything. (They're not well-formed per Bikeshed's model, but as long as you're not trying to link them that doesn't matter.)","msgtype":"m.text"},"ts":1459882154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, IDs are unique, yes. But they're also arbitrary strings that require extra memorization to use, and should be left to automation to generate anyway.  They're a tool of the underlying tech, not really intended for usability at the authoring layer.","msgtype":"m.text"},"ts":1459882207000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I disagree, probably because of the years of using <a href=\"#id\">","msgtype":"m.text"},"ts":1459882258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, if you've already got calluses over the parts of your brain that remember IDs, it doesn't feel like it's a problem.","msgtype":"m.text"},"ts":1459882293000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, it'd only be used for the disambiguation cases where the textContent is not unique","msgtype":"m.text"},"ts":1459882399000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Bikeshedded specs already enforce that case as a fatal error; this is only for the handful of specs that (a) want to be in the cross-spec-linking db, and (b) don't want to play by the rules of that db.","msgtype":"m.text"},"ts":1459882445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's only a handful of those, and they can be fixed over time.  Blessing their behavior isn't great for the ecosystem.","msgtype":"m.text"},"ts":1459882481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I pretty strongly disagree that unique text content is necessary for being a good citizen of the ecosystem","msgtype":"m.text"},"ts":1459882587000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but, it's not my db","msgtype":"m.text"},"ts":1459882595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good thing it's not!","msgtype":"m.text"},"ts":1459882600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ouch","msgtype":"m.text"},"ts":1459882611000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ugh, collision.","msgtype":"m.text"},"ts":1459882618000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Was responding to the *previous* line.","msgtype":"m.text"},"ts":1459882622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You have to be a unique {linking text, type, for, spec} value.  Which is a very low bar to meet.","msgtype":"m.text"},"ts":1459882641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Being unique on {linking text, type, for} is *nice*, but not required.  When I finally implement support for obsoletion, it'll be easier.)","msgtype":"m.text"},"ts":1459882701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That all said, my error message *does* explicitly say to insert \"spec:html; type:dfn; text:origin\" into link defaults, which would not be sufficient here.  I should improve that.","msgtype":"m.text"},"ts":1459883074000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess this all sounds reasonable; we'll see if I run into problems again and have more specific complaints","msgtype":"m.text"},"ts":1459883107000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Somewhat-relatedly, we should talk about what we can do to HTML to make it a good citizen for cross-spec links. Add more data- attributes, mainly? Especially export, but also some type-related ones---e.g. get it to mark up the IDL somehow?","msgtype":"m.text"},"ts":1459883195000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think the for=origin on that value is wrong.  It's actually the core \"origin\" definition, all by its lonesome; it should be the only one *without* a for='' value.  The other three should get for=request, for=url, and for=http, or something like that.","msgtype":"m.text"},"ts":1459883228000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I *think* plinss's parser handles IDL reasonably well automatically, but I'll have to check.  Otherwise, yeah, it's just a matter of honoring the anchor contract <https://github.com/tabatkins/bikeshed/blob/master/docs/dfn-contract.md>","msgtype":"m.text"},"ts":1459883279000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can't believe we've been putting data-noexport on all our <dfn>s like chumps, so silly","msgtype":"m.text"},"ts":1459883325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"A lot of them *do* need it.  HTML is *not* defining the url origin, for example.","msgtype":"m.text"},"ts":1459883357000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but dfn is noexport by default, I thought?","msgtype":"m.text"},"ts":1459883367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh yeah, right, that's true.","msgtype":"m.text"},"ts":1459883374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: While I was looking at BT's HTML use, I noticed that I have to define anchors for https://www.w3.org/2001/tag/doc/promises-guide and https://heycam.github.io/webidl/. Can you add those to shepherd? (I'll still have to define link-defaults for those, but that's preferable)","msgtype":"m.text"},"ts":1459889585000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: Note that https://www.w3.org/2001/tag/doc/promises-guide#resolve-promise has link-text \"Resolve p with x\", which doesn't work at all in other specs. I'm using just \"Resolve\" in Bluetooth.","msgtype":"m.text"},"ts":1459889860000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah I should probably fix that","msgtype":"m.text"},"ts":1459889875000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jyasskin: Promises Guide is already in there.","msgtype":"m.text"},"ts":1459889972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WebIDL isn't Bikeshed-friendly. Dunno what results we'd get if we put it in.","msgtype":"m.text"},"ts":1459889991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thanks. I bet I searched for the wrong thing. WebIDL would have results like HTML, right?","msgtype":"m.text"},"ts":1459890004000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, approximately.","msgtype":"m.text"},"ts":1459890011000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's better than nothing.","msgtype":"m.text"},"ts":1459890018000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Hmmmmm, there's only 225 definitions.  It shouldn't be too hard to just add the right attrs to WebIDL.","msgtype":"m.text"},"ts":1459890366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Gimme an hour.","msgtype":"m.text"},"ts":1459890373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just Bikeshed it ;)","msgtype":"m.text"},"ts":1459890992000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger or nox started such a project IIRc","msgtype":"m.text"},"ts":1459891001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Bikeshedding it would be a lot more work. ^_^ I can at least make it *friendly* easily.","msgtype":"m.text"},"ts":1459891022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yeah, I recall someone starting a Bikeshedding, but I guess they lost interest; haven't heard anything about it in a while.","msgtype":"m.text"},"ts":1459891049000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: I would like to do it but I have other things to do and I've been told there are some licensing issue to take care of or whatever.","msgtype":"m.text"},"ts":1459891102000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"but the XSLT ;_;","msgtype":"m.text"},"ts":1459891163000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Eh, who cares, data-* attributes still work I'm pretty sure.","msgtype":"m.text"},"ts":1459891328000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But also: licensing??!?","msgtype":"m.text"},"ts":1459891364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: You would have to look into this very channel's logs, because I don't remember.","msgtype":"m.text"},"ts":1459894776000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It does seem like Web IDL is currently under the \"no derivative works allowed\" copyright.","msgtype":"m.text"},"ts":1459895006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right, but that doesn't stop it from *switching* to another processor.","msgtype":"m.text"},"ts":1459895561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wooo https://github.com/heycam/webidl/pull/105","msgtype":"m.text"},"ts":1459898816000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thank you!","msgtype":"m.text"},"ts":1459899097000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Welcome! Hope it works and everything's kosher!","msgtype":"m.text"},"ts":1459899120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: unfortunately no, since it's XML those data-* attributes need an =\"\"","msgtype":"m.text"},"ts":1459899197000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ah, kk, gimme a sec","msgtype":"m.text"},"ts":1459899205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought of that early, but forgot by the time I was writing things.","msgtype":"m.text"},"ts":1459899218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k, done","msgtype":"m.text"},"ts":1459899279000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tries","msgtype":"m.emote"},"ts":1459899309000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: https://pastebin.mozilla.org/8866534","msgtype":"m.text"},"ts":1459899338000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Holy crap, what possible reason could XML have for disallowing < in attr values?","msgtype":"m.text"},"ts":1459899382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"started Bikeshedification (as did Ms2ger), which he should get back to completing","msgtype":"m.emote"},"ts":1459899395000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"And done.","msgtype":"m.text"},"ts":1459899463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: success :)","msgtype":"m.text"},"ts":1459899525000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yus","msgtype":"m.text"},"ts":1459899531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"brb will land in a min","msgtype":"m.emote"},"ts":1459899550000,"senderName":"heycam","senderId":"heycam@irc"}
]