[
{"content":{"body":"promise_test + async/await is really quite nice","msgtype":"m.text"},"ts":1535095504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm still not a 100% confident I do it correctly all the time, but it seems to work...","msgtype":"m.text"},"ts":1535095528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: Domenic: I finally created a \"topic: document lifecycle\" label, feel free to sprinkle it around; I guess it's kinda conflicting with navigation, but navigation doesn't naturally cover unload and such","msgtype":"m.text"},"ts":1535096571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We haven't really done memes in a while and I'm not even sure this is correct, but... https://irccloud.mozilla.com/file/fVjttBbv/hodor.jpg","msgtype":"m.text"},"ts":1535109187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://irccloud.mozilla.com/file/3wvdQXda/hodor%20take%202.jpg","msgtype":"m.text"},"ts":1535109248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah ah ah ah ah.","msgtype":"m.text"},"ts":1535109270000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Are people trying to change it?","msgtype":"m.text"},"ts":1535109295000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: all the fricking time","msgtype":"m.text"},"ts":1535109304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TIL, what a wonderful world we live in.","msgtype":"m.text"},"ts":1535109316000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"mostly on edge cases, though recently there was a thread about obsoleting it altogether","msgtype":"m.text"},"ts":1535109325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, Edge doesn't respect the policy?","msgtype":"m.text"},"ts":1535109365000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hides for this overused pun.","msgtype":"m.emote"},"ts":1535109370000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"withholds a baguette","msgtype":"m.emote"},"ts":1535109434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nooooooooooooooooooo","msgtype":"m.text"},"ts":1535109461000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So that's an effective technique? Might be able to get document.open() fixed in Servo after all ðŸ˜›","msgtype":"m.text"},"ts":1535109585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah ah ah ah.","msgtype":"m.text"},"ts":1535109593000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Fortunately, when I implemented it I skipped the whole \"let's create a new Window\" IIRC.","msgtype":"m.text"},"ts":1535109605000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smart","msgtype":"m.text"},"ts":1535109616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it shouldn't be *that* hard to fix it (famous last words, probs).","msgtype":"m.text"},"ts":1535109626000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, so did the smup land?","msgtype":"m.text"},"ts":1535110041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes.","msgtype":"m.text"},"ts":1535110048000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: I'm currently looking at my PRs against WPT right now. :)","msgtype":"m.text"},"ts":1535110061000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"When's the next one? 2021?","msgtype":"m.text"},"ts":1535110076000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I like how multiple meanings of \"against\" fit here.","msgtype":"m.text"},"ts":1535110081000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Literally made it worse for Servo.","msgtype":"m.text"},"ts":1535110089000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Mmh, most of my changes have disappeared already.","msgtype":"m.text"},"ts":1535110526000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Made https://github.com/web-platform-tests/wpt/pull/12672 nonetheless.","msgtype":"m.text"},"ts":1535110588000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yoav: I'm not sure how to reply to https://github.com/whatwg/fetch/issues/800#issuecomment-415760321","msgtype":"m.text"},"ts":1535118760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: my main concern is that I don't understand what model you all want","msgtype":"m.text"},"ts":1535118773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: (in that there are multiple somewhat contradictory requirements)","msgtype":"m.text"},"ts":1535118803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I'm also concerned about adding exceptions to the same-origin policy","msgtype":"m.text"},"ts":1535118836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I haven't really considered the privacy leakage aspects enough to have an informed opinion there; I suspect you're probably right that 1P can leak those however (assuming there's no way 1P and 3P would ever get different intel)","msgtype":"m.text"},"ts":1535118902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: hope that helps","msgtype":"m.text"},"ts":1535118920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK. From my perspective the SOP concern is not related to this issue, but to https://github.com/whatwg/fetch/pull/725","msgtype":"m.text"},"ts":1535118990000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: would that be correct? Or are there SOP concerns that are specific to the redirect scenario you mentioned?","msgtype":"m.text"},"ts":1535119014000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it's a problem with Client Hints in general, and I regret not pushing harder earlier on; I also note that that PR is blocked on the model not being defined","msgtype":"m.text"},"ts":1535119099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: again, it'd help if more implementers are on board here, I don't think we had that requirement when we initially added Client Hints","msgtype":"m.text"},"ts":1535119179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which requirement? to safelist the headers? To not expose CH to 3P unless 1P opts in?","msgtype":"m.text"},"ts":1535119258000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: to have multiple implementers on board","msgtype":"m.text"},"ts":1535119267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, ok","msgtype":"m.text"},"ts":1535119281000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess reading some past discussions Mozilla was halfheartedly on board, though not with all concerns addressed","msgtype":"m.text"},"ts":1535119527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But also back then the header exploits were not seen as important","msgtype":"m.text"},"ts":1535119544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sigh","msgtype":"m.text"},"ts":1535119553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I think the SOP concerns can probably be addressed by adequately restricting the value space of the headers (this is already done in prose somewhat, but I doubt it's tested)","msgtype":"m.text"},"ts":1535119600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: so I guess I wouldn't focus too much on my SOP concerns","msgtype":"m.text"},"ts":1535119629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1263446 has all the past Mozilla discussion (also follow the dev.platform link) FWIW","msgtype":"m.text"},"ts":1535119684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's also some talk there of restricting this to H/2 / HTTPS","msgtype":"m.text"},"ts":1535119706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which I think is planned, but not in the spec yet","msgtype":"m.text"},"ts":1535119721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(This situation does make me appreciate our new setup of multiple implementers, tests, etc.)","msgtype":"m.text"},"ts":1535119774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it possible to differentiate between a range input's knob vs its slider track on the mousedown event? more details here: https://stackoverflow.com/q/52006259/173630","msgtype":"m.text"},"ts":1535120511000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"Since the spec doesn't define what it looks like, I doubt it","msgtype":"m.text"},"ts":1535120651000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"alright, thanks.","msgtype":"m.text"},"ts":1535120680000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"nnyby: what's the use case? why do you want this?","msgtype":"m.text"},"ts":1535120794000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: heh well, it's actually related to your helpful answer you gave me yesterday. I want to disable your oninput limiter when the user clicks the knob of the slider, so it's freely draggable. and only allow your oninput limiter to take effect when the surrounding slider track is clicked.","msgtype":"m.text"},"ts":1535120926000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"the more general use case is that this is for some astronomy simulations i'm working on - converting from flash to html/javascript. The astronomer really likes the way the original sliders behave. (flash required: https://cse.unl.edu/~astrodev/flashdev2/transitSimulator/transitSimulator017.html)","msgtype":"m.text"},"ts":1535121010000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"nnyby: you can compare the new value to the old value, and do nothing if it's near enough","msgtype":"m.text"},"ts":1535121032000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ahh yeah. that would be a good workaround. i'll try that. thanks","msgtype":"m.text"},"ts":1535121057000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"it might do the wrong thing if you move fast or if there's a lag, though.","msgtype":"m.text"},"ts":1535121112000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah sweet.. i think I got it. That solution kind of worked, but I'm getting better behavior with just tracking the dragging state with mousedown, mouseup, and mousemove.","msgtype":"m.text"},"ts":1535121673000,"senderName":"nnyby","senderId":"nnyby@irc"},
{"content":{"body":"zcorpan: https://github.com/whatwg/html/pull/3914 needs rebasing; presumably due to the padding change","msgtype":"m.text"},"ts":1535122712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: could you document whatwg/fieldset in https://github.com/whatwg/meta/blob/master/GITHUB-TEAMS.md ?","msgtype":"m.text"},"ts":1535123079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/meta/pull/105","msgtype":"m.text"},"ts":1535123265000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"FYI I just set up https://arcane-cove-57093.herokuapp.com/multipage/ for demoâ€™ing/testing sample HTML spec output with MDN annotations/links added","msgtype":"m.text"},"ts":1535124205000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., scroll down in https://arcane-cove-57093.herokuapp.com/multipage/semantics.html#the-link-element","msgtype":"m.text"},"ts":1535124340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Re: https://github.com/whatwg/fullscreen/pull/129#issuecomment-415650122  I think that is the inverse of what we want... ie navigationUI would have to default to true then","msgtype":"m.text"},"ts":1535124548000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: you want to show UI by default?","msgtype":"m.text"},"ts":1535124830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: I misunderstood in that case","msgtype":"m.text"},"ts":1535124853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: then disableNavigationBar would make sense, but that does not match existing impl afaik","msgtype":"m.text"},"ts":1535124913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm fine with that.. what do you mean it doesn't match the current impl?","msgtype":"m.text"},"ts":1535125095000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"annevk: requestFullscreen() and webkitRequestFullscreen() behave slightly differently in Chrome in this respect","msgtype":"m.text"},"ts":1535125134000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"annevk: we'd like to use unprefixing and providing an option as a catalyst to change this","msgtype":"m.text"},"ts":1535125181000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: to start defaulting to UI enabled? So Iâ€™m a little worried about other implementers. Are they all on board or do we need a tri-state as foolip suggested?","msgtype":"m.text"},"ts":1535125423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Samsung browser already does this by default for webkitRequestFullscreen()","msgtype":"m.text"},"ts":1535125469000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"annevk: and nobody has raised issues in the past regarding this","msgtype":"m.text"},"ts":1535125480000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: Samsung isnâ€™t typically tested","msgtype":"m.text"},"ts":1535125655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also for a change like this explicit consent is needed","msgtype":"m.text"},"ts":1535125726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: explicit consent? The navigation bar appears on some Android devices. Are we actually understanding the same thing?. The back/forward/home buttons at the bottom on some Android devices are overlays... and on some it is always taken as space. This is just asking to hide them if it can but defaulting to not hiding them. A user agent should be free to choose its own default. So perhaps this needs to not be boolean","msgtype":"m.text"},"ts":1535126102000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: I think we are roughly understanding the same thing","msgtype":"m.text"},"ts":1535126317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do we need to provide a default value for the dictionary? WebIDL allows this and there is no guidance on https://w3ctag.github.io/design-principles/ regarding this","msgtype":"m.text"},"ts":1535126598000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: not for the dictionary argument (that's always {})","msgtype":"m.text"},"ts":1535126642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: for the dictionary member it's optional, but if you want to make this an enum I wouldn't allow undefined and just make one of the enum values the default","msgtype":"m.text"},"ts":1535126668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: the main risk I'm seeing with this API is that developers start assuming some default, so \"auto\" and \"omit\" seems clearer to me true/false","msgtype":"m.text"},"ts":1535126735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: that'd also allow for \"include\" if at some point all UAs agree that requesting some UI is reasonable","msgtype":"m.text"},"ts":1535126756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: off the top of your head do you have an example API to model after?","msgtype":"m.text"},"ts":1535126764000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: no, but I can help with the IDL","msgtype":"m.text"},"ts":1535126826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: dictionary RequestFullscreenInit { FullscreenNavigationUI navigationUI = \"auto\"; }; enum FullscreenNavigationUI { \"auto\", \"omit\" };","msgtype":"m.text"},"ts":1535126955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: if you meant something else, lmk","msgtype":"m.text"},"ts":1535126967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ya that looks ok","msgtype":"m.text"},"ts":1535127098000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: feature testing can be done with requestFullScreen({ get navigationUI() { throw 1 } }) fwiw but does require waiting one microtask","msgtype":"m.text"},"ts":1535127950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems acceptable though","msgtype":"m.text"},"ts":1535127968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there is no downside to always requestFullscreen({});  since it is the first optional dictionary","msgtype":"m.text"},"ts":1535128023000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: you still might wanna know whether a particular feature is supported before calling the method though","msgtype":"m.text"},"ts":1535128093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(assuming we're adding more over time)","msgtype":"m.text"},"ts":1535128109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(this wouldn't quite work if we ever added \"include\" unfortunately)","msgtype":"m.text"},"ts":1535128132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which I wonder if we should put \"include\" there  from the start.. also \"auto\", \"show\", \"hide\" are more intuitive to me","msgtype":"m.text"},"ts":1535128258000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: yeah, maybe, I guess it depends on what implementers say","msgtype":"m.text"},"ts":1535128516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: we need two engines interested","msgtype":"m.text"},"ts":1535128534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: your names sgtm","msgtype":"m.text"},"ts":1535128542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so given request URL x and service worker response URL y; shouldn't y win?","msgtype":"m.text"},"ts":1535129816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I guess we settled on x since that's what I'm seeing? I guess I should read the spec again, but prolly Monday","msgtype":"m.text"},"ts":1535129848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so per Fetch's main fetch it seems it should be y","msgtype":"m.text"},"ts":1535132413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's rather frustrating this isn't implemented that way still, I wonder at what point it'll be too late","msgtype":"m.text"},"ts":1535132442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it should be Response url y","msgtype":"m.text"},"ts":1535132707000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: and that should be implemented in firefox","msgtype":"m.text"},"ts":1535132730000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: at least for https://github.com/web-platform-tests/wpt/pull/12680 I get x","msgtype":"m.text"},"ts":1535133395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I get resources/test not resources/test.txt","msgtype":"m.text"},"ts":1535133422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: gonna take a break now, but would appreciate feedback on that","msgtype":"m.text"},"ts":1535133511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is your test using skipWaiting() somewhere to control the current window?  or how is your fetch() being made from a controlled client?","msgtype":"m.text"},"ts":1535133520000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think you need to make an iframe that the service worker controls","msgtype":"m.text"},"ts":1535133541000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and do the fetch from there","msgtype":"m.text"},"ts":1535133546000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: thanks, sorry about that","msgtype":"m.text"},"ts":1535138413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1535138477000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Anyone knows who're the right people to CC for https://github.com/whatwg/html/pull/3960?","msgtype":"m.text"},"ts":1535143042000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"}
]