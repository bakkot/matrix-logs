[
{"content":{"body":"JakeA: wanderview_PTO: Bluebird put up their 3.0 cancelation docs. https://petkaantonov.github.io/bluebird/web/docs/api-reference.html#cancellation","msgtype":"m.text"},"ts":1431359869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: any info on why they went for \"don't care\" rather than abort?","msgtype":"m.text"},"ts":1431359982000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the usual reason, errors are annoying. You can still see it with .finally though. It's basically exactly what you/we were planning.","msgtype":"m.text"},"ts":1431360008000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: holy shit, even down to onCancel taking a function, this is unbelievably close","msgtype":"m.text"},"ts":1431360045000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Heh yeah","msgtype":"m.text"},"ts":1431360061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still not a big fan of that, but shrug","msgtype":"m.text"},"ts":1431360068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Your idea of returning a function was fine too, I don't have strong feelings either way","msgtype":"m.text"},"ts":1431360125000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I gotta get back to working on that soon i guess","msgtype":"m.text"},"ts":1431360143000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Curious to find out how they deal with resolved but not settled promises too","msgtype":"m.text"},"ts":1431360153000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You should open an issue asking the exact question","msgtype":"m.text"},"ts":1431360169000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't recall enough of the details to relay it","msgtype":"m.text"},"ts":1431360181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll do that now","msgtype":"m.text"},"ts":1431360193000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: I promised anne something by mid-June, I'm hoping to get untangled with I/O video work by the end of this week, so I can actually do some proper work after that","msgtype":"m.text"},"ts":1431360219000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: https://groups.google.com/forum/#!topic/bluebird-js/Pc7TCuEo3B4","msgtype":"m.text"},"ts":1431360794000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Is there a specific document for ADA compliance of web sites that differs from, say, Section 508?","msgtype":"m.text"},"ts":1431375975000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"seems like it would be hard to regulate without documentation :x","msgtype":"m.text"},"ts":1431376060000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"rniwa: if we said custom elements could define their own constructor, are you willing to run those author-defined constructors during parsing, or...?","msgtype":"m.text"},"ts":1431381692000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(also during cloning)","msgtype":"m.text"},"ts":1431381699000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we have to, right?","msgtype":"m.text"},"ts":1431382909000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: even in Dimitry's design of having a constructor having a callback","msgtype":"m.text"},"ts":1431382930000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: we'd still have to run it during parsing","msgtype":"m.text"},"ts":1431382937000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: i don't think there's a way around it","msgtype":"m.text"},"ts":1431382942000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: no, not in Dmitry's design. In Dmitry's design you just run the HTMLElement constructor like you currently are.","msgtype":"m.text"},"ts":1431382952000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah but then you'd have to call user defined callback right after that","msgtype":"m.text"},"ts":1431382968000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right, after parsing, but before returning control to the user","msgtype":"m.text"},"ts":1431382979000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't think that makes sense.","msgtype":"m.text"},"ts":1431382990000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's the same as createdCallback is today","msgtype":"m.text"},"ts":1431382999000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that exposes \"uninitialized\" elements","msgtype":"m.text"},"ts":1431383004000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It does indeed expose elements that have not had their createdCallback run","msgtype":"m.text"},"ts":1431383023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: because all those custom element callbacks would see other elements that have not been initialized","msgtype":"m.text"},"ts":1431383028000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: that's precisely why createdCallback is broken.","msgtype":"m.text"},"ts":1431383041000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"If we don't allow that then we have to run constructors sync during parsing, before the parser continues creating more elements","msgtype":"m.text"},"ts":1431383047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems fine. Don't mess with your siblings while you're being created.","msgtype":"m.text"},"ts":1431383061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I understand if you disagree.","msgtype":"m.text"},"ts":1431383066000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It just seems like the better solution than introducing author code into the parser.","msgtype":"m.text"},"ts":1431383075000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I just don't understand what the problem of introducing author code into the parser is","msgtype":"m.text"},"ts":1431383094000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: we already do this for sync script elements","msgtype":"m.text"},"ts":1431383100000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: what's so difficult about running script there?","msgtype":"m.text"},"ts":1431383112000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: I do see that cloning case is hard","msgtype":"m.text"},"ts":1431383122000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm why is cloning different than parsing","msgtype":"m.text"},"ts":1431383132000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but I don't think invoking script during normal parsing is hard at all","msgtype":"m.text"},"ts":1431383133000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: because there's a bunch of UA internal code that clones nodes internally","msgtype":"m.text"},"ts":1431383145000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: e.g. editing","msgtype":"m.text"},"ts":1431383147000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: and a bunch of Range methods","msgtype":"m.text"},"ts":1431383152000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and a few other places","msgtype":"m.text"},"ts":1431383155000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: Gecko for examples clones the document for priting","msgtype":"m.text"},"ts":1431383164000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sure, but there's a bunch of UA internal code that parses too, right?","msgtype":"m.text"},"ts":1431383165000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1431383167000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't think so.","msgtype":"m.text"},"ts":1431383174000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: if you're talking about innerHTML, sure","msgtype":"m.text"},"ts":1431383179000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: or copy/paste","msgtype":"m.text"},"ts":1431383194000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: but those things can already run scripts anyway so there's nothing new","msgtype":"m.text"},"ts":1431383204000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well if WebKit is OK running author code during parse and cloning then that's good to know.","msgtype":"m.text"},"ts":1431383233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I got the impression Gecko wasn't, but I'm not sure.","msgtype":"m.text"},"ts":1431383249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: they're not okay with running the code during cloning","msgtype":"m.text"},"ts":1431383368000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Welp.","msgtype":"m.text"},"ts":1431383384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"During, or in reaction to?","msgtype":"m.text"},"ts":1431383415000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess they must be OK with in reaction to since they propose clonedCallback","msgtype":"m.text"},"ts":1431383429000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: during cloning","msgtype":"m.text"},"ts":1431383582000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: I'm not sure if they want to add clonedCallback anymore","msgtype":"m.text"},"ts":1431383590000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: at least in v1","msgtype":"m.text"},"ts":1431383595000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah it's listed as v2","msgtype":"m.text"},"ts":1431383600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's pretty obvious though, gotta have it to emulate native elements","msgtype":"m.text"},"ts":1431383614000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: webkit is ok to run random scripts during cloning?","msgtype":"m.text"},"ts":1431383698000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"That was my interpretation of rniwa above, but I might be reading too much into it.","msgtype":"m.text"},"ts":1431383724000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: I need look into it","msgtype":"m.text"},"ts":1431383741000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: we might just need to punt cloning in v1 and say it'll be broken once cloned","msgtype":"m.text"},"ts":1431383753000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1431383763000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"cloning is really hard","msgtype":"m.text"},"ts":1431383774000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i don't think that's feasible","msgtype":"m.text"},"ts":1431383796000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anything can happen when a script runs","msgtype":"m.text"},"ts":1431383797000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: what is not feasible?","msgtype":"m.text"},"ts":1431383806000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cloning is fundamental to the core issues of custom elements; punting on cloning is like punting on constructors.","msgtype":"m.text"},"ts":1431383816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(which, y'know, Chrome did, but I'm not happy about.)","msgtype":"m.text"},"ts":1431383835000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"node (the original or clone) gets adopted to another document, window is closed, node is moved to another place in the document, etc..","msgtype":"m.text"},"ts":1431383854000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"punting cloning would also punt users of <template>","msgtype":"m.text"},"ts":1431384126000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I think that'd be undesireable","msgtype":"m.text"},"ts":1431384141000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"if \"punting cloning\" means \"behaves like <canvas> when cloned,\" i don't think it's all that bad.","msgtype":"m.text"},"ts":1431385395000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: you'd have to ask rniwa what he meant, but I assumed it meant \"don't run the element's constructor when it's cloned\", which is not what happens to <canvas>","msgtype":"m.text"},"ts":1431386105000,"senderName":"aklein","senderId":"aklein@irc"}
]