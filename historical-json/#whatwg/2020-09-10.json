[
{"content":{"body":"yoav: to be sure, that test passes in all browsers?","msgtype":"m.text"},"ts":1599725017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"verifying","msgtype":"m.emote"},"ts":1599725110000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1599725168000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"thanks, all merged","msgtype":"m.text"},"ts":1599725318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you know why CSP-blocked images in firefox are display: none !important ?","msgtype":"m.text"},"ts":1599732422000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/8451","msgtype":"m.text"},"ts":1599732458000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ecobos might know, but that sounds weird","msgtype":"m.text"},"ts":1599732627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ideally they would be no different from any other kind of network error","msgtype":"m.text"},"ts":1599732671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ecobos: they're matching :-moz-supressed I think https://hg.mozilla.org/mozilla-central/file/tip/layout/style/res/html.css#l665","msgtype":"m.text"},"ts":1599733032000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm refactoring the HTML parser to use I/O queues in a bit of an informal way to be fleshed out later","msgtype":"m.text"},"ts":1599733678000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and I'm not sure what language to use to say that the tokenizer and tree constructor must run on the same thread","msgtype":"m.text"},"ts":1599733681000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: are implementations of the parser algorithm required to use threads to begin with?","msgtype":"m.text"},"ts":1599734418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that seems like an implementation detail","msgtype":"m.text"},"ts":1599734435000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not until now, but as part of encoding#215 annevk and I realized that \"streams\" had some holes in them, and decided to go with a blocking read","msgtype":"m.text"},"ts":1599734485000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1599734571000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm now realizing that this might need some restructuring of the way the reentrancy works","msgtype":"m.text"},"ts":1599734571000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"which is pretty much black magic to me","msgtype":"m.text"},"ts":1599734581000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"thus why I'm doing this informally on html#5874, to be fleshed out later","msgtype":"m.text"},"ts":1599734628000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"well I think as far as the spec language goes around the tokenizer and tree constructor, I would think just some language about “blocking read” would suffice, without mentioning threads","msgtype":"m.text"},"ts":1599734639000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but now I realize that is probably what you were already saying yourelf","msgtype":"m.text"},"ts":1599734654000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean how to word that, without explicitly saying, “must run on the same thread“","msgtype":"m.text"},"ts":1599734690000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm specifying that the decode algorithm and the tokenizer/tree constructor must run in parallel to the event loop and to each other","msgtype":"m.text"},"ts":1599734741000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"since the reads from the network are enqueued onto the input byte stream on the event loop","msgtype":"m.text"},"ts":1599734757000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"but I'm leaving it at that, with maybe some note about implementations having to bend the spec to modify the DOM from a thread","msgtype":"m.text"},"ts":1599734791000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"yeah such notes are really helpful in making clear what needs to happen in normal practice, when the spec language gets that abstract","msgtype":"m.text"},"ts":1599735007000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway what you describe sounds pretty interesting","msgtype":"m.text"},"ts":1599735053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(lately I’ve been working a lot on bug fixes and updates to the validator.nu Java implementation of the HTML parser, so I’m especially interested in any possible evolutions of the parser algorithm)","msgtype":"m.text"},"ts":1599735178000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this is meant to be an editorial change, since the bug was in the way Encoding streams switched from being data structures in memory on one moment to representing a sequence of bytes to come from the network on the next","msgtype":"m.text"},"ts":1599735278000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"implementations shouldn't have that problem","msgtype":"m.text"},"ts":1599735284000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"hsivonen: is the speculative parser kicked off upon an <script> without a src attribute?","msgtype":"m.text"},"ts":1599735550000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=8457 suggests there's no speculation for an inline classic script","msgtype":"m.text"},"ts":1599736114000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: I'm a bit confused by your comments here https://github.com/privacycg/proposals/issues/19#issuecomment-690162075","msgtype":"m.text"},"ts":1599736441000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: so you mean fetches can happen before the parser inserts stuff the to DOM even though there's no speculative parsing?","msgtype":"m.text"},"ts":1599736560000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah, they're matching `:-moz-suppressed`... I don't have all the context of that but if you file a bug and cc me I can get to it. I agree it's pretty weird","msgtype":"m.text"},"ts":1599736642000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"zcorpan_: (you can see the browser rules in devtools if you check the right checkbox in the settings, fyi)","msgtype":"m.text"},"ts":1599736665000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"ecobos: I saw it in devtools :)","msgtype":"m.text"},"ts":1599736698000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok I can file, thanks!","msgtype":"m.text"},"ts":1599736713000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: ah, so the \"I think\" was really \"I know\" :P","msgtype":"m.text"},"ts":1599736723000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"ecobos: that assumes I trust devtools :P","msgtype":"m.text"},"ts":1599736769000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1599736776000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"zcorpan_: well, this is some old code, so figuring out what depends on this is going to be fun... https://bugzilla.mozilla.org/show_bug.cgi?id=11011","msgtype":"m.text"},"ts":1599736800000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"hadn't seen a 5-digit bug number in a while","msgtype":"m.emote"},"ts":1599736810000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"zcorpan_: It seems per the comments that that was supposed to \"block images from this site\" and such, so if it triggers for CSP it seems like a bug to me","msgtype":"m.text"},"ts":1599736939000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"zcorpan_: anyhow I can look, feel free to cc/ni? me so I don't forget. Thank you!","msgtype":"m.text"},"ts":1599736972000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"ecobos: https://bugzilla.mozilla.org/show_bug.cgi?id=1664156","msgtype":"m.text"},"ts":1599737343000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Anyone else care to review a minor DOM Event introduction change? https://github.com/whatwg/dom/pull/890","msgtype":"m.text"},"ts":1599738902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will look","msgtype":"m.text"},"ts":1599739295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: is that whole section marked non-normative?","msgtype":"m.text"},"ts":1599739599000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1599739603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK, it’s not, actually","msgtype":"m.text"},"ts":1599739653000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe it should be?","msgtype":"m.text"},"ts":1599739660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: probably, yeah","msgtype":"m.text"},"ts":1599740327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: added a general comment:","msgtype":"m.text"},"ts":1599741898000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> General comment (relevant to @kevinsung’s specific comment about “effectively”): To avoid ambiguity about what statements in the DOM spec are normative and which aren’t, it seems like it would be useful for non-normative sections of the published DOM spec to be rendered with explicit This section is non-normative text after the section headings — in the way the HTML spec is. But I guess more","msgtype":"m.text"},"ts":1599741906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"generally, that’s an issue for Bikeshed (in that, Bikeshed currently doesn’t have a feature for automatically emitting explicit This section is non-normative text in the way that the HTML spec has.","msgtype":"m.text"},"ts":1599741912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1599741924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t think Bikeshed has any such feature, but maybe it does and I just haven’t noticed","msgtype":"m.text"},"ts":1599741963000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in wattsi, a definition with <dfn data-x=\"\"> makes no sense, right?","msgtype":"m.text"},"ts":1599745800000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"as in, an empty data-x attribute","msgtype":"m.text"},"ts":1599745806000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: html uses that in a few places, in Typographic conventions and Terminology","msgtype":"m.text"},"ts":1599745977000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"andreubotella: for Terminology, I think it wants to define terms but not have links for each usage of that term","msgtype":"m.text"},"ts":1599746033000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1599746041000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"So I suppose this is a mistake:","msgtype":"m.text"},"ts":1599746050000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"> The next input character is the first character in the input stream that has not yet been <dfn data-x=\"\">consumed</dfn> or explicitly ignored","msgtype":"m.text"},"ts":1599746052000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: I'm not sure why that doesn't use a normal <dfn>","msgtype":"m.text"},"ts":1599746188000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"\"Reconsume\" is <dfn>ed, but \"consume\" is not","msgtype":"m.text"},"ts":1599746234000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"andreubotella: I doubt it's a real mistake since if anyone tried to link that with <span>consumed</span> it would not build","msgtype":"m.text"},"ts":1599749220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"consume the next input character\" is ofc used a lot, just not linked","msgtype":"m.text"},"ts":1599749249000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella: that does not mean the current state of affairs is ideal, a lot of this text is old and predates our more formal style","msgtype":"m.text"},"ts":1599749253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"linking it does seem nicer","msgtype":"m.text"},"ts":1599749298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/html/pull/5874","msgtype":"m.text"},"ts":1599755447000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"those were a lot of \"consume the next input character\"","msgtype":"m.text"},"ts":1599755453000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and I had to fight VSCode every time because it kept indenting the second line","msgtype":"m.text"},"ts":1599755468000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith: Bikeshed doesn't have such a feature, no.","msgtype":"m.text"},"ts":1599755469000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*misindenting rather","msgtype":"m.text"},"ts":1599755493000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"https://github.com/privacycg/proposals/issues/19 - I have several questions, but might get a bit off topic for the issue :) (cc hsivonen )","msgtype":"m.text"},"ts":1599767567000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I think I recall the speculative fetches from normal HTML parser being a thing even before speculative parsing existed, but I'm not entirely sure. Was it a thing before speculative parsing?","msgtype":"m.text"},"ts":1599767618000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Do chromium and webkit also do this? (i.e. speculatively fetch resources from the HTML parser before the element is inserted to the DOM)","msgtype":"m.text"},"ts":1599767660000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Should we specify this?","msgtype":"m.text"},"ts":1599767682000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"What's a reliable way to test it? <object>? (it gets processed \"the element is popped off the stack of open elements of an HTML parser or XML parser,\", in a queued task)","msgtype":"m.text"},"ts":1599768030000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"}
]