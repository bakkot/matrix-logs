[
{"content":{"body":"Is krijn_ down?","msgtype":"m.text"},"ts":1375945235000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Am I?","msgtype":"m.text"},"ts":1375947103000,"senderName":"krijn_","senderId":"krijn_@irc"},
{"content":{"body":"Meh","msgtype":"m.text"},"ts":1375947103000,"senderName":"krijn_","senderId":"krijn_@irc"},
{"content":{"body":"I'll let someone in the IT department know!","msgtype":"m.text"},"ts":1375947641000,"senderName":"krijn_","senderId":"krijn_@irc"},
{"content":{"body":"hmm, http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json is not in https://github.com/whatwg/html-mirror?","msgtype":"m.text"},"ts":1375947926000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"btw I disabled issues + pull requests on that repository, since it’s meant as a mirror only","msgtype":"m.text"},"ts":1375947966000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Is it in svn?","msgtype":"m.text"},"ts":1375948513000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"aw, i was hoping the nipple twister would end up in the spec :-(","msgtype":"m.text"},"ts":1375949112000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Someone needed a nipple twister?","msgtype":"m.text"},"ts":1375949342000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Those Dutchies...","msgtype":"m.text"},"ts":1375949748000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: can we change default assignee in bugzilla for cssom specs?","msgtype":"m.text"},"ts":1375952650000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: no, those files are not in SVN either","msgtype":"m.text"},"ts":1375953627000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"seems weird these files are not under version control","msgtype":"m.text"},"ts":1375953656000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"GAP IN THE LOGS!!1","msgtype":"m.text"},"ts":1375953880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good thing there's also logbot","msgtype":"m.text"},"ts":1375954240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: entities.json is imported I think from http://www.w3.org/TR/xml-entity-names/","msgtype":"m.text"},"ts":1375954374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: !","msgtype":"m.text"},"ts":1375954382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish Hixie put a day or so into cleaning up his scripts and open sourcing the whole thing. Would make things a bit more hackable.","msgtype":"m.text"},"ts":1375954496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or just open source them as the mess they are and let others do the tidying.","msgtype":"m.text"},"ts":1375954691000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah either way. He'd need to refactor the bits where he puts his password directly in the file though.","msgtype":"m.text"},"ts":1375954870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: +1","msgtype":"m.text"},"ts":1375955028000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Or just open source it with [my_password_here] :)","msgtype":"m.text"},"ts":1375955035000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: +2","msgtype":"m.text"},"ts":1375955043000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hi, I'm interested by the new audio possibilities in HTML5. I've seen some ways to load audio data using XHR. While it works for small files (like 1Mb), chromium always crashes on big files (like 50 Mb).","msgtype":"m.text"},"ts":1375955100000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: How are you trying to read the file from XHR?","msgtype":"m.text"},"ts":1375955129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is this XHR loading method appropriate for big files?","msgtype":"m.text"},"ts":1375955131000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"gsnedders, basically what is described at: http://www.html5rocks.com/en/tutorials/webaudio/intro/","msgtype":"m.text"},"ts":1375955174000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: Try setting xhr.responseType = \"arraybuffer\", you'll get a typed array back — might work better?","msgtype":"m.text"},"ts":1375955259000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, that tutorial already does.","msgtype":"m.text"},"ts":1375955272000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: our bad, we haven't figured out how to describe an IO Stream yet and therefore XMLHttpRequest does not expose one","msgtype":"m.text"},"ts":1375955299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: although crashing is never an appropriate response so you might want to file a bug on Chrome","msgtype":"m.text"},"ts":1375955321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders, in the example i'm trying to follow 'arraybuffer' is indeed the specified response type","msgtype":"m.text"},"ts":1375955394000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"annevk, ok I will. SO it means that the audio api isn't mature enough yet to be used with large files?","msgtype":"m.text"},"ts":1375955427000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"oups s/SO/So/","msgtype":"m.text"},"ts":1375955438000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: did you try in Firefox? We might do better...","msgtype":"m.text"},"ts":1375955467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has not played with Web Audio, but knows why XMLHttpRequest doesn't support streaming data yet","msgtype":"m.emote"},"ts":1375955490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I can describe what I'm trying to achieve so you can give me some guidance if you don't mind","msgtype":"m.text"},"ts":1375955519000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"is surprised that a 50MB file doesn't work fine","msgtype":"m.emote"},"ts":1375955526000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"basically I'm trying to do a two tracks audio editor. I have seven source files of about 50Mb each and I'd like the website editor to be able to place fragments of those files on the two audio tracks to create compositions.","msgtype":"m.text"},"ts":1375955613000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"who made https://github.com/whatwg/html-mirror ?","msgtype":"m.text"},"ts":1375955648000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: foolip","msgtype":"m.text"},"ts":1375955736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: I don't know enough about this, but maybe segmenting the files would make it work better, i.e. implement the streaming yourself","msgtype":"m.text"},"ts":1375955808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders, annevk does it sound duable for you? My approach at the moment is to play media fragments (like file.ogg#t=10,20) one after the other (not yet a composition, more like a playlist actually).","msgtype":"m.text"},"ts":1375955824000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"annevk: ta","msgtype":"m.text"},"ts":1375955883000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk, so cutting the files server side? and still using XHR to load the hard-cutted fragments?","msgtype":"m.text"},"ts":1375955885000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: it sounds fine, but honestly I don't know what the memory limits are these days","msgtype":"m.text"},"ts":1375955885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: yeah, I guess, just so you have smaller files","msgtype":"m.text"},"ts":1375955898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: you could also try to experiment a bit to see what the limit is in various browsers","msgtype":"m.text"},"ts":1375955930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: e.g. if you only load one 50MB file, does that work?","msgtype":"m.text"},"ts":1375955943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, thanks. I will try this!","msgtype":"m.text"},"ts":1375955963000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"smaug____: yo, can you look at the public-webapps thread regarding custom element callbacks?","msgtype":"m.text"},"ts":1375956953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<Hixie> in other news, i need a term that doesn't really mean anything, but expresses the property of A being something relative to B, without implying a mutual relationship, and that brings to mind the idea of control or authority","msgtype":"m.text"},"ts":1375959743000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"A is the teacher of B, A is the father of B, A is the boss of B, A is the captain of B (boat), A is the mountain guide of B, …","msgtype":"m.text"},"ts":1375959942000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: teacher means B is student of A; similarly for the others","msgtype":"m.text"},"ts":1375962464000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"karlcow: the spec now has \"is familiar with\"","msgtype":"m.text"},"ts":1375962474000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: agreed. Not sure about the context but \"is a teacher\" != \"is a professor\"  not bijective.","msgtype":"m.text"},"ts":1375962763000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"pupil?","msgtype":"m.text"},"ts":1375962776000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ooops","msgtype":"m.text"},"ts":1375962788000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"still too early…","msgtype":"m.text"},"ts":1375962802000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Ms2ger: yes :)","msgtype":"m.text"},"ts":1375962810000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: hi","msgtype":"m.text"},"ts":1375964277000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk: I have question regarding XMLHTTPRequest and force preflight","msgtype":"m.text"},"ts":1375964328000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk: is it required to make preflight request for synchronous XHR with upload event listeners like onloadstart registered","msgtype":"m.text"},"ts":1375964621000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk: does a preflight request for both sync and async XHR when upload event listeners are registered","msgtype":"m.text"},"ts":1375964669000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk: but Chrome doesn't","msgtype":"m.text"},"ts":1375964680000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk: which is the right behavior?","msgtype":"m.text"},"ts":1375964741000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"annevk:  *Firefox  does prefilight for both sync and async XHR with upload listeners","msgtype":"m.text"},"ts":1375964828000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"Ancil: Chrome never does a preflight for those?","msgtype":"m.text"},"ts":1375964939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ancil: I think the specification requires one, but I keep forgetting why it does :/","msgtype":"m.text"},"ts":1375964960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Chrome does preflight only for async XHR","msgtype":"m.text"},"ts":1375964974000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"wonders if \"A trusts B\" is not already taken","msgtype":"m.emote"},"ts":1375964989000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Ancil: might be an oversight in Chrome then...","msgtype":"m.text"},"ts":1375964993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks in spec","msgtype":"m.emote"},"ts":1375965006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ancil: ooh, so yeah, that seems like a Gecko bug","msgtype":"m.text"},"ts":1375965049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ancil: the reason it's not required for sync is because the events won't dispatch anyway","msgtype":"m.text"},"ts":1375965060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as per my understanding the spec says the \"If the synchronous flag is unset and one or more event listeners are registered on the XMLHttpRequestUpload object, set the upload events flag. \" and set force preflight when upload events flag is set","msgtype":"m.text"},"ts":1375965066000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1375965071000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"Ancil: https://bugzilla.mozilla.org/enter_bug.cgi?product=Core pretty please","msgtype":"m.text"},"ts":1375965127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk:  So the chrome behavior is the right one.","msgtype":"m.text"},"ts":1375965194000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"Ancil: yeah","msgtype":"m.text"},"ts":1375965200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, I will log a bug","msgtype":"m.text"},"ts":1375965205000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"Ancil: ta","msgtype":"m.text"},"ts":1375965210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1375965219000,"senderName":"Ancil","senderId":"Ancil@irc"},
{"content":{"body":"MikeSmith: why are you reassigning resolved bugs?","msgtype":"m.text"},"ts":1375968547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm just pushing buttons","msgtype":"m.text"},"ts":1375968559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it was easier to do it that way","msgtype":"m.text"},"ts":1375968567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the CSSOM bugs","msgtype":"m.text"},"ts":1375968574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"changed the default assignee","msgtype":"m.text"},"ts":1375968585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and figured while I'm doing it to change the open ones too","msgtype":"m.text"},"ts":1375968603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It makes the history harder to trace and also spams me","msgtype":"m.text"},"ts":1375968613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh well","msgtype":"m.text"},"ts":1375968626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry, didn't realize to after I pushed the button","msgtype":"m.text"},"ts":1375968632000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can try to change them back if you want","msgtype":"m.text"},"ts":1375968662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nah leave it","msgtype":"m.text"},"ts":1375968670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1375968676000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"They were probably wrong anyway","msgtype":"m.text"},"ts":1375968678000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Couple of my Shadow DOM bugs were resolved with https://dvcs.w3.org/hg/webcomponents/rev/dbf47f602628 as pointer...","msgtype":"m.text"},"ts":1375969812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thousands of lines of Apple plist disaster...","msgtype":"m.text"},"ts":1375969872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow, that's pretty crappy","msgtype":"m.text"},"ts":1375969915000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I should just leave it and review again at some point in the future... Trying to figure out what changed seems like a non-starter. Even looking at just the HTML...","msgtype":"m.text"},"ts":1375969975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Refactor\"","msgtype":"m.text"},"ts":1375970037000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Deprecate\"","msgtype":"m.text"},"ts":1375970041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"good news, everyone, http://www.w3.org/TR/html/ now points to HTML5 instead of XHTML 1.0","msgtype":"m.text"},"ts":1375970809000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it only took... nah, I don't want to know how long it took in fact :)","msgtype":"m.text"},"ts":1375970877000,"senderName":"darobin_","senderId":"darobin_@irc"},
{"content":{"body":"wonders whether he should do as Bachelor's project something like proving various assertions in the HTML parser","msgtype":"m.emote"},"ts":1375972068000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Things like whether you can ever end up in foreign content while not being)","msgtype":"m.text"},"ts":1375972274000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(That all the fragment case parentheticals can only happen in the fragment case.)","msgtype":"m.text"},"ts":1375972320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: or you could prove that the parser is Turing complete","msgtype":"m.text"},"ts":1375973801000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"That's trivial","msgtype":"m.text"},"ts":1375973860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, wait, complete.","msgtype":"m.text"},"ts":1375973891000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Duh.","msgtype":"m.text"},"ts":1375973892000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You need a Turing machine is implement the parser, that's clear.","msgtype":"m.text"},"ts":1375973946000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If you restrict the input to the parser to be finite, I'm fairly certain you don't need a TM to run it.","msgtype":"m.text"},"ts":1375974294000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And I think you should be able to derive a proof based on that that the language itself is not Turing complete.","msgtype":"m.text"},"ts":1375974350000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yes, if you can prove that you don't need a TM to process it (ie turn it into a DOM), then you can prove that it's not TC","msgtype":"m.text"},"ts":1375974500000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but I wouldn't be shocked if there were nasty tricks you could do with adoption and such that would actually be universal","msgtype":"m.text"},"ts":1375974535000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"In general, you need a TM to process it because you need the infinite memory to deal with an infinite input stream.","msgtype":"m.text"},"ts":1375974687000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Adoption is deliberately capped to avoid making it run-away powerful, but its cloning at all might be enough to be able to implement a TM on.","msgtype":"m.text"},"ts":1375974749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mmmm","msgtype":"m.text"},"ts":1375974750000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I don't see why infinite memory means you need a TM","msgtype":"m.text"},"ts":1375974766000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"anything else can have an infinite memory","msgtype":"m.text"},"ts":1375974776000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"FSMs can't","msgtype":"m.text"},"ts":1375974824000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, not absolutely everything :)","msgtype":"m.text"},"ts":1375975197000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but pushdown automata can for instance","msgtype":"m.text"},"ts":1375975214000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Well, sure","msgtype":"m.text"},"ts":1375975263000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Those are almost Turing machines","msgtype":"m.text"},"ts":1375975271000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"almost doesn't count","msgtype":"m.text"},"ts":1375975322000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"All you need is a queue instead of a stack","msgtype":"m.text"},"ts":1375975338000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do PDAs not have a finite input, though?","msgtype":"m.text"},"ts":1375975394000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"P is almost NP :-P","msgtype":"m.text"},"ts":1375975441000,"senderName":"ricea","senderId":"ricea@irc"},
{"content":{"body":"That may be the case","msgtype":"m.text"},"ts":1375975451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"doesn't remember much attention given to infinite inputs","msgtype":"m.emote"},"ts":1375975475000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sure, a PDA can use theoretically infinite stack and infinite states, but the input must be finite.","msgtype":"m.text"},"ts":1375975625000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I believe only a unrestricted grammar allows infinite inputs, and hence a TM is needed on that basis.","msgtype":"m.text"},"ts":1375975644000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Infinite states too?","msgtype":"m.text"},"ts":1375975734000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I believe so?","msgtype":"m.text"},"ts":1375975784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"My definition only allows a finite set of states","msgtype":"m.text"},"ts":1375975798000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Rich, \"Automata, Computability, and Complexity\", p. 249)","msgtype":"m.text"},"ts":1375975834000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, you must need a TM to parse HTML, due to the multiple stacks, surely?","msgtype":"m.text"},"ts":1375975853000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Most likely, yes","msgtype":"m.text"},"ts":1375975866000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But that's not a proof :)","msgtype":"m.text"},"ts":1375975871000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, it's not. :)","msgtype":"m.text"},"ts":1375975878000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders if HTML contradicts the pumping lemma","msgtype":"m.emote"},"ts":1375975902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Need to prove you cannot reduce to one stack. Which I think should be trivial to give an example of.","msgtype":"m.text"},"ts":1375975919000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Once you've done that, then the proof is easy.","msgtype":"m.text"},"ts":1375975929000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: It doesn't, if it is (like I think!) an unrestricted grammar.","msgtype":"m.text"},"ts":1375976063000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(The pumping lemma obviously always holds true for unrestricted grammars.)","msgtype":"m.text"},"ts":1375976258000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(More interesting, IMO, is whether *conforming* HTML is context-free)","msgtype":"m.text"},"ts":1375976330000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Mmm","msgtype":"m.text"},"ts":1375976417000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"*interesting question","msgtype":"m.text"},"ts":1375976444000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I would think it should be, as a goal of defining the conformance rules","msgtype":"m.text"},"ts":1375976457000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, make it a requirement that determines what the conformance rules are","msgtype":"m.text"},"ts":1375976500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rather than what we have now, where the rationale for some of the conformance rules are just arbitrary (which is fine a long as they don't break the must-be-a-content-free-grammar requirement)","msgtype":"m.text"},"ts":1375976603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news, nice to see discussions of fine points of implementation realities like http://lists.w3.org/Archives/Public/www-tag/2013Aug/0053.html (from Marcus) taking place on the TAG list. Massive contrast to where the TAG was at only a few months back.a","msgtype":"m.text"},"ts":1375976853000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: What's the justification for requiring it to be context-free?","msgtype":"m.text"},"ts":1375976873000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Heh, Marcus has been playing around with audio stuff for ages, mostly doing stuff like data URIs and the audio element.","msgtype":"m.text"},"ts":1375976913000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: for one thing I guess it makes it expressable in some common formalisms that it otherwise wouldn't be expressible in","msgtype":"m.text"},"ts":1375976978000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't mean a formalism for expressing parsing rules","msgtype":"m.text"},"ts":1375977045000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but instead a formalism for expressing what a conforming document looks like","msgtype":"m.text"},"ts":1375977071000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So hey, fun proposals here from heycam about how to make the SVG DOM suck less: http://dev.w3.org/SVG/proposals/improving-svg-dom/","msgtype":"m.text"},"ts":1375984220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Opinions desired on www-svg","msgtype":"m.text"},"ts":1375984230000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or here, whatever.","msgtype":"m.text"},"ts":1375984235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is there wide support for the 'let' keyword yet?","msgtype":"m.text"},"ts":1375984428000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Supported in FF only right now, I believe.","msgtype":"m.text"},"ts":1375984440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, that's what I thought","msgtype":"m.text"},"ts":1375984451000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1375984452000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And you have to opt in via some incantation in type=''","msgtype":"m.text"},"ts":1375984452000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1375984459000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"var it is","msgtype":"m.text"},"ts":1375984462000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I recently switched my hobby hacking to FF just so I could get some of those sweet new features.","msgtype":"m.text"},"ts":1375984469000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fx, you mean?","msgtype":"m.text"},"ts":1375984495000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, they're pretty awesome","msgtype":"m.text"},"ts":1375984500000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Screw that.","msgtype":"m.text"},"ts":1375984503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: I find that even official text often says \"FF\" or \"Ff\"","msgtype":"m.text"},"ts":1375984516000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"They're wrong :)","msgtype":"m.text"},"ts":1375984532000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Quit trying to make Fx happen. It's not going to happen.","msgtype":"m.text"},"ts":1375984533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"firefox = ff","msgtype":"m.text"},"ts":1375984535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sorry, that's the reality :P","msgtype":"m.text"},"ts":1375984544000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(also, who the heck would think \"fx\" would be a good abbreviation for firefox? it's terrible)","msgtype":"m.text"},"ts":1375984615000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"f5x","msgtype":"m.text"},"ts":1375984641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"f5x, *maybe*, due to existing precedent.","msgtype":"m.text"},"ts":1375984646000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dammit, Ms2ger, you scooped me.","msgtype":"m.text"},"ts":1375984653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"svg thing looks very cool","msgtype":"m.text"},"ts":1375984791000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins Ice Cream(r)","msgtype":"m.text"},"ts":1375984792000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: hmm, i don't like the no-namespace proposal","msgtype":"m.text"},"ts":1375985886000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, me neither.  Just put them in the HTML namespace and be done with it.","msgtype":"m.text"},"ts":1375985900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll be writing up my own feedback on the proposal, and it's part of what I'm responding with.","msgtype":"m.text"},"ts":1375985926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's also wrong about createElement which always uses HTML namespace (per spec at least)","msgtype":"m.text"},"ts":1375985935000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah, that's probably why heycam|away did the null namespace thing.","msgtype":"m.text"},"ts":1375985970000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i also see little reason to have both graphics and viewport compared to just graphics","msgtype":"m.text"},"ts":1375986128000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The main reason, I think, is that there are some attributes that make sense on the root viewport but not nested, and vice versa.","msgtype":"m.text"},"ts":1375986157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it's weird to reuse the same thing for both.","msgtype":"m.text"},"ts":1375986167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1375986396000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heycam|away: http://dev.w3.org/SVG/proposals/improving-svg-dom/ is only an improvement if we remove the old stuff. If we don't, then we're just doubling the complexity.","msgtype":"m.text"},"ts":1375986596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, i was about to say, i'm not sure i like the new namespace idea at all","msgtype":"m.text"},"ts":1375986644000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, so, an object that supports indexed or named getters needs to be proxy-like","msgtype":"m.text"},"ts":1375988766000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie, so if Window has a indexed getter, it needs to be proxy-like as well","msgtype":"m.text"},"ts":1375988789000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Ignore the named getter, because it ends up in the gps)","msgtype":"m.text"},"ts":1375988802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsp","msgtype":"m.text"},"ts":1375988804000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: We obviously can't remove the old stuff yet, but the plan is to eventually kill it, yes.","msgtype":"m.text"},"ts":1375989997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"By dangling irresistible carrots in the form of not-totally-fucked-up APIs.","msgtype":"m.text"},"ts":1375990015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: Why is that a use case? Hixie wouldn't accept that.","msgtype":"m.text"},"ts":1375991935000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie doesn't accept a lot","msgtype":"m.text"},"ts":1375991959000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: when has carrots enabled us to remove anything?","msgtype":"m.text"},"ts":1375994379000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: Indeed, so MikeSmith need justify himself better.","msgtype":"m.text"},"ts":1375994414000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"We kill prefixes, for example.  Not every time, but often enough.","msgtype":"m.text"},"ts":1375994414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, yes","msgtype":"m.text"},"ts":1375994459000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Because everyone writes their code expecting the non-prefixed version","msgtype":"m.text"},"ts":1375994476000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And usually also all the possible prefixed ones","msgtype":"m.text"},"ts":1375994490000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"-I-will-prefix-your-face: true;","msgtype":"m.text"},"ts":1375994652000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ms2ger: maybe \"proxylike\" doesn't mean what i think it means? I mean \"like WindowProxy\".","msgtype":"m.text"},"ts":1375994924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We're killing XSLT, for example.","msgtype":"m.text"},"ts":1375994930000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let's not count that chicken quite yet.","msgtype":"m.text"},"ts":1375994942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Things do die from misuse, as least enough for them to be removed.","msgtype":"m.text"},"ts":1375994947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Yeah, sure.","msgtype":"m.text"},"ts":1375994954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/misuse/lack of use/","msgtype":"m.text"},"ts":1375994965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"has doubts about whether XSLT will so easily die","msgtype":"m.emote"},"ts":1375995041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Even if it never does, though, I think the argument that you shouldn't ever duplicate functionality is wrong-headed.","msgtype":"m.text"},"ts":1375995081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Cut one off and two appear in its place… The web platform is a Hydra…","msgtype":"m.text"},"ts":1375995197000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"True. ^_^^","msgtype":"m.text"},"ts":1375995255000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...I'm gonna pretend the third eye was intentional, and a commentary on gsnedder's quote.","msgtype":"m.text"},"ts":1375995276000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*poke* _^^","msgtype":"m.text"},"ts":1375995319000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: generally i am strongly against duplicating the slightest thing, though i would obviously be open to arguments on a case-by-case basis. but this is a whole different scale of duplication.","msgtype":"m.text"},"ts":1375995607000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I know you are, and we've discussed this before, and I think you're really wrong.  It puts the potential confusion of authors having to look at two syntaxes over the persistent pain of authors having to use a single, terrible syntax.","msgtype":"m.text"},"ts":1375995653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The SVG DOM can't be defended on *any* pragmatic grounds.  Its sole good point is that it already exists.","msgtype":"m.text"},"ts":1375995698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In 5 years, there will be the SVG subset of HTML which works nice and makes people happy, and the weird legacy syntax that nobody likes and is only used by legacy pages.","msgtype":"m.text"},"ts":1375995908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if we do this, it should behind a pref for a few years so we can get it right instead of duplicating everything once a year","msgtype":"m.text"},"ts":1375996074000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the problem is that \"is only used by legacy pages\" is just not how it'll turn out","msgtype":"m.text"},"ts":1375996100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because \"legacy pages\" are copied and pasted, are part of templates, are maintained for decades, etc","msgtype":"m.text"},"ts":1375996115000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in practice all it does is mean that authors have to know both languages","msgtype":"m.text"},"ts":1375996127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and we have to define how they interact, because different templates end up in the same page using both features","msgtype":"m.text"},"ts":1375996141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1375996144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: Yeah, definitely.","msgtype":"m.text"},"ts":1375996216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Transition pain is a worthwhile cost sometimes.","msgtype":"m.text"},"ts":1375996250000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sometimes.","msgtype":"m.text"},"ts":1375997367000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's what I said. ^_^","msgtype":"m.text"},"ts":1375997380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i was agreeing :-)","msgtype":"m.text"},"ts":1375997387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: a lot of the time, when people suggest replacing (duplicating) an api, though, they tend to overestimate the cost of the existing api, overestimate the worth of the new api in comparison, and underestimate the cost of the transition","msgtype":"m.text"},"ts":1375997413000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in part because they forget that the new api will never be as perfect as the design, due to the attrition experienced during initial implementation and deployment","msgtype":"m.text"},"ts":1375997452000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's hard to overestimate the terribleness of the SVG DOM.","msgtype":"m.text"},"ts":1375997455000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but the new API isn't awesome compared to just using DOM Core","msgtype":"m.text"},"ts":1375997549000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"honestly i think the biggest pain of the SVG DOM is really that the whole approach of elements for graphics isn't particularly wieldy","msgtype":"m.text"},"ts":1375997587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't know how much is just api decisions","msgtype":"m.text"},"ts":1375997594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mathml suffers from a similar, but more obvious, problem","msgtype":"m.text"},"ts":1375997606000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how much are people using the SVG DOM?","msgtype":"m.text"},"ts":1375997813000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Most of the new API is removing baseVal/animVal, and some of the more ridiculously overwrought mistakes, like .numberOfItems","msgtype":"m.text"},"ts":1375997864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that doesn't answer my question :-P","msgtype":"m.text"},"ts":1375997890000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Sorry, wasn't answering that question.  ^_^","msgtype":"m.text"},"ts":1375997906000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Probably enough that we can't just drop it immediately.","msgtype":"m.text"},"ts":1375997915000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, ok, heh","msgtype":"m.text"},"ts":1375997915000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If we could, then yay! Let's just do it.","msgtype":"m.text"},"ts":1375997925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let's find out before jumping through hoops we don't know we have to jump through","msgtype":"m.text"},"ts":1375997942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"isn't d3 using the svg dom?","msgtype":"m.text"},"ts":1375998039000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"that's used by a ton of people, we've built like 5 apps for large banks just in the last 6 months","msgtype":"m.text"},"ts":1375998054000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yeah, the modern untick in popularity, and attendant libraries, are the big thing that would prevent us from doing it, I think.","msgtype":"m.text"},"ts":1375998152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sees https://github.com/mbostock/d3/blob/master/d3.js#L5209","msgtype":"m.emote"},"ts":1375998182000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"notice d3 doesn't use animValue and instead rolls it by hand","msgtype":"m.text"},"ts":1375998298000,"senderName":"pdr","senderId":"pdr@irc"},
{"content":{"body":"Hixie: i think non-configurable is the new term for ReadOnly","msgtype":"m.text"},"ts":1375998547000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"new as of ES5 or so","msgtype":"m.text"},"ts":1375998583000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mumbles something about this being a perfect example of duplication being confusing :-P","msgtype":"m.emote"},"ts":1375998596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan, doesn't createElement() put an element into no namespace when you're in an XML document?","msgtype":"m.text"},"ts":1375998605000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that was the main reason I allowed for both in the proposal","msgtype":"m.text"},"ts":1375998612000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: nope. http://dom.spec.whatwg.org/#dom-document-createelement","msgtype":"m.text"},"ts":1375998641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"some browsers might still do that, i guess","msgtype":"m.text"},"ts":1375998670000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, huh!","msgtype":"m.text"},"ts":1375998676000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah I think I just tested in Gecko and assumed that must be the standard behaviour","msgtype":"m.text"},"ts":1375998688000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"in gecko it depends on the mime type, iirc","msgtype":"m.text"},"ts":1375998713000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mime type, and not \"is an XML document\" flag?","msgtype":"m.text"},"ts":1375998745000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(maybe it's the same thing)","msgtype":"m.text"},"ts":1375998761000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1375998761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"non-writable is the new ReadOnly","msgtype":"m.text"},"ts":1375998777000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"non-configurable is the new DontDelete","msgtype":"m.text"},"ts":1375998783000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"application/xhtml+xml -> HTML namespace, image/svg+xml -> SVG namespace, application/xml -> no namespace","msgtype":"m.text"},"ts":1375998806000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic_: oh, right","msgtype":"m.text"},"ts":1375998816000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"createElement() in an image/svg+xml document puts things in the SVG namespace? I don't think that's true is it?","msgtype":"m.text"},"ts":1375998856000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"maybe not :-)","msgtype":"m.text"},"ts":1375998866000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"might just be xhtml+xml","msgtype":"m.text"},"ts":1375998874000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"might be","msgtype":"m.text"},"ts":1375998881000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm saying this from memory. might be all lies :-P","msgtype":"m.text"},"ts":1375998903000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"finds coffee","msgtype":"m.emote"},"ts":1375998904000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"finds a bed","msgtype":"m.emote"},"ts":1375998909000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Per the DOM spec it always does HTML NS.","msgtype":"m.text"},"ts":1375998912000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yes, that was established","msgtype":"m.text"},"ts":1375998940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can't read, okay!","msgtype":"m.text"},"ts":1375998975000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"we were just making up what we think gecko does instead of testing what gecko does","msgtype":"m.text"},"ts":1375998984000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"because we lack coffee and sleep","msgtype":"m.text"},"ts":1375998993000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1375998998000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Seem legit.","msgtype":"m.text"},"ts":1375999020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heycam|away: implementations do something and specs say something else. It is not clear what is the right createElement behavior","msgtype":"m.text"},"ts":1375999296000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I forget - is there anything super terrible about subclassing DOMString so you can augment it with better stuff, but still have it look like a string?","msgtype":"m.text"},"ts":1376000029000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Context: thinking about the CSSOM Values API again, and just turning it on by default by switching el.style.foo from returning a DOMString to returning this new DOMString subclass.","msgtype":"m.text"},"ts":1376000344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1376000345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, just that that's not really possible","msgtype":"m.text"},"ts":1376000453000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Heh, \"just\".  Why not?","msgtype":"m.text"},"ts":1376000465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"otherwise I think that would have been a good plan for doing much of the SVG DOM improvements","msgtype":"m.text"},"ts":1376000472000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's not clear what you mean by \"subclassing DOMString\", really","msgtype":"m.text"},"ts":1376000481000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"DOMString is meant to represent a JS String value","msgtype":"m.text"},"ts":1376000494000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"not an object","msgtype":"m.text"},"ts":1376000496000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, can we just return something with String on its prototype chain?  Or maybe just has toString set, and the attributes have [PutForward]","msgtype":"m.text"},"ts":1376000532000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my spidey sense is telling me this is a bad idea :)","msgtype":"m.text"},"ts":1376000576000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"nobody really uses String objects etc.","msgtype":"m.text"},"ts":1376000583000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"The only difference between it and a string would be the typeof/instanceof behavior (probably not actually exercised in real code), and the fact that it can't be falsey (but do we ever return empty strings)?","msgtype":"m.text"},"ts":1376000608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and that you can't compare to String objects for equality with ==","msgtype":"m.text"},"ts":1376000625000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since that checks for object identity","msgtype":"m.text"},"ts":1376000646000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"You mean ===","msgtype":"m.text"},"ts":1376000656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah.","msgtype":"m.text"},"ts":1376000658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But == works.","msgtype":"m.text"},"ts":1376000661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no...","msgtype":"m.text"},"ts":1376000665000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"== also checks for object identity if the two things are objects","msgtype":"m.text"},"ts":1376000679000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Oh, yeah.","msgtype":"m.text"},"ts":1376000685000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"String *objects* v. string *primitives*","msgtype":"m.text"},"ts":1376000695000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought you were talkinga bout things like \"if(el.x == '5')\"","msgtype":"m.text"},"ts":1376000703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1376000705000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that would work","msgtype":"m.text"},"ts":1376000708000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"And you never /ever/ want to touch a String object.","msgtype":"m.text"},"ts":1376000715000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So you never ever want to have String.prototype on a prototype chain.","msgtype":"m.text"},"ts":1376000726000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but yeah, the falsey issue and equality checking were the reasons we discounted doing something similar for SVGAnimatedLength","msgtype":"m.text"},"ts":1376000727000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Because string objects are evil.","msgtype":"m.text"},"ts":1376000731000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"there is that!","msgtype":"m.text"},"ts":1376000752000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"gsnedders: Hrm, but I want something that acts like a string, but with more stuff.","msgtype":"m.text"},"ts":1376000760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We could always have it just expose all the string methods manually, and have indexed properties for the characters in its string representation. ^_^","msgtype":"m.text"},"ts":1376000787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"still, I wouldn't think it's out of the question for someone to do:  if (el.style.color == el.style.backgroundColor)","msgtype":"m.text"},"ts":1376000836000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or something like that","msgtype":"m.text"},"ts":1376000841000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: No you don't.","msgtype":"m.text"},"ts":1376000876000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heycam: True.","msgtype":"m.text"},"ts":1376000889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: I don't?","msgtype":"m.text"},"ts":1376000894000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: No, you don't.","msgtype":"m.text"},"ts":1376000934000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I wasn't asking for a repeat. ^_^","msgtype":"m.text"},"ts":1376000945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I didn't!","msgtype":"m.text"},"ts":1376001001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I added a comma!","msgtype":"m.text"},"ts":1376001004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Anyway, why don't I?","msgtype":"m.text"},"ts":1376001012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What's your use-case?","msgtype":"m.text"},"ts":1376001099000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(You don't want to use string objects because they appear to be like string primitives, which people are used to, but then aren't in a few subtle ways.)","msgtype":"m.text"},"ts":1376001126000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Magically upgrade el.style.foo into a more full-featured object.","msgtype":"m.text"},"ts":1376001157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"More seriously, how the hell did it get this late?","msgtype":"m.text"},"ts":1376001171000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hahaha","msgtype":"m.text"},"ts":1376001176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need to sleep, man.","msgtype":"m.text"},"ts":1376001186000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: FWIW, I'd be tempted to try something with making it a new object with a valueOf that returned a string.","msgtype":"m.text"},"ts":1376001290000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But idk, I haven't thought about it, and I need sleep.","msgtype":"m.text"},"ts":1376001307000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: you don't subclass DOMString, you make a new object for hte attribute, with a PutForwards on the attribute and a serializer on the object","msgtype":"m.text"},"ts":1376001725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: it's controversial, but i like it. :-)","msgtype":"m.text"},"ts":1376001735000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's fine with me, assuming it works.","msgtype":"m.text"},"ts":1376001744000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it does mean that, for example, el.style.foo.slice(5, 10) doesn't work.","msgtype":"m.text"},"ts":1376001758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"While it did work back when you had a string.","msgtype":"m.text"},"ts":1376001765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I guess that \"el.style.color == el.style.backgroundColor\" stops working.","msgtype":"m.text"},"ts":1376001875000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it does work if you compare it with a string literal.","msgtype":"m.text"},"ts":1376001883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wonder if anybody ever gets trapped by `window.location == otherWindow.location` not doing what they expect","msgtype":"m.text"},"ts":1376002099000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I could certainly see myself falling into that, but I suppose I shouldn't admit that if that's what I'm wanting to do. ^_^","msgtype":"m.text"},"ts":1376002219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm... if we manually add the String operations to CSSValue, and add indexed properties for the characters of the string representation, then we'd avoid one of the big possible compat pitfalls.","msgtype":"m.text"},"ts":1376003674000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We wouldn't actually be a String subclass, but we'd act like it.","msgtype":"m.text"},"ts":1376003686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: ^^^ Maybe a [StringClass] attribute to automate the \"I'm a fake string!\" process? ^_^","msgtype":"m.text"},"ts":1376004033000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think we went through this once before","msgtype":"m.text"},"ts":1376004055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: There you are!","msgtype":"m.text"},"ts":1376004062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, I was wanting a refresher on the problems.","msgtype":"m.text"},"ts":1376004071000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not really here","msgtype":"m.text"},"ts":1376004072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-script-coord/2010JanMar/thread.html#msg21","msgtype":"m.text"},"ts":1376004092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"d'oh","msgtype":"m.text"},"ts":1376004095000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think I'd be happy with fake strings, unless there were proper support for them in JS itself, so that == etc. could work","msgtype":"m.text"},"ts":1376004100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ah, excellent.","msgtype":"m.text"},"ts":1376004112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: Clearly we just need to wait for ES to do the operator-overloading thing.","msgtype":"m.text"},"ts":1376004123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe!","msgtype":"m.text"},"ts":1376004129000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Which is much closer to happening now.","msgtype":"m.text"},"ts":1376004132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"do you have a pointer to any preliminary work on that?","msgtype":"m.text"},"ts":1376004145000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Brendan did a presentation at the last TC39 meeting","msgtype":"m.text"},"ts":1376004215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://esdiscuss.org/topic/typeof-extensibility-building-on-my-value-objects-slides-from-thursday-s-tc39-meeting has the details","msgtype":"m.text"},"ts":1376004244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1376004252000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, seems like that's what might work for something coolish here. Makes == work anyway.","msgtype":"m.text"},"ts":1376004282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so not being able to do anything useful with rectElement.x etc. was most of the reason for thinking about the \"big switch\" new SVG DOM","msgtype":"m.text"},"ts":1376004356000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if we will be able to treat .x as a string and an object in some sane way, then maybe it's unnecessary","msgtype":"m.text"},"ts":1376004370000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"rect.x already isn't a string, right?  It's an AnimatedLength.","msgtype":"m.text"},"ts":1376004595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1376004636000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but we want to make it a string","msgtype":"m.text"},"ts":1376004640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think a combination of stringifier + [PutForwards] may be enough.","msgtype":"m.text"},"ts":1376004854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And it can just have multiple accessors: rect.x.px, rect.x.em, rect.x.string, etc.","msgtype":"m.text"},"ts":1376004903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"getters/setters, that is.","msgtype":"m.text"},"ts":1376004908000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I feel like I wanted to bug heycam about something, and now I can't remember","msgtype":"m.text"},"ts":1376004976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, I dunno, I feel like I've considered that approach many times but felt it just didn't quite make it, due to ==","msgtype":"m.text"},"ts":1376005023000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"we've actually got the .px stuff in the spec at the moment, though nobody's implemented it yet","msgtype":"m.text"},"ts":1376005037000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, depending on value objects progress, that may not be good.","msgtype":"m.text"},"ts":1376005041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: I just want us to match CSSOM Values API.","msgtype":"m.text"},"ts":1376005062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1376005066000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the answer then is not to define the CSSOM Values API like that ;)","msgtype":"m.text"},"ts":1376005080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1376005113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are you working on that btw?","msgtype":"m.text"},"ts":1376005134000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Still, some lessons need to be taken from the Values API, like how to handle list-valued properties in a way that's consistent between always-been-a-list and turned-into-a-list-later.","msgtype":"m.text"},"ts":1376005144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Kinda.","msgtype":"m.text"},"ts":1376005146000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's been on my list for a while, but I'm bumping it up to help with SVG. ^_^","msgtype":"m.text"},"ts":1376005160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1376005166000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"As far as I can tell (ignoring the CSS part for a bit, so we just have an SVG clean slate), the only reason to have it as a string is to allow for immediate string operations on the value.  Right?","msgtype":"m.text"},"ts":1376005428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1376005449000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and for consistency with HTML attribute reflections","msgtype":"m.text"},"ts":1376005459000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hm, okay.","msgtype":"m.text"},"ts":1376005476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, what about, in concert with CSSStyleDeclaration gaining a .values property that returns a new map of property names to the magical objects rather than strings, SVG elements also gain a .values property that returns a new map of attribute names to the magical objects.","msgtype":"m.text"},"ts":1376005607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"something like that would be acceptable. better than xAsLength, yAsLength, etc.","msgtype":"m.text"},"ts":1376005648000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, definitely.","msgtype":"m.text"},"ts":1376005666000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And we could later do the same thing with HTML, if necessary.","msgtype":"m.text"},"ts":1376005675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam, had you talked with anyone else (at moz or other implementers) about your proposal, and what did they say?","msgtype":"m.text"},"ts":1376005690000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"(We're already hiding .values from the with(){} of event handlers, so this would catch that too.)","msgtype":"m.text"},"ts":1376005710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no. well I sent it to brian for get some initial comments, but that's all.","msgtype":"m.text"},"ts":1376005720000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just curious","msgtype":"m.text"},"ts":1376005729000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"and Tab, but he didn't reply quickly enough :)","msgtype":"m.text"},"ts":1376005741000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah, sorry, I was slow in replying. :/","msgtype":"m.text"},"ts":1376005854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"often has that problem, so doesn't blame anyone else for doing so","msgtype":"m.emote"},"ts":1376005971000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"biab","msgtype":"m.text"},"ts":1376005984000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Oh, huh, I thought that images rotated along with the text in vertical writing modes.","msgtype":"m.text"},"ts":1376006135000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Let's see if FF has the same behavior as Chrome...","msgtype":"m.text"},"ts":1376006145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, FF doesn't do writing mode yet.  Wonderful.","msgtype":"m.text"},"ts":1376006345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]