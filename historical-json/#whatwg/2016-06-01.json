[
{"content":{"body":"you could always require the spambots to pick out photos of specific kinds of boats, to prove they're human","msgtype":"m.text"},"ts":1464741797000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyone willing to actually go through that crap would probably really, really want you do fix their spec issue","msgtype":"m.text"},"ts":1464741839000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"Pick the one called Boaty McBoatFace\"","msgtype":"m.text"},"ts":1464741840000,"senderName":"Garbee","senderId":"Garbee@irc"},
{"content":{"body":"MikeSmith: are you interested in implementing https://github.com/whatwg/html/pull/1356 for v.nu? would be nice to sanity-check against the test cases","msgtype":"m.text"},"ts":1464787003000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1464787026000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think that might a change to the parser but regardless yeah I would be willing to implement it for testing","msgtype":"m.text"},"ts":1464787070000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1464787147000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hey!","msgtype":"m.text"},"ts":1464790854000,"senderName":"whatwg","senderId":"whatwg@irc"},
{"content":{"body":"First time at IRC","msgtype":"m.text"},"ts":1464790892000,"senderName":"whatwg","senderId":"whatwg@irc"},
{"content":{"body":"hi - what's the current status of the Custom Element APIs; can https://github.com/w3c/webcomponents/pull/405 be considered final?","msgtype":"m.text"},"ts":1464794303000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"if so, have polyfill maintainers indicated that they'll update? (AFAIK there's the Polymer-based stuff at webcomponents.org as well as https://github.com/WebReflection/document-register-element)","msgtype":"m.text"},"ts":1464794407000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"FND: yes; custom elements have been upstreamed into HTML (and parts into DOM). See https://html.spec.whatwg.org/multipage/scripting.html#custom-elements. I believe Polymer is working on an updated polyfill, although some things are much harder to polyfill in the new version.","msgtype":"m.text"},"ts":1464794577000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks Domenic - can you elaborate on the polyfill difficulties; what will this mean for users?","msgtype":"m.text"},"ts":1464794647000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"FND: well, they depend on ES6 class syntax, including aspects that are impossible to transpile in general. So I believe Polymer is investigating things like an extra transpiler pass or advising authors to add an extra line to their constructor (which they won't need in native implementations) in order to work with Polymer. I am not the expert here though;","msgtype":"m.text"},"ts":1464794741000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"let me see if I can summon a Polymer person.","msgtype":"m.text"},"ts":1464794742000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tbh, I'm not actually that interested in Polymer-specific aspects, as I prefer to use vanilla custom elements (is that a term?)","msgtype":"m.text"},"ts":1464794845000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"(though I realize their solution might well be generally applicable)","msgtype":"m.text"},"ts":1464794858000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"Yeah, but they maintain a custom elements polyfill","msgtype":"m.text"},"ts":1464794859000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1464794863000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"the ES6 dependency actually sounds promising in a way, as so far Babel and the polyfills (either of them) didn't cooperate","msgtype":"m.text"},"ts":1464794907000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"(Babel injects some sort of class check that fails on HTMLElement, not sure about the details right now)","msgtype":"m.text"},"ts":1464794938000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"Yeah, I think the polyfill will involve overwriting window.HTMLElement","msgtype":"m.text"},"ts":1464794957000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"FND: OK, so it sounds like the best place to get info about the Polymer custom elements polyfill will be https://groups.google.com/forum/#!forum/polymer-dev or https://polymer-slack.herokuapp.com","msgtype":"m.text"},"ts":1464795012000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It sounds like they're still in the planning stages for the update","msgtype":"m.text"},"ts":1464795025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"roger, thank you","msgtype":"m.text"},"ts":1464795039000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"FWIW, the Babel vs. polyfill issue is because polyfilled `HTMLElement` is not a constructor, which trips up Babel's inheritance check:","msgtype":"m.text"},"ts":1464795717000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(â€¦) }","msgtype":"m.text"},"ts":1464795722000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"also, in case anyone cares: looks like WebReflection's polyfill _might_ be updated https://github.com/WebReflection/document-register-element/issues/58","msgtype":"m.text"},"ts":1464796183000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"trackbot, start meeting","msgtype":"m.text"},"ts":1464796716000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"grr","msgtype":"m.emote"},"ts":1464796725000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Does Edge still do www.<actually typed>.com on ctrl-enter in address bar?","msgtype":"m.text"},"ts":1464800101000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I wonder... if page A opens a new window B and B adds event listener to its opener, and then B is closed","msgtype":"m.text"},"ts":1464810038000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"GC can't (or at least shouldn't) collect anything from B","msgtype":"m.text"},"ts":1464810061000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(GC or CC or whatever UA has)","msgtype":"m.text"},"ts":1464810075000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, without looking at the spec or trying stuff, what would you expect the output of the following code to be: let c = new MessageChannel(); c.port1.onmessage = e => { console.log(e.data); c.port1.close(); }; c.port2.postMessage('foo'); c.port2.postMessage('bar');","msgtype":"m.text"},"ts":1464812938000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: ignoring my \"this is a trick question\" instincts, I'd expect 'foo' only","msgtype":"m.text"},"ts":1464814525000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wellll","msgtype":"m.text"},"ts":1464814540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: both spec and implementation say to print both...","msgtype":"m.text"},"ts":1464814543000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"it depends on whether onmessage is async","msgtype":"m.text"},"ts":1464814550000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if it's async i would expect both","msgtype":"m.text"},"ts":1464814556000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"basically i expect .close() to be a \"graceful close\" that allows processing queued up messages","msgtype":"m.text"},"ts":1464814588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'm just unclear on whether .close() happens before or after 'bar' gets queued","msgtype":"m.text"},"ts":1464814601000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for BroadcastChannel the spec seems to be the same (postMessage synchronously figures out the set of non-closed destinations, and then queues tasks to all of them), but the firefox implementation doesn't behave that way, so I'm trying to figure out if I should file a firefox or a spec bug...","msgtype":"m.text"},"ts":1464814630000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mehhh... spec bug might get a broader audience of people with expectations, and as a bonus Firefox people will probably show up there anyway?","msgtype":"m.text"},"ts":1464814737000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"true...","msgtype":"m.text"},"ts":1464814781000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Hm.. is \"The\" supposed to fall behind the main title? https://whatwg.org/specs/","msgtype":"m.text"},"ts":1464816592000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: I doubt it. ^_^ Domenic annevk","msgtype":"m.text"},"ts":1464820189000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno, looks intentional to me","msgtype":"m.text"},"ts":1464820211000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We can check with Hixie","msgtype":"m.text"},"ts":1464820219000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's just a creatively-kerned \"ThWeeb\"","msgtype":"m.text"},"ts":1464821053000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"is there a good way to find all the CSS properties that allow url?","msgtype":"m.text"},"ts":1464821330000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"There's some CSS index, not sure if it's good for that purpose...","msgtype":"m.text"},"ts":1464821559000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"terinjokes: https://drafts.csswg.org/indexes/#properties will get you halfway there, but yeah, not quite what you need","msgtype":"m.text"},"ts":1464821585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"astearns: Domenic: http://i.imgur.com/DVxSe8z.png","msgtype":"m.text"},"ts":1464821609000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: yes, that looks intentional to me. Deemphasizing the pronoun","msgtype":"m.text"},"ts":1464821626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k :)","msgtype":"m.text"},"ts":1464821679000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It most certainly does not read as \"ThWeeb\" however.","msgtype":"m.text"},"ts":1464821689000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"it's intentional","msgtype":"m.text"},"ts":1464822392000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"also, i have no design sense","msgtype":"m.text"},"ts":1464822396000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1464822397000,"senderName":"Hixie_","senderId":"Hixie_@irc"}
]