[
{"content":{"body":"TabAtkins_, what happened to author-ident in css3-values? (what grammar symbol should I use instead?)","msgtype":"m.text"},"ts":1345431954000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://www.w3.org/wiki/Evolution","msgtype":"m.text"},"ts":1345432854000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I wonder what happened","msgtype":"m.text"},"ts":1345432858000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"http://www.w3.org/2001/tag/2011/12/evolution/","msgtype":"m.text"},"ts":1345432873000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Good morning/evening! :)","msgtype":"m.text"},"ts":1345451410000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"(in India it is the afternoon)","msgtype":"m.text"},"ts":1345451536000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does morning..evening does the trick then? :D","msgtype":"m.text"},"ts":1345451587000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"miChou: Yeah, good morning :-)","msgtype":"m.text"},"ts":1345451625000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"In 'frisco it is the middle of the night :)","msgtype":"m.text"},"ts":1345451642000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"1:34 to be more precise","msgtype":"m.text"},"ts":1345451655000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"(I hear that people really don't like it if you call it 'frisco :)","msgtype":"m.text"},"ts":1345451662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins_: ping?","msgtype":"m.text"},"ts":1345451781000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"jgraham: So that's why you do it? To spite'em?","msgtype":"m.text"},"ts":1345451824000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: That and http://www.youtube.com/watch?v=VJ19ahNyM3I :)","msgtype":"m.text"},"ts":1345452744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Sssss!","msgtype":"m.text"},"ts":1345453774000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Hmm, I am missing something about what happens if you do history.go(-1); history.go(-1)","msgtype":"m.text"},"ts":1345454276000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(alternative theory: the spec is missing something)","msgtype":"m.text"},"ts":1345454343000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but at this juncture I will guess it is more likely me)","msgtype":"m.text"},"ts":1345454364000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Do we file a bug on jgraham if he's wrong?","msgtype":"m.text"},"ts":1345454570000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonder if there's anything in http://necolas.github.com/normalize.css/ that can be changed in browsers/the spec","msgtype":"m.text"},"ts":1345459254000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hrmf. I can't find chromium nightly builds.","msgtype":"m.text"},"ts":1345469291000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"They're just gone from the old new place they were moved to.","msgtype":"m.text"},"ts":1345469306000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"OK, I think I have current browser behaviour worked out","msgtype":"m.text"},"ts":1345474400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In Opera, first navigation wins","msgtype":"m.text"},"ts":1345474414000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"history.go(-1); history.go(-2) will take you back 1","msgtype":"m.text"},"ts":1345474432000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In gecko/webkit last navigation wins so you will go back 2","msgtype":"m.text"},"ts":1345474446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*but*","msgtype":"m.text"},"ts":1345474451000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's always a but, isn't there?","msgtype":"m.text"},"ts":1345474471000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If you try to navigate to some undefined point in history last, gecko will ignore it, but webkit will still cancel the previous navigations","msgtype":"m.text"},"ts":1345474500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So history.go(-2) history.go(3) with no forward history will go back 2 in gecko and do nothing in WebKit","msgtype":"m.text"},"ts":1345474533000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: ^ does that sound right?","msgtype":"m.text"},"ts":1345474585000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the spec specifies this then I am skipping over the relevant part when I read it","msgtype":"m.text"},"ts":1345474609000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: sounds right","msgtype":"m.text"},"ts":1345474683000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I mean the Gecko part)","msgtype":"m.text"},"ts":1345474697000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(though, I wonder if Gecko's shistory is sync in some cases... need to check)","msgtype":"m.text"},"ts":1345474824000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hmm, and IE does something else again","msgtype":"m.text"},"ts":1345475121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe doesn't ignore anything","msgtype":"m.text"},"ts":1345475169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fun","msgtype":"m.text"},"ts":1345475253000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"So 21 years after the first web browser was released, we still don't have any operability at all on the fundamental navigation mechanism of the web platform","msgtype":"m.text"},"ts":1345475262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even though it is probably the simplest possible design","msgtype":"m.text"},"ts":1345475287000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Did WorldWideWeb have back/forwards?","msgtype":"m.text"},"ts":1345475375000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Did NS2 have .history","msgtype":"m.text"},"ts":1345475486000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or was is it added to NS3","msgtype":"m.text"},"ts":1345475498000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Opera 2 seems to have back/forwards buttons, at least.","msgtype":"m.text"},"ts":1345475558000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well The string \"back\" appears in the binary. http://www.w3.org/History/1994/WWW/Journals/CACM/screensnap2_24c.gif shows a \"navigate\" menu","msgtype":"m.text"},"ts":1345475725000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"WorldWideWeb's navigation panel contained Next and Previous buttons that would automatically navigate to the next or previous link on the last page visited\"","msgtype":"m.text"},"ts":1345475727000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ah yeah","msgtype":"m.text"},"ts":1345475750000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway, so we have had quite a while to get this stuff right :)","msgtype":"m.text"},"ts":1345475794000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: fwiw the behaviour of the back button and history.back() in the spec is intended to be a careful choice based on tests and thought, it's not supposed to be incompatible with the web","msgtype":"m.text"},"ts":1345476294000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: however, it is indeed an area with low interop","msgtype":"m.text"},"ts":1345476305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: so if there is content that isn't compatible, that'd be good to know","msgtype":"m.text"},"ts":1345476316000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I have no idea about *content*. At the moment I am trying ot figure out what browsers do and what the spec says :)","msgtype":"m.text"},"ts":1345476349000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: Can you give me a high level overview of what the intent of the spec is?","msgtype":"m.text"},"ts":1345476403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because this stuff is not very easy to follow","msgtype":"m.text"},"ts":1345476425000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless you know what the expected outcome is","msgtype":"m.text"},"ts":1345476449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i can in a few minutes, can't pay attention right now","msgtype":"m.text"},"ts":1345476628000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(afaict, IE has some strange behaviour where if you do something like .go(-1) .go(-1) .go(2) .go(-1) it will ignore the .go(2) because that would take you back to where you first started and you will end up .go()ing -3)","msgtype":"m.text"},"ts":1345476652000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: No problem","msgtype":"m.text"},"ts":1345476656000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but I am hoping that my test is broken because that would be crazy)","msgtype":"m.text"},"ts":1345476679000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"iirc it's async, and only the last takes effect, but i can give you a more correct answer in a bit","msgtype":"m.text"},"ts":1345476705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm pretty sure it's async","msgtype":"m.text"},"ts":1345476760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I haven't yet worked out why only the last would take effect","msgtype":"m.text"},"ts":1345476772000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If that is indeed what happens","msgtype":"m.text"},"ts":1345476778000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sorry, only the first, assuming you cross a document boundary after the first","msgtype":"m.text"},"ts":1345476845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(still not fully paying attention)","msgtype":"m.text"},"ts":1345476856000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok let's see","msgtype":"m.text"},"ts":1345477123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so anything that happens happens after the script has finished executing, because go() and back() et al do all their work in a queued task","msgtype":"m.text"},"ts":1345477156000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they have their own special task source, the history traversal task source","msgtype":"m.text"},"ts":1345477188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"part of the pushState() and document.open() methods empties that queue","msgtype":"m.text"},"ts":1345477211000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as does \"update the session history with the new page\"","msgtype":"m.text"},"ts":1345477233000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and navigating to a frag id","msgtype":"m.text"},"ts":1345477254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it doesn't seem it gets emptied by traversal","msgtype":"m.text"},"ts":1345477267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right, because this is entry update","msgtype":"m.text"},"ts":1345477287000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So \"update the session history\" specifically doesn't empty the queues","msgtype":"m.text"},"ts":1345477310000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Good morning, Whatwg","msgtype":"m.text"},"ts":1345477333000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"er yeah, sorry, not empty","msgtype":"m.text"},"ts":1345477339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cleans up a bit :-)","msgtype":"m.text"},"ts":1345477352000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assuming the first go(-1) crosses a doc boundary, then all the subsequent ones get ignored, per spec","msgtype":"m.text"},"ts":1345477419000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm, I lost something somewhere","msgtype":"m.text"},"ts":1345477431000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Your car keys?","msgtype":"m.text"},"ts":1345477444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"though maybe they would technically still be in the queue when you go back to the doc, heh","msgtype":"m.text"},"ts":1345477456000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Isn't traversal the case where the algorithm is initiated for /entry update/?","msgtype":"m.text"},"ts":1345477460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"traverse the history\" happens for a number of things","msgtype":"m.text"},"ts":1345477489000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"go(), pushState(), navigation, etc","msgtype":"m.text"},"ts":1345477501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe not pushState()","msgtype":"m.text"},"ts":1345477517000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am specifically wondering about .go() in this case","msgtype":"m.text"},"ts":1345477529000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"go() definitely invokes it, it's the last step of go()'s algorithm","msgtype":"m.text"},"ts":1345477548000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like we should be emptying this queue somewhere","msgtype":"m.text"},"ts":1345477617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"krijn, http://krijnhoetmer.nl/irc-logs/ doesn't seem to update, though the pages ere there","msgtype":"m.text"},"ts":1345477623000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that we're not yet doing so","msgtype":"m.text"},"ts":1345477624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"*are","msgtype":"m.text"},"ts":1345477647000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmpf","msgtype":"m.text"},"ts":1345477650000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Ms2ger: updated","msgtype":"m.text"},"ts":1345477694000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"That was quick :)","msgtype":"m.text"},"ts":1345477713000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"My cronj...Windows Task Schedule thingy...wasn't running","msgtype":"m.text"},"ts":1345477721000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Hixie: OK, so the intent of the spec is to match Opera; i.e. first wins?","msgtype":"m.text"},"ts":1345477730000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: dunno if it matches opera, but first is supposed to win as far as i can tell","msgtype":"m.text"},"ts":1345477749000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=18626","msgtype":"m.text"},"ts":1345477826000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: OK, thank you. That is clearer","msgtype":"m.text"},"ts":1345477885000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and gives me something to aim for until averyone else decides that they don't agree with this model ;)","msgtype":"m.text"},"ts":1345477911000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: does it match mozilla?","msgtype":"m.text"},"ts":1345477931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: what? the first go() wins?","msgtype":"m.text"},"ts":1345478007000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: No one matches","msgtype":"m.text"},"ts":1345478014000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: That is apparently the intent of the spec","msgtype":"m.text"},"ts":1345478026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"either the step that cleans the task source in the navigation algorithm should be moved to the traverse algorithm, or a step should be placed in the \"by a delta\" algorithm should have it...","msgtype":"m.text"},"ts":1345478054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: how do they differ?","msgtype":"m.text"},"ts":1345478062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is one of those areas where i'm pretty sure i was trying to match either gecko or webkit, probably gecko","msgtype":"m.text"},"ts":1345478080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: In Gecko last wins, unless it would navigate outside the session history in which case you work backward through the list until there is a valid one","msgtype":"m.text"},"ts":1345478110000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so .go(-1) .go(2) with no forward history would be like .go(-1)","msgtype":"m.text"},"ts":1345478131000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://hixie.ch/tests/adhoc/dom/level0/history/ is where i put my tests, though it looks like i didn't save many","msgtype":"m.text"},"ts":1345478142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah so gecko tests the validity sync, then queues a task, interesting","msgtype":"m.text"},"ts":1345478164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In WebKit last wins always and if it doesn't do anything there is no navigation","msgtype":"m.text"},"ts":1345478166000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so webkit essentially clears the task source each time","msgtype":"m.text"},"ts":1345478188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what in the spec says go(-1) should win?","msgtype":"m.text"},"ts":1345478190000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In Opera first wins","msgtype":"m.text"},"ts":1345478199000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In i.e. all navigations are taken into account so .go(-2) .go(-1) takes yopu back 3","msgtype":"m.text"},"ts":1345478222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But, if my tests are not broken (I think they might be) anything that would lead to no overall navigation is ignored","msgtype":"m.text"},"ts":1345478255000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so .go(-2) .go(2) .go(-1) is like .go(-3) not like .go(-1)","msgtype":"m.text"},"ts":1345478279000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what about go -2 -2 -2 -2 when you only have 2?","msgtype":"m.text"},"ts":1345478320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does it crash?","msgtype":"m.text"},"ts":1345478322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IE?","msgtype":"m.text"},"ts":1345478342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"y","msgtype":"m.text"},"ts":1345478345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Does it print random numbers? :)","msgtype":"m.text"},"ts":1345478376000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"afk brb","msgtype":"m.text"},"ts":1345478469000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just ends up on the first page in history afaict","msgtype":"m.text"},"ts":1345478483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: I don't know who is supposed to pass your tests, but gecko ends up in the wrong history position, webkit is in an infinite reload loop and Opera fails","msgtype":"m.text"},"ts":1345478766000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if the spec is based on those tests, it doesn't also follwo browsers ;)","msgtype":"m.text"},"ts":1345478797000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1345479165000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"jgraham: maybe it was a combination of the best parts :-)","msgtype":"m.text"},"ts":1345479468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: anyway, IE's behaviour seems obviously bad (why compare against something you're not going to execute against)","msgtype":"m.text"},"ts":1345479493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: are you testing with multiple traversals from multiple frames?","msgtype":"m.text"},"ts":1345479554000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: which wins if you have e.g. a subframe go back then a parent go back, all in one task?","msgtype":"m.text"},"ts":1345479574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: seems to me the \"first wins\" model is the sanest and easiest to reason about","msgtype":"m.text"},"ts":1345479593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: hi, do you know how I can set location.search up without making the page reload? https://github.com/kaihendry/Greptweet/issues/20#issuecomment-7875290","msgtype":"m.text"},"ts":1345480926000,"senderName":"hendry","senderId":"hendry@irc"},
{"content":{"body":"Hixie: I have only tested top level browsing contexts without children so far","msgtype":"m.text"},"ts":1345480992000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hi TabAtkins_, you 'around?","msgtype":"m.text"},"ts":1345481155000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"heycam|away: We killed it pending resolution of some issues around case-normalizing.  At minimum, we're going to make author-defined idents do ascii-case-folding, to match CSS-defined identifier, but we may do unicode-case-folding as well, if we can define an acceptable form that's friendly to atomic string comparison.","msgtype":"m.text"},"ts":1345481340000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"heycam|away: That's a long way of saying \"just use <ident>\".","msgtype":"m.text"},"ts":1345481353000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"miChou: pong","msgtype":"m.text"},"ts":1345481381000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Ms2ger: Beyond UA trickery and some quirks mode stuff that *everyone* does, what are examples of other browsers lying to sites?","msgtype":"m.text"},"ts":1345481433000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: got a question regarding <br>-s and fragmentation. If I do something like <br style=\"display: block; width: 1px; height: 1px; break-after: column (or region, or page)\"> should it break the column(/region/page), or not? (that is, beside the line breaking that implicitly occurs)","msgtype":"m.text"},"ts":1345481584000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"I sent an email to www-style a week or so ago but did not get a definitive answer :)","msgtype":"m.text"},"ts":1345481603000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"miChou: Hm, I am not the right person to ask about fragmentation, but let me dig around and see if I can answer this.","msgtype":"m.text"},"ts":1345481678000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: thanks a bunch!","msgtype":"m.text"},"ts":1345482536000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"miChou: Okay, yeah, it should create a break.","msgtype":"m.text"},"ts":1345482777000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: ok, good to know. I'll go file some browser bugs :>","msgtype":"m.text"},"ts":1345483303000,"senderName":"miChou","senderId":"miChou@irc"},
{"content":{"body":"what's the canonical url for html parsing tests that i should give someone who is writing an html parser?","msgtype":"m.text"},"ts":1345483535000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"html5lib on code.g.c","msgtype":"m.text"},"ts":1345483622000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://code.google.com/p/html5lib/source/browse/#hg%2Ftestdata%2Ftokenizer and http://code.google.com/p/html5lib/source/browse/#hg%2Ftestdata%2Ftree-construction ?","msgtype":"m.text"},"ts":1345483637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there documentation for the test format?","msgtype":"m.text"},"ts":1345483648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... what is this thing you speak of?","msgtype":"m.text"},"ts":1345483679000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Parser_tests ?","msgtype":"m.text"},"ts":1345483691000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh good","msgtype":"m.text"},"ts":1345483717000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Excluding the most common ways that browsers lie to sites in \"ways browsers lie to sites\" is just bizzare","msgtype":"m.text"},"ts":1345485660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But even if you do exclude those, Chrome has shipped DOM APIs for features that it didn't actually have","msgtype":"m.text"},"ts":1345485702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: The point was in reference to individual browsers lying, not everyone lying in the same way, which is much less troublesome.","msgtype":"m.text"},"ts":1345485719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But everyone doesn't lie in the same way in their UA string, for example","msgtype":"m.text"},"ts":1345485745000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sure, but who cares about UA strings?  It's irrelevant to the philosophical question of \"will a new feature detection mechanism work?\".","msgtype":"m.text"},"ts":1345485826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We got rightly complained at for shipping APIs before the feature was ready, and we're a bit more careful about that now.","msgtype":"m.text"},"ts":1345485851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The examples I know of were just sloppy coding, not deliberate lies.","msgtype":"m.text"},"ts":1345485863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Since UA strings are an existing example of a feature detection mechanism, and one in which browsers are still forced to lie, it does seem somewhat relevant","msgtype":"m.text"},"ts":1345485886000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not sure how you managed to ship a whole dom implementation of <details> with no UI through sloppy coding, but my point is not to dwell on the missteps of others","msgtype":"m.text"},"ts":1345485952000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You could argue that, but I don't think it's significant enough.  It's far removed from actual *feature* testing, so it's no wonder that it gets polluted.","msgtype":"m.text"},"ts":1345485953000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We so far we have tried UA strings and hasFeature and feature detection, and they have all been gamed and are all abused by authors","msgtype":"m.text"},"ts":1345486040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yes, because UA strings are *very* far removed from the features we're trying to detect, so they corrupt very easily.  hasFeature is still somewhat removed from the actual feature (level of removal varies on how granular the strings are defined) as whether you return a boolean for a string has no technical connection to the implementation of the feature.","msgtype":"m.text"},"ts":1345486146000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hasFeature is, I think, *less* corrupted than UA strings, but still too much to be usable.","msgtype":"m.text"},"ts":1345486161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Insofar as they were usable in the first place.)","msgtype":"m.text"},"ts":1345486173000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"supports(), on the other hand, is tightly coupled to the feature, probably as tightly coupled as we can get without actual testing.  The easiest implementation is to just hand it to your CSS parser and see if it's recognized, and what you parse it tightly attached to what you implement and are willing to expose to the world.","msgtype":"m.text"},"ts":1345486235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Again, very occasional missteps in this, but they're quite rare.)","msgtype":"m.text"},"ts":1345486248000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus, the granularity is perfect, because you can test the *exact* syntax you're planning to use.","msgtype":"m.text"},"ts":1345486282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This suggests that supports() will be less corrupted than hasFeature() was.  There's still a possibility that \"less\" is still \"too much\", but we'll see.","msgtype":"m.text"},"ts":1345486329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If this fails, then feature detection in the browser is basically impossible.","msgtype":"m.text"},"ts":1345486337000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"People won't test the exact thing they will use","msgtype":"m.text"},"ts":1345486363000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"They will test some thing that is a good proxy for what they want to use in some particular contempary browser","msgtype":"m.text"},"ts":1345486395000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This happens all the time with jaascript feature detection","msgtype":"m.text"},"ts":1345486409000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not for all cases, no - that would be way too verbose.  But you can take some representative line from you code and use it exactly.","msgtype":"m.text"},"ts":1345486418000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, I don't particularly care about @supports","msgtype":"m.text"},"ts":1345486474000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't expect it to work well but there is no way I will convince you of that","msgtype":"m.text"},"ts":1345486496000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is nevertheless distressing that you are going around making crazy statements about browsers not lying to make sites work","msgtype":"m.text"},"ts":1345486532000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm sorry that you're ignoring my clarification about that statement. I assumed it was obvious in context, but it may not have been clear.","msgtype":"m.text"},"ts":1345486564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which clarification? The fact that you were ignoring multiple ways that browsers lie?","msgtype":"m.text"},"ts":1345486608000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Assuming you read the context at all. The line by itself, as Ms2ger quoted, is incorrect.)","msgtype":"m.text"},"ts":1345486619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I read the context","msgtype":"m.text"},"ts":1345486631000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My line starting from \"The point was in reference...\".  Don't be purposely dense.","msgtype":"m.text"},"ts":1345486660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Now you're just being a dick","msgtype":"m.text"},"ts":1345486733000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not being. I don't see how even basic stuff like UA strings is \"everyone lying in the same way\"","msgtype":"m.text"},"ts":1345486738000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: ffs","msgtype":"m.text"},"ts":1345486757000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I can go further into my reasoning, but I think I explained well enough above, and it's irrelevant anyway - you're less optimistic about trying this kind of thing again, and that's okay.","msgtype":"m.text"},"ts":1345486817000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Chrome pretends to be Gecko, Safari and Mozilla. Opera claims to be an older version of Opera. Firefox claims to be Mozilla. etc.","msgtype":"m.text"},"ts":1345486833000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you were trying to block the feature, I'd be more concerned about convincing you, but if it's just a personal opinion, you're allowed to hold it. ^_^","msgtype":"m.text"},"ts":1345486835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: btw re @supports and co, i like that it is designed with the hasFeature() lessons in mind. i hope it works, if it does we might be able to reuse this design in the future.","msgtype":"m.text"},"ts":1345489216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i expect @supports will be used to test what codec to use in webrtc","msgtype":"m.text"},"ts":1345489492000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if (!CSS.supports(\"MP3\")) { alert(\"Wrong browser!\"); }","msgtype":"m.text"},"ts":1345489536000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Something like that?","msgtype":"m.text"},"ts":1345489540000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"More like \"if( CSS.supports('-moz-foo') { /* use a format that mozilla supports */ }\".","msgtype":"m.text"},"ts":1345489573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, except not -moz-, just a standard property that mozilla happens to support and iPhone default browser doesn't, or whatever","msgtype":"m.text"},"ts":1345489626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, looks like we support iframe sandbox now","msgtype":"m.text"},"ts":1345489637000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if (CSS.supports(\"document.all\"))","msgtype":"m.text"},"ts":1345489724000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That'll be false everywhere. ^_^","msgtype":"m.text"},"ts":1345489736000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(the only application of -o-object-fit i've seen in the wild is browser-sniffing for opera of the version where that was added, for an entirely different purpose than the property itself)","msgtype":"m.text"},"ts":1345489746000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: Someone internally is asking for window.devicePixelRatio to be standardized, for the purpose of sizing <canvas> properly.  Is this necessary if we expose the HD stuff?","msgtype":"m.text"},"ts":1345490728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1345490811000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's exposed as part of the HD stuff","msgtype":"m.text"},"ts":1345490816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#dom-screen-canvasresolution","msgtype":"m.text"},"ts":1345490845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Excellent, thanks.","msgtype":"m.text"},"ts":1345490887000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: will tomorrow at 2:00pm work for you?","msgtype":"m.text"},"ts":1345490924000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"goes to add a reference and finds it has 19 editors","msgtype":"m.emote"},"ts":1345490944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"decides to omit that editor list","msgtype":"m.emote"},"ts":1345490949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: looking at the schedule ...","msgtype":"m.text"},"ts":1345490976000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: \"3pm-4pm: Web components planning \"","msgtype":"m.text"},"ts":1345490986000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that would be mozilla only stuff...","msgtype":"m.text"},"ts":1345491041000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"let me ask someone about the previous thing...","msgtype":"m.text"},"ts":1345491055000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: 2pm should be ok","msgtype":"m.text"},"ts":1345491153000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: blake should be around too","msgtype":"m.text"},"ts":1345491173000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"lang=jp isn't valid?","msgtype":"m.text"},"ts":1345491212000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: ah, saw your email... answering..","msgtype":"m.text"},"ts":1345491218000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"validator.nu says 'The language subtag \"jp\" is not a valid ISO language part of a language tag'","msgtype":"m.text"},"ts":1345491228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh it's ja","msgtype":"m.text"},"ts":1345491436000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: great, thank you!","msgtype":"m.text"},"ts":1345492209000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: so i want to define hashless and unitless at tree-construction rather than at tokenizer. there's \"If the current declaration is grammatically valid, append it to the value of the current rule.\" so i'd need to rewrite the primitives before that (i guess in \"consume a primitive\")","msgtype":"m.text"},"ts":1345495680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and i guess i need to set a flag in declaration mode when seeing the ident token, if it's one of the quirky properties","msgtype":"m.text"},"ts":1345495760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Alternately, rewrite it at that \"grammatically valid\" check-point.","msgtype":"m.text"},"ts":1345495884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Check if it's valid.  If not, swap out the tokens for their quirks-mode equivalents, and check again.","msgtype":"m.text"},"ts":1345495911000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah but that seems more annoying to spec :-)","msgtype":"m.text"},"ts":1345495948000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, setting a flag in declaration mode and converting tokens in declaration-value mode might work.","msgtype":"m.text"},"ts":1345496154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can just put the hooks in directly, if you'd like.","msgtype":"m.text"},"ts":1345496180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: yay, I can remove the scinot flag and just have it on all the time now!","msgtype":"m.text"},"ts":1345496180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hooks would be nice","msgtype":"m.text"},"ts":1345496392000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Just describe what would be convenient for you to use, or alternately, define some hooks on your side so I can just directly reference them.","msgtype":"m.text"},"ts":1345496479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah that works","msgtype":"m.text"},"ts":1345496534000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder when the flags should be unset again","msgtype":"m.text"},"ts":1345496537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"when entering the declaration mode next time?","msgtype":"m.text"},"ts":1345496560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Presumably just all the states that exit \"declaration parsing\".","msgtype":"m.text"},"ts":1345496632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That is, the error states in after-declaration-name, and the ending states in declaration-value.","msgtype":"m.text"},"ts":1345496653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1345496858000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: i think it would be better to just put the quirks in the parser spec directly","msgtype":"m.text"},"ts":1345498044000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"only annoying thing is that it needs to check the names of properties and functions","msgtype":"m.text"},"ts":1345498188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i can try writing a patch for the parser","msgtype":"m.text"},"ts":1345498318000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Feel free.  I think it would be workable for the quirks spec to define the set of properties that need quirk handling, and the way in which each is handled.","msgtype":"m.text"},"ts":1345499468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I'm okay with Syntax just handling the whole thing.  My ideal handling of it would just be taking the part I'd want in the quirks spec and putting it in an appendix.","msgtype":"m.text"},"ts":1345499502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: there's an </h4> missing (top-level mode)","msgtype":"m.text"},"ts":1345499621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1345499712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"v.nu complained about some other errors in the source document also","msgtype":"m.text"},"ts":1345499752000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah, yeah, more markup errors.  Fixed.","msgtype":"m.text"},"ts":1345500120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://simon.html5.org/dump/css3-syntax/ has the original source file (before the fixing of markup errors) and the other file is with quirks added (i didn't add the list of properties though)","msgtype":"m.text"},"ts":1345501956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah, so I can just diff it?","msgtype":"m.text"},"ts":1345502180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1345502257000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"now i'm gonna sleep. but i'll read the logs tomorrow so just dump comments here if you have any :-)","msgtype":"m.text"},"ts":1345502577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1345502586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins, ok thanks (will use <ident>)","msgtype":"m.text"},"ts":1345504198000,"senderName":"heycam","senderId":"heycam@irc"}
]