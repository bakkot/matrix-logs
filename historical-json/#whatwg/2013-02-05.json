[
{"content":{"body":"p is an element in the html namespace yes?","msgtype":"m.text"},"ts":1360022412000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"could involve closing some other elements, doing things with formatting elements, etc","msgtype":"m.text"},"ts":1360022421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foster parenting","msgtype":"m.text"},"ts":1360022424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all kinds of stuff","msgtype":"m.text"},"ts":1360022427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"depends where you have to do it","msgtype":"m.text"},"ts":1360022431000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh right, i was thinking it would reprocess the end tag (which it will)","msgtype":"m.text"},"ts":1360022452000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"but first it must process the opening tag","msgtype":"m.text"},"ts":1360022455000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"well that's beyond the scope of what i have to do, so i'll have to treat it like the others for now","msgtype":"m.text"},"ts":1360022538000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"it looks like in general i can simply have a list of scope delimiters to search for, and when i get a non-matching tag, look up which scope it's in and either ignore or fix as specified","msgtype":"m.text"},"ts":1360022570000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"ignore if there isn't an open tag in scope, fix if there is","msgtype":"m.text"},"ts":1360022588000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"are you writing an html parser?","msgtype":"m.text"},"ts":1360022596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"patching one","msgtype":"m.text"},"ts":1360022602000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"it's not structured favorably for proper implementation","msgtype":"m.text"},"ts":1360022610000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"but it's choking on missing li and td tags","msgtype":"m.text"},"ts":1360022617000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i recommend just starting over then","msgtype":"m.text"},"ts":1360022617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i may at some point","msgtype":"m.text"},"ts":1360022625000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"but for now i need a working fix asap","msgtype":"m.text"},"ts":1360022631000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"it's probably less work than patching it, and we have a ton of tests :-)","msgtype":"m.text"},"ts":1360022637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd try to use aredridel's parser but i can't figure out HOW, it has no documentation haha","msgtype":"m.text"},"ts":1360022655000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"rather, i can't figure out how to integrate it into cheerio","msgtype":"m.text"},"ts":1360022662000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"and anyway, as long as the rules are simple, the patch is easy","msgtype":"m.text"},"ts":1360022675000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i just needed to come up with a generalization that will work sufficiently for our purposes :P","msgtype":"m.text"},"ts":1360022692000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i get where you're coming from but my boss is already on my ass all the time about trying to do things Right instead of Fast","msgtype":"m.text"},"ts":1360022708000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"and when it affects business it's not a good time to argue hehe","msgtype":"m.text"},"ts":1360022732000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"some of these rules are fairly confusing/irritating","msgtype":"m.text"},"ts":1360022802000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"for example, closing non-special tags says to close implied end tags","msgtype":"m.text"},"ts":1360022811000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"but closing implied end tags only does anything if the current tag is special","msgtype":"m.text"},"ts":1360022824000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i guess that means it must happen in some other situation, but man my head! :\\","msgtype":"m.text"},"ts":1360022937000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"you mean \"generate implied end tags\"?","msgtype":"m.text"},"ts":1360022956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1360022996000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i guess it could reach a special tag as part of the loop process","msgtype":"m.text"},"ts":1360023008000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"<div><p></div> has to close the <p>","msgtype":"m.text"},"ts":1360023032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except it says to abort in that case","msgtype":"m.text"},"ts":1360023032000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"i guess i don't understand what you mean exactly","msgtype":"m.text"},"ts":1360023051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have an example that invokes the algorithm that is pointless?","msgtype":"m.text"},"ts":1360023079000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could try, but not right now","msgtype":"m.text"},"ts":1360024295000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"here is one that's worth looking at though","msgtype":"m.text"},"ts":1360024299000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"(This will never fail, since the loop will always terminate in the previous step if the top of the stack — an html element — is reached.)","msgtype":"m.text"},"ts":1360024310000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"but the list for element in select scope does not include 'html'","msgtype":"m.text"},"ts":1360024321000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"myndzi: if you're in select scope, then you'll stop at the select.","msgtype":"m.text"},"ts":1360024869000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"myndzi: (everything is in the list for select, except optgroup and option)","msgtype":"m.text"},"ts":1360024909000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, presumably it relies on having inserted the select earlier","msgtype":"m.text"},"ts":1360024969000,"senderName":"myndzi","senderId":"myndzi@irc"},
{"content":{"body":"I wish pointer-events would apply to Canvas elements in IE. It's not really MORE of a security risk, since you could replace the canvas with an embedded SVG image using toDataURL(). </rant>","msgtype":"m.text"},"ts":1360028818000,"senderName":"muyyatin","senderId":"muyyatin@irc"},
{"content":{"body":"Ms2ger: I sync the html5lib tests manually when I happen to be working on related stuff","msgtype":"m.text"},"ts":1360057748000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Would you care if they were in git instead of hg?","msgtype":"m.text"},"ts":1360057989000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: not really","msgtype":"m.text"},"ts":1360058079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Excellent :)","msgtype":"m.text"},"ts":1360058102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: about the on()/addEventListener() return...","msgtype":"m.text"},"ts":1360081629000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"you around?","msgtype":"m.text"},"ts":1360081640000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1360082112000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Good morning!","msgtype":"m.text"},"ts":1360082411000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"howdy dglazkov","msgtype":"m.text"},"ts":1360082507000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: am now","msgtype":"m.text"},"ts":1360085756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: middle of meeting week","msgtype":"m.text"},"ts":1360085776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, sorry to pounce durring your first week","msgtype":"m.text"},"ts":1360085793000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I'm thinking next week will be better","msgtype":"m.text"},"ts":1360085921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's also all these silly UK forms I need to fill out","msgtype":"m.text"},"ts":1360085938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: was thinking that the returned object should have a method that allows you to disconnect (and perhaps reconnect)","msgtype":"m.text"},"ts":1360086099000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"yeah, that's the idea","msgtype":"m.text"},"ts":1360086133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if anybody's bored and feels like taking a stab at explaining this behavior before i file a bug on webkit: https://zewt.org/~glenn/test-webkit-transition-bug.html run test(); the text appears on top of the blue box above it at weird times","msgtype":"m.text"},"ts":1360086144000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, initially Jake came up with the idea of just returning a function, but people didn't like that","msgtype":"m.text"},"ts":1360086151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hi","msgtype":"m.text"},"ts":1360086159000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1360086165000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"still need to ask some people about memory usage around that","msgtype":"m.text"},"ts":1360086193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm curious if you find anything out, since i'd expect creating an object and creating a closure function to be pretty much the same thing","msgtype":"m.text"},"ts":1360086246000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but of course reality doesn't always meet expectations, so","msgtype":"m.text"},"ts":1360086262000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, if you have an object you still need the function","msgtype":"m.text"},"ts":1360086288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you'd have at least twice the stuff","msgtype":"m.text"},"ts":1360086300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it'd be the same function on all of the objects, just a value hanging off the interface like any other interface function","msgtype":"m.text"},"ts":1360086326000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah, not sure how that works, guess that varies per engine","msgtype":"m.text"},"ts":1360086447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"either way you (at least naively) have references to two objects: either the observation and an interface, or the observation and a function","msgtype":"m.text"},"ts":1360086455000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"note: functions are objects =)","msgtype":"m.text"},"ts":1360086460000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: right, but the important thing is that this is a closure, not just a function","msgtype":"m.text"},"ts":1360086485000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that is, you aren't returning the same function every time, you still have to allocate something to stash what it's for","msgtype":"m.text"},"ts":1360086506000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyway, yeah, let me know what you find out","msgtype":"m.text"},"ts":1360086520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's no difference (aside from optimization) between allocating a new function and a new object of some other sort","msgtype":"m.text"},"ts":1360086580000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"zewt: closures aren't magic","msgtype":"m.text"},"ts":1360086588000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: that's what i'm saying :)","msgtype":"m.text"},"ts":1360086592000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yes, it's possible to optimize away internal storage for a function that closes over no free variables","msgtype":"m.text"},"ts":1360086613000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"but not all engines will (or do)","msgtype":"m.text"},"ts":1360086621000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and we can't require that in the spec","msgtype":"m.text"},"ts":1360086634000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"not really related here","msgtype":"m.text"},"ts":1360086639000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since it *does* have storage (the function would have to have a reference to the event handler it manipulates)","msgtype":"m.text"},"ts":1360086666000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1360086676000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Y U NO ALLOW NEGATIVE PADDING?","msgtype":"m.text"},"ts":1360087114000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what would it mean?","msgtype":"m.text"},"ts":1360087138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, before I answer that, let me admit that \"padding\" is the wrong word to describe the problem I'm trying to solve. I'm trying to give an element a negative inset for its contents, similar to what a negative padding might do, in theory.","msgtype":"m.text"},"ts":1360087243000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"(negative margins won't work for your case for some reason?)","msgtype":"m.text"},"ts":1360087410000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'll put an example online.","msgtype":"m.text"},"ts":1360087422000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"or do you want to extend the contents beyond the box?","msgtype":"m.text"},"ts":1360087423000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"reduced weird webkit bug, and still not sure how to work around it; bleh","msgtype":"m.text"},"ts":1360087584000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm smaug____ doesn't even care","msgtype":"m.text"},"ts":1360087808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I guess that's settled then","msgtype":"m.text"},"ts":1360087827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now I just need to find some time","msgtype":"m.text"},"ts":1360087831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a container with 4 panels. These panels have gutters between them, like columns in print, but there are no gutters between the edge of the panels and the container. Since this is being done on the web, I'm taking advantage of media queries. At high resolutions, the panels have these widths: 50%, 50%, 50%, and 50%, so that visually they look like 2 rows. At smaller resolutions, the panels have these widths: 100%, 50%, 50%,","msgtype":"m.text"},"ts":1360088034000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"100%, so that visually they look like 3 rows.","msgtype":"m.text"},"ts":1360088034000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: btw. not sure i got a reply to just extending addEventListener instead of adding a whole new entry point","msgtype":"m.text"},"ts":1360088063000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think that'd be just confusing","msgtype":"m.text"},"ts":1360088085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and doesn't improve on the long name complaint","msgtype":"m.text"},"ts":1360088108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how so? handler = elem.addEventListener(\"click\", handler, { alwaysBubble: true, capture: false })","msgtype":"m.text"},"ts":1360088122000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JonathanNeal: this seems reasonably easy, is there more to it?","msgtype":"m.text"},"ts":1360088137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: you're still typing \"addEventListener\", which sucks","msgtype":"m.text"},"ts":1360088142000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"while i'm happy to have shorter names, it's not a good enough reason to add a new, different API","msgtype":"m.text"},"ts":1360088158000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: that's it.","msgtype":"m.text"},"ts":1360088162000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"(alias on = addEventListener if anything, no need for distinct APIs)","msgtype":"m.text"},"ts":1360088182000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: cart before the horse. Lets make something good and *then* see if we can work back to patching addEventListener to support it (which is likely ,but should not be a key goal)","msgtype":"m.text"},"ts":1360088231000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"JonathanNeal: and what is your markup? just four elements back to back?","msgtype":"m.text"},"ts":1360088252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: also, naming is important. Those who say \"short names are not enough\" are not paying attention to the history of libraries","msgtype":"m.text"},"ts":1360088273000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"In one container, yes.","msgtype":"m.text"},"ts":1360088275000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"no, don't start by making a whole new API; start with the features and use cases you want, and design an API for them","msgtype":"m.text"},"ts":1360088290000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: uh...you just pre-disposed and outcome and then said \"design for your use-case\", which is defeated by pre-supposing the outcome","msgtype":"m.text"},"ts":1360088336000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and i'm pretty sure the interface I proposed handles the use cases people want (being able to remove the handler without retaining a reference to the function; being able to ignore the bubble flag for event delegation; event delegation filtering)","msgtype":"m.text"},"ts":1360088344000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: honestly, this is like the second day in a row that you're making me regret signing onto IRC","msgtype":"m.text"},"ts":1360088363000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: okay, you're apparently not capable of civil conversation, so i'm not having one with you","msgtype":"m.text"},"ts":1360088364000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wow, first time i've been tempted to /ignore someone on this channel","msgtype":"m.text"},"ts":1360088374000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"congrats, etc","msgtype":"m.text"},"ts":1360088379000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I think having a new API map to the same abstract concept is better than retrofitting old APIs","msgtype":"m.text"},"ts":1360088431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: because you then a) double the testing and b) need to handle cases like boolean or dictionary","msgtype":"m.text"},"ts":1360088448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why? this seems like a straightforward extension","msgtype":"m.text"},"ts":1360088454000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if we want to advocate on() anyway there's no need to touch the old code","msgtype":"m.text"},"ts":1360088474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a) it definitely doesn't double the testing (what?), and b) that's what webidl is for","msgtype":"m.text"},"ts":1360088477000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just needs to speak the same language","msgtype":"m.text"},"ts":1360088481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's more confusing too imo","msgtype":"m.text"},"ts":1360088535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... why?","msgtype":"m.text"},"ts":1360088541000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"because suddenly addEventListener returns an object that allows for removal rather than using removeEventListener for that, etc.","msgtype":"m.text"},"ts":1360088587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems kinda obvious","msgtype":"m.text"},"ts":1360088591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2080 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2081","msgtype":"m.text"},"ts":1360088604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal: i sadly had to add a wrapper div around each one because we don't have ::outside yet","msgtype":"m.text"},"ts":1360088616000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annealtf4","msgtype":"m.text"},"ts":1360088644000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"for the irc log record, there's nothing confusing about adding a feature to addEventListener to make it return an object instead of nothing","msgtype":"m.text"},"ts":1360088838000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: got it, so you can't use the wrapper div.","msgtype":"m.text"},"ts":1360088858000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1360088862000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"does care","msgtype":"m.emote"},"ts":1360088953000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: you've also got overflow in your example","msgtype":"m.text"},"ts":1360089083000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"the body is scrolling x","msgtype":"m.text"},"ts":1360089087000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: yeah it probably needs minor tweaks","msgtype":"m.text"},"ts":1360089100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"overflow-x:hidden e.g.","msgtype":"m.text"},"ts":1360089107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right, which has its own issues. That's where I'm at too.","msgtype":"m.text"},"ts":1360089307000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don't wrap each panel though, I put a wrapper just inside the container.","msgtype":"m.text"},"ts":1360089333000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"the wrapping of each panel lets you more easily just set the horizontal width at the margin level","msgtype":"m.text"},"ts":1360089356000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can probably get it to work with box-sizing too","msgtype":"m.text"},"ts":1360089363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you don't care about the boxes being _exactly_ equal width, you can easily get rid of the scrollbar by setting the left margin on the first one and the right margin on the last one to 0","msgtype":"m.text"},"ts":1360089389000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then removing the negative margins","msgtype":"m.text"},"ts":1360089394000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm using box-sizing: border-box.","msgtype":"m.text"},"ts":1360092226000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I wish it were the default anyway.","msgtype":"m.text"},"ts":1360092242000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"i ooooi","msgtype":"m.text"},"ts":1360099447000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"did i just vim all over the channel","msgtype":"m.text"},"ts":1360100851000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess one problem with the \"clone a DocumentFragment then appendChild it\" template pattern is you lose any reference to the nodes when they're inserted :|","msgtype":"m.text"},"ts":1360104940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wonders why table sorting has anything to do with microtasks","msgtype":"m.emote"},"ts":1360106126000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: by any chance, do you know how the size of the <input type='file'> in webkit is computed?","msgtype":"m.text"},"ts":1360108718000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"like, in pixels?","msgtype":"m.text"},"ts":1360108774000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1360108775000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i would assume it's fixed? or based on the font-size?","msgtype":"m.text"},"ts":1360108783000,"senderName":"Hixie","senderId":"Hixie@irc"}
]