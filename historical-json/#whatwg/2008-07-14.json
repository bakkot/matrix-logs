[
{"content":{"body":"Philip`: ah, thankyou","msgtype":"m.text"},"ts":1215993660000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Philip`: did you do that with an html5 parser?","msgtype":"m.text"},"ts":1215993661000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: It was with a (very old) HTML5 tokeniser","msgtype":"m.text"},"ts":1215993960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though I might have hacked in something to make it respond to <script> etc correctly","msgtype":"m.text"},"ts":1215993961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1215994020000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"it fits in with what I thought","msgtype":"m.text"},"ts":1215994080000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"well, wildly guessed","msgtype":"m.text"},"ts":1215994081000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"which was that attributes can be allocated in blocks of five","msgtype":"m.text"},"ts":1215994140000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I measured stuff like tag name lengths so I could preallocate enough space to make the common cases fast, but I can't find any of the results from that :-(","msgtype":"m.text"},"ts":1215994141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'd be very interested in seeing the longest attribute values found in real world content","msgtype":"m.text"},"ts":1215994200000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I saw tens of kilobytes in some <img alt> attributes","msgtype":"m.text"},"ts":1215994320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wonder what implementation limits there are in current Web browsers","msgtype":"m.text"},"ts":1215994380000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"we have a 2GB string limit, other than that I think we're OK","msgtype":"m.text"},"ts":1215994740000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: I've been wanting to isolate mozilla's htmlparser to do speed tests with it, you don't know of anyone who's done something similar in the past do you?","msgtype":"m.text"},"ts":1215994800000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Hmph, there goes my plans for a microformat that embeds base-64 DVD rips in title attributes :-(","msgtype":"m.text"},"ts":1215994801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"chuckles","msgtype":"m.emote"},"ts":1215994860000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I know people have tried to do that, but I don't have any details worry","msgtype":"m.text"},"ts":1215994861000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1215994862000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ah, it was worth trying.  thanks :)","msgtype":"m.text"},"ts":1215994863000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"mrbkap might know","msgtype":"m.text"},"ts":1215994864000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"my guess is our parser is not all that fast, other than bugfixes it has not received enthusiastic maintenance for several years.","msgtype":"m.text"},"ts":1215994920000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1215994921000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I was going to have a play with it at some point and see if I could coax some more html5-style handling into it","msgtype":"m.text"},"ts":1215994980000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"probably in the autumn, though, if at all","msgtype":"m.text"},"ts":1215994981000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I would dearly love someone to come up with a super-fast from-scratch HTML5 parser that we could integrate :-)","msgtype":"m.text"},"ts":1215994982000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but mrbkap is the person to talk to about such things","msgtype":"m.text"},"ts":1215994983000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ok, I might have to do that later","msgtype":"m.text"},"ts":1215995160000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"he's working on html5 comment parsing in mozilla IIRC, right?","msgtype":"m.text"},"ts":1215995161000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"yeah, he is: https://bugzilla.mozilla.org/show_bug.cgi?id=214476","msgtype":"m.text"},"ts":1215995220000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"JohnResig_, another selectos api feature request. http://www.w3.org/Bugs/Public/show_bug.cgi?id=5864  If you know of or think of any other feature requests, particularly those that are already implemented in JS libraries, let me know","msgtype":"m.text"},"ts":1216001880000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: cool, thanks - I'll be sure to let you know","msgtype":"m.text"},"ts":1216002900000,"senderName":"JohnResig_","senderId":"JohnResig_@irc"},
{"content":{"body":"Geez, why won't some people listen when I say no and explain why :root cannot be redefined?! http://lists.w3.org/Archives/Public/www-style/2008Jul/0298.html","msgtype":"m.text"},"ts":1216023180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: you around?","msgtype":"m.text"},"ts":1216026720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yes, but you aren't","msgtype":"m.text"},"ts":1216029300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"reads the SVG WG's proposal","msgtype":"m.emote"},"ts":1216041480000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Hmm, Mozilla is not going re-use XMLHttpRequest for Workers? -- https://bugzilla.mozilla.org/show_bug.cgi?id=437152","msgtype":"m.text"},"ts":1216041600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, they want a case-preserving tokeniser","msgtype":"m.text"},"ts":1216042380000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"though I can't see why, since as soon as they hit an <svg xmlns=\"...\"> tag they hand it off to an XML processor anyway","msgtype":"m.text"},"ts":1216042381000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"they also have a paragraph about using SVG in <img> which is mostly entirely irrelevant","msgtype":"m.text"},"ts":1216042440000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"case-preserving the toeknizer helps with <svg viewBox=... xmlns=...>","msgtype":"m.text"},"ts":1216042500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tokenizer, even","msgtype":"m.text"},"ts":1216042501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that whole section about SVG integration with HTML is irrelevant","msgtype":"m.text"},"ts":1216042560000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it doesn't, since they want everything from \"<svg\" to be passed","msgtype":"m.text"},"ts":1216042561000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I think the issue is that they don't want <SVG xMLns=\"...\"> to do something","msgtype":"m.text"},"ts":1216042620000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it won't do the right thing anyway, because when it gets passed to the XML parser, the resulting tree will have no namespace or whatever","msgtype":"m.text"},"ts":1216042680000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"what they have is implementable, but I really object to having to deal with *:math and *:svg","msgtype":"m.text"},"ts":1216042920000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I guess I'm glad I'm going away for a few weeks while everyone else can have that discussion :)","msgtype":"m.text"},"ts":1216042980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1216042981000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"JohnResig_, yt?","msgtype":"m.text"},"ts":1216044000000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: yeah","msgtype":"m.text"},"ts":1216044001000,"senderName":"JohnResig_","senderId":"JohnResig_@irc"},
{"content":{"body":"just a quick question about http://docs.jquery.com/Traversing/filter#expr","msgtype":"m.text"},"ts":1216044002000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I don't understand the use cases for that.  How is the example given: $(\"p\").filter(\".selected\"); any different from $(\"p.selected\"); ?","msgtype":"m.text"},"ts":1216044060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: it's not any different - but it allows for 1) queries to $(\"p\") to be cached for later and 2) it allows you to manipulate $(\"p\") before performing a later filter, weening down the number of elements.","msgtype":"m.text"},"ts":1216044120000,"senderName":"JohnResig_","senderId":"JohnResig_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1216044121000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"document.forms.querySelector(\"#test\")","msgtype":"m.text"},"ts":1216044180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's the same reason we have .find(), .not() and others","msgtype":"m.text"},"ts":1216044181000,"senderName":"JohnResig_","senderId":"JohnResig_@irc"},
{"content":{"body":"I'll keep that in mind for the .matchesSelector() feature for selectors api 2","msgtype":"m.text"},"ts":1216044182000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"well, I'm sure I'll live to regret that","msgtype":"m.text"},"ts":1216049820000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"where is a good html5 validator?","msgtype":"m.text"},"ts":1216050060000,"senderName":"howardr","senderId":"howardr@irc"},
{"content":{"body":"http://validator.nu/","msgtype":"m.text"},"ts":1216050061000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1216050120000,"senderName":"howardr","senderId":"howardr@irc"},
{"content":{"body":"http://html5.validator.nu/ has the simple UI for that, fwiw","msgtype":"m.text"},"ts":1216050121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"takkaria: works for me :)","msgtype":"m.text"},"ts":1216050240000,"senderName":"jmb","senderId":"jmb@irc"},
{"content":{"body":"aargh! I really don't know how to respond to this? http://lists.w3.org/Archives/Public/www-style/2008Jul/0302.html","msgtype":"m.text"},"ts":1216059600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"How can I possibly make it any clearer that the answer is no and that's final, without being rude about it?","msgtype":"m.text"},"ts":1216059660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"just say :root has a different purpose","msgtype":"m.text"},"ts":1216059840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's :root so you can do :not(html):root > body > :context > a","msgtype":"m.text"},"ts":1216059841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I already that :root has a different purpose.","msgtype":"m.text"},"ts":1216059960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"might be worth repeating then, giving an example","msgtype":"m.text"},"ts":1216060020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I don't know when :root is ever useful, other than as a CSS hack to filter out browsers that don't support it.","msgtype":"m.text"},"ts":1216060200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"if it's not useful, why not reuse it then?","msgtype":"m.text"},"ts":1216060260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because it would require redefining it in Selectors, getting implementers to change their existing implementations of and and make sure that all implementers have changed it before they ship support for seletors api.","msgtype":"m.text"},"ts":1216060380000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and given the slow process, I'm not sure we could even get :context through before they ship selectors api","msgtype":"m.text"},"ts":1216060440000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it seems it would be a pretty trivial change to Selectors","msgtype":"m.text"},"ts":1216060441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":root either matches the \"context element\" or in case that is not defined the \"root element\"","msgtype":"m.text"},"ts":1216060500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plus, getting the CSS WG to agree to change an existing selector seems like it would be harder than introducing a new one. Plus, the name :root doesn't really make much sense when it doesn't have to be the root of the tree","msgtype":"m.text"},"ts":1216060501000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's the root of the tree you're interested in...","msgtype":"m.text"},"ts":1216060502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. \"body :root div\" would work, but that's clearly not the root of any tree.","msgtype":"m.text"},"ts":1216060503000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's the root of the context tree","msgtype":"m.text"},"ts":1216060560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"having the CSS WG make changes to a single paragraph seems easier than the effort required to put out a new draft","msgtype":"m.text"},"ts":1216060561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a new spec, I mean","msgtype":"m.text"},"ts":1216060562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that depends. The context element may be at the bottom of the tree, depending what it's used for. e.g. for the possible matchesSelector() method, foo.matchesSelector(\"div>:context\") isn't at the root of a tree.","msgtype":"m.text"},"ts":1216060620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I don't know how matchesSelector is supposed to work","msgtype":"m.text"},"ts":1216061040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for the proposals currently on the table :root can work and I think it might be easier to introduce than :context","msgtype":"m.text"},"ts":1216061160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it will work. matchesSelector() returns true or false depending on whether the element matches or not.","msgtype":"m.text"},"ts":1216061400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"for that case you don't want :context","msgtype":"m.text"},"ts":1216061460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and :root can just match the root element","msgtype":"m.text"},"ts":1216061461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what? why wouldn't that case want :context?","msgtype":"m.text"},"ts":1216061580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"why would it?","msgtype":"m.text"},"ts":1216061581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how is :context different from *?","msgtype":"m.text"},"ts":1216061640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in that particular case, it probably makes no difference","msgtype":"m.text"},"ts":1216061641000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"What if it's div > :context > span?","msgtype":"m.text"},"ts":1216061700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"but I still don't get how the name :root fits the purpose of this selector anyway.","msgtype":"m.text"},"ts":1216061701000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Dashiva, that would never match the :context element itself","msgtype":"m.text"},"ts":1216061702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it could match something or nothing","msgtype":"m.text"},"ts":1216061760000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Lachy, are you bikeshedding over a name?","msgtype":"m.text"},"ts":1216061761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I'm just trying to stop others from arguing with me over the name I chose.","msgtype":"m.text"},"ts":1216061820000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Dashiva, sure, but that's besides the point of matchesSelector","msgtype":"m.text"},"ts":1216061821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"becuase :root doesn't work or make sense","msgtype":"m.text"},"ts":1216061822000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, I don't think you've shown that :root doesn't work","msgtype":"m.text"},"ts":1216061823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I clearly did.","msgtype":"m.text"},"ts":1216061824000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"you did?","msgtype":"m.text"},"ts":1216061880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I figured it was a \"Is the hassle and incompatability from redefining :root worse than the hassle from defining :context\" thing","msgtype":"m.text"},"ts":1216061881000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yes. and neither you nor Brad or Andrew on www-style have put forth convincing arguments for why :root should be reused.","msgtype":"m.text"},"ts":1216061940000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'd appreciate a pointer to evidence","msgtype":"m.text"},"ts":1216061941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see www-style","msgtype":"m.text"},"ts":1216061942000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I read www-style","msgtype":"m.text"},"ts":1216061943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":root seems easier to fit to this new purpose and doesn't really have a use without it anyway","msgtype":"m.text"},"ts":1216062000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-style/2008Jul/0299.html","msgtype":"m.text"},"ts":1216062001000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and the name works good enough","msgtype":"m.text"},"ts":1216062002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(that e-mail is marked as visited)","msgtype":"m.text"},"ts":1216062003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so re-read it.","msgtype":"m.text"},"ts":1216062004000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's confusing because if it's redefined, then in scoped stylesheets it will allow things like <style scoped>body.foo :root>div { ... }</style>, and that doesn't make sense cause it's not the root element.","msgtype":"m.text"},"ts":1216062060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I just did, I don't think your arguments are compelling","msgtype":"m.text"},"ts":1216062061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure they are, you're being silly.","msgtype":"m.text"},"ts":1216062120000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that doesn't really seem productive","msgtype":"m.text"},"ts":1216062121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If people are not compelled by the arguments, clearly the arguments are not compelling","msgtype":"m.text"},"ts":1216062180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm not being compelled by their arguments either","msgtype":"m.text"},"ts":1216062181000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Sounds like a job for... consensus-man","msgtype":"m.text"},"ts":1216062182000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I suggest dice","msgtype":"m.text"},"ts":1216062240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so far, the only reason put forth has been \":root is mostly useless, so let's just redefine it to something that doesn't make sense\"","msgtype":"m.text"},"ts":1216062241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"--> not a compelling argument!","msgtype":"m.text"},"ts":1216062242000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I said that it was easier to redefine :root than to introduce a new pseudo-class as a separate specification","msgtype":"m.text"},"ts":1216062300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, the way you phrase the \"only reason\" is clearly way to biased to your own opinion for third parties to draw conclusions from","msgtype":"m.text"},"ts":1216062360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: Acid3 doesn't think Mac IE 5.1 has javascript  :(","msgtype":"m.text"},"ts":1216062361000,"senderName":"bradee-oh","senderId":"bradee-oh@irc"},
{"content":{"body":"annevk, of course. We don't want third parties mistakenly beleiving your arguments are in any way compelling. :-)","msgtype":"m.text"},"ts":1216062362000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I also think reusing :root makes sense and I actually believe that re-using :root for scoped style sheets was part of the original goals having talked to glazou","msgtype":"m.text"},"ts":1216062420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though I may recall incorrectly","msgtype":"m.text"},"ts":1216062421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to make a more compelling case for :context","msgtype":"m.emote"},"ts":1216063500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders how many times annevk is going to keep apologising for adding NSResolver to selectors api","msgtype":"m.emote"},"ts":1216064400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ok, so what should I make this feature string be? hasFeature(\"Selectors-API\", \"1.0\");? Do I need to distinguish between implementations that choose to support NSResolver and those that don't?","msgtype":"m.text"},"ts":1216064520000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(I don't want to, I want to keep it as simple as possible)","msgtype":"m.text"},"ts":1216064521000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, as long as it takes for someone to kill it","msgtype":"m.text"},"ts":1216064580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the whole concept of it, that is","msgtype":"m.text"},"ts":1216064581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you should make either NSResolver or the replacement namespace resolution feature non-optional","msgtype":"m.text"},"ts":1216064640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"optional features suck","msgtype":"m.text"},"ts":1216064641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but in general I agree on only one feature string","msgtype":"m.text"},"ts":1216064700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I agree that the namespace feature should never have been made optional","msgtype":"m.text"},"ts":1216064760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it should just have been removed","msgtype":"m.text"},"ts":1216064761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, the only reason I made it optional was because IE8 refuses to ship with support for the NSResolver, and I wanted to at least define sensible behaviour for them.","msgtype":"m.text"},"ts":1216064762000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so could I make it required, and still say that if implementations still don't support it, that they should show a NOT_SUPPORTED_ERR anyway?","msgtype":"m.text"},"ts":1216064820000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"annevk, I would have removed it, but Mozilla wants it.","msgtype":"m.text"},"ts":1216064821000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that's optional","msgtype":"m.text"},"ts":1216064822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"removing would have been ok too","msgtype":"m.text"},"ts":1216064880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Mozilla is not the only player and so far they haven't really put forward any compelling cases","msgtype":"m.text"},"ts":1216064881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"saying what to do if you violate a requirement of the spec seems pointless","msgtype":"m.text"},"ts":1216064882000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if I remove it and they still ship, then we're stuck with having to define whatever they ship with.","msgtype":"m.text"},"ts":1216064883000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"again, Mozilla is not the only player","msgtype":"m.text"},"ts":1216064940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if content starts depending on the resolver part of the feature, then it's not really optional","msgtype":"m.text"},"ts":1216064941000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you're not saying we're stuck with defining what Microsoft ships with","msgtype":"m.text"},"ts":1216064942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, good point.","msgtype":"m.text"},"ts":1216064943000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"if content does not depend on it, then it doesn't matter what Mozilla ships with","msgtype":"m.text"},"ts":1216064944000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok. Please raise these arguments on the mailing list and I'll deal with it tomorrow.","msgtype":"m.text"},"ts":1216065060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej, you made a reasonably good case to use :scope.","msgtype":"m.text"},"ts":1216065061000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"should I still refer to it in the spec as the \"context element\" (or contextual reference element that I have in my local draft), or find a more appriate name that aligns with :scope?","msgtype":"m.text"},"ts":1216065180000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"scope element\"","msgtype":"m.text"},"ts":1216065181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1216065182000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'll update it now and send in a new copy.","msgtype":"m.text"},"ts":1216065183000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"surprisingly, my naming debate entry seems to be more productive than most of the other content on the thread","msgtype":"m.text"},"ts":1216065184000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"LOL :-D","msgtype":"m.text"},"ts":1216065240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Bjoern and Hixie's comments were also productive","msgtype":"m.text"},"ts":1216065241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'm still waiting for a clarification from Bert, cause I didn't understand where he was coming from.","msgtype":"m.text"},"ts":1216065300000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie: FWIW, I agree with Julian (sp?) about the requirement for an opaque HTTP-like string for WebSockets","msgtype":"m.text"},"ts":1216073760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: annevk says https://bugzilla.mozilla.org/show_bug.cgi?id=445166 is invalid per html5. is that intentional on your part?","msgtype":"m.text"},"ts":1216073880000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"someone should fix XML instead","msgtype":"m.text"},"ts":1216073940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jruderman: to answer on behalf of Hixie, it's because you can't rely upon external DOCTYPEs being read by XML processors, thereby meaning there's no point in allowing any entities as they can't be relied upon","msgtype":"m.text"},"ts":1216073941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"fixing all the APIs around it doesn't scale long term","msgtype":"m.text"},"ts":1216073942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jruderman: (beyond those that are defined in XML itself)","msgtype":"m.text"},"ts":1216073943000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"how about just including the same entities that HTML includes?","msgtype":"m.text"},"ts":1216073944000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"jruderman: See above. That needs a DOCTYPE.","msgtype":"m.text"},"ts":1216074000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"in all of XML or just for innerHTML?","msgtype":"m.text"},"ts":1216074001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(note that HTML now has over 2000 entities)","msgtype":"m.text"},"ts":1216074002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for innerHTML it'd be silly to make it different to normal XML","msgtype":"m.text"},"ts":1216074003000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well, that's one POV","msgtype":"m.text"},"ts":1216074060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"increasing compatibility between text/html and application/xhtml+xml isn't silly","msgtype":"m.text"},"ts":1216074061000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"They'll always have to be incompatible though. There's no point in pretending the two are.","msgtype":"m.text"},"ts":1216074120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it seems better to change XML to get more predefined entities, but that may be a hard battle","msgtype":"m.text"},"ts":1216074180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: which requirement? (re websocket)","msgtype":"m.text"},"ts":1216074181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jruderman: yes, it is intended to work the same way as any xml content (that doesn't declare a dtd)","msgtype":"m.text"},"ts":1216074240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"Read the first 85 bytes from the server. If the connection closes before 85 bytes are received, or if the first 85 bytes aren't exactly equal to the following bytes, then fail the Web Socket connection and abort these steps.\" for one","msgtype":"m.text"},"ts":1216074300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Yeah, in some ways we need that for RSS (people just blindingly using HTML content without escaping it, often just causing errors purely because of entities)","msgtype":"m.text"},"ts":1216074301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's called XML5, but only has blog traction","msgtype":"m.text"},"ts":1216074360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: what's wrong with that?","msgtype":"m.text"},"ts":1216074361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That was on the list of things to help with over the summer, annevk, but too far down to be reached, I suspect","msgtype":"m.text"},"ts":1216074362000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: I'll send a long email once I get home, but I mostly agree with Julian until then :)","msgtype":"m.text"},"ts":1216074363000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, but bear in mind that the main requirement from me is that the handshake be resilient","msgtype":"m.text"},"ts":1216074420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, sure","msgtype":"m.text"},"ts":1216074421000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"leaving holes in the handshake through which you can pass inconvenient material wouldn't work","msgtype":"m.text"},"ts":1216074422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i am in fact disappointed as to how much flexibility we already have","msgtype":"m.text"},"ts":1216074423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jesus, the svgwg's proposal is longer than the entire checkin i made to support svg","msgtype":"m.text"},"ts":1216074600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"apparently it addresses more than just the syntax issue","msgtype":"m.text"},"ts":1216074660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"link?","msgtype":"m.text"},"ts":1216074720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"public-html","msgtype":"m.text"},"ts":1216074780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-html/2008Jul/att-0179/svg-html-proposal.html","msgtype":"m.text"},"ts":1216074781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"feedback from apple would be very interesting and would inform my response","msgtype":"m.text"},"ts":1216074782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the entire section \"Use of SVG Resources in HTML and CSS\" is irrelevant and should be dropped","msgtype":"m.text"},"ts":1216074900000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah it has nothing to do with this topic","msgtype":"m.text"},"ts":1216074960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I do not uinderstand the effect of the tokenizer changes","msgtype":"m.text"},"ts":1216074961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"*understand","msgtype":"m.text"},"ts":1216074962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"takkaria commented on that already","msgtype":"m.text"},"ts":1216074963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well one big effect is killing performance","msgtype":"m.text"},"ts":1216074964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen_ told me before going on vacation that he strongly objected to anything that involved making the tokeniser case-preserving because it would just kill his performance by order(s) of magnitude","msgtype":"m.text"},"ts":1216075020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure what they are meant to do","msgtype":"m.text"},"ts":1216075021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"are they trying to implement XML parsing in the HTML tokenizer formalism?","msgtype":"m.text"},"ts":1216075022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Why would that kill perf. though? Surely it's just a question of where you do the case-normalisation?","msgtype":"m.text"},"ts":1216075080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I actually doubt that it would kill performance","msgtype":"m.text"},"ts":1216075081000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"anyone who wants to round-trip HTML source (we do) will have to preserve case somewhere anyway","msgtype":"m.text"},"ts":1216075140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"gsnedders, if you create an integer for the element during tokenization to match on during tree building it would be quite different if tokenization required preserving case","msgtype":"m.text"},"ts":1216075141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"his problem is that he normalises all strings to IDs, and having to do his normalisation in different ways for different tokens is crazy, as i understand it","msgtype":"m.text"},"ts":1216075200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1216075201000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"he does case-preserving for roundtripping by remembering indexes into the original source","msgtype":"m.text"},"ts":1216075202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which bypasses the entire problem","msgtype":"m.text"},"ts":1216075203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then he can use that info to do the case-sensitive comparisons the SVG people want","msgtype":"m.text"},"ts":1216075204000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you have to do this for every single token","msgtype":"m.text"},"ts":1216075260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"WebKit makes no effort to preserve case when parsing text/html","msgtype":"m.text"},"ts":1216075320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it's certainly not the case that everyone has to preserve case someday","msgtype":"m.text"},"ts":1216075380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the html and xml parsers both intern atoms for tag names, either converting to lowercase or preserving case","msgtype":"m.text"},"ts":1216075381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"would probably be a hassle to change that decision to be made late","msgtype":"m.text"},"ts":1216075382000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"instead of determined by whether it is the html or xml tokenizer","msgtype":"m.text"},"ts":1216075440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if that is indeed required","msgtype":"m.text"},"ts":1216075441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that appears to be what is required","msgtype":"m.text"},"ts":1216075442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i haven","msgtype":"m.text"},"ts":1216075443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"'t studied it in detail yet","msgtype":"m.text"},"ts":1216075444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and do not have an opinion of my own at this time","msgtype":"m.text"},"ts":1216075445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since they require parsing using an XML parser for the bits where it matters it seems to be a performance optimization at \"best\"","msgtype":"m.text"},"ts":1216075500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"their ideas for fallback mechanisms both don't work","msgtype":"m.text"},"ts":1216075501000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"seems to me the only place where case-sensitivity *matters* is the case-sensitive check for math/svg tag names and \"xmlns\" attribute","msgtype":"m.text"},"ts":1216075502000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(at least as proposals for fallback in the current generation of UAs)","msgtype":"m.text"},"ts":1216075503000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wait where does the xml parser fall into this","msgtype":"m.text"},"ts":1216075560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the bit that says \"Create a new XML parser\"?","msgtype":"m.text"},"ts":1216075620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"woah","msgtype":"m.text"},"ts":1216075621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that's not going to fly","msgtype":"m.text"},"ts":1216075622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have a requirement that you be able to implemnt html5 without an xml parser","msgtype":"m.text"},"ts":1216075623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1216075624000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"because having to have two parsers just to poke at some microformats is a little excessive","msgtype":"m.text"},"ts":1216075680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"eh","msgtype":"m.text"},"ts":1216075681000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"all browsers are going to have XML parsers in them","msgtype":"m.text"},"ts":1216075740000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"most platforms have one","msgtype":"m.text"},"ts":1216075741000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"browsers aren't the only implementations of html5","msgtype":"m.text"},"ts":1216075742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in fact right now they're in the minority :-)","msgtype":"m.text"},"ts":1216075743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like I said, most platforms have one","msgtype":"m.text"},"ts":1216075744000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: and drop support for DOS?","msgtype":"m.text"},"ts":1216075745000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"It doesn't seem like it'd be that infeasible to implement an XML-fragment (minus doctype etc) parser as an extra HTML5 tree constructor mode","msgtype":"m.text"},"ts":1216075746000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that's probably how i would spec it if we did this","msgtype":"m.text"},"ts":1216075800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that seems like a lot of excess work for no good benefit","msgtype":"m.text"},"ts":1216075801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do they handle xml parse errors?","msgtype":"m.text"},"ts":1216075860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i should read this thing","msgtype":"m.text"},"ts":1216075861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see why they actually need to make tokenization case-sensitive","msgtype":"m.text"},"ts":1216075862000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Someone suggested it was because they didn't want <SVG XMLNS in their lap","msgtype":"m.text"},"ts":1216075920000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"their proposal for XML parse errors seems to be, when you hit one you close all open XML element and resume parsing as HTML at the same character position","msgtype":"m.text"},"ts":1216075921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which seems like a weird compromise between draconian and tolerant","msgtype":"m.text"},"ts":1216075922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Dashiva: they wouldn't get it that, because that wouldn't render anything","msgtype":"m.text"},"ts":1216075923000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"The XML parser  would create an <SVG> element with no namespace, and the author tries again","msgtype":"m.text"},"ts":1216075980000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"they require <a> in svg to be written <svg:a>","msgtype":"m.text"},"ts":1216075981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as i understand it","msgtype":"m.text"},"ts":1216075982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this proposal seems to somewhat fail to achieve the goal maciej put forward","msgtype":"m.text"},"ts":1216076040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of providing for svg the same level of author-friendliness as html has","msgtype":"m.text"},"ts":1216076041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that goal is 100% incompatible with the SVG WG's goal of strict XML parsing","msgtype":"m.text"},"ts":1216076100000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1216076101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yay! simple consensus!","msgtype":"m.text"},"ts":1216076102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wait, this proposal requires html in svg to be marked up as xhtml, too","msgtype":"m.text"},"ts":1216076160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh yuk.","msgtype":"m.text"},"ts":1216076280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"last thing I read about that was to embed text/html HTML through CDATA or something, similar to Atom","msgtype":"m.text"},"ts":1216076340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't like it too much","msgtype":"m.text"},"ts":1216076341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think that's really a big deal","msgtype":"m.text"},"ts":1216076400000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"CDATA? For real?","msgtype":"m.text"},"ts":1216076401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this proposal would also totally break this page http://www.laroseweb.com/calcs/fans.php","msgtype":"m.text"},"ts":1216076402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It works, sure, and it would be compat. with SVG/XML, but it seems illogical within HTML","msgtype":"m.text"},"ts":1216076403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it would knock out the stylesheet and the script","msgtype":"m.text"},"ts":1216076460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"many things make HTML in <foreignObject> less than ideal","msgtype":"m.text"},"ts":1216076461000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie, it would fail on &mathml;","msgtype":"m.text"},"ts":1216076520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, true","msgtype":"m.text"},"ts":1216076521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: I guess HTML in <foreignObject> will be one of the most useful features if the syntax doesn't suck so much that no one can get it right","msgtype":"m.text"},"ts":1216076580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it really only works for fixed-size objects","msgtype":"m.text"},"ts":1216076581000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"aren't most of the HTML in <foreignObject> cases addressed by SVG effects through CSS?","msgtype":"m.text"},"ts":1216076582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1216076640000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"one of the main goals of SVG effects through CSS is to get around the fact that <foreignObject> prevents reasonable layout","msgtype":"m.text"},"ts":1216076641000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I would expect SVG in HTML to be mostly used for iconic images and logos","msgtype":"m.text"},"ts":1216076642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"diagrams","msgtype":"m.text"},"ts":1216076643000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if you want to send a diagram in email it's going to be the only way","msgtype":"m.text"},"ts":1216076644000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1216076760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't really have an opinion either way on how to do svg-in-html; even implenting an xml fragment parser in the html parsing algorithm wouldn't be that much of a code burden","msgtype":"m.text"},"ts":1216076940000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"it wouldn't be great, but it's doable","msgtype":"m.text"},"ts":1216077000000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"would it be more work than what you have so far?","msgtype":"m.text"},"ts":1216077001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I very much doubt it, really","msgtype":"m.text"},"ts":1216077002000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"it just multiplies the number of testcases needlessly, I guess","msgtype":"m.text"},"ts":1216077060000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"does anyone know any good irc channels on js?","msgtype":"m.text"},"ts":1216077240000,"senderName":"howardr","senderId":"howardr@irc"},
{"content":{"body":"I would much prefer just making sure implementations can export the SVG tree as well-formed XML, really, because that seems like by far the least effort on anyone's part","msgtype":"m.text"},"ts":1216077241000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"irc.mozilla.org has #js, not sure if it's good :-)","msgtype":"m.text"},"ts":1216077242000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(though I'm just repeating what I said in my reply now, so I'll go back to fixing my parser...)","msgtype":"m.text"},"ts":1216077300000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"howardr: #javascript on efnet","msgtype":"m.text"},"ts":1216077301000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1216077420000,"senderName":"howardr","senderId":"howardr@irc"},
{"content":{"body":"Any feelings on handling of <!--begin-toc--><em>foo<!--end-toc-->bar?","msgtype":"m.text"},"ts":1216078200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"a comment in the middle of a word? :-P","msgtype":"m.text"},"ts":1216078201000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"(with regards to the spec-gen, that is)","msgtype":"m.text"},"ts":1216078202000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I feel like throwing a fatal error if the start and end comments don't have the same parent","msgtype":"m.text"},"ts":1216078260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, just do whatever is easiest for weird stuff","msgtype":"m.text"},"ts":1216078440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(until we complain :) )","msgtype":"m.text"},"ts":1216078441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, either I just let the behaviour be weird (everything after until the em tag closes vanishes), or I just throw a fatal error","msgtype":"m.text"},"ts":1216079280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think the latter behaviour is more desirable","msgtype":"m.text"},"ts":1216079340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"anyhow, g'nite","msgtype":"m.text"},"ts":1216079341000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]