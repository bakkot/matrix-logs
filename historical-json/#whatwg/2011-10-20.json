[
{"content":{"body":"what's an example of a url that can't be parsed even given the parsing rules in html?","msgtype":"m.text"},"ts":1319070720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"::\"?","msgtype":"m.text"},"ts":1319070780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, browsers parse that...","msgtype":"m.text"},"ts":1319070840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"going in circles with joao and not sure why","msgtype":"m.text"},"ts":1319072280000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1319074080000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Hixie, yeah, concept-event is the preferred way of talking about Event or something that inherits from it","msgtype":"m.text"},"ts":1319074081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in CSS2.1 spec, why A is defined like this:","msgtype":"m.text"},"ts":1319074082000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"A  a|\\\\0{0,4}(41|61)(\\r\\n|[ \\t\\r\\n\\f])?","msgtype":"m.text"},"ts":1319074083000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"while Z is defined like this:","msgtype":"m.text"},"ts":1319074084000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"Z  z|\\\\0{0,4}(5a|7a)(\\r\\n|[ \\t\\r\\n\\f])?|\\\\z","msgtype":"m.text"},"ts":1319074085000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"the difference is the last part, why '\\\\z' should be treated as Z but '\\\\a' might not be treated as A?","msgtype":"m.text"},"ts":1319074140000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"124\\\\cm is a valid LENGTH token, while 124c\\\\m is not?","msgtype":"m.text"},"ts":1319074320000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"annevk: ah, because of the inheritance, ok","msgtype":"m.text"},"ts":1319074321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: it would be helpful imho if the dom core spec said that somewhere","msgtype":"m.text"},"ts":1319074322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i thought they were different (the way \"text track\" and \"TextTrack\" are different)","msgtype":"m.text"},"ts":1319074323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, \"text track\" being the concept and \"TextTrack\" exposing it?","msgtype":"m.text"},"ts":1319074500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it's pretty similar, but I'll make a clarification","msgtype":"m.text"},"ts":1319074501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gah","msgtype":"m.text"},"ts":1319074920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the semantic web guys have a way of thinking that is so utterly foreign to me it's mind blowing","msgtype":"m.text"},"ts":1319074980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: something in particular you reading at the moment?","msgtype":"m.text"},"ts":1319075640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bug report?","msgtype":"m.text"},"ts":1319075641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess for http://html5.org/r/6707 the pedant way would currently be /event listeners/ whose /capture/ variable is false","msgtype":"m.text"},"ts":1319075700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we should probably make it a \"capture flag\" given that it's a boolean, but that would actually make defining it more verbose","msgtype":"m.text"},"ts":1319075760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, fwiw, \"DOM Range\" is gone and part of DOM4 now","msgtype":"m.text"},"ts":1319075761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have done some testing and it turns out that chars from 'a' to 'f' might not be escaped with '\\' in CSS","msgtype":"m.text"},"ts":1319075880000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"why is it so?","msgtype":"m.text"},"ts":1319075881000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"because \\ is also used for Unicode character escapes","msgtype":"m.text"},"ts":1319075940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is it allowed to have Unicode character escapes *anywhere* in the stylesheets?","msgtype":"m.text"},"ts":1319076120000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"pretty much","msgtype":"m.text"},"ts":1319076121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought those were allowed only inside strings","msgtype":"m.text"},"ts":1319076122000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"no CSS is crazy","msgtype":"m.text"},"ts":1319076180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they did not go with simplest syntax possible","msgtype":"m.text"},"ts":1319076181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's going to complicate tokenizer implementation :/","msgtype":"m.text"},"ts":1319076182000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"oh yes","msgtype":"m.text"},"ts":1319076183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's why at-rules are defined as @{N}{A}{M} etc.","msgtype":"m.text"},"ts":1319076184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"each of those characters can be escaped","msgtype":"m.text"},"ts":1319076240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1319076241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because crazy","msgtype":"m.text"},"ts":1319076242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I have an idea","msgtype":"m.text"},"ts":1319076243000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I will run the stylesheet through a processor that converts all escapes into regular signs before tokenization","msgtype":"m.text"},"ts":1319076244000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"it's also lame that comments are allowed everywhere, even between '!' and 'important'","msgtype":"m.text"},"ts":1319076300000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"what was the point of that?","msgtype":"m.text"},"ts":1319076301000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"is something like '! /* this is important flag*/ !important' really needed?","msgtype":"m.text"},"ts":1319076360000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"even -/**/2em","msgtype":"m.text"},"ts":1319076960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there is no point","msgtype":"m.text"},"ts":1319076961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's just how that tokenizer language works to some extent I believe","msgtype":"m.text"},"ts":1319076962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we can still get away with making it much much simpler, but nobody is really interested in it I guess","msgtype":"m.text"},"ts":1319077020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the task force","msgtype":"m.text"},"ts":1319079240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1319079241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: jeni dragged me into some thread about multiple types","msgtype":"m.text"},"ts":1319079242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: so i asked what the use case was","msgtype":"m.text"},"ts":1319079300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: and basically the answer was \"hope\"","msgtype":"m.text"},"ts":1319079301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1319079302000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think somebody filed a spec bug about that yesterday","msgtype":"m.text"},"ts":1319079303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"we're publishing data because we hope one day it'll be used, and we need multiple types because we're trying to use as many types as possible\"","msgtype":"m.text"},"ts":1319079304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you want a bug on removing DOMRANGE?","msgtype":"m.text"},"ts":1319079305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: send mail","msgtype":"m.text"},"ts":1319079306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: trying to get bugs to zero so i can get back to mail, i'm way behind on mail :-)","msgtype":"m.text"},"ts":1319079307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"course this means that right now if you file a bug it'll get done faster :-)","msgtype":"m.text"},"ts":1319079360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like removing an obsolete reference is high priority :)","msgtype":"m.text"},"ts":1319079480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1319079481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"god","msgtype":"m.text"},"ts":1319080560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sometimes I wonder why I even bother trying to get people their API design correct","msgtype":"m.text"},"ts":1319080561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fighting the fight","msgtype":"m.text"},"ts":1319080562000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and at the same time take a lot of flack for not having constructors in the DOM","msgtype":"m.text"},"ts":1319080563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's this urge in people that says \"you know, I know better than all these other guys, lets do the API this way\" and many web developer kittens die","msgtype":"m.text"},"ts":1319080680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh, i prefer python's design--there are no constructors and everything's just a factory","msgtype":"m.text"},"ts":1319080681000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but this person does not think about the kittens","msgtype":"m.text"},"ts":1319080682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only about his own sense of style","msgtype":"m.text"},"ts":1319080683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this was not about the constructors btw, I think we should have more of them","msgtype":"m.text"},"ts":1319080684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this was about having constants for strings, which are intrinsically meaningful","msgtype":"m.text"},"ts":1319080740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I know how to solve this, remove string constants from IDL","msgtype":"m.text"},"ts":1319080741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does anyone know off the top of their head what spec box-sizing appears in?","msgtype":"m.text"},"ts":1319086740000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins: http://www.w3.org/TR/css3-ui/#box-sizing0","msgtype":"m.text"},"ts":1319086860000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"TabAtkins: I use this site for finding where the properties come from: http://meiert.com/en/indices/css-properties/","msgtype":"m.text"},"ts":1319086861000,"senderName":"jarek","senderId":"jarek@irc"},
{"content":{"body":"I wonder if the people talking about querySelector realize that you cannot simply substring on \":scope\"","msgtype":"m.text"},"ts":1319090700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still seems like a bad idea to me to design it in a way that does not look at the entire tree","msgtype":"m.text"},"ts":1319090760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If A inherits from B, B is a ??? of A","msgtype":"m.text"},"ts":1319091300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(with respect to interfaces)","msgtype":"m.text"},"ts":1319091301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh well, went with verbosity instead","msgtype":"m.text"},"ts":1319091480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"B is a superclass","msgtype":"m.text"},"ts":1319091660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or I guess superinterface, if A and B are interfaces?","msgtype":"m.text"},"ts":1319091661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"I can't believe the politics involved in the OWL for JSON mailing list.\" didn't know there was such a thing","msgtype":"m.text"},"ts":1319092440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess I don't want to know more","msgtype":"m.text"},"ts":1319092441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, btw, given the arguments in the Web Intents thread, Microdata really should use simple string identifiers as well...","msgtype":"m.text"},"ts":1319093880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"too late now I guess","msgtype":"m.text"},"ts":1319093940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"simple string identifiers for what?","msgtype":"m.text"},"ts":1319093941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"instead of \"http://schema.org/Blog\" we should just have \"blog\"","msgtype":"m.text"},"ts":1319093942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and if Example wants his own blog, they could have \"example-blog\" or some such","msgtype":"m.text"},"ts":1319094000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because in the end, only a few vocabularies will be supported","msgtype":"m.text"},"ts":1319094060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well we can still do that i guess","msgtype":"m.text"},"ts":1319094061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since while the syntax says they're urls, they aren't resolved and they are treated as opaque","msgtype":"m.text"},"ts":1319094062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the API currently drops non-URL values","msgtype":"m.text"},"ts":1319094063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still, i don't think it's a big deal","msgtype":"m.text"},"ts":1319094120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the microdata feature is explicitly intended to be used for lots of vocabs","msgtype":"m.text"},"ts":1319094121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess, but simple strings scale too, or simple strings with a prefix","msgtype":"m.text"},"ts":1319094180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but then I have a hard time seeing a lot of people taking the effort to use all this additional markup so I don't really feel that strongly about making it simple","msgtype":"m.text"},"ts":1319094240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, we could have gone with the rel=\"\" approach as well","msgtype":"m.text"},"ts":1319094300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1319094301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"best to let it be","msgtype":"m.text"},"ts":1319094302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess if in like 5 years only schema.org is adopted we can just alias what they have and make it simple for the masses","msgtype":"m.text"},"ts":1319094360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"experiment a bit more first","msgtype":"m.text"},"ts":1319094361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=14516 I wish the IETF held to the same values","msgtype":"m.text"},"ts":1319099040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, per my non-scientific twitter survey, it seems web developers would like markup literals","msgtype":"m.text"},"ts":1319099880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only negative responses thus far were from Arve (says it might break text editors) and glazou (no reason given)","msgtype":"m.text"},"ts":1319099881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E4X!","msgtype":"m.text"},"ts":1319100180000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"annevk: is that something people are asking for?","msgtype":"m.text"},"ts":1319100420000,"senderName":"frank_salim","senderId":"frank_salim@irc"},
{"content":{"body":"annevk: the thing I don't like is that people will try to copy/paste stuff around, and there are all kinds of edge cases that will break","msgtype":"m.text"},"ts":1319100600000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"and the result will be confusion","msgtype":"m.text"},"ts":1319100660000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"things that are conceptually strings should have some delimiters :)","msgtype":"m.text"},"ts":1319100661000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"they are not conceptually strings","msgtype":"m.text"},"ts":1319100780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's not really clear to me that using strings instead of constants is better btw. Apart from the feature detection issue, constants work better with IDEs for autocompletion","msgtype":"m.text"},"ts":1319100840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, so you would prefer people type responseType = XMLHttpRequest.RESPONSE_JSON rather than responseType = \"json\"","msgtype":"m.text"},"ts":1319100900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: People who use IDEs might prefer the latter certainly","msgtype":"m.text"},"ts":1319100901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I find the IDE argument not really compelling","msgtype":"m.text"},"ts":1319100902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"er former","msgtype":"m.text"},"ts":1319100903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Any particular reason?","msgtype":"m.text"},"ts":1319100960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we *could* have both (making the constant return a string)","msgtype":"m.text"},"ts":1319100961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it makes the code a whole lot harder to read; the only benefit seems to be that it makes it easier to integrate it with existing tools","msgtype":"m.text"},"ts":1319100962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, it would return a string","msgtype":"m.text"},"ts":1319100963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it is harder to read","msgtype":"m.text"},"ts":1319101020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1319101021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It is a bit ugly","msgtype":"m.text"},"ts":1319101022000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But totally comprehensible","msgtype":"m.text"},"ts":1319101023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's extremely ugly and verbose","msgtype":"m.text"},"ts":1319101024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could write x.responseType = x.RESPONSE_JSON also","msgtype":"m.text"},"ts":1319101025000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In the average js library this is a molecule in a drop in the ocean in terms of the difficulty of understanding what the code does","msgtype":"m.text"},"ts":1319101080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan, doesn't really make a difference","msgtype":"m.text"},"ts":1319101081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, if it's in a library there's even less need for constants","msgtype":"m.text"},"ts":1319101082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes it a bit shorter and less ugly","msgtype":"m.text"},"ts":1319101083000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, because you'd just do requestJson(url) or some such","msgtype":"m.text"},"ts":1319101084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: By \"library\" I just meant \"body of code\"","msgtype":"m.text"},"ts":1319101140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, it seems people developing large libraries care a lot about brevity still","msgtype":"m.text"},"ts":1319101200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, ask e.g. Alex Russell","msgtype":"m.text"},"ts":1319101201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(it is also quite nice to have clear rules about case; everyone knows that constants are always uppercase whereas JSON could be spelt  \"json\" or \"JSON\" and so could \"2d\" vs \"3D\")","msgtype":"m.text"},"ts":1319101202000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway if you feel like making a case for constants go ahead :)","msgtype":"m.text"},"ts":1319101203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Alex Russel seems to be about 50% troll so I have difficulty taking him seriously","msgtype":"m.text"},"ts":1319101260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*russell","msgtype":"m.text"},"ts":1319101261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I always have the feeling you are about 50% or more against every idea mentioned; still try to take you seriously though :)","msgtype":"m.text"},"ts":1319101320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1319101321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure that's true","msgtype":"m.text"},"ts":1319101322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although about 50% of the things that I thought were really good ideas turned out to not be :)","msgtype":"m.text"},"ts":1319101380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie, is there some construct for tasks to have conditions?","msgtype":"m.text"},"ts":1319102520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, like do this task unless something got cancelled along the way?","msgtype":"m.text"},"ts":1319102580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's funny though how people suddenly jump up to support string constants while there was never a single suggestion for them for either the <canvas> API or XMLHttpRequest","msgtype":"m.text"},"ts":1319102760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is the reason asking forgiveness is so much better","msgtype":"m.text"},"ts":1319102820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I find the canvas thing moderately annoying","msgtype":"m.text"},"ts":1319102821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and don't follow XHR much","msgtype":"m.text"},"ts":1319102822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So my experience suggests that no-constants doesn't work that well","msgtype":"m.text"},"ts":1319102823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You use an IDE?","msgtype":"m.text"},"ts":1319102880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nope","msgtype":"m.text"},"ts":1319102881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it really took me a while to remember whether it should be \"2d\" or \"2D\"","msgtype":"m.text"},"ts":1319102882000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh that string","msgtype":"m.text"},"ts":1319102940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"enums of that kind should simply always be lowercase","msgtype":"m.text"},"ts":1319102941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"simple enough","msgtype":"m.text"},"ts":1319102942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, but different from either other named constants or the normal english usage of \"2D\"","msgtype":"m.text"},"ts":1319103060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is there a browser where HTML is still fast?","msgtype":"m.text"},"ts":1319103061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah man, hard times","msgtype":"m.text"},"ts":1319103062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome is superslow these days","msgtype":"m.text"},"ts":1319103120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I can queue a task that says to check \"unless cancelled do x","msgtype":"m.text"},"ts":1319103180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1319103181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm that would still be quite hairy","msgtype":"m.text"},"ts":1319103182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone got an IE that they can visit http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1214 in?","msgtype":"m.text"},"ts":1319103240000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Any IE will do.","msgtype":"m.text"},"ts":1319103241000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: what do you want to know?","msgtype":"m.text"},"ts":1319103300000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Are the two marquees the same height?  And does the text overflow?","msgtype":"m.text"},"ts":1319103301000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Yes, no","msgtype":"m.text"},"ts":1319103302000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"(IE8)","msgtype":"m.text"},"ts":1319103303000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Neither overflows?  Interesting.","msgtype":"m.text"},"ts":1319103304000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"So both are tall enough to fully contain their text.  Huh.","msgtype":"m.text"},"ts":1319103305000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1319103306000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"They clip the text","msgtype":"m.text"},"ts":1319103360000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Oh, that's what I meant.  ^_^  clipping is an overflow strategy.","msgtype":"m.text"},"ts":1319103361000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"https://skitch.com/krijnhoetmer/gnfy3/ie8-marquee-stuffs","msgtype":"m.text"},"ts":1319103420000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"annevk: About the responseType = XMLHttpRequest.RESPONSE_JSON rather than responseType = \"json\" argument, wouldn't having Ruby's symbols in JS solve the issue?","msgtype":"m.text"},"ts":1319103540000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"dunno what Ruby's symbols are","msgtype":"m.text"},"ts":1319103600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mostly, they behave just like strings","msgtype":"m.text"},"ts":1319103601000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Something like responseType = :json","msgtype":"m.text"},"ts":1319103602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1319103603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but they are in some sort of global hashtable","msgtype":"m.text"},"ts":1319103660000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"so that we only compare constant integers most of the times","msgtype":"m.text"},"ts":1319103661000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"I personally don't really see why an IDE can't provide support for strings","msgtype":"m.text"},"ts":1319103662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"espadrine, sounds neat if JavaScript had that already :)","msgtype":"m.text"},"ts":1319103720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that can be fixed… well, within 3 years at least","msgtype":"m.text"},"ts":1319103721000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"annevk: it seems like a much harder problem to track that x is a XHR object so that you know that x.responseType should be a string corresponding to an XHR response type than to just know that the global XMLHttpRequest object has some constants","msgtype":"m.text"},"ts":1319103780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1319103900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the thing that cancels should just say to remove the task from the queue, i think","msgtype":"m.text"},"ts":1319104140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so this is for fullscreen","msgtype":"m.text"},"ts":1319104200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you queue a task for each document (cannot do one task because they can be cross-origin)","msgtype":"m.text"},"ts":1319104260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then you do some asynchronous animation which can be aborted","msgtype":"m.text"},"ts":1319104261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at that point one of those tasks might have already done something","msgtype":"m.text"},"ts":1319104262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so half of the documents will have run the task and the other half haven't ?","msgtype":"m.text"},"ts":1319104320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that could happen in theory I think","msgtype":"m.text"},"ts":1319104321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks, krijn .","msgtype":"m.text"},"ts":1319104322000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i guess when that happens you notify those documents that things have been changed again","msgtype":"m.text"},"ts":1319104380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why can't you just let the rest of the documents run the task too then?","msgtype":"m.text"},"ts":1319104381000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so you need to keep track of where events have dispatched","msgtype":"m.text"},"ts":1319104382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, yeah, and then dispatch another set of events to notify it has changed again?","msgtype":"m.text"},"ts":1319104383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that might be easiest","msgtype":"m.text"},"ts":1319104384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1319104385000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can somebody please visit http://w3c-test.org/framework/test/DUMMY/single/attributes.html/","msgtype":"m.text"},"ts":1319105160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and just press the Fail button at the bottom","msgtype":"m.text"},"ts":1319105161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"test framework is not properly collecting results when I visit it","msgtype":"m.text"},"ts":1319105220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*not properly recording","msgtype":"m.text"},"ts":1319105280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, or more like \"not properly reporting\"","msgtype":"m.text"},"ts":1319105281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can see results getting entered into the DB","msgtype":"m.text"},"ts":1319105282000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but not getting reported back","msgtype":"m.text"},"ts":1319105283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1319105520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is that for manual tests?","msgtype":"m.text"},"ts":1319105521000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can there be a button for \"this test can be automated, tell the test author to automate it\" ?","msgtype":"m.text"},"ts":1319105580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe w3c-test doesn't keep track of test authors","msgtype":"m.text"},"ts":1319105640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there is a way you can automatically run it and submit the results","msgtype":"m.text"},"ts":1319105760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://w3c-test.org/framework/suite/DUMMY/","msgtype":"m.text"},"ts":1319105761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you go there and select the \"Submit test results automatically when possible\" option","msgtype":"m.text"},"ts":1319105820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems Hixie is in denial about the name DOM4","msgtype":"m.text"},"ts":1319105940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Should of called it DOM4Web Then everyone could have hated on it","msgtype":"m.text"},"ts":1319106000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"once we sort out living standards I'll just name it \"DOM Standard\" like HTML is \"HTML Standard\"","msgtype":"m.text"},"ts":1319106120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1319106180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I figured out my problem","msgtype":"m.text"},"ts":1319106181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's a yay in there too","msgtype":"m.text"},"ts":1319106182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the framework is currently hard-coded to expect every test case to have a spec fragment ID associated with it","msgtype":"m.text"},"ts":1319106240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I updated the Fullscreen specification somewhat","msgtype":"m.text"},"ts":1319106480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have not yet addressed the problem mentioned above adequately, but I did simplify it a whole lot","msgtype":"m.text"},"ts":1319106481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And addressed the problem of not dispatching fullscreenchange on each document","msgtype":"m.text"},"ts":1319106540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I removed Document.fullscreen as currently it's no different from Document.fullscreenElement","msgtype":"m.text"},"ts":1319106541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I will email the list later as I have to go","msgtype":"m.text"},"ts":1319106600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html","msgtype":"m.text"},"ts":1319106601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi TabAtkins","msgtype":"m.text"},"ts":1319108220000,"senderName":"decthomas","senderId":"decthomas@irc"},
{"content":{"body":"just posted this tweet http://twitter.com/#!/decthomas/status/126958851072327680","msgtype":"m.text"},"ts":1319108221000,"senderName":"decthomas","senderId":"decthomas@irc"},
{"content":{"body":"can you help me out ? :)","msgtype":"m.text"},"ts":1319108222000,"senderName":"decthomas","senderId":"decthomas@irc"},
{"content":{"body":"or anyone else for that matter :)","msgtype":"m.text"},"ts":1319108640000,"senderName":"decthomas","senderId":"decthomas@irc"},
{"content":{"body":"experience suggests that people will copy examples verbatim even if the example says to change placeholder values - http://www.w3.org/Bugs/Public/show_bug.cgi?id=14117","msgtype":"m.text"},"ts":1319110020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger, do you have better terminology?","msgtype":"m.text"},"ts":1319110080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, I did not get further than \"event listener whose capture variable is false\" which is what we already have","msgtype":"m.text"},"ts":1319110081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"enumSupportedValues(XMLHttpRequest, 'responseType')","msgtype":"m.text"},"ts":1319111100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"over engineering?","msgtype":"m.text"},"ts":1319111160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"likely :)","msgtype":"m.text"},"ts":1319111220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"this is crashing my Opera 11.52:","msgtype":"m.text"},"ts":1319120160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://w3c-test.org/framework/test/DUMMY/auto/Range-cloneContents.html/","msgtype":"m.text"},"ts":1319120161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"me too, boooooo","msgtype":"m.text"},"ts":1319120220000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Boom. Indeed.","msgtype":"m.text"},"ts":1319120280000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"using range is an easy way to crash any engine","msgtype":"m.text"},"ts":1319121120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"unfortunately","msgtype":"m.text"},"ts":1319121180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/crash/crash or hang/","msgtype":"m.text"},"ts":1319121181000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Wil je er zelf een?","msgtype":"m.text"},"ts":1319123160000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Whoops","msgtype":"m.text"},"ts":1319123161000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Hi, I have two ideas / suggestions for changes to the html standard, where should I post them?","msgtype":"m.text"},"ts":1319123280000,"senderName":"Drogos","senderId":"Drogos@irc"},
{"content":{"body":"whatwg⊙wo","msgtype":"m.text"},"ts":1319123281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(need to subscribe first)","msgtype":"m.text"},"ts":1319123282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No forum or such where my inbox does not get affected?","msgtype":"m.text"},"ts":1319123400000,"senderName":"Drogos","senderId":"Drogos@irc"},
{"content":{"body":"there's forums.whatwg.org","msgtype":"m.text"},"ts":1319123460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, good, thanks :)","msgtype":"m.text"},"ts":1319123461000,"senderName":"Drogos","senderId":"Drogos@irc"},
{"content":{"body":"AryehGregor, could you please revert http://dvcs.w3.org/hg/webapps/rev/8879ca39afaa","msgtype":"m.text"},"ts":1319123640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor, tests are not supposed to be run on dvcs, they are checked out on w3c-test.org","msgtype":"m.text"},"ts":1319123641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Drogos: however, spec feedback on the forums usually doesn't get to the spec editor's attention. i'd suggest you file a bug instead if you don't want to subscribe","msgtype":"m.text"},"ts":1319124600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"(I killed the useless testharnessreport.js references at the same time, instead","msgtype":"m.text"},"ts":1319124660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":" of updating them. As far as I can tell, we aren't supposed to use it anymore.)\"","msgtype":"m.text"},"ts":1319124661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"we aren't?","msgtype":"m.text"},"ts":1319124662000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: ^","msgtype":"m.text"},"ts":1319124663000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1319124960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where is that from?","msgtype":"m.text"},"ts":1319124961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aha, thanks zcorpan :)","msgtype":"m.text"},"ts":1319125020000,"senderName":"Drogos","senderId":"Drogos@irc"},
{"content":{"body":" http://dvcs.w3.org/hg/webapps/rev/8879ca39afaa","msgtype":"m.text"},"ts":1319125200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"AryehGregor: We are still supposed to use testharnessreport.js","msgtype":"m.text"},"ts":1319125260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: That patch is exactly wrong","msgtype":"m.text"},"ts":1319125261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"using /resources/testharness.js is right and using an absolute url is wrong","msgtype":"m.text"},"ts":1319125320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The tests work on w3c-test.org","msgtype":"m.text"},"ts":1319125321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just before I asked for a revert","msgtype":"m.text"},"ts":1319125920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"changes like that really ought to be discussed first","msgtype":"m.text"},"ts":1319125921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where did you ask?","msgtype":"m.text"},"ts":1319125980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"here on IRC","msgtype":"m.text"},"ts":1319126040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1319126100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought maybe there was a mailing list I wasn't on","msgtype":"m.text"},"ts":1319126101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well I'm sure that's true too :)","msgtype":"m.text"},"ts":1319126160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"easy enough to roll that change back","msgtype":"m.text"},"ts":1319126580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can understand why Aryeh made that change","msgtype":"m.text"},"ts":1319126581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I probably would have done the same if I were him and trying to get stuff to work","msgtype":"m.text"},"ts":1319126582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it'd be nice if the spec comment box didn't overlap the spec; it's annoying that whenever you search for text in firefox, the text it finds ends up hidden underneith the comment overlay","msgtype":"m.text"},"ts":1319126640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"from the way things are set up, it's not very clear that the tests are intended to be executed from a different host","msgtype":"m.text"},"ts":1319126641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also underneath (why do I always do that?)","msgtype":"m.text"},"ts":1319126642000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I like \"underneith\" better","msgtype":"m.text"},"ts":1319126940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it looks more similar to \"Kool Keith\"","msgtype":"m.text"},"ts":1319127000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and somehow seems slightly closer to \"underthings\" as well","msgtype":"m.text"},"ts":1319127001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can I use my native speaker card and declare it a correct alternative","msgtype":"m.text"},"ts":1319127060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"google says 311000 vs. 108 million; i guess not :(","msgtype":"m.text"},"ts":1319127061000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: Yes, it is an understandable mistake to make","msgtype":"m.text"},"ts":1319127240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1319128380000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I was on the html5 code camp in Norway last year, is anyone of the people from that camp here?","msgtype":"m.text"},"ts":1319128381000,"senderName":"Drogos","senderId":"Drogos@irc"},
{"content":{"body":"annevk5: just start the task with a check for the condition and if it's not true don't do anything","msgtype":"m.text"},"ts":1319132340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: not in denial about the name, i can just never work out what it is, it keeps changing!","msgtype":"m.text"},"ts":1319132400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting. Chrome + Gnome 3 can go to state where you can't even close Chrome","msgtype":"m.text"},"ts":1319133060000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nor actually do anything with it","msgtype":"m.text"},"ts":1319133061000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok julian has just crossed the threshold from wasting my time to actively harming the spec","msgtype":"m.text"},"ts":1319134560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what did he do now?","msgtype":"m.text"},"ts":1319135100000,"senderName":"hober2","senderId":"hober2@irc"},
{"content":{"body":"first he asked for me to move the definition of rel=sidebar to the wiki instead of in the spec","msgtype":"m.text"},"ts":1319135101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i did that","msgtype":"m.text"},"ts":1319135160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now he's asking for the text that actually defines how sidebars work to be removed","msgtype":"m.text"},"ts":1319135161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which would break the definition of rel=sidebar in the wiki","msgtype":"m.text"},"ts":1319135162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is he suggesting that there be a separate sidebar spec?","msgtype":"m.text"},"ts":1319135163000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"or simply that the feature be dropped?","msgtype":"m.text"},"ts":1319135164000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"neither, he's just asking for the text to be removed","msgtype":"m.text"},"ts":1319135165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a separate sidebar spec wouldn't really work since it would have to do invasive patches to the html spec","msgtype":"m.text"},"ts":1319135220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1319135221000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hello","msgtype":"m.text"},"ts":1319141520000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"Can I have some help here?","msgtype":"m.text"},"ts":1319141580000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"Hello?","msgtype":"m.text"},"ts":1319141640000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"MikeSmith do you know about Canavs? I need some help","msgtype":"m.text"},"ts":1319142060000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"adtykfhyipoh: You should just ask your question, and then someone might answer it","msgtype":"m.text"},"ts":1319142240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I have been asking for hours but no one answered. Since then, I figured it out myself. Usually I wait for someone to join then ask them so they have the window open and they can see it","msgtype":"m.text"},"ts":1319142300000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"In fact Philip` I have done that to you in the past","msgtype":"m.text"},"ts":1319142360000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"so what is the actual question?","msgtype":"m.text"},"ts":1319142600000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Well I was trying to figure out how to make a canvas object move along a line, but I figured it out.","msgtype":"m.text"},"ts":1319142840000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"Bye","msgtype":"m.text"},"ts":1319142841000,"senderName":"adtykfhyipoh","senderId":"adtykfhyipoh@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1319142842000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1319142843000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1319142844000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr but is it real? Opera 12 support window.onerror?","msgtype":"m.text"},"ts":1319142900000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Hixie: I still don't see that a javascript IDE can really know that x.responseType should take the values from XMLHttpRequest.responseType without actually running the code","msgtype":"m.text"},"ts":1319149140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how can it know it should take the value XMLHttpRequest.WHATEVER?","msgtype":"m.text"},"ts":1319149320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham window.XMLHttpReqest = ... my wrapper","msgtype":"m.text"},"ts":1319149380000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Hixie: so about onerror. what is unclear?","msgtype":"m.text"},"ts":1319149440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: all of the bugs were way too vague, i had no idea what you meant","msgtype":"m.text"},"ts":1319149441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1319149500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: e.g. \"If the script is not same-origin, window.onerror should be invoked with arguments (\"Script error.\", \"\", 0)\" -- which script? same-origin with what? what window? why fire it at all? etc","msgtype":"m.text"},"ts":1319149501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when should it be fired?","msgtype":"m.text"},"ts":1319149502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham, I expect the argument is that the author will type \"XMLHttpRequest.\" and can then do completion","msgtype":"m.text"},"ts":1319149503000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, but otherwise yes it would require some analysis to work out what function is really being called and what values it can be called with","msgtype":"m.text"},"ts":1319149560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: that's jgraham's argument. My argument is that the IDE should just guess that x.responseType is the XMLHttpRequest.responseType attribute (based on looking at what |x| is last initialized to, e.g.) and knowing that responseType takes certain strings.","msgtype":"m.text"},"ts":1319149561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that = that the author will type \"XMLHttpRequest.\" and can then do completion","msgtype":"m.text"},"ts":1319149620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It can't. But it can know that if you type XM then XMLHttpRequest is a valid completion and then if you type . it can list all the other completions","msgtype":"m.text"},"ts":1319149621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that's a pretty lame IDE","msgtype":"m.text"},"ts":1319149622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: How can you do better","msgtype":"m.text"},"ts":1319149623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1319149624000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"With javascript?","msgtype":"m.text"},"ts":1319149625000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: so it's not actually the scirpt's origin, but the script's *URL's* origin, compared to the script's origin","msgtype":"m.text"},"ts":1319149626000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, I think that is possible too. once you've done the analysis to know that you're using XHR's responseType, you can autocomplete for property names, strings, whatever","msgtype":"m.text"},"ts":1319149627000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just use notepad++","msgtype":"m.emote"},"ts":1319149628000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"zcorpan: don't tell me here, put it in the bug :-)","msgtype":"m.text"},"ts":1319149680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: right","msgtype":"m.text"},"ts":1319149681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1319149682000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: you don't have to be perfect, you just have to be good enough to handle non-obtuse code","msgtype":"m.text"},"ts":1319149683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: awesome, thanks","msgtype":"m.text"},"ts":1319149684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe browsers will expose their type inference results at some point to make this easier","msgtype":"m.text"},"ts":1319149685000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, yeah it wouldn't be the first IDE whose autocomplete you could trick","msgtype":"m.text"},"ts":1319149686000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1319149740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Seems like it is at least rather non trivial in any case where you don't declare the variable statically in the same function","msgtype":"m.text"},"ts":1319149741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tricking an IDE autocomplete is like tricking a bicycle pump","msgtype":"m.text"},"ts":1319149742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the only loser is yourself","msgtype":"m.text"},"ts":1319149743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If I write function (x) {x.responseType =","msgtype":"m.text"},"ts":1319149744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you can guess pretty easily that \"responseType\" might be an XHR responseType, even without looking at the variable it's used on","msgtype":"m.text"},"ts":1319149800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems highly unclear how it can know nything","msgtype":"m.text"},"ts":1319149801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm assuming that with the kind of IDE assistance being argued for on the list, you could start typing \"x.responseType = Node.\", press tab, and get a list of node types","msgtype":"m.text"},"ts":1319149802000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Well yeah it could do that. Sucks if there is more than one possibility though","msgtype":"m.text"},"ts":1319149803000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so not completely helpful, you need to know the constant is on XMLHttpRequest","msgtype":"m.text"},"ts":1319149804000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: Node.? where is that from?","msgtype":"m.text"},"ts":1319149860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1319149861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, you type it. this is when you're typing some code I assume","msgtype":"m.text"},"ts":1319149862000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Well yes, you need to know what type of object it is","msgtype":"m.text"},"ts":1319149863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do you know that Node is the Node we defined?","msgtype":"m.text"},"ts":1319149920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone in JS can override Node","msgtype":"m.text"},"ts":1319149921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and guess that the object's constants live on its interface object","msgtype":"m.text"},"ts":1319149922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"var Node = null;","msgtype":"m.text"},"ts":1319149923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a good question, it'd be another assumption unless you have wicked analysis","msgtype":"m.text"},"ts":1319149924000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Sure, but you can get it right in a lot more situations than with pure strings","msgtype":"m.text"},"ts":1319149925000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if you can just guess that Node is the Node interface we spec, then why not just guess that responseType is is the XHR responseType?","msgtype":"m.text"},"ts":1319149926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because one is likely to be right and the other is quite likely to be wrong?","msgtype":"m.text"},"ts":1319149980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"responseType being the one likely to be right and Node likely to be wrong?","msgtype":"m.text"},"ts":1319149981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Who redefines Node in their code?","msgtype":"m.text"},"ts":1319149982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I men people add to it","msgtype":"m.text"},"ts":1319149983000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"who uses responseType in their code?","msgtype":"m.text"},"ts":1319149984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't have to be perfect","msgtype":"m.text"},"ts":1319150040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just has to be good enough","msgtype":"m.text"},"ts":1319150041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Seems like a reasonable name to use when you have a response with a type","msgtype":"m.text"},"ts":1319150042000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the drop down can easily just say \"XMLHttpRequest.responseType values: \\n \"this\" \\n \"that\" \\n FooBar.responseType values: \\n \"this\" \\n \"that\"\"","msgtype":"m.text"},"ts":1319150043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And I'm sure there are other examples where the DOM reuses an attribute name to mean different things on differnet interfaces","msgtype":"m.text"},"ts":1319150044000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i see no problem here","msgtype":"m.text"},"ts":1319150100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Anyway I don't really know what IDEs actually do","msgtype":"m.text"},"ts":1319150101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I would guess they will get the named constants right and not help with the string constants","msgtype":"m.text"},"ts":1319150102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"has anyone mentioned that named constants are discoverable without documentation?","msgtype":"m.text"},"ts":1319150160000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"by looking at the object?","msgtype":"m.text"},"ts":1319150161000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"franksalim: Yes","msgtype":"m.text"},"ts":1319150220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok, good. that seems very compelling to me","msgtype":"m.text"},"ts":1319150221000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"heycam: So, in other questions, why are attributes on prototypes not on instances?","msgtype":"m.text"},"ts":1319150280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan points out that it can help feature detection","msgtype":"m.text"},"ts":1319150281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But to me it seems like a very odd setup","msgtype":"m.text"},"ts":1319150282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, because it's common behaviour across all instances of a particular interface?","msgtype":"m.text"},"ts":1319150283000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, seemed natural to me","msgtype":"m.text"},"ts":1319150340000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: An attribute is a property of an instance","msgtype":"m.text"},"ts":1319150341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, sure, but I think that modelling really only works if you are using data properties","msgtype":"m.text"},"ts":1319150342000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, I think it's fine for internal state to be modelled with an accessor property coming from a prototype","msgtype":"m.text"},"ts":1319150400000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it's not defined what attributes on the prototype should return, or is it?","msgtype":"m.text"},"ts":1319150401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, if you do Node.prototype.nodeType?","msgtype":"m.text"},"ts":1319150402000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan, defined to throw","msgtype":"m.text"},"ts":1319150403000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Conceptually it feels wrong to say that the attribute is a property of the prototypical object rather than of the actual object","msgtype":"m.text"},"ts":1319150404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heycam: ah","msgtype":"m.text"},"ts":1319150460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, I can see where you're coming from","msgtype":"m.text"},"ts":1319150461000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, especially if you think of Node.prototype as a prototypical Node","msgtype":"m.text"},"ts":1319150462000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, though in practice of course it's not itself a Node","msgtype":"m.text"},"ts":1319150463000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1319150580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My argument is entirely that the model used does not match the most likely mental model of authors","msgtype":"m.text"},"ts":1319150581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"probably true","msgtype":"m.text"},"ts":1319150640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Who might expect some_node.hasOwnProperty(\"tagName\") to be true","msgtype":"m.text"},"ts":1319150700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"especially if unfamiliar with accessor properties","msgtype":"m.text"},"ts":1319150701000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"s/node/element/","msgtype":"m.text"},"ts":1319150702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(\"tagName\" in some_node is true tho)","msgtype":"m.text"},"ts":1319150703000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1319150704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"an author might also expect some_node.hasOwnProperty(\"appendChild\") to be true for the same reason","msgtype":"m.text"},"ts":1319150705000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"unless they have some experience with using prototypes to write \"classes\"","msgtype":"m.text"},"ts":1319150706000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"such an author probably isn't using hasOwnProperty though :)","msgtype":"m.text"},"ts":1319150760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Right, but it is easier to understand that shared behaviour is a property of the \"superclass\"","msgtype":"m.text"},"ts":1319150761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well doesn't Crockford promote hasOwnProperty?","msgtype":"m.text"},"ts":1319150762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least for enumeration","msgtype":"m.text"},"ts":1319150763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"don't know...","msgtype":"m.text"},"ts":1319150764000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"for (foo in bar) {if bar.hasOwnProperty(foo) {/*do stuff*/}}","msgtype":"m.text"},"ts":1319150820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So people might come across it that way","msgtype":"m.text"},"ts":1319150821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1319150880000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well, I haven't really had any pushback on what's in the spec at the moment. but you're welcome to start a thread on the list about it!","msgtype":"m.text"},"ts":1319150881000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if(!obj.hOP(k)) break is better","msgtype":"m.text"},"ts":1319150882000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bga_: doesn't that make assumptions about the order of enumeration?","msgtype":"m.text"},"ts":1319150940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assure you that they are not supported by the spec :)","msgtype":"m.text"},"ts":1319150941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"* continue","msgtype":"m.text"},"ts":1319150942000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1319150943000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Ah, OK","msgtype":"m.text"},"ts":1319150944000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but break works too","msgtype":"m.text"},"ts":1319151000000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"heycam: I fear that list","msgtype":"m.text"},"ts":1319151001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for non IE","msgtype":"m.text"},"ts":1319151002000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1319151003000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1319151004000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i tend to reply in bursts to minimise exasperation :)","msgtype":"m.text"},"ts":1319151005000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Also, iven zcorpan's point, I'm not sure whether it is worth pushing for a change","msgtype":"m.text"},"ts":1319151060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham i just have Object#_each like Array#forEach","msgtype":"m.text"},"ts":1319151061000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"I *think* only gecko implements the current spec","msgtype":"m.text"},"ts":1319151062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that is from memory and might be outdated even if it was once true","msgtype":"m.text"},"ts":1319151063000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(my memory is quite terrible)","msgtype":"m.text"},"ts":1319151064000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1319151120000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"pretty sure we do accessors for attributes tho","msgtype":"m.text"},"ts":1319151180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: clearer now?","msgtype":"m.text"},"ts":1319151240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"webkit and opera don't match the spec","msgtype":"m.text"},"ts":1319151241000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no idea about ie","msgtype":"m.text"},"ts":1319151242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, oh I've been meaning to test, what about the new Opera.next release?","msgtype":"m.text"},"ts":1319151300000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan, since they do ES5 now","msgtype":"m.text"},"ts":1319151301000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"same","msgtype":"m.text"},"ts":1319151302000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/they/you/ :)","msgtype":"m.text"},"ts":1319151303000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1319151304000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't object to changing the spec to match opera/webkit/ie (?), the only thing is that it makes it a bit harder for authors to do feature detection","msgtype":"m.text"},"ts":1319151360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, how so?","msgtype":"m.text"},"ts":1319151361000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"beacuse you have to create an instance first?","msgtype":"m.text"},"ts":1319151362000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1319151363000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1319151364000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"consider WebSocket","msgtype":"m.text"},"ts":1319151420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"checking the prototype is a one-liner","msgtype":"m.text"},"ts":1319151421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"var support = 'binaryType' in WebSocket.prototype;","msgtype":"m.text"},"ts":1319151422000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"creating an instance without side effects is harder","msgtype":"m.text"},"ts":1319151423000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and not a one-liner :)","msgtype":"m.text"},"ts":1319151480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not so","msgtype":"m.text"},"ts":1319151481000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"just small wrapper","msgtype":"m.text"},"ts":1319151482000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"zcorpan: yeah, much better. thanks.","msgtype":"m.text"},"ts":1319151540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which do real init if you perform real actions","msgtype":"m.text"},"ts":1319151541000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"zcorpan: looks like the spec is pretty vague about the onerror arguments right now anyway, so i guess i'll use those bugs as an opportunity to clean it up","msgtype":"m.text"},"ts":1319151542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"var support = (function() {","msgtype":"m.text"},"ts":1319151600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"    var s = new WebSocket('ws://example.invalid/');","msgtype":"m.text"},"ts":1319151601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"    return 'binaryType' in s;","msgtype":"m.text"},"ts":1319151602000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"})();","msgtype":"m.text"},"ts":1319151603000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, not that hard","msgtype":"m.text"},"ts":1319151604000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or 'binaryType' in new WebSocket...","msgtype":"m.text"},"ts":1319151605000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but yes your point is generally true","msgtype":"m.text"},"ts":1319151606000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan: does that cause a DNS lookup for invalid?","msgtype":"m.text"},"ts":1319151607000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"except user will see error in console","msgtype":"m.text"},"ts":1319151608000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"franksalim: yes","msgtype":"m.text"},"ts":1319151609000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you really don't want to be creating a WebSocket just to do feature detection","msgtype":"m.text"},"ts":1319151610000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it isn't completely side effect free...","msgtype":"m.text"},"ts":1319151611000,"senderName":"franksalim","senderId":"franksalim@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1319151660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gtg","msgtype":"m.emote"},"ts":1319151661000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: we decided to copy firefox for onerror. webkit always uses empty string as location for setTimeout scripts, otherwise i think they behaved pretty much the same","msgtype":"m.text"},"ts":1319151960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1319152140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what part makes sense? copying firefox or using empty string for setTimeout? :)","msgtype":"m.text"},"ts":1319152200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: copying firefox","msgtype":"m.text"},"ts":1319152920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1319153580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heycam|away: advice on the first bullet point of http://www.w3.org/Bugs/Public/show_bug.cgi?id=14037#c29 would be helpful","msgtype":"m.text"},"ts":1319154300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: IIRC IE implements most of webidl. at least things like interface.prototype.property handling","msgtype":"m.text"},"ts":1319154480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk5: ping","msgtype":"m.text"},"ts":1319154481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.amazon.com/gp/feature.html/ref=amb_link_357613442_1?ie=UTF8&docId=1000729901&pf_rd_m=ATVPDKIKX0DER&pf_rd_s=center-5&pf_rd_r=0QAERWX4FF6S17ZXDZRR&pf_rd_t=1401&pf_rd_p=1321300302&pf_rd_i=1000729511","msgtype":"m.text"},"ts":1319154900000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"<?xml?> This tag identifies a document as an XML document\"  ?","msgtype":"m.text"},"ts":1319155140000,"senderName":"karlcow","senderId":"karlcow@irc"}
]