[
{"content":{"body":"fascinating is justifying blob urls not working for workers in IE because \"it's not specifically allowed\"","msgtype":"m.text"},"ts":1402101082000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"maybe the spec should enumerate every possible allowable URL, just to be \"clear\"","msgtype":"m.text"},"ts":1402101102000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JakeA: Right, but why do you need the friendly failover behavior? Just deny the stylesheet entirely if the cors check fails.","msgtype":"m.text"},"ts":1402106967000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: actually it's specifically disallowed, unless blob: URLs (not their contents, the URL themselves) are defined as having a specific origin (as opposed to the unique origin, like data: URLs -- that's why the spec hard-codes data: URLs to make them work)","msgtype":"m.text"},"ts":1402116660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: maybe I got the wrong end of the stick. When you mentioned fixing the spec when it came to stylesheets and CORS, what changes were you thinking of?","msgtype":"m.text"},"ts":1402125653000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I answered from the hip, and wasn't sure if cssom allowed the crossorigin attr yet.","msgtype":"m.text"},"ts":1402125737000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/edit async generators","msgtype":"m.text"},"ts":1402129020000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"aw man","msgtype":"m.text"},"ts":1402182412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm going through the parser tests in a somewhat random order","msgtype":"m.text"},"ts":1402182425000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it seems somehow unfair that the second tree constructor test that i ended up having to deal with does foster parenting","msgtype":"m.text"},"ts":1402182444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hands Hixie some orphaned MIME messages","msgtype":"m.emote"},"ts":1402182717000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1402182731000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: What random order?","msgtype":"m.text"},"ts":1402182932000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: the order they're in the files?","msgtype":"m.text"},"ts":1402182937000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's pretty random :)","msgtype":"m.text"},"ts":1402182940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well the file order i'm using is random","msgtype":"m.text"},"ts":1402182989000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"apparently html5lib-tests/tree-construction/tests7.dat is the first test file i'm doing","msgtype":"m.text"},"ts":1402182996000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i got <!doctype html><body><title>X</title> to work","msgtype":"m.text"},"ts":1402183033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"now it's <!doctype html><table><title>X</title></table>","msgtype":"m.text"},"ts":1402183038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1402183043000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"which seems ambitious for a second test to get right :-)","msgtype":"m.text"},"ts":1402183048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just convert the spec into code using some NLP tool!","msgtype":"m.text"},"ts":1402183068000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1402183072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how long does html5lib take to do all the tests, btw?","msgtype":"m.text"},"ts":1402183093000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm doing this to be faster, but i've no idea if i am :-)","msgtype":"m.text"},"ts":1402183113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some number of seconds","msgtype":"m.text"},"ts":1402183114000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And on what implementation of Python?","msgtype":"m.text"},"ts":1402183129000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is there that much difference?","msgtype":"m.text"},"ts":1402183143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the universe is some number of seconds old","msgtype":"m.text"},"ts":1402183148000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: tests, maybe not; general parsing, massively!","msgtype":"m.text"},"ts":1402183167000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(tests have a lot of weird branches for parse errors taken frequently, real stuff mostly doesn't)","msgtype":"m.text"},"ts":1402183184000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1402183236000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for complete.html â€” CPython 2: 14.7s; CPython 3: 16.4s; PyPy: 7.7s","msgtype":"m.text"},"ts":1402183442000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: also remembers whether modules for optional tree formats are installed; PyPy takes 33s to run all the tests in my current WC","msgtype":"m.text"},"ts":1402183567000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I English good, it seem","msgtype":"m.text"},"ts":1402183614000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what's the difference between CPython and PyPy?","msgtype":"m.text"},"ts":1402183637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CPython is the reference implementation, a mere interpreter; PyPy is a tracing JITing VM","msgtype":"m.text"},"ts":1402183687000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402183716000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll have to give you a binary when i'm done, have you compare that","msgtype":"m.text"},"ts":1402183742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now it probably does it in aout 20ms but crashes with \"not implemented\" about 2 lines in :-P","msgtype":"m.text"},"ts":1402183768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also note that that figure for the tests including serializer/sanitizer/etc. tests","msgtype":"m.text"},"ts":1402183777000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402183782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm only doing tokeniser/tree-constructor","msgtype":"m.text"},"ts":1402183787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and excluding some of those too, e.g. fragment tests)","msgtype":"m.text"},"ts":1402183795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(iirc)","msgtype":"m.text"},"ts":1402183797000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(it appears I really can't watch Buffy and type at the same time :))","msgtype":"m.text"},"ts":1402183806000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ho ho ho, i just found a bug in the html parser","msgtype":"m.text"},"ts":1402183885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the spec?","msgtype":"m.text"},"ts":1402183896000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nondeterministic GC in pypy makes me hesitant to go near it, though","msgtype":"m.text"},"ts":1402183896000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402183900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one sec while i check my work","msgtype":"m.text"},"ts":1402183904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Do we implement the spec correctly? :)","msgtype":"m.text"},"ts":1402183909000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's what i'm checking :-)","msgtype":"m.text"},"ts":1402183916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It wouldn't be the first time we've had bogus behaviour on the basis the spec did :)","msgtype":"m.text"},"ts":1402183933000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well gecko and blink seem to just ignore my mistake here, which seems wise","msgtype":"m.text"},"ts":1402184048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: CPython is non-det GC too","msgtype":"m.text"},"ts":1402184053000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"since otherwise they'd probably crash or create a crazy non-dom-valid dom","msgtype":"m.text"},"ts":1402184062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3054","msgtype":"m.text"},"ts":1402184063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"only with cycles","msgtype":"m.text"},"ts":1402184064000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Besides, you can make it deterministic in both cases through gc.disable() :)","msgtype":"m.text"},"ts":1402184080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"memory.splode()","msgtype":"m.text"},"ts":1402184094000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh nevermind","msgtype":"m.text"},"ts":1402184202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec actually checks for this later","msgtype":"m.text"},"ts":1402184213000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Other problems with converting the spec text: coreference resolution.","msgtype":"m.text"},"ts":1402184400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or not","msgtype":"m.text"},"ts":1402184423000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Not such a big problem as I thought","msgtype":"m.text"},"ts":1402184431000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"cowhat now?","msgtype":"m.text"},"ts":1402184447000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Consider: \"Consume the next input character; output the character\".","msgtype":"m.text"},"ts":1402184471000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What does \"the character\" refer to?","msgtype":"m.text"},"ts":1402184478000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1402184487000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402184489000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good luck!","msgtype":"m.text"},"ts":1402184490000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think you actually have that much coreference in the tokenizer at least though","msgtype":"m.text"},"ts":1402184525000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because you almost always (maybe always?) use \"the current input character\"","msgtype":"m.text"},"ts":1402184541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"man the foster parenting algorithm sure is described in a round-about way","msgtype":"m.text"},"ts":1402184601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1402184614000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think this Hixie guy is to blame there :)","msgtype":"m.text"},"ts":1402184652000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"pah","msgtype":"m.text"},"ts":1402184656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"implements it completely differently and hopes he's right that it's isomorphic","msgtype":"m.emote"},"ts":1402184674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Proving stuff is equivilent is hard given the spec machine is infinite state :(","msgtype":"m.text"},"ts":1402184694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well proving that this subpart is equivalent should be easier","msgtype":"m.text"},"ts":1402184713000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tbf, one can likely bound the stack of open elements at something like 10 elements and the list of active formatting elements similarly and then just argue everything will just be those with extra elements of no effect inbetween","msgtype":"m.text"},"ts":1402184781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"be careful about that","msgtype":"m.text"},"ts":1402184795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"noah's ark really screws with that","msgtype":"m.text"},"ts":1402184801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you do that you want a pretty high cap, iirc","msgtype":"m.text"},"ts":1402184815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, you will","msgtype":"m.text"},"ts":1402184826000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I haven't tried to work it out","msgtype":"m.text"},"ts":1402184831000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"noah's ark is a technical term now?","msgtype":"m.text"},"ts":1402184843000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I fear it's exponential to the number of formatting elements.","msgtype":"m.text"},"ts":1402184852000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: so many silly terms in the parser, you've no idea","msgtype":"m.text"},"ts":1402184863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: it's the only way i could stay sane","msgtype":"m.text"},"ts":1402184870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"while writing it","msgtype":"m.text"},"ts":1402184874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"takes a deep breath and carries on","msgtype":"m.emote"},"ts":1402184876000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, that one too :-)","msgtype":"m.text"},"ts":1402184882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"implemented that just yesterday (commented out, of course)","msgtype":"m.emote"},"ts":1402184890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Do you know of any bug for the spec being slow in Firefox?","msgtype":"m.text"},"ts":1402184891000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"slow to load?","msgtype":"m.text"},"ts":1402184898000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1402184899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's a problem for sure","msgtype":"m.text"},"ts":1402184903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that reminds me of \\relax","msgtype":"m.text"},"ts":1402184909000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"is it worrying when you implement an algorithm and your implementation has none of the variables of the original? :-)","msgtype":"m.text"},"ts":1402184964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't really TeXnically aware enough to know all that relax is good for ...","msgtype":"m.emote"},"ts":1402184969000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: it should worry someone","msgtype":"m.text"},"ts":1402184982000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: Not replicating the WebKit HTML parser bug with </sarcasm> then? :)","msgtype":"m.text"},"ts":1402184985000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1402185005000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: something around layout is slow when the window changes size, like to open the find box :(","msgtype":"m.text"},"ts":1402185009000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: where did that crop up?","msgtype":"m.text"},"ts":1402185019000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gsnedders: i still love that that happened","msgtype":"m.text"},"ts":1402185034000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"someone forgot to escape </sarcasm>, or was it inside a script or something?","msgtype":"m.text"},"ts":1402185046000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gsnedders: yeah, reflow is slow. dunno of a specific bug. cc me if you file one.","msgtype":"m.text"},"ts":1402185053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: k","msgtype":"m.text"},"ts":1402185065000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gotta go, bbl","msgtype":"m.text"},"ts":1402185067000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: https://bugs.webkit.org/show_bug.cgi?id=45645","msgtype":"m.text"},"ts":1402185082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: This is the reason html5lib has tests for </sarcasm> :)","msgtype":"m.text"},"ts":1402185105000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"looks around for something spritely to open that on","msgtype":"m.emote"},"ts":1402185107000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"has the standard managed to avoid mentioning </sarcasm> thus far?","msgtype":"m.text"},"ts":1402185142000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"The WebKit bug is there because the standard *does* mention it","msgtype":"m.text"},"ts":1402185157000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1402185165000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"As Hixie said, the parser section is full of jokes","msgtype":"m.text"},"ts":1402185180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sure am tired of having to find obscure switches to tell MSVC to stop telling me that C functions like read() are \"deprecated\"","msgtype":"m.text"},"ts":1402185185000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"An end tag whose tag name is \"sarcasm\"","msgtype":"m.text"},"ts":1402185218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Take a deep breath, then act as described in the \"any other end tag\" entry below.","msgtype":"m.text"},"ts":1402185218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: ^^","msgtype":"m.text"},"ts":1402185223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt: ouch","msgtype":"m.text"},"ts":1402185232000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"That's far too funny if you're actually in the middle of just implementing every single case one by one :)","msgtype":"m.text"},"ts":1402185243000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"does \"take a deep breath\" link somewhere?","msgtype":"m.text"},"ts":1402185279000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nah","msgtype":"m.text"},"ts":1402185284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SamB: Seems like a bug. Report it! :)","msgtype":"m.text"},"ts":1402185298000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"uh, woah, now it's defaulting to having them as errors","msgtype":"m.text"},"ts":1402185348000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: so, um, the headers don't make it clear how to disable that?","msgtype":"m.text"},"ts":1402185484000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you *did* look at the headers, right?","msgtype":"m.text"},"ts":1402185496000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"some of the warnings do (\"#define this special thing\" for sprintf()), but not read()","msgtype":"m.text"},"ts":1402185513000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the funny thing is, read() doesn't have any buffer-size issues or anything","msgtype":"m.text"},"ts":1402185516000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hell no i'm not going to dig into seventy-deep system headers, i'll let the web figure it out","msgtype":"m.text"},"ts":1402185548000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I mean, like, can you see what construct is causing MSVC to treat those things as deprecated","msgtype":"m.text"},"ts":1402185553000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, I really don't like MSVC very much","msgtype":"m.text"},"ts":1402185593000,"senderName":"SamB","senderId":"SamB@irc"}
]