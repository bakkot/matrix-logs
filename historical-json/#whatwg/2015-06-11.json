[
{"content":{"body":"annevk: you there?","msgtype":"m.text"},"ts":1433997538000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: waking up","msgtype":"m.text"},"ts":1433999132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: what's up?","msgtype":"m.text"},"ts":1433999136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: created an issue on whatwg/url","msgtype":"m.text"},"ts":1433999146000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"not that important/time-critical","msgtype":"m.text"},"ts":1433999181000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: I think you found a bug","msgtype":"m.text"},"ts":1433999244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1433999251000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: should probably flush out step 5 to use the appropriate set","msgtype":"m.text"},"ts":1433999257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"1.3.5 that is","msgtype":"m.text"},"ts":1433999268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"currently reporting the bug to unicode too","msgtype":"m.text"},"ts":1433999270000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"ooh wait","msgtype":"m.text"},"ts":1433999285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually that might not be a bug","msgtype":"m.text"},"ts":1433999293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aww","msgtype":"m.text"},"ts":1433999322000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"since all the code points that password/username add are treated specially in authority state","msgtype":"m.text"},"ts":1433999330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's that?","msgtype":"m.text"},"ts":1433999366000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: https://url.spec.whatwg.org/#default-encode-set if you look at the password and username encode set","msgtype":"m.text"},"ts":1433999416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: \"/\", \"@\", \"\\\", and \":\" all have special meaning within the authority state so could never end up there","msgtype":"m.text"},"ts":1433999446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: I guess we might still want to add a note of sorts there to that effect","msgtype":"m.text"},"ts":1433999461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oooh, i think i found my error :/","msgtype":"m.text"},"ts":1433999488000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"sorry for bothering","msgtype":"m.text"},"ts":1433999508000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"yeah, i got it... i simple encoded it","msgtype":"m.text"},"ts":1433999663000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"no worries","msgtype":"m.text"},"ts":1434000411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone knows why DOMHighResTimeStamp is relative?","msgtype":"m.text"},"ts":1434006587000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"relative to performance.timing.navigationStart, I mean.","msgtype":"m.text"},"ts":1434006816000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Is that due to some limitation as to how numbers can be represented in JS or is it just a weird choice?","msgtype":"m.text"},"ts":1434006904000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Date.now() * 1000","msgtype":"m.text"},"ts":1434007192000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"1434007172260000","msgtype":"m.text"},"ts":1434007193000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Number.MAX_SAFE_INTEGER","msgtype":"m.text"},"ts":1434007196000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"9007199254740991","msgtype":"m.text"},"ts":1434007197000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"not sure.","msgtype":"m.text"},"ts":1434007209000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"tobie: all time is relative :p","msgtype":"m.text"},"ts":1434007527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"go away, annevk","msgtype":"m.text"},"ts":1434007560000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: but yeah, we don't have large enough numbers to get that kind of precision since epoch","msgtype":"m.text"},"ts":1434007568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new Date(Math.floor(Number.MAX_SAFE_INTEGER/1000))","msgtype":"m.text"},"ts":1434007647000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Wed Jun 06 2255 01:47:34 GMT+0200 (CEST)","msgtype":"m.text"},"ts":1434007648000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That roughly matches the 272 years at microsecond resolution from https://github.com/WebAudio/web-midi-api/issues/145#issuecomment-110477683","msgtype":"m.text"},"ts":1434007883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOMHighResTimeStamp is more precise","msgtype":"m.text"},"ts":1434007894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have no idea what I'm doing but that seems future proof for more than 2 centuries, no?","msgtype":"m.text"},"ts":1434007902000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Not if you want higher resolution...","msgtype":"m.text"},"ts":1434007933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"accurate to the thousandth of millisecond\"","msgtype":"m.text"},"ts":1434007933000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"http://www.w3.org/TR/hr-time/#sec-DOMHighResTimeStamp","msgtype":"m.text"},"ts":1434007972000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I do not see why JS ints are not suffucient for the required microsecond precision","msgtype":"m.text"},"ts":1434008018000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: oh, you're actually looking at that right now?","msgtype":"m.text"},"ts":1434008088000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I was looking at something similar for the sensor stuff","msgtype":"m.text"},"ts":1434008121000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: well, it's been going on for at least a year now","msgtype":"m.text"},"ts":1434008209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: but yeah, the plan is to change events to report DOMHighResTimeStamp instead","msgtype":"m.text"},"ts":1434008224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"From navigation start? or from epoch?","msgtype":"m.text"},"ts":1434008248000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Can't from epoch, so navigation start","msgtype":"m.text"},"ts":1434008261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"See comments in that issue from Brian","msgtype":"m.text"},"ts":1434008268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, @birtles","msgtype":"m.text"},"ts":1434008284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I need to get on and finish making that change in Gecko","msgtype":"m.text"},"ts":1434008325000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"Yes!","msgtype":"m.text"},"ts":1434008374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand half of the concerns birtles brought up, tbh.","msgtype":"m.text"},"ts":1434008396000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: which ones?","msgtype":"m.text"},"ts":1434008410000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"And I mean that literally, I'm not contesting them.","msgtype":"m.text"},"ts":1434008419000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1434008421000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"the monotonically increasing thing?","msgtype":"m.text"},"ts":1434008445000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"\"I don't think you can have interop with Date if you want these values to be monotonically increasing\"","msgtype":"m.text"},"ts":1434008446000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, I don't understand how that could be an issue.","msgtype":"m.text"},"ts":1434008471000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I am still unsure why microseconds from the unix epoch are not suitable for JS numbers","msgtype":"m.text"},"ts":1434008480000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: presumably the high resolution platform APIs don't give answers since epoch","msgtype":"m.text"},"ts":1434008509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1434008533000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"09:26 < annevk> tobie: but yeah, we don't have large enough numbers to get that kind of precision since epoch","msgtype":"m.text"},"ts":1434008533000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so I am not sure whether this is about the required precision","msgtype":"m.text"},"ts":1434008549000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: well, people want nanoseconds I think","msgtype":"m.text"},"ts":1434008550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1434008556000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: where's *that* requirement?","msgtype":"m.text"},"ts":1434008575000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so it is possible to increase the precision backwards-compatibly by using floats","msgtype":"m.text"},"ts":1434008584000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the number is still millis","msgtype":"m.text"},"ts":1434008591000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"tobie: isn't that why we have performance.now()?","msgtype":"m.text"},"ts":1434008595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the precision increases to nanos","msgtype":"m.text"},"ts":1434008598000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1434008600000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: it microseconds, per spec","msgtype":"m.text"},"ts":1434008627000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: as I understand it Date.now() is not monotonically increasing, so when your computer's clock goes backwards due to DST or time adjustments etc. Date.now() also goes backwards","msgtype":"m.text"},"ts":1434008641000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"tobie: so if you want event timestamps to line up with Date.now() values, then those times can go backwards now","msgtype":"m.text"},"ts":1434008654000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"so if you're comparing the timestamps between events to see which one came first, you'll occasionally get wacky bugs","msgtype":"m.text"},"ts":1434008666000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"performance.now() doesn't have the problem","msgtype":"m.text"},"ts":1434008685000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"oh, all of this is because of the bloody daylight saving time?","msgtype":"m.text"},"ts":1434008734000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nah, there are other system time adjustments","msgtype":"m.text"},"ts":1434008748000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"like sync with time servers etc.","msgtype":"m.text"},"ts":1434008754000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"timezones","msgtype":"m.text"},"ts":1434008759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't Date.now() UTC?","msgtype":"m.text"},"ts":1434008810000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"birtles: but couldn't you still have something monotonic yet fully compatible?","msgtype":"m.text"},"ts":1434008870000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I thought about that, but then I think you get even weirder bugs","msgtype":"m.text"},"ts":1434008901000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"e.g. store the time internally using some monotonically increasing value and convert it on access","msgtype":"m.text"},"ts":1434008920000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"but then if time changes between subsequent accesses you get even weirder bugs","msgtype":"m.text"},"ts":1434008936000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"I'm not sure I get that.","msgtype":"m.text"},"ts":1434008985000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"what do you mean by \"on access\"","msgtype":"m.text"},"ts":1434008998000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"and \"store the time internally\"?","msgtype":"m.text"},"ts":1434009011000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"basically, making Event.timeStamp live","msgtype":"m.text"},"ts":1434009039000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"oh, that's not what I meant.","msgtype":"m.text"},"ts":1434009060000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ok, maybe I didn't get what you meant by fully compatible","msgtype":"m.text"},"ts":1434009080000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"no wonder, that was kind of hand-wavy","msgtype":"m.text"},"ts":1434009097000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1434009101000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"let me try to explain better","msgtype":"m.text"},"ts":1434009109000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"right now DOMHighResTimeStamp is monotonic but starts at performance.timing.navigationStart","msgtype":"m.text"},"ts":1434009205000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so to turn something into a date you kind of have to do (pseudo code): new Date(DOMHighResTimeStamp + performance.timing.navigationStart)","msgtype":"m.text"},"ts":1434009289000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"what if instead you had DOMHighResTimeStamp start at epoch but be monotonic from the moment the page loads?","msgtype":"m.text"},"ts":1434009373000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"birtles: is that just a different flavor of hand-wavy or am I making more sense?","msgtype":"m.text"},"ts":1434009484000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: in other words, store the time since navigationStart but at the API level, do the addition you described above automatically?","msgtype":"m.text"},"ts":1434009519000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1434009526000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think there are two issues...","msgtype":"m.text"},"ts":1434009535000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"only?","msgtype":"m.text"},"ts":1434009541000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1434009545000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"one is that then you lose compatibility with Date","msgtype":"m.text"},"ts":1434009548000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"since the values you're reporting no longer correspond to the values it returns","msgtype":"m.text"},"ts":1434009567000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1434009567000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"why would that be?","msgtype":"m.text"},"ts":1434009593000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"if you update your system clock backwards 1 minute, Date.now() goes backwards 1 minute","msgtype":"m.text"},"ts":1434009605000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"if you want to report a timestamp as a monotonically increasing value though it can't go backwards relative to any other timestamps","msgtype":"m.text"},"ts":1434009630000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"sure, but Date.preciselynow() wouldn't","msgtype":"m.text"},"ts":1434009632000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so it can't go backwards","msgtype":"m.text"},"ts":1434009638000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"so you can't meaningfully compare those timestamps with Date.now() anymore","msgtype":"m.text"},"ts":1434009651000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1434009660000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so then the second issue is you lose compatibility with everything that's based on navigationStart: performance.now(), requestAnimationFrame, Web Animations etc.","msgtype":"m.text"},"ts":1434009709000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"it seems like you lose compatibility with everything except some yet-to-be-created Date function?","msgtype":"m.text"},"ts":1434009726000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"well, unless you'd have to change performance.timing.navigationStart to always return 0","msgtype":"m.text"},"ts":1434009791000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1434009805000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/'d have to//","msgtype":"m.text"},"ts":1434009825000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, that might work :) pretty sure no one would notice :)","msgtype":"m.text"},"ts":1434009861000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"I'm not sure if you're being 1) ironic, 2) not ironic, or 3) unsure yourself whether to be ironic or not ironic","msgtype":"m.text"},"ts":1434009952000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"sorry, yeah, I don't think we'd get away with that and I'm not entirely sure it would be useful either","msgtype":"m.text"},"ts":1434010026000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"I think the fundamental problem is that Date.now() is not monotonically increasing (I just checked on this computer to be sure)","msgtype":"m.text"},"ts":1434010133000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"I guess you're right and the only thing I'm after is: Date.fromPrecisionTiming() and Date.preciseNow = performance.now or something similar","msgtype":"m.text"},"ts":1434010199000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, I can see that being useful","msgtype":"m.text"},"ts":1434010217000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"That should belong in ES, tbh","msgtype":"m.text"},"ts":1434010278000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"and so you'd also need a Date.contextStarted or some such","msgtype":"m.text"},"ts":1434010324000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah, I think we're still speccing workerStart at the moment","msgtype":"m.text"},"ts":1434010352000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"equivalent of current performance.timing.navigationStart but not platform specific","msgtype":"m.text"},"ts":1434010363000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"well, seems its at the wrong layer, no?","msgtype":"m.text"},"ts":1434010396000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"How do I get that in node?","msgtype":"m.text"},"ts":1434010404000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"new Date(timestamp + (performance.timing.navigationStart || this.workerStart || process.startTime))","msgtype":"m.text"},"ts":1434010462000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"or rather:","msgtype":"m.text"},"ts":1434010490000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":" new Date(timestamp + ((performance && performance.timing && performance.timing.navigationStart) || this.workerStart || (process && process.startTime)))","msgtype":"m.text"},"ts":1434010519000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1434010544000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"birtles: here, I solved all the things for you: https://twitter.com/tobie/status/608912362813464576","msgtype":"m.text"},"ts":1434011174000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: cheers, our work here is done","msgtype":"m.text"},"ts":1434011221000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"ECMAScript*, by Ecma","msgtype":"m.text"},"ts":1434012501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh--is it?","msgtype":"m.text"},"ts":1434012532000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well, Ecma International, more precisely.","msgtype":"m.text"},"ts":1434012570000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It used to be ECMA, but then they were no longer European and decided to turn the abbreviation into a name","msgtype":"m.text"},"ts":1434012762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup. Wasn't aware ECMA had stuck in ECMAScript though.","msgtype":"m.text"},"ts":1434012844000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well, given ES6 vs ECMAScript 2015 they always seem to go for maximum developer confusion","msgtype":"m.text"},"ts":1434012960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's not really on them, though—isn't that a decision made by TC39?","msgtype":"m.text"},"ts":1434013809000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"TC39 is basically Ecma at this point","msgtype":"m.text"},"ts":1434013935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not much else to hold it alive","msgtype":"m.text"},"ts":1434013952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess there's TC52 for Dart, but euh...","msgtype":"m.text"},"ts":1434013970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and that thing to pretend that docx is standardized","msgtype":"m.text"},"ts":1434014006000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"TC45","msgtype":"m.text"},"ts":1434014050000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"http://www.ecma.org/about-ecma/organisational-structure/ecma-tobacco-forum.html","msgtype":"m.text"},"ts":1434014202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":}","msgtype":"m.text"},"ts":1434014266000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"nothing beats a good old tobacco packaging","msgtype":"m.text"},"ts":1434014290000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"MikeSmith: is that the same Ecma?","msgtype":"m.text"},"ts":1434014451000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"qyep","msgtype":"m.text"},"ts":1434014473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I know they do a lot of other non-open, non-RF standards, but this stuff?","msgtype":"m.text"},"ts":1434014479000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Pretty sure that is not the same","msgtype":"m.text"},"ts":1434014536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"ECMA – European Carton Makers Associations\"","msgtype":"m.text"},"ts":1434014542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not the same ecma","msgtype":"m.text"},"ts":1434014543000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"they have the nice domain name though","msgtype":"m.text"},"ts":1434014568000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"kind of worrying that a carton maker association snapped the domain name of the SDO defining the language used by the platform, but oh well.","msgtype":"m.text"},"ts":1434014653000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"my bad, I'm the one who confused ecma.org and ecma-international","msgtype":"m.text"},"ts":1434014860000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the official site for the latter redirects to their hosting provider...","msgtype":"m.text"},"ts":1434014882000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: afaik they're in the process of fixing it.","msgtype":"m.text"},"ts":1434015422000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"why bother?","msgtype":"m.text"},"ts":1434015431000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: (has been reported yesterday evening)","msgtype":"m.text"},"ts":1434015445000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"forgot to pay the hosting fee?","msgtype":"m.text"},"ts":1434015458000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: hook for IP commitments","msgtype":"m.text"},"ts":1434015459000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hmpf","msgtype":"m.text"},"ts":1434015467000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hallvors: so bz was asking about fetch() tests","msgtype":"m.text"},"ts":1434015470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: I wonder how much we can reuse from XMLHttpRequest","msgtype":"m.text"},"ts":1434015484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: and maybe from odinho's CORS tests","msgtype":"m.text"},"ts":1434015500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not much, I suspect","msgtype":"m.text"},"ts":1434015501000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"At a high-level similar things are being tested, e.g. methods etc.","msgtype":"m.text"},"ts":1434015522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I heard that the source for the text on all cigarette cartons OS maintained in MS Word files. Pretty sure darobin is the one who told me that.","msgtype":"m.text"},"ts":1434015541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hm..","msgtype":"m.text"},"ts":1434015555000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: just write a polyfill making XHR requests use window.fetch(), reuse everything :-p","msgtype":"m.text"},"ts":1434015591000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"And a bunch of the server infrastructure will be similar...","msgtype":"m.text"},"ts":1434015611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe it's too much effort to make something generic?","msgtype":"m.text"},"ts":1434015620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the serious reply is: not sure off the top of my head. Probably needs to be decided on a test-by-test basis","msgtype":"m.text"},"ts":1434015654000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(aka there's quite some work to do )","msgtype":"m.text"},"ts":1434015671000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"much of the backend stuff is rather trivial anyway, but of course nice to reuse","msgtype":"m.text"},"ts":1434015724000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"tobie: I just released your PR","msgtype":"m.text"},"ts":1434015794000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hallvors: hmm, I'm not sure I want to be the one doing this","msgtype":"m.text"},"ts":1434015910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know I don't want to be it either :)","msgtype":"m.text"},"ts":1434015960000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: something is wrong with the links: http://w3c-test.org/fetch","msgtype":"m.text"},"ts":1434016076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: that should probably redirect to /fetch/ since now nosniff points to http://w3c-test.org/nosniff/ which does not exist obviously","msgtype":"m.text"},"ts":1434016109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, there's this thing called test the web forward","msgtype":"m.text"},"ts":1434016220000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(which always seems like a gramatically dubious name, but then I'm not a native English speaker)","msgtype":"m.text"},"ts":1434016246000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I'm not sure those really work well","msgtype":"m.text"},"ts":1434016318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They don't","msgtype":"m.text"},"ts":1434016343000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In the end writing good tests is similar to writing good specifications or writing good implementations. You need to have quite a bit of experience.","msgtype":"m.text"},"ts":1434016358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What links?","msgtype":"m.text"},"ts":1434016832000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, http://w3c-test.org/fetch/ works","msgtype":"m.text"},"ts":1434016889000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I know","msgtype":"m.text"},"ts":1434017242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if you link to a directory without a trailing slash","msgtype":"m.text"},"ts":1434017265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: the links within the directory view","msgtype":"m.text"},"ts":1434017277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, there intentionally isn't any special magic to make /foo and /foo/ the same","msgtype":"m.text"},"ts":1434017656000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder why annevk is asking about /foo and /foo/ if foo is a directory.","msgtype":"m.text"},"ts":1434018591000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"knows that the default of Apache httpd are a bit painful with regards to this. ","msgtype":"m.emote"},"ts":1434018592000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: because I ended up at http://w3c-test.org/fetch and the link to nosniff is broken","msgtype":"m.text"},"ts":1434018633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Specifically in this case:","msgtype":"m.text"},"ts":1434018636000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"  /foo/","msgtype":"m.text"},"ts":1434018636000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"  /foo.html","msgtype":"m.text"},"ts":1434018637000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"when you request /foo","msgtype":"m.text"},"ts":1434018671000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"annevk: I think the bug there is that /fetch works at all","msgtype":"m.text"},"ts":1434018712000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It really isn't supposed to","msgtype":"m.text"},"ts":1434018718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Server: BaseHTTP/0.3 Python/2.7.3","msgtype":"m.text"},"ts":1434018769000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"homemade server?","msgtype":"m.text"},"ts":1434018803000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Yup","msgtype":"m.text"},"ts":1434018807000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wptserve","msgtype":"m.text"},"ts":1434018819000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/w3c/wptserve","msgtype":"m.text"},"ts":1434018852000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"hi, i'm reading the HTML spec, now i'm at Chapter 14. what does the 'i' in \"table[align=left i] { float: left }\" mean?","msgtype":"m.text"},"ts":1434019663000,"senderName":"CrLF0710","senderId":"CrLF0710@irc"},
{"content":{"body":"annevk: https://critic.hoppipolla.co.uk/r/5244","msgtype":"m.text"},"ts":1434019705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"CrLF0710: means ASCII case-insensitive matching","msgtype":"m.text"},"ts":1434019723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CrLF0710: on the value","msgtype":"m.text"},"ts":1434019729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CrLF0710: defined in Selectors","msgtype":"m.text"},"ts":1434019736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, can't we redirect in that case rather than 404?","msgtype":"m.text"},"ts":1434019760000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: got it. thank you!","msgtype":"m.text"},"ts":1434019776000,"senderName":"CrLF0710","senderId":"CrLF0710@irc"},
{"content":{"body":"Ms2ger: I would much prefer not to","msgtype":"m.text"},"ts":1434019792000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you could first check if a directory of that name exists and then redirect?","msgtype":"m.text"},"ts":1434019822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The directory is known to exist, but not doing too much magic seems strictly better","msgtype":"m.text"},"ts":1434019909000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I can't review that but looks okay","msgtype":"m.text"},"ts":1434020085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You can review it now","msgtype":"m.text"},"ts":1434020685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"r+","msgtype":"m.text"},"ts":1434020845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1434020940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"darobin: ty","msgtype":"m.text"},"ts":1434020944000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"darobin: didn't know WebIDL had a ws option.","msgtype":"m.text"},"ts":1434020973000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/WebIDL/webidl2.js/","msgtype":"m.text"},"ts":1434021022000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah it does as of I think about a year ago, I forget","msgtype":"m.text"},"ts":1434023368000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's not like there's an announcement list or anything","msgtype":"m.text"},"ts":1434023375000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I wrote it specifically for use cases like jyasskin_w's thing","msgtype":"m.text"},"ts":1434023395000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: darn, spent quite a while trying to figure out was was breaking","msgtype":"m.text"},"ts":1434023895000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: sorry about that :(","msgtype":"m.text"},"ts":1434024105000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"tobie: don't hesitate to ping me when you have trouble with that","msgtype":"m.text"},"ts":1434024114000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"It was midnight","msgtype":"m.text"},"ts":1434024133000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"You weren't around","msgtype":"m.text"},"ts":1434024139000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"darobin: tbh, the problem had more to do with getting stack traces deep within compressed JS","msgtype":"m.text"},"ts":1434024305000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"don't code at midnight","msgtype":"m.text"},"ts":1434024323000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"be in bed, read a book man","msgtype":"m.text"},"ts":1434024327000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"tobie: we could do sourcemaps if it helps","msgtype":"m.text"},"ts":1434024337000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that was excpetional, tbh, I generally no longer do this.","msgtype":"m.text"},"ts":1434024379000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"nah, I think we should just migrate to browserify at some point and get all of this stuff for free.","msgtype":"m.text"},"ts":1434024409000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah, the problem was inside ReSpec","msgtype":"m.text"},"ts":1434024425000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah, I should browserify it","msgtype":"m.text"},"ts":1434024431000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"webidl2.js could have a distributed .min though, it's a nicety","msgtype":"m.text"},"ts":1434024462000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"AMD was a bad id from the start","msgtype":"m.text"},"ts":1434024471000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"idea, even","msgtype":"m.text"},"ts":1434024511000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1434024586000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I really had to fight RequireJS to get it to be useful for me","msgtype":"m.text"},"ts":1434024598000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's a bit of a nightmare","msgtype":"m.text"},"ts":1434024601000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well, a kludge at least","msgtype":"m.text"},"ts":1434024610000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it's probably not a huge port to just browserify the whole thing, I'd say a day's worth of work tops","msgtype":"m.text"},"ts":1434024641000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"famous last words","msgtype":"m.text"},"ts":1434024742000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: heh, nah, I really think it's not that much work","msgtype":"m.text"},"ts":1434024930000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"What should we call the flag that makes <img> and Beacon survive an environment settings object going down?","msgtype":"m.text"},"ts":1434025306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Any other APIs that do that?","msgtype":"m.text"},"ts":1434025315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"survive flag\"?","msgtype":"m.text"},"ts":1434025319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"survive client termination flag\"?","msgtype":"m.text"},"ts":1434025371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the gaynor flag","msgtype":"m.text"},"ts":1434025372000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Don't get the reference :/","msgtype":"m.text"},"ts":1434025412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you go with the longer one, it should be \"survive client-termination flag\" with a hyphen","msgtype":"m.text"},"ts":1434027337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"otherwise it sounds like it's a \"termination flag\" of some kind","msgtype":"m.text"},"ts":1434027366000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does that also go for \"local URLs only flag\"?","msgtype":"m.text"},"ts":1434027387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or \" same-origin data URL flag\"?","msgtype":"m.text"},"ts":1434027399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1434027410000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"unsafe request flag\"?","msgtype":"m.text"},"ts":1434027411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1434027415000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"CORS preflight flag\"?","msgtype":"m.text"},"ts":1434027419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes there too","msgtype":"m.text"},"ts":1434027426000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hyphens all","msgtype":"m.text"},"ts":1434027431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So many hyphens","msgtype":"m.text"},"ts":1434027433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well the alternative is ambiguity","msgtype":"m.text"},"ts":1434027447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"same-origin-data-URL?","msgtype":"m.text"},"ts":1434027447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to refactor HTML parsing code for character references","msgtype":"m.emote"},"ts":1434027458000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"test don't pass","msgtype":"m.text"},"ts":1434027461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"sandboxed storage area URLs flag\"...","msgtype":"m.text"},"ts":1434027496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"&notit; looks like something that never works right on the first try after changing code","msgtype":"m.text"},"ts":1434027496000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: \"same-origin data-URL flag\" I would think","msgtype":"m.text"},"ts":1434027500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I might need some help with where the hyphens need to go","msgtype":"m.text"},"ts":1434027507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks for a style-guide reference","msgtype":"m.emote"},"ts":1434027541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen, yay for tests :)","msgtype":"m.text"},"ts":1434027567000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I wish specifications had tests","msgtype":"m.text"},"ts":1434027583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha. I forgot to write some code I marked TODO a moment ago","msgtype":"m.text"},"ts":1434027594000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"For over a month all responses lost URLs","msgtype":"m.text"},"ts":1434027595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: you working on refactoring it in order to deal with the ambiguous-ampersand stuff?","msgtype":"m.text"},"ts":1434027619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And nobody noticed but me :-(","msgtype":"m.text"},"ts":1434027620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you wrote a test that would have caught it?","msgtype":"m.text"},"ts":1434027640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: sorry, Gloria Gaynor https://www.youtube.com/watch?v=ZBR2G-iI3-I","msgtype":"m.text"},"ts":1434027650000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hsivonen: btw are you waiting on me still for the patches parsing patches I pinged you for review?","msgtype":"m.text"},"ts":1434027657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"curses websockets","msgtype":"m.emote"},"ts":1434027664000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: this refactoring is not for the ambiguos ampersands, but this is a good opportunity for me to recap the code so that I could review the patch","msgtype":"m.text"},"ts":1434027812000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1434027827000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: the goal of this refactoring is to stop OOM crashes on the release channel","msgtype":"m.text"},"ts":1434027841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh boy","msgtype":"m.text"},"ts":1434027848000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that's a bit more important","msgtype":"m.text"},"ts":1434027855000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so CORS-preflight flag?","msgtype":"m.text"},"ts":1434027880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what I don't understand is why \"survive client-termination flag\" does not make it a \"client-termination flag\" of some kind","msgtype":"m.text"},"ts":1434027953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: well I'm not wedded to that patch, so if your refactoring makes it end up being \"overtaken by events\" in a way that's not mergeable to the refactored code,then no worries","msgtype":"m.text"},"ts":1434027992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: back in 2008, there was a plan for infallible malloc in Gecko, but only part of the plan was implemented. When I ported the parser, I was assuming the full plan would be implemented...","msgtype":"m.text"},"ts":1434028010000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: I think I'll need to merge it manually, yes","msgtype":"m.text"},"ts":1434028031000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: yeah \"CORS-preflight flag\" I think","msgtype":"m.text"},"ts":1434028036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: at I think I need to actually try stuff with the patch locally before I can review","msgtype":"m.text"},"ts":1434028055000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: this stuff is very hard to review by just looking at the code","msgtype":"m.text"},"ts":1434028066000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ok (about the manual merge) but I'm also happy to take another shot at it after the refactoring (if you want)","msgtype":"m.text"},"ts":1434028089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: yeah, agreed (about being hard to review just be looking at the code, with this stuff)","msgtype":"m.text"},"ts":1434028107000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess that means \"CORS preflight fetch\" and such need hyphens too?","msgtype":"m.text"},"ts":1434028132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: seems like a pretty big problem overall with https://fetch.spec.whatwg.org/ at the moment","msgtype":"m.text"},"ts":1434028170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I would say so but I'm not the definitive work on this stuff","msgtype":"m.text"},"ts":1434028180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"In general, a compound modifier comprising an adjective plus a noun and preceding the word or words it modifies should be hyphenated\"","msgtype":"m.text"},"ts":1434028196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I'll leave this hyphenless until someone can give me the rules","msgtype":"m.text"},"ts":1434028198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. looks like the html5lib tokenizer test format has changed since I last ran the tests","msgtype":"m.text"},"ts":1434028254000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: \"survive client-termination flag\" could also be \"survive-client-termination flag\" and yeah I agree it can start to look a bit silly and like overkill but the point is to make it clear and unambiguous, not necessarily pretty","msgtype":"m.text"},"ts":1434028304000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That latter spelling makes more sense to me","msgtype":"m.text"},"ts":1434028336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://www.economist.com/style-guide/hyphens is one guide with some example","msgtype":"m.text"},"ts":1434028380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., \"third-world war\" and \"third world war\" mean two different things","msgtype":"m.text"},"ts":1434028409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://www.apastyle.org/learn/faqs/when-use-hyphen.aspx is good too","msgtype":"m.text"},"ts":1434028459000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"darobin: does respec support syntax highlighting of JS? I assumed it did, but can't seem to get it working","msgtype":"m.text"},"ts":1434028576000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"http://www.thewriter.com/what-we-think/style-guide/to-hyphenate-or-not-to-hyphenate/","msgtype":"m.text"},"ts":1434028586000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The Chicago Manual of Style is *very* weird around this topic","msgtype":"m.text"},"ts":1434028591000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tobie: <pre class=\"example highlight\">.... should work","msgtype":"m.text"},"ts":1434028596000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"\"A man eating tiger\" vs \"A man-eating tiger\"","msgtype":"m.text"},"ts":1434028611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"IIRC, it says that \"Civil War-era\" should be written with an en dash instead of a hyphen. (who does that?)","msgtype":"m.text"},"ts":1434028624000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah Chicago Manual has a lot of quaint idiosyncrasies","msgtype":"m.text"},"ts":1434028677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"New Yorker magazine has some relics too, like they still use coöperate instead of cooperate like everybody else in the universe","msgtype":"m.text"},"ts":1434028800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: coöperate isn't as weird as promoting a hyphen to an en dash","msgtype":"m.text"},"ts":1434028850000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1434028858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: http://www.thepunctuationguide.com/en-dash.html#compoundadjectives says something about that odd en-dash usage","msgtype":"m.text"},"ts":1434029041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"When a compound adjective is formed with an element that is itself an open compound or hyphenated compound, some writers replace the customary hyphen with an en dash.\"","msgtype":"m.text"},"ts":1434029058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but yeah I don't know who those \"some writers\" are","msgtype":"m.text"},"ts":1434029071000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"The Oxford University Press style manual points out that ‘If you take hyphens seriously, you will surely go mad’.\"","msgtype":"m.text"},"ts":1434029121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the editorial board of CMoS probably","msgtype":"m.text"},"ts":1434029132000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(being \"some writers\" that is)","msgtype":"m.text"},"ts":1434029152000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in other news, I found a bug either in my parser code, in the unit tests or the spec. most likely in the parser","msgtype":"m.text"},"ts":1434029191000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"though I'm pretty sure that the code followed the spec when written","msgtype":"m.text"},"ts":1434029204000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the issue being the name of the token in the <!DOCTYPE> case","msgtype":"m.text"},"ts":1434029226000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"parser says \"\", tests say null","msgtype":"m.text"},"ts":1434029235000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hopes it's not a regression caused by code he touched but pretty sure it could not be","msgtype":"m.emote"},"ts":1434029633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: code comments suggests that the code is ancient and written to then-spec","msgtype":"m.text"},"ts":1434029689000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1434029699000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whew","msgtype":"m.text"},"ts":1434029701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"before the refactoring, I should have thought about overflowing numeric character references some more","msgtype":"m.text"},"ts":1434029720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wouldn't be surprised if the spec changed in the mean time then","msgtype":"m.text"},"ts":1434029722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"considers them now","msgtype":"m.emote"},"ts":1434029728000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"character references is massive PITA","msgtype":"m.text"},"ts":1434029741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1434029747000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not worth the cost but stuck with it now","msgtype":"m.text"},"ts":1434029754000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"finds a bug in the existing NCR overflow handling","msgtype":"m.emote"},"ts":1434030008000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fun","msgtype":"m.text"},"ts":1434030082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"only happens on EOF","msgtype":"m.text"},"ts":1434030282000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that code is no joy ride","msgtype":"m.text"},"ts":1434030408000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess it's the nature of the thing though","msgtype":"m.text"},"ts":1434030417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"&#11111111111EOF differs from &#1111111111EOF &#111111111111EOF &#11111111111x and &#11111111111;","msgtype":"m.text"},"ts":1434030460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that kinda rings some bells","msgtype":"m.text"},"ts":1434030510000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I independently noticed that when I was writing the othe patch","msgtype":"m.text"},"ts":1434030536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1434030542000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I spent quite a while looking at that code at the time, and testing","msgtype":"m.text"},"ts":1434030674000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I should have actually put some additional test cases somewhere","msgtype":"m.text"},"ts":1434030697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I sorta vaguely remember finding out, hmm, this doesn't actually work for all cases (I mean just as far as the patch I had written)","msgtype":"m.text"},"ts":1434030774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I assumed the reason it didn't work for some cases was a problem in the code in my patch and not a problem already in the existing code","msgtype":"m.text"},"ts":1434030818000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders what html5ever source for handling this stuff looks like","msgtype":"m.emote"},"ts":1434030843000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"peruses https://github.com/servo/html5ever/blob/master/src/tokenizer/char_ref/mod.rs","msgtype":"m.emote"},"ts":1434030931000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh I didn't know html5ever had actual error reporting for parse errors","msgtype":"m.text"},"ts":1434031057000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"WTAF","msgtype":"m.text"},"ts":1434031059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is my Firefox broken or are github using a non-fixed width font for code>","msgtype":"m.text"},"ts":1434031084000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, the font-family rule looks reasonable","msgtype":"m.text"},"ts":1434031216000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"looks like fixed-width in my Firefox","msgtype":"m.text"},"ts":1434031250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So apparently \"Consolas\" is being interpreted as something else","msgtype":"m.text"},"ts":1434031311000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for me","msgtype":"m.text"},"ts":1434031315000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I got \"Menlo Regular\" (system) Used as: \"Menlo\"","msgtype":"m.text"},"ts":1434031564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, isn't that a mac thing though","msgtype":"m.text"},"ts":1434031590000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1434031616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I guess so","msgtype":"m.text"},"ts":1434031620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah    font-family: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;","msgtype":"m.text"},"ts":1434031683000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"started using needsinfo on W3C Bugzilla","msgtype":"m.emote"},"ts":1434032108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So far, positive results!","msgtype":"m.text"},"ts":1434032114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay glob","msgtype":"m.text"},"ts":1434032222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm. does the spec really now involve scanning for an arbitrarily large number of alphanumeric ASCII after & to see if the sequence is followed by ;?","msgtype":"m.text"},"ts":1434032963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"to see if it's a parse error or not","msgtype":"m.text"},"ts":1434032977000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cd /home/visualisierte/Web/uiani","msgtype":"m.text"},"ts":1434032982000,"senderName":"srji","senderId":"srji@irc"},
{"content":{"body":"edit dom.bs","msgtype":"m.text"},"ts":1434033154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DoubleLongLeftRightArrow;","msgtype":"m.text"},"ts":1434033179000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ClockwiseContourIntegral;","msgtype":"m.text"},"ts":1434033186000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ooh. there is","msgtype":"m.text"},"ts":1434033194000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"CounterClockwiseContourIntegral;","msgtype":"m.text"},"ts":1434033201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that seems to be the longest valid character reference name","msgtype":"m.text"},"ts":1434033238000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I guess I should check programmatically","msgtype":"m.text"},"ts":1434033247000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wishes https://html.spec.whatwg.org/entities.json had existed way back when","msgtype":"m.emote"},"ts":1434033277000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: can you elaborate on what you mean in this comment?  https://github.com/slightlyoff/ServiceWorker/issues/710#issuecomment-111017003","msgtype":"m.text"},"ts":1434034398000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"what impact does opaque have on <img>?","msgtype":"m.text"},"ts":1434034407000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that you cannot paint it on canvas and then read the bytes","msgtype":"m.text"},"ts":1434034427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"read the pixels*","msgtype":"m.text"},"ts":1434034432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is that spec'd anywhere yet?","msgtype":"m.text"},"ts":1434034441000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and what behavior should painting on canvas implement?  display, but reading rejects or returns zero or something?","msgtype":"m.text"},"ts":1434034500000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, once you paint on canvas that taints it","msgtype":"m.text"},"ts":1434034602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is specced","msgtype":"m.text"},"ts":1434034609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is not specced is that if <img> gets an opaque response it needs to look at the internal response","msgtype":"m.text"},"ts":1434034624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the idea is that most new features would not look at the internal response but would use the same API as everyone else","msgtype":"m.text"},"ts":1434034646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thereby not creating new cross-origin information leaks","msgtype":"m.text"},"ts":1434034661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(<img> leaks height/width)","msgtype":"m.text"},"ts":1434034669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"its in the canvas spec?","msgtype":"m.text"},"ts":1434034717000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1434034812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"origin-clean","msgtype":"m.text"},"ts":1434034827000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I see it","msgtype":"m.text"},"ts":1434034828000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"now to find where gecko implements that","msgtype":"m.text"},"ts":1434034842000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I think maybe we should write a separate spec issue for this... the only thing I see in the SW spec is non-normative text: \"Renderer-side security checks about tainting for cross-origin content are tied to the transparency (or opacity) of the Response body, not URLs.\"","msgtype":"m.text"},"ts":1434036539000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it seems the steps should say something about tainting based on opacity","msgtype":"m.text"},"ts":1434036556000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess the steps don't really say to do anything in respondWith()... they just... end","msgtype":"m.text"},"ts":1434036634000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, no it returns it to Main Fetch through HandleFetch","msgtype":"m.text"},"ts":1434036828000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: does normal document loading integrate with Main Fetch or HandleFetch anywhere?  maybe thats what I am missing","msgtype":"m.text"},"ts":1434036844000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: everything invokes #concept-fetch","msgtype":"m.text"},"ts":1434037104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I guess I need to review SW again","msgtype":"m.text"},"ts":1434037134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does it say to use the internal body of an opaque response?  because I guess its the internal things that use fetch that need to say that","msgtype":"m.text"},"ts":1434037167000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't follow","msgtype":"m.text"},"ts":1434037256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: ah, when you navigate someplace and get an opaque response that fails","msgtype":"m.text"},"ts":1434037284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: Fetch has some checks for that, results in a network error","msgtype":"m.text"},"ts":1434037296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry, not navigate itself...","msgtype":"m.text"},"ts":1434037298000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: what in spec says the browser should look at the internal response body when an opaque response is passed to respondWith() for a resource load (not navigation)","msgtype":"m.text"},"ts":1434037345000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1434037346000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"doesn't that need to be done in whatever uses #concept-fetch?","msgtype":"m.text"},"ts":1434037365000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1434037440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: Fetch also needs to work on the internal response","msgtype":"m.text"},"ts":1434037512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but does something in the main html spec use concept-fetch?","msgtype":"m.text"},"ts":1434037533000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it currently doesn't in https://fetch.spec.whatwg.org/#concept-http-fetch which might be buggy","msgtype":"m.text"},"ts":1434037534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: not literally right now, but the whole platform does conceptually","msgtype":"m.text"},"ts":1434037557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"back later","msgtype":"m.text"},"ts":1434037625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, I think its literal for the respondWith() case, right?  the browser is loading an <img> element and the SW intercepts with respondWith()... that integration between <img> load and respondWith() Response is not really spec'd anywhere yet, right?","msgtype":"m.text"},"ts":1434037627000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: once HTML et al are updated to use #concept-fetch, that would be specified","msgtype":"m.text"},"ts":1434037720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1434037727000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean, as long as those specifications are not updated, nothing would result in a SW being booted to handle their fetches...","msgtype":"m.text"},"ts":1434037758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Technically...","msgtype":"m.text"},"ts":1434037765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1434037821000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"stuff like passing on the tainting is not spec'd yet either, then","msgtype":"m.text"},"ts":1434037831000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1434037900000,"senderName":"ek_","senderId":"ek_@irc"},
{"content":{"body":"i have a question related to HTML5 spec","msgtype":"m.text"},"ts":1434037909000,"senderName":"ek_","senderId":"ek_@irc"},
{"content":{"body":"In the spec when it says await a stable state","msgtype":"m.text"},"ts":1434037921000,"senderName":"ek_","senderId":"ek_@irc"},
{"content":{"body":"what does it mean by stable state?","msgtype":"m.text"},"ts":1434037934000,"senderName":"ek_","senderId":"ek_@irc"},
{"content":{"body":"I wanted to bring to your attention an issue I have with :focus and :hover being separate pseudo-classes, and pitching a solution @ http://discourse.specifiction.org/t/a-common-pseudo-class-for-hover-and-focus/877","msgtype":"m.text"},"ts":1434038345000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"heycam: you around?","msgtype":"m.text"},"ts":1434040069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: the algorithms to get bytes out of a BufferSource can throw","msgtype":"m.text"},"ts":1434040096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: due to e.g. the buffer being detached","msgtype":"m.text"},"ts":1434040103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: it would be much nicer if the binding layer threw, no?","msgtype":"m.text"},"ts":1434040115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/orgs/improved-permissions?utm_source=github_site&utm_medium=blog&utm_campaign=organization-permissions looks useful","msgtype":"m.text"},"ts":1434040261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: hi, yes but about to head out to dinner","msgtype":"m.text"},"ts":1434041633000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: where is the algorithm now, in Fetch?","msgtype":"m.text"},"ts":1434041870000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: oh no, we've got the \"get a copy of the bytes held by the buffer source\" term in IDL","msgtype":"m.text"},"ts":1434041921000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and \"Attempting to get a reference to or get a copy of the bytes held by a buffer source when the ArrayBuffer has been detached will fail in a language binding-specific manner.\"","msgtype":"m.text"},"ts":1434041937000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so yes, I think having something in IDL that says the specific failure mode would be good","msgtype":"m.text"},"ts":1434041955000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hmm, so in http://heycam.github.io/webidl/#es-buffer-source-types we check for [[ArrayBufferData]] being null, and throw","msgtype":"m.text"},"ts":1434042048000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which I think is the state when the buffer has been detached","msgtype":"m.text"},"ts":1434042056000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"can you verify that's right?","msgtype":"m.text"},"ts":1434042063000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam|away: yeah","msgtype":"m.text"},"ts":1434045021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: I'll file a bug on making that use  IsDetachedBuffer","msgtype":"m.text"},"ts":1434045030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: btw we are collecting code coverage on web-platform-tests vs. jsdom/whatwg-url: https://github.com/jsdom/whatwg-url/issues/8","msgtype":"m.text"},"ts":1434049818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: hopefully we will supplement web-platform-tests with 100% coverage before this is all over","msgtype":"m.text"},"ts":1434049834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"right now it is like 70%","msgtype":"m.text"},"ts":1434049842000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic++","msgtype":"m.text"},"ts":1434050715000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this is probably a very daft question, is it possible to throw DOM Exceptions from application code, and if so, what's the best practice to do it?","msgtype":"m.text"},"ts":1434050916000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"new DOMException()","msgtype":"m.text"},"ts":1434050996000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Works in Gecko","msgtype":"m.text"},"ts":1434051006000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not in Chrome yet, but soon","msgtype":"m.text"},"ts":1434051066000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, that's why. :)","msgtype":"m.text"},"ts":1434051197000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: in firefox: throw new DOMException(\"hi\", \"SyntaxError\"); http://jsfiddle.net/gm2czfva","msgtype":"m.text"},"ts":1434051223000,"senderName":"jib","senderId":"jib@irc"},
{"content":{"body":"ty jib","msgtype":"m.text"},"ts":1434051294000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Who still theoretically \"maintains\" Anolis?  Can we get that person to put a big \"THIS TOOL IS NOT MAINTAINED, PLEASE USE BIKESHED INSTEAD\" message on all the docs and download pages?","msgtype":"m.text"},"ts":1434053009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: ^","msgtype":"m.text"},"ts":1434053031000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: ^^","msgtype":"m.text"},"ts":1434053065000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Someone just dropped by w3c#pub with a problem publishing a spec using Anolis, and robin was rightly horrified that they were even capable of doing that at this point.)","msgtype":"m.text"},"ts":1434053099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(something, something, horrified, respec, something)","msgtype":"m.text"},"ts":1434053128000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Baby steps.","msgtype":"m.text"},"ts":1434053171000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bikeshed > respec b/c js;dr something something","msgtype":"m.text"},"ts":1434053185000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Well, there are a few reasons, related to both user experience and ecosystem health, but yeah.","msgtype":"m.text"},"ts":1434054019000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: agreed, hence the something something :)","msgtype":"m.text"},"ts":1434054174000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tobie: per spec, `new` is optional for DOMException() constructor, just like native JS errors. That's holding me up landing Chrome support (it shouldn't but I'm also lazy...)","msgtype":"m.text"},"ts":1434054734000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: do we get to add new error codes to it?","msgtype":"m.text"},"ts":1434054825000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(asking for a friend)","msgtype":"m.text"},"ts":1434054837000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: no; if you pass a known name (from webidl spec) it gets stamped with the right code, otherwise .code === 0","msgtype":"m.text"},"ts":1434054886000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Unless you meant new error names, in which case yeah, use any string you want.","msgtype":"m.text"},"ts":1434054911000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I don't know what I meant","msgtype":"m.text"},"ts":1434054938000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Imagine I'd like to have CacheMissError in a spec, how would I go about doing that?","msgtype":"m.text"},"ts":1434054984000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins, can do, send me email","msgtype":"m.text"},"ts":1434055014000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tobie: \"throw a CacheMissError exception.\" where 'throw' references the algorithm in webidl","msgtype":"m.text"},"ts":1434055047000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"and that's it?","msgtype":"m.text"},"ts":1434055073000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I don't need to define CacheMissError anywhere?","msgtype":"m.text"},"ts":1434055089000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"goes crazy","msgtype":"m.emote"},"ts":1434055108000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: or \"throw a new DOMException with error name CacheMissError\"","msgtype":"m.text"},"ts":1434055110000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"it's just a string","msgtype":"m.text"},"ts":1434055113000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"go wild","msgtype":"m.text"},"ts":1434055114000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"(the former is the short form I've seen annevk using and I've borrowed, webidl uses the latter)","msgtype":"m.text"},"ts":1434055139000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"throws a NSFWError exception.","msgtype":"m.emote"},"ts":1434055194000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1434055210000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"webidl says \"if you invent new exception types, report 'em and they'll get added asap\" but I think that's just to keep the documentation in one place","msgtype":"m.text"},"ts":1434055243000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"in IDB \"v2' I still have all the exception types documented, but it does defer all details to webidl","msgtype":"m.text"},"ts":1434055259000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1434055284000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(^^ not an actual quote)","msgtype":"m.text"},"ts":1434055299000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"HI","msgtype":"m.text"},"ts":1434065167000,"senderName":"ek_","senderId":"ek_@irc"},
{"content":{"body":" In HTML5 specs it talks about event loop which is responsible for processing events from the task queues. I was wondering which thread can enqueue events? Lets say if there is a UI event will there be a separate thread that will enqueue event and that event will be processed by the event loop?","msgtype":"m.text"},"ts":1434065169000,"senderName":"ek_","senderId":"ek_@irc"}
]