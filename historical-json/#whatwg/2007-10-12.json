[
{"content":{"body":"mjs, others, any input on this? http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-October/012683.html","msgtype":"m.text"},"ts":1192149000000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"should i include such an API?","msgtype":"m.text"},"ts":1192149001000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: hadn't thought about it deeply - I can see how it might be useful, the only concern I have is that preflighting for the availability of a resource in the cache instead of looking for an error on access introduces possible races","msgtype":"m.text"},"ts":1192149120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(in other words the cache item could expire between when you ask and when you try to access it)","msgtype":"m.text"},"ts":1192149121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1192149122000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and vice versa, could be added in between","msgtype":"m.text"},"ts":1192149180000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1192149181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or you could go offline/online in between, thus changing the rules of what resources can be served even expired","msgtype":"m.text"},"ts":1192149182000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I'm not sure how to achieve the desired result without preflighting","msgtype":"m.text"},"ts":1192149183000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1192149240000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"could the API take a function that is executed iff the resource is available? then the impl could synchronize on the cache","msgtype":"m.text"},"ts":1192149300000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1192149301000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"doesn't know how hard is suggestion would be to implement","msgtype":"m.emote"},"ts":1192149302000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"the hard part to implement would be ensuring whatever load you may trigger uses that cached copy","msgtype":"m.text"},"ts":1192149420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it could be setting a frame's window.location, it could be setting an img src, it could be an XMLHttpRequest...","msgtype":"m.text"},"ts":1192149421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's lots of ways to trigger a resource load","msgtype":"m.text"},"ts":1192149422000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in a sense the most robust API would be to add a \"try if local, otherwise error\" version of all of those","msgtype":"m.text"},"ts":1192149423000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or at least the ones that are considered important for this purpose","msgtype":"m.text"},"ts":1192149480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"good morning :-)","msgtype":"m.text"},"ts":1192176840000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: morning","msgtype":"m.text"},"ts":1192177740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder what the point of the NCNameness of xml:id is or the point of the normalization","msgtype":"m.text"},"ts":1192181640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"architecture","msgtype":"m.text"},"ts":1192181760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"*xml* architecture","msgtype":"m.text"},"ts":1192181761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"off-hand, I don't see what architectural problem the NCNameness solves here","msgtype":"m.text"},"ts":1192181940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's just an arbitrary \"we like this kind of strings but not other kinds of strings\"","msgtype":"m.text"},"ts":1192182000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"my implication is that everything about xml boils down to that sort of thing","msgtype":"m.text"},"ts":1192182001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1192182060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so far, xml:id is taking me more than thrice the # of lines of code needed for XHTML5 ids.","msgtype":"m.text"},"ts":1192182120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for now, I'm going to pretend that the conditional IDness of SVG 1.2 id doesn't exist and SVG ids are unconditionally IDs.","msgtype":"m.text"},"ts":1192182360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"conditional idness?","msgtype":"m.text"},"ts":1192182420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"are id attributes not ID when an xml:id is also present or something?","msgtype":"m.text"},"ts":1192182480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: according to SVG 1.2, IIRC, yes","msgtype":"m.text"},"ts":1192182481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not cool","msgtype":"m.text"},"ts":1192182482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"they probably did that to work around the fact that you can't have id=\"x\" xml:id=\"x\"","msgtype":"m.text"},"ts":1192182483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which you would need to both work with older versions of SVG and to drink the latest kool-aid","msgtype":"m.text"},"ts":1192182540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it is easy to guess why they did it, but it is the wrong fix","msgtype":"m.text"},"ts":1192182660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: the right fix is to use only id='x' without xml:id='x'","msgtype":"m.text"},"ts":1192182661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"anyway, last bullet point under http://www.w3.org/TR/SVGMobile12/struct.html#Core.attrib","msgtype":"m.text"},"ts":1192182662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: but that would entail not using xml:id, which is the cool new thing, and thus obviously right to use","msgtype":"m.text"},"ts":1192182663000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so my memory didn't fail me","msgtype":"m.text"},"ts":1192182664000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: would you be shot down for not supporting xml:id at all? :)","msgtype":"m.text"},"ts":1192182900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't know","msgtype":"m.text"},"ts":1192183500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I feel like venting on www-svg, but it would probably be wasted effort","msgtype":"m.text"},"ts":1192183501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I figured that now that the idea of href='' instead of xlink:href='' is no longer outrageous, I might as well try suggesting not working around the problems xml:id creates","msgtype":"m.text"},"ts":1192185780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Where would href i.o. xlink:href be outrageous? Not in html5, I suppose. In xhtml5 perhaps?","msgtype":"m.text"},"ts":1192185960000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"OmegaJunior: SVG","msgtype":"m.text"},"ts":1192186080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1192186081000,"senderName":"OmegaJunior","senderId":"OmegaJunior@irc"},
{"content":{"body":"Hixie_: is there a good reason why ID assignment shouldn't happen if the ID candidate is the empty string? why the exception?","msgtype":"m.text"},"ts":1192186620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cp%20id%3D%22%22%3E%3Cscript%3Ew(document.getElementById(%22%22))%3C%2Fscript%3E","msgtype":"m.text"},"ts":1192188120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"null in ie, firefox, safari","msgtype":"m.text"},"ts":1192188121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok. thanks","msgtype":"m.text"},"ts":1192188180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie_, yt?","msgtype":"m.text"},"ts":1192189440000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie_, the data URI kitchen is broken http://software.hixie.ch/utilities/cgi/data/data","msgtype":"m.text"},"ts":1192189500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie_, it seems to only work for file uploads, not text input or http URIs","msgtype":"m.text"},"ts":1192189560000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"nice, roc followed up on isLocallyAvailable so I don't have to feel obligated to do so :-)","msgtype":"m.text"},"ts":1192190340000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"was something interesting said during the telecon? reading the log it seemed pretty hollow","msgtype":"m.text"},"ts":1192196160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I suppose attributes that have IDness should have IDness and remain in the infoset even if the value is \"\". so all code everywhere that is ID-sensitive needs to check both for IDness and the value emptystringness :-(","msgtype":"m.text"},"ts":1192196340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"why do you suppose so?","msgtype":"m.text"},"ts":1192196520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it seems wrong to change the IDness based on value. moreover, I'm not sure if non-validating DTD processing could inject \"\"-valued IDs into the pipeline","msgtype":"m.text"},"ts":1192196580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1192196640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"then html5 shouldn't say that empty id=\"\" doesn't do ID assignment, but dom core should say that the empty string as argument to getElementById() should return null","msgtype":"m.text"},"ts":1192196700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"correct?","msgtype":"m.text"},"ts":1192196760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: depends on whether ID assignment and IDness assignment mean different things","msgtype":"m.text"},"ts":1192197300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IDness assignment clearly means if querying the attribute for its type return \"ID\"","msgtype":"m.text"},"ts":1192197301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not sure what ID assigment exactly means but I understood in to mean: put in a hashtable with the ID value as the key","msgtype":"m.text"},"ts":1192197360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"keeps mistyping assignment over and over","msgtype":"m.emote"},"ts":1192197361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i should write an xml-stylesheet spec that doesn't have fatal error requirements","msgtype":"m.text"},"ts":1192199100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which would also benefit xbl2","msgtype":"m.text"},"ts":1192199160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder how i should approach that...","msgtype":"m.text"},"ts":1192200660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i mean, to make progress, i should just go ahead and reverse engineer relevant implementations, write test cases and a spec, then ask for feedback","msgtype":"m.text"},"ts":1192200720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but politically that might not be the best way to do it","msgtype":"m.text"},"ts":1192200780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"perhaps i should start out with reverse engineering and demos, and point out the problems to the relevant WG(s), and if i don't get a response then i go ahead and write a spec and then ask for feedback","msgtype":"m.text"},"ts":1192200900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"any thoughts? which are the relevant WGs for xml-stylesheet?","msgtype":"m.text"},"ts":1192201320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, xml core wg seems most appropriate","msgtype":"m.text"},"ts":1192201440000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: ok","msgtype":"m.text"},"ts":1192201441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"on http://www.w3.org/XML/Group/Core they list working on that document again as a \"future task\"","msgtype":"m.text"},"ts":1192201500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sleeps","msgtype":"m.emote"},"ts":1192201620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan: fwiw, the idea that XML Core WG has about \"relevant implmentations\" is likely to be radically different from yours","msgtype":"m.text"},"ts":1192202160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hello guys! pardon me barging into the discussion. i have one quick question: did microsoft (via chris wilson?) publish the complete html5 review? iirc, it was supposed they'll publish a review. i haven't seen it yet","msgtype":"m.text"},"ts":1192203120000,"senderName":"ROBOd","senderId":"ROBOd@irc"},
{"content":{"body":"They haven't done, though ChrisW mentioned it yesterday","msgtype":"m.text"},"ts":1192203180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"00:29 < DanC> ChrisW: yes, I'm working with the IE team on our review...","msgtype":"m.text"},"ts":1192203240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"00:30 < DanC> ... I'll have some stuff sent out prior to the ftf meeting.","msgtype":"m.text"},"ts":1192203241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aha, thanks Philip` ","msgtype":"m.text"},"ts":1192203300000,"senderName":"ROBOd","senderId":"ROBOd@irc"},
{"content":{"body":"hsivonen: i'd like to learn which implementations they consider relevant","msgtype":"m.text"},"ts":1192203420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://blogs.s60.com/browser/2007/10/coring_the_browser.html -- hmm, so they support SVG via plugin instead of using WebCore's native support? (remember that they parse xml with the html parser)","msgtype":"m.text"},"ts":1192207620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"The difference with browsing is that HTML, CSS and ECMAScript create a really complex system, and the standards can never exactly specify the \"correct\" behavior in every case.\"","msgtype":"m.text"},"ts":1192207800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1192207860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is thomas broyer around here?","msgtype":"m.text"},"ts":1192217520000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"Lachy: odd","msgtype":"m.text"},"ts":1192218960000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh i know why","msgtype":"m.text"},"ts":1192218961000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"issues with the content-type sanitation","msgtype":"m.text"},"ts":1192218962000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1192219080000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hello, we're using html5lib to generate plain text from archived html pages.  we're finding html5lib bombs out with maximum recursion errors on some pages.","msgtype":"m.text"},"ts":1192224120000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Vito`: please give an example","msgtype":"m.text"},"ts":1192224121000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"http://mavra.perilith.com/~vito/html5lib/2002-0919-120019.html","msgtype":"m.text"},"ts":1192224240000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"this is the python html5lib, and we're just doing parser=html5lib.HTMLParser();dom=parser.parse(filecontents);","msgtype":"m.text"},"ts":1192224300000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"backtrace?","msgtype":"m.text"},"ts":1192224301000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"maximum recursion depth reached, or some such","msgtype":"m.text"},"ts":1192224302000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"the backtrace is accordingly > 1000 lines","msgtype":"m.text"},"ts":1192224360000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"that'd be the error message. do you have backtrace?","msgtype":"m.text"},"ts":1192224361000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1192224362000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"can you at least give us an idea of where the recursion is happening?","msgtype":"m.text"},"ts":1192224363000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"lines 273 and 866 are repeated","msgtype":"m.text"},"ts":1192224364000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"of what file?","msgtype":"m.text"},"ts":1192224365000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"and which version of html5lib are you using?","msgtype":"m.text"},"ts":1192224420000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"html5parser.py, in endTagHtml, self.parser.phase.processEndTag(name) and self.endTagHandler[name](name)","msgtype":"m.text"},"ts":1192224421000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"I can't reproduce the error in trunk in either python or ruby","msgtype":"m.text"},"ts":1192224480000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1192224481000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"which version are you using?","msgtype":"m.text"},"ts":1192224540000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"I get no error in the Python trunk version either","msgtype":"m.text"},"ts":1192224541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"trying to find out","msgtype":"m.text"},"ts":1192224542000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"and http://james.html5.org/cgi-bin/parsetree/parsetree.py?uri=http%3A%2F%2Fmavra.perilith.com%2F%7Evito%2Fhtml5lib%2F2002-0919-120019.html looks alright","msgtype":"m.text"},"ts":1192224543000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I thought it was the latest, but I guess we're running 0.9 or something.  Installing 0.10 locally got the first batch of failures passing.","msgtype":"m.text"},"ts":1192225440000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"I'll let you know if anything new comes up.  Thanks for the sanity check.","msgtype":"m.text"},"ts":1192225441000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Hmm. In principle there are places where html5lib could have problems with recursion as it uses recursive algorithms in some places where iterative ones could be used","msgtype":"m.text"},"ts":1192225860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But AFAIK there was at least one infinite loop bug fixed since 0.9","msgtype":"m.text"},"ts":1192225861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we have a bit over 23k archived pages and we were hitting something pretty frequently","msgtype":"m.text"},"ts":1192225920000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"but it's all OKs so far with 0.10","msgtype":"m.text"},"ts":1192225921000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"If you're parsing lots of pages, it may be worth looking at hsivonen's Java HTML5 parser since it's around a hundred times faster than the Python one","msgtype":"m.text"},"ts":1192226220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"alright, I've an AssertionError using 0.10.  Should I try with trunk or are they the same?","msgtype":"m.text"},"ts":1192226340000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"they're mostly the same","msgtype":"m.text"},"ts":1192226460000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"happens with trunk as well","msgtype":"m.text"},"ts":1192226580000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"http://mavra.perilith.com/~vito/html5lib/2003-0701-120001.html","msgtype":"m.text"},"ts":1192226640000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"I can save these and stuff them all into the issue tracker as well, of course","msgtype":"m.text"},"ts":1192226641000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"given that many more are passing than failing now","msgtype":"m.text"},"ts":1192226642000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Vito`: That looks like a recent regression. I'll have to investigate further","msgtype":"m.text"},"ts":1192228080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I've had a handful of those now, plus one with an encoding error.  I'll just put them all in the tracker.","msgtype":"m.text"},"ts":1192228140000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"(in the meantime you can try removing the assertion that fires; I _think_ the only bad side effect is that the source position reported for errors might be wrong)","msgtype":"m.text"},"ts":1192228200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1192228201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Vito`: Add me as the owner for the bugs you file (jgraham.html)","msgtype":"m.text"},"ts":1192228320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1192228380000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"othermaciej: do you mind if i skip replying to <video>-related e-mails from you if the spec already does everything you asked for in those e-mails, or would you rather have replies to all your mails? (either is fine, just checking which you prefer)","msgtype":"m.text"},"ts":1192228800000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: if the emails predate the current version of <video> then I can do without such replies","msgtype":"m.text"},"ts":1192228801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie_: I will have new feedback from Apple soon relative to the current spec as a baseline, so I am not worried about things getting lost","msgtype":"m.text"},"ts":1192228860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1192228861000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"these predate the <video> dinner at google","msgtype":"m.text"},"ts":1192228920000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Vito`: I think I have fixed one of your issues. I'll update svn in a few minutes once I fix a few issues with my working copy","msgtype":"m.text"},"ts":1192229340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1192229700000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"\"Warning: Undefined behaviour for end tag section\"","msgtype":"m.text"},"ts":1192229701000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"didn't log the file for that one, darn","msgtype":"m.text"},"ts":1192229702000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Vito`: That's expected","msgtype":"m.text"},"ts":1192229703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1192229760000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"<section> is a new HTML 5 tag but its parsing isn't yet defined (we treat it like a generic unkown element). However you will sometimes find authors inventing tags in the wild","msgtype":"m.text"},"ts":1192229761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So you could have encountered a rouge <section>","msgtype":"m.text"},"ts":1192229820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder what page that was.  There were ~30 of them.","msgtype":"m.text"},"ts":1192229821000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"a red section? Is that, like, a porn site?","msgtype":"m.text"},"ts":1192229822000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ?","msgtype":"m.text"},"ts":1192229880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rouge","msgtype":"m.text"},"ts":1192229881000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"maybe you mean rogue, Vito`","msgtype":"m.text"},"ts":1192229882000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Sorry being slow","msgtype":"m.text"},"ts":1192229883000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sorry :-)","msgtype":"m.text"},"ts":1192229940000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":-p","msgtype":"m.text"},"ts":1192229941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume \"Warning: Undefined behaviour for end tag header\" is the same sort of thing?","msgtype":"m.text"},"ts":1192230000000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Uh hu.","msgtype":"m.text"},"ts":1192230060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fascinating","msgtype":"m.text"},"ts":1192230061000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Hmm. Odd. html5lib is failing unit tests even without my change. This isn't supposed to happen :-|","msgtype":"m.text"},"ts":1192230180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe it's just kingryan's extra tests","msgtype":"m.text"},"ts":1192230420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Incidentally, RIP has slightly interesting error handling - it has a version field, and v1 of the spec defines draconian error handling for packets with version=1 (e.g. reserved fields must contain zero, else the data is rejected), but non-draconian handling if the packet has version >= 2","msgtype":"m.text"},"ts":1192231020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what's RIP? And is that actually implemented?","msgtype":"m.text"},"ts":1192231021000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(and do people ever give a version field?)","msgtype":"m.text"},"ts":1192231080000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so v2 of the protocol can start using the reserved fields, being certain that v1 implementations won't be sneakily using those fields anyway, while still being backward-compatible with v1 implementations","msgtype":"m.text"},"ts":1192231081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's a routing protocol","msgtype":"m.text"},"ts":1192231082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(RFC1058)","msgtype":"m.text"},"ts":1192231083000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1192231084000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, that RIP","msgtype":"m.text"},"ts":1192231085000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i shoulda recognised the name","msgtype":"m.text"},"ts":1192231140000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"As far as I'm aware, people do actually use it (on very small networks, since it's very simple (which is why I've been looking at RIP and not at anything more interesting and complex :-) ))","msgtype":"m.text"},"ts":1192231260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1192231320000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"jgraham...  I'm most of the way through this corpus now, and that assertion error and the unicode error are the only two unique failures I've seen","msgtype":"m.text"},"ts":1192231380000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"(I think I'll end up having to work with BGP, which looks much scarier)","msgtype":"m.text"},"ts":1192231381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Vito`: That sounds like it could be worse (did you get the message that I checked in a fix that I think helps with the assertion to trunk?)","msgtype":"m.text"},"ts":1192231440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if it's in trunk I'll update and check the pages against it","msgtype":"m.text"},"ts":1192231500000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"also html5lib can't handle GIF files with inappropriate MIME types","msgtype":"m.text"},"ts":1192231740000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"just...  so you know","msgtype":"m.text"},"ts":1192231800000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Hmm, it worked fine when I passed a PDF through it once","msgtype":"m.text"},"ts":1192231801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What kind of problem did you get?","msgtype":"m.text"},"ts":1192231802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"unicodedecodeerror","msgtype":"m.text"},"ts":1192231860000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1192231920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1192231921000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"recursion error","msgtype":"m.text"},"ts":1192231922000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"and it didn't log","msgtype":"m.text"},"ts":1192231923000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"argh","msgtype":"m.text"},"ts":1192231924000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Vito`: I don't lnow what test data you're using but it clearly rocks :)","msgtype":"m.text"},"ts":1192232040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's just our group's cache of bookmarked sites, crawled over the past few years","msgtype":"m.text"},"ts":1192232100000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"jgraham: yes, I've added some test which may break the python impl","msgtype":"m.text"},"ts":1192232101000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"jgraham: in ruby it was mostly a matter of adding error messages to the parserError() calls","msgtype":"m.text"},"ts":1192232102000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"kingryan: It mostly seems to be small things; I'm just working through it now","msgtype":"m.text"},"ts":1192232103000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1192232160000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"I meant to write a note to the ML about it, but forgot","msgtype":"m.text"},"ts":1192232161000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"jgraham...  testing against your updated trunk now","msgtype":"m.text"},"ts":1192232220000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"jgraham...  looks good against a couple of the failing pages","msgtype":"m.text"},"ts":1192232400000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"jgraham...  I can't seem to mark you as owner of the unicode issue I just reported","msgtype":"m.text"},"ts":1192232700000,"senderName":"Vito`","senderId":"Vito`@irc"},
{"content":{"body":"Vito`: Not to worry; I'll do it","msgtype":"m.text"},"ts":1192232701000,"senderName":"jgraham","senderId":"jgraham@irc"}
]