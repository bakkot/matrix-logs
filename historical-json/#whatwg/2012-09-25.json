[
{"content":{"body":"You don't seem to understand how much people hate A/a.","msgtype":"m.text"},"ts":1348531339000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're *horrible* API for most use-cases.","msgtype":"m.text"},"ts":1348531353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, your encouragement won't do much, since it's Dirk who'll be doing it for us. ^_^","msgtype":"m.text"},"ts":1348531378000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i have no trouble understanding that A/a is bad","msgtype":"m.text"},"ts":1348531415000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i have no trouble with the idea of adding new ways of doinh arcs","msgtype":"m.text"},"ts":1348531423000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"my problem is with this idea of adding new names for each command","msgtype":"m.text"},"ts":1348531434000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or adding any names that aren't short one-letter names","msgtype":"m.text"},"ts":1348531443000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"There are no reasonable letters left for new arc commands.","msgtype":"m.text"},"ts":1348531509000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, the fact that a smooth quadratic uses T shows that we're out of reasonable letters already. ^_^","msgtype":"m.text"},"ts":1348531583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand the concern","msgtype":"m.text"},"ts":1348531598000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"why does it matter what the letters are?","msgtype":"m.text"},"ts":1348531629000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you just find a mnemonic and go with it","msgtype":"m.text"},"ts":1348531640000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. E for ellipse","msgtype":"m.text"},"ts":1348531646000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"?_?  You're asserting that we should continue with the practice of adding single-letter command names.  I'm claiming that there are no reasonable single-letter names for those commands.","msgtype":"m.text"},"ts":1348531655000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or R for rounded corner","msgtype":"m.text"},"ts":1348531658000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or O for circle","msgtype":"m.text"},"ts":1348531671000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or V for curVe","msgtype":"m.text"},"ts":1348531683000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you don't double the size of a language because of lack of imagination","msgtype":"m.text"},"ts":1348531700000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Separately, I assert that the single-letter names are stupid.  Syntax minimization at its worst.","msgtype":"m.text"},"ts":1348531700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's fine, but that boat sailed years ago","msgtype":"m.text"},"ts":1348531711000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yup, and it's returned, and we're changing the rigging on it now.","msgtype":"m.text"},"ts":1348531724000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is bad language design","msgtype":"m.text"},"ts":1348531731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if you're gonna start adding replacement features for everything SVG screwed up, you're gonna end up with the world's most confusing language","msgtype":"m.text"},"ts":1348531741000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"adding features doesn't simplify","msgtype":"m.text"},"ts":1348531750000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It's consistent with the names of the subpath *elements* we're adding.","msgtype":"m.text"},"ts":1348531752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it only makes things worse","msgtype":"m.text"},"ts":1348531755000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh god, you're adding elements too?","msgtype":"m.text"},"ts":1348531762000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I understand that you think that.  I agree some of the time.","msgtype":"m.text"},"ts":1348531764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: why is it not true here?","msgtype":"m.text"},"ts":1348532780000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins, y u n l c s?","msgtype":"m.text"},"ts":1348533520000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hixie: Consistency is a virtue, but not an absolute one.  One must balance it against the benefits of whatever is breaking consistency.  Also, being consistent with the future and pushing the past to the side can mitigate a lot of the pain of inconsistency.","msgtype":"m.text"},"ts":1348536557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Basically, it's just an error to reject something solely because it's inconsistent with the present.","msgtype":"m.text"},"ts":1348536582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders why http://dev.w3.org/html5/spec/the-canvas-element.html#the-canvas-element suggests XBL as somehow being something you could use ...","msgtype":"m.emote"},"ts":1348536703000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"It was written a while ago.","msgtype":"m.text"},"ts":1348536715000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'm not talking about being consistent, though, i'm talking about adding redundant features","msgtype":"m.text"},"ts":1348536745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Redundancy is fine!  Redundancy can be author-friendly.","msgtype":"m.text"},"ts":1348536772000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you're starting from that assumption, i think it's unlikely we'll agree :-)","msgtype":"m.text"},"ts":1348536843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it is obviously untrue that redundancy is an absolute bad.","msgtype":"m.text"},"ts":1348536864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And when there is a choice between redundancy and inconsistency, redundancy should probably win.","msgtype":"m.text"},"ts":1348536910000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think following that line of reasoning would easily double the API surface of the web","msgtype":"m.text"},"ts":1348536982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which imho is _clearly_ a negative","msgtype":"m.text"},"ts":1348536987000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It would only double if you're adding redundant version of everything.","msgtype":"m.text"},"ts":1348537007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Increasing the surface area of the web by 20% or so, in return for making shitty legacy things more consistent with the more glorious future, is a cost I'm willing to pay.","msgtype":"m.text"},"ts":1348537038000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but it doesn't make the old features more consistent with the future -- it makes a new feature consistent with the feature, while also keeping the old inconsistent features","msgtype":"m.text"},"ts":1348537086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and given how we don't know what the future is, it's unclear that one can be consistent with it)","msgtype":"m.text"},"ts":1348537112000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes?  We can't get rid of the old features, and twisting the future to be consistent with them just produces something horrible.","msgtype":"m.text"},"ts":1348537122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"having old+newold+new is worse than old+new (where newold = the new redundant feature)","msgtype":"m.text"},"ts":1348537275000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because basically the more you have, the more complicated it is, the harder it is to teach, to write tutorials, to test, to spec, to implement, to learn, etc","msgtype":"m.text"},"ts":1348537302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's arguable whether a new feature that isn't consistent with a bad old feature is better or worse than being consistent, given the cost of inconsistency, but that's a case-by-case thing","msgtype":"m.text"},"ts":1348537344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: htmlwg question -- if i notice an htmlwg bug that might be valid has been marked invalid without any comment (no boilerplate, rationale, etc), is this something anyone cares about that i should raise somewhere? i don't personally care but if i notice it and there's something trivial i can do to help, i'm happy to do so","msgtype":"m.text"},"ts":1348543543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if you point such bugs out to an editor and/or a chair, it would be helpful","msgtype":"m.text"},"ts":1348543745000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=18223 https://www.w3.org/Bugs/Public/show_bug.cgi?id=16512 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=16022","msgtype":"m.text"},"ts":1348543786000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(fyi, see also https://www.w3.org/Bugs/Public/show_bug.cgi?id=15042 )","msgtype":"m.text"},"ts":1348543807000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: ^","msgtype":"m.text"},"ts":1348543810000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't understand how to interpret \"how do you set up the tracks in the html?\" as spec feedback","msgtype":"m.text"},"ts":1348543853000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you understand what it means, I would appreciate if you could add a clarifying comment","msgtype":"m.text"},"ts":1348543866000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i presume it's asking for examples of <track>","msgtype":"m.text"},"ts":1348543870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"likewise \"I first saw this code suggested by Jeremy Keith in his excellent book ‘HTML5","msgtype":"m.text"},"ts":1348543888000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"For Web Designers’ (\"","msgtype":"m.text"},"ts":1348543889000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is it? it might be asking for an example, or the person might be confused, or they might think there is a bug with <track>","msgtype":"m.text"},"ts":1348543910000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well like i said, \"might be\"","msgtype":"m.text"},"ts":1348543939000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not saying they are :-)","msgtype":"m.text"},"ts":1348543944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what about the one citing Jeremy Keith?","msgtype":"m.text"},"ts":1348543950000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah that one is less clear","msgtype":"m.text"},"ts":1348543955000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does that mean?","msgtype":"m.text"},"ts":1348543962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"dunno. probably cut off. seemed likely to be an intentional question, though, not just invalid","msgtype":"m.text"},"ts":1348543978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems invalid to me, or needs info at best","msgtype":"m.text"},"ts":1348543980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh definitely isn't directly actionable","msgtype":"m.text"},"ts":1348543992000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I personally feel that one is of the same status as \"asdfgh asdfgh\"","msgtype":"m.text"},"ts":1348544019000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1348544028000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in that it does not even suggest either a problem with the spec or a proposed change","msgtype":"m.text"},"ts":1348544041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for 16022, I also am not really sure what it means","msgtype":"m.text"},"ts":1348544060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"do you understand what it is saying?","msgtype":"m.text"},"ts":1348544065000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"haven't studied it closely enough","msgtype":"m.text"},"ts":1348544080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but if someone filed it and is watching the bug, it seems polite to ask for more info rather than just closing it without following the process :-)","msgtype":"m.text"},"ts":1348544110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I find myself unable to parse it","msgtype":"m.text"},"ts":1348544119000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"given that the bug system is the w3c's main feedback mechanism","msgtype":"m.text"},"ts":1348544127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's like with the whatwg list, i promise replies to all feedback on the spec, even nonsensical feedback","msgtype":"m.text"},"ts":1348544143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the HTML WG policy is that INVALID may be applied if \"Bug is obvious junk or spam. Or, originator decides upon reconsideration that the comment is wrong. Does not require a full Editor's response.\"","msgtype":"m.text"},"ts":1348544173000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"NEEDSINFO is \"Additional information is required to accept or reject this comment. Editor's response required. Editor should be clear on what additional info is required. It is strongly recommended that bug reporters should provide the requested additional information, if the request is reasonable, before they consider escalating.\"","msgtype":"m.text"},"ts":1348544189000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would consider either acceptable for those three bugs","msgtype":"m.text"},"ts":1348544196000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i guess my definition of \"junk\" is less wide than yours :-)","msgtype":"m.text"},"ts":1348544210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as the required info would be \"please clearly state a problem with the spec or identify a suggested change\"","msgtype":"m.text"},"ts":1348544215000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(as editor i basically didn't mark any invalid, iirc)","msgtype":"m.text"},"ts":1348544228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so i was a bit surprised to see it being used)","msgtype":"m.text"},"ts":1348544238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think your recollection is correct","msgtype":"m.text"},"ts":1348544330000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I found 183 bugs in the \"HTML5 spec\" component that were marked INVALID while you were editor","msgtype":"m.text"},"ts":1348544345000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"any of them marked that way by me?","msgtype":"m.text"},"ts":1348544356000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"without boilerplate?","msgtype":"m.text"},"ts":1348544361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's harder to do a quick query for","msgtype":"m.text"},"ts":1348544431000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I see many marked as such by the editorial assistants or by Msg2er","msgtype":"m.text"},"ts":1348544461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in random sampling","msgtype":"m.text"},"ts":1348544466000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(search within that set for bugs closed by me, then search again for bugs closed by me with the boilerplate, and subtract the counts, that should do it. not that you need to bother :-) )","msgtype":"m.text"},"ts":1348544481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't readily search for bugs closed without the boilerplate","msgtype":"m.text"},"ts":1348544513000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right, search for them all, then with it","msgtype":"m.text"},"ts":1348544526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the difference is those without","msgtype":"m.text"},"ts":1348544529000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(if you wanted the actual bugs, you could grab the IDs from the second set and list them as IDs to exclude in the first search, or something)","msgtype":"m.text"},"ts":1348544569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but that's getting messy)","msgtype":"m.text"},"ts":1348544573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"point being, it has been accepted process that bugs which do not appear to state an issue and instead appear to be a copy/paste error, random typing, a non-bug question, or the like can be resolved w/o boilerplate","msgtype":"m.text"},"ts":1348544580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway, it's no big deal","msgtype":"m.text"},"ts":1348544580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1348544588000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm willing to believe you never personally used INVALID since I can't find any counter-examples","msgtype":"m.text"},"ts":1348544593000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the fourth one was a separate thing, just fyi. https://www.w3.org/Bugs/Public/show_bug.cgi?id=15042","msgtype":"m.text"},"ts":1348544629000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hopefully it'll solve itself.","msgtype":"m.text"},"ts":1348544640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it does seem to me the test suite bug you cited was probably wrongly closed, but the spec bug rules don't apply there and I have not followed test suite development, so I am not in a good position to comment further","msgtype":"m.text"},"ts":1348544661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah i wasn't saying that one was part of the same issue.","msgtype":"m.text"},"ts":1348544680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just making sure you had it on your radar.","msgtype":"m.text"},"ts":1348544689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"more in your role as webkit guy than htmlwg guy.","msgtype":"m.text"},"ts":1348544699000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1348544739000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it does seem necessary to figure out the answer to what toDataURL does for hi-res backing stores","msgtype":"m.text"},"ts":1348544764000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the whatwg spec is clear on that topic","msgtype":"m.text"},"ts":1348544775000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"perhaps it needs the \"HD\" treatment like getImageData and putImageData","msgtype":"m.text"},"ts":1348544775000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it has had that treatment in the whatwg spec.","msgtype":"m.text"},"ts":1348544783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1348544789000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"this is one of the areas where tho two specs have forked.","msgtype":"m.text"},"ts":1348544790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I believe our canvas implementors are tracking the whatwg spec more than the htmlwg spec on this","msgtype":"m.text"},"ts":1348544800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, i expect everyone but microsoft is in that boat.","msgtype":"m.text"},"ts":1348544811000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would be nice if the w3c version was at least not contrary to the high-res-compatible edition","msgtype":"m.text"},"ts":1348544816000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(sadly it was microsoft people who wontfixed the bug)","msgtype":"m.text"},"ts":1348544818000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1348544823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is the canvas toBlob method a fork point?","msgtype":"m.text"},"ts":1348544876000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1348544886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(wondering if toBlobHD or toBlob is the fork, to determine if this same issue applies)","msgtype":"m.text"},"ts":1348544888000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'm guessing it's all the HD stuff","msgtype":"m.text"},"ts":1348544901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think we had toBlob long ago","msgtype":"m.text"},"ts":1348544905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i definitely didn't add toBlob at the same time as the HD stuff","msgtype":"m.text"},"ts":1348544918000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the HD stuff is relatively new","msgtype":"m.text"},"ts":1348544924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(in response to safari feedback, mainly)","msgtype":"m.text"},"ts":1348544931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, I'm aware, and I'm glad it was added","msgtype":"m.text"},"ts":1348544943000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"as you can see, all of Apple's product line is moving to 2x displays","msgtype":"m.text"},"ts":1348544954000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so we got to be the first ones to test how the old spec worked in the face of 1x-only-tested content","msgtype":"m.text"},"ts":1348544973000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348544983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(love the retina macbook btw)","msgtype":"m.text"},"ts":1348544989000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I wish I had one, trying to order them for my engineers first though","msgtype":"m.text"},"ts":1348545014000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, i don't have one personally, but i got one for my partner","msgtype":"m.text"},"ts":1348545124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, man, w3c bugzilla is being slow today","msgtype":"m.text"},"ts":1348545696000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"keep getting 502s","msgtype":"m.text"},"ts":1348545700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"me too :-(","msgtype":"m.text"},"ts":1348545725000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is surprised to discover that he is in the XSL or XQuery working group","msgtype":"m.emote"},"ts":1348548057000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"(well, that's what bugzilla thinks, anyway!)","msgtype":"m.text"},"ts":1348548067000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"Hixie: why did you move this bug to the whatwg product? https://www.w3.org/Bugs/Public/show_bug.cgi?id=10912","msgtype":"m.text"},"ts":1348548689000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: are you going to back-clone it?","msgtype":"m.text"},"ts":1348548696000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(HTML WG needs copies of resolved bugs in our product to be able to provide a record of responses to comments)","msgtype":"m.text"},"ts":1348548721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's happening to many bugs - looks like all of the ones that were resolved later...","msgtype":"m.text"},"ts":1348549362000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Can we have a QA contact (a mailing list) for all bugs in the WHATWG component? I'd like to subscribe to that list.","msgtype":"m.text"},"ts":1348549524000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"othermaciej: oh, didn't realise you wanted the closed ones also. i moved all the bugs assigned to me that were marked LATER to the WHATWG component.","msgtype":"m.text"},"ts":1348551976000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: so i wouln't lose them.","msgtype":"m.text"},"ts":1348551983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: there have been many bugs that get reassigned to other components, e.g. HTML.next, rather than get resolved, fwiw. so i don't know that it's possible to make such a list currently.","msgtype":"m.text"},"ts":1348552137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kennyluck: contributor⊙wo should be that, iirc","msgtype":"m.text"},"ts":1348552148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kennyluck: just follow that","msgtype":"m.text"},"ts":1348552176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can you clone them in one direction or another please?","msgtype":"m.text"},"ts":1348552181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah, send me a mail to remind me","msgtype":"m.text"},"ts":1348552194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, how to? Is that a mailing list?","msgtype":"m.text"},"ts":1348552210000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"should be easy enough to set up my script to do that","msgtype":"m.text"},"ts":1348552211000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kennyluck: in bugzilla, you should be able to set your account to follow that one","msgtype":"m.text"},"ts":1348552227000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, you mean Bugzilla following?","msgtype":"m.text"},"ts":1348552229000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/userprefs.cgi?tab=email","msgtype":"m.text"},"ts":1348552237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348552239000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gotta go, bbl","msgtype":"m.text"},"ts":1348552250000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: BTW your more minimal filesystem API looks nicer than the Google one, but it does seem like one would quickly end up with a \"pyramid of doom\" if every single file operation needs to be in its own callback","msgtype":"m.text"},"ts":1348557435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: In addition I am worried that we have added, or attempted to add, 3 local storage mechanisms in the last 5 years, and our record of doing it well isn't that great","msgtype":"m.text"},"ts":1348559419000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(localStorage, WebSQL, IndexedDB)","msgtype":"m.text"},"ts":1348559444000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(so the platform total, including WebSQL, is 4 of which 3 are already known to be various degrees of broken)","msgtype":"m.text"},"ts":1348559572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: which is the not-known-broken one?","msgtype":"m.text"},"ts":1348559677000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"IndexedDB","msgtype":"m.text"},"ts":1348559829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That one's just hated, right?","msgtype":"m.text"},"ts":1348559857000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"By no one uses that yet","msgtype":"m.text"},"ts":1348559858000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So we probably haven't worked out why it is broken yet","msgtype":"m.text"},"ts":1348559870000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hence I am worried about adding a new storage API before we even work out what the problems that need to be fixed with the previous one are","msgtype":"m.text"},"ts":1348559910000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I suspect \"callback hell\" is one of the problems, and I don't think the filesystem API proposals address that)","msgtype":"m.text"},"ts":1348559954000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Any ideas on http://www.netmagazine.com/features/truth-about-structuring-html5-page ?","msgtype":"m.text"},"ts":1348563300000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"TabAtkins: maybe you should ask what the svg wg think about multiple-letter commands before discussing it in whatwg :-)","msgtype":"m.text"},"ts":1348563608000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"eighty4: hard to argue with the truth","msgtype":"m.text"},"ts":1348564485000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"annevk_: i.e. we shouldn't use the new html5 elements?","msgtype":"m.text"},"ts":1348564508000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"was mocking the title","msgtype":"m.emote"},"ts":1348564570000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"the outline algorithm is ill-clothed as long as there’s no selector for selecting by outline depth","msgtype":"m.text"},"ts":1348564571000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1348564581000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"is to stupid to get jokes just before lunch","msgtype":"m.emote"},"ts":1348564594000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"eighty4: I stopped caring about semantics a while ago, so these days whenever people ask me I just tell them to use what works best for them","msgtype":"m.text"},"ts":1348564635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eighty4: I personally use <nav> and such as it's nicer than <div id=nav>, if some people prefer the latter, that's cool too","msgtype":"m.text"},"ts":1348564660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've been finding <header> and such in the same way","msgtype":"m.text"},"ts":1348564670000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"makes my html cleaner and easier to maintain imo","msgtype":"m.text"},"ts":1348564682000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"Re: semantics: https://twitter.com/glazou/status/250516174473920512","msgtype":"m.text"},"ts":1348564689000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"eighty4: exactly, and in a decade from now or so someone will do a new study towards what people are doing and how markup is practiced and the definitions in the specification will be adjusted accordingly","msgtype":"m.text"},"ts":1348564826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah well. Back to figuring out how to move things around in this comment form I guess. Seems more important.","msgtype":"m.text"},"ts":1348564846000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"eighty4: just like the HTML4 element definitions have been adjusted (e.g. for <dl>)","msgtype":"m.text"},"ts":1348564852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eighty4: I read a little bit of that article and found it was wrong on matters of fact, so I gave up and stopped reading","msgtype":"m.text"},"ts":1348564890000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the facts taht you are using to support your opinion are fabrications, there's probably very little value in your opinions","msgtype":"m.text"},"ts":1348564924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: that's \"asshole\" per pilgrim classification, no?","msgtype":"m.text"},"ts":1348564924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if anything you should point that out. Seems a shame if people read it and believe it :)","msgtype":"m.text"},"ts":1348564933000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"if people believe stuff they read online they might be in for some surprises down the road :)","msgtype":"m.text"},"ts":1348564964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eighty4: If I pointed it out every time some clueless or malicious web developer used incorrect assertions to write controversial articles in the name of publicity I wouldn't have any time to do anything else","msgtype":"m.text"},"ts":1348565003000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: lol","msgtype":"m.text"},"ts":1348565017000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"but see http://epubsecrets.com/ibooks-the-latest-epub-3-0-reader.php","msgtype":"m.text"},"ts":1348565045000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: meh!","msgtype":"m.text"},"ts":1348565046000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"eighty4: also, it's important to conserve one's energy http://xkcd.com/386/","msgtype":"m.text"},"ts":1348565053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: (swedish for me not having a response but thinking you should do it anyways)","msgtype":"m.text"},"ts":1348565066000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"annevk: I love that one. I live by it :)","msgtype":"m.text"},"ts":1348565093000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"I like to think I learned from it :p","msgtype":"m.text"},"ts":1348565107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I never learn","msgtype":"m.text"},"ts":1348565118000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"ah well, when I have the time I'll read som of the responses to the post. Should be fun","msgtype":"m.text"},"ts":1348565232000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"eighty4: you'll learn, might take a long time, mind you; I think I've done it for over half a decade at least with regards to standards discussions","msgtype":"m.text"},"ts":1348565401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and actually, I still do: http://krijnhoetmer.nl/irc-logs/whatwg/20120925#l-101 I just no longer bother sending email :)","msgtype":"m.text"},"ts":1348565455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In truth I do get better. I've stopped arguing with trolls :)","msgtype":"m.text"},"ts":1348565521000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"annevk: that log is from a couple of hours back :D","msgtype":"m.text"},"ts":1348565582000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"hsivonen: Do you really want to encourage the W3C to have big monolithic releases where all known issues have to be fixed?","msgtype":"m.text"},"ts":1348569296000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: no. they can drop stuff from snapshots instead of fixing: http://w3cmemes.tumblr.com/post/31865121758/the-joker-shares-his-approach-on-css2-1-issues","msgtype":"m.text"},"ts":1348569601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I don't want Microsoft to create a new doc mode that implements stuff that others won't be able to implement across modes","msgtype":"m.text"},"ts":1348569656000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: and I don't want to deflect n00b requests to implement the bogus REC in Gecko","msgtype":"m.text"},"ts":1348569684000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't want the navigation algorithm to be replaced by \"now do magic stuff\" just for fear that Microsoft might otherwise add in a mode that implements it","msgtype":"m.text"},"ts":1348569760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In fact I don't think that's practically possible","msgtype":"m.text"},"ts":1348569775000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the W3C REC could say “do magic” and WHATWG and W3C ED’s could try to say something more precise","msgtype":"m.text"},"ts":1348569825000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: ok, I know I shouldn't care but the authors html is kind of horrible :)","msgtype":"m.text"},"ts":1348569865000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"In this specific case I don't see how that would work without undefining a bunch of stuff","msgtype":"m.text"},"ts":1348569866000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"www.truthabouthtml5.com really isn't nice html","msgtype":"m.text"},"ts":1348569873000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"noobs caring about the navigation algorithm? not sure that would ever happen","msgtype":"m.text"},"ts":1348569882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, navigation spreads its tentacles all over the spec","msgtype":"m.text"},"ts":1348569899000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"eighty4: oh was the article trolling for attention in order to sell a book? ok.","msgtype":"m.text"},"ts":1348569960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I would imagine so, given that the article seems taken from the book.","msgtype":"m.text"},"ts":1348569985000,"senderName":"eighty4","senderId":"eighty4@irc"},
{"content":{"body":"hsivonen: I would much prefer that the W3C moved to a model where we got releases say every 6 months, and there was an understanding that the spec might not be bug-free","msgtype":"m.text"},"ts":1348570014000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems like the closest thing to a living standard that could be fig-leafed as process","msgtype":"m.text"},"ts":1348570063000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i've moved this to a separate file so other specs can use it: http://dvcs.w3.org/hg/quirks-mode/raw-file/tip/status-warning.js","msgtype":"m.text"},"ts":1348575632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(see http://dvcs.w3.org/hg/quirks-mode/raw-file/tip/Overview.src.html for how it looks)","msgtype":"m.text"},"ts":1348575684000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"who the fuck cares about .mobi anyway?","msgtype":"m.text"},"ts":1348581820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".mobi is still around?","msgtype":"m.text"},"ts":1348581844000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it was awkward when I ran into some people from Vodaphone couple of years after I published http://annevankesteren.nl/2004/12/mobi-stld and they recalled what I wrote","msgtype":"m.text"},"ts":1348581898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I reckon they're used to that :)","msgtype":"m.text"},"ts":1348581963000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"what’s the spec for window.screen?","msgtype":"m.text"},"ts":1348582242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"paul_irish: looks like robohornet does something odd with testharness, which causes tests to test something else than what is actually expected. https://github.com/robohornet/robohornet/issues/66","msgtype":"m.text"},"ts":1348582390000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I miss zcorpan’s .mobi site that served a single-pixel GIF","msgtype":"m.text"},"ts":1348582438000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: i let the domain expire","msgtype":"m.text"},"ts":1348582456000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: was just looking into merging that fix from hasather","msgtype":"m.text"},"ts":1348582672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Too late ;)","msgtype":"m.text"},"ts":1348582693000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"guess we can now declare hosting specs on github a \"great success\"","msgtype":"m.text"},"ts":1348582696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and everyone had cake and was happy :-)","msgtype":"m.text"},"ts":1348582721000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Did someone change the case of whatwg again?","msgtype":"m.text"},"ts":1348582723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mumbles about unnecessary merges","msgtype":"m.emote"},"ts":1348582786000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: my bad","msgtype":"m.text"},"ts":1348582815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm? No, github's bad :)","msgtype":"m.text"},"ts":1348582829000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: well I renamed back to /whatwg","msgtype":"m.text"},"ts":1348582838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1348582842000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Keep it that way now? :)","msgtype":"m.text"},"ts":1348582858000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but quite a while ago","msgtype":"m.text"},"ts":1348582866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1348582867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh i read .mobi as the kindle ebook format","msgtype":"m.text"},"ts":1348582923000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hsivonen: window.screen is in CSSOM View (at least when I worked on that)","msgtype":"m.text"},"ts":1348582991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"google's search result stats must get pretty nastily broken for ED/TR results","msgtype":"m.text"},"ts":1348583345000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"-ED","msgtype":"m.text"},"ts":1348583380000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"since invariably the TR gets returned and i can't quickly find the ED in the results, so i click the TR result then click through to the ED--presumably making google thing the TR is what I wanted, making it even more likely to be at the top","msgtype":"m.text"},"ts":1348583460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"whoa, Opera and Chrome accept http://017700000001/","msgtype":"m.text"},"ts":1348584431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.amazon.com/The-Tangled-Web-Securing-Applications/dp/1593273886 is pretty interesting","msgtype":"m.text"},"ts":1348584486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"octal, one of those things which are utterly useless yet somehow refuse to die","msgtype":"m.text"},"ts":1348584511000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heh https://twitter.com/ID_AA_Carmack/status/243125862403297281","msgtype":"m.text"},"ts":1348584549000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: doesn't the Google one also require a callback for each operation?","msgtype":"m.text"},"ts":1348584682000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: (other than when using the sync API in a Worker)","msgtype":"m.text"},"ts":1348584698000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zewt: the problem is more that IPv4 is only allowed to be written as DEC.DEC.DEC.DEC","msgtype":"m.text"},"ts":1348585832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: when parsing a URL whose base URL is null, what does eg. \"set scheme to base's scheme\" mean? SIGSEGV? (i might be missing a default-base-url rule somewhere)","msgtype":"m.text"},"ts":1348587125000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: how did you get there?","msgtype":"m.text"},"ts":1348587152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new URL(\"http://foo.com\");","msgtype":"m.text"},"ts":1348587188000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you would not get there","msgtype":"m.text"},"ts":1348587213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can never get in the \"hierarchical\" state if base URL is null","msgtype":"m.text"},"ts":1348587239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I'll rename \"hierarchical\" to \"relative\"","msgtype":"m.text"},"ts":1348587361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"new URL(\"?a=1\"): 1: scheme start, step 1 does nothing, step 2 goes to no scheme; 2: no scheme goes to hierarchical","msgtype":"m.text"},"ts":1348587367000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(the case I was actually tracing)","msgtype":"m.text"},"ts":1348587378000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1348587431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"small bug, thanks","msgtype":"m.text"},"ts":1348587459000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(i guessed doing that would actually want to end up invalidated, but was trying to see if that's what actually happens)","msgtype":"m.text"},"ts":1348587471000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1348587655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1348587749000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"should the URL ctor throw on invalid URLs, since it does that for base anyway? seems confusing that eg. changing .path and querying .href silently gives the original URL if it was invalid","msgtype":"m.text"},"ts":1348587806000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: maybe, but a) that does not happen for <a> and such and b) it might make introducing new schemes that need parser integration trickier","msgtype":"m.text"},"ts":1348587861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: you can check the new isInvalid flag","msgtype":"m.text"},"ts":1348587880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe that should be named isValid","msgtype":"m.text"},"ts":1348587886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems confusing that changes are silently discarded in that state, though","msgtype":"m.text"},"ts":1348587967000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can still set .href","msgtype":"m.text"},"ts":1348588104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but nothing else","msgtype":"m.text"},"ts":1348588123000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well doh, if the input is invalid it would be kinda hard to change anything","msgtype":"m.text"},"ts":1348588140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it's largely an edge case anyway and it that case better extensibility wins","msgtype":"m.text"},"ts":1348588189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in*","msgtype":"m.text"},"ts":1348588197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: Yes, but their proposal sucks even more, so that's not a great argument","msgtype":"m.text"},"ts":1348588335000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't know of a reasonable way to avoid callback-per-operation while still avoiding synchronous I/O on the main thread","msgtype":"m.text"},"ts":1348588380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it just seems like a confusingly silent error condition, where the interface is still there, no errors are raised, but it doesn't do anything useful and the reason for why it's no-opping isn't necessarily obvious","msgtype":"m.text"},"ts":1348588398000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: that being said, I am not really sure why any local sandboxed storage use cases would need this but couldn't use indexeddb","msgtype":"m.text"},"ts":1348588403000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I think we should perhaps spend some time trying to work out a pattern for that","msgtype":"m.text"},"ts":1348588414000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so I think maybe the right next step is to get very clear about the use cases","msgtype":"m.text"},"ts":1348588421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Before adding yet more APIs that die under callback hell","msgtype":"m.text"},"ts":1348588432000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But yeah, I agree about IndexedDB and use cases","msgtype":"m.text"},"ts":1348588446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zewt: not too worried with error consoles and whatnot","msgtype":"m.text"},"ts":1348588455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk was just looking at the mutation methods—great stuff. One question though: Can these be specified to return the node they operate on?","msgtype":"m.text"},"ts":1348588468000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"http://dom.spec.whatwg.org/#mutation-methods","msgtype":"m.text"},"ts":1348588471000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"othermaciej: fwiw, i expect a portion of it is that everyone implicitly understands and \"trusts\" filesystem access as a basic storage mechanism for file-like data, where indexeddb is less known and proven in people's minds","msgtype":"m.text"},"ts":1348588492000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rwaldron: I haven't done that because that would be inconsistent with every other platform API there is","msgtype":"m.text"},"ts":1348588517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1348588531000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"well, that's unfortunate.","msgtype":"m.text"},"ts":1348588539000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"This ain't jquery","msgtype":"m.text"},"ts":1348588546000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt: yeah, but - Chrome's sandboxed filesystem store is (I believe) in reality backed by a database","msgtype":"m.text"},"ts":1348588588000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zewt: so the trust level is completely illusory","msgtype":"m.text"},"ts":1348588602000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah that's pretty bad, defeats the benefits entirely","msgtype":"m.text"},"ts":1348588612000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rwaldron: so yes, we can do whatever we want, but taking the rest of the platform into consideration is important","msgtype":"m.text"},"ts":1348588615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: it's already inconsequential enough imo","msgtype":"m.text"},"ts":1348588631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger what do you gain from saying that? Or better, what does the future of the platform gain?","msgtype":"m.text"},"ts":1348588688000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"(databases don't tend to be terribly good at file-like stuff, eg. storing a 500 MB file and then modifying a few bytes in the middle, appending data without compounding fragmentation, etc)","msgtype":"m.text"},"ts":1348588694000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rwaldron, the ability to have functions return something more useful than the this value","msgtype":"m.text"},"ts":1348588717000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk I understand, but since these effectively supplant the previous API, it doesn't seem unreasonable.","msgtype":"m.text"},"ts":1348588730000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Ms2ger such as?","msgtype":"m.text"},"ts":1348588746000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: by the platform I mean more than just DOM manipulation :)","msgtype":"m.text"},"ts":1348588748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean every API in every standard","msgtype":"m.text"},"ts":1348588762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk yes, the same ones that are abstracted over, because they are mostly miserable.","msgtype":"m.text"},"ts":1348588821000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"yawns","msgtype":"m.emote"},"ts":1348588829000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ok, well I can see that arguing this is pointless, so thanks for your time everyone.","msgtype":"m.text"},"ts":1348588830000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"implements remove() instead","msgtype":"m.emote"},"ts":1348588894000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I get to write tests now","msgtype":"m.text"},"ts":1348588907000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rwaldron: I'd prefer a more complete plan than just changing some APIs here and there into chaining APIs","msgtype":"m.text"},"ts":1348588930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: it feels a bit irresponsible to just do it here and there","msgtype":"m.text"},"ts":1348588956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: I'm not opposed to the idea though","msgtype":"m.text"},"ts":1348588970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger seriously? I'm reaching out to spec authors, as a member of TC39 (representing jQuery), to coordinate efforts that will improve the use of APIs that will be used to create the future","msgtype":"m.text"},"ts":1348588992000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I don't appreciate your dismissive comments","msgtype":"m.text"},"ts":1348589002000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Considering I said nothing to you to deserve them","msgtype":"m.text"},"ts":1348589019000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"This is an issue that would be better solved in JS proper","msgtype":"m.text"},"ts":1348589058000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If you're in tc39, you're better placed than me to do that","msgtype":"m.text"},"ts":1348589076000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger and what issue is that?","msgtype":"m.text"},"ts":1348589082000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"You mean there is no issue?","msgtype":"m.text"},"ts":1348589093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Then why do you want to change a few methods in DOM?","msgtype":"m.text"},"ts":1348589103000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm asking you to clarify what issue you're referring to","msgtype":"m.text"},"ts":1348589114000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"\"This is an issue that would be better solved in JS proper\"","msgtype":"m.text"},"ts":1348589123000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Clearly you believe there is an issue with the mutation methods","msgtype":"m.text"},"ts":1348589140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I believe there is an issue with the way much of the DOM has been specified","msgtype":"m.text"},"ts":1348589162000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I never really understood which issue it is that returning the this value is supposed to solve","msgtype":"m.text"},"ts":1348589174000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's not a problem with the language, it's a problem with the authors of the specifications.","msgtype":"m.text"},"ts":1348589190000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"But it is pointless to try to fix it by changing a few methods here and there","msgtype":"m.text"},"ts":1348589202000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"as pointless as adding a duplicate remove() method purely for improved usability?","msgtype":"m.text"},"ts":1348589269000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"If these methods represent a newly created API, why not specify them in a way that will match the expectations of web developers that are currently using libraries to abstract over the existing APIs","msgtype":"m.text"},"ts":1348589282000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"let me rephrase that...","msgtype":"m.text"},"ts":1348589303000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"\"Give them what they want\"","msgtype":"m.text"},"ts":1348589308000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"paul_irish, I'm not sure what parallel you're trying to draw?","msgtype":"m.text"},"ts":1348589333000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"because adding a return value that has minor benefit just because you're not currently using the return value means you can never, ever in the future use the return value to represent something very useful","msgtype":"m.text"},"ts":1348589334000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"You're implementing methods that \"almost\" match the API of several DOM libraries","msgtype":"m.text"},"ts":1348589346000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"except that you've left out a significant part and that will just cause more confusion.","msgtype":"m.text"},"ts":1348589367000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"\"Do what jquery does\" is not an argument","msgtype":"m.text"},"ts":1348589413000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not just jQuery","msgtype":"m.text"},"ts":1348589435000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"Wow, that was a quick mis-characterization of what rwaldron said","msgtype":"m.text"},"ts":1348589437000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"rwaldron: can't blame Ms2ger and I for the DOM... that was done way back; we just fixed a bunch of holes","msgtype":"m.text"},"ts":1348589438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, gotta go","msgtype":"m.text"},"ts":1348589452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger that's amusing.","msgtype":"m.text"},"ts":1348589486000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"i'm saying these new methods are introduced for the purpose of improving the usability of the DOM.  I can guarantee you that developers would find a useful return value more intuitive","msgtype":"m.text"},"ts":1348589494000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"You're clearly just trolling","msgtype":"m.text"},"ts":1348589498000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"paul_irish +1","msgtype":"m.text"},"ts":1348589504000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"(rwaldron: being rude is not going to convince anyone of much of anything)","msgtype":"m.text"},"ts":1348589506000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger I am absolutely not trolling","msgtype":"m.text"},"ts":1348589513000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"And I don't appreciate the name \"name-calling\"","msgtype":"m.text"},"ts":1348589553000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"zewt, as someone mostly reading this conversation and not participating, I would hardly call rwaldron the rude one here","msgtype":"m.text"},"ts":1348589553000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"so far you've resorted to being unfairly dismissive and now to name calling.","msgtype":"m.text"},"ts":1348589571000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I spoke up because I want a better DOM API","msgtype":"m.text"},"ts":1348589584000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"That's not trolling.","msgtype":"m.text"},"ts":1348589600000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"From my review of the spec, I found it odd that the method names and intent seemed to be following popular library implementations, but without including a return value.","msgtype":"m.text"},"ts":1348589605000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"the addBefore/addAfter tend not to actually need chaining, since their pattern is e.addAfter(a, b, c); you don't need to say e.addAfter(a).addAfter(b).addAfter(c)","msgtype":"m.text"},"ts":1348589610000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ls_n agreed, which is why I came to discuss","msgtype":"m.text"},"ts":1348589627000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"If the spec had included a return value other than the calling node, I would have called that into question because there is precedence, but I could have been convinced.","msgtype":"m.text"},"ts":1348589663000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"thinks it would be handy if the multi-page specs had auto-redirect pages, like epydoc makes: http://epydoc.sourceforge.net/faq.html#redirect","msgtype":"m.emote"},"ts":1348589710000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"and all I've gotten in response is \"yawn\", some snide comments about jQuery and some misguided argument about fixing the issue in JS (ie. the language).","msgtype":"m.text"},"ts":1348589731000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Without a return value, it seems very confusing.  Almost purposeful.  Why not preserve least surprise, and follow precedence?","msgtype":"m.text"},"ts":1348589740000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"Is there any reason it is \"confusing\" except for \"it doesn't match jquery\"?","msgtype":"m.text"},"ts":1348589783000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ls_n before annevk left, he told me that having a return value doesn't match the rest of the platform","msgtype":"m.text"},"ts":1348589783000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Ms2ger: fwiw, YUI also includes these methods, and also returns the calling node.","msgtype":"m.text"},"ts":1348589808000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"Let's take \"jquery\" as a shorthand for \"jquery and other frameworks that look the same\"","msgtype":"m.text"},"ts":1348589838000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if that makes you happy","msgtype":"m.text"},"ts":1348589843000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: if you take the name, well ...","msgtype":"m.text"},"ts":1348589851000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"rwaldron: interesting.  I wonder what the definition of \"platform\" is in that context.  I'm thinking appendChild() has a return value.","msgtype":"m.text"},"ts":1348589852000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"ls_n, appendChild() returns the argument, not the this value","msgtype":"m.text"},"ts":1348589899000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'm aware :) My point is that it returns something.","msgtype":"m.text"},"ts":1348589923000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1348589927000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that doesn't sound like much of an argument","msgtype":"m.text"},"ts":1348589941000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"Nobody claimed that returning something useful didn't match the rest of the patform","msgtype":"m.text"},"ts":1348589946000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk obviously didn't say that DOM functions should never return anything at all, heh","msgtype":"m.text"},"ts":1348589947000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"platform*","msgtype":"m.text"},"ts":1348589949000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: from a completely \"read the statement\" - you start with something, you do something to it, why did the thing go away?","msgtype":"m.text"},"ts":1348589959000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"sorry, completely \"read the statement\" argument","msgtype":"m.text"},"ts":1348589970000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"(parse error, redo from start)","msgtype":"m.text"},"ts":1348589971000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"So","msgtype":"m.text"},"ts":1348589984000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"like - i think that while jQuery executed successfully, there is a natural tendency to expect that","msgtype":"m.text"},"ts":1348589986000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Ms2ger as does Prototype (however, its use has significanlty diminished) and Dojo (which is widely used in the enterprise)","msgtype":"m.text"},"ts":1348589994000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Does anybody want to reply to my actual point instead of complaining about my use of \"jquery\"?","msgtype":"m.text"},"ts":1348590012000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but youre combatting points with \"because jQuery does it means nothing\"","msgtype":"m.text"},"ts":1348590061000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"suspects this scrollback would be marginally interesting to read, fires up logs","msgtype":"m.emote"},"ts":1348590062000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ms2ger: isn't \"gratuitous mismatch with libraries\" enough?","msgtype":"m.text"},"ts":1348590068000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"appendChild() would be less useful if it didn't return something.  If it returned the calling node, it would still be useful.  Whether more or less useful than returning the argument is debatable, but not the point. There is utility there. There is less utility without a return value.","msgtype":"m.text"},"ts":1348590110000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"SamB_MacG5, I was asking for a point besides that","msgtype":"m.text"},"ts":1348590141000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SamB_MacG5: no, \"we should do it because libraries do it\" is not an argument at all","msgtype":"m.text"},"ts":1348590145000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger my response is this: devs use libraries because the DOM APIs are awful. Regardless of the libary, they all share common behaviours and returning the this value is one of them.","msgtype":"m.text"},"ts":1348590162000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"zewt: not a strong argument, I'll grant","msgtype":"m.text"},"ts":1348590174000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"That's not an answer to my question","msgtype":"m.text"},"ts":1348590179000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And how _else_ would you characterizing people's wants besides their use of these libraries?","msgtype":"m.text"},"ts":1348590179000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Let me try again","msgtype":"m.text"},"ts":1348590182000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"These new mutation methods will not ease any DOM API pain points","msgtype":"m.text"},"ts":1348590184000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"ls_n: as I already said, functions should *not* be given a return value soley for the sake of having a return value; it needs to have enough value to *commit* that return value to that purpose for all time","msgtype":"m.text"},"ts":1348590185000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but if you haven't got anything *better* to do ...","msgtype":"m.text"},"ts":1348590189000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"there is no big online survey of \"how do you want the dom to work\"","msgtype":"m.text"},"ts":1348590195000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"you look at library useage","msgtype":"m.text"},"ts":1348590198000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"using the return value for something of value 0.1 means you can never use it to support a use case that appears a year from now with value 5.0","msgtype":"m.text"},"ts":1348590216000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Is there any reason that not returning the this value is \"confusing\" except for \"it doesn't match a number of JS libraries\"?","msgtype":"m.text"},"ts":1348590218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you're stuck with the 0.1 forever","msgtype":"m.text"},"ts":1348590222000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: okay, that's an argument","msgtype":"m.text"},"ts":1348590236000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"zewt: A fair point, but fear of the future in the face of current usage with developers expectating a return value seems silly.","msgtype":"m.text"},"ts":1348590271000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"zewt but... the current API is the problem","msgtype":"m.text"},"ts":1348590278000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"library adoption over DOM API seems to indicate displeasure with the way it was originally done, in favor of what we are explaining","msgtype":"m.text"},"ts":1348590315000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"My addition, Ms2ger, was that JS devs get the idea that \"i have something, then i call something on it\" and naturally expect that 'something' to be there again","msgtype":"m.text"},"ts":1348590319000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"that there is a natural inclination, in addition to library buy-in","msgtype":"m.text"},"ts":1348590338000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"ls_n: can't say I agree with the premise; I expect functions to do what they're documented as doing","msgtype":"m.text"},"ts":1348590341000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: probably best not to steal the names the libraries have been using, then ?","msgtype":"m.text"},"ts":1348590370000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"and that \"it doesn't match a number of JS libraries\" might indeed be the only big reason, albeit a very big reason/indicator","msgtype":"m.text"},"ts":1348590371000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"otherwise, the users are liable to read the wrong documentation","msgtype":"m.text"},"ts":1348590394000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"never understood returning-this behavior, versus just naming the same variable a second time, which is inarguably clearer as it requires no knowledge of the return type of the method that's being called","msgtype":"m.emote"},"ts":1348590431000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"rwaldron: that's merely saying \"we should arbitrarily mimic jquery because people use jquery\" and could be applied to any aspect of the library","msgtype":"m.text"},"ts":1348590434000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jwalden: well, the one problem with that is that you have to actually name a variable in the first place","msgtype":"m.text"},"ts":1348590459000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"SamB_MacG5: as long as it doesn't result in weird, contrived or hard to type function names, i don't mind trying to use different names, no","msgtype":"m.text"},"ts":1348590491000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger if the method is \"setting\" (which includes mutation of subtrees, etc) the this value should be returned. If the method is \"getting\" (eg. an attribute value by name) then return the value of thing we're requesting. I don't understand what is so hard about this. cc zewt","msgtype":"m.text"},"ts":1348590496000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"SamB_MacG5: I don't believe that's a problem, only if you buy into the jquery mindset of chaining method-call upon method-call in the first place","msgtype":"m.text"},"ts":1348590499000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"SamB_MacG5: it kind of begs the question","msgtype":"m.text"},"ts":1348590504000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"rwaldron: you could also add 'creating' to that list","msgtype":"m.text"},"ts":1348590519000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"jwalden: well, I didn't say it was a *big* problem","msgtype":"m.text"},"ts":1348590519000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"rwaldron, nothing hard about \"how it works\", only about \"why it's useless\"","msgtype":"m.text"},"ts":1348590528000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"danheberden +1","msgtype":"m.text"},"ts":1348590529000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Sorry, useful*","msgtype":"m.text"},"ts":1348590534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(rwaldron: you're repeating yourself and ignoring the responses, so unless you have something new to say I'm not going to repeat responses :)","msgtype":"m.text"},"ts":1348590535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but I must admit sometimes I have trouble naming my variables :-)","msgtype":"m.text"},"ts":1348590542000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"zewt, i'll bite - there are known problems with how jQuery's API is - rather, some outstanding bugs of people saying they'd like certain api methods to work","msgtype":"m.text"},"ts":1348590576000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"and we're backed into a corner because it's existing stuff or we want to match the dom","msgtype":"m.text"},"ts":1348590586000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"sees naming variables as a quite-useful form of documentation, all the more for being an actual part of the code, so less apt to bitrotting","msgtype":"m.emote"},"ts":1348590589000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"So this argument boils down to a disagreement in the value of returning this?","msgtype":"m.text"},"ts":1348590596000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"however, this concept - of return values - people like","msgtype":"m.text"},"ts":1348590601000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"people comment on how helpful it is","msgtype":"m.text"},"ts":1348590609000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"or how unhelpful it is that the DOM doesn't do that","msgtype":"m.text"},"ts":1348590617000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"SamB_MacG5: again the chaining pattern tends to be built around eg. \"add this one element\", but when you're able to pass a list of items to add, a lot of that goes away","msgtype":"m.text"},"ts":1348590617000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so taking a huge number of developers that _choose_ to use jQ's API in to consideration seems worth something, ya?","msgtype":"m.text"},"ts":1348590643000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"(danheberden: <zewt> rwaldron: that's merely saying \"we should arbitrarily mimic jquery because people use jquery\" and could be applied to any aspect of the library)","msgtype":"m.text"},"ts":1348590714000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"danheberden, jquery has its advantages","msgtype":"m.text"},"ts":1348590722000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"but no one is saying we should arbitrarily mimic jquery","msgtype":"m.text"},"ts":1348590730000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"except you two","msgtype":"m.text"},"ts":1348590732000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Papering over browser differences, say","msgtype":"m.text"},"ts":1348590738000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"instead of replying to points, you mis-characterize the argument","msgtype":"m.text"},"ts":1348590756000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"that's exactly what you just said--\"lots of people choose to use jquery, and that's an argument for doing this one particular thing in jquery's way\"","msgtype":"m.text"},"ts":1348590756000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think that's a bigger reason that people would use it than just the chaining","msgtype":"m.text"},"ts":1348590758000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt - THAT PARTICULAR feature","msgtype":"m.text"},"ts":1348590769000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"this late in the game, fighting against long-standing DOM precedent, consistency with the rest of the DOM seems the right thing, and let libraries do their thing however they want it as they always do","msgtype":"m.text"},"ts":1348590770000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"In addition to danheberden's argument about taking developer preference into consideration, I'd also like to share some third party statistics: http://trends.builtwith.com/javascript","msgtype":"m.text"},"ts":1348590779000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"i'm talking about the return value","msgtype":"m.text"},"ts":1348590782000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"no, we've replied to many points; i suspect you're not paying attention","msgtype":"m.text"},"ts":1348590792000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt - i've agreed with some, i think, so perhaps i should add a +1 in reply if i don't have an argument","msgtype":"m.text"},"ts":1348590811000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"zewt sure, I'll bite... ready? Here goes...","msgtype":"m.text"},"ts":1348590832000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"zewt: There are many differences between DOM libraries.  If they all, or even mostly, agree on a set of methods to improve the experience of working with the DOM, that's not mimicking jQuery, that's codifying accepted convention.","msgtype":"m.text"},"ts":1348590845000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"anyway, HTML API design is based around technical arguments, not statistics and +1s and \"look how many people use jquery\"; i can recall no technical arguments being given for this at all, so i'm going to go and do my day job unless one turns up","msgtype":"m.text"},"ts":1348590885000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Developers that build real things on the real web prefer library APIs, such as jQuery, YUI, Dojo, etc. as such, the API decisions of those libraries should be taken into consideration when new DOM APIs are created.","msgtype":"m.text"},"ts":1348590900000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"zewt, you're aware that these \"people\" are the ones using these APIs, ya?","msgtype":"m.text"},"ts":1348590922000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"i use these APIs every day","msgtype":"m.text"},"ts":1348590936000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and the technical arguments don't have to use the APIs daily?","msgtype":"m.text"},"ts":1348590936000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"and you wouldn't like them at all easier to use?","msgtype":"m.text"},"ts":1348590945000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"returning \"this\" doesn't make them easier to use","msgtype":"m.text"},"ts":1348590963000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"danheberden, sure, I want them to be easier to use","msgtype":"m.text"},"ts":1348590967000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"or because YOU'VE used them and like them means the other thousand people should too","msgtype":"m.text"},"ts":1348590976000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"not significantly enough to commit the return value to it forever","msgtype":"m.text"},"ts":1348590976000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"cuz zewt, personally, i agree with you","msgtype":"m.text"},"ts":1348590991000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"I've been trying to get people to explain why returning \"this\" would make them easier to use","msgtype":"m.text"},"ts":1348590991000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I haven't heard anything","msgtype":"m.text"},"ts":1348590995000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i am so used to how it works it doesn't bother me","msgtype":"m.text"},"ts":1348590997000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"but i see the need for many others","msgtype":"m.text"},"ts":1348591006000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"mainly because i work support a lot","msgtype":"m.text"},"ts":1348591019000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"so i get a sense of that","msgtype":"m.text"},"ts":1348591023000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"i do trainings and deal with a lot of typical developers","msgtype":"m.text"},"ts":1348591049000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Ms2ger: what kind of metrics _would_ be helpful?","msgtype":"m.text"},"ts":1348591073000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"like - what way could we get an idea of buy-in from people that would satisfy you?","msgtype":"m.text"},"ts":1348591089000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"I don't care much about \"buy-in\"","msgtype":"m.text"},"ts":1348591107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"perhaps i'm not using the right word","msgtype":"m.text"},"ts":1348591121000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"i'm meaning if people would find it useful","msgtype":"m.text"},"ts":1348591130000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"how to track/measure that","msgtype":"m.text"},"ts":1348591134000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"it seems clear to me that having a few functions return this, and most (eg. the legacy ones) return nothing or (in the case of appendChild) its argument, both makes the chaining pattern much less useful and very brittle and confusing","msgtype":"m.text"},"ts":1348591137000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'm looking for someone to explain why people would find it useful","msgtype":"m.text"},"ts":1348591150000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"like if i asked all of my students in a training, and had my coworkers do the same","msgtype":"m.text"},"ts":1348591151000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"zewt... technical argument: ES1, 3, 5, 5.1 and 6 (draft) have set a precendent for objects whose prototype methods return either a specific value that is relevant to or the result of an operation on the calling object, or a newly created copy of the calling object itself, which allows further calls to be \"chained\"","msgtype":"m.text"},"ts":1348591168000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron, want to give a few examples?","msgtype":"m.text"},"ts":1348591242000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the DOM has deviated for a long time and users of DOM APIs have been \"fixing\" it for a decade.","msgtype":"m.text"},"ts":1348591251000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: what precedents can you name for chaining in ECMAScript?  I can think of exactly one","msgtype":"m.text"},"ts":1348591252000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"rwaldron: (in the language, I mean)","msgtype":"m.text"},"ts":1348591262000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the argument i'm looking for is \"here's a thing which is made so much easier or less error-prone that it justifies committing the return value to this--and nothing else--even if it's inconsistent with lots of other functions that do related things\"","msgtype":"m.text"},"ts":1348591291000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger: as for the personal why, i've had people express their displeasure at it NOT returning `this`; i can try to gain more insight as to the motivation behind that","msgtype":"m.text"},"ts":1348591298000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Ms2ger yes. Array.prototype.push returns a relevant value: the new length. Array.prototype.map returns a newly created array object with the values of the map operation","msgtype":"m.text"},"ts":1348591317000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"danheberden, I would appreciate that","msgtype":"m.text"},"ts":1348591325000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"need more?","msgtype":"m.text"},"ts":1348591326000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"There is a whole spec full of examples.","msgtype":"m.text"},"ts":1348591341000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron, I think you misunderstood my question","msgtype":"m.text"},"ts":1348591357000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rwaldron: what? the new length isn't \"this\", it's the new length","msgtype":"m.text"},"ts":1348591360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rwaldron, I'm looking for cases where ES returns the this value","msgtype":"m.text"},"ts":1348591378000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(and precedent isn't an argument that something should be done, it just means it has been)","msgtype":"m.text"},"ts":1348591386000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rwaldron: [].map is not an example of chaining, it's an example of a function with a return value, no?","msgtype":"m.text"},"ts":1348591392000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"zewt read my previous message before trying to argue something that I _just_ said","msgtype":"m.text"},"ts":1348591397000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: the only example I can come up with is [].sort, for a method that chains but doesn't return a new value/object","msgtype":"m.text"},"ts":1348591420000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"rwaldron, sorry, I misunderstood you","msgtype":"m.text"},"ts":1348591424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"[12:40 PM] <rwaldron> zewt... technical argument: ES1, 3, 5, 5.1 and 6 (draft) have set a precendent for objects whose prototype methods return either a specific value that is relevant to or the result of an operation on the calling object, or a newly created copy of the calling object itself, which allows further calls to be \"chained\"","msgtype":"m.text"},"ts":1348591426000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron, I'm just not sure how that is relevant, then","msgtype":"m.text"},"ts":1348591440000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jwalden push?","msgtype":"m.text"},"ts":1348591442000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"sorry, no","msgtype":"m.text"},"ts":1348591449000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"strike that","msgtype":"m.text"},"ts":1348591452000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron, I think we're all in violent agreement that there is a point to returning a useful value","msgtype":"m.text"},"ts":1348591462000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(I missed the part where you said \"chains but doesn't\"","msgtype":"m.text"},"ts":1348591468000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Ms2ger agreed.","msgtype":"m.text"},"ts":1348591495000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"But I argue that returning void 0/undefined is not doing anyone any favors","msgtype":"m.text"},"ts":1348591525000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Phew, we agreed on something ;)","msgtype":"m.text"},"ts":1348591525000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1348591531000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Ms2ger: lol","msgtype":"m.text"},"ts":1348591535000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"Ms2ger: what dangers do you think are present in returning `this` instead of undefined?","msgtype":"m.text"},"ts":1348591576000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"I guess I don't really see the value of returning 'this' in a few cases where we would otherwise return undefined","msgtype":"m.text"},"ts":1348591586000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what bad issues or problems would arrise from that?","msgtype":"m.text"},"ts":1348591589000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"danheberden: i've already explained that repeatedly :)","msgtype":"m.text"},"ts":1348591592000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"One is that you can't return anything else","msgtype":"m.text"},"ts":1348591600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<zewt> using the return value for something of value 0.1 means you can never use it to support a use case that appears a year from now with value 5.0","msgtype":"m.text"},"ts":1348591605000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Another is that you still need to remember which methods return something useful, and which return this","msgtype":"m.text"},"ts":1348591625000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt, so if addEventListener, after all these years, was going to support a different return value","msgtype":"m.text"},"ts":1348591653000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"I think what would be more useful is a JS feature to call multiple functions on one object","msgtype":"m.text"},"ts":1348591655000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"if the value of returning \"this\" is 5.0--if it's a significant, measurable win--then sure; but \"we should return *something*, so it may as well be this\" is a bad idea","msgtype":"m.text"},"ts":1348591671000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt - it's more, like, \"this function has no useful return value except for the original element\"","msgtype":"m.text"},"ts":1348591706000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"danheberden: you're confusing foresight with hindsight: when addEventListener was first implemented, there was no way of knowing whether some other return value would have turned up","msgtype":"m.text"},"ts":1348591720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, i'm saying take advantage of that hindsight","msgtype":"m.text"},"ts":1348591736000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"zewt: So the number of years that libraries have been using these methods, returning 'this', and not running into any major use case that would have been so much better than returning 'this' is not evidence? What would a reasonable wait time be?","msgtype":"m.text"},"ts":1348591766000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"ls_n, who says they haven't found (even not particularly big) such use cases?","msgtype":"m.text"},"ts":1348591800000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt, i *do* understand your point","msgtype":"m.text"},"ts":1348591802000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"and it's a good one","msgtype":"m.text"},"ts":1348591809000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"ls_n: it's not about \"wait time\", it's about adding a feature when there's a clear, measurable win, and that's exactly what nobody is giving--examples of things which are made measurably easier or less error-prone by doing this","msgtype":"m.text"},"ts":1348591810000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It's not like they could have implemented those","msgtype":"m.text"},"ts":1348591813000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i don't think this shoudl all be tackled super lightly","msgtype":"m.text"},"ts":1348591815000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"zewt Ms2ger I'm worried that the \"avoid future hostility\" argument is actually going to end up turning this into a lost opportunity (purely opinion)","msgtype":"m.text"},"ts":1348591845000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"but i think there are some cases where one could ascertain whether or not returning this would be a safe future proof change","msgtype":"m.text"},"ts":1348591847000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":":|","msgtype":"m.text"},"ts":1348591848000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron, possibly","msgtype":"m.text"},"ts":1348591878000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and honestly, with this argument, you would NEVER change the return value from undefinded to something","msgtype":"m.text"},"ts":1348591880000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"because of the fear you'd need that return value in the future","msgtype":"m.text"},"ts":1348591889000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"danheberden, why not? Because something *even better* could come along?","msgtype":"m.text"},"ts":1348591902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i do that too - i buy a really tasty snack and wait for the best time to eat it.. but in the end, it just goes bad","msgtype":"m.text"},"ts":1348591908000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"because i waited and waited","msgtype":"m.text"},"ts":1348591915000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"danheberden: of course you would--when you have a clear benefit for doing so, just like adding any feature. that benefit isn't clear (at least to us) in this case","msgtype":"m.text"},"ts":1348591921000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt - so perhaps the question isn't as much of 'should we' or 'shouldn't we'","msgtype":"m.text"},"ts":1348591944000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"but how can we gather the information necessary to make this decision","msgtype":"m.text"},"ts":1348591953000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"doesn't think the \"we might want to return something in the future\" argument has much value here -- either there's an obvious return value, or there's nothing, and thinking something might turn up in the distant future seems unrealistic","msgtype":"m.emote"},"ts":1348591975000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ms2ger: what inconveniences people have come across have been inconveniences.  At least, speaking from the YUI side of things. At the end of the day, if these methods are implemented without return value, then the libraries will call them, then return 'this' manually.  It will still just be an inconvenience.","msgtype":"m.text"},"ts":1348591987000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"jwalden i think it has some merit, for a period of time at least","msgtype":"m.text"},"ts":1348592002000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"I think the \"we might want to return something\" argument should be judged based on what you could reasonably return","msgtype":"m.text"},"ts":1348592008000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"danheberden: plausible, depending on the API I guess","msgtype":"m.text"},"ts":1348592021000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"i think libraries like jQuery give an oppurtunity to see if stuff is garbage or not","msgtype":"m.text"},"ts":1348592021000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"for most APIs it's kind of a stretch","msgtype":"m.text"},"ts":1348592054000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"i mean, look at jQ - `.click and .mouseover` - seriously?","msgtype":"m.text"},"ts":1348592070000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"we learned that kind of stuff is awful","msgtype":"m.text"},"ts":1348592079000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"and again, inconsistently returning \"this\" is confusing--for example, e.addBefore(e2).appendChild(e3).addBefore(e4) is very confusing, since appendChild returns e3, not e","msgtype":"m.text"},"ts":1348592112000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'm guessing most methods have a three or less reasonable, non-vacuous return values","msgtype":"m.text"},"ts":1348592123000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"s/a /","msgtype":"m.text"},"ts":1348592133000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"zewt: yes, agreed","msgtype":"m.text"},"ts":1348592161000,"senderName":"SamB_MacG5","senderId":"SamB_MacG5@irc"},
{"content":{"body":"zewt: yes is it","msgtype":"m.text"},"ts":1348592165000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"(i have a call to take, my non-response isn't grumpy silence :)","msgtype":"m.text"},"ts":1348592175000,"senderName":"danheberden","senderId":"danheberden@irc"},
{"content":{"body":"danheberden: fine, then, be that way","msgtype":"m.text"},"ts":1348592208000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":";-)","msgtype":"m.text"},"ts":1348592209000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"would e.appendChild(e2).append(e3).boom() be less confusing?","msgtype":"m.text"},"ts":1348592210000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"anyhow i'm out of time for now--day job and all--so afk","msgtype":"m.text"},"ts":1348592211000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It would be nicer if js made it easier to write a function like chain(elem, appendChild(e1), appendChild(e2), appendChild(e3)) and so on","msgtype":"m.text"},"ts":1348592242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Rather than forcing each function to return this or not work with chaining","msgtype":"m.text"},"ts":1348592287000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"^ that","msgtype":"m.text"},"ts":1348592303000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: extending the legal url syntax lgtm","msgtype":"m.text"},"ts":1348592348000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: do you have a plan for how to specify the authoring conformance criteria?","msgtype":"m.text"},"ts":1348592375000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not really, wanted to figure out browser stuff first","msgtype":"m.text"},"ts":1348592485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1348592496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but I guess in the end I'll just take inspiration from one of your specs","msgtype":"m.text"},"ts":1348592502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1348592510000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that's what I usually do anyway, look for some existing pattern","msgtype":"m.text"},"ts":1348592513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well there's several options on this front even just amongst stuff i've done :-)","msgtype":"m.text"},"ts":1348592593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in particular, BNF variants and straight prose","msgtype":"m.text"},"ts":1348592614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rwaldron: \"\"\"and all I've gotten in response is \"yawn\", some snide comments about jQuery and some misguided argument about fixing the issue in JS (ie. the language). \"\"\" dude, I tried to explain where I came from","msgtype":"m.text"},"ts":1348592701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: up to and including that I'm fine with changing it, if we have some kind of plan","msgtype":"m.text"},"ts":1348592785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rwaldron: thus far it's like \"can we do x?\" \"well, most of y doesn't do x at the moment and although we could try it, it seems kind of irresponsible without a plan for y\" \"...\"","msgtype":"m.text"},"ts":1348592874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk I wasn't referring my discussion with you","msgtype":"m.text"},"ts":1348592908000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"annevk while you were away I provided several arguments beyond simply \"can we do x?\"","msgtype":"m.text"},"ts":1348592968000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I think Ms2ger is arguing the same point, but not as constructive and friendly unfortunately","msgtype":"m.text"},"ts":1348592971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger and I actually both agree that returning something is better then nothing","msgtype":"m.text"},"ts":1348593002000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I'm stepping out for a few","msgtype":"m.text"},"ts":1348593122000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"that's not what he agreed to","msgtype":"m.text"},"ts":1348593141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see e.g. \"I guess I don't really see the value of returning 'this' in a few cases where we would otherwise return undefined \"","msgtype":"m.text"},"ts":1348593145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah, my point was in particular that the platform does not return \"this\"","msgtype":"m.text"},"ts":1348593164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know such APIs anyway","msgtype":"m.text"},"ts":1348593174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk [12:45 PM] <Ms2ger> rwaldron, I think we're all in violent agreement that there is a point to returning a useful value","msgtype":"m.text"},"ts":1348593180000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1348593187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but he's not convinced (like me) \"this\" is useful","msgtype":"m.text"},"ts":1348593203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"furthermore, nowhere in the platform is this returned","msgtype":"m.text"},"ts":1348593213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is really frustrating","msgtype":"m.text"},"ts":1348593232000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"and fwiw, platform is http://platform.html5.org/ of course","msgtype":"m.text"},"ts":1348593232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at no point did i say that ms2ger had agreed to returning this","msgtype":"m.text"},"ts":1348593261000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I'm not even sure how you came to that based on what I jsut said","msgtype":"m.text"},"ts":1348593275000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"because you said he thought something is better than nothing","msgtype":"m.text"},"ts":1348593299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is not what he said","msgtype":"m.text"},"ts":1348593301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dude","msgtype":"m.text"},"ts":1348593326000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1348593328000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:45 PM] <Ms2ger> rwaldron, I think we're all in violent agreement that there is a point to returning a useful value","msgtype":"m.text"},"ts":1348593328000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:45 PM] <rwaldron> (I missed the part where you said \"chains but doesn't\"","msgtype":"m.text"},"ts":1348593329000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:45 PM] <rwaldron> Ms2ger agreed.","msgtype":"m.text"},"ts":1348593329000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:46 PM] <rwaldron> But I argue that returning void 0/undefined is not doing anyone any favors","msgtype":"m.text"},"ts":1348593329000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:46 PM] <Ms2ger> Phew, we agreed on something ;)","msgtype":"m.text"},"ts":1348593329000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"[12:46 PM] <rwaldron> +1","msgtype":"m.text"},"ts":1348593329000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"I hate to leave while we're having so much, but I actually have to step out for an appointment","msgtype":"m.text"},"ts":1348593372000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"returning a useful value does not mean that returning something is better than nothing","msgtype":"m.text"},"ts":1348593380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... he was agreeing with the first line (returning something useful is useful), not that returning undefined is bad","msgtype":"m.text"},"ts":1348593400000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1348593407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool, well don't sweat it.","msgtype":"m.text"},"ts":1348593425000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: ttyl then","msgtype":"m.text"},"ts":1348593430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm actually not interested in participating in this discussion anymore","msgtype":"m.text"},"ts":1348593471000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"Good luck with further development, I wish you nothing but success.","msgtype":"m.text"},"ts":1348593513000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: that's unfortunate; I hope you'll still contribute to other discussions","msgtype":"m.text"},"ts":1348593556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I had not expected people would actually call Array.prototype.push \"chaining\" as well","msgtype":"m.text"},"ts":1348593981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought \"chaining\" was reserved for methods that return \"this\"","msgtype":"m.text"},"ts":1348593995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ho does Array push() chain?","msgtype":"m.text"},"ts":1348594054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: you following this Location thread on whatwg?","msgtype":"m.text"},"ts":1348594065000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: because it returns something on which you can do an operation reportedly","msgtype":"m.text"},"ts":1348594082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not chaining","msgtype":"m.text"},"ts":1348594085000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"every function that returns anything is chaining then?","msgtype":"m.text"},"ts":1348594101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1348594103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that was just one of many confusions in that discussion, heh","msgtype":"m.text"},"ts":1348594126000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, maybe this is semantics...","msgtype":"m.text"},"ts":1348594130000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"or maybe I parsed http://krijnhoetmer.nl/irc-logs/whatwg/20120925#l-975 and subsequent lines incorrectly","msgtype":"m.text"},"ts":1348594177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"chaining\" == `return this` vs \"returns object\" vs ?","msgtype":"m.text"},"ts":1348594202000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"ls_n, I understood it to mean `return this`","msgtype":"m.text"},"ts":1348594230000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ls_n: dunno man, I thought it was about returning the object you invoked the method on","msgtype":"m.text"},"ts":1348594232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, me too","msgtype":"m.text"},"ts":1348594246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"imho chaining is a layering violation, taking what should be a syntactic issue and dragging it into the api layer","msgtype":"m.text"},"ts":1348594276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, I can see it either way, because you're chaining operations through the return value, regardless of whether it's 'this'","msgtype":"m.text"},"ts":1348594288000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"abarth, so the html test suite currently splits submitted tests by person/organization that submitted them, any preference where those location tests should go?","msgtype":"m.text"},"ts":1348594362000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: ms2 asked for \"examples\" (implied: of things in ES that return the calling object), but was taken literally and received examples of random-not-chaining-at-all return values","msgtype":"m.text"},"ts":1348594362000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1348594368000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: so are there examples for \"this\"?","msgtype":"m.text"},"ts":1348594381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: (also, though the ES quote thing wasn't relevant, it also says \"a newly created copy of the calling object itself\"--which isn't chaining at all when applied to something like a DOM node)","msgtype":"m.text"},"ts":1348594397000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: dunno; i don't think it matters (precedent isn't an argument)","msgtype":"m.text"},"ts":1348594426000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(or I sure hope it isn't, we have mountains of really bad precedent in the older APIs :)","msgtype":"m.text"},"ts":1348594455000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think jwalden had one","msgtype":"m.text"},"ts":1348594482000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(in case the above wasn't clear--that ES line would mean returning this.cloneNode(), not this)","msgtype":"m.text"},"ts":1348594530000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: Array.prototype.sort returns this; that's the only example I can think of","msgtype":"m.text"},"ts":1348594543000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"has no idea why it returns this","msgtype":"m.emote"},"ts":1348594554000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: interesting","msgtype":"m.text"},"ts":1348594564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden, arr.sort().sort() // Just making sure","msgtype":"m.text"},"ts":1348594573000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well, sorting multiple times is useful","msgtype":"m.text"},"ts":1348594575000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"took advantage of that when constructing XSS exploits against the original Facebook platform, back five years ago, by applying sort to the global object :-)","msgtype":"m.emote"},"ts":1348594587000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(with different orderings)","msgtype":"m.text"},"ts":1348594592000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I think precedents matter, because the lack of the platform doing it now is one of the arguments I use","msgtype":"m.text"},"ts":1348594595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: prior to forEach, I never found it practically useful.","msgtype":"m.text"},"ts":1348594621000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"annevk: i think that's sort of halfway right","msgtype":"m.text"},"ts":1348594622000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, fair :)","msgtype":"m.text"},"ts":1348594624000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thinks lack-of-platform-doing-it-now is the strongest argument against suddenly doing it now for new methods","msgtype":"m.emote"},"ts":1348594628000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: it's not exactly precedent, so much as that the chaining paradigm only works well when it's supported consistently","msgtype":"m.text"},"ts":1348594645000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"eg. we don't want two or three functions that do it (precedent), we'd want to be able to do it everywhere to satisfy that","msgtype":"m.text"},"ts":1348594674000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well yeah, my other argument is that I want to see some kind of plan rather than \"lets do this here and see what happens\" (sicking argues for that)","msgtype":"m.text"},"ts":1348594701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"personally i write lots of code without jQuery or any other monolithic library at all and have never gone \"man, I wish I could chain these calls\", which is my own basic rationale :)","msgtype":"m.text"},"ts":1348594726000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and Hixie's point about solving it elsewhere I like too, because then I don't have to worry","msgtype":"m.text"},"ts":1348594753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1348594777000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: I think a great deal of the feedback is attached to the names.  These same methods exist, and behave consistently in libs. If you'd chosen different names, there might have been less reaction.","msgtype":"m.text"},"ts":1348594784000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"(i'm less enthusiastic about the language-level solution, since that's really hard to do in a sane way--adding new syntax to JS means you can't use it *at all* until it's widely supported, since the whole file will fail to parse)","msgtype":"m.text"},"ts":1348594812000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ls_n: nah, this kind of feedback is relatively common also for non-lib methods","msgtype":"m.text"},"ts":1348594820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ls_n: e.g. the mutation observer stuff","msgtype":"m.text"},"ts":1348594832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(unless someone gets creative enough to find a way to avoid that, like the \"use strict\"; hack, but I doubt that'll happen)","msgtype":"m.text"},"ts":1348594853000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"use strict\" was just a bad idea, given script concatenation","msgtype":"m.text"},"ts":1348594896000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"c'est la vie","msgtype":"m.text"},"ts":1348594902000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"javascript folks should've learned from doctype switching, and didn't","msgtype":"m.text"},"ts":1348594919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(i've found it useful, but mostly as a linting thing and to aid my unit tests--until every browser supports it I'm not turning it on in live code)","msgtype":"m.text"},"ts":1348594953000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but considering they were pretty far along with an out-of-band versioning strategy, maybe we're lucky :)","msgtype":"m.text"},"ts":1348594955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"brendan considers this different strategies for developing the platform a good thing, but I'm not sure I'm quite with him as the technologies do need to work together at the end of the day","msgtype":"m.text"},"ts":1348595026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's attachment to the familiarity of appendChild() returning a node, and attachment to the existing behavior of append(str) in libs returning a node (though it is a different one).","msgtype":"m.text"},"ts":1348595060000,"senderName":"ls_n","senderId":"ls_n@irc"},
{"content":{"body":"well, at this point tc39 is in theory all gung-ho about \"no more language modes/versions\", so there shouldn't be any more \"use strict\" mistakes, or even |use strict;| pragmas, or whatever","msgtype":"m.text"},"ts":1348595089000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"new syntax will just break stuff, new editions will not break old code","msgtype":"m.text"},"ts":1348595111000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: littlecalculist (iirc) is a great man","msgtype":"m.text"},"ts":1348595120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1348595159000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"a little too much of the PL-theory propellerhead for me on rare occasion, but yeah","msgtype":"m.text"},"ts":1348595207000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and it takes all kinds anyway","msgtype":"m.text"},"ts":1348595213000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wouldn't want a committee of people like him :-)","msgtype":"m.emote"},"ts":1348595224000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"at least, not a whole committee of them","msgtype":"m.text"},"ts":1348595232000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"i don't really mind a bit of bumpiness for use strict, since some of the things it fixes are *really* annoying JS quirks (unintended globals being the most obvious; .freeze not causing exceptions is lame too, etc)","msgtype":"m.text"},"ts":1348595254000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but i'd call that a one-time thing :)","msgtype":"m.text"},"ts":1348595266000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyone from Google here? What are the best email addresses for Alex Russell and Erik Arvidsson? I have their @google.com addresses, but if there's something they actually read and reply to, might be nice","msgtype":"m.text"},"ts":1348595285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a better rollout strategy for use-strict probably would have helped some; jslint and json2.js picking it up prematurely was a large part of the problem","msgtype":"m.text"},"ts":1348595319000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"even still, \"backwards compatible\" but not is just the worst of both worlds","msgtype":"m.text"},"ts":1348595343000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"in particular, I see arv is here, I'm looking for a reply to http://lists.w3.org/Archives/Public/www-dom/2012JulSep/0069.html","msgtype":"m.text"},"ts":1348595360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: python 3's strategy is the worst of all worlds :) overlapping compatibility is much more copable","msgtype":"m.text"},"ts":1348595443000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is ambivalent about python 3's strategy","msgtype":"m.emote"},"ts":1348595472000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"isn't","msgtype":"m.emote"},"ts":1348595478000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"although I am perfectly happy to say it would not at all at all at all work for the web :-)","msgtype":"m.text"},"ts":1348595491000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"diff'rent strokes, perhaps","msgtype":"m.text"},"ts":1348595501000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"python 3.0 released in dec 2008; it's 2012 and I'm still on 2.7. migration failed :)","msgtype":"m.text"},"ts":1348595510000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if they were aiming for a less-than-four-years transition","msgtype":"m.text"},"ts":1348595550000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"python's always been a with-all-deliberate-speed sort of group","msgtype":"m.text"},"ts":1348595569000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"expects python 3 transition to work eventually","msgtype":"m.emote"},"ts":1348595587000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think as long as they get there eventually, they're more or less happy","msgtype":"m.text"},"ts":1348595589000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348595591000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"expecting a turnaround by some particular time, or aiming for one, is setting oneself up for disappointment","msgtype":"m.text"},"ts":1348595611000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and I've seen enough signs from people that they're slowly working on the transition that I don't think it can be said to have failed, right now","msgtype":"m.text"},"ts":1348595647000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"much saner to make breaking changes slowly, and to keep reasonable compatibility overlap between adjacent versions, instead of making a ton of big breaking changes at once, which just seemed like they got impatient","msgtype":"m.text"},"ts":1348595658000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"signs from people, and from projects implemented in python, that is","msgtype":"m.text"},"ts":1348595663000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I've seen work on py3 compat in Mozilla's new python code, fwiw","msgtype":"m.text"},"ts":1348595946000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: should path step 2 also set fregment to \"#\", like hierarchical does?","msgtype":"m.text"},"ts":1348597535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(don't know which is correct, just seems odd that they differ)","msgtype":"m.text"},"ts":1348597670000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: fixed","msgtype":"m.text"},"ts":1348598154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Your task is nontrivial\"","msgtype":"m.text"},"ts":1348598562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"story of our lives","msgtype":"m.text"},"ts":1348598565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"queue a nontrivial task\"","msgtype":"m.text"},"ts":1348598616000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(a big queue)","msgtype":"m.text"},"ts":1348598655000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It does sound like the end of the introduction to a badly translated text adventure, or something","msgtype":"m.text"},"ts":1348598765000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cabanier: is your work on adding blending etc to canvas covering things like adding blur effects?","msgtype":"m.text"},"ts":1348598928000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not sure if trolling, or just misunderstanding what he's on about","msgtype":"m.text"},"ts":1348599152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty sure he's not trolling","msgtype":"m.text"},"ts":1348599165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"he's right that defining the conformance criteria is non-trivial","msgtype":"m.text"},"ts":1348599186000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but wrong if he thinks that's unusual :-)","msgtype":"m.text"},"ts":1348599192000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it's just the regular culture clash -- ietf and w3c often tend to shy away from fixing hard problems","msgtype":"m.text"},"ts":1348599208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"same with the shock that we might even consider doing something that we view as obsoleting an IETF STD","msgtype":"m.text"},"ts":1348599242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whereas from our point of view, we're like, \"look, we said it was broken years ago, we gave you a chance to fix it, now we've timed out and are doing it ourselves\"","msgtype":"m.text"},"ts":1348599272000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: Hooray to that.","msgtype":"m.text"},"ts":1348599296000,"senderName":"say2joe","senderId":"say2joe@irc"},
{"content":{"body":"I guess indeed it's the regular culture clash, but using \"finding URLs in text\" as an example as to why we need to restrict the syntax...","msgtype":"m.text"},"ts":1348599375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm happy you took the time to explain that one","msgtype":"m.text"},"ts":1348599406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finding urls in text is indeed something that is impossible if we consider any random string valid","msgtype":"m.text"},"ts":1348599443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but (a) we don't, and (b) people don't want to find only valid URLs so that doesn't matter anyway","msgtype":"m.text"},"ts":1348599454000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's pretty common for people to will the use case to be different because the real use case is hard to fix :-P","msgtype":"m.text"},"ts":1348599500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i do it all the time too :-P)","msgtype":"m.text"},"ts":1348599506000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: your assertion that the composition of parsing, resolving, and canonicalizing is trivial points to the problem. Your task is not trivial so why should your algorithm be?","msgtype":"m.text"},"ts":1348599508000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: hey!","msgtype":"m.text"},"ts":1348599526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when I saw the \"why don't you just patch RFC#whatever\" post I just grimaced, pitied whoever had to reply to that noise, and moved on :)","msgtype":"m.text"},"ts":1348599531000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we did patch the RFC","msgtype":"m.text"},"ts":1348599548000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"didn't work well enough. anne's now doing it properly. :-)","msgtype":"m.text"},"ts":1348599557000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"exactly :)","msgtype":"m.text"},"ts":1348599571000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: well, 1) I said \"quite trivial\" and 2) I guess it is indeed non-trivial, but it is rather easy to follow","msgtype":"m.text"},"ts":1348599589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something can be non-trivial to design, yet be trivial in its result","msgtype":"m.text"},"ts":1348599626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in fact, the more trivial the solution, typically, the harder one had to work to develop it :-P","msgtype":"m.text"},"ts":1348599646000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(all other things, e.g. how much the solution solves, being equal)","msgtype":"m.text"},"ts":1348599665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I find it very difficult to follow. What are the allowable alphabets of conforming productions? What normalization is done? It's all mixed together in a prose state machine.","msgtype":"m.text"},"ts":1348599675000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: and what I like about it in particular is that it is much closer to implementations, so if we want to extend it or implementations want to follow it to fix bugs, things will be a lot easier","msgtype":"m.text"},"ts":1348599679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: \"c\" can be any code point basically, including surrogate code points","msgtype":"m.text"},"ts":1348599714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: that's about it","msgtype":"m.text"},"ts":1348599729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's a definition of conforming productions?","msgtype":"m.text"},"ts":1348599736000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1348599746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: do you really find IETF-style specs easier to follow than HTML-style algorithmic specs? because you'd be the first I've heard of","msgtype":"m.text"},"ts":1348599751000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"need to add that under \"Writing\" at some point","msgtype":"m.text"},"ts":1348599755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: he hasn't defined what's valid yet.","msgtype":"m.text"},"ts":1348599759000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: lots of people think declarative is easier than imperative. They're right, when you don't care about defining timing and error handling.","msgtype":"m.text"},"ts":1348599788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt, for authoring, sure","msgtype":"m.text"},"ts":1348599802000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt: see e.g. the websocket protocol hybi mailing list","msgtype":"m.text"},"ts":1348599803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: it's really hard to read complex algorithms and work out their implications.","msgtype":"m.text"},"ts":1348599822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: personally I find imperative easier even as a user--anne's DOM Events work made the event system infinitely clearer to me, for example","msgtype":"m.text"},"ts":1348599827000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: for testing, yes","msgtype":"m.text"},"ts":1348599839000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"there's a breaking point, of course, depending on the complexity of the algorithm","msgtype":"m.text"},"ts":1348599842000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: fair enough","msgtype":"m.text"},"ts":1348599848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: fwiw, I'm not opposed to including some ABNF somewhere","msgtype":"m.text"},"ts":1348599900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: at the moment I'm focused on figuring out parsing (mostly what code browsers/curl/search engines/etc. need to run)","msgtype":"m.text"},"ts":1348599929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mixing parsing and normalization obscures the meaning of a given identifier. Separating the spec into phases and specifying exactly what will pass through unmangled would be very helpful.","msgtype":"m.text"},"ts":1348600027000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"what is \"normalisation\" here?","msgtype":"m.text"},"ts":1348600059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: producing identifiers over which serialize compose parse is identity","msgtype":"m.text"},"ts":1348600127000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: that is, nonconforming -> conforming","msgtype":"m.text"},"ts":1348600149000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: canonicalization is related, i believe, but concerns things like hexadecimal case changes where both input and output are conforming but one representation is 'canonical'","msgtype":"m.text"},"ts":1348600204000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: i have no idea what what you just said means","msgtype":"m.text"},"ts":1348600233000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: how does this differ from \"parse\"?","msgtype":"m.text"},"ts":1348600274000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: which bit? if you parse a conforming URI and then serialize it, the result should be the original URI","msgtype":"m.text"},"ts":1348600290000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"hmm; http://example.org is conforming yet gives http://example.org/; or http://example.org:/ gives http://example.org/","msgtype":"m.text"},"ts":1348600336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: perhaps you say that there are conforming URIs that are not canonical and so the result is the canonicalization of the input… feeding this result back through should result in the same string","msgtype":"m.text"},"ts":1348600371000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: sounds like what you're saying is \"normalisation\" is the act of parsing then serialising.","msgtype":"m.text"},"ts":1348600374000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: so how could you separate it from parsing?","msgtype":"m.text"},"ts":1348600392000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah. conforming and normalized are different things","msgtype":"m.text"},"ts":1348600421000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: normalization is whatever you do to produce a valid identifier from an arbitrary input","msgtype":"m.text"},"ts":1348600434000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: ok, so, parse then serialise.","msgtype":"m.text"},"ts":1348600452000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is how you can test it, yes, but that is not the normalization algorithm","msgtype":"m.text"},"ts":1348600474000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: i guess i don't understand what you are asking for.","msgtype":"m.text"},"ts":1348600481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: it is in the new spec","msgtype":"m.text"},"ts":1348600488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: the normalisation algorithm is \"parse the string. serialise the bits into a url.\"","msgtype":"m.text"},"ts":1348600501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: and for sure parser/serialize is how a typical URL library works","msgtype":"m.text"},"ts":1348600506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't see how else you could do it","msgtype":"m.text"},"ts":1348600522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am asking for the explicit separation of nonconforming -> conforming as well as conforming -> canonical","msgtype":"m.text"},"ts":1348600535000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"http://www.example.com is conforming but noncanonical. http://www.example.com/ is canonical","msgtype":"m.text"},"ts":1348600576000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"to back up a little: what's the purpose of this?","msgtype":"m.text"},"ts":1348600588000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sure, the former is input, the latter is output","msgtype":"m.text"},"ts":1348600592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that the former is conforming is yet to be written down","msgtype":"m.text"},"ts":1348600605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: i don't think it makes sense to define two different parsers.","msgtype":"m.text"},"ts":1348600648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If there are invalid inputs that produce valid outputs, those invalid inputs must undergo some sort of normalization to put them in the space of valid inputs","msgtype":"m.text"},"ts":1348600658000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: that would just be asking for them to end up out of sync.","msgtype":"m.text"},"ts":1348600663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: it's better not to think of inputs as valid or invalid","msgtype":"m.text"},"ts":1348600691000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: whether a URL is valid or not is really just a minor detail for authoring conformance/lint tools","msgtype":"m.text"},"ts":1348600710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how can they be out of sync? they compose","msgtype":"m.text"},"ts":1348600720000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: to help authors avoid likely mistakes","msgtype":"m.text"},"ts":1348600721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: i don't see how you could describe a parser that only parses invalid urls and that then passes the result of that to a parser that only accepts valid urls, that would be insane","msgtype":"m.text"},"ts":1348600757000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: you'd actually need three parsers then, one for invalid urls, one for valid urls, and one for unknown urls to determine if they were valid or not!","msgtype":"m.text"},"ts":1348600774000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would be twice the work and nobody would ever implement it that way","msgtype":"m.text"},"ts":1348600777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: just have one parser, it's cleaner","msgtype":"m.text"},"ts":1348600781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this argument is interesting though","msgtype":"m.text"},"ts":1348600804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because it's the exact same argument we got from the W3C TAG about the HTML parser","msgtype":"m.text"},"ts":1348600814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: can you imagine what a mess HTML parsing would be if we used that kind of strategy?","msgtype":"m.text"},"ts":1348600816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nobody else ever cared","msgtype":"m.text"},"ts":1348600820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: really? i guess i blissfully missed that","msgtype":"m.text"},"ts":1348600834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: or i've blocked it out of my memory :-P","msgtype":"m.text"},"ts":1348600842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not parsers, functions. You can compose all these functions in your parser and most implementations will.","msgtype":"m.text"},"ts":1348600850000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: function, parser, same thing","msgtype":"m.text"},"ts":1348600862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I quite clearly remember DanC and such wanting a parser just for valid stuff","msgtype":"m.text"},"ts":1348600862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: weird","msgtype":"m.text"},"ts":1348600867000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: s/parser/algorithm/ in my argument above, it still holds.","msgtype":"m.text"},"ts":1348600888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no. Every parser is a function but not every function is a parser. Parsers operate on strings.","msgtype":"m.text"},"ts":1348600923000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: that doesn't affect my argument","msgtype":"m.text"},"ts":1348600949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: sad news: \"Unicode 6.2 will include the accelerated publication of the character U+20BA TURKISH LIRA SIGN\"","msgtype":"m.text"},"ts":1348600956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"imho, the right way to do this is to have one function that turns a string into components (parser), one that turns components into strings (serialiser), one that turns an incomplete set of components and a complete set of components into one complete set of components (resolution), and one that takes a string and returns a boolean (conformance definition)","msgtype":"m.text"},"ts":1348601029000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Does it? Specifying the composition of these functions for different inputs makes the meaning of the spec much clearer. It is then obvious what inputs are 'safe', what inputs will be mangled, and what inputs will never be mangled.","msgtype":"m.text"},"ts":1348601040000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: defining what inputs are safe is done by defining \"valid URL\", which is an entirely separate problem.","msgtype":"m.text"},"ts":1348601063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: in the HTML spec, this is http://whatwg.org/html#writing vs http://whatwg.org/html#parsing","msgtype":"m.text"},"ts":1348601100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it would appear that inside of the parser, you generate a valid URL. Why is this obscured?","msgtype":"m.text"},"ts":1348601159000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: parser and resolution are merged in the current spec","msgtype":"m.text"},"ts":1348601166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I haven't written a serializer yet; though the API has various members that serialize URLs in various ways","msgtype":"m.text"},"ts":1348601199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: so I might not bother writing an explicit serializer","msgtype":"m.text"},"ts":1348601210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(never mind, I guess I should for HTTP and such)","msgtype":"m.text"},"ts":1348601230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: i don't understand the question.","msgtype":"m.text"},"ts":1348601248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i need a \"parse\" algorithm that returns components, and a \"resolve\" algorithm that returns an absolute url","msgtype":"m.text"},"ts":1348601278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: parse always returns an absolute URL","msgtype":"m.text"},"ts":1348601294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how do i get the components?","msgtype":"m.text"},"ts":1348601305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Why specify only the composition instead of the factors?","msgtype":"m.text"},"ts":1348601314000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: it returns a URL object that has components","msgtype":"m.text"},"ts":1348601316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: i don't understand what that means","msgtype":"m.text"},"ts":1348601323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but it's always a complete URL (or invalid)","msgtype":"m.text"},"ts":1348601327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if it returns both an absolute URL and components, that's fine by me","msgtype":"m.text"},"ts":1348601344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: http://url.spec.whatwg.org/#concept-url is what you get back","msgtype":"m.text"},"ts":1348601377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: you parse an \"input\" into a concept-url, which has concept-url-scheme etc.","msgtype":"m.text"},"ts":1348601406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k","msgtype":"m.text"},"ts":1348601412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: lgtm","msgtype":"m.text"},"ts":1348601415000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: the base may be unknown or ambiguous. Can I defer relative resolution?","msgtype":"m.text"},"ts":1348601441000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"just don't parse it until you need to resovle it","msgtype":"m.text"},"ts":1348601473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: hold the \"input\" until you have the base","msgtype":"m.text"},"ts":1348601561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I sent email to WHATWG on *behalf* of the SVGWG, *because* we're adopting multi-letter commands. ^_^","msgtype":"m.text"},"ts":1348601601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: so no means will be provided to manipulate relative references? Relative references can never be serialized?","msgtype":"m.text"},"ts":1348601625000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: you shouldn't ask me, anne is the editor of this url spec","msgtype":"m.text"},"ts":1348601654000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: but i'm sure if you give anne use cases, he will be more than happy to address them","msgtype":"m.text"},"ts":1348601674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: does anything on the web serialise relative urls?","msgtype":"m.text"},"ts":1348601686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: anything that manipulates data structures which use relative references and outputs said data structures...","msgtype":"m.text"},"ts":1348601724000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: such as?","msgtype":"m.text"},"ts":1348601735000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: DOM transformers","msgtype":"m.text"},"ts":1348601757000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"(how is it 2012 and gmail doesn't let you add filters to mark as spam?)","msgtype":"m.text"},"ts":1348601792000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: and they manipulate URLs?","msgtype":"m.text"},"ts":1348601796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, partial resolution of URLs is common","msgtype":"m.text"},"ts":1348601830000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: do you have an example i can look at?","msgtype":"m.text"},"ts":1348601846000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: it does","msgtype":"m.text"},"ts":1348601854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: ping","msgtype":"m.text"},"ts":1348601877000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: lets you delete, and \"never spam\", but not \"always spam\"","msgtype":"m.text"},"ts":1348601901000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: in any event, if we decide that we do want parsing and resolution separate, that's not really a big deal","msgtype":"m.text"},"ts":1348601903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess since the difference between deleted and spam is so opaque with gmail (if it affects filtering, I can't measure it), i may as well not care","msgtype":"m.text"},"ts":1348601922000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: huh","msgtype":"m.text"},"ts":1348601924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: I think the intent is that you just mark it as spam normally, and let your filters catch up.","msgtype":"m.text"},"ts":1348601926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: i stand corrected.","msgtype":"m.text"},"ts":1348601927000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: yessir","msgtype":"m.text"},"ts":1348601940000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"anyway, sorry for the distraction, didn't notice that you were still talking with ds :)","msgtype":"m.text"},"ts":1348601946000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i am capable of having multiple conversations at once :-P","msgtype":"m.text"},"ts":1348601960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/filters/normal spam filter/","msgtype":"m.text"},"ts":1348601969000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: (whenever i'm chatting here i'm also editing the spec :-P)","msgtype":"m.text"},"ts":1348601971000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not off-hand, no. You can't conceive of converting a relative path into an absolute path or a schemed URI into a scheme relative URI?","msgtype":"m.text"},"ts":1348601978000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"well, i try to limit random irrelevant drop-ins to when there isn't an on-topic discussion going on :)","msgtype":"m.text"},"ts":1348601995000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: if you have no concrete examples, i have no trouble saying we don't need to address it.","msgtype":"m.text"},"ts":1348602002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: i have never found a need to do so, personally","msgtype":"m.text"},"ts":1348602016000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: just curious, based on what is some test added to robohornet","msgtype":"m.text"},"ts":1348602018000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: really? I have done this numerous times in numerous languages. Absolutizing URI references is useful.","msgtype":"m.text"},"ts":1348602065000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: i'd be happy to look at concrete examples","msgtype":"m.text"},"ts":1348602084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: resolving urls is certainly useful, and the algorithm anne is defining does so","msgtype":"m.text"},"ts":1348602104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the range API for example looks very odd, since it ends up adding element with same id 50 times to document)","msgtype":"m.text"},"ts":1348602121000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: sounds realistic :-P","msgtype":"m.text"},"ts":1348602139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you are stonewalling. Please address the technical consideration.","msgtype":"m.text"},"ts":1348602149000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: resolution and partial resolution are different","msgtype":"m.text"},"ts":1348602165000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"he's asking for use cases--what you actually want to do (or would want to do) that the proposed API and spec doesn't handle","msgtype":"m.text"},"ts":1348602173000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"paul_irish: you probably also saw https://github.com/robohornet/robohornet/issues/66 . It means that some tests are actually testing something else than what they are supposed to test","msgtype":"m.text"},"ts":1348602174000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: sure :)","msgtype":"m.text"},"ts":1348602179000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dsheets: i'm not the editor, anne is the one who will address issues on this spec. I'm just trying to explain to you how we work.","msgtype":"m.text"},"ts":1348602179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: based on isolated performance issues that have been identified in a few notable js applications and libraries. they've been reduced down to a useful quantity of code","msgtype":"m.text"},"ts":1348602187000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"that isn't stonewalling, it's the standard approach here","msgtype":"m.text"},"ts":1348602192000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: and the way we work is we don't address hypotheticals","msgtype":"m.text"},"ts":1348602199000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: yeah 66 looks legit.","msgtype":"m.text"},"ts":1348602208000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"dsheets: if you have done it as many times as you say, then you need but document them for us","msgtype":"m.text"},"ts":1348602218000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: e.g. a pointer to a page that does it","msgtype":"m.text"},"ts":1348602225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: resolving foo/bar against /baz/ into /baz/foo/bar","msgtype":"m.text"},"ts":1348602252000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: do you have an example of something that does that?","msgtype":"m.text"},"ts":1348602271000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: benchmark.js seems to be the strongest harness for benchmarking, but yeah produces some problems with this test in partic","msgtype":"m.text"},"ts":1348602276000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Hixie: resolving #frag against path into path#frag","msgtype":"m.text"},"ts":1348602287000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"paul_irish: I was looking at DOM Range test, because I know that code is probably the least optimized code in Gecko... but then the test is actually spending time everywhere else but in Range code","msgtype":"m.text"},"ts":1348602290000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"paul_irish: \"some\" problems","msgtype":"m.text"},"ts":1348602304000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dsheets: do you have an example of something that does that?","msgtype":"m.text"},"ts":1348602308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: if you run the innerHTML testfile itself, it ends up testing innerHTML","msgtype":"m.text"},"ts":1348602324000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348602330000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"dsheets: it's easy to come up with arbitrary needs, but those aren't use cases","msgtype":"m.text"},"ts":1348602334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you use the testharness, it tests something else too","msgtype":"m.text"},"ts":1348602340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dsheets: the question isn't what it is (we get that--modifying relative paths as-is without resolving them), it's why you want to do it","msgtype":"m.text"},"ts":1348602351000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: use cases are concrete examples of actual problems met by real users","msgtype":"m.text"},"ts":1348602352000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____:  really appreciate you, boris, kyle, others looking at these btw","msgtype":"m.text"},"ts":1348602358000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1348602363000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: anyhow, sounds like the usual problems with tests. Testing something else than one is supposed to test :)","msgtype":"m.text"},"ts":1348602379000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dsheets: I have looked into this, and as far as http://platform.html5.org is concerned, only parsing input (maybe combined with a base URL) into a URL is what is visibly exposed","msgtype":"m.text"},"ts":1348602393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: and actually used","msgtype":"m.text"},"ts":1348602415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I am a real user and I have personally constructed systems to do this for real world use cases. It is useful in conjunction with pushState.","msgtype":"m.text"},"ts":1348602437000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: and although I have found some libraries that do the kind of thing you mentioned just now, I have never seen a request for such functionality before","msgtype":"m.text"},"ts":1348602446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how, concretely, is it useful with pushState?","msgtype":"m.text"},"ts":1348602464000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"smaug____: is the range issue that the gEBId soaking up the time?","msgtype":"m.text"},"ts":1348602483000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"(i've used pushState extensively; I give it relative URLs, and it pushes a resolved absolute URL)","msgtype":"m.text"},"ts":1348602487000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not doubting you, just trying to get closer to what you want to do","msgtype":"m.text"},"ts":1348602522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: can you provide me with a URL to such a page?","msgtype":"m.text"},"ts":1348602530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: the range test is actually testing parsing time ( r.createContextualFragment(REPLACEMENT_HTML) ) and inserting something to DOM ( r.insertNode )","msgtype":"m.text"},"ts":1348602536000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"very little about range specific stuff","msgtype":"m.text"},"ts":1348602580000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: http://ashimagroup.net/~sheets/demo/pano/mars/#?az=1.020944687796126&el=-0.11416091059502942 The same app is served for http://ashimagroup.net/~sheets/demo/pano/mars/msl/nav1/ after partial relative resolution to root the common assets to the domain","msgtype":"m.text"},"ts":1348602639000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"can you elaborate on his this works? where do i see the partial resolution?","msgtype":"m.text"},"ts":1348602691000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: btw, on http://url.spec.whatwg.org/ and http://xhr.spec.whatwg.org/ dfn.js does not work","msgtype":"m.text"},"ts":1348602699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: got it. making a ticket.","msgtype":"m.text"},"ts":1348602705000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"annevk: any idea why not?","msgtype":"m.text"},"ts":1348602711000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually on xhr it just complaints about some cookie function","msgtype":"m.text"},"ts":1348602725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but on url it fails","msgtype":"m.text"},"ts":1348602728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably missing some other script it relies on","msgtype":"m.text"},"ts":1348602744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: Add rows to ticket seems to test reflow, so looks like the issue 66","msgtype":"m.text"},"ts":1348602746000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: for url it says \"Uncaught TypeError: Object function Object() { [native code] } has no method 'push' \"","msgtype":"m.text"},"ts":1348602754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: currently it is done at build time","msgtype":"m.text"},"ts":1348602778000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"annevk: no idea","msgtype":"m.text"},"ts":1348602784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, onerror in ios 6 safari finally gives useful info, huzzah","msgtype":"m.text"},"ts":1348602796000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Opera says","msgtype":"m.text"},"ts":1348602800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also usable remote debugging, huzzah^2","msgtype":"m.text"},"ts":1348602802000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Error thrown at line 26, column 10 in <anonymous function>() in http://www.whatwg.org/specs/web-apps/current-work/dfn.js:","msgtype":"m.text"},"ts":1348602803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    dfnMap[s].push(links[k]);","msgtype":"m.text"},"ts":1348602803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: can you elaborate? (this is exactly the kind of thing that is useful here)","msgtype":"m.text"},"ts":1348602804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: oh, AddRows explicitly wants to flush layout. Then it is testing the thing it tries to test :)","msgtype":"m.text"},"ts":1348602819000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: whats your github username","msgtype":"m.text"},"ts":1348602834000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"hmm, I did have one...","msgtype":"m.text"},"ts":1348602860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"can't recall","msgtype":"m.text"},"ts":1348602873000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'll follow robohornet issues","msgtype":"m.text"},"ts":1348602896000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: elaborate on what? The absolute path is unknown in development. The host is unknown at deploy time. The scheme is unknown at run time.","msgtype":"m.text"},"ts":1348602911000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"cabanier: your input on the most recent mail to whatwg would be most helpful (re your blending spec)","msgtype":"m.text"},"ts":1348602932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: i'm trying to understand what happens in the build process.","msgtype":"m.text"},"ts":1348602949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so if I want that fixed I will have to debug?","msgtype":"m.text"},"ts":1348602952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yup :-)","msgtype":"m.text"},"ts":1348602961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug____: https://github.com/robohornet/robohornet/issues/69","msgtype":"m.text"},"ts":1348602970000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"annevk: or send me mail","msgtype":"m.text"},"ts":1348602978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: no eta","msgtype":"m.text"},"ts":1348602981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: e.g. why can't you just use relative URLs? Why do you have something to partially resolve?","msgtype":"m.text"},"ts":1348603005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah okay, I'll look into it some day, might learn a thing or two","msgtype":"m.text"},"ts":1348603007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: how do you do it today?","msgtype":"m.text"},"ts":1348603011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"paul_irish: thanks","msgtype":"m.text"},"ts":1348603038000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: the relative path \"panos/MER.jpg\" is resolved to \"/~sheets/demo/pano/mars/panos/MER.jpg\"","msgtype":"m.text"},"ts":1348603089000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: but why? why not just leave it as panos/MER.jpg ?","msgtype":"m.text"},"ts":1348603110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the same source is served for all subpaths and the display is switched in JS to accomodate pushState","msgtype":"m.text"},"ts":1348603146000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"why are there multiple subpaths","msgtype":"m.text"},"ts":1348603193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry if it sounds like i'm being stupid here but this really feels like trying to get blood from a stone","msgtype":"m.text"},"ts":1348603209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm sorry you are having a hard time understanding. I will try to explain more clearly.","msgtype":"m.text"},"ts":1348603246000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: your question is \"why are there multiple subpaths in your single-page pushState-using web app?\"? Is that accurate? Why not?","msgtype":"m.text"},"ts":1348603335000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: well specifically, why would your one-page app be exposed using multiple URLs when its resources are only exposed at one URL each","msgtype":"m.text"},"ts":1348603422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: what user-problem does this solve?","msgtype":"m.text"},"ts":1348603427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: seems like a much simpler solution would be to just have one URL, and then you wouldn't have to resolve any resource URLs","msgtype":"m.text"},"ts":1348603445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: in terms of spec problems, we don't solve hypotheticals, but we also don't solve unnecessary problems, hence i'm trying to work out why this is a necessary problem rather than just make-work","msgtype":"m.text"},"ts":1348603478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: How do I have one URL for multiple resources? Doesn't pushState allow me to design my URI scheme in a way that keeps distinct resources distinct?","msgtype":"m.text"},"ts":1348603535000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"Hixie: your dismissive attitude is unnecessary.","msgtype":"m.text"},"ts":1348603553000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: ok i'm going for lunch, i'll be back in a few. I recommend writing an e-mail the describes your use case, and why it is important, and sending it to the WHATWG list. I recommend doing so in a manner that actually describes the entirety of the problem and doesn't feel as reluctant to share as this conversation has.","msgtype":"m.text"},"ts":1348603621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab.","msgtype":"m.text"},"ts":1348603627000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: so is your concern that the specification no longer addresses ../foo resolved against /bar/?","msgtype":"m.text"},"ts":1348603737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: or do you want an API that resolves ../foo against /bar/?","msgtype":"m.text"},"ts":1348603749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: there's certainly no such API now, so you must use a workaround of some kind","msgtype":"m.text"},"ts":1348603780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: in any event, concrete examples would go a long way (unfortunately does require some work)","msgtype":"m.text"},"ts":1348603832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want to be able to parse a URI reference in a JSON object, use the browser API to normalize/canonicalize/whatever it, and re-emit a relative URI reference in a JSON object. If parsing entails resolution into an absolute URI, I have to know which bits of the input URI are present, resolve it against a dummy base and then throw away the bits that come from the dummy base.","msgtype":"m.text"},"ts":1348604017000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"yeah, you can hack around it like that","msgtype":"m.text"},"ts":1348604069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, so that's not so cool because now I can't simply use the API, I have to inspect the string itself and bring my own code to understand which components are present.","msgtype":"m.text"},"ts":1348604114000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"but that wouldn't give you things like input: http://example.org/test/bar/ and /test/foo -> \"../foo\"","msgtype":"m.text"},"ts":1348604140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean there's all kinds of stuff you could write, but it's kinda nice to know the use cases","msgtype":"m.text"},"ts":1348604167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which sort of makes the API (which is already doing this internally)  unusable","msgtype":"m.text"},"ts":1348604176000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"annevk: that is not he algorithm I am talking about. relativization is significantly more complicated and I do not expect it in the API.","msgtype":"m.text"},"ts":1348604211000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"okay, so this complaint is about the API, not the way the spec is written?","msgtype":"m.text"},"ts":1348604314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because that wasn't really clear to me","msgtype":"m.text"},"ts":1348604333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want the browser to supply a function that takes \"/%65/\" and outputs \"/e/\" or \"#%65\" and outputs \"#e\", for example","msgtype":"m.text"},"ts":1348604365000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"the browser does no such thing now...","msgtype":"m.text"},"ts":1348604401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but you can use encodeURI and decodeURI for that","msgtype":"m.text"},"ts":1348604415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(it does no such thing if you put those in places that take actual URLs)","msgtype":"m.text"},"ts":1348604439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, I need to get some sleep","msgtype":"m.text"},"ts":1348604460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: doesn't the spec specify the API? If the spec says parsing and relative resolution are always composed and parsing can only occur relative to a base URI, then I can't use its normalization.","msgtype":"m.text"},"ts":1348604511000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"there's no normalization like %65 -> e","msgtype":"m.text"},"ts":1348604562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"%65 stays the same","msgtype":"m.text"},"ts":1348604571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"™ will turn into %E2%84%A2","msgtype":"m.text"},"ts":1348604620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but %E2%84%A2 will never upon parsing turn into ™","msgtype":"m.text"},"ts":1348604630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but using JavaScript's encodeURI and decodeURI you can go both ways","msgtype":"m.text"},"ts":1348604648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you are correct. Take relative path components, then. Or your trademark example… I have the string \"#™\" and want to encode/decode this… the \"#\" is not handled how I would expect by encode/decode.","msgtype":"m.text"},"ts":1348604841000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"a = document.createElement(\"a\"); a.href = \"../foo\"; a.href now stringifies to the absolute URI with relative path components resolved","msgtype":"m.text"},"ts":1348604956000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348605015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can get a.pathname if you just want the path","msgtype":"m.text"},"ts":1348605023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's actually only very little code points affected in the fragment part","msgtype":"m.text"},"ts":1348605067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only some whitespace code points are ignored, that's it","msgtype":"m.text"},"ts":1348605084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want the same components that I passed in, but now normalized.","msgtype":"m.text"},"ts":1348605092000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"annevk: \">\" in fragment? \"]\" in fragment?","msgtype":"m.text"},"ts":1348605143000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: stays the same","msgtype":"m.text"},"ts":1348605155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dsheets: even U+0000 although maybe we should drop that just like U+000A","msgtype":"m.text"},"ts":1348605200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1348605202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why aren't they percent encoded in the normal form? NUL seems dangerous.","msgtype":"m.text"},"ts":1348605228000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"because browsers don't do that","msgtype":"m.text"},"ts":1348605238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it's not really needed anyway, it doesn't go over the wire","msgtype":"m.text"},"ts":1348605256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(even over the wire it's not strictly needed and IE is known for sending raw utf-8 octets in some cases)","msgtype":"m.text"},"ts":1348605286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uhh? how do you mean? are the percent-encoded forms equivalent to the literal forms?","msgtype":"m.text"},"ts":1348605336000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"well they're \"considered\" equivalent but they're not if you do e.g. string comparison","msgtype":"m.text"},"ts":1348605374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as many people do","msgtype":"m.text"},"ts":1348605377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How do I access a comparison function that returns true for \"]\" and \"%5d\"?","msgtype":"m.text"},"ts":1348605499000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"there's no such thing","msgtype":"m.text"},"ts":1348605518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why not? aren't they equivalent in URI space?","msgtype":"m.text"},"ts":1348605562000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"a.href === b.href returns false","msgtype":"m.text"},"ts":1348605586000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"there's no URI in user agents","msgtype":"m.text"},"ts":1348605591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"URLUtils\"","msgtype":"m.text"},"ts":1348605612000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"yeah they'd not be equivalent and you'd get different requests to the server","msgtype":"m.text"},"ts":1348605647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one containing ] and one containing %5d","msgtype":"m.text"},"ts":1348605656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even %5d and %5D result in different requests","msgtype":"m.text"},"ts":1348605666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"STD 66 allows for all that btw","msgtype":"m.text"},"ts":1348605680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they don't really place any requirements","msgtype":"m.text"},"ts":1348605690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is why it's quite useless","msgtype":"m.text"},"ts":1348605695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes… so you will not perform any canonicalization or normalization? just parse+resolve and that's it?","msgtype":"m.text"},"ts":1348605766000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"well there's some","msgtype":"m.text"},"ts":1348605828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see e.g. the bits about percent encoded","msgtype":"m.text"},"ts":1348605843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how \\ turns into / most of the time, etc.","msgtype":"m.text"},"ts":1348605849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how http://example.org: turns into http://example.org/ etc.","msgtype":"m.text"},"ts":1348605863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or http://example.org:80 becomes http://example.org/","msgtype":"m.text"},"ts":1348605875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at some point it will define how http://EXAMPLE/ becomes http://example/ (host names and IP addresses need some more research)","msgtype":"m.text"},"ts":1348605907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schemes are lowercased","msgtype":"m.text"},"ts":1348605912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's a bunch of stuff","msgtype":"m.text"},"ts":1348605915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(when I think about it)","msgtype":"m.text"},"ts":1348605929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, bedtime","msgtype":"m.text"},"ts":1348605932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"compares http://url.spec.whatwg.org/ to the table in http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces and wonders if he will need to add another row.","msgtype":"m.emote"},"ts":1348605965000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"ah damn it, hey tantek!","msgtype":"m.text"},"ts":1348606046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: I saw that table and it's pretty awesome","msgtype":"m.text"},"ts":1348606058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: if you have any particular opinion on terms to use it's much appreciated","msgtype":"m.text"},"ts":1348606084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: I'm pretty flexible on that front","msgtype":"m.text"},"ts":1348606089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1348606102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk nn - I have no / little particular preference on terms - was more just dismayed at how much a supposedly \"simple\" thing was reinvented/renamed. We can discuss when you get back online tomorrow morning.","msgtype":"m.text"},"ts":1348606465000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1348608044000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tantek: man, if that's not a testament to the URL spec being deficient, i dunno what is :-) nice table","msgtype":"m.text"},"ts":1348608110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah, this is what happen when I try to re-use existing work and end up documenting a mess instead :(","msgtype":"m.text"},"ts":1348608153000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Who here knows WebIDL?","msgtype":"m.text"},"ts":1348608173000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"death to \"search\"","msgtype":"m.text"},"ts":1348608180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also, I have maybe 2 more frameworks/standards that use different terms for URL pieces that I have yet to add to the table","msgtype":"m.text"},"ts":1348608191000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rniwa: Several of us, at least kinda?","msgtype":"m.text"},"ts":1348608198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also to \"fragment\" :(","msgtype":"m.text"},"ts":1348608208000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: so... how do I write a callback interface where callbacks are optional?","msgtype":"m.text"},"ts":1348608246000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: for undo manager's DOMTransaction interface, all properties are optional.","msgtype":"m.text"},"ts":1348608258000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: including callback methods","msgtype":"m.text"},"ts":1348608267000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt - which is your preferred set of terms for the pieces of a URL?","msgtype":"m.text"},"ts":1348608275000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"You can make any property optional, including ones that take a callback.","msgtype":"m.text"},"ts":1348608286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what's the syntax for that?","msgtype":"m.text"},"ts":1348608297000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"intuitively, \"query\" and \"hash\" (those are the only really \"contended\" ones)","msgtype":"m.text"},"ts":1348608355000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"btw - when I add the 2 pending splits, that will make 14 different ways people have come up with for expressing the parts of URLs. The URL spec will then be the 15th, thus fulfilling the prophecy foretold in XKCD 927.","msgtype":"m.text"},"ts":1348608356000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so are you a \"scheme\" guy or a \"protocol\" guy?","msgtype":"m.text"},"ts":1348608403000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rniwa: I'm confused - it's the same as any other optional thing.  When you define a callback, it just creates a new type that you can use elsewhere.","msgtype":"m.text"},"ts":1348608406000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: I'm more of a \"boobs\" guy.","msgtype":"m.text"},"ts":1348608414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(\"host\" vs. \"hostname\", \"path\" vs \"pathname\" are trivial differences; i'd have preferred protocol to scheme, but that one's long gone)","msgtype":"m.text"},"ts":1348608425000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: try dieting and exercise","msgtype":"m.text"},"ts":1348608444000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"*crickets*","msgtype":"m.text"},"ts":1348608484000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the \"1996 HTTP RFC\" row makes me :|","msgtype":"m.text"},"ts":1348608554000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1348608589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because it's five rows, heh","msgtype":"m.text"},"ts":1348608603000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jQuery 2011 is 6. ^_^","msgtype":"m.text"},"ts":1348608621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"scheme\" is the http: part of a URL, \"protocol\" is what set of rules the scheme maps to (HTTP)","msgtype":"m.text"},"ts":1348608708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting that (if I'm reading this table correctly) in every case, the \"search\" name includes the ? and the \"query\" name does not","msgtype":"m.text"},"ts":1348608712000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"a pattern I hadn't noticed","msgtype":"m.text"},"ts":1348608719000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sends TabAtkins to the inclusivity dungeon.","msgtype":"m.emote"},"ts":1348608734000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Yeah, I know, bad on me. It was too obvious for me to pass up. :(","msgtype":"m.text"},"ts":1348608762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt - that is correct.","msgtype":"m.text"},"ts":1348608763000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"almost the same pattern for hash/fragment, with a couple misses","msgtype":"m.text"},"ts":1348608812000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I built the table for exactly that reason, to see what patterns (if any) would be revealed.","msgtype":"m.text"},"ts":1348608829000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(wouldn't necessarily say it's a *useful* distinction, but it's an interesting one)","msgtype":"m.text"},"ts":1348608839000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1348608868000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(that is, the pattern--whether you include it or don't include it is certainly important from an API standpoint)","msgtype":"m.text"},"ts":1348608875000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: sure, I just don't think the distinction is necessary in this context (but as far as naming goes this one's been decided--scheme it is!)","msgtype":"m.text"},"ts":1348609020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"othermaciej: yt?","msgtype":"m.text"},"ts":1348609021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: yeah i dunno if the distinction makes sense either.","msgtype":"m.text"},"ts":1348609040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: people often refer to the thing, and the identifier for the thing, by the same name","msgtype":"m.text"},"ts":1348609055000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, but I have weinig here in my office so not totally paying attention to IRC","msgtype":"m.text"},"ts":1348609060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: k, just had a quick q RE: the bugs you want cloned back; do you want them reresolved also? Most of them are things I never actually resolved, just punted for a few months, and was planning on reopening (i'll be doing that in january for the whatwg ones)","msgtype":"m.text"},"ts":1348609103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: my preference would be to leave them with their prior resolution, even if it was LATER or REMIND","msgtype":"m.text"},"ts":1348609135000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: roger","msgtype":"m.text"},"ts":1348609154000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, zewt, re: scheme vs. protocol, the real question is, does \"protocol\" include the trailing \":\" or not? For a good time, see this github thread discussion that very issue in Node.js: https://github.com/joyent/node/pull/1580","msgtype":"m.text"},"ts":1348609362000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"*discussing","msgtype":"m.text"},"ts":1348609372000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i'll let anne worry about that :-)","msgtype":"m.text"},"ts":1348609398000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: zewt gave you your use case for un-resolved refs","msgtype":"m.text"},"ts":1348609943000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"dsheets: anne's the one who needs the use cases","msgtype":"m.text"},"ts":1348609995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm just an interested observer","msgtype":"m.text"},"ts":1348610004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: btw, HFS+ supports directory hardlinks","msgtype":"m.text"},"ts":1348610018000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: weird","msgtype":"m.text"},"ts":1348610029000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Time Machine uses it to good effect","msgtype":"m.text"},"ts":1348610038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway simply discarding hardlink loops seems sane (very rare, and rarer within user data since you need to be root to create them)","msgtype":"m.text"},"ts":1348610053000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can treat each incremental backup as a full backup","msgtype":"m.text"},"ts":1348610054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they just hardlink the common bits","msgtype":"m.text"},"ts":1348610059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i'm assuming hard linked directories work like file hard links, eg. you can detect them by comparing inodes, but I haven't played with it)","msgtype":"m.text"},"ts":1348610086000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah i dunno either","msgtype":"m.text"},"ts":1348610098000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you were interested enough to inquire about use cases previously going so far as to tell me to draft mail","msgtype":"m.text"},"ts":1348610106000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"annevk: zewt gave you your use case for un-resolved refs","msgtype":"m.text"},"ts":1348610125000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"someone also said that OSX somehow prevents hard links from creating loops (no idea if true or how)","msgtype":"m.text"},"ts":1348610128000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i'm pretty sure I didn't, but feel free to be more specific :)","msgtype":"m.text"},"ts":1348610149000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dsheets: well presumably once anne gets to zewt's e-mail, he will make sure it's handled","msgtype":"m.text"},"ts":1348610162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dsheets: i was interested in helping you get your use case explained so that anne could make sure it was handled","msgtype":"m.text"},"ts":1348610184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the case you're probably thinking of is where I want to use the parser for queries for entirely unrelated things--portions of the hash--which isn't what you were talking about)","msgtype":"m.text"},"ts":1348610209000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: it was one of the many things I was talking about","msgtype":"m.text"},"ts":1348610251000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"zewt: using only the query part of the parser without a dummy base requires the ability to parse without resolving","msgtype":"m.text"},"ts":1348610325000,"senderName":"dsheets","senderId":"dsheets@irc"},
{"content":{"body":"anne's asleep now so really if you want to affect the url spec your best bet is e-mail","msgtype":"m.text"},"ts":1348610384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej, with sandboxed local storage area systems in general, is there any way to share resources with multiple origins? maybe with CORS or something? use case is having multiple (say) image editing applications on different domains and wanting to edit the same image offline","msgtype":"m.text"},"ts":1348610527000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: hadn't thought about that as a use case","msgtype":"m.text"},"ts":1348610565000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: if the persistent URL for a file is loadable from any origin, then you could share that way, for reading","msgtype":"m.text"},"ts":1348610585000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: that would require the URL format to have an unguessable unique token for each file","msgtype":"m.text"},"ts":1348610600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: I do not know what would be a reasonable approach to shared write access","msgtype":"m.text"},"ts":1348610629000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: I could imagine creating shareable storage areas (not per-origin) that have an unguessable unique token identifier which can be shared between webapps","msgtype":"m.text"},"ts":1348610653000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: that would be the \"capabilities\" approach to it","msgtype":"m.text"},"ts":1348610661000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"would that require explicit cooperation between the webapps?","msgtype":"m.text"},"ts":1348610667000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"or would a user have some way to say \"give this guy access to that space\" in some fashion? i.e. let gimp.org access my local pictures?","msgtype":"m.text"},"ts":1348610682000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: I could imagine shared storage areas as described having a way to grant access","msgtype":"m.text"},"ts":1348610707000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: I have to go to meetings","msgtype":"m.text"},"ts":1348610712000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jamesr_: happy to follow up on this on public-webapps","msgtype":"m.text"},"ts":1348610719000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Clearly a use-case for Web Intents!","msgtype":"m.text"},"ts":1348610722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. i'm not very caught up on these discussions","msgtype":"m.text"},"ts":1348610726000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":" /kidding","msgtype":"m.text"},"ts":1348610730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I do think the non-shared case can be handled with IndexedDB, from what I can tell currently","msgtype":"m.text"},"ts":1348610744000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"just give IndexedDB a way to vend persistent URLs to a keypath","msgtype":"m.text"},"ts":1348610753000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1348610762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if you want a more filesystem-like API, that can be layered on top","msgtype":"m.text"},"ts":1348610765000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i wonder if i should reorder the sections in the Sections section","msgtype":"m.text"},"ts":1348610772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that <section> comes after <aside>","msgtype":"m.text"},"ts":1348610776000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I say yes, purely because I liked that sentence.","msgtype":"m.text"},"ts":1348610787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or maybe have it body, article, section, nav, aside","msgtype":"m.text"},"ts":1348610787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1348610811000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Your second ordering seems nice.","msgtype":"m.text"},"ts":1348610824000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you should put that in <maincontent>, right?","msgtype":"m.text"},"ts":1348610846000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"that's <body>","msgtype":"m.text"},"ts":1348610864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: k, will do that one","msgtype":"m.text"},"ts":1348610871000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you should put nav ahead of article - it's header-type content","msgtype":"m.text"},"ts":1348610871000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"should have slept in","msgtype":"m.emote"},"ts":1348610891000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"<header> is much later :-)","msgtype":"m.text"},"ts":1348610899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: I think the ordering he suggested was roughly in terms of decreasing inclusiveness.","msgtype":"m.text"},"ts":1348610899000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1348610919000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1348611391000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yo, JN.","msgtype":"m.text"},"ts":1348611558000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dig this new DOM stuff making its way into Chrome.","msgtype":"m.text"},"ts":1348613915000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Is anyone maintaining a repo for the polyfills?","msgtype":"m.text"},"ts":1348613916000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: Dunno!","msgtype":"m.text"},"ts":1348614190000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though a snarky answer would be \"jQuery\".","msgtype":"m.text"},"ts":1348614209000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"email formatting in mail from BRIAN is making my head hurt","msgtype":"m.text"},"ts":1348614214000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"er, BRYAN","msgtype":"m.text"},"ts":1348614219000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(as someone with a more-often-misspelled-than-not name, i guess I should get at least that right)","msgtype":"m.text"},"ts":1348614245000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"and since the Invited Expert route didn't work out\" is a good euphemism for \"because we were asshats\".","msgtype":"m.text"},"ts":1348614525000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hey, where exactly can I learn more about the URL living standard and the use cases being considered?","msgtype":"m.text"},"ts":1348614623000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"From annevk, when he's awake.","msgtype":"m.text"},"ts":1348614636000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or from the standard itself, maybe?  I haven't read it yet.","msgtype":"m.text"},"ts":1348614647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, it seems to be claiming to want to replace RFC 3986 and RFC 3987... and doesn't seem to explain how relative urls work with their base very clearly yet","msgtype":"m.text"},"ts":1348614804000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"yeah, it's a work in progress","msgtype":"m.text"},"ts":1348614816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i expect it will eventually completely define everything those rfcs define","msgtype":"m.text"},"ts":1348614826000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(plus everything they're missing)","msgtype":"m.text"},"ts":1348614832000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... is starting over REALLY necessary?","msgtype":"m.text"},"ts":1348614930000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1348614936000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not even slightly","msgtype":"m.text"},"ts":1348614940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for years we have been asking for the ietf to fix their rfcs","msgtype":"m.text"},"ts":1348614950000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a list of the issues some where?","msgtype":"m.text"},"ts":1348614969000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"the url specs don't define error handling","msgtype":"m.text"},"ts":1348614988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's the big one","msgtype":"m.text"},"ts":1348614992000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and what they do define doesn't match implementations (e.g. implementations handle javascript: URLs differently than http: URLs, but the RFCs don't really define them differently)","msgtype":"m.text"},"ts":1348615020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and working with IETF...?","msgtype":"m.text"},"ts":1348615057000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"'cause uh...","msgtype":"m.text"},"ts":1348615060000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"hahahahahahahahaha","msgtype":"m.text"},"ts":1348615063000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sorry :)","msgtype":"m.text"},"ts":1348615069000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the IETF was, how you say, not receptive","msgtype":"m.text"},"ts":1348615078000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor very responsive","msgtype":"m.text"},"ts":1348615086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"perhaps, but throwing out the whole of both RFCs seems a bit... extreme?","msgtype":"m.text"},"ts":1348615144000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"from the results i've seen so far of anne's work vs. the legacy specs he's replaced, and if he's willing to do the work, i think it's just fine","msgtype":"m.text"},"ts":1348615358000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gavinc: there's not really that much of value in the RFCs when you get right down to it, to be honest","msgtype":"m.text"},"ts":1348615412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavinc: so as zewt says, if anne is willing to do the work...","msgtype":"m.text"},"ts":1348615427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavinc: it's very similar to the new HTML spec vs HTML4","msgtype":"m.text"},"ts":1348615437000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I've found Normalization and Comparison from 3987 rather reasonable","msgtype":"m.text"},"ts":1348615450000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: if there are specific use cases that you want to make sure anne takes into account, i recommend e-mailing him (or the list, or filing a bug)","msgtype":"m.text"},"ts":1348615528000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that section in particular seems to use a lot of words to not say that much :-)","msgtype":"m.text"},"ts":1348615547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sounds like just about every pre-HTML5 spec ever written :)","msgtype":"m.text"},"ts":1348615579000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gavinc: i expect anne's canonicalisation algorithm will actually end up doing a way cleaner job of that section, actually","msgtype":"m.text"},"ts":1348615594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavinc: but we'll see","msgtype":"m.text"},"ts":1348615601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: being less dismissive of other peoples work would go a long way","msgtype":"m.text"},"ts":1348615674000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavin: okay, as a work in progress it's reasonable","msgtype":"m.text"},"ts":1348615689000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"got a bit lost just from total change of language","msgtype":"m.text"},"ts":1348615701000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"i'm dismissive of things that i believe should be dismissed","msgtype":"m.text"},"ts":1348615710000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it seems resolving relative urls, is now hierarchical","msgtype":"m.text"},"ts":1348615729000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"and yes, I do in fact agree that the hierarchical section is a great deal easier to understand then the RFC","msgtype":"m.text"},"ts":1348615744000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"fyi <annevk> maybe I'll rename \"hierarchical\" to \"relative\"","msgtype":"m.text"},"ts":1348615759000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"snorts","msgtype":"m.emote"},"ts":1348615769000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1348615771000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"yeah, that would do it","msgtype":"m.text"},"ts":1348615774000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"it's quite a freenode day","msgtype":"m.text"},"ts":1348615804000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yeah, they're maintaining some of the servers that a lot of us connect through.","msgtype":"m.text"},"ts":1348615937000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"man, coming up with examples is hard","msgtype":"m.text"},"ts":1348616114000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: you following this Location thread on whatwg?","msgtype":"m.text"},"ts":1348616133000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I had not been, I'll take a look","msgtype":"m.text"},"ts":1348616136000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1348616198000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"any opinions on http://www.whatwg.org/specs/web-apps/current-work/#usage-summary-0 ?","msgtype":"m.text"},"ts":1348617509000,"senderName":"Hixie","senderId":"Hixie@irc"}
]