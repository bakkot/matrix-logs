[
{"content":{"body":"WTF https://github.com/Semantic-Org/Semantic-UI/issues/1526","msgtype":"m.text"},"ts":1438129154000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<div class=\"sixteen wide mobile eight wide tablet four wide computer column\">","msgtype":"m.text"},"ts":1438129170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's the new craze MikeSmith.","msgtype":"m.text"},"ts":1438129185000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: they're in for some good times with that stuff","msgtype":"m.text"},"ts":1438129295000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"'word order significant' class names\"","msgtype":"m.text"},"ts":1438129320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"For me the use of significant class order is an ideological stand.\"","msgtype":"m.text"},"ts":1438129336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"「Otherwise as programmers how could we possibly define \"right\"ness, without acknowledging the importance of contextual significance, like \"right aligned\" or \"right floated\".」","msgtype":"m.text"},"ts":1438129465000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"semiotics","msgtype":"m.text"},"ts":1438129473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Cours de linguistique generale","msgtype":"m.text"},"ts":1438129496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/AmpersandJS/amp/issues/52#issuecomment-69646723","msgtype":"m.text"},"ts":1438129715000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"「I think an argument that \"the standard says to do X or Y\" acts as an appeal to authority and not necessarily an argument for validity. Just like an argument over the morality of the death penalty would be stopped short if we just relied on a de jure argument like, \"Well its current (legal/illegal) in my country\". 」","msgtype":"m.text"},"ts":1438129727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: seems like a good candidate to recruit as a spec editor","msgtype":"m.text"},"ts":1438129792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"algum brasilero aqui?","msgtype":"m.text"},"ts":1438140290000,"senderName":"psynone","senderId":"psynone@irc"},
{"content":{"body":"MikeSmith: to be fair, that is kind of the way we talk about REC","msgtype":"m.text"},"ts":1438147496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(maybe I'm stretching it a bit)","msgtype":"m.text"},"ts":1438147514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I get your point though maybe you are stretching it a bit","msgtype":"m.text"},"ts":1438147691000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"personally I like stretching things a bit","msgtype":"m.text"},"ts":1438147704000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or even beating them into the ground","msgtype":"m.text"},"ts":1438147733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sometimes great insights can emerge from it","msgtype":"m.text"},"ts":1438147749000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if not, at least we get the lulz","msgtype":"m.text"},"ts":1438147765000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"At least we're not filling our mornings with ISO discussions like TC39 did apparently","msgtype":"m.text"},"ts":1438148034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well I understand the strategy","msgtype":"m.text"},"ts":1438148067000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in that, the rest of the meeting can't get any worse than that","msgtype":"m.text"},"ts":1438148101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"who's the actual chair of TC39? Does it have a chair?","msgtype":"m.text"},"ts":1438148133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as in, who runs the meeting and cuts people off when needed, etc.","msgtype":"m.text"},"ts":1438148150000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: John Neumann is the official chair","msgtype":"m.text"},"ts":1438148341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: Brendan Eich de facto in my fairly limited experience","msgtype":"m.text"},"ts":1438148358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1438148418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: but each meeting has a bit about Ecma and standards formality that mostly died in the nineties, but not in Ecma/TC39","msgtype":"m.text"},"ts":1438148424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that part seriously sounds like fun","msgtype":"m.text"},"ts":1438148458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we don't have enough of that","msgtype":"m.text"},"ts":1438148466000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"standards meetings should be a bit more like going to Catholic mass","msgtype":"m.text"},"ts":1438148503000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like there's the part in the mass where you have to turn around and shake hands with the people sitting behind you, and say, \"Peace be with you.\" And they say, \"And also with you.\"","msgtype":"m.text"},"ts":1438148554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the singing too","msgtype":"m.text"},"ts":1438148583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"DanC tried to introduce more singing","msgtype":"m.text"},"ts":1438148604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to meetings","msgtype":"m.text"},"ts":1438148615000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and sorta hippie-ish guitar-playing","msgtype":"m.text"},"ts":1438148643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I liked that","msgtype":"m.text"},"ts":1438148648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"igrigorik: https://github.com/whatwg/fetch/issues/93#issuecomment-125770410 is nice, though worker is a ResourceType","msgtype":"m.text"},"ts":1438156778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: and we need to distinguish the types of workers I think","msgtype":"m.text"},"ts":1438156792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: Initiator makes sense to explain \"form\", but I'm not sure we need to to beyond that for now. \"script\" there seems dubious, is invoking new Image(src) script? Invoking <img>.setAttribute()?","msgtype":"m.text"},"ts":1438156846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Pushed code to this issue #60.","msgtype":"m.text"},"ts":1438161250000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://github.com/whatwg/dom/pull/60","msgtype":"m.text"},"ts":1438161253000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: thank you. You already checked for no observable differences, right?","msgtype":"m.text"},"ts":1438162993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: AFAIK there are none but you should check the transient observers step in replace.","msgtype":"m.text"},"ts":1438163125000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: in remove?","msgtype":"m.text"},"ts":1438163227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh yes but I'm commuting. The step about ancestors having subtree observers.","msgtype":"m.text"},"ts":1438163297000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Now the order of operations should be the same when appending or replacing all elements of a node without children.","msgtype":"m.text"},"ts":1438163362000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smaug____: I'm trying to figure out https://github.com/whatwg/dom/issues/34 still","msgtype":"m.text"},"ts":1438165859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: per https://dom.spec.whatwg.org/#concept-node-remove-ext currently we only run that once","msgtype":"m.text"},"ts":1438165913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you go through the tree once, in tree order, and for each operation which might need scripts to run, post a nanotask to call the script?","msgtype":"m.text"},"ts":1438165930000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the change would be to run it for the inclusive descendants of /node/ during step 8","msgtype":"m.text"},"ts":1438165936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, right","msgtype":"m.text"},"ts":1438165955000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: however, what should we call the arguments then?","msgtype":"m.text"},"ts":1438165959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: removedNode, oldAncestor, oldPreviousSibling?","msgtype":"m.text"},"ts":1438165968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I can't find oldPreviousSibling as a thing in Gecko","msgtype":"m.text"},"ts":1438165977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: also, in relation to oldAncestor, oldPreviousSibling is an odd name","msgtype":"m.text"},"ts":1438166010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/dom/base/Element.cpp#1396 is the insertion case, http://mxr.mozilla.org/mozilla-central/source/dom/base/Element.cpp#1663 is the removing case","msgtype":"m.text"},"ts":1438166049000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I think another difference is that in Gecko UnbindFromTree is on the instance, not a standalone callback, but I'm not going to change that for now.)","msgtype":"m.text"},"ts":1438166063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: that's only for elements though, not nodes in general","msgtype":"m.text"},"ts":1438166087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: but yeah, that doesn't seem to keep track of oldPreviousSibling","msgtype":"m.text"},"ts":1438166103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, data nodes have similar bind/unbind","msgtype":"m.text"},"ts":1438166114000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1438166128000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/dom/base/nsINode.cpp#1679","msgtype":"m.text"},"ts":1438166138000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: and it calls it \"oldParent\", while it might not be the oldParent of the instance it was invoked on...","msgtype":"m.text"},"ts":1438166139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so we call ContentRemoved before unbind","msgtype":"m.text"},"ts":1438166159000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"What's the difference?","msgtype":"m.text"},"ts":1438166188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which means one can use nsIMutationObserver if one needs that information","msgtype":"m.text"},"ts":1438166202000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/dom/base/nsIMutationObserver.h#257","msgtype":"m.text"},"ts":1438166210000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Interesting, so we have several internal callbacks","msgtype":"m.text"},"ts":1438166252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, nsIMutationObserver is the callback interface","msgtype":"m.text"},"ts":1438166270000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Bind/Unbind are the actual methods on nodes to do something","msgtype":"m.text"},"ts":1438166291000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wouldn't call them callbacks","msgtype":"m.text"},"ts":1438166296000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(DOM) MutationObserver is implemented internally as an nsIMutationObserver","msgtype":"m.text"},"ts":1438166332000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think ideally specifications only use one of them","msgtype":"m.text"},"ts":1438166446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bind/Unbind set the .parentNode and iterate all the child nodes and so","msgtype":"m.text"},"ts":1438166466000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"And e.g. https://dom.spec.whatwg.org/#nodeiterator needs oldPreviousSibling","msgtype":"m.text"},"ts":1438166506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"NodeIterator in Gecko is also nsIMutationObserver http://mxr.mozilla.org/mozilla-central/source/dom/base/NodeIterator.h?force=1#25","msgtype":"m.text"},"ts":1438166542000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Bind/Unbind implement a part of the node-insert/removal algorithm from the spec, and nsIMutationObserver is then closer to the callbacks we want to add","msgtype":"m.text"},"ts":1438166600000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The problem is that mutation observers in Gecko can be synchronous, and the specification doesn't have such a concept","msgtype":"m.text"},"ts":1438166623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1438166632000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess we could add that concept and some abstract language of using mutation observers here and there...","msgtype":"m.text"},"ts":1438166656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I think that might be more confusing than always using \"insertion steps\" and \"removing steps\" for synchronous operations","msgtype":"m.text"},"ts":1438166701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"spec should talk about something else than \"mutation observer\", to not confuse with MutationObserver","msgtype":"m.text"},"ts":1438166703000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, what you mean?","msgtype":"m.text"},"ts":1438166729000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"If the specification \"removing steps\" did get passed an oldPreviousSibling, is there anything that would be different?","msgtype":"m.text"},"ts":1438166736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with sync ops?","msgtype":"m.text"},"ts":1438166736000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: for everything where specifications want to react synchronously to the insertion or removal of some node","msgtype":"m.text"},"ts":1438166775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: e.g. <iframe> or Fullscreen","msgtype":"m.text"},"ts":1438166789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you mean nano task stuff","msgtype":"m.text"},"ts":1438166798000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not sync","msgtype":"m.text"},"ts":1438166801000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no I don't mean that","msgtype":"m.text"},"ts":1438166805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sync is something which can't run scripts, right?","msgtype":"m.text"},"ts":1438166824000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Are we still on insertion/removing steps?","msgtype":"m.text"},"ts":1438166824000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smaug____: ideally","msgtype":"m.text"},"ts":1438166840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: simple example is NodeIterator","msgtype":"m.text"},"ts":1438166869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, so this is spec level stuff","msgtype":"m.text"},"ts":1438166879000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: if we change \"removing steps\" to be invoked for inclusive descendants, does that a) still work and b) how do we name the arguments sanely","msgtype":"m.text"},"ts":1438166926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yeah","msgtype":"m.text"},"ts":1438166929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm now not sure what we're talking about :) spec level sync stuff, or callbacks to JS","msgtype":"m.text"},"ts":1438166931000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: though I suspect the nanotask stuff to come on top","msgtype":"m.text"},"ts":1438166939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: spec level sync stuff for now","msgtype":"m.text"},"ts":1438166955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: yes","msgtype":"m.text"},"ts":1438166976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so Gecko does http://mxr.mozilla.org/mozilla-central/source/dom/base/nsINode.cpp#1679, so ContentRemoved is called first on the thing removed, and then UnbindFrom tree is called, and it calls itself recursively on child nodes, and for the removed node and each  descendant ParentChainChanged is called separately http://mxr.mozilla.org/mozilla-central/source/dom/base/Element.cpp#1784","msgtype":"m.text"},"ts":1438167229000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so when removing, in the spec, would it make sense to have spec level \"callback\" for node-removed, and then parentChainChanged for each descendants?","msgtype":"m.text"},"ts":1438167301000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Right, I wonder if the simplistic concept the specification has now, combined with it being invoked for descendants, is sufficient even for the cases where Gecko might use a synchronous mutation observer to implement them.","msgtype":"m.text"},"ts":1438167311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Aren't you having the same discussion than yesterday?","msgtype":"m.text"},"ts":1438167326000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: similar, but not the same","msgtype":"m.text"},"ts":1438167378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I'm not sure, would the first be invoked with oldPreviousSibling and the second not? Or some such?","msgtype":"m.text"},"ts":1438167641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the second would just tell that parent chain has changed","msgtype":"m.text"},"ts":1438167763000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"since for descendants siblings are still the same","msgtype":"m.text"},"ts":1438167785000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk, fair :)","msgtype":"m.text"},"ts":1438167796000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"smaug____: I guess that may be sufficient, I'm unfortunately not familiar with all callers :-/","msgtype":"m.text"},"ts":1438167854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, all places that are hooked into this","msgtype":"m.text"},"ts":1438167868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me look at some UnbindFromTree implementations in Gecko. Some elements do override the default one and do something and then call the default one","msgtype":"m.text"},"ts":1438167934000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"effectively to have the parentChainChanged call on them","msgtype":"m.text"},"ts":1438167974000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"without implementing nsIMutationObserver","msgtype":"m.text"},"ts":1438167974000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nsIMutationObserver in Gecko is meant to be used by other elements or nodelists etc. when the change isn't happening on your object","msgtype":"m.text"},"ts":1438168010000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"So you're suggesting node::unbind(oldParent, oldPreviousSibling), node::ancestorUnbind()","msgtype":"m.text"},"ts":1438168013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right, actually defining NodeList, now that would be something...","msgtype":"m.text"},"ts":1438168092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry, network issues. /me kicks the over-the-forest-under-the-lake phone line","msgtype":"m.text"},"ts":1438168213000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: yeah, unbind on the removed element only, and then parentChainChanged for that and for descendants.","msgtype":"m.text"},"ts":1438168299000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or just node::ancestorUnbind() for descendants","msgtype":"m.text"},"ts":1438168312000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but let me looks some Unbind impls","msgtype":"m.text"},"ts":1438168331000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm going to email some Google folks too","msgtype":"m.text"},"ts":1438168351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so UnbindFromTree overrides tend to check whether there is still parent and if not and elements behavior depends on parent, do something. Or, do something because the element isn't in document anymore","msgtype":"m.text"},"ts":1438168448000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so both those could be done based on the parentChainChanged information","msgtype":"m.text"},"ts":1438168469000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438168505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"one thing some code seems to use is that when UnbindFromTree is called on element which ancestor was in document, the element itself has still the flag \"in-document\", and that flag is cleared during UnbindFromTree.","msgtype":"m.text"},"ts":1438168686000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://github.com/emilbjorklund/svg-weirdness","msgtype":"m.text"},"ts":1438168703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: I've been wondering, is it actually \"in-document\" or \"in-window-associated-document\"?","msgtype":"m.text"},"ts":1438168791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so maybe node::ancestorUnbind() should have a param telling whether the ancestor used to be in-document","msgtype":"m.text"},"ts":1438168796000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is in-document in Gecko","msgtype":"m.text"},"ts":1438168823000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you need to know in-window-associated-document, just check if(node.ownerDocument.defaultView)","msgtype":"m.text"},"ts":1438168933000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that's why it might make sense to pass the ancestor","msgtype":"m.text"},"ts":1438169023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can just check it on ancestor","msgtype":"m.text"},"ts":1438169033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why would you do that","msgtype":"m.text"},"ts":1438169168000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you have the information on the node itself","msgtype":"m.text"},"ts":1438169179000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, one thing, Gecko calls Bind/Unbind on shadow elements too","msgtype":"m.text"},"ts":1438169197000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"maybe node::ancestorUnbind() should have a param telling whether the ancestor used to be in-document\"","msgtype":"m.text"},"ts":1438169202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: composed tree or just going into each attached shadow tree?","msgtype":"m.text"},"ts":1438169248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I see a bug there for multiple shadow roots","msgtype":"m.text"},"ts":1438169462000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"anyhow, it accesses shadowroot and Bind/Unbind all the child nodes of shadowroot","msgtype":"m.text"},"ts":1438169514000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is implementation detail that shadowroot doesn't need bind/unbind","msgtype":"m.text"},"ts":1438169527000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Promise.race is similar to Array#every. Is there something like Promise.any similar to Array#some?","msgtype":"m.text"},"ts":1438171871000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Do you mean s/race/all/?","msgtype":"m.text"},"ts":1438171986000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"It seems like .race should be similar to .some and .all similar to .every","msgtype":"m.text"},"ts":1438172412000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless the names are very misleading","msgtype":"m.text"},"ts":1438172422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: fyi: https://github.com/whatwg/fetch/issues/93","msgtype":"m.text"},"ts":1438174685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: okay, so it's just going in without caring about whether the nodes are actually composed or not","msgtype":"m.text"},"ts":1438174757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I guess it goes into shadow trees before first child/next sibling?","msgtype":"m.text"},"ts":1438174814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I can't remember seeing a single compat problem caused by error object's message..","msgtype":"m.text"},"ts":1438175030000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: in Gecko it goes into shadow tree after non-shadow tree children. Not sure which one should come first.","msgtype":"m.text"},"ts":1438176959000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Making up words: inclusive shadow-tree-including-descendants in shadow-post-tree order","msgtype":"m.text"},"ts":1438177097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in Gecko it goes into shadow tree after non-shadow tree children. Not sure which one should come first.","msgtype":"m.text"},"ts":1438177273000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you were online the first time :-)","msgtype":"m.text"},"ts":1438177307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahaa","msgtype":"m.text"},"ts":1438177318000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"switched network","msgtype":"m.emote"},"ts":1438177324000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"reads log","msgtype":"m.emote"},"ts":1438177333000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I didn't say anything intelligent","msgtype":"m.text"},"ts":1438177350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: philipj: for mayCancel, I guess if we disable addEventListener() as well as preventDefault() there might be more of a fighting chance","msgtype":"m.text"},"ts":1438182020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: philipj: though in that case we need to be wary of events dispatching from the same task (or have the optimization take place inbetween or some such, if that even makes sense)","msgtype":"m.text"},"ts":1438182047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"disable addEventListener?","msgtype":"m.text"},"ts":1438182085000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: otherwise a mayCancel listener can add a non-mayCancel listener during dispatch","msgtype":"m.text"},"ts":1438182302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I hope we end up with a better name than mayCancel.)","msgtype":"m.text"},"ts":1438182342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(\"passive\" sounds rather good actually.)","msgtype":"m.text"},"ts":1438182356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would it be horrible to make that throw","msgtype":"m.text"},"ts":1438182361000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"inside mayCancel == false listener you could add only mayCancel == false listeners","msgtype":"m.text"},"ts":1438182393000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1438182401000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't like that","msgtype":"m.emote"},"ts":1438182406000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I would just make addEventListener throw","msgtype":"m.text"},"ts":1438182433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any addEventListener call?","msgtype":"m.text"},"ts":1438182449000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or only for the currently dispatched event type?","msgtype":"m.text"},"ts":1438182461000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or what","msgtype":"m.text"},"ts":1438182463000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Only for the passive callback","msgtype":"m.text"},"ts":1438182480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"don't understand","msgtype":"m.text"},"ts":1438182499000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The UA can then make an optimization if it only sees passive callbacks","msgtype":"m.text"},"ts":1438182502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Without having to worry about passive callbacks adding new listeners that violate the passiveness","msgtype":"m.text"},"ts":1438182523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what would throw and when?","msgtype":"m.text"},"ts":1438182526000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"preventDefault() and addEventListener() would throw during passive listener callbacks","msgtype":"m.text"},"ts":1438182560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, somehow post-callback microtasks should also be guarded, otherwise there's an escape","msgtype":"m.text"},"ts":1438182629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"addEventListener for any event type?","msgtype":"m.text"},"ts":1438182638000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I guess you could scope it","msgtype":"m.text"},"ts":1438182659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: haven't considered the details","msgtype":"m.text"},"ts":1438182681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: might depend a bit on how many events are typically dispatched together from one task, something we haven't specified :-(","msgtype":"m.text"},"ts":1438182728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1438182746000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yay for \"passive\" meanwhile","msgtype":"m.text"},"ts":1438182818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good morning WHATWGians! o/","msgtype":"m.text"},"ts":1438188270000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"morning ccardona-work","msgtype":"m.text"},"ts":1438188477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Good morning *hat tip* 🎩 👽","msgtype":"m.text"},"ts":1438188507000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"Domenic: humor me, the s/deterministic/consistency/  change would be because we could offer deterministic points in time to invoke the callbacks, but they would simply not be great?","msgtype":"m.text"},"ts":1438188555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"johnme: beverloo: I wonder, is actions your just-before-going-home project?","msgtype":"m.text"},"ts":1438188602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, where \"not great\" is more precisely that when using createElement You have no children or attributes, but otherwise you do.","msgtype":"m.text"},"ts":1438188636000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(parsing could be either one; upgrades must have children and attributes)","msgtype":"m.text"},"ts":1438188668000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I should reword that so this remains a useful point of reference, thanks","msgtype":"m.text"},"ts":1438188668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/ thanks","msgtype":"m.text"},"ts":1438188684000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: sorry, just happened to finish addressing the comments now :)","msgtype":"m.text"},"ts":1438189163000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: heh, I don't mind at all when you do it","msgtype":"m.text"},"ts":1438189213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: should be fixed now","msgtype":"m.text"},"ts":1438189222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is the XHR spec you updated for fetch? https://xhr.spec.whatwg.org/","msgtype":"m.text"},"ts":1438190448000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that's the only XHR spec still getting updates to my knowledge","msgtype":"m.text"},"ts":1438190780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(yes)","msgtype":"m.text"},"ts":1438190784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: its the \"still getting updates\" thats hard for me to infer when searching online","msgtype":"m.text"},"ts":1438190800000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"Last Updated 14 July 2015\"","msgtype":"m.text"},"ts":1438190818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yea... but when searching for a spec... I don't know if I just didn't see one with a newer date, etc","msgtype":"m.text"},"ts":1438190840000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"finding \"the right spec\" kind of sucks","msgtype":"m.text"},"ts":1438190847000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"for newbies like me","msgtype":"m.text"},"ts":1438190851000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess the other thing is that if it has spec.whatwg.org in the name, it's the one you want","msgtype":"m.text"},"ts":1438190864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: if it has TR/ in the name, highly unlikely","msgtype":"m.text"},"ts":1438190899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: anything else, proceed with caution","msgtype":"m.text"},"ts":1438190910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll just use http://www.w3schools.com/xml/xml_http.asp","msgtype":"m.text"},"ts":1438190932000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"is linking to w3schools unironically considered trolling?","msgtype":"m.text"},"ts":1438191568000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I'm pretty sure I was trying to troll annevk","msgtype":"m.text"},"ts":1438191749000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"should start a whatwgschools","msgtype":"m.text"},"ts":1438202167000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"whatschools","msgtype":"m.text"},"ts":1438202239000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"make it happen","msgtype":"m.text"},"ts":1438202637000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wanderview: https://github.com/mozilla/servo/wiki/Relevant-spec-links for the right spec is my go-to","msgtype":"m.text"},"ts":1438202983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess XHR isn't there explicitly","msgtype":"m.text"},"ts":1438203005000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks","msgtype":"m.text"},"ts":1438203032000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"also, I would call it w2gschools","msgtype":"m.text"},"ts":1438203106000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"whatschools++","msgtype":"m.text"},"ts":1438203612000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Domenic, you're welcome ;)","msgtype":"m.text"},"ts":1438204183000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1438204207000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wtfschools","msgtype":"m.text"},"ts":1438204973000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]