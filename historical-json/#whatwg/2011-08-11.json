[
{"content":{"body":"Philip`: qq - do you have any canvas 2d tests for globalCompositeOperation=copy and fillText()?","msgtype":"m.text"},"ts":1313021220000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"in the suite?","msgtype":"m.text"},"ts":1313021221000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"we fail on that currently in WebKit","msgtype":"m.text"},"ts":1313021222000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"and implementations might use different logic for their text drawing routines than for other draw calls","msgtype":"m.text"},"ts":1313021280000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"oh hey it turns out anyone can get an account, not just those who have sent feedback","msgtype":"m.text"},"ts":1313021281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonder when i changed that","msgtype":"m.text"},"ts":1313021282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr: I don't think so, though I have a note in my write-only todo list about that","msgtype":"m.text"},"ts":1313021400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok i've updated the status boxes to have an edit link","msgtype":"m.text"},"ts":1313021580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also slightly tweaked them","msgtype":"m.text"},"ts":1313021581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"any transition experts in the house? how do i transition from height:0 to height:auto?","msgtype":"m.text"},"ts":1313021700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lawl","msgtype":"m.text"},"ts":1313021701000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1313021702000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"you don't","msgtype":"m.text"},"ts":1313021703000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1313021704000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"you can measure what height:auto would resolve to and then transition from 0 to that value","msgtype":"m.text"},"ts":1313021705000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie: transitions to or from auto don't work","msgtype":"m.text"},"ts":1313021760000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"ok. that's lame.","msgtype":"m.text"},"ts":1313021761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Transition max-height from 0 to a mild overestimate of the height.","msgtype":"m.text"},"ts":1313021762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"someone fix that.","msgtype":"m.text"},"ts":1313021763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes, it is totally fucking lame.","msgtype":"m.text"},"ts":1313021764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm, good idea.","msgtype":"m.text"},"ts":1313021765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i hid the ID in the status boxes, it now appears on hover","msgtype":"m.text"},"ts":1313021820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Cross-origin XHR is completely disallowed, right?  Even just sending the request, not just receiving the response?","msgtype":"m.text"},"ts":1313024760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: you there?","msgtype":"m.text"},"ts":1313024940000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: yo","msgtype":"m.text"},"ts":1313025000000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: how do you mean?","msgtype":"m.text"},"ts":1313025001000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: you can do cross-origin XHR using CORS","msgtype":"m.text"},"ts":1313025002000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Right, but outside of that it's disallowed.","msgtype":"m.text"},"ts":1313025003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: which means that you can make the request in many cases without the server opting in","msgtype":"m.text"},"ts":1313025004000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: What do you mean?  What I'm asking about is using XHR to send data from client->server only, not caring about the response back.","msgtype":"m.text"},"ts":1313025060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Actually asking about a different API that effectively accomplishes that.)","msgtype":"m.text"},"ts":1313025061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yup, you can basically do that, as long as you use POST with a limited set of Content-Types","msgtype":"m.text"},"ts":1313025120000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Without having to invoke CORS?","msgtype":"m.text"},"ts":1313025121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, it invokes CORS","msgtype":"m.text"},"ts":1313025122000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but CORS doesn't do anything until it start receiving a response","msgtype":"m.text"},"ts":1313025123000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"since CORS is response-header based","msgtype":"m.text"},"ts":1313025180000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"note, that you can only do this if your POST is fairly \"plain\"","msgtype":"m.text"},"ts":1313025181000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"That's what I thought.  So the actual message from client->server gets through regardless.","msgtype":"m.text"},"ts":1313025182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i.e. you can't set any custom headers","msgtype":"m.text"},"ts":1313025183000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: yup","msgtype":"m.text"},"ts":1313025184000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"kk.","msgtype":"m.text"},"ts":1313025185000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: just like with <form>","msgtype":"m.text"},"ts":1313025186000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"All right, cool.","msgtype":"m.text"},"ts":1313025240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Context is someone pinging me about the feasibility of a built-in bugreporting function, that lets you specify a url to post to, some custom data to send, and a list of UA-provided data that you'd like, so the browser can let the user decide what to send and then post for you.)","msgtype":"m.text"},"ts":1313025300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: for XHR 'text' can be considered a parsed format","msgtype":"m.text"},"ts":1313025301000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"sicking: what happens if the text is encoded in utf-8 and only part of the codepoint sequence (or whatever unicode calls it) is in the most recently received packet?","msgtype":"m.text"},"ts":1313025360000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: then you don't return that character until in the next progress notification","msgtype":"m.text"},"ts":1313025361000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but the idea is the browser could ditch most of the response?","msgtype":"m.text"},"ts":1313025362000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: yup","msgtype":"m.text"},"ts":1313025363000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"all but the last few bytes","msgtype":"m.text"},"ts":1313025420000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"would be nice","msgtype":"m.text"},"ts":1313025480000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"TabAtkins: just make sure to not even return a error code indicating if the submission succeeded or not","msgtype":"m.text"},"ts":1313025481000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Ah, good point.","msgtype":"m.text"},"ts":1313025482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what happens if you try to set .responseType after receiving a few progress events? it throws an error?","msgtype":"m.text"},"ts":1313025540000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yes, that's already the case","msgtype":"m.text"},"ts":1313025541000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ooooh http://dev.w3.org/csswg/selectors4/#attribute-case","msgtype":"m.text"},"ts":1313047680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: I don't understand http://html5.org/r/6413","msgtype":"m.text"},"ts":1313048160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the spec already states that maxlength on input@type=number is not valid","msgtype":"m.text"},"ts":1313048161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so validator.nu currently emits an error for it","msgtype":"m.text"},"ts":1313048220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"this change would cause it to emit a warning in addition to an error","msgtype":"m.text"},"ts":1313048221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unless I'm misunderstanding something","msgtype":"m.text"},"ts":1313048280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but http://www.whatwg.org/specs/web-apps/current-work/multipage/number-state.html#number-state lists maxlength under \"The following content attributes must not be specified and do not apply to the element\"","msgtype":"m.text"},"ts":1313048281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary also indicates that maxlength is now allowed on input@type=number","msgtype":"m.text"},"ts":1313048400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if the intent is to actually make it conforming but obsolete, it seems like those parts of the spec should be changed as well","msgtype":"m.text"},"ts":1313048460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \"should not\" means it's allowed if you have a good reason","msgtype":"m.text"},"ts":1313048461000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1313048520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but if so, those two parts of the spec should be changed","msgtype":"m.text"},"ts":1313048521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1313048522000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't see how otherwise we can make any changes to the validation behavior\u001c","msgtype":"m.text"},"ts":1313048523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm post a comment to the bug","msgtype":"m.text"},"ts":1313048580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so if i'm reading the spec right it allows <link rel=\"help shortcut icon\" ...>","msgtype":"m.text"},"ts":1313056320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does that work in ie?","msgtype":"m.text"},"ts":1313056380000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess it does since hsivonen tested it","msgtype":"m.text"},"ts":1313056440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I will check :P","msgtype":"m.text"},"ts":1313056500000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"http://glitchmr.pl/private/favtest.php","msgtype":"m.text"},"ts":1313056620000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"It seems to work under IE9","msgtype":"m.text"},"ts":1313056621000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"It also seems to work under Quirks Mode...","msgtype":"m.text"},"ts":1313056680000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"validator.nu seems to accept such structure and it seems to not cause issues with IE","msgtype":"m.text"},"ts":1313056681000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"But then, semantically it doesn't make sense","msgtype":"m.text"},"ts":1313056800000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"How can be shortcut icon helpful?","msgtype":"m.text"},"ts":1313056801000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1313056980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well it must be helpful for something else you wouldn't include it in the first place","msgtype":"m.text"},"ts":1313057040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You can use <link rel=\"help\" href=\"...\"> for help pages for examples","msgtype":"m.text"},"ts":1313057041000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"example*","msgtype":"m.text"},"ts":1313057100000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"Many browsers show their help on \"About\"->\"Help\" or something like this. Some might have reason to insert help into webpage :P","msgtype":"m.text"},"ts":1313057101000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"But favicon.ico is helpful by itself (in visual browsers), but it's not help page...","msgtype":"m.text"},"ts":1313057160000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"Hixie: can you make the status boxes increase z-index on hover so you can access ones that are overlapped by other status boxes?","msgtype":"m.text"},"ts":1313057580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh hey, I'm below zcorpan in status annotation edits...","msgtype":"m.text"},"ts":1313058360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"goes off to fix that","msgtype":"m.emote"},"ts":1313058361000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"shoots","msgtype":"m.emote"},"ts":1313066580000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1313080500000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Alan Gresley just said my head might be filled with crack. ;_;","msgtype":"m.text"},"ts":1313080860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is this from the \"chocolate teapot orbiting the sun\" school of \"might\"?","msgtype":"m.text"},"ts":1313080920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not sure.  Alan's kinda crazy himself.","msgtype":"m.text"},"ts":1313080980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Sounds like you could make a fortune by selling your head","msgtype":"m.text"},"ts":1313081100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, what probability are we talking about here?  I mean, not to put too fine a point on it, but that would m -- drat, Philip` beat me to it.","msgtype":"m.text"},"ts":1313081160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, what would that be, a few pounds of crack?  What's the street value of that?","msgtype":"m.text"},"ts":1313081161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I somehow doubt it's crack.","msgtype":"m.text"},"ts":1313081220000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I like my head.  If there's crack in there, evidence says that I'm using it to think.","msgtype":"m.text"},"ts":1313081221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah. that's where the old \"get cracking\" saying comes from.","msgtype":"m.text"},"ts":1313081222000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Heads are nice, but money is nice too, so you have to balance both sides of the argument","msgtype":"m.text"},"ts":1313081223000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I mean, half a head would be about as useful, no?","msgtype":"m.text"},"ts":1313081340000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I use more than half of my head.","msgtype":"m.text"},"ts":1313081341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"int a = 5; int *ptr = &a; size_t foo = ptr; <- foo is now the memory address that ptr points to, right?","msgtype":"m.text"},"ts":1313081400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How much of that is just for waste-ink?","msgtype":"m.text"},"ts":1313081401000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders, surely that would warn","msgtype":"m.text"},"ts":1313081402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Ooh, good point.","msgtype":"m.text"},"ts":1313081403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: I think so, though I'm not sure size_t is guaranteed to be pointer-sized","msgtype":"m.text"},"ts":1313081460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"liked that name","msgtype":"m.emote"},"ts":1313081461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"intptr_t is better if you want a pointer-sized int","msgtype":"m.text"},"ts":1313081462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think gsnedders actually wants = *ptr","msgtype":"m.text"},"ts":1313081463000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That would give foo = 5","msgtype":"m.text"},"ts":1313081464000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1313081520000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I knew that! ;)","msgtype":"m.text"},"ts":1313081521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't want foo = 5; I want the address that ptr points to.","msgtype":"m.text"},"ts":1313081522000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"has no idea what gsnedders actually wants","msgtype":"m.emote"},"ts":1313081523000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1313081524000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The memory address of a, effectively.","msgtype":"m.text"},"ts":1313081525000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"doesn't like to think about what gsnedders wants","msgtype":"m.emote"},"ts":1313081526000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ptr is already the memory address","msgtype":"m.text"},"ts":1313081580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Why the hell are you trying to stick that into a size_t?","msgtype":"m.text"},"ts":1313081581000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so if you copy it into another variable then it's still that memory address (modulo 2^something)","msgtype":"m.text"},"ts":1313081582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Okay, that's what I thought.","msgtype":"m.text"},"ts":1313081583000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But you do want intptr_t or uintptr_t","msgtype":"m.text"},"ts":1313081640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Gotta love C and all the million sometime-interchangable, but not safely, types","msgtype":"m.text"},"ts":1313081700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Don't you like C++ more? It has namespaces!","msgtype":"m.text"},"ts":1313081820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If you want to be like the cool kids you could store the pointer in the NaN space of a double","msgtype":"m.text"},"ts":1313081821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, ... do you do that?","msgtype":"m.text"},"ts":1313081822000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not cool enough :-(","msgtype":"m.text"},"ts":1313081823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ms2ger: JS engines do, on 32-bit arches","msgtype":"m.text"},"ts":1313082060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"At least SpiderMonkey on 64-bit too","msgtype":"m.text"},"ts":1313082061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"JS engines are a mess of their own","msgtype":"m.text"},"ts":1313082120000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thinks nanboxing and nunboxing would be interesting new Olympic sports","msgtype":"m.emote"},"ts":1313082121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: How? Assuming no pointer will be over 53-bits?","msgtype":"m.text"},"ts":1313082180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: 47 bits, I think","msgtype":"m.text"},"ts":1313082181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Then what about the other six? Obviously they have to reserve one NaN value as NaN, and it can't be zero (because then it's not NaN but Inf)","msgtype":"m.text"},"ts":1313082240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: (The reason why I was using size_t above was because that's what Cython does… although I know it isn't guaranteed to work…)","msgtype":"m.text"},"ts":1313082300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: amd64 only has 48-bit virtual address space, and I think the 48th bit is magic and is always 0 in interesting OSes","msgtype":"m.text"},"ts":1313082540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Ah.","msgtype":"m.text"},"ts":1313082541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(http://en.wikipedia.org/wiki/X86-64#Canonical_form_addresses etc)","msgtype":"m.text"},"ts":1313082600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: done (the z-index thing)","msgtype":"m.text"},"ts":1313086380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"People might be somewhat interested in http://lists.w3.org/Archives/Member/w3c-ac-members/2011JulSep/0007.html (MO)","msgtype":"m.text"},"ts":1313086680000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: There is no locked-up equivalent to that mailing-list, is there?","msgtype":"m.text"},"ts":1313088780000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Hmm?","msgtype":"m.text"},"ts":1313088840000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"Ms2ger`: We can't access http://lists.w3.org/Archives/Member/w3c-ac-members/2011JulSep/0007.html","msgtype":"m.text"},"ts":1313090340000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1313090341000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"without W3C names","msgtype":"m.text"},"ts":1313090400000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Would've linked to a public copy if there was one","msgtype":"m.text"},"ts":1313090401000,"senderName":"Ms2ger`","senderId":"Ms2ger`@irc"},
{"content":{"body":"too bad there isn't one","msgtype":"m.text"},"ts":1313090460000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"seems to be an error in http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#url-decomposition-idl-attributes regarding the \"port\" attribute","msgtype":"m.text"},"ts":1313090640000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"ooo wait","msgtype":"m.text"},"ts":1313090700000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"nvm","msgtype":"m.text"},"ts":1313090701000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"read a column header wrong","msgtype":"m.text"},"ts":1313090702000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"cancel the alarm!!!","msgtype":"m.text"},"ts":1313090760000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1313090761000,"senderName":"gnarf","senderId":"gnarf@irc"},
{"content":{"body":"discovers another person who spells his name Areyeh -- interesting","msgtype":"m.emote"},"ts":1313098140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"there's now a .ss TLD coming. Who's going to get c.ss ?","msgtype":"m.text"},"ts":1313099160000,"senderName":"KevinMarks","senderId":"KevinMarks@irc"},
{"content":{"body":"http://highscalability.com/blog/2011/8/10/leveldb-fast-and-lightweight-keyvalue-database-from-the-auth.html","msgtype":"m.text"},"ts":1313100660000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Ooh, that sounds fun.","msgtype":"m.text"},"ts":1313100661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wondering if it will show up in Google line of products","msgtype":"m.text"},"ts":1313100720000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"ah it's already","msgtype":"m.text"},"ts":1313100721000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"LevelDB is being used as the back-end for IndexedDB in Chrome. For designing how to map secondary indices into LevelDB key/values, look at how the IndexedDB support within Chrome is implemented.\"","msgtype":"m.text"},"ts":1313100722000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Yeah, sqlite has corruption issues when it runs for a long time (not really its fault - its from occasional misplaced writes in other processes).","msgtype":"m.text"},"ts":1313100840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"misplaced writes\"?","msgtype":"m.text"},"ts":1313100841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You know, writes to a dangling pointer or something.  Otherwise known as \"security vulnerabilities\".","msgtype":"m.text"},"ts":1313100900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how can you cause corruption in another _process_?","msgtype":"m.text"},"ts":1313100901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't modern OSes pretty much make that impossible?","msgtype":"m.text"},"ts":1313100902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dont' ask me.  I'm recalling lunchtime conversation.","msgtype":"m.text"},"ts":1313100903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if the problem is other code in the _same_ process randomly stomping on the space used by the sqlite library, it seems any library would suffer the same problem","msgtype":"m.text"},"ts":1313100960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, maybe when two processes have the same database file open and one writes to it in a way that's not coordinated with the other, so the other winds up reading garbage somehow?","msgtype":"m.text"},"ts":1313100961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that'd be a bug in sqlite's locking","msgtype":"m.text"},"ts":1313101020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thought only one process can open an SQLite database at a time, though.","msgtype":"m.text"},"ts":1313101021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, I dunno.","msgtype":"m.text"},"ts":1313101022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: It wasn't sqlite's problem directly; it was definitely memory corruption coming from elsewhere.","msgtype":"m.text"},"ts":1313101023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so it's very wrong to say \"sqlite has corruption issues\"","msgtype":"m.text"},"ts":1313101080000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah i don't see why sqlite would be any more at risk than leveldb","msgtype":"m.text"},"ts":1313101081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what do i know :-)","msgtype":"m.text"},"ts":1313101140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which I doubt anyone would accept anyway; sqlite should be high on any competent programmer's top-five list of most reliable libraries in the world","msgtype":"m.text"},"ts":1313101141000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the storage library the highest on my list is definitely… my fridge!","msgtype":"m.text"},"ts":1313101200000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"every day, a few times a day.","msgtype":"m.text"},"ts":1313101201000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"zewt: From the conversation I had with a guy working on indexeddb, sqlite made some not-strictly-required architectural decisions that mean that it holds its memory for too long, making it more subject to this kind of corruption.","msgtype":"m.text"},"ts":1313101260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds like a very contrived argument","msgtype":"m.text"},"ts":1313101320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I may be misstating things.","msgtype":"m.text"},"ts":1313101321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: I'm not sure what you're trying to imply.  We used sqlite.  We had regular db corruption.  We traced it to a problem with the design of sqlite.","msgtype":"m.text"},"ts":1313101322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems to me that \"it's not designed to be a k-v store\" might be a god enough reason on its own to think about other solutions for indexeddb","msgtype":"m.text"},"ts":1313101380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*good","msgtype":"m.text"},"ts":1313101381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not saying sqlite is horrible.  I'm saying it didn't suit our needs, so we designed a new one.","msgtype":"m.text"},"ts":1313101382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't think the primary motivation for leveldb was sqlite db corruption bugs","msgtype":"m.text"},"ts":1313101383000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"although it may have been one","msgtype":"m.text"},"ts":1313101384000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jgraham: Indeed, that too.","msgtype":"m.text"},"ts":1313101385000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: exactly","msgtype":"m.text"},"ts":1313101386000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"... if library X writes to random memory locations and corrupts memory owned by library Y, it is not in any conceivable sense library Y's fault for \"holding that memory for too long\"","msgtype":"m.text"},"ts":1313101387000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jamesr: It was the reason that FileSystem is switching from sqlite to leveldb, at least.","msgtype":"m.text"},"ts":1313101388000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"i shot some bullets down the street and someone got hit, it's hit fault for standing there for so long\"","msgtype":"m.text"},"ts":1313101389000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Most databases have a separate server process, so only bugs in that process could scribble over the database, whereas SQLite runs in the address space of the host application so it's vulnerable to bugs in any applications that touch the database","msgtype":"m.text"},"ts":1313101390000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zewt: Robustness.  If Y can avoid a lot of those problems, but it doesn't, then that's a problem.","msgtype":"m.text"},"ts":1313101440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though LevelDB seems to be embedded in applications too so it'd be just as vulnerable","msgtype":"m.text"},"ts":1313101441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"avoid problems caused by unrelated code smashing memory? sorry, that's utter nonsense","msgtype":"m.text"},"ts":1313101442000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Why have there not been issues with corruptions with the insane number of other people using SqLite3?","msgtype":"m.text"},"ts":1313101443000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt: I'm not blaming anybody, so don't treat it as a personal attack.  I'm saying that we needed something that didn't stand in the street quite so long.","msgtype":"m.text"},"ts":1313101444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"problems caused by code smashing random memory (or whatever) is the fault of that code and that code alone","msgtype":"m.text"},"ts":1313101445000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://google-opensource.blogspot.com/2011/07/leveldb-fast-persistent-key-value-store.html","msgtype":"m.text"},"ts":1313101446000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"gsnedders: No clue.  Again, I'm relaying lunchtime conversation.","msgtype":"m.text"},"ts":1313101500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not treating anything as a personal attack; i have nothing to do with sqlite development","msgtype":"m.text"},"ts":1313101501000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://leveldb.googlecode.com/svn/trunk/doc/benchmark.html","msgtype":"m.text"},"ts":1313101502000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"i'm saying it's a ridiculous, nonsensical reason to change libraries.","msgtype":"m.text"},"ts":1313101503000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"either it's a bug in sqlite that should be fixed, or it's a bug in the surrounding code and leveldb would be equally vulnerable, as far as i can tell","msgtype":"m.text"},"ts":1313101504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, there were others","msgtype":"m.text"},"ts":1313101505000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"zewt: If you're shooting bullets into the street, it's your fault when you hit somebody.  But if you're relying on something that needs to cross the street, it's better to rely on one that won't spend as long in the crossfire.","msgtype":"m.text"},"ts":1313101506000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Quick to the car metaphors!","msgtype":"m.text"},"ts":1313101560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Car metaphors explains EVERYTHING.","msgtype":"m.text"},"ts":1313101561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"+,","msgtype":"m.text"},"ts":1313101562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"changing libraries means whoever's firing the bullets is going to be hitting other things, and it'll be some other random piece of code being broken","msgtype":"m.text"},"ts":1313101563000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: ...yes?  And with luck, it'll be something that doesn't lose long-term data when it errors out.","msgtype":"m.text"},"ts":1313101620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"luck seems like a rather crappy design philosophy :-)","msgtype":"m.text"},"ts":1313101621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just nonsense FUD that'll lead less experienced developers to believe that \"leveldb\" (whatever that is) is more reliable than sqlite, which is bogus","msgtype":"m.text"},"ts":1313101622000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm pretty sure that leveldb is no safer to memory corruption in your process than anything else","msgtype":"m.text"},"ts":1313101623000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yeah i don't see how it could be","msgtype":"m.text"},"ts":1313101680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: Argh, I'm saying, very specifically, that one of *our* teams is running into this problem with sqlite, and is switching to leveldb because it fixes the architectural issue.","msgtype":"m.text"},"ts":1313101681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you really want to protect from corruption, move your sqlite access into a helper process and proxy SQL commands to it","msgtype":"m.text"},"ts":1313101682000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"thinks that having arguments based on half-remembered lunch conversations using metaphors involving violent death is probably not the road to enlightenment","msgtype":"m.emote"},"ts":1313101683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"which seems like a much simpler engineering task than changing backends","msgtype":"m.text"},"ts":1313101684000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and much more effective","msgtype":"m.text"},"ts":1313101740000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I'm not talking about general engineering advice to the world at large.","msgtype":"m.text"},"ts":1313101741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The road to enlightenment is strewn with randomly-shot bullets that luckily missed all the databases","msgtype":"m.text"},"ts":1313101742000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"How true.","msgtype":"m.text"},"ts":1313101800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"since it's a piece of software","msgtype":"m.text"},"ts":1313101801000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"agrees with jgraham and goes back to work","msgtype":"m.emote"},"ts":1313101802000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Ah, well in that case I will know to take that one rather than the one paved with good intentions","msgtype":"m.text"},"ts":1313101803000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://html5.org/r/6419 ++","msgtype":"m.text"},"ts":1313104320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Way too many people get that wrong.","msgtype":"m.text"},"ts":1313104321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"srsly","msgtype":"m.text"},"ts":1313104322000,"senderName":"Hixie","senderId":"Hixie@irc"}
]