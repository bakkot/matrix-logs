[
{"content":{"body":"in JavaScript, given a Content-Type header, is there some convenient way I’m not aware of for getting just the charset from that?","msgtype":"m.text"},"ts":1508550568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean other than doing it manually through string manipulation","msgtype":"m.text"},"ts":1508550601000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: no, but I want to add an API for that; not gonna help you now, except that in the issue there are some libraries linked","msgtype":"m.text"},"ts":1508561397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k","msgtype":"m.text"},"ts":1508563040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"context was about using TextDecoder with the fetch API btw","msgtype":"m.text"},"ts":1508563139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice too see that’s in all current engines except Edge","msgtype":"m.text"},"ts":1508563160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I guess Edge is working on it","msgtype":"m.text"},"ts":1508563171000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: see issue against mimesniff with API in the title","msgtype":"m.text"},"ts":1508566507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah nice thanks","msgtype":"m.text"},"ts":1508567465000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: When I construct a new request object with an invalid `mode`, we default to `cors`. However when I use an invalid `referrerPolicy`, a TypeError is thrown. They are both enums, yet when they don't match a valid value, one throws the other doesn't. Is this because of `fallbackMode` in the constructor?","msgtype":"m.text"},"ts":1508571282000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: an invalid mode would throw too","msgtype":"m.text"},"ts":1508572916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: e.g., \"whatever\" would throw","msgtype":"m.text"},"ts":1508572927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hello, is there any tutorials on creating a custom html5lib Filter? I need one that prevents <script> tags from running, with the exception of a certain MathJax script.","msgtype":"m.text"},"ts":1508591352000,"senderName":"fxhp","senderId":"fxhp@irc"},
{"content":{"body":"I know I can \"bust\" script tags by changing < to the hexcode","msgtype":"m.text"},"ts":1508591396000,"senderName":"fxhp","senderId":"fxhp@irc"},
{"content":{"body":"annevk: Hm I could be missing something but I cannot get it to throw in chrome `x = new Request(\"https://domfarolino.com\", {mode: \"whatever\"})`","msgtype":"m.text"},"ts":1508593536000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"But it does throw in FF","msgtype":"m.text"},"ts":1508593548000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I guess that's a bug","msgtype":"m.text"},"ts":1508593551000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah, file and add a test if there is none?","msgtype":"m.text"},"ts":1508595819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Filed. Will look for tests","msgtype":"m.text"},"ts":1508596878000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino++","msgtype":"m.text"},"ts":1508597281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should this be its own file w/ -historical suffix?","msgtype":"m.text"},"ts":1508600366000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"or maybe not historical hmm","msgtype":"m.text"},"ts":1508600522000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah, it's not historical, it's just testing mode","msgtype":"m.text"},"ts":1508608096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: http://web-platform.test:8000/fetch/api/basic/ is probably the place","msgtype":"m.text"},"ts":1508608120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seeing all the JavaScript module arguments on Twitter it is somewhat strange that we went from \"1JS\" to two different parse entry points that effectively require an out-of-band identifier.","msgtype":"m.text"},"ts":1508608418000,"senderName":"annevk","senderId":"annevk@irc"}
]