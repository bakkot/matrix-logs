[
{"content":{"body":"Any way I’m able to read the November 2014 TC39 meeting notes?","msgtype":"m.text"},"ts":1416874329000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: When they come out (they're posted on github)","msgtype":"m.text"},"ts":1416874500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"alex sexton takes them, I believe","msgtype":"m.text"},"ts":1416874512000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I’ll ask him about it. Just saw Array|String#contains was renamed #includes https://github.com/tc39/Array.prototype.includes","msgtype":"m.text"},"ts":1416874559000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"rwaldron is the note-taker actually","msgtype":"m.text"},"ts":1416876916000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"For a list of ES6 changes at the last meeting follow Allen: https://twitter.com/awbjs","msgtype":"m.text"},"ts":1416876940000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal they will be published tomorrow","msgtype":"m.text"},"ts":1416880638000,"senderName":"rwaldron","senderId":"rwaldron@irc"},
{"content":{"body":"rwaldron: swell, i wil file an issue with our polyfill repo at that time, and on any other repos who got in early","msgtype":"m.text"},"ts":1416887102000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"i was reading the es6 spec, and found out that how a y module is resolved in \"import x from 'y';\" is actually implementation defined. I wonder if a spec exists to define such resolution?","msgtype":"m.text"},"ts":1416902469000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"jorendorff, ^","msgtype":"m.text"},"ts":1416903002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"are there specs using \"serializer\" in idl?","msgtype":"m.text"},"ts":1416907303000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: web performance maybe?","msgtype":"m.text"},"ts":1416907671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, that's toJSON, right? Webperf should have used it, but I don't know if they ever bothered","msgtype":"m.text"},"ts":1416907715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hgl: there's https://github.com/whatwg/loader","msgtype":"m.text"},"ts":1416907728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ms2ger: i can't find \"serializer\" in any of these http://www.w3.org/wiki/Web_Performance/Publications","msgtype":"m.text"},"ts":1416907868000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, thanks. reading it right now.","msgtype":"m.text"},"ts":1416907912000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"zcorpan: http://w3c.github.io/navigation-error-logging/#sec-navigationerrorentry needs it","msgtype":"m.text"},"ts":1416907934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: search for JSON in that document","msgtype":"m.text"},"ts":1416907954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh they standardized on \"ssl\"? ugh","msgtype":"m.text"},"ts":1416907983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does an [ArrayClass] interface need a serializer?","msgtype":"m.text"},"ts":1416908772000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, zcorpan, I wrote \"SVN mirror only; no pull requests\" on the assumption that pull requests would not be welcome. Feel free to change that.","msgtype":"m.text"},"ts":1416908803000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"just make sure to never accidentally merge a pull request, it'd require manual intervention to get the mirroring working again","msgtype":"m.text"},"ts":1416908857000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=27378#c9b-sides","msgtype":"m.text"},"ts":1416909073000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1416909081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=27378#c9","msgtype":"m.text"},"ts":1416909089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the \"effective script origin\" document.domain thing","msgtype":"m.text"},"ts":1416909130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"We really don't have any tests for this?","msgtype":"m.text"},"ts":1416909163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we don't need tests, the web has shown that it is interoperable","msgtype":"m.text"},"ts":1416909282000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith, you're surprised?","msgtype":"m.text"},"ts":1416909353000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1416909405000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm reading more of that comment thread now","msgtype":"m.text"},"ts":1416909440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"depressing","msgtype":"m.text"},"ts":1416909448000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: [ArrayClass] is ideally removed","msgtype":"m.text"},"ts":1416910567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes but that doesn't help me :-)","msgtype":"m.text"},"ts":1416910607000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: you can change that!","msgtype":"m.text"},"ts":1416910607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: an interface with [ArrayClass] could also have a serializer, it doesn't need one though","msgtype":"m.text"},"ts":1416910635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: You are forgetting the first law of testsuite dynamics. \"A useful testsuite for feature X will not exist unless a browser vendor has attempted an implementation of that feature from the spec\"","msgtype":"m.text"},"ts":1416910760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3315","msgtype":"m.text"},"ts":1416910780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Note that it's only one direction of implication :)","msgtype":"m.text"},"ts":1416910789000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"maybe webidl could serialize [ArrayClass] as arrays by default?","msgtype":"m.text"},"ts":1416910820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: getClientRects() should really use iterable<>","msgtype":"m.text"},"ts":1416910857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is that compatible?","msgtype":"m.text"},"ts":1416910881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: the plan is to try that for NodeList too","msgtype":"m.text"},"ts":1416910909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: hopefully","msgtype":"m.text"},"ts":1416910917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1416910921000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(The second law is \"When a browser vendor has implemented a feature the chance of a useful testsuite for that feature decreases with the number of preexisting behaviours of that feature\", and the third law is \"the more useful a testsuite is, the more likely it is to be stuck in a review queue\")","msgtype":"m.text"},"ts":1416910951000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if that works out i guess we can kill [ArrayClass] ?","msgtype":"m.text"},"ts":1416910954000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i don't see item() in iterable<>","msgtype":"m.text"},"ts":1416911107000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you'll still need to define the class","msgtype":"m.text"},"ts":1416911125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it just gives you Symbol.iterator and some extras","msgtype":"m.text"},"ts":1416911142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1416911144000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: so it's not a replacement for [ArrayClass] then","msgtype":"m.text"},"ts":1416911678000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: euhm, [ArrayClass] doesn't define item() for you either","msgtype":"m.text"},"ts":1416911702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i know","msgtype":"m.text"},"ts":1416911728000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=27427","msgtype":"m.text"},"ts":1416911962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"has anyone reviewed web animations spec?","msgtype":"m.text"},"ts":1416917036000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"there is AnimationTimeline  is bound to a document, AnimationPlayers are created using a ctor, and AnimationTimeline refers to AnimationPlayer instances... how is this all supposed to work in case of window.open() or document.open() (which break window<->document 1-1)","msgtype":"m.text"},"ts":1416917174000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: you might know","msgtype":"m.text"},"ts":1416917189000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, timeline is passed as a param..","msgtype":"m.text"},"ts":1416917522000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nm then","msgtype":"m.text"},"ts":1416917524000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hi. is the generic behavior of the \"download\" attribute of <a> defined somewhere? it looks to be a boolean attribute that is also a value attribute","msgtype":"m.text"},"ts":1416919481000,"senderName":"WesleyCrushed_","senderId":"WesleyCrushed_@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/semantics.html#the-a-element","msgtype":"m.text"},"ts":1416919593000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"The download attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource. The attribute may have a value; the value, if any, specifies the default file name that the author recommends for use in labeling the resource in a local file system.","msgtype":"m.text"},"ts":1416919601000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so say i'm using xhtml5. how do i write it without specifying a filename? it looks that writing download=\"download\" would make me download a file named \"download\"","msgtype":"m.text"},"ts":1416919690000,"senderName":"WesleyCrushed_","senderId":"WesleyCrushed_@irc"},
{"content":{"body":"maybe download=\"\" ?","msgtype":"m.text"},"ts":1416919701000,"senderName":"WesleyCrushed_","senderId":"WesleyCrushed_@irc"},
{"content":{"body":"I would definitely try that","msgtype":"m.text"},"ts":1416919892000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"download=\"\" is correct","msgtype":"m.text"},"ts":1416919962000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"See the section on boolean attributes","msgtype":"m.text"},"ts":1416919969000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: I'm running the discourse update now, I reckon we can switch it to the beta channel too to get weekly upgrade","msgtype":"m.text"},"ts":1416921684000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"*upgrades","msgtype":"m.text"},"ts":1416921688000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Domenic: also, since you're admin and all you should probably send me your public key so I can allow you to break the server too :)","msgtype":"m.text"},"ts":1416921724000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: download isn't defined as a boolean attribute, right?","msgtype":"m.text"},"ts":1416925292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, I think that section is the only one that explains that `foo` and `foo=''` are equivalent","msgtype":"m.text"},"ts":1416925326000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: it takes a file name","msgtype":"m.text"},"ts":1416925331000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(Except the parser, obviously)","msgtype":"m.text"},"ts":1416925336000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: yeah but in the case where no value for it is specified, it behaves like a boolean","msgtype":"m.text"},"ts":1416925408000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ah, sorry, hadn't looked far enough upscroll","msgtype":"m.text"},"ts":1416925474000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I think it behaves as a boolean is misleading","msgtype":"m.text"},"ts":1416925623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It just has special meaning for an empty string value","msgtype":"m.text"},"ts":1416925650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A boolean attribute can have its own attribute name as value, as in disabled=DISablED","msgtype":"m.text"},"ts":1416925695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, true, it's not a matter of \"behave as a boolean\"","msgtype":"m.text"},"ts":1416925783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"E.g. if you want to specify a title with empty string you can do <var title>; doesn't make it a boolean attribute","msgtype":"m.text"},"ts":1416925859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well that's not a great comparison, because title on var has no effect on UA behavior while the download attribute does, but I see your point","msgtype":"m.text"},"ts":1416926590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: <p title=test>test <var title=>test</var> test","msgtype":"m.text"},"ts":1416926817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: though that's not really cross-browser...","msgtype":"m.text"},"ts":1416926851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1416927059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Where is the most up2date version of DOM standard? http://w3c.github.io/dom/ ?","msgtype":"m.text"},"ts":1416927860000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"or https://dom.spec.whatwg.org/ ?","msgtype":"m.text"},"ts":1416927873000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/","msgtype":"m.text"},"ts":1416927896000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I got somewhat confused, why 2 places?","msgtype":"m.text"},"ts":1416927908000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"the documents are quite different.","msgtype":"m.text"},"ts":1416927916000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"Politics","msgtype":"m.text"},"ts":1416927932000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't want to talk about it","msgtype":"m.text"},"ts":1416927943000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sorry didn't want to hurt anyone's feelings.","msgtype":"m.text"},"ts":1416927957000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"Oh, it not you that hurt them :)","msgtype":"m.text"},"ts":1416927971000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"iliakan: there's a bit of a thing going on with W3C copying WHATWG documents","msgtype":"m.text"},"ts":1416928134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iliakan: TL;DR is that if there's WHATWG document, it's more up to date","msgtype":"m.text"},"ts":1416928152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there any place to read about it? maybe a thread in a mailing list?","msgtype":"m.text"},"ts":1416928183000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"just to get a glipse of knowing what's going on","msgtype":"m.text"},"ts":1416928208000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"if you want to read thousands of emails, there's plenty :)","msgtype":"m.text"},"ts":1416928226000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"iliakan: you probably don't want to read those threads :)","msgtype":"m.text"},"ts":1416928228000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"eh, I teach people JS/DOM stuff and I want to tell them","msgtype":"m.text"},"ts":1416928257000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"There's nothing really canonical on this","msgtype":"m.text"},"ts":1416928276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-archive/ has some http://lists.w3.org/Archives/Public/public-w3process/ has some too","msgtype":"m.text"},"ts":1416928293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"comes up on http://lists.w3.org/Archives/Public/public-webapps/ now and then","msgtype":"m.text"},"ts":1416928330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" iliakan: my summary is here: http://lists.w3.org/Archives/Public/www-archive/2014Nov/0039.html","msgtype":"m.text"},"ts":1416928366000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"my summary is specific to URL, but some of the points apply elsewhere","msgtype":"m.text"},"ts":1416928387000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"also relevant: http://lists.w3.org/Archives/Public/public-w3process/2014Nov/0169.html","msgtype":"m.text"},"ts":1416928415000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"okay thanks, at least I'll have something to respond on their \"why look here not there?\" question","msgtype":"m.text"},"ts":1416928489000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: https://github.com/servo/servo/wiki/Relevant-spec-links is pretty canonical I guess, though no \"why\"","msgtype":"m.text"},"ts":1416928582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iliakan: if you're teaching people about where to look for information, arguably you don't want to tell them to be reading the specs directly but instead just using MDN, which is generally kept pretty well up to date and presents the information in much more web-developer-friendly way","msgtype":"m.text"},"ts":1416928588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: consider Element.prototype.remove() as an example","msgtype":"m.text"},"ts":1416928618000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"the method is convenient and is easily polifilled","msgtype":"m.text"},"ts":1416928632000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"if it's going to be used in all browsers (be part of the standard) I should recommend to use it","msgtype":"m.text"},"ts":1416928659000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"and no it's not on MDN","msgtype":"m.text"},"ts":1416928665000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"what is that?","msgtype":"m.text"},"ts":1416928733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, where did it come from?","msgtype":"m.text"},"ts":1416928760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#dom-childnode-remove","msgtype":"m.text"},"ts":1416928763000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1416928778000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If it is not on MDN, it probably isn't widely implemented yet; and possibly may change before the browser coalesce around an agreement.","msgtype":"m.text"},"ts":1416928838000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"it's in Firefox and Chrome","msgtype":"m.text"},"ts":1416928878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(at least)","msgtype":"m.text"},"ts":1416928888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: do we even have test for that?","msgtype":"m.text"},"ts":1416928899000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Dunno","msgtype":"m.text"},"ts":1416928967000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's a bug that remove() isn't in MDN","msgtype":"m.text"},"ts":1416928983000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it shoudl be","msgtype":"m.text"},"ts":1416928984000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and yes there's a test for it, it even passes!","msgtype":"m.text"},"ts":1416928994000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I probably even reviewed it!","msgtype":"m.text"},"ts":1416929015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1416929015000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ChildNode-remove.js","msgtype":"m.text"},"ts":1416929017000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah I see it now","msgtype":"m.text"},"ts":1416929022000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"now my faith in MDN is shaken","msgtype":"m.text"},"ts":1416929091000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":O!","msgtype":"m.text"},"ts":1416929106000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Does MDN take bug reports?","msgtype":"m.text"},"ts":1416929125000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I think you just go ahead and edit the wiki :)","msgtype":"m.text"},"ts":1416929144000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ah, so it is a case of community developed documentation sometimes lags implementations.","msgtype":"m.text"},"ts":1416929203000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"MikeSmith: don't let it shake your faith, even when wrong it is *still* better than going to anyone's specs, so your advice to iliakan was good","msgtype":"m.text"},"ts":1416929205000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"rubys: sometimes, but usually, as MikeSmith says, it's really good","msgtype":"m.text"},"ts":1416929217000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"nods","msgtype":"m.emote"},"ts":1416929242000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Usually bugs against Firefox get tagged \"dev-doc-needed\" to ensure MDN is updated","msgtype":"m.text"},"ts":1416929250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps that's still pending or someone forgot to tag the bug","msgtype":"m.text"},"ts":1416929261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: so, MDN does take bug reports (https://bugzilla.mozilla.org/enter_bug.cgi?format=guided#h=dupes|Developer%20Documentation|) but the preferred option is to edit","msgtype":"m.text"},"ts":1416929279000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"iliakan: to get back to your original question, remove() isn't in the W3C-publishe DOM spec version? (given the above about it being in Firefox and Chrome I'd be really surprised if it weren'T)","msgtype":"m.text"},"ts":1416929377000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's there, under ChildNode interface as I see, but replace is not","msgtype":"m.text"},"ts":1416929445000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"MikeSmith: remove() is in, but (s)he was referring to the fact that the github version is woefully out of date","msgtype":"m.text"},"ts":1416929446000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1416929457000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"iliakan: replace() is not because it's not implemented (or wasn't back then)","msgtype":"m.text"},"ts":1416929462000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah, but it's going to be?","msgtype":"m.text"},"ts":1416929477000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"I haven't heard objections yet","msgtype":"m.text"},"ts":1416929497000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"iliakan: fwiw I guess one of the best things you could teach people is to tell them about #whatwg and suggest they come here to ask questions when they have them","msgtype":"m.text"},"ts":1416929497000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the github version was supposed to be quite simply destroyed with the next udpate to the TR version, but that didn't happen","msgtype":"m.text"},"ts":1416929502000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Try if Gecko takes a patch :)","msgtype":"m.text"},"ts":1416929506000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or write tests for it","msgtype":"m.text"},"ts":1416929511000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: let them learn something from the docs first :) and come here educated enough :)","msgtype":"m.text"},"ts":1416929522000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"darobin, ha. haha. hahaha.","msgtype":"m.text"},"ts":1416929523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"iliakan: fair enough","msgtype":"m.text"},"ts":1416929534000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually, remove() is in MDN... https://bugzilla.mozilla.org/enter_bug.cgi?format=guided#h=dupes|Developer%20Documentation|","msgtype":"m.text"},"ts":1416929554000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"umm sorry indeed so, I just didn't find it fast","msgtype":"m.text"},"ts":1416929593000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"guess they may have problems w/ it too","msgtype":"m.text"},"ts":1416929606000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: I find your lack of faith in MDN... disturbing","msgtype":"m.text"},"ts":1416929610000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"sorry, that was the wrong link","msgtype":"m.text"},"ts":1416929623000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Web/API/ChildNode.remove","msgtype":"m.text"},"ts":1416929625000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: please consider that to be a lack of faith in my/their finding skills","msgtype":"m.text"},"ts":1416929642000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"when I know there's a single \"most recent\" document, it's the 1st place to go for modern stuff","msgtype":"m.text"},"ts":1416929658000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: no worries, but in general if it's for teaching MDN is better because it tells you about stuff that actually works","msgtype":"m.text"},"ts":1416929680000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"whereas pretty much all specs are fiction","msgtype":"m.text"},"ts":1416929687000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"to a point","msgtype":"m.text"},"ts":1416929690000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"\"pretty much\"?","msgtype":"m.text"},"ts":1416929696000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I added that because I'm sure someone can find an old spec that is actually implemented :)","msgtype":"m.text"},"ts":1416929886000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"iliakan: https://github.com/servo/servo/wiki/Relevant-spec-links is a good resource for spec links","msgtype":"m.text"},"ts":1416929896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I personally am not a fan of MDN these days because I am used to reading specs and also MDN is often way outdated or inaccurate.","msgtype":"m.text"},"ts":1416929917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Woo, Servo :)","msgtype":"m.text"},"ts":1416929941000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: thanks, and tend to agree about MDN. There should be only 1 source of truth.","msgtype":"m.text"},"ts":1416929942000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"e.g. what is this stuff https://developer.mozilla.org/en-US/docs/Web/API/Window.frames \"DOM Level 0. Not part of any standard.\"","msgtype":"m.text"},"ts":1416929944000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's right there in html","msgtype":"m.text"},"ts":1416929960000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And we have always been at war wit Eurasia","msgtype":"m.text"},"ts":1416929971000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: who cares about that? it tells you how it works which is what's needed","msgtype":"m.text"},"ts":1416930018000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: it means you might end up getting into bullshit arguments when using it","msgtype":"m.text"},"ts":1416930057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: it's not terribly accurate about that either","msgtype":"m.text"},"ts":1416930101000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and also that, people telling me window.frames is nonstandard and i shouldn't be using it","msgtype":"m.text"},"ts":1416930117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bullshit arguments?","msgtype":"m.text"},"ts":1416930118000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Domenic: beats working from specs most of the time","msgtype":"m.text"},"ts":1416930125000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'm sad for myself that I didn't even know there was a remove() for me to use. I've always just used removeChild and complained about how stupidly redundant/verbose it makes things. (assuming that remove() is the thing that cuts out that and expresses it the right way)","msgtype":"m.text"},"ts":1416930147000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, if people wish to make an argument from standards, they should look at standards","msgtype":"m.text"},"ts":1416930151000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"MikeSmith: you still need to use removeChild() for IE at this point","msgtype":"m.text"},"ts":1416930169000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1416930176000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hi, does one know if there is a video format/codecs supported by all major modern browsers?","msgtype":"m.text"},"ts":1416930186000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"but if people need developer docs, they should use developer docs","msgtype":"m.text"},"ts":1416930195000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"GIF89a?","msgtype":"m.text"},"ts":1416930205000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1416930207000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: I don't think it works to argue that one part of the docs are relevant and another should be ignored","msgtype":"m.text"},"ts":1416930226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: actually it does, it's a pretty usual way of referring to documents...","msgtype":"m.text"},"ts":1416930300000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"H.264 is everywhere now that Firefox fixed itself on Mac, right?","msgtype":"m.text"},"ts":1416930365000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think it's sad if your message to webdevs is that web-developer documentation sucks, so, sorry, you have to read the specs. Because the specs aren't generally super-approachable for a lot of devs, and regardless are generally written for UA implementors and not optimized for reading by normal people","msgtype":"m.text"},"ts":1416930370000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://caniuse.com/#search=mpeg-4","msgtype":"m.text"},"ts":1416930452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: generally agreed. I guess I wouldn't say that's my message to devs in general ... but it's my message to most people who ask me directly, or people I work with.","msgtype":"m.text"},"ts":1416930494000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh interesting, a substantial difference between Chrome and Opera.","msgtype":"m.text"},"ts":1416930515000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, point taken (on that message)","msgtype":"m.text"},"ts":1416930532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It is almost as if there are as many opinions as there are people on this channel.","msgtype":"m.text"},"ts":1416930538000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1416930546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Browsers have trouble with more than one audio track in a video (for multi-language support): IE 11 supports it, Firefox plays the last track, Chrome plays the first track.\" bahahaha *cries*","msgtype":"m.text"},"ts":1416930574000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that's an interesting use of the word \"trouble\"","msgtype":"m.text"},"ts":1416930633000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: well, it's a different sort of trouble to you","msgtype":"m.text"},"ts":1416930669000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: anything on testing permission APIs yet?","msgtype":"m.text"},"ts":1416930763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: did I miss a reply?","msgtype":"m.text"},"ts":1416930767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh you did reply","msgtype":"m.text"},"ts":1416930801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1416930811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: note that I not just care about bypassing the dialog, I also want to know what that dialog ends up storing","msgtype":"m.text"},"ts":1416930848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: to make tests around document.domain / origins","msgtype":"m.text"},"ts":1416930860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm not too enthusiastic about trying to pioneer this...","msgtype":"m.text"},"ts":1416930890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, thanks","msgtype":"m.text"},"ts":1416931060000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"annevk: Neither is anyone else","msgtype":"m.text"},"ts":1416932026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"pioneer this\" = write soem test cases?","msgtype":"m.text"},"ts":1416932131000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: setting up the supporting framework","msgtype":"m.text"},"ts":1416932161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Automated","msgtype":"m.text"},"ts":1416932163000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders has no open PRs right now","msgtype":"m.text"},"ts":1416932185000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think I'll end up writing some non-automated tests","msgtype":"m.text"},"ts":1416932185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any tests at all would be nice at this point","msgtype":"m.text"},"ts":1416932233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The other problematic bit is that we don't really seem to have agreement on what is desirable behavior","msgtype":"m.text"},"ts":1416932290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: kudos for https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-11/nov-20.md#54-io-streams-as-part-of-the-es-standard-library","msgtype":"m.text"},"ts":1416934459000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: meh, that was a disappointing conversation :-/","msgtype":"m.text"},"ts":1416934479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The last line from Mark Miller is somewhat divisive and not really a fair summary","msgtype":"m.text"},"ts":1416934587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: what's the story with event listeners and microtasks again?","msgtype":"m.text"},"ts":1416934850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still kicking myself I forgot to say \"CC0\" in the meeting","msgtype":"m.text"},"ts":1416934966000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: what about them?","msgtype":"m.text"},"ts":1416934983000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: at some point someone asked about that on the mailing list, I wonder where they are with that now","msgtype":"m.text"},"ts":1416935015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Ecma licensing is terrible","msgtype":"m.text"},"ts":1416935020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"microtask ends when the outermost event listener has been called in normal cases","msgtype":"m.text"},"ts":1416935026000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, unfortunately the person who asked was weird/rude, so they were easy to dismiss.","msgtype":"m.text"},"ts":1416935037000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: \"normal\" being non-synchronous cases?","msgtype":"m.text"},"ts":1416935064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: as in it's not any different from end-of-task?","msgtype":"m.text"},"ts":1416935073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean case like \"users clicks and a click event is dispatched\"","msgtype":"m.text"},"ts":1416935087000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I see, so there's no relationship then","msgtype":"m.text"},"ts":1416935101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not cases like \"timer runs and its callback dispatches click\"","msgtype":"m.text"},"ts":1416935103000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"great, it's simpler than I thought then, good good","msgtype":"m.text"},"ts":1416935122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: how dare you break Allen's invariants","msgtype":"m.text"},"ts":1416935185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1416935192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: now ES6 can't explain HTML","msgtype":"m.text"},"ts":1416935196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1416935196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really didn't know what would happen with that test case actually","msgtype":"m.text"},"ts":1416935200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder if this is in part due to the WindowProxy setup that ES6 still does not acknowledge","msgtype":"m.text"},"ts":1416935252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, Domenic: the big problem with the licensing is it has to go all the way up to the Ecma general council :(","msgtype":"m.text"},"ts":1416935256000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: that's not the big problem","msgtype":"m.text"},"ts":1416935279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, the way in which self.x changed seems very WindowProxy-like... I wasn't sure that document.open and WindowProxy interacted though...","msgtype":"m.text"},"ts":1416935288000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: it means it's a hellish amount of work and fighting pushback to get it to happen","msgtype":"m.text"},"ts":1416935316000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the thing ES6 does not acknowledge is related to `this` though, right? So you sidestepped that by using `self`","msgtype":"m.text"},"ts":1416935322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah I guess","msgtype":"m.text"},"ts":1416935347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but self might return a WindowProxy","msgtype":"m.text"},"ts":1416935362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: not sure","msgtype":"m.text"},"ts":1416935366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it does, right?","msgtype":"m.text"},"ts":1416935371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"self === window is a WindowProxy","msgtype":"m.text"},"ts":1416935377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't remember what the issue was with ES6 vs. WindowProxy though","msgtype":"m.text"},"ts":1416935396000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: mostly \"this\"","msgtype":"m.text"},"ts":1416935405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the other problem with WindowProxy is that it's not defined in terms of ES operations (yet)","msgtype":"m.text"},"ts":1416935453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so we don't know exactly how it proxies from the spec","msgtype":"m.text"},"ts":1416935468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: heh, yeah, I was looking at WebIDL's getter/setter/creator/deleter yesterday and thinking the same thing","msgtype":"m.text"},"ts":1416935469000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: hi, need a little help with bikeshed; am trying to link to this http://www.w3.org/TR/wai-aria/host_languages#implicit_semantics from another spec, is there an automethod or do I need to use a regular link?","msgtype":"m.text"},"ts":1416936431000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"SteveF_: At the doctor right now, I'll answer you when I get into the office.","msgtype":"m.text"},"ts":1416936656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtknins: thanks no rush!","msgtype":"m.text"},"ts":1416936803000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"Domenic: I'm not sure what Allen's reply to me means","msgtype":"m.text"},"ts":1416938813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe we need a polyfill standards group","msgtype":"m.text"},"ts":1416941178000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"rubys: I don't understand which part of my message you disagree with.","msgtype":"m.text"},"ts":1416941776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: annevk: once cache is expanded beyond SW, do we know what it should do on data URI workers? there is no origin there, right?","msgtype":"m.text"},"ts":1416943580000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: there's an origin, you can just never get same-origin with it","msgtype":"m.text"},"ts":1416943832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: what happens with localStorage?","msgtype":"m.text"},"ts":1416943856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is the origin for data uri spec'd somewhere?","msgtype":"m.text"},"ts":1416943865000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://url.spec.whatwg.org/#origin","msgtype":"m.text"},"ts":1416943893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah... globally unique identifier... thanks!","msgtype":"m.text"},"ts":1416943928000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: https://esdiscuss.org/topic/realm-api-and-this-global btw","msgtype":"m.text"},"ts":1416944504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: no replies","msgtype":"m.text"},"ts":1416944507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: bug is also still open","msgtype":"m.text"},"ts":1416944520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, was too lazy to dig up the link, but i remember :-/","msgtype":"m.text"},"ts":1416944532000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: ha! Movement!","msgtype":"m.text"},"ts":1416945371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I should probably not have expressed disappointment, but really, the amount of time it takes to get something fixed...","msgtype":"m.text"},"ts":1416945509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, ecmascript.org doesn't work over HTTPS","msgtype":"m.text"},"ts":1416945607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a question regarding append/prepend/before/after","msgtype":"m.text"},"ts":1416946372000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"these methods were in w3c version of DOM4, but were removed 12 June 2014","msgtype":"m.text"},"ts":1416946384000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"they are still in WhatWG version though","msgtype":"m.text"},"ts":1416946397000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"no browser implemented those yet","msgtype":"m.text"},"ts":1416946407000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"are these methods going to be supported eventually? what's the current state?","msgtype":"m.text"},"ts":1416946440000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: my guess is that they were removed from the w3c version because no browser implement them yet","msgtype":"m.text"},"ts":1416946536000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=911477  hanging","msgtype":"m.text"},"ts":1416946552000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: i'm haven't seen anyone saying these shouldn't exist, so they're just not implemented yet","msgtype":"m.text"},"ts":1416946575000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=255482","msgtype":"m.text"},"ts":1416946589000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"these 2 don't say \"no\"","msgtype":"m.text"},"ts":1416946610000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"SteveF_: If the ARIA spec has decent metadata for its definitions, we can add it to Shepherd's system and it'll be available for anyone to autolink.  If it doesn't, you can add custom anchor definitions to your spec for Bikeshed to use, so you can still use the easy auto-linking syntax.  This is documented in the docs, but I'm about to change the syntax, so","msgtype":"m.text"},"ts":1416946661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you use it, let me know so I can give you a heads-up.  ^_^","msgtype":"m.text"},"ts":1416946661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"webkit too","msgtype":"m.text"},"ts":1416946681000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: i guess https://code.google.com/p/chromium/issues/detail?id=255482#c3 sums up the current status","msgtype":"m.text"},"ts":1416946726000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1416946754000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"guess, es6 still blocking","msgtype":"m.text"},"ts":1416946759000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"some stuff may be still in flux","msgtype":"m.text"},"ts":1416946773000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"(or just not important enough), but eventually will be supported","msgtype":"m.text"},"ts":1416946800000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1416946835000,"senderName":"SteveF_","senderId":"SteveF_@irc"},
{"content":{"body":"iliakan: ify ou look at the open bugs against dom.spec.whatwg.org you'll find something similar","msgtype":"m.text"},"ts":1416946949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh, there's been movement there: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23202 Guess I should look into that tomorrow","msgtype":"m.text"},"ts":1416947043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ended up fixing it now...","msgtype":"m.text"},"ts":1416948282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw where I can read more about that @unscopable? :)","msgtype":"m.text"},"ts":1416948391000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"iliakan: http://people.mozilla.org/~jorendorff/es6-draft.html","msgtype":"m.text"},"ts":1416948418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1416948803000,"senderName":"iliakan","senderId":"iliakan@irc"},
{"content":{"body":"annevk: does remove() need it?","msgtype":"m.text"},"ts":1416948929000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: we have at least one case that we broke","msgtype":"m.text"},"ts":1416949701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1416949715000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rwaldron: would you link me to the published tc39 notes? not sure where to find them.","msgtype":"m.text"},"ts":1416950473000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: github.com/tc39","msgtype":"m.text"},"ts":1416950529000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks!","msgtype":"m.text"},"ts":1416950660000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: What happens right now if two consumers both call .read() on a stream?","msgtype":"m.text"},"ts":1416951556000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: they each get a chunk (assuming two chunks are available)","msgtype":"m.text"},"ts":1416951577000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, each .read() call consumes one chunk? Gotcha.","msgtype":"m.text"},"ts":1416951601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is trying to bootstrap enough Streams knowledge to help out.","msgtype":"m.emote"},"ts":1416951611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1416951647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In that case, I'm leaning toward some form of special-casing piping being the best - piping is a fundamentally different sort of reading behavior that implicitly lays claim to all chunks until the piping stops.","msgtype":"m.text"},"ts":1416951820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It changes the stream into a push model, no?","msgtype":"m.text"},"ts":1416951900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I was leaning toward that until 5 minutes ago when I remembered that httpRequest.json() also wants exclusive access to the body stream (i.e. httpRequest.body.read() should probably not work)","msgtype":"m.text"},"ts":1416951905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1416951921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":".json() is definitely a pipe consumer that only emits a single output chunk, once it's finished reading all the input chunks.","msgtype":"m.text"},"ts":1416951944000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm just saying those words does make it sound better...","msgtype":"m.text"},"ts":1416951959000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It felt a bit awkard to say \".json() must use pipe\" even though the destination stream is kinda synthetic","msgtype":"m.text"},"ts":1416951999000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But saying \".json() is a pipe consumer\" is nice.","msgtype":"m.text"},"ts":1416952009000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, the API of JSON hides the stream-ness from you, so you don't have to call .read() yourself, but it's still there under the covers.","msgtype":"m.text"},"ts":1416952031000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A \"spread pipe\" that can be read by multiple consumers is just a pipe consumer that then acts more like a normal stream again.","msgtype":"m.text"},"ts":1416952099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is it super-important that .state/etc not be accessible to anyone but the pipe target?","msgtype":"m.text"},"ts":1416952417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I presume it is, so that impls can optimize simple cases and do everything in the C++ layer?","msgtype":"m.text"},"ts":1416952435000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah. I'm unsure about .state and .ready but yukata seems to think they should also be censored","msgtype":"m.text"},"ts":1416952531000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You could get away with censoring them instead of making them throw I think","msgtype":"m.text"},"ts":1416952543000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. always return \"waiting\"","msgtype":"m.text"},"ts":1416952550000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah. Does the pipe consumer need them?","msgtype":"m.text"},"ts":1416952565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what do you mean?","msgtype":"m.text"},"ts":1416952590000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm implementing .json(). I need access to .read() from the pipe, but do I need .state from it?","msgtype":"m.text"},"ts":1416952612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, yeah, you need all three","msgtype":"m.text"},"ts":1416952676000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the other two tell you when to call .read()","msgtype":"m.text"},"ts":1416952692000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay, so even if you censor them on the stream, you still need some way for the pipe-holder to get at it.","msgtype":"m.text"},"ts":1416952708000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1416952713000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we could either make readableStream.pipeTo(dest) use its internal powers to access internal state","msgtype":"m.text"},"ts":1416952744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or we could introduce a StreamReader-type object that has access to the internal state, and give that only to the consumer.","msgtype":"m.text"},"ts":1416952770000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The latter allows people to create their own pipeTo-like abstractions","msgtype":"m.text"},"ts":1416952785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. .json()","msgtype":"m.text"},"ts":1416952792000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"whereas the former requires implementing .json() in terms of .pipeTo() in order to reuse its internal powers","msgtype":"m.text"},"ts":1416952806000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm actually liking the \"duplicate the API on ExclusiveReadableStream\".  That's basically your \"crazy idea\", but with convenience API on the Stream itself for when you're not doing anything fancy.","msgtype":"m.text"},"ts":1416952895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1416952918000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i guess it might be nicer for consumers","msgtype":"m.text"},"ts":1416952926000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"authors, i mean","msgtype":"m.text"},"ts":1416952930000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"even if it makes me uncomfortable","msgtype":"m.text"},"ts":1416952938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Rephrased: Per your crazy idea, make Streams solely a piping object, with a ReadableFoo object that can consume it and manually expose the stream data. Then duplicate the ReadableFoo API back onto Stream for convenience.","msgtype":"m.text"},"ts":1416952944000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh, yeah, that's one way to look at it","msgtype":"m.text"},"ts":1416952968000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The convenience API would use internal state to shut itself off if the Stream ever starts piping for real.","msgtype":"m.text"},"ts":1416952985000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Including to a manually-created ReadableFoo object.)","msgtype":"m.text"},"ts":1416952994000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yepyep: https://github.com/whatwg/streams/blob/lock/reference-implementation/lib/experimental/exclusive-stream-reader.js#L132-L152","msgtype":"m.text"},"ts":1416953015000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Need to think about how that would affect mikeal's \"I override .read() a lot\" case.","msgtype":"m.text"},"ts":1416953037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe you'd just override .pipeTo()? Dunno.","msgtype":"m.text"},"ts":1416953061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You'd have to override getExclusiveReader() in my current design","msgtype":"m.text"},"ts":1416953086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I had another design that relied on weakmap and try { .. } finally { } hackery to be less code for implementers","msgtype":"m.text"},"ts":1416953106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://gist.github.com/domenic/d421643d95cdec9a9b5b#file-readable-stream-locks-2-md","msgtype":"m.text"},"ts":1416953117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"predates me realizing that .ready and .state were also important, but the general idea is there","msgtype":"m.text"},"ts":1416953133000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it works with anything with a .read() method (and presumably anything with .ready/.state too)","msgtype":"m.text"},"ts":1416953163000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Remind me how foo.pipeTo(bar) works on the bar side? How does bar respond to that?","msgtype":"m.text"},"ts":1416953269000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it doesn't right now","msgtype":"m.text"},"ts":1416953280000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pipeTo just calls bar.write(chunk) a lot","msgtype":"m.text"},"ts":1416953291000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"at appropriate times which it figures out by paying attention to backpressure","msgtype":"m.text"},"ts":1416953301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, kk.  So I was right that piping turns the stream into a push structure rather than pull.  Cool.","msgtype":"m.text"},"ts":1416953326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not sure i would phrase it that way though","msgtype":"m.text"},"ts":1416953341000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what if foo.pipeTo(bar) just called bar.pipeFrom(foo)","msgtype":"m.text"},"ts":1416953351000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and i moved the algorithm over to WritableStream.prototype.pipeFrom","msgtype":"m.text"},"ts":1416953365000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"would you then call it pull?","msgtype":"m.text"},"ts":1416953369000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, that's possible, and maintains the pull nature.","msgtype":"m.text"},"ts":1416953374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, because \"bar\" is then the one dictating when things write, not \"foo\"","msgtype":"m.text"},"ts":1416953384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Question is which end fo the pipe data pools at when you're not doing anything explicit.","msgtype":"m.text"},"ts":1416953407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At the source end, it's pull.  At the target end, it's push.","msgtype":"m.text"},"ts":1416953415000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The target may itself then still be a pull stream, buffering all the data beign pushed into it.","msgtype":"m.text"},"ts":1416953441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's really neither that is dictating; it's the pipeTo algorithm. Which since it only uses public APIs (for now), could live anywhere","msgtype":"m.text"},"ts":1416953453000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(And using backpressure to force upstream to buffer instead.)","msgtype":"m.text"},"ts":1416953456000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, the algorithm matters. This isn't an intrinsic property of the producer/consumer relationship, it's a property of the exact way they communicate.","msgtype":"m.text"},"ts":1416953485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1416953490000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am 90% sure the current algorithm pools at the source","msgtype":"m.text"},"ts":1416953502000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, it doesn't if foo.pipeTo(bar) calls bar.write(data) a lot (rather than bar calling foo.read() a lot)","msgtype":"m.text"},"ts":1416953541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it calls both, sorry :P","msgtype":"m.text"},"ts":1416953579000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i was answering specifically \"how it works on the bar side\"","msgtype":"m.text"},"ts":1416953593000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"man what","msgtype":"m.text"},"ts":1416953595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, gonna read some of this and get back to you.","msgtype":"m.text"},"ts":1416953612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/whatwg/streams/blob/master/reference-implementation/lib/readable-stream.js#L88-L159","msgtype":"m.text"},"ts":1416953623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"basically pipeTo is a loop that does `var chunk = source.read(); dest.write(chunk);` a lot","msgtype":"m.text"},"ts":1416953649000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"except it only does that when source has stuff to read and chunk is not signalling backpressure","msgtype":"m.text"},"ts":1416953664000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and also it handles errors","msgtype":"m.text"},"ts":1416953670000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, I'm confused about what structures are reified here and in what way. Also: I'm hungry. Gonna grab lunch and think about this a bit.","msgtype":"m.text"},"ts":1416953794000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.w3.org/mid/BY2SR01MB608C5CB8B8C2BDE0432255F9B730⊙Bnsec seems useful","msgtype":"m.text"},"ts":1416953811000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]