[
{"content":{"body":"cantom: so, we actually generate the dev edition from the real spec these days, so that should be OK :). https://blog.whatwg.org/developers-edition-comeback","msgtype":"m.text"},"ts":1504829353000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the point is doing snapshots based on the dev edition.","msgtype":"m.text"},"ts":1504829410000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Domenic: :D","msgtype":"m.text"},"ts":1504829460000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"Big question. Why is the slogan of WHATWG \"Please leave your sense of logic at the door, thanks!\"","msgtype":"m.text"},"ts":1504829485000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"Haha. It's just an IRC channel topic, but yeah, it's about how the web is designed over a long time and has no sense of logic to it sometimes","msgtype":"m.text"},"ts":1504829543000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We often say \"see topic\" when someone complains about some old historical thing like \"why is typeof document.all 'undefined'???\"","msgtype":"m.text"},"ts":1504829565000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I've been neck deep into URL, HTTP, Unicode + charsets, MIME + multipart, HTML etc. specs and I felt the slogan might refer to that :/","msgtype":"m.text"},"ts":1504829632000,"senderName":"cantom","senderId":"cantom@irc"},
{"content":{"body":"lol, yep, sounds right","msgtype":"m.text"},"ts":1504829647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Which also reminds me of the title of https://whatwg.org/specs/url/2014-07-30/","msgtype":"m.text"},"ts":1504829700000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Now URL is less complex and less likely to change than the main HTML spec.","msgtype":"m.text"},"ts":1504829733000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"https://github.com/whatwg/url/commits had not even an editorial commit for a month.","msgtype":"m.text"},"ts":1504829826000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Domenic: No, but you can require that there's no syntax errors or unrecognized constructs when using one of the parsing entry points in Syntax.","msgtype":"m.text"},"ts":1504830948000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I ended up linking to https://drafts.csswg.org/css-syntax/#conform-classes","msgtype":"m.text"},"ts":1504830969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sure.","msgtype":"m.text"},"ts":1504830992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And government officials are actually another good reason.","msgtype":"m.text"},"ts":1504832977000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"It should be pretty rare that a page will not work in future browsers if it confirms to a good snapshot and works in current browsers.","msgtype":"m.text"},"ts":1504833026000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"smaug____: what's the status of https://dvcs.w3.org/hg/speech-api/raw-file/tip/webspeechapi.html?","msgtype":"m.text"},"ts":1504856670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"implemented in some form, but the spec hasn't got much updates as you can see","msgtype":"m.text"},"ts":1504856807000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"there are some open bugs, I think","msgtype":"m.text"},"ts":1504856813000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: why?","msgtype":"m.text"},"ts":1504856825000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: mostly want [Exposed] added to the interfaces","msgtype":"m.text"},"ts":1504856866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gecko has the synthesis part, and recognition API is implemented too, but I don't know recall when it is enabled. never or only when platform has the support","msgtype":"m.text"},"ts":1504856872000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1504856876000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: and since there's not even a GitHub repo I'm wondering where I can reliably file bugs","msgtype":"m.text"},"ts":1504856891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"w3 bugzilla","msgtype":"m.text"},"ts":1504856903000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I see, but not mentioned in the spec somehow?","msgtype":"m.text"},"ts":1504856921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aha, I see it is not mentioned there","msgtype":"m.text"},"ts":1504856967000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I filed a bug; I guess I'll file another one about mentioning Bugzilla in the spec","msgtype":"m.text"},"ts":1504857037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: curious, will you attend TPAC this year?","msgtype":"m.text"},"ts":1504857054000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I can't, if all goes well I have a second child to take care of that's a couple weeks old by then","msgtype":"m.text"},"ts":1504857183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aha. I think I had heard that but forgot. Hopefully everything goes well.","msgtype":"m.text"},"ts":1504857226000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is wondering who from Mozilla will be there","msgtype":"m.emote"},"ts":1504857237000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: wanderview will go","msgtype":"m.text"},"ts":1504857265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's a couple more people, but I don't remember all the names ðŸ˜•","msgtype":"m.text"},"ts":1504857353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it wasn't in Trumpland, I'd attend.","msgtype":"m.text"},"ts":1504859248000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: I guess being woken up by a new baby is better than being woken up by the SFO flights passing overhead :)","msgtype":"m.text"},"ts":1504861357000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Haha","msgtype":"m.text"},"ts":1504861464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That really depends on how much sleep I've had","msgtype":"m.text"},"ts":1504861470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"First six months with Oscar were rather rough","msgtype":"m.text"},"ts":1504861512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not being woken up at all is for sure the best option :)","msgtype":"m.text"},"ts":1504861649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I hope that this time things are a little smoother","msgtype":"m.text"},"ts":1504861695000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: hey, where can I find tests for <source type>?","msgtype":"m.text"},"ts":1504863592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grep suggests html/semantics/embedded-content/the-img-element/","msgtype":"m.text"},"ts":1504863709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems someone already wrote all the tests I needed","msgtype":"m.text"},"ts":1504863842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hurray","msgtype":"m.text"},"ts":1504863844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: if you have the time, I'd love a pointer for this magic [[Call]] affecting inheritance stuff","msgtype":"m.text"},"ts":1504864548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: html/semantics/embedded-content/the-img-element/update-the-source-set.html","msgtype":"m.text"},"ts":1504864672000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: huh? what about inheritance","msgtype":"m.text"},"ts":1504864681000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: why custom [[Call]] means there's no .call","msgtype":"m.text"},"ts":1504864806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because .call is on Function.prototype, and document.all's [[Prototype]] is HTMLAllCollection.prototype","msgtype":"m.text"},"ts":1504864867000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"and HTMLAllCollection.prototype's [[Prototype]] is Object.prototype","msgtype":"m.text"},"ts":1504864886000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"like any other interface prototype object","msgtype":"m.text"},"ts":1504864896000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"so -- no .call, no .bind, no .apply","msgtype":"m.text"},"ts":1504865070000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"likewise, Object.setPrototype(function () {}, Object.prototype) doesn't have .call either","msgtype":"m.text"},"ts":1504865178000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Is there a dedicated channel for discussing http1/http2 (push, preload, prefetch, preconnect, prerender; as/mime-types/crossorigin; block/async/defer)?","msgtype":"m.text"},"ts":1504865238000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"TimothyGu: aah right, I was confusing this with methods","msgtype":"m.text"},"ts":1504867197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: thanks","msgtype":"m.text"},"ts":1504867199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"inoas: probably this channel","msgtype":"m.text"},"ts":1504867233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"inoas: yoav ^^","msgtype":"m.text"},"ts":1504867242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey inoas!","msgtype":"m.text"},"ts":1504867584000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"let's discuss :)","msgtype":"m.text"},"ts":1504867594000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Well it is more questions, but not \"programming details\"","msgtype":"m.text"},"ts":1504868391000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"When a document loads, depending on the loading and the execution priority of the ressource you can use: h2 push (preload header on http2) OR preload (preload header on h2 with nopush, or <link tag with rel push) OR prefetch","msgtype":"m.text"},"ts":1504868477000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"I am working on some kind of CMS (with staging, revisions, translations, templates) and I want to pass the options to make this right for linked code assets instead of doing combination and/or inlining (http1 tricks)","msgtype":"m.text"},"ts":1504868521000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"and for the execution it can be \"blocking\" (no attribute), async (non-blocking, in any order) or defer (non-blocking, but in order specified)","msgtype":"m.text"},"ts":1504868575000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"crossorigin=anonymous needs to be setup for fonts and otherwise just for remote origins","msgtype":"m.text"},"ts":1504868603000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"is that \"about\" correct so far?","msgtype":"m.text"},"ts":1504868614000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"another thing: I have done some http2 tests (with localtunnel.me and a vagrant box) using 100-140 image tiles and apache2 / http2 and while there are huge gains when moving from HTTP1.1 to HTTP2 there are little gains or even losses when moving from regular loading to pushing... sure there is a header that is up to about 7kb larger (max 8kb) but that can't be the reason (testing in chrome and firefox, I have also tested with sitespeed.io (chrome))","msgtype":"m.text"},"ts":1504868735000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"and then another question would be: you can also \"preload\" domain resolve, tcp/tls handshake, links and even prerender them... aside prefetch which can also be used on pure ressources on the document itself (say which could but maybe not later used by elements loaded dynamically, say a chat window popping up), the other ones such as preconnect and prerender should be used with links (or domains for preconnect, but links would work, right?)?","msgtype":"m.text"},"ts":1504869054000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"so. ressources: h2 push, preload, prefetch & links: pefetch/preconnect/prerender","msgtype":"m.text"},"ts":1504869101000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"yoav: is that about correct?","msgtype":"m.text"},"ts":1504870450000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"RE \"h2 push (preload header on http2)\" - a preload header *may* be used as an indication for the web server to push down that resource","msgtype":"m.text"},"ts":1504870605000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"H2 push does not require link preload headers","msgtype":"m.text"},"ts":1504870621000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"and link preload headers don't mean that you're using h2 push","msgtype":"m.text"},"ts":1504870639000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"sure it does not require them, I am just saying there are these ways to handle ressource loading and execution priorities","msgtype":"m.text"},"ts":1504870694000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"h2 push, document header preload etc etc","msgtype":"m.text"},"ts":1504870704000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"h2 push would be via http header with a very similar semantic to document <head> <link> rel preload","msgtype":"m.text"},"ts":1504870751000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"\"there is a header that is up to about 7kb larger\" - headers this big can definitely result in slowed initial processing, as your effective initial congestion window is reduced from ~14K to ~6K","msgtype":"m.text"},"ts":1504870757000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so what do you think a good header size is?","msgtype":"m.text"},"ts":1504870787000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"like a sweet spot? it isn't easy to answer, right?","msgtype":"m.text"},"ts":1504870797000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"as small as it can be","msgtype":"m.text"},"ts":1504870814000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1504870826000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"well but if you want H2 Preload it has to be in the header instead of the <head>","msgtype":"m.text"},"ts":1504870830000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"H2 push is something that works well when your HTML has some \"think time\"","msgtype":"m.text"},"ts":1504870849000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(so server side processing)","msgtype":"m.text"},"ts":1504870857000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"You can use that time to start pushing critical resources so that they will be available in the network stack once the browser got the HTML and realized that it needs them","msgtype":"m.text"},"ts":1504870898000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"What I consider is in the software allow to select when/how a code asset is loaded/executed: H2 Push with Fallback <head> Preload (If the maximum H2 Push header size is exceeded OR only HTTP1.1 available), then direct <head> Preload etc.","msgtype":"m.text"},"ts":1504870904000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"https://blog.yoav.ws/being_pushy/","msgtype":"m.text"},"ts":1504870913000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"It seems like using nopush in conjunction with http2 would make little sense unless you reload only very very few ressources anyway?","msgtype":"m.text"},"ts":1504870938000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"because the trade off (header bigger vs the client knowing earlier) isnt worth it?","msgtype":"m.text"},"ts":1504870951000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"preload only kicks in after the HTML started sending down to the browser (and you can use preload both in its header form as well as inside the markup)","msgtype":"m.text"},"ts":1504870967000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yes but in header form it is using push on h2, unless nopush is declared, right?","msgtype":"m.text"},"ts":1504871005000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"I'm not a fan of using the link preload header as a push signal. You could maybe use an HTTP server which strips those headers when it pushes","msgtype":"m.text"},"ts":1504871043000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so say I limit the amount of preload directives in http headers to maximum of 2kb... and then I prefer the ones without \"nopush\" then if still space left = the ones with nopush... if there is an overflow... <head> <link preload the rest","msgtype":"m.text"},"ts":1504871053000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"\"yes but in header form it is using push on h2, unless nopush is declared, right?\" depends on your server implementation. It doesn't have to","msgtype":"m.text"},"ts":1504871070000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"well I am talking about apache 2.4x or so","msgtype":"m.text"},"ts":1504871090000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"I cannot change to nginx or H2O","msgtype":"m.text"},"ts":1504871118000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"mod_http2 then","msgtype":"m.text"},"ts":1504871123000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"push, preload, etc are not magic dust that you can spray over your sites to make them faster","msgtype":"m.text"},"ts":1504871153000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"they are tools you can use to fix specific bottlenecks in your site's loading","msgtype":"m.text"},"ts":1504871167000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"H2 push should be used to fill in the gaps before your HTML is sent down and right after it","msgtype":"m.text"},"ts":1504871186000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"that's the reason I want to yield some control to setting up templates and documents in our CMS","msgtype":"m.text"},"ts":1504871188000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"preload should be used for critical resources that are late discovered","msgtype":"m.text"},"ts":1504871209000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"as far as magic dust goes. the only magic dust so far is HTTP2... just enabling it really improved performance without any pushing","msgtype":"m.text"},"ts":1504871220000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"preconnect can help you establish TLS connections to third party domains ahead of time","msgtype":"m.text"},"ts":1504871231000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Yes I understand, they would be in say a 50kb html document, at the very bottom with async","msgtype":"m.text"},"ts":1504871246000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"I understood preconnect so far that it only makes sense for us if we use cdns for static assets or non-origin domain JS APIs etc","msgtype":"m.text"},"ts":1504871297000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"async scripts are tricky to preload, as I've seen cases where loading them earlier actually makes things slower (they run earlier, delaying more critical work)","msgtype":"m.text"},"ts":1504871302000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I hope that's about correct","msgtype":"m.text"},"ts":1504871303000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"well the async script then needs to be aware of DOMContentLoaded?","msgtype":"m.text"},"ts":1504871329000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"you can just avoid preloading it, turn it into a \"defer\"ed script (if you don't care about e.g. IE9) https://calendar.perfplanet.com/2016/prefer-defer-over-async/","msgtype":"m.text"},"ts":1504871399000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"or load it dynamically","msgtype":"m.text"},"ts":1504871405000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"if it's not critical content, you shouldn't preload it, at least not upfront","msgtype":"m.text"},"ts":1504871421000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"there's no way to tell preload \"this is a non-critical async script\"","msgtype":"m.text"},"ts":1504871434000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"we probably should","msgtype":"m.text"},"ts":1504871438000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Pushed responses go into this special push-only cache, and they go into the HTTP cache only when thereâ€™s an actual request for them. <= however prefetch would put things in http-cache right? (it would be about loading ressources that may or may not get used... whereas push/preload would load ressources that 99% are going to be used on the same page, \"soon\") ?!","msgtype":"m.text"},"ts":1504871452000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"as part of https://github.com/WICG/resource-priorities perhaps","msgtype":"m.text"},"ts":1504871474000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"tell preload + non-critical execution?","msgtype":"m.text"},"ts":1504871483000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"thought if I push or preload and set async true it would work!?","msgtype":"m.text"},"ts":1504871503000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1504871518000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"`async` is not taken into account on link elements","msgtype":"m.text"},"ts":1504871530000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://blog.yoav.ws/tale-of-four-caches/ for explanation on the different browser caches","msgtype":"m.text"},"ts":1504871541000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yeah I remember push cache, memory cache, http cache or so","msgtype":"m.text"},"ts":1504871570000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"but it depends on the browser I suppose","msgtype":"m.text"},"ts":1504871580000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1504871610000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"if i push/preload a ressource and the browser uses it (otherwise maybe it wasnt a good idea to push it in the first place) then that is going to end in http cache (if cache headers are setup) AFAIU","msgtype":"m.text"},"ts":1504871669000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"the non-visible (say: below the fold and the user does not scroll) content however would eventually not be requested and thus would not enter http cache?","msgtype":"m.text"},"ts":1504871701000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"would it not be better if there was a flag for preload/push that says: and-also-put-it-into-http-cache?","msgtype":"m.text"},"ts":1504871735000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"Not sure but I think there are some security protections in the fact that pushed resources only live during the H2 session unless actually requested","msgtype":"m.text"},"ts":1504871836000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Would the following semi-automated logic be okay: Setup Code Assets (JS/CSS) and Media Assets (SVG, JPG, PNG, Audio, Video) in templates/documents. While assigning them, set their Load Priority (Push or Preload, Preload, Prefetch) and their Execution Priority (Defer, Async, Blocking) as well as a natural order for loading and execution?","msgtype":"m.text"},"ts":1504871901000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"sounds somewhat reasonable, only that you don't necessarily have those controls today","msgtype":"m.text"},"ts":1504872097000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"which brings us to https://github.com/WICG/resource-priorities again...","msgtype":"m.text"},"ts":1504872114000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Why don't I have those controls? What is missing?","msgtype":"m.text"},"ts":1504872185000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"\"Even though ASYNC and DEFER donâ€™t block the HTML parser, they can block rendering. This happens when theyâ€™re parsed and executed before rendering is complete and take over the browser main thread. <= if \" if I wrap scripts with DOMContentLoaded checks would the blocking of the main thread not just be very short for async=true?","msgtype":"m.text"},"ts":1504872213000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"@ https://github.com/WICG/resource-priorities having relative priorities may be nice but maybe also complex because ressouces \"need to know\" about each other","msgtype":"m.text"},"ts":1504872801000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"what about supporting weight - layering in CSS is also done via this (z-index) instead of saying below-layer-a","msgtype":"m.text"},"ts":1504872840000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"having something like unix nice/weight/z-index means there is a defintiion of say -20 to +20 and then even remote scripts that load remote scripts can give them an execution priority?!","msgtype":"m.text"},"ts":1504872971000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"A few missing pieces: no way to indicate async/defer in preloaded resources, no way to indicate relative priority of resources of similar types, no way to define resources so they won't block more critical resources even if discovered before them","msgtype":"m.text"},"ts":1504872973000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"No way to indicate async/defer in preloaded resources <= so it is not possible to set defer (or async) attribute on the push header/preload link - and just on the tag where the ressource is requested ain't enough? Preloading should not mean pre-execution, does it?","msgtype":"m.text"},"ts":1504873054000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"Relative loading priority (for the same type) would be the priority in the http header / push promise or the <head> <link> order","msgtype":"m.text"},"ts":1504873099000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"execution order: dom order?","msgtype":"m.text"},"ts":1504873107000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"\"no way to define resources so they won't block more critical resources even if discovered before them\" I don't understand? - would it still not be wise to start implemeting things like suggested above and then just hope for the browsers to do the best. Users would not need to use push/preload, it would be an opt-in feature","msgtype":"m.text"},"ts":1504873172000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"I ll make a note that we should drop the preload headers after the http server processed them (right? there is no point sending them if the connection is http2)","msgtype":"m.text"},"ts":1504874221000,"senderName":"inoas","senderId":"inoas@irc"},
{"content":{"body":"smaug____: annevk: marcosc is going I believe","msgtype":"m.text"},"ts":1504876493000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"What objects actually implement PerformanceNavigationTiming?","msgtype":"m.text"},"ts":1504889933000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hello, when i enumerate getBoundingClientRect properties of an element, why do I get toJSON function ?","msgtype":"m.text"},"ts":1504901443000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"Probably because they have a toJSON function!","msgtype":"m.text"},"ts":1504904272000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: haha but it wasn't there in previous version of chrome :p","msgtype":"m.text"},"ts":1504904445000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"Probably Chrome is getting more spec-compliant :)","msgtype":"m.text"},"ts":1504904458000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: where can I find in spec","msgtype":"m.text"},"ts":1504906409000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"that toJSON should be part of getBoundingClientRect","msgtype":"m.text"},"ts":1504906425000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: https://github.com/w3c/fxtf-drafts/pull/220","msgtype":"m.text"},"ts":1504906900000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: thanks. You are the guy who works on web IDl holy shit that's so cool :D","msgtype":"m.text"},"ts":1504907142000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: there's a number of us, tbh. Currently, this behavior is specified in the spec using serializers. But we've changed that recently to use toJSON instead to make it more explicit.","msgtype":"m.text"},"ts":1504907335000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah but I am talking to one of them:) Also, tbh this is first time I am delving into specs so this serializers and all confuses me","msgtype":"m.text"},"ts":1504907428000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: well, you were talking with Domenic earlierâ€”he's done loads more for the WebIDL spec (and others) than I have.","msgtype":"m.text"},"ts":1504907486000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"virmaha: that said: serializers are super confusing, which is why we're replacing them with toJSON","msgtype":"m.text"},"ts":1504907516000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: oh nice. thank you Domenic !","msgtype":"m.text"},"ts":1504907558000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: they were basically a long and complex way of describing different flavors of toJSON methods","msgtype":"m.text"},"ts":1504907560000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: umm if so, why did in previous version of chrome, everything worked fine? What 'serializer' did it use?","msgtype":"m.text"},"ts":1504907580000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"what do you mean by \"worked fine\"","msgtype":"m.text"},"ts":1504907601000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: earlier, getBoundingClientRect didn't have toJSON. So I could easily JSON.stringify the output","msgtype":"m.text"},"ts":1504907659000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: what do you mean by \"easily JSON.stringify\" the output?","msgtype":"m.text"},"ts":1504907719000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: props = myElement.getBoundingClientRect(); for (var p in props) console.log(p);","msgtype":"m.text"},"ts":1504907731000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"this never printed 'toJson' in chrome 60 but it does print toJSon in chrome 61","msgtype":"m.text"},"ts":1504907747000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"oh, well, now you should just pass the object itself.","msgtype":"m.text"},"ts":1504907756000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"virmaha: so just do: jsonString = JSON.stringify(myElement.getBoundingClientRect());","msgtype":"m.text"},"ts":1504907806000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"thanks tobie!","msgtype":"m.text"},"ts":1504908046000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"virmaha: glad I could help","msgtype":"m.text"},"ts":1504908070000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"glad I could learn from members who drive the web standards!","msgtype":"m.text"},"ts":1504908138000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"err tobie , why can't I see toJSON here : https://chromium.googlesource.com/chromium/src/+/89bc0736a6c3d48eb426ffad99ff87fb6fd4e695/third_party/WebKit/Source/core/geometry/DOMRectReadOnly.idl","msgtype":"m.text"},"ts":1504908391000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"that's from changelog of chrome..or am I looking at wrong file?","msgtype":"m.text"},"ts":1504908412000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"There's the serializer","msgtype":"m.text"},"ts":1504908451000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"virmaha: which now should be [Default] toJSON(); instead","msgtype":"m.text"},"ts":1504908497000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"virmaha: but which basically means the same thing","msgtype":"m.text"},"ts":1504908506000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"virmaha: see explanation here: https://github.com/w3c/fxtf-drafts/issues/200","msgtype":"m.text"},"ts":1504908577000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"alright tobie. Thanks a lot.","msgtype":"m.text"},"ts":1504908938000,"senderName":"virmaha","senderId":"virmaha@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1504908953000,"senderName":"tobie","senderId":"tobie@irc"}
]