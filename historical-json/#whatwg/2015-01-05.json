[
{"content":{"body":"class MyImage extends HTMLImageElement {}","msgtype":"m.text"},"ts":1420466227000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"^ makes sense ?","msgtype":"m.text"},"ts":1420466232000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"I get a Uncaught TypeError: Illegal constructor","msgtype":"m.text"},"ts":1420466247000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"w.r.t ES6 classes","msgtype":"m.text"},"ts":1420466253000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"no implementation supports extending host objects yet","msgtype":"m.text"},"ts":1420466282000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1420466290000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hopefully one day it will be possible :D","msgtype":"m.text"},"ts":1420466313000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-, it's an interface right?","msgtype":"m.text"},"ts":1420466330000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"I meant, HTMLImageElement","msgtype":"m.text"},"ts":1420466335000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1420466365000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"more over we can do a document.registerElement('my-img',MyImage)","msgtype":"m.text"},"ts":1420466369000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"how come that works!","msgtype":"m.text"},"ts":1420466369000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"so, in that case the class extends the interface?","msgtype":"m.text"},"ts":1420466396000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"shudders ","msgtype":"m.emote"},"ts":1420466396000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"#confused","msgtype":"m.text"},"ts":1420466401000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"It doesn't work now","msgtype":"m.text"},"ts":1420466405000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it \"works\", but not really","msgtype":"m.text"},"ts":1420466406000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Some people are trying to make it work","msgtype":"m.text"},"ts":1420466413000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I still don't see the point","msgtype":"m.text"},"ts":1420466420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right now, in Safari for example, if you subclassed an object \"the old fashioned way\", you'd have the right prototype, but the C++ object would not be the right type, and would not be initialized","msgtype":"m.text"},"ts":1420466473000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"https://gist.github.com/hemanth/e6bb66141101b52a76fe","msgtype":"m.text"},"ts":1420466486000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"so, if you tried to access any properties from the superclass, it would throw and that would suck","msgtype":"m.text"},"ts":1420466487000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"native code can't be accessed yet...hrrm","msgtype":"m.text"},"ts":1420466509000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"DOM should catchup with ES6","msgtype":"m.text"},"ts":1420466515000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Why","msgtype":"m.text"},"ts":1420466531000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So that we can extends them ?","msgtype":"m.text"},"ts":1420466550000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"well you definitely want to be able to extend builtin classes, which you can't do right now","msgtype":"m.text"},"ts":1420466579000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"and if you can extend Array, why not NodeList","msgtype":"m.text"},"ts":1420466590000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"or one of the Matrix classes","msgtype":"m.text"},"ts":1420466600000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Why","msgtype":"m.text"},"ts":1420466630000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"caitp-, but, if the class has createdCallback method and if I do a document.registerElement it works just like any other custom element","msgtype":"m.text"},"ts":1420466632000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"because if you can't, that's really weird ;) unless tc39 introduces a concept of \"final\" classes, which would help explain the confusing behaviour better","msgtype":"m.text"},"ts":1420466720000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-, started with a silly node module  extending Array -> https://github.com/hemanth/node-arey/blob/master/index-es6.js ;)","msgtype":"m.text"},"ts":1420466765000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"yeahhhhh that doesn't quite work the way you expect though :(","msgtype":"m.text"},"ts":1420466786000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"which? the custom element or the node module or both?!","msgtype":"m.text"},"ts":1420466815000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: see recent blink-dev discussion and perhaps also on es-discuss with respect to subclassing","msgtype":"m.text"},"ts":1420466816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and in all engines, Array.isArray() would fail for it, which it technically shouldn't","msgtype":"m.text"},"ts":1420466818000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"hemanth: ES6 needs to solve some issues and seems to be opting out at the last minute :-(","msgtype":"m.text"},"ts":1420466840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: https://bugzilla.mozilla.org/show_bug.cgi?id=1117172 lists some of the things nobody is decided on","msgtype":"m.text"},"ts":1420466866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: the reason you can pass it to registerElement is because the registerElement implementation looks at the passed object's prototype property, bit of a hack","msgtype":"m.text"},"ts":1420466917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ha ha, it would fail if I do a new Img() on register after extending :/","msgtype":"m.text"},"ts":1420467075000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"annevk, Do you think class is not a goof feature of ES6? I have many against it and only few pro","msgtype":"m.text"},"ts":1420467109000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: the problem is that TC39 thought they were going to explain all of DOM and then they didn't","msgtype":"m.text"},"ts":1420467123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: I don't know","msgtype":"m.text"},"ts":1420467152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1420467155000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"it's a bit hard","msgtype":"m.text"},"ts":1420467163000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"hemanth: but the syntax you used above needs to work at some point, we're trying to figure out how","msgtype":"m.text"},"ts":1420467168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk,if I extend a HTMLSpanElement element it can set it's textContent, but for an ImageElement, I can't set it's src","msgtype":"m.text"},"ts":1420467233000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"it would cool to have a document.deRegisterElement ;) ? ( or is it dumb )","msgtype":"m.text"},"ts":1420467470000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: not even if you use the <img is> construct?","msgtype":"m.text"},"ts":1420467475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: there's a ton of problems though, none of this was designed with extensibility in mind","msgtype":"m.text"},"ts":1420467563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I get an Illegal construct","msgtype":"m.text"},"ts":1420467617000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: what would deRegisterElement do?","msgtype":"m.text"},"ts":1420467622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: it might be interesting to have more registry primitives though, agreed, so you can more completely control it","msgtype":"m.text"},"ts":1420467641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you'll get an illegal construct if you subclass Map and call super() too","msgtype":"m.text"},"ts":1420467644000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"did not try  <img is=\"\"> thing","msgtype":"m.text"},"ts":1420467644000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: oh yeah, actual ES6 subclassing does not work yet in any browser","msgtype":"m.text"},"ts":1420467679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp-, hrrmm phew..","msgtype":"m.text"},"ts":1420467679000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: because it's not defined per above","msgtype":"m.text"},"ts":1420467691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it \"sort of\" works for user-defined classes","msgtype":"m.text"},"ts":1420467702000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"annevk, so that I can register element with the same name with functionality changed dynamically?","msgtype":"m.text"},"ts":1420467717000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"annevk, I'm using 6to5 heh heh, does IE support it?","msgtype":"m.text"},"ts":1420467726000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"that was w.r.t deRegisterElement","msgtype":"m.text"},"ts":1420467746000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: as per caitp- the only subclassing that works is of your own classes, you can't subclass builtins or platform objects","msgtype":"m.text"},"ts":1420467769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as of now we can't do a registerElement('cat-say'); twice","msgtype":"m.text"},"ts":1420467773000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"chakra's class support is roughly equivalent to v8's right now","msgtype":"m.text"},"ts":1420467782000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"no builtins, no host objects","msgtype":"m.text"},"ts":1420467789000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"Array is not an exotic object in ES6 right?","msgtype":"m.text"},"ts":1420467817000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"it is","msgtype":"m.text"},"ts":1420467822000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-, no builtins, no host objects as per the spec or the current implementation ?","msgtype":"m.text"},"ts":1420467854000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"the current implementation... per dmitry's comments, the spec doesn't really do an adequate job of explaining how it can/should work for DOM stuff","msgtype":"m.text"},"ts":1420467886000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"it could possibly work for builtins (but doesn't anywhere yet)","msgtype":"m.text"},"ts":1420467897000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"oh, ok","msgtype":"m.text"},"ts":1420467987000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"class Fetch extends XMLHttpRequest() {} #lolz","msgtype":"m.text"},"ts":1420468039000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"the issues are about allocation of the object (especially for DOM objects), about passing arguments to the superconstructor (arbitrary arguments) --- DOM objects don't really have callable constructors right now, there are a few other issues","msgtype":"m.text"},"ts":1420468056000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"well, XHR does have a callable constructor, not counting that :>","msgtype":"m.text"},"ts":1420468137000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"heh heh","msgtype":"m.text"},"ts":1420468188000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"lot of this was discussed at https://groups.google.com/forum/#!topic/v8-users/bwEPA3vcscg","msgtype":"m.text"},"ts":1420468273000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"reading...","msgtype":"m.text"},"ts":1420468739000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"I think a lot of posters in that thread failed to CC v8-users and kept it to blink-dev, might be better to read the blink-dev version :p","msgtype":"m.text"},"ts":1420469025000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"anyways, people are working on it, it's just not there yet","msgtype":"m.text"},"ts":1420469037000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: the problem is that Google Groups does not accept posts from members that are not subscribed, even if they are subscribed to some other group and are not spammers there","msgtype":"m.text"},"ts":1420470340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1420470356000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: so e.g. my posts would make it through to blink-dev, but not elsewhere","msgtype":"m.text"},"ts":1420470359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"needs some nom noms","msgtype":"m.emote"},"ts":1420470665000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"https://github.com/google/end-to-end/wiki/Threat-model \"we discovered that Chrome Extensions can also use chrome.tabs.captureVisibleTab to take a screenshot of current tab in any browser window\"","msgtype":"m.text"},"ts":1420472962000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that seems like not such a great feature","msgtype":"m.text"},"ts":1420472981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what would you expect this to do: http://jsfiddle.net/n8rt8saL/","msgtype":"m.text"},"ts":1420473333000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"^--- annevk, you'd probably be good at that one","msgtype":"m.text"},"ts":1420473363000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26431","msgtype":"m.text"},"ts":1420473408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chromium decides to rewrite 1.2 to 1.0.0.2, while other browsers I have available don't :< I feel like that's not right","msgtype":"m.text"},"ts":1420473409000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"MikeSmith: installing extensions you don't trust seems like a losing game","msgtype":"m.text"},"ts":1420473633000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's kind of not fun :(","msgtype":"m.text"},"ts":1420473715000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"jgraham: yeah I guess given how extensions work and there's a lot more invasive things than that a malicious extension could do","msgtype":"m.text"},"ts":1420473856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but what if you can't visit that shady looking gambling/smut/whatever website without installing the shady extension which is not vetted by anyone as being trustworthy?","msgtype":"m.text"},"ts":1420474293000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think the problem is more normally that you visit your totally trustworthy banking site having installed an extension / native app / whatever that you mistakenly believed was trustworthy (e.g. because you had no means to verify it wasn't)","msgtype":"m.text"},"ts":1420474502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"putting the onus of deciding who to trust on users is problematic because a lot of users don't know that it's even something to think about :(","msgtype":"m.text"},"ts":1420474585000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I wonder if Google will standardize the protocols used by http://chrome.blogspot.ch/2015/01/introducing-google-cast-for-audio.html","msgtype":"m.text"},"ts":1420474743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and even when you're dealing with shady sites, grandpa has an incentive to gamble on horse racing,  he might not have an incentive to think about \"what will this application be able to do, what data of mine does it have, etc\"","msgtype":"m.text"},"ts":1420474746000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: so far Chromecast has been a very closed device.","msgtype":"m.text"},"ts":1420493071000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: but I think it's worth asking our standards-friendly friends at Google to see if there's anything they can do","msgtype":"m.text"},"ts":1420493130000,"senderName":"roc","senderId":"roc@irc"}
]