[
{"content":{"body":"hsivonen: ^","msgtype":"m.text"},"ts":1413075695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: added a bunch of README.md files","msgtype":"m.text"},"ts":1413109840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hey so for URL should we just drop the canonicalization tests from the wpt test suite or is what's in there now OK (I mean after the cleanup you did)","msgtype":"m.text"},"ts":1413110951000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: hmm I missed those","msgtype":"m.text"},"ts":1413111591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what is canonicalization testing? just serializing?","msgtype":"m.text"},"ts":1413111608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah it's only relevant to serialization afaict","msgtype":"m.text"},"ts":1413111814000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess we should at least rename it then","msgtype":"m.text"},"ts":1413111835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: we might at some point define a normalization/canonicalization algorithm I suppose that does certain things","msgtype":"m.text"},"ts":1413111855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: are those tests checking anything that's actually specified in the spec?","msgtype":"m.text"},"ts":1413112045000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: looking","msgtype":"m.text"},"ts":1413112158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what tests are you referring to exactly?","msgtype":"m.text"},"ts":1413112213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the ones you cleaned up in https://github.com/w3c/web-platform-tests/commit/3c5a8de5b0cd49033fd6ef0954cc802b7682c769","msgtype":"m.text"},"ts":1413112320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh yes, they are","msgtype":"m.text"},"ts":1413112340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK good","msgtype":"m.text"},"ts":1413112352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I was confused","msgtype":"m.text"},"ts":1413112370000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Compared to RFC 3986 URL parsers in browsers do a fair bit of \"normalization\" / \"canonicalization\" right in the parser","msgtype":"m.text"},"ts":1413112407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. something like lowercasing the scheme or the domain","msgtype":"m.text"},"ts":1413112417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: if I update the README file of the URL tests, can I do that without PR?","msgtype":"m.text"},"ts":1413112712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah sure","msgtype":"m.text"},"ts":1413112798000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: btw I guess it could be argued that RFC 3986 does actually implicitly deal with normalization/canonicalization by e.g., saying that the host and scheme should be compared case-insensitively","msgtype":"m.text"},"ts":1413112900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: though of course it doesn't specify parsing per se","msgtype":"m.text"},"ts":1413112958000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it also says %AA and %aa are identical, but it does not say what you have to transmit to the server based on what input","msgtype":"m.text"},"ts":1413113113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1413113133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so you can say HTTP is equal to hTTp when it's a scheme, but that does not answer what e.g. .protocol will return","msgtype":"m.text"},"ts":1413113160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: we could of course assume the parser does none of fixing up and instead define what needs to happen at all the end points","msgtype":"m.text"},"ts":1413113198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, I see now","msgtype":"m.text"},"ts":1413113200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that seems less straightforward (it's kind of what CSS sometimes does, and it's a bit annoying when defining the CSSOM)","msgtype":"m.text"},"ts":1413113228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: around?","msgtype":"m.text"},"ts":1413123678000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Possible problem with the XHR spec","msgtype":"m.text"},"ts":1413123760000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Compare it with the w3c spec","msgtype":"m.text"},"ts":1413124087000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"http://www.w3.org/TR/XMLHttpRequest2/#the-abort-method","msgtype":"m.text"},"ts":1413124088000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"if you see step 3, it also removes tasks in the DOM task queue related to the XHR object","msgtype":"m.text"},"ts":1413124116000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"the WHATWG spec only says that the fetch algorithm should be terminated","msgtype":"m.text"},"ts":1413124162000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"which doesn't terminate any queued load events","msgtype":"m.text"},"ts":1413124173000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"eg lets say the XHR object changes state to LOADING","msgtype":"m.text"},"ts":1413124208000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"and in the readystatechange handler, we invoke abort()","msgtype":"m.text"},"ts":1413124229000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"however, before doing so, we perform a heavy computation","msgtype":"m.text"},"ts":1413124244000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so that the XHR finishes loading and queues a https://xhr.spec.whatwg.org/#handle-response-end-of-file event to the queue","msgtype":"m.text"},"ts":1413124296000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"now we do abort()","msgtype":"m.text"},"ts":1413124310000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"changing the state to unsent","msgtype":"m.text"},"ts":1413124314000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"after abort(), within the same handler, we call open() and send() again","msgtype":"m.text"},"ts":1413124335000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"that response-end-of-file event for the previous file will be processed after this","msgtype":"m.text"},"ts":1413124384000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so we'll get the end of the previous file instead of the new file","msgtype":"m.text"},"ts":1413124398000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"is it possible to have an arbitrary domain forwarding all email to Gmail in the normal way through Postfix nowadays? My domain seems to constantly get IP blocked by Gmail beause of an \"unusual rate of spam\"","msgtype":"m.text"},"ts":1413124575000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well quit spamming, then!","msgtype":"m.text"},"ts":1413126215000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: but but but I don't send anything from that SMTP server!","msgtype":"m.text"},"ts":1413127322000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well quit anti-spamming, then!","msgtype":"m.text"},"ts":1413127344000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"bah!","msgtype":"m.text"},"ts":1413127379000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Manishearth: hmm, file a bug?","msgtype":"m.text"},"ts":1413130207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll do that, but do you think it's an issue or did I misinterpret the spec?","msgtype":"m.text"},"ts":1413130372000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(probably tomorrow)","msgtype":"m.text"},"ts":1413130380000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1413130925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there any other spec that has a bunch of methods that do effectively the same thing?","msgtype":"m.text"},"ts":1413148460000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"terinjokes: these are quite similar: https://fetch.spec.whatwg.org/#body","msgtype":"m.text"},"ts":1413148784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed, and what I was thinking \"must be the result of running <<logger>> with <<blah>>\"","msgtype":"m.text"},"ts":1413148846000,"senderName":"terinjokes","senderId":"terinjokes@irc"}
]