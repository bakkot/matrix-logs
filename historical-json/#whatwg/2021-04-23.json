[
{"content":{"body":"we have two specs that define the Keyboard object?","msgtype":"m.text"},"ts":1619150005000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wicg.github.io/keyboard-map/#keyboard-interface","msgtype":"m.text"},"ts":1619150010000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wicg.github.io/keyboard-lock/#keyboard-interface","msgtype":"m.text"},"ts":1619150017000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"neither is marked partial","msgtype":"m.text"},"ts":1619150028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Well WCIG things aren't specs :) But they also have the same editor so maybe they should talk to themselves","msgtype":"m.text"},"ts":1619168711000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: maybe it’s just a coincidence that the editors have exactly the same name","msgtype":"m.text"},"ts":1619169322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and both work for google","msgtype":"m.text"},"ts":1619169332000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s a big company","msgtype":"m.text"},"ts":1619169341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Giving them the same email address seems like an innovative solution to the problem that two people at a company sharing a name will have to spend roughly 10% of their waking hours redirecting email intended for the other one.","msgtype":"m.text"},"ts":1619170048000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the living standard page lags like hell","msgtype":"m.text"},"ts":1619173317000,"senderName":"milesrout","senderId":"milesrout@irc"},
{"content":{"body":"not a good sign tbh","msgtype":"m.text"},"ts":1619173327000,"senderName":"milesrout","senderId":"milesrout@irc"},
{"content":{"body":"JakeA: https://www.youtube.com/watch?v=CY-Zv0bmmRk wtffff","msgtype":"m.text"},"ts":1619188245000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There are parts of the spec that state this is impossible I am pretty sure","msgtype":"m.text"},"ts":1619188262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeahhhh but if you follow those parts of the spec a load of good stuff breaks I think","msgtype":"m.text"},"ts":1619188301000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"From memory, the spec says, when replacing a document in a history entry, other history entries using the same document should also be replaced. That's cool, as it makes reload work in a sensible way.","msgtype":"m.text"},"ts":1619188371000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"What's less clear is doing a bunch of in-page navigations, navigating away, then going back. I think, in that case, the spec suggests each history entry will end up with its own document, as they're no longer associated by a single document. That seems bad.","msgtype":"m.text"},"ts":1619188435000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, it says contiguous entries, because it can't conceive if non-contiguous document sharing...","msgtype":"m.text"},"ts":1619188438000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's nothing to make them contiguous if their document becomes null","msgtype":"m.text"},"ts":1619188463000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(in the current spec))","msgtype":"m.text"},"ts":1619188472000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1619188507000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Also the explicit use of \"contiguous\" is about window.name actually...","msgtype":"m.text"},"ts":1619188516000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In my PR, I've given session history entries a \"document state\", which can be shared between entries even if the document becomes null https://whatpr.org/html/6315/history.html#session-history-entry","msgtype":"m.text"},"ts":1619188578000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's also where we can put stuff like \"this was a srcdoc\" and \"this was created with a POST request\"","msgtype":"m.text"},"ts":1619188594000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess the \"document state\" becomes the definition of \"contiguous\" (even though it doesn't need to be contiguous)","msgtype":"m.text"},"ts":1619188684000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, that sounds nice... well, perhaps not nice, but an elegant way of speccing current behavior...","msgtype":"m.text"},"ts":1619188781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"haha yeah. I think that's the best we can hope for.","msgtype":"m.text"},"ts":1619188841000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm very excited about getting the POST case interoperable... that's a super user-visible source of divergence.","msgtype":"m.text"},"ts":1619188863000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, although folks might not run into it much since sites tend to redirect to avoid the prompt later. But the spec has to say something :D","msgtype":"m.text"},"ts":1619188966000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I still don't really know why `document.open()` downgrades it to GET, but I'm just going to roll with that","msgtype":"m.text"},"ts":1619188997000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"document.open() is like a history.pushState(), it does a same-document URL update.","msgtype":"m.text"},"ts":1619189409000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I didn't know that, since it's always to the same URL (yeah?)","msgtype":"m.text"},"ts":1619189538000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"No it's the URL of the caller","msgtype":"m.text"},"ts":1619189659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ohh wait, when is that different to the current URL?","msgtype":"m.text"},"ts":1619189723000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So if you do `const iframe = document.createElement('iframe'); document.body.append(iframe); frames[0].document.open('<img src=\"foo.jpg\">');` the `open()` call changes the URL from `about:blank` to the parent's URL, so that foo.jpg resolves as expected.","msgtype":"m.text"},"ts":1619189735000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hah!","msgtype":"m.text"},"ts":1619189782000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TIL","msgtype":"m.text"},"ts":1619189783000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Perhaps even more common is `const w = window.open(); w.document.open('...');`","msgtype":"m.text"},"ts":1619189789000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"document.open() is the worst.","msgtype":"m.text"},"ts":1619189807000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"haha yeah. But at least that bit makes sense to me now","msgtype":"m.text"},"ts":1619189823000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1619189829000,"senderName":"JakeA","senderId":"JakeA@irc"}
]