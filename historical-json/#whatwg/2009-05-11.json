[
{"content":{"body":"things I don't get: people saying that html5:property conflicts with rdfa:property","msgtype":"m.text"},"ts":1242004020000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"it explicitly doesn't afaics","msgtype":"m.text"},"ts":1242004021000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: if anyone can think of a better attribute name, i'm happy to change it, just to avoid the argument","msgtype":"m.text"},"ts":1242004080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"takkaria: but i agree that it's a bit weird for the rdfa guys to be complaining that html5 conflicts with their future plans","msgtype":"m.text"},"ts":1242004081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just like when i complained that rdfa conflicted with our future plans :-)","msgtype":"m.text"},"ts":1242004082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, I get that RDFa people want to use RDFa","msgtype":"m.text"},"ts":1242004260000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"but you can tell RDFa:property and html5:property apart using strchr(content, \":\")","msgtype":"m.text"},"ts":1242004320000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"shrugs and goes off to do other things","msgtype":"m.emote"},"ts":1242004321000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: RDFa property is not in their own namespace","msgtype":"m.text"},"ts":1242004440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, i misunderstood","msgtype":"m.text"},"ts":1242004441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"takkaria: they're saying they want to add new features that remove that distinction","msgtype":"m.text"},"ts":1242004500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does the spec say about a case where a form has two controls with the same name?","msgtype":"m.text"},"ts":1242024840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as I can see, it does not disallow a form to have multiple name instances","msgtype":"m.text"},"ts":1242024900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"parts of a form to have the same name","msgtype":"m.text"},"ts":1242024960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, ignore me","msgtype":"m.text"},"ts":1242025140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I realize there are of course cases where certain controls need to have the same name","msgtype":"m.text"},"ts":1242025200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, i think name is obsolete?","msgtype":"m.text"},"ts":1242026280000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: I was meaning to refer to the name attribute on various form controls","msgtype":"m.text"},"ts":1242027900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: You're not allowed to rename property now, there's already two legacy implementations!","msgtype":"m.text"},"ts":1242029820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1242029880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't think of any names other than \"key\"","msgtype":"m.emote"},"ts":1242029940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: the microdata solution and the <dl> example gives more reason to introduce <di> (you duplicate the <dt> content in <dd><meta>)","msgtype":"m.text"},"ts":1242030000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah, i did notice that this made <di> have a reason for being","msgtype":"m.text"},"ts":1242030060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was hoping no-one else would notice too :-P","msgtype":"m.text"},"ts":1242030061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"replies :)","msgtype":"m.emote"},"ts":1242030062000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: will <link rel=\"alternate stylesheet\" ...> and <link rel=\"alternate-stylesheet\"> produce the same RDF output?","msgtype":"m.text"},"ts":1242031020000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"s/\">/\" ...>/","msgtype":"m.text"},"ts":1242031080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"     <p property=\"com.damowmow.desc\">Siamese color-point.","msgtype":"m.text"},"ts":1242031140000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"     <img property=\"com.damowmow.img\" alt=\"\" src=\"/images/erwin.jpeg\">","msgtype":"m.text"},"ts":1242031141000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: was the img intended to be a child of the p?","msgtype":"m.text"},"ts":1242031142000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: item=\" \" generates two types in your impl (both empty string)","msgtype":"m.text"},"ts":1242031740000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Possibly fixed now","msgtype":"m.text"},"ts":1242032220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: yes, they'll produce the same output.","msgtype":"m.text"},"ts":1242032340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah so, unsurprisingly, \"I cannot live with\" has become a magic phrase","msgtype":"m.text"},"ts":1242032341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan_: not sure what to do about it. (so will <link rel=\"http://..../#alternate-stylesheet\">)","msgtype":"m.text"},"ts":1242032342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: (true)","msgtype":"m.text"},"ts":1242032400000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"maybe it's not a problem","msgtype":"m.text"},"ts":1242032460000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i think it is","msgtype":"m.text"},"ts":1242032461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: yep, cool","msgtype":"m.text"},"ts":1242032462000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"but i don't know what to do about it","msgtype":"m.text"},"ts":1242032463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"short of making those explicitly non-conforming, but even then","msgtype":"m.text"},"ts":1242032464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can you produce a URL that cannot be produced otherwise?","msgtype":"m.text"},"ts":1242032520000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"not as far as i can tell","msgtype":"m.text"},"ts":1242032521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"#alternate stylesheet","msgtype":"m.text"},"ts":1242032522000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"with a space :)","msgtype":"m.text"},"ts":1242032523000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"#ALTERNATE-STYLESHEET","msgtype":"m.text"},"ts":1242032640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: heh","msgtype":"m.text"},"ts":1242032641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: you can still do that as a url, right?","msgtype":"m.text"},"ts":1242032642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No, because they're lowercased first","msgtype":"m.text"},"ts":1242032700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I think)","msgtype":"m.text"},"ts":1242032701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: urls are? that's a problem if so","msgtype":"m.text"},"ts":1242032760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't intend urls to be lowercased","msgtype":"m.text"},"ts":1242032761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"split the value of the element's rel attribute on spaces, obtaining list of tokens.  Convert each token in list of tokens to lowercase.\"","msgtype":"m.text"},"ts":1242032820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: BTW, as a general comment it is rather confusing when the spec uses \"lowercase\" to mean \"ascii only lowercase\"","msgtype":"m.text"},"ts":1242032821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I know it is defined and there is alink and everything, but it is still confusing)","msgtype":"m.text"},"ts":1242032822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: file a bug, i can change that terminology easily enough","msgtype":"m.text"},"ts":1242032880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders if he's badly confused about things","msgtype":"m.emote"},"ts":1242032881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: As far as I can see, rel=\"http://...\" will never produce any triples at all","msgtype":"m.text"},"ts":1242032882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because there's only \"For each token token in list of tokens that contains neither a U+003A COLON character (:) nor a U+002E FULL STOP character (.), generate the following triple:\")","msgtype":"m.text"},"ts":1242032940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just noticed that Philip`'s impl didn't generate a triple for urls","msgtype":"m.emote"},"ts":1242032941000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"notes that his implementation does not attempt to be perfectly correct","msgtype":"m.emote"},"ts":1242033000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but if there are things that are easy to fix then I can fix them)","msgtype":"m.text"},"ts":1242033001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: oh right, for rel=\"\" it's only values, i forgot","msgtype":"m.text"},"ts":1242033060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: ok, will use uppercase","msgtype":"m.text"},"ts":1242033061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"updates html5-elements","msgtype":"m.emote"},"ts":1242033540000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: done","msgtype":"m.text"},"ts":1242033541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"notes that the order is different in the Amanda examples, in Philip`'s impl","msgtype":"m.emote"},"ts":1242033900000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Order of hat?","msgtype":"m.text"},"ts":1242034080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Argh. \"what\"","msgtype":"m.text"},"ts":1242034140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the \"band\" and \"name\" properties","msgtype":"m.text"},"ts":1242034141000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"\"In this example, the outer item represents a person, and the inner one represents a band:\"","msgtype":"m.text"},"ts":1242034142000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and \"This example is the same as the previous one, but all the properties are separated from their items:\"","msgtype":"m.text"},"ts":1242034143000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: you could either move the second div to below the name paragraph or clarify that the order of the properties will be different","msgtype":"m.text"},"ts":1242034200000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Properties have no order","msgtype":"m.text"},"ts":1242034201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in the JSON version, at least)","msgtype":"m.text"},"ts":1242034202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What Philip` said","msgtype":"m.text"},"ts":1242034203000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1242034260000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"The output order is just an irrelevant artifact of the JS Object implementation and of the JSON serialiser","msgtype":"m.text"},"ts":1242034261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"At least I hope that is true because if if is, it's much easier to come up with nice API design","msgtype":"m.text"},"ts":1242034262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And if it's not, my implementation is wrong :)","msgtype":"m.text"},"ts":1242034320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the order of attributes in html is also supposed to be irrelevant, but browsers still have to represent them in the source order to plugins for web compat","msgtype":"m.text"},"ts":1242034380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1242034440000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Right. But hopefully this case is different","msgtype":"m.text"},"ts":1242034441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: The first example in the spec using 'getItem' looks a little broken","msgtype":"m.text"},"ts":1242034500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(at least in the multipage version)","msgtype":"m.text"},"ts":1242034501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's only different until people start to rely on the order of a popular implementation","msgtype":"m.text"},"ts":1242034502000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"because it does \"i < something\" instead of \"i &lt; something\"","msgtype":"m.text"},"ts":1242034503000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If all implementations implement it in the way the spec describes, they'll give the same order for the same input","msgtype":"m.text"},"ts":1242034560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so there's no problem","msgtype":"m.text"},"ts":1242034561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and it doesn't matter that different inputs give different orders)","msgtype":"m.text"},"ts":1242034562000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Actually I think I would prefer it if the DOM APIs were unordered","msgtype":"m.text"},"ts":1242034563000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hadn't really looked at those","msgtype":"m.emote"},"ts":1242034564000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and since the order is an implementation detail (though one that may be constrained by compatibility concerns), it can be ignored in the introduction section)","msgtype":"m.text"},"ts":1242034620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: You don't want to allow enumeration of properties?","msgtype":"m.text"},"ts":1242034621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: it's a problem for implementations that assume that the order is irrelevant and do optimzations that will change the order","msgtype":"m.text"},"ts":1242034622000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: Yeah, not sure what to do about enumeration","msgtype":"m.text"},"ts":1242034680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But having IndexGetter seems bad","msgtype":"m.text"},"ts":1242034681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since that just encourages people to rely on order","msgtype":"m.text"},"ts":1242034740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Having IndexGetter seems good, because it's a useful feature","msgtype":"m.text"},"ts":1242034741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and the spec could just require implementations to sort properties alphabetically, or whatever","msgtype":"m.text"},"ts":1242034742000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(enumeration seems very useful and as along as it is clearly stated that the order is arbitary, maybe it's not a problem)","msgtype":"m.text"},"ts":1242034743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: Why?","msgtype":"m.text"},"ts":1242034800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(is IndexGetter useful?)","msgtype":"m.text"},"ts":1242034801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Um, because I failed to understand what IndexGetter is","msgtype":"m.text"},"ts":1242034802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: sorting alphabetically would have worked but is too late for html attributes","msgtype":"m.text"},"ts":1242034803000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and I was just thinking of enumeration","msgtype":"m.text"},"ts":1242034804000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the collections are ordered in tree order","msgtype":"m.text"},"ts":1242034805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: still not too late for microdata :)","msgtype":"m.text"},"ts":1242034806000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: not sure what you mean about the divs earlier","msgtype":"m.text"},"ts":1242034860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Enforcing ordering is bad if you want to back the implementation with a hash table","msgtype":"m.text"},"ts":1242034861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: <div subject=\"amanda\" property=\"band\" item id=\"jazzband\"></div> starts the \"band\" property before seeing the \"name\" property","msgtype":"m.text"},"ts":1242034862000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: so the order is different from the previous example","msgtype":"m.text"},"ts":1242034863000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: collections are already ordered in the rest of the platform, so it won't need new code as far as i can tell","msgtype":"m.text"},"ts":1242034920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: hm, yeah, might be best to not have that change","msgtype":"m.text"},"ts":1242034921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: uppercased and fixed < issue","msgtype":"m.text"},"ts":1242034922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But this is something that non-browsers are likely to implement","msgtype":"m.text"},"ts":1242034923000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So having a requirement to be ordered also burdens them","msgtype":"m.text"},"ts":1242034980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Interoperability between non-browsers seems unimportant","msgtype":"m.text"},"ts":1242034981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: the dom api? i doubt it. why would they use that api? it's got all kinds of weird JSisms","msgtype":"m.text"},"ts":1242034982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since the problem is just when two browsers run one script that makes assumptions that are only valid in one","msgtype":"m.text"},"ts":1242034983000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"whereas it seems unlikely anyone will run the same code on two non-browser implementations and expect them to be identical","msgtype":"m.text"},"ts":1242035040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: I guess if it only applies to the DOM API then I can't really object. I don't want people to have the general idea that items are ordered collections of name:value pairs","msgtype":"m.text"},"ts":1242035041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/I/I just/","msgtype":"m.text"},"ts":1242035100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: maybe we should define some other api for other languages or something to prevent people from trying to implement it outside the dom","msgtype":"m.text"},"ts":1242035460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: or maybe if html5lib gets an api for it and we publicise that, people will try to duplicate that one and it won't be an issue","msgtype":"m.text"},"ts":1242035461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: i'm happy to put something in the spec if you think it'd help","msgtype":"m.text"},"ts":1242035520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Not worth worrying about at this point, I guess","msgtype":"m.text"},"ts":1242035521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1242035580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders whether the microdata solution will get bad press because of its name cf predefined class names vs microformats before","msgtype":"m.emote"},"ts":1242035581000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm happy to rename it if anyone has a better idea","msgtype":"m.text"},"ts":1242035760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wasn't really intending to call it \"microdata\", that's just what it is","msgtype":"m.text"},"ts":1242035761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HRDF?","msgtype":"m.text"},"ts":1242035880000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i.e. Hixie-RDF","msgtype":"m.text"},"ts":1242035881000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1242035940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not RDF per se","msgtype":"m.text"},"ts":1242035941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"any more than it is JSON or whatever","msgtype":"m.text"},"ts":1242036000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that doesn't really matter :)","msgtype":"m.text"},"ts":1242036001000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"it matters a little!","msgtype":"m.text"},"ts":1242036060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"FWIWW microdata seems like a totally fine name to me","msgtype":"m.text"},"ts":1242036061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't understand why it's micro","msgtype":"m.text"},"ts":1242036180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"tiny bits of data","msgtype":"m.text"},"ts":1242036181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders whether document.items and element.item will clash with web pages' scripts","msgtype":"m.emote"},"ts":1242036182000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: :-/ hope not, hard to know ahead of time though","msgtype":"m.text"},"ts":1242036183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But it could be big bits of data, and lots of them","msgtype":"m.text"},"ts":1242036184000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: they can't really be that big, while still being useful.","msgtype":"m.text"},"ts":1242036240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"granted there could be many","msgtype":"m.text"},"ts":1242036241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure how that stops them being small though :-)","msgtype":"m.text"},"ts":1242036242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I suppose the most prominent feature is that it's data embedded into the markup, but a term like \"embedded data\" doesn't sound great to me","msgtype":"m.text"},"ts":1242036243000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<html item>","msgtype":"m.text"},"ts":1242036244000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: Any data could be viewed as a collection of lots of small bits of data, so that's hardly unique to the microdata proposal :-)","msgtype":"m.text"},"ts":1242036300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i think it's primary feature is that it's easily extractable data while ignoring other content","msgtype":"m.text"},"ts":1242036301000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"so maybe \"Easily Extractable Data\" (EED)","msgtype":"m.text"},"ts":1242036360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: If that was the primary feature, you could use <script type=\"text/json\">easily extractable data in JSON form</script> which would be much easier","msgtype":"m.text"},"ts":1242036361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's more significant that it's mixed up with the markup","msgtype":"m.text"},"ts":1242036362000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: \"Embeeded Easily Extractable Data\" (EEED)","msgtype":"m.text"},"ts":1242036363000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"s/e/d//","msgtype":"m.text"},"ts":1242036420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1242036421000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"s#/##","msgtype":"m.text"},"ts":1242036422000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: i don't like naming things in a way that presumes that a design criteria was successfully met (\"easily\")","msgtype":"m.text"},"ts":1242036423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Call it Embedded Data With A Related Dom api, or Edward for short","msgtype":"m.text"},"ts":1242036480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: because too often i have seen technologies called something like that only to have failed at that goal, and it just makes them easy targets for jokes :-)","msgtype":"m.text"},"ts":1242036481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: heh","msgtype":"m.text"},"ts":1242036482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Edward is a good name :)","msgtype":"m.text"},"ts":1242036483000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"though the data-* stuff is also embedded data with a dom api","msgtype":"m.text"},"ts":1242036540000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Web Data","msgtype":"m.text"},"ts":1242036600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Semantic Web 2.0","msgtype":"m.text"},"ts":1242036900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"By the way, implementing the RDF/N3 output thing made me dislike prefixes, because I couldn't work out what prefixes to use","msgtype":"m.text"},"ts":1242036960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Searching for http://purl.org/dc/terms/ suggested that people use a random mixture of dcterms:, dct: and dc:","msgtype":"m.text"},"ts":1242036961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and I don't like having to make uneducated choices between such things","msgtype":"m.text"},"ts":1242037020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: randomize which prefix to use","msgtype":"m.text"},"ts":1242037021000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"prefixes are a disaster. When I'm forced to use them I intentionally mint new ones like \"a\", \"b\", \"c\", etc.","msgtype":"m.text"},"ts":1242037022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to prevent people from thinking they have special meanings.","msgtype":"m.text"},"ts":1242037023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think I will implement rdf output using rdflib (assuming I can work out how to use it). Hopefully that will give me magic random prefixes","msgtype":"m.text"},"ts":1242037140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders whether form controls with microdata was considered","msgtype":"m.emote"},"ts":1242037320000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I guess the conflict is between the viewpoint in which prefixes are just a syntactic shortcut (and so you can use whichever prefix you fancy, and there's no need to standardise them or have any conventions or design them carefully), and the viewpoint in which they're critical to human understanding of the data (since people think of them as being names with a colon in the middle, and try to use consistent meaningful prefixes, etc)","msgtype":"m.text"},"ts":1242037380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It'd be fine if it was all one way, or all the other way","msgtype":"m.text"},"ts":1242037381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: <input type=image src=foo property=bar>","msgtype":"m.text"},"ts":1242037500000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(e.g. if humans thought at that level of abstraction, or if humans never had to look at prefixes at all; or (the other way) if the prefixes really were just part of the name and were standardised etc)","msgtype":"m.text"},"ts":1242037501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: <input> always uses the textContent","msgtype":"m.text"},"ts":1242037502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: there were no use cases that needed form controls to be usefully linked into the microdata system","msgtype":"m.text"},"ts":1242037503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm sure someone can mint a use case for that :)","msgtype":"m.text"},"ts":1242037560000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"That could be a nice way of submitting structured data to a server","msgtype":"m.text"},"ts":1242037561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1242037620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"without having to come up with unique names for every single input control in your page, and reconstructing that back into a tree structure on the server","msgtype":"m.text"},"ts":1242037621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"user input rarely maps directly to structured data schemas","msgtype":"m.text"},"ts":1242037622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(particularly if the form controls are generated automatically, like in repetition templates)","msgtype":"m.text"},"ts":1242037680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: maybe you could solve the naming/RDFa conflict debate and solve the potential Web script incompatibility problem by prefixing all relevant attributes with something","msgtype":"m.text"},"ts":1242039000000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"any ideas?","msgtype":"m.text"},"ts":1242039180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"data- is taken :P","msgtype":"m.text"},"ts":1242039181000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1242039240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though data-* isn't much used yet so could be redesigned","msgtype":"m.text"},"ts":1242039241000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"not that there's anything wrong with data-*","msgtype":"m.text"},"ts":1242039242000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"\"rdf\"","msgtype":"m.text"},"ts":1242039360000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<div rdfitem><span rdfproperty=\"name\">, document.rdfItems, element.rdfContent etc","msgtype":"m.text"},"ts":1242039420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wonders if that is supposed to be a serious suggestion","msgtype":"m.emote"},"ts":1242039421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as noted before, this doesn't really have any more to do with rdf than json or anything else :-)","msgtype":"m.text"},"ts":1242039422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because it seems like a really bad idea :)","msgtype":"m.text"},"ts":1242039480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: as noted before, that only matters a little","msgtype":"m.text"},"ts":1242039481000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: why is it bad?","msgtype":"m.text"},"ts":1242039482000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: :-P","msgtype":"m.text"},"ts":1242039483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you really want prefixes it should be really short like md-property","msgtype":"m.text"},"ts":1242039540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Prefix all the names with µ","msgtype":"m.text"},"ts":1242039541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it matters enough, imho","msgtype":"m.text"},"ts":1242039542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: html attributes have to be ascii","msgtype":"m.text"},"ts":1242039543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"md-\" could work","msgtype":"m.text"},"ts":1242039544000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: (to make hsivonen happy)","msgtype":"m.text"},"ts":1242039545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though it's no shorter than \"rdf\" :)","msgtype":"m.text"},"ts":1242039546000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"md- is ugly","msgtype":"m.text"},"ts":1242039547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: Because this isn't a generic RDF serialisation and all dong things that irritate the RDF people even more will not help anyone","msgtype":"m.text"},"ts":1242039600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: Prefix them with org.whatwg.microdata-","msgtype":"m.text"},"ts":1242039601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1242039602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Plus it is silly to put rdf on a pedestal","msgtype":"m.text"},"ts":1242039603000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: \"and all dong things\"?","msgtype":"m.text"},"ts":1242039604000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"'s error-correcting parser fails","msgtype":"m.emote"},"ts":1242039660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: s/all dong/doing/","msgtype":"m.text"},"ts":1242039661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1242039662000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I guess I started a different clause","msgtype":"m.text"},"ts":1242039663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: md- is indeed ugly but anything longer than about 2-3 characters is irritating","msgtype":"m.text"},"ts":1242039664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"0 characters works for me :-)","msgtype":"m.text"},"ts":1242039720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would prefer no prefix, really","msgtype":"m.emote"},"ts":1242039721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is slightly scared about web compat","msgtype":"m.emote"},"ts":1242039722000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"cf formaction=\"\"","msgtype":"m.text"},"ts":1242039723000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Unintentional uses of the attributes won't cause UAs to misbehave","msgtype":"m.text"},"ts":1242039780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: i guess","msgtype":"m.text"},"ts":1242039781000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: let's address it when it's a problem","msgtype":"m.text"},"ts":1242039782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It seems really unlikely that anyone is using the attributes in just the way needed to produce spurious microdata","msgtype":"m.text"},"ts":1242039840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but it might make it hard to use on existing pages that already have <div id=\"item\"> or something","msgtype":"m.text"},"ts":1242039841000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(http://philip.html5.org/data/attr-count-pages-dotbot.txt suggests most of the attributes aren't used too frequently","msgtype":"m.text"},"ts":1242039842000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1242039900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: the concern is about scripts having document.items matching <div id=\"items\"> etc","msgtype":"m.text"},"ts":1242039901000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Oh, okay","msgtype":"m.text"},"ts":1242039960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so implementing the dom api might make existing pages to stop working","msgtype":"m.text"},"ts":1242039961000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"we can always make id=items overwrite .items","msgtype":"m.text"},"ts":1242040320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"id=\"items\" is about the 1209th most common value","msgtype":"m.text"},"ts":1242040620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(on 355 out of ~425K pages)","msgtype":"m.text"},"ts":1242040680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, intro section at http://www.whatwg.org/specs/web-apps/current-work/#microdata is written","msgtype":"m.text"},"ts":1242041040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't cover everything, and i'll add more examples later","msgtype":"m.text"},"ts":1242041100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it covers the basics","msgtype":"m.text"},"ts":1242041101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"favorite-color\" - urgh :-(","msgtype":"m.text"},"ts":1242041280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"A valid reversed DNS identifier is a string that consists of a series of IDNA labels in reverse order (i.e. starting with the top-level domain), the prefix of which, when reversed and converted to ASCII, corresponds to a registered domain.\"","msgtype":"m.text"},"ts":1242041400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but e.g. org.example.name is unlikely to correspond (directly) to a registered domain","msgtype":"m.text"},"ts":1242041401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since it'd be silly to register a subdomain for every single property you ever use)","msgtype":"m.text"},"ts":1242041460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1242041461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I might have missed the bit saying \"prefix\"","msgtype":"m.text"},"ts":1242041462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Seems a confusing definition since it's not at all clear what the prefix of \"org.example.name\" is","msgtype":"m.text"},"ts":1242041463000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Types are identified in three ways:\" - I only count two","msgtype":"m.text"},"ts":1242041520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"all the lists of ways you can identify things have \"predefined types\" commented out","msgtype":"m.text"},"ts":1242042000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"will fill that in later this week (maybe tomorrow)","msgtype":"m.text"},"ts":1242042001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure how to fix the reversed dns identifier definition to be easier to understand","msgtype":"m.text"},"ts":1242042060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bet time now","msgtype":"m.text"},"ts":1242042061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1242042062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi. is there a special tag which would help me to display page numbers, date, author, or filename on each page? can I use header/footer for this or is there something else? thanks.","msgtype":"m.text"},"ts":1242042120000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"Hish: you mean when printed?","msgtype":"m.text"},"ts":1242042240000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yes","msgtype":"m.text"},"ts":1242042360000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"Hish: i think you can do it with css but browser support is probably flaky","msgtype":"m.text"},"ts":1242042480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hish: position:fixed will repeat things on every page but might not be suitable for proper page headers","msgtype":"m.text"},"ts":1242042540000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hish: see printed media, generated content and css3","msgtype":"m.text"},"ts":1242042541000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"You might b e able to get it working using Prince","msgtype":"m.text"},"ts":1242042600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan_: thx. so the bottomline is that this is CSS related and there are no special tags for this.","msgtype":"m.text"},"ts":1242042601000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"Prince???","msgtype":"m.text"},"ts":1242042602000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"Prince is a piece of software that is used to generate the PDF version of the html5 spec","msgtype":"m.text"},"ts":1242042660000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"supports this kind of stuff","msgtype":"m.text"},"ts":1242042661000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Generally it's a HTML+CSS -> PDF converter","msgtype":"m.text"},"ts":1242042720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is it a proposal or an already working piece of code?","msgtype":"m.text"},"ts":1242042840000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"the latter","msgtype":"m.text"},"ts":1242042841000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"sorry. forget it. didn't read your last comment, zcorpan_","msgtype":"m.text"},"ts":1242042842000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"do you have a url?","msgtype":"m.text"},"ts":1242042900000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"http://www.princexml.com/","msgtype":"m.text"},"ts":1242043020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: \"This example creates a big list with a nested list for each item on the page, each with of all the property names used in that item./p>\" markup typo","msgtype":"m.text"},"ts":1242045900000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"a markup error that a validator wouldn't catch :(","msgtype":"m.text"},"ts":1242045960000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nor a spell-checker, presumably","msgtype":"m.text"},"ts":1242046020000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"But you'd catch it when reading the page","msgtype":"m.text"},"ts":1242046021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: after having done markup validation, you'd expect you would have caught all markup errors","msgtype":"m.text"},"ts":1242046080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"maybe a validator could issue a warning if there was a \">\" before an implied tag, or similar","msgtype":"m.text"},"ts":1242046260000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Your expectation would be wrong, however","msgtype":"m.text"},"ts":1242046261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"clearly","msgtype":"m.text"},"ts":1242046262000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i'd like to know if it's possible to make it right a bit more often, though","msgtype":"m.text"},"ts":1242046320000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wonders ho \"kind\" means something like \"property\"","msgtype":"m.emote"},"ts":1242046321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*how","msgtype":"m.text"},"ts":1242046322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"looks for synonyms","msgtype":"m.emote"},"ts":1242046380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"We could replace it with the \"realestate\" attribute","msgtype":"m.text"},"ts":1242046381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Since we already have a \"subject\" attribute, property could be renamed to \"predicate\"","msgtype":"m.text"},"ts":1242046440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Noooooooooooooooooooo","msgtype":"m.text"},"ts":1242046500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since the attribute is determining how the value is related to the item, it could be called \"rel\"","msgtype":"m.text"},"ts":1242046560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Tip 1 for writing a usable markup language: don't use natural language words that most native speakers of the natural langauge don't understand ","msgtype":"m.text"},"ts":1242046561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as part of the language","msgtype":"m.text"},"ts":1242046620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Everyone should know what predicates are! You can't even do higher-order logic without them","msgtype":"m.text"},"ts":1242046740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh noes!","msgtype":"m.text"},"ts":1242046741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"As gsnedders would say]","msgtype":"m.text"},"ts":1242046742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: your impl doesn't generate a triple for the <title>","msgtype":"m.text"},"ts":1242046920000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: See line 186 or thereabouts","msgtype":"m.text"},"ts":1242047040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"// TODO: title","msgtype":"m.text"},"ts":1242047041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"notes that RDF uses title.textContent while document.title uses just the <title>s child text nodes","msgtype":"m.emote"},"ts":1242047160000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: (Added title)","msgtype":"m.text"},"ts":1242047460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: i get <> dct:title \"HTML 5 microdata demo\" . regardless of what i write as input","msgtype":"m.text"},"ts":1242047580000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: That's because that's the first title element on the page","msgtype":"m.text"},"ts":1242047640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: maybe you could use an iframe?","msgtype":"m.text"},"ts":1242047641000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Then I'd have to figure out how to make jQuery give me elements from within that iframe instead of the current document","msgtype":"m.text"},"ts":1242047700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: you could replace title[0] with title[1]","msgtype":"m.text"},"ts":1242047760000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I'd prefer to be implementing what the spec says, so any bugs are in the demo setup rather than in the parser code","msgtype":"m.text"},"ts":1242047820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: btw http://simon.html5.org/tools/js/innerhtml-viewer/getInnerHTML.js has an ascii-lowercase function","msgtype":"m.text"},"ts":1242048060000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"function toAsciiLowerCase(input) {return input.replace(/[A-Z]/g, function(char) {return char.toLowerCase()})}","msgtype":"m.text"},"ts":1242048360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmph, '_:n2 c:org.w3.name \"HTML5\" .' isn't valid because it's not a proper QName","msgtype":"m.text"},"ts":1242048480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or something like that","msgtype":"m.text"},"ts":1242048540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.rdfabout.com/demo/validator/ complains \"Invalid token\" so I assume it's right and I'm wrong","msgtype":"m.text"},"ts":1242048541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wwonders how he got spidermonkey to fill up empty array elements with characters","msgtype":"m.emote"},"ts":1242048720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doing something like [\"a\", \"b\"].concat([\"c\",,\"d\"])","msgtype":"m.text"},"ts":1242048721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"N3 output should now be correcter","msgtype":"m.text"},"ts":1242049260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and conciser","msgtype":"m.text"},"ts":1242049320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"except for the bits that had to become verboser in order to be correcter","msgtype":"m.text"},"ts":1242049321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"c:org.w3.name is not a proper QName?","msgtype":"m.text"},"ts":1242049620000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"It's not a proper \"QName or something like that\", where the \"something\" is (([A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-�][\\-0-9A-Z_a-z·À-ÖØ-öø-ͽͿ-῿‌-‍‿-⁀⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-�]*)?:)?[A-Z_a-zÀ-ÖØ-öø-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-�][\\-0-9A-Z_a-z·À-ÖØ-öø-ͽͿ-῿‌-‍‿-⁀⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�𐀀-�]*","msgtype":"m.text"},"ts":1242049680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"according to http://www.w3.org/2000/10/swap/grammar/n3-report.html","msgtype":"m.text"},"ts":1242049681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so no dots","msgtype":"m.text"},"ts":1242049740000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"is audio element still around? wondered why it wasn't in microdata additions like img, object, video, & a are","msgtype":"m.text"},"ts":1242049741000,"senderName":"aja","senderId":"aja@irc"},
{"content":{"body":"it's still around","msgtype":"m.text"},"ts":1242049800000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"thought so","msgtype":"m.emote"},"ts":1242049801000,"senderName":"aja","senderId":"aja@irc"},
{"content":{"body":"zcorpan_: Lots of dots, but not \".\" in particular","msgtype":"m.text"},"ts":1242049802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aja: Sounds like an oversight","msgtype":"m.text"},"ts":1242049860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aja: Seems like it makes as much sense as <video> so probably an omisssion","msgtype":"m.text"},"ts":1242049861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"accidential omission","msgtype":"m.text"},"ts":1242049862000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can someone pls mention to Hixie......not gonna online rest of day","msgtype":"m.text"},"ts":1242049863000,"senderName":"aja","senderId":"aja@irc"},
{"content":{"body":"be online, that is","msgtype":"m.text"},"ts":1242049920000,"senderName":"aja","senderId":"aja@irc"},
{"content":{"body":"aja: You could email it somewhere","msgtype":"m.text"},"ts":1242049921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I guess Hixie will read the IRC logs anyway","msgtype":"m.text"},"ts":1242049922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k...will f/u if i dont see an update.....later all","msgtype":"m.text"},"ts":1242049980000,"senderName":"aja","senderId":"aja@irc"},
{"content":{"body":"Philip`: maybe you should not use any prefixes to prevent such bugs?","msgtype":"m.text"},"ts":1242050040000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: That would make it unnecessarily hard to read","msgtype":"m.text"},"ts":1242050041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Also, I don't care much about bugs - readability is more useful","msgtype":"m.text"},"ts":1242050160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"<[object Object]> c:about _:n0 .\" - hmm","msgtype":"m.text"},"ts":1242050460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's confusing that <span item><span item><span property=foo>bar</span></span></span> generates no properties","msgtype":"m.text"},"ts":1242052200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sees http://chatlogs.planetrdf.com/swig/2009-05-11.html#T10-27-03 has a few more HTML5-related comments","msgtype":"m.emote"},"ts":1242052740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Twitter really, really sucks for, well, as far as I can tell, for pretty much everything. But in particular for all the myriad types of communication where reasoned argument is needed","msgtype":"m.text"},"ts":1242053460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: for instance?","msgtype":"m.text"},"ts":1242053461000,"senderName":"fearphage","senderId":"fearphage@irc"},
{"content":{"body":"fearphage: you two should continue this discussion on twitter","msgtype":"m.text"},"ts":1242053580000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"you may have a point","msgtype":"m.text"},"ts":1242053581000,"senderName":"fearphage","senderId":"fearphage@irc"},
{"content":{"body":"fearphage: Ironically it is hard to explain on IRC for rather similar reasons. But look e.g. at rubys's titter page and then try to follow any of the threads backward","msgtype":"m.text"},"ts":1242053760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*twitter","msgtype":"m.text"},"ts":1242053820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And wonder if the medium is not distorting the message in a rahter harmful way, by allowing people to be irrational by enforced brevity","msgtype":"m.text"},"ts":1242053880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So that reasoned argument being replaced by pithy one-liners is the norm","msgtype":"m.text"},"ts":1242053881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and is totally expected and so unremarkable","msgtype":"m.text"},"ts":1242053882000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that's twitter's ui failing really. it should show threaded views of conversations","msgtype":"m.text"},"ts":1242054060000,"senderName":"fearphage","senderId":"fearphage@irc"},
{"content":{"body":"and not have a silly 140 char limit","msgtype":"m.text"},"ts":1242054180000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"It doesn't have a silly 140 char limit - it has a sensible 140 char limit","msgtype":"m.text"},"ts":1242054181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If it didn't have that limit then it would be a blog, and everyone has a blog already so there wouldn't be any point in it","msgtype":"m.text"},"ts":1242054240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Indeed. But the 140 character limit is both the distinguishing design feature and the reason it sucks","msgtype":"m.text"},"ts":1242054360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well that and the UI","msgtype":"m.text"},"ts":1242054361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But the UI problem is a distant decond","msgtype":"m.text"},"ts":1242054420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"second","msgtype":"m.text"},"ts":1242054421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if it sucks so much, you could come up with a competing alternative and make people switch and earn lots of money","msgtype":"m.text"},"ts":1242054422000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I don't deny that people like it. But people like taking heroin but that sucks too","msgtype":"m.text"},"ts":1242054480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I don't know what to do","msgtype":"m.text"},"ts":1242054481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Apart from maybe to ignore it","msgtype":"m.text"},"ts":1242054482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: give up and take heroin, then twitter about it","msgtype":"m.text"},"ts":1242054540000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"would maybe be nice to be able to give RDF/XML or n3 as input and convert it to html5 microdata","msgtype":"m.text"},"ts":1242054840000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Is that possible?","msgtype":"m.text"},"ts":1242054900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe not losslessly","msgtype":"m.text"},"ts":1242054960000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"And: Is that possible in general, or only in very limited situations e.g. where all the predicates are the xhtml/custom namespace?","msgtype":"m.text"},"ts":1242054961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Why is that useful?","msgtype":"m.text"},"ts":1242055020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"didn't say it would be useful, only maybe nice ","msgtype":"m.text"},"ts":1242055021000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"e.g. if you're familiar with microdata syntax but not rdf","msgtype":"m.text"},"ts":1242055080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<meta item id=\"n0\"> <meta subject=\"n0\" property=\"about\" content=\"http://subject/\"> <meta subject=\"n0\" property=\"http://predicate/\" content=\"value\">","msgtype":"m.text"},"ts":1242055140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Would that work?","msgtype":"m.text"},"ts":1242055141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"as a general way to encode (non-nested) triples","msgtype":"m.text"},"ts":1242055142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems useful to be able to write data using existing RDF vocabularies, so you can easily reuse all the work that's gone into defining them","msgtype":"m.text"},"ts":1242055200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how many are subscribed to www-archive?","msgtype":"m.text"},"ts":1242055380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"How many read it via web archives?","msgtype":"m.text"},"ts":1242055381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since that mode of usage is the reason for the group's existence, after all)","msgtype":"m.text"},"ts":1242055382000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, hmm, content=\"http://...\" won't work because that's not an absolute URL","msgtype":"m.text"},"ts":1242055440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Actually... Is it?","msgtype":"m.text"},"ts":1242055560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"If name is not an absolute URL, ...\" - how can it ever be an absolute URL? It's always just a string token","msgtype":"m.text"},"ts":1242055561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I can't tell whether (absolute) URLs are meant to be a type distinct from strings, or whether they're just any string that happens to resolve into itself with no errors when you use the URL resolution algorithm","msgtype":"m.text"},"ts":1242055680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thought the latter","msgtype":"m.emote"},"ts":1242055740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assumed the former, but I guess it must be the latter, but then I have no idea whether <span property=foo>http://google.com/</span> should be an RDF resource (<http://google.com/> in N3) or still just a string (\"http://google.com/\")","msgtype":"m.text"},"ts":1242055800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I guess a string","msgtype":"m.text"},"ts":1242055860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But clarity would be nice","msgtype":"m.text"},"ts":1242055861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It makes sense to me that any content in href/src/etc should be a resource, whereas any other content should just be a string","msgtype":"m.text"},"ts":1242055862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's what I assume","msgtype":"m.text"},"ts":1242055863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you make it a string then you lose the whole graphiness of RDF, which would be silly","msgtype":"m.text"},"ts":1242055864000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Wait","msgtype":"m.text"},"ts":1242055865000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No you don't, I'm confused again","msgtype":"m.text"},"ts":1242055866000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't know","msgtype":"m.emote"},"ts":1242055920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm sure the <span>http:// ought to be a string, because anything else is crazy","msgtype":"m.text"},"ts":1242055921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But it makes sense that if you want to make a link to another resource you have to say <a href=\"http://my.other.resource\">","msgtype":"m.text"},"ts":1242055922000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but property=\"http://...\" ought to be a URL, because anything else is crazy","msgtype":"m.text"},"ts":1242055923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and href=\"http://...\" ought to be a URL, because anything else is crazy","msgtype":"m.text"},"ts":1242055980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1242055981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so the spec must be wrong because it uses the same terminology for property and for values","msgtype":"m.text"},"ts":1242055982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wishes the spec called values \"values\" rather than \"property values\"","msgtype":"m.emote"},"ts":1242056040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: Does it? Where","msgtype":"m.text"},"ts":1242056100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1242056101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<meta item id=\"n0\"> <link subject=\"n0\" property=\"about\" href=\"http://subject/\"> <link subject=\"n0\" property=\"http://predicate/\" href=\"http://value/\"> <meta subject=\"n0\" property=\"http://predicate/\" content=\"value\"> should work, I think","msgtype":"m.text"},"ts":1242056520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though not in my implementation)","msgtype":"m.text"},"ts":1242056521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: Um...","msgtype":"m.text"},"ts":1242056580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, so it is necessary to keep tabs on where a property came from to determine if it is a url or a string that looks like a URL","msgtype":"m.text"},"ts":1242056581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm still just being confused","msgtype":"m.text"},"ts":1242056582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I have a bug there too, then","msgtype":"m.text"},"ts":1242056583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: This only really applies to the RDF serialization, right?","msgtype":"m.text"},"ts":1242056640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The json serialization seems to have data loss...","msgtype":"m.text"},"ts":1242056641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In order to produce RDF output (but not JSON), concept-property-value needs to remember whether it returns a URL or a string (which may or may not look like a URL)","msgtype":"m.text"},"ts":1242056642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and then you use <...> or \"...\" depending on which it is","msgtype":"m.text"},"ts":1242056643000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but for 'type' and 'name' you just have a string and look to see whether it looks sufficiently like an absolute URL to be treated like one","msgtype":"m.text"},"ts":1242056700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Is that a spec quote?","msgtype":"m.text"},"ts":1242056701000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"function looks_like_an_absolute_url(str) { return str.match(/^(([a-zA-Z][0-9a-zA-Z+\\-\\.]*:)\\/{0,2}[0-9a-zA-Z;\\/?:@&=+$\\.\\-_!~*'()%]+)?(#[0-9a-zA-Z;\\/?:@&=+$\\.\\-_!~*'()%]+)?$/); }","msgtype":"m.text"},"ts":1242056760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That'll do for me, I guess","msgtype":"m.text"},"ts":1242056761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: Is what a spec quote?","msgtype":"m.text"},"ts":1242056762000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"In order to produce RDF output...\"","msgtype":"m.text"},"ts":1242056763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Regardless of your answer, my answer is no","msgtype":"m.text"},"ts":1242056820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The spec doesn't say anything about this for the RDF output, because it ignores types entirely","msgtype":"m.text"},"ts":1242056821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"OK, so the spec is wrong here","msgtype":"m.text"},"ts":1242056822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In some sense","msgtype":"m.text"},"ts":1242056823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/wrong/incomplete/","msgtype":"m.text"},"ts":1242056880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"unless you implicitly read some typing in the bits where it says \"the value is an absolute URL\"","msgtype":"m.text"},"ts":1242056881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which I do, because that's sensible)","msgtype":"m.text"},"ts":1242056882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(yeha, I did that too)","msgtype":"m.text"},"ts":1242056883000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So, anyway, the spec should clarify that, but otherwise it seems like it's capable of representing arbitrary subject/predicate/object triples as long as you ignore all the extra bits like types and languages","msgtype":"m.text"},"ts":1242056940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so you could do an RDF-to-text/html converter","msgtype":"m.text"},"ts":1242056941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"isn't sure about types and names as urls","msgtype":"m.emote"},"ts":1242057000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh wait. I think it's OK","msgtype":"m.text"},"ts":1242057060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm being silly","msgtype":"m.text"},"ts":1242057061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Probably","msgtype":"m.text"},"ts":1242057062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how does RDF/XML distinguish between URLs and strings?","msgtype":"m.text"},"ts":1242057120000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"So: Any type or name that looks like a URL is a URL. Any value that somes from a URLish place is a URL but any value that comes from text is text","msgtype":"m.text"},"ts":1242057121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan_: <predicate rdf:resource=\"object\"/> vs <predicate>object</predicate>","msgtype":"m.text"},"ts":1242057420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: according to '<#n1> <#n2> <#n3> . <#n4> <#n5> \"#n6\" .' in http://www.rdfabout.com/demo/validator/","msgtype":"m.text"},"ts":1242057480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ok","msgtype":"m.text"},"ts":1242057660000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"The underlying triples","msgtype":"m.text"},"ts":1242057780000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":":n1 :n2 :n3 .","msgtype":"m.text"},"ts":1242057781000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":":n4 :n5 \"#n6\" .","msgtype":"m.text"},"ts":1242057782000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(In N3, the empty prefix is <#>)","msgtype":"m.text"},"ts":1242057840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(by default)","msgtype":"m.text"},"ts":1242057841000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"will someone send email about the url vs string issue?","msgtype":"m.text"},"ts":1242059820000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I will if no one else does, but not before I have had a serious attempt at implementing that part of the spec","msgtype":"m.text"},"ts":1242060060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which might be this evening but is more likely not to be","msgtype":"m.text"},"ts":1242060061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"should probably buy Lightroom at academic prices before he leaves school","msgtype":"m.emote"},"ts":1242060180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: You can still do that at university you realise?","msgtype":"m.text"},"ts":1242060181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: But if I'm not going to uni for a year, I then couldn't do it for a year :P","msgtype":"m.text"},"ts":1242060240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You could ask somebody still in school/university to buy it for you","msgtype":"m.text"},"ts":1242060241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is there a document somewhere that outlines XML Namespaces as helpful (as opposed to http://wiki.whatwg.org/wiki/Namespace_confusion ) ? Thought it'd be good to have data for both extreme cases, unless, of course, if Namespaces is 100% confusing and useless for all developers.","msgtype":"m.text"},"ts":1242060242000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"csarven: Namespaces helpful? That's blasphemy!","msgtype":"m.text"},"ts":1242060300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"csarven: You may have come to the wrong place :)","msgtype":"m.text"},"ts":1242060301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless I'm mistaking, the existing approach is hardly scientific. :)","msgtype":"m.text"},"ts":1242060302000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"is not aware of documents listing the benefits of namespaces over other approaches, but assumes there must be some somewhere","msgtype":"m.emote"},"ts":1242060360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(But I guess the TAG will have something about how they are wonderful somewhere)","msgtype":"m.text"},"ts":1242060361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/mistaking/mistaken","msgtype":"m.text"},"ts":1242060362000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"csarven: If I didn't have to go, I would probably argue with that statement :)","msgtype":"m.text"},"ts":1242060420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess the obvious advantages are that they make it possible to create unambiguous globally-unique names (using the DNS infrastructure to avoid conflicts between independent groups), that can be dereferenced to find related information about their meaning, and that can be expressed concisely in XML syntax in a way that's easy to read and write by hand but can still express arbitrarily complex arrangements of namespaced data","msgtype":"m.text"},"ts":1242060540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Also, colons are cute","msgtype":"m.text"},"ts":1242060541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"finds http://mailman.ic.ac.uk/pipermail/xml-dev/1999-January/008189.html","msgtype":"m.emote"},"ts":1242060600000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"That's, um, a lot of syntax","msgtype":"m.text"},"ts":1242060720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<?xml:begin-ns name=\"D\" urn=\"http://www.daisoft.com/schema-D\"?><D:baz></D:baz><?xml:end-ns name=\"D\"?>","msgtype":"m.text"},"ts":1242060780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"vs <D:baz xmlns:D=\"http://www.daisoft.com/schema-D\"></D:baz>","msgtype":"m.text"},"ts":1242060781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"XML Namespaces could have been much worse than it is :-)","msgtype":"m.text"},"ts":1242060840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Would I get yelled at if I started a Wiki page on 'Namespaces' which covers both pros and cons?","msgtype":"m.text"},"ts":1242060900000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"Not at all","msgtype":"m.text"},"ts":1242060901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"csarven: I think the current page is more to avoid making the same points over and over again about the conventional wisdom","msgtype":"m.text"},"ts":1242061080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders Is the decision for HTML5 based on http://wiki.whatwg.org/wiki/Namespace_confusion ? i.e., a subset of views on XML Namespaces","msgtype":"m.text"},"ts":1242061440000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"csarven: No","msgtype":"m.text"},"ts":1242061500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"There are non-confusion-related issues with Namespaces in text/html, like the inconsistency between text/html parsers and XML parsers when names contain colons, that make it less desirable too","msgtype":"m.text"},"ts":1242061560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's good. So, how was the decision made? Is there more evidence supporting the disadvantages of NS than advantages?","msgtype":"m.text"},"ts":1242061620000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"I'm just curious about the data gathered for both cases","msgtype":"m.text"},"ts":1242061621000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"wonders which decision is being discussed","msgtype":"m.emote"},"ts":1242061740000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Pardon me if I'm repeating/rehashing something which has been discussed, I don't wish to take people's time with this. Kindly point me to a URI which answers such questions.","msgtype":"m.text"},"ts":1242061741000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"updates his RDF output to be much less wrong","msgtype":"m.emote"},"ts":1242062400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"csarven: I don't think there's a URI giving the rationale","msgtype":"m.text"},"ts":1242063000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: \"_:n2 a <http://www.w3.org/1999/xhtml/custom#org.w3.spec> .\" - what's the \"a\"?","msgtype":"m.text"},"ts":1242063001000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Shorthand for <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>","msgtype":"m.text"},"ts":1242063060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1242063061000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Maybe rdf:type would be less confusing","msgtype":"m.text"},"ts":1242063062000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I'm assuming it was added to N3 (and Turtle) because they wanted it to be used","msgtype":"m.text"},"ts":1242063120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"are there more magic identifiers in n3?","msgtype":"m.text"},"ts":1242063240000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://www.w3.org/DesignIssues/Notation3.html","msgtype":"m.text"},"ts":1242063300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but http://www.dajobe.org/2004/01/turtle/ (sort of a subset of N3) only has 'a' and not the others","msgtype":"m.text"},"ts":1242063360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hopes those are the most proper specifications","msgtype":"m.emote"},"ts":1242063420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"csarven: When you say \"decision\", which one do you mean? (The decision to use full URIs / reverse domain labels instead of CURIEs for the microdata property attribute?)","msgtype":"m.text"},"ts":1242063480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"n3 is more complicated than i had thought","msgtype":"m.text"},"ts":1242063481000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"stops reading and goes on to do something different","msgtype":"m.emote"},"ts":1242063660000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip` Moreso where WHATWG stands with NS and how was that decision made i.e., based on which data? I'm only aware of http://wiki.whatwg.org/wiki/Namespace_confusion","msgtype":"m.text"},"ts":1242063780000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"namespaces aren't an end in themselves, though, they're an implementation detail for certain use cases","msgtype":"m.text"},"ts":1242063840000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"namespaces are explicitly used, e.g. for SVG and MathML content, the spec says those elements go in the right namespace","msgtype":"m.text"},"ts":1242063841000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"csarven: I don't think the WHATWG has a specific standing on Namespaces - sometimes they're considered to be appropriate, sometimes other solutions are considered to be better","msgtype":"m.text"},"ts":1242063900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"takkaria Philip` Thanks.","msgtype":"m.text"},"ts":1242064740000,"senderName":"csarven","senderId":"csarven@irc"},
{"content":{"body":"(However, I have heard rumours that XML Namespaces cause babies to grow horns and were the cause of World War 2, so to stay safe I think we should avoid them)","msgtype":"m.text"},"ts":1242064920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"rather dislikes uni of Edi for re-inventing email for the sake of applicants","msgtype":"m.emote"},"ts":1242065280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Maybe they didn't re-invent email, but invented it before it had actually been invented, and then stuck with their legacy system","msgtype":"m.text"},"ts":1242065340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, the serialised JSON output can be O(2^n) in size compared to the markup","msgtype":"m.text"},"ts":1242067920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<meta item id=\"n0\"> <meta subject=\"n0\" property=\"a b\" item id=\"n1\"> <meta subject=\"n1\" property=\"a b\" item id=\"n2\"> <meta subject=\"n2\" property=\"a b\" item id=\"n3\"> <meta subject=\"n3\" property=\"p\" content=\"x\"> etc","msgtype":"m.text"},"ts":1242067921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip - the \"space separated set\" feature of profile, class, rel (and property in the example you gave) attributes is quite powerful, and helps with more succinct expression of semantics.","msgtype":"m.text"},"ts":1242072060000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I think it's a consequence of content-centric design rather than syntax-centric (or even model-centric) design.","msgtype":"m.text"},"ts":1242072120000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hi. can anybody enlighten me regarding footnotes (http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#footnotes)? I understand the three approaches but when it comes to editing a document with long footnotes, then doing copy/paste the part with the <a href> link won't change the footnode content. any ideas?","msgtype":"m.text"},"ts":1242072180000,"senderName":"Hish","senderId":"Hish@irc"},
{"content":{"body":"wonders if anyone who has used rdflib is around and if so wheher they could point him to some simple instructions for creating a graph and serializing it","msgtype":"m.emote"},"ts":1242072300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Preferbly one that, unlike the officil documentation, doesn't require me to already understand the api","msgtype":"m.text"},"ts":1242072360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Read the source code - it's Python so it must be easy to read","msgtype":"m.text"},"ts":1242073920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"tantek: It would just be nice if it was possible to parse a page without being vulnerable to DOS attacks :-)","msgtype":"m.text"},"ts":1242073980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Not sure that reading the source will allow me to trivially work out how all the design elements are expected to fit together (which is basically the problem)","msgtype":"m.text"},"ts":1242074280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also: I just read the xml:base spec and oh boy do the authors hate conformance criteria","msgtype":"m.text"},"ts":1242074281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Maybe the source code contains comments giving high-level documentation of how all the design elements are expected to fit together","msgtype":"m.text"},"ts":1242074282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"although if it does, they'll probably be three years out of date and have no correspondence to the current code, and those comments won't exist anyway","msgtype":"m.text"},"ts":1242074340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so maybe that's not the best plan","msgtype":"m.text"},"ts":1242074341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"decides that in general it's impossible to serialise microdata as N3 without explicit blank nodes","msgtype":"m.emote"},"ts":1242074400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(even if you use the [...] syntax whenever possible)","msgtype":"m.text"},"ts":1242074401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"because it's possible to have two predicates using the same blank node, but impossible to represent that non-explicitly, as far as I can tell","msgtype":"m.text"},"ts":1242074460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.grauw.nl/blog/entry/513","msgtype":"m.text"},"ts":1242075900000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"So the only conceivable reason to remove namespaces is to spite RDFa, obviously","msgtype":"m.text"},"ts":1242076080000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Duh.","msgtype":"m.text"},"ts":1242076140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Given there are no docstrings anywhere, I have doubts about the number of comments in the code","msgtype":"m.text"},"ts":1242076200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm that is the same comment that Laurens posted at simonwillison.net. Unrelatedly, my comment there seems to have become trapped in the moderation queue. Or maybe it is a write only queue","msgtype":"m.text"},"ts":1242076320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does the html 5 definition of absolute url make any sense?","msgtype":"m.text"},"ts":1242077100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"An absolute url is one that resolves to itself","msgtype":"m.text"},"ts":1242077160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But resolving a url requires something to resolve it against which is not specified","msgtype":"m.text"},"ts":1242077161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: An absolute URL doesn't need anything to resolve it against","msgtype":"m.text"},"ts":1242077460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Would namespaces be less of a mess if tutorials used random strings for prefixes?","msgtype":"m.text"},"ts":1242077461000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: No","msgtype":"m.text"},"ts":1242077520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Right but the algorithm doesn't allow for that","msgtype":"m.text"},"ts":1242077700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"And the copy and paste thing is less relevant than you all seem to imply. First of all, it would take no more than ten minutes to ensure people understand what example foaf: means.\"","msgtype":"m.text"},"ts":1242077701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Oh boy","msgtype":"m.text"},"ts":1242077702000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: What are you quoting?","msgtype":"m.text"},"ts":1242077760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fifth comment on http://realtech.burningbird.net/semantic-web/semantic-web-issues-and-practices/holding-on-html5","msgtype":"m.text"},"ts":1242077820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Also interesting that RDFa chooses to ignore part of the CURIE spec","msgtype":"m.text"},"ts":1242077821000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Which part is that?","msgtype":"m.text"},"ts":1242078240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Without prefix","msgtype":"m.text"},"ts":1242078840000,"senderName":"Dashiva","senderId":"Dashiva@irc"}
]