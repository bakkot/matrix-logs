[
{"content":{"body":"is there a convenient site out there for doing cross-origin (and document.domain-joined origin) demonstration of behaviors?  or do I need to conjure up one of my own provision?","msgtype":"m.text"},"ts":1461631339000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Domenic: Sure, you've just expressed annoyance at the \"inlining\" Bikeshed does for some things, so I assumed you'd prefer the linking thing.","msgtype":"m.text"},"ts":1461631350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"something like http://software.hixie.ch/utilities/js/live-dom-viewer/ that lets me do testing on nested.software.hixie.ch as well, or so","msgtype":"m.text"},"ts":1461631383000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"rbyers: are you perhaps writing wpt tests for eventlistener options stuff?","msgtype":"m.text"},"ts":1461634283000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or maybe there is even some patches waiting for review ?","msgtype":"m.text"},"ts":1461634305000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug: Yes, sorry I haven't done it yet - been on my list, just been swamped with other stuff :-(","msgtype":"m.text"},"ts":1461634351000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1461634359000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Are you working on the Gecko impl and need tests?","msgtype":"m.text"},"ts":1461634360000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"baku is working on the impl","msgtype":"m.text"},"ts":1461634370000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right now","msgtype":"m.text"},"ts":1461634373000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, has patch for the dictionary (no passive handling or anything, just the dictionary)","msgtype":"m.text"},"ts":1461634392000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and I was wondering if we already have good test coverage","msgtype":"m.text"},"ts":1461634402000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I've got management crap occupying my time until Thursday but could make it my top priority then.","msgtype":"m.text"},"ts":1461634410000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"We've got blink tests of course, still working on our WPT pipeline/process to avoid the test duplication...","msgtype":"m.text"},"ts":1461634426000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"(had a good f2f chat with jdm@ and other Moz folks in Toronto a week ago about this)","msgtype":"m.text"},"ts":1461634454000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"I think I can ask him to write tests","msgtype":"m.text"},"ts":1461634495000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Our blink tests are here: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/LayoutTests/fast/events/eventlisteneroptions/&q=file:LayoutTests%20file:passive&sq=package:chromium&type=cs","msgtype":"m.text"},"ts":1461634498000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Oh right these are already testharness.js tests","msgtype":"m.text"},"ts":1461634524000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Perhaps all we need to do is upstream these","msgtype":"m.text"},"ts":1461634546000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"dtapuska is about to land the change for the key, so they'll change then obviously","msgtype":"m.text"},"ts":1461634560000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"that is about passive only I guess","msgtype":"m.text"},"ts":1461634595000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1461634691000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"looks like our tests have a few blinkisms in them, but shouldn't be hard to clean them up for WPT.  Maybe I can get to that sooner than Thursday - I'll do my best (I haven't landed anything in WPT yet myself - was actually looking forward to the forcing function to experience the review pain people are telling me about <grin>)","msgtype":"m.text"},"ts":1461634824000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rolls his own cross-domain testing scheme, in the absence of someone else setting up a nice live system","msgtype":"m.emote"},"ts":1461636305000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: Oh, I see, I misunderstood. Now that I get it, either solution sounds reasonable to me.","msgtype":"m.text"},"ts":1461636987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"'","msgtype":"m.text"},"ts":1461641525000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: rbyers: thoughts on https://github.com/whatwg/dom/issues/215?","msgtype":"m.text"},"ts":1461646035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: rbyers: delegation proposal seems quite nice, though making it fast might require bring some CSS selector tricks over to DOM","msgtype":"m.text"},"ts":1461646065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: I guess I should ping the other folks you mentioned instead, will do that","msgtype":"m.text"},"ts":1461646109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"performance is rather critical with event dispatch","msgtype":"m.text"},"ts":1461646214000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I'll try to look at that a bit later, like on Thursday. rather busy right now","msgtype":"m.text"},"ts":1461646248000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I couldn't understand the last comment in that bug though","msgtype":"m.text"},"ts":1461646299000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what (1) and (2) refer to","msgtype":"m.text"},"ts":1461646310000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: to my comment earlier, https://github.com/whatwg/dom/issues/215#issuecomment-213980467","msgtype":"m.text"},"ts":1461646398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: lists two strategies for implementing delegation, but one is rather suboptimal it turns out","msgtype":"m.text"},"ts":1461646416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: agreed that it's important, I guess the question is if it's better that the browser does it or have libraries emulate it all over in JavaScript, since that's what's happening now","msgtype":"m.text"},"ts":1461646459000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: happy to wait until Thursday day, there's no rush","msgtype":"m.text"},"ts":1461646474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what delegate: \"foo\" means","msgtype":"m.text"},"ts":1461646560000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: \"foo\" is a selector","msgtype":"m.text"},"ts":1461646645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it selects what","msgtype":"m.text"},"ts":1461646675000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"descendants ?","msgtype":"m.text"},"ts":1461646683000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah","msgtype":"m.text"},"ts":1461646688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: it's as if you registered the listener on descendants","msgtype":"m.text"},"ts":1461646703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so you don't have to worry about elements getting inserted and removed","msgtype":"m.text"},"ts":1461646743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1461646762000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder... whether that should be delegation or some kind of automatic registration. I guess it is the latter, if it means \"as if you registered the listener on descendants\"","msgtype":"m.text"},"ts":1461646801000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: then you'd also have to automatically deregister","msgtype":"m.text"},"ts":1461646901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: perhaps engines could implement it either way, not sure","msgtype":"m.text"},"ts":1461646966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a question is when to run the selector","msgtype":"m.text"},"ts":1461647030000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, I was thinking during dispatch","msgtype":"m.text"},"ts":1461647269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I guess at the start of dispatch would be most consistent, but that would require going through the parent chain twice","msgtype":"m.text"},"ts":1461647333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: but the alternative might require going through the parent chain many more times","msgtype":"m.text"},"ts":1461647359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gecko goes through the chain...hmm, 3 times. First creating the chain, then dispatch in default group (normal DOM dispatch) and then system group (for certain default handling and so)","msgtype":"m.text"},"ts":1461647436000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that iteration isn't slow","msgtype":"m.text"},"ts":1461647444000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but doing any specific operation on entries in the chain might slow things down quite a bit","msgtype":"m.text"},"ts":1461647467000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"would need to think about how to optimize this all","msgtype":"m.text"},"ts":1461647481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I'm too jetlagged now to think about optimizations :)","msgtype":"m.text"},"ts":1461647512000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: as I said, there's no rush, but it's appreciated 😊","msgtype":"m.text"},"ts":1461647564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Thanks for getting in touch. We've added your idea of supporting fixup option in the squash and merge feature to our internal Feature Request List so the team can see it. It might be something we support in the future, but we can't promise when it will happen.\"","msgtype":"m.text"},"ts":1461658842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rbyers: ok, since you have the tests in wpt form (or some similar) already, we decided to wait for you to upload those","msgtype":"m.text"},"ts":1461659288000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith: 日本語 is Japanese in Japanese, right?","msgtype":"m.text"},"ts":1461663146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I went with that for now, believing Wikipedia...","msgtype":"m.text"},"ts":1461664484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1461671077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I added a commit to the navigate-editorial branch but it's not showing up in the PR...","msgtype":"m.text"},"ts":1461671373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks at that branch","msgtype":"m.emote"},"ts":1461672744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: “more browsingContext”?","msgtype":"m.text"},"ts":1461672776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1461672790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems to be resolved now","msgtype":"m.text"},"ts":1461672816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1461672822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe I was hitting some cache issues","msgtype":"m.text"},"ts":1461672823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: given https://github.com/w3c/webappsec-subresource-integrity/issues/31#issuecomment-214691579 maybe I will try to make PR myself for upstreaming the integrity attribute","msgtype":"m.text"},"ts":1461673176000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cool, mkwst can probably help review","msgtype":"m.text"},"ts":1461673223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1461673243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I’ve been working on a flexibility polyfill, and I have most of the calculations complete, but I’m unsure when/how I’m supposed to calculate flex within flex. Here is an example of flex rendered via JS https://rawgit.com/10up/flexibility/release/2.0.0/test.row.html","msgtype":"m.text"},"ts":1461677067000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I’m a little unsure of what order I am supposed to run align-content, align-items, and when I should begin calculating flex within flex. Should flex within flex trigger a re-calc of the parent, or should I optimize the order to avoid this? Anyone know?","msgtype":"m.text"},"ts":1461677151000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"And here’s the control / native flexbox example https://rawgit.com/10up/flexibility/release/2.0.0/test.row.control.html","msgtype":"m.text"},"ts":1461677356000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"hober++ (re https://webkit.org/blog/6131/updating-our-prefixing-policy/)","msgtype":"m.text"},"ts":1461679464000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"et al","msgtype":"m.text"},"ts":1461679467000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"About fucking time","msgtype":"m.text"},"ts":1461680523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hober: Ms2ger is suggesting you edit your blog post to change the title to his suggestion just above","msgtype":"m.text"},"ts":1461680821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe he's angling for a job as head of PR at W3C","msgtype":"m.text"},"ts":1461681022000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm pretty sure Ms2ger would be able to disrupt the PR business :)","msgtype":"m.text"},"ts":1461681126000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"does it make sense to queue a microtask to update an attribute on a DOM object exposed in a worker thread?  that seems strange to me","msgtype":"m.text"},"ts":1461683024000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it doesn't not make sense, but it's not really typical either","msgtype":"m.text"},"ts":1461683521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we can just use queue a task here... I asked him to change it","msgtype":"m.text"},"ts":1461683546000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"MikeSmith miketaylr Ms2ger: :)","msgtype":"m.text"},"ts":1461684268000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober, if you're bored at Apple, I'd be happy to write some copy ;)","msgtype":"m.text"},"ts":1461684321000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)~","msgtype":"m.text"},"ts":1461684611000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Domenic: I'm going to refactor document.open() and window.open()","msgtype":"m.text"},"ts":1461686718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'm thinking of \"document open steps\" and \"window open steps\"","msgtype":"m.text"},"ts":1461686737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: let me know if you have any concerns","msgtype":"m.text"},"ts":1461686750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds reasonable. One thing I'd kind of like to fix is how document.open()s window-ish overload is in \"mutations\" or something in the IDL block and section structure.","msgtype":"m.text"},"ts":1461686899000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I was hoping that early in document.open() we could dispatch to either \"document open steps\" or \"window open steps\" based on the arguments","msgtype":"m.text"},"ts":1461686967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that could work. I was thinking of just moving the overload's dfn to a new section.","msgtype":"m.text"},"ts":1461687023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, maybe hmm","msgtype":"m.text"},"ts":1461687108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My main issue is all these algorithms invoking open() directly","msgtype":"m.text"},"ts":1461687141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: This should all be clear from the flex layout algorithm in the spec.","msgtype":"m.text"},"ts":1461687164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: created a branch document-open-steps with some WIP","msgtype":"m.text"},"ts":1461688417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: thanks, I’m still looking. Is this the right spot to be looking? https://www.w3.org/TR/css-flexbox-1/","msgtype":"m.text"},"ts":1461692044000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: you probably want the editor's draft, see link at the top","msgtype":"m.text"},"ts":1461692100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Will do https://drafts.csswg.org/css-flexbox/#box-model","msgtype":"m.text"},"ts":1461692110000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Remember, /TR/ stands for trash.","msgtype":"m.text"},"ts":1461692186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mumbles “technical report”...","msgtype":"m.emote"},"ts":1461692369000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: https://drafts.csswg.org/css-flexbox/#layout-algorithm to be specific","msgtype":"m.text"},"ts":1461692393000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Reading the rest of the spec helps you understand how to *use* Flexbox, but only the layout algo will actually tell you how it works.","msgtype":"m.text"},"ts":1461692415000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wonderful. I’m very close. I just got stuck once I needed to implement flex within flex.","msgtype":"m.text"},"ts":1461692478000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Important bit is to find the parts where the flex container tells the children to layout into some space.  Layout is very hierarchical - you find available space in the parent, then lay out children into that space, then the parent positions them and finds out its full dimensions, and reports back to *its* parent that its layout is done.","msgtype":"m.text"},"ts":1461692600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A quick tree-descent into the leaves, then a reverse walk back up finishing everything.","msgtype":"m.text"},"ts":1461692632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeap, it’s how much “lay out children into that space” I need to do before decending into the children for the same deal.","msgtype":"m.text"},"ts":1461692693000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"And the layout algo should explain that in detail. ^_^","msgtype":"m.text"},"ts":1461692737000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am looking. I would imagine it’s something like 9 to 9.4.","msgtype":"m.text"},"ts":1461692748000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hmmmmmm, the step numbering got broken and no longer continues thru the sections. >_<","msgtype":"m.text"},"ts":1461692874000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If a flex item is also flex, then I need to know that item’s main and cross size before laying out its children.","msgtype":"m.text"},"ts":1461692984000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: ping on speccing https://github.com/w3c/webcomponents/issues/468 for me :)","msgtype":"m.text"},"ts":1461696023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yup, was thinking about that when I saw the bug activity today. ^_^","msgtype":"m.text"},"ts":1461696038000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What form do you want that in, actually?","msgtype":"m.text"},"ts":1461696047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh never mind, you actuall provided that","msgtype":"m.text"},"ts":1461696080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'll slip it into scoping","msgtype":"m.text"},"ts":1461696087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1461696090000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Open to suggestions if you think my \"creates a custom user-agent stylesheet\" idea could use some tweaking","msgtype":"m.text"},"ts":1461696108000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I want it to be window scoped since custom element registries are, but not sure if that fits with CSS infrastructure","msgtype":"m.text"},"ts":1461696146000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"element's node document's window\" is I guess how you get from element -> window","msgtype":"m.text"},"ts":1461696173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: what is \"the default origin\"?","msgtype":"m.text"},"ts":1461696256000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: dunno","msgtype":"m.text"},"ts":1461696272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: from your post in https://github.com/whatwg/html/pull/1122#issuecomment-214757427","msgtype":"m.text"},"ts":1461696295000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ooh, the origin for fetching when none is specified is from the client","msgtype":"m.text"},"ts":1461696498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1461696516000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but yeah, it definitely seems something is broken in the workers/fetch/csp3 integration. Where the child-src CSP policies of the document/worker creating a worker should possibly block creating the worker but the way it is currently specced in csp3 we would end up using the CSP policies from the worker itself (which don't even exist yet before the worker is fetched)","msgtype":"m.text"},"ts":1461696791000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"TabAtkins: yo, what's the magic way to make <<color>> autolinks point to css-color-4 in bikeshed?","msgtype":"m.text"},"ts":1461707342000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"link-defaults doesn't seem to like \"spec:css-color-4; type:value; text:color\"","msgtype":"m.text"},"ts":1461707350000,"senderName":"miketaylr","senderId":"miketaylr@irc"}
]