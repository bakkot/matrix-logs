[
{"content":{"body":"seems some people commented on the article while I was out :)","msgtype":"m.text"},"ts":1231893060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1231893780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: what do i need to set [PrototypeRoot] on?","msgtype":"m.text"},"ts":1231901820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: do i need it on things like HTMLCollection or MediaError?","msgtype":"m.text"},"ts":1231901821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(things that i expect to have interface objects but that have no ancestors?)","msgtype":"m.text"},"ts":1231901822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: i'm not sure it makes sense to have ","msgtype":"m.text"},"ts":1231901940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[ImplementedOn=Node]","msgtype":"m.text"},"ts":1231901941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interface EventTarget","msgtype":"m.text"},"ts":1231901942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"things that have no ancestors, but which you expect will have descendants, and objects of which will also implement mixins","msgtype":"m.text"},"ts":1231901943000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"...given that EventTarget is implemented on many other objects","msgtype":"m.text"},"ts":1231901944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1231901945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, do you think it should be the other way around?","msgtype":"m.text"},"ts":1231901946000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't know that it can be either way around","msgtype":"m.text"},"ts":1231902000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mm","msgtype":"m.text"},"ts":1231902001000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"spec wise, it happens both ways","msgtype":"m.text"},"ts":1231902002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. EventTarget was defined after Node but before XMLHttpRequest","msgtype":"m.text"},"ts":1231902003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's implemented on both","msgtype":"m.text"},"ts":1231902004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(my history might be wrong there but you get the idea)","msgtype":"m.text"},"ts":1231902005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe it makes more sense to have something like PrototypeRoot","msgtype":"m.text"},"ts":1231902060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"i expect to have things say that they are implemented on me\"","msgtype":"m.text"},"ts":1231902061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe in fact it can replace PrototypeRoot, since you can work out if it's a _Root_ by seeing if it is, well, a root.","msgtype":"m.text"},"ts":1231902120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i may be talking nonsense.","msgtype":"m.text"},"ts":1231902121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: it appears i just set \"NoInterfaceObject\" on objects that i don't expect to have unique prototype objects or that i expect to have implemented on other objects","msgtype":"m.text"},"ts":1231902240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i also set it on interfaces that are to be implemented by the author)","msgtype":"m.text"},"ts":1231902241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not that they don't have unique prototype objects","msgtype":"m.text"},"ts":1231902242000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just that they aren't exposed through a property on the window object","msgtype":"m.text"},"ts":1231902243000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so it really just means \"don't put that property on the window object\"","msgtype":"m.text"},"ts":1231902300000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"[ImplementedOn] basically means it doesn't have a unique prototype object, no?","msgtype":"m.text"},"ts":1231902301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, lemme think a minute =)","msgtype":"m.text"},"ts":1231902420000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1231902421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[ImplementedOn] would cause properties from that interface to be in the prototype chain on a special mixin prototype object, that gathers all of the mixins together","msgtype":"m.text"},"ts":1231902480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so yes, there wouldn't be a unique prototype object","msgtype":"m.text"},"ts":1231902540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok so for those objects, i currently (also) set NoInterfaceObject","msgtype":"m.text"},"ts":1231902541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, that makes sense, because you otherwise would think you're affecting the prototype when you're not","msgtype":"m.text"},"ts":1231902542000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"does any browser expose EventTarget.prototype?","msgtype":"m.text"},"ts":1231902543000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and have it do what you might think it does?","msgtype":"m.text"},"ts":1231902600000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and i'm not sure that it's useful to set ImplementedOn= on them, since often those interfaces are implemented on multiple different objects, and that's why i have them as separate interfaces in the first place","msgtype":"m.text"},"ts":1231902601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have no idea","msgtype":"m.text"},"ts":1231902602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now i have no useful testable browsers in front of me","msgtype":"m.text"},"ts":1231902603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc, using [ImplementedOn] would cause fewer mixin prototype objects to exist","msgtype":"m.text"},"ts":1231902660000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well how do i say that NavigatorID is implemented on both HTML5's Navigator and Web Workers' Navigator?","msgtype":"m.text"},"ts":1231902720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(especially given that i don't want to mention workers in html5)","msgtype":"m.text"},"ts":1231902780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, that's a problem, i see","msgtype":"m.text"},"ts":1231902781000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't know for sure if the current prototype chain stuff required by web idl is acceptable to everyone","msgtype":"m.text"},"ts":1231902840000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"assuming it is, and that there is a good reason to have mixin prototype objects that are distinct from the \"host object mixin prototype objects\"...","msgtype":"m.text"},"ts":1231902841000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"... then would it make sense to also have a [Implements]?","msgtype":"m.text"},"ts":1231902842000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"to indicate the reverse of [ImplementedOn]?","msgtype":"m.text"},"ts":1231902843000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you know, you could just use inheritance","msgtype":"m.text"},"ts":1231902900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it would make the idl blocks strangely organisation-biased","msgtype":"m.text"},"ts":1231902901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'd rather have a totally separate mechanism for declaring it outside of an interface","msgtype":"m.text"},"ts":1231902902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. the way that a multimethod is declared independently of either interface in languages that have multimethods","msgtype":"m.text"},"ts":1231902903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or just have it in prose)","msgtype":"m.text"},"ts":1231902960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on a different note, is there say way to say \"i just want this interface to literally be implemented by that other interface in certain cases\"?","msgtype":"m.text"},"ts":1231902961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, so the downside of declaring that in prose is that you wouldn't be able to just use a tool that parses the idl and generates appropriate prototype chain code","msgtype":"m.text"},"ts":1231902962000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"e.g. WindowModal vs Window","msgtype":"m.text"},"ts":1231902963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically i want WindowModal to look exactly like Window, just with two additional attributes","msgtype":"m.text"},"ts":1231903020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"class name should be Window","msgtype":"m.text"},"ts":1231903021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"everything should look like it's a Window","msgtype":"m.text"},"ts":1231903022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just needs to have two additional attributes","msgtype":"m.text"},"ts":1231903023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1231903024000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"no, there's no way of doing that currently","msgtype":"m.text"},"ts":1231903025000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"there's never both a Window and a WindowModal","msgtype":"m.text"},"ts":1231903026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically the global object is one or the other","msgtype":"m.text"},"ts":1231903027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why not make WindowModal inherit from Window?","msgtype":"m.text"},"ts":1231903080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you don't want the prototypes set up that way?","msgtype":"m.text"},"ts":1231903081000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i don't want to expose the word WindowModal","msgtype":"m.text"},"ts":1231903082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor have any extra prototypes","msgtype":"m.text"},"ts":1231903083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a similar but not identical case: i have to split the definition of HTMLDocument into two, for various reasons, defined in different specs (or different chapters, at least).","msgtype":"m.text"},"ts":1231903084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do i say that the two IDL blocks should be treated as the same IDL block split in two?","msgtype":"m.text"},"ts":1231903140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for the WindowModal thing, inheritance sounds like the right solution.  if you don't want separate prototypes then i suppose something could be introduced to force it to be \"flattened\" into one, and to be able to control [[Class]].","msgtype":"m.text"},"ts":1231903200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that, or duplicate the interface and still have something that can control [[Class]]","msgtype":"m.text"},"ts":1231903260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"for the two IDL blocks, is this for the bgColor stuff etc.?","msgtype":"m.text"},"ts":1231903261000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1231903320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doublec (or anybody): do you have a local copy of the OMS PDF you could post somewhere, at least temporarily?","msgtype":"m.text"},"ts":1231903321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just mailed you these three topics as remineders","msgtype":"m.text"},"ts":1231903322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have to go eat","msgtype":"m.text"},"ts":1231903323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.openmediacommons.org/ doesn't seem to be responding","msgtype":"m.text"},"ts":1231903324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie, ok thanks","msgtype":"m.text"},"ts":1231903325000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"looks like i don't have any interfaces that should have PrototypeRoot, fwiw","msgtype":"m.text"},"ts":1231903440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith, yep","msgtype":"m.text"},"ts":1231903441000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"I'll get the url","msgtype":"m.text"},"ts":1231903442000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"Hixie, yeah i'd expect them to be in the DOM specs","msgtype":"m.text"},"ts":1231903443000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"EventTarget and Node seem like the only obvious ones","msgtype":"m.text"},"ts":1231903444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith, http://www.bluishcoder.co.nz/OMS-video-v0.9.pdf","msgtype":"m.text"},"ts":1231903500000,"senderName":"doublec","senderId":"doublec@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1231903501000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"no..","msgtype":"m.text"},"ts":1231903502000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"EventTarget isn't a prototyperoot","msgtype":"m.text"},"ts":1231903503000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Node is","msgtype":"m.text"},"ts":1231903504000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1231903505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1231903506000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1231903507000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doublec: thanks very much","msgtype":"m.text"},"ts":1231903508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because you want EventTarget to be one of the mixins","msgtype":"m.text"},"ts":1231903509000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1231903510000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have things that then get implemented by EventTarget","msgtype":"m.text"},"ts":1231903511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which confused me","msgtype":"m.text"},"ts":1231903512000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"RemoteEventTarget is implemented by anything that implements EventTarget","msgtype":"m.text"},"ts":1231903560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and right now has an ImplementedOn=EventTarget decorator","msgtype":"m.text"},"ts":1231903561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hope that doesn't confuse WebIDL too much!","msgtype":"m.text"},"ts":1231903562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that.. makes sense doesn't it?","msgtype":"m.text"},"ts":1231903563000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i hope so, i haven't read that part of webidl carefully","msgtype":"m.text"},"ts":1231903620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[ImplementedOn=A] interface B;   basically should just mean \"if a host object implements A, then it also implements B.\"","msgtype":"m.text"},"ts":1231903621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"perhaps i should write up at one point what's currently specced wrt prototype chains separately from Web IDL, so that the general idea can be reviewed more easily","msgtype":"m.text"},"ts":1231903622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"does it define where the mixins slide in on teh chain?","msgtype":"m.text"},"ts":1231903680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the most speculative part of the spec","msgtype":"m.text"},"ts":1231903681000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1231903682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes it does","msgtype":"m.text"},"ts":1231903683000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1231903684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then it should be fine","msgtype":"m.text"},"ts":1231903685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it defines something that no browser currently implements =)","msgtype":"m.text"},"ts":1231903686000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah well","msgtype":"m.text"},"ts":1231903687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right. going afk for food.","msgtype":"m.text"},"ts":1231903740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm probably a bit busy for web idl work over the next couple of weeks, so i'll probably not get to your requests until later","msgtype":"m.text"},"ts":1231903741000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1231903800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw i like the term \"WebIDLize\" :)","msgtype":"m.text"},"ts":1231904820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"just saw this about \"Updated Getter/Setter Syntax in IE8 RC 1\" on the IE Blog: http://blogs.msdn.com/ie/archive/2009/01/13/responding-to-change-updated-getter-setter-syntax-in-ie8-rc-1.aspx","msgtype":"m.text"},"ts":1231906440000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"JSON compatibility, DOM prototypes, \"embracing ECMAScript 3.1\"","msgtype":"m.text"},"ts":1231906680000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"Is there an implementation of OMS Video? How does it compare to Theora?","msgtype":"m.text"},"ts":1231918200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't think there are any implementations of OMS Video yet","msgtype":"m.text"},"ts":1231918680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But I would suspect that Sun is working on some kind of reference implementation","msgtype":"m.text"},"ts":1231918681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok.","msgtype":"m.text"},"ts":1231918740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"anyway, great to see that IBM's patents on arithmetic coding have been expiring lately. OMS and Dirac both use arithmetic coding.","msgtype":"m.text"},"ts":1231918741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I guess JPEGs will be Huffman coded forever due to backward compat anyway :-/","msgtype":"m.text"},"ts":1231918800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"two new TAG participants: John Kemp (Nokia) and Larry Masinter (Adobe)","msgtype":"m.text"},"ts":1231919040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1231919041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: btw, have you ever come across the \"Element “html” from namespace “http://www.w3.org/1999/xhtml” not allowed in this context.\" errors for your test files tests/html5full-html/valid/002.xhtml and so on ?","msgtype":"m.text"},"ts":1231919580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm trying to figure out if it's a local problem in my environment, or a known issue.","msgtype":"m.text"},"ts":1231919581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't see that here.","msgtype":"m.text"},"ts":1231919880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"But now I do see one unrelated test failure...","msgtype":"m.text"},"ts":1231919881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: hmm, maybe I should check out a fresh local copy and build from that","msgtype":"m.text"},"ts":1231920060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam: can i put [Optional] in [NamedConstructor] decorators, or should I just list the overloads?","msgtype":"m.text"},"ts":1231921500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.sans.org/top25errors/ contains errors relevant to the usual HTML/RSS/XML bozoness","msgtype":"m.text"},"ts":1231924020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"eyes http://trac.webkit.org/export/39885/trunk/LayoutTests/fast/forms/old-names.html suspiciously","msgtype":"m.emote"},"ts":1231924021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that looks uncanningly like a massive rathole of pain that i'm going to be forced down","msgtype":"m.text"},"ts":1231924080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: 3, 4, and 5 are all specific occurances of 2","msgtype":"m.text"},"ts":1231924200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: indeed.","msgtype":"m.text"},"ts":1231924201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: is there a reason why there's a separate parser pause flag instead of comparing script nesting to zero?","msgtype":"m.text"},"ts":1231924260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1231924320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't set it to true if the nesting is non-zero","msgtype":"m.text"},"ts":1231924321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you only set it to true once you run into one of hte situations where you're waiting for a pending script, iirc","msgtype":"m.text"},"ts":1231924322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then it stays true until you wind back down to false","msgtype":"m.text"},"ts":1231924323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1231924324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"back down to zero","msgtype":"m.text"},"ts":1231924380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is that something that's likely to stay or something that Opera and Apple asked you to rewrite?","msgtype":"m.text"},"ts":1231924381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this doesn't have anything to do with the issue you are aluding to","msgtype":"m.text"},"ts":1231924382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so likely to stay","msgtype":"m.text"},"ts":1231924383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. thanks","msgtype":"m.text"},"ts":1231924440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(the issue in question is to do with calling scripts in a document that isn't the active document, or in a document on which document.open() has been called)","msgtype":"m.text"},"ts":1231924441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. the bits that currently freeze the \"script group\".","msgtype":"m.text"},"ts":1231924442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1231924500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"interestingly, Gecko has managed over ten years without the nested script counter","msgtype":"m.text"},"ts":1231924501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it was added sometime between October and mid-December last year","msgtype":"m.text"},"ts":1231924502000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how does it handle this case then?","msgtype":"m.text"},"ts":1231924503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I don't know.","msgtype":"m.text"},"ts":1231924504000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1231924560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it now has a nested script counter for *some* purpose","msgtype":"m.text"},"ts":1231924561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this can also be implemented by resetting the flag at the outer event loop or something like that","msgtype":"m.text"},"ts":1231924562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kind of an implied counter","msgtype":"m.text"},"ts":1231924563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder if i can someone convince heycam that webidl should support this http://trac.webkit.org/export/39885/trunk/LayoutTests/fast/forms/old-names.html nonsense natively","msgtype":"m.text"},"ts":1231924620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://connect.microsoft.com/IE/feedback/ViewFeedback.aspx?FeedbackID=333905","msgtype":"m.text"},"ts":1231925100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1231925101000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"vml is used to implement canvas and svg in ie with js","msgtype":"m.text"},"ts":1231925160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems to work in the \"rc1\" build though","msgtype":"m.text"},"ts":1231925220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: the connect.microsoft page seems to be secret","msgtype":"m.text"},"ts":1231925520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: vml didn't work in ie8b1 in ie8 mode","msgtype":"m.text"},"ts":1231925760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"only in ie7 mode","msgtype":"m.text"},"ts":1231925761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, DOMString <span title=\"dom-canvas-toDataURL\">toDataURL</span>([Optional] in DOMString type, [Variadic] in any args); seems wrong","msgtype":"m.text"},"ts":1231925762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, because that would mean the [Variadic] could be the first argument as well which is not true","msgtype":"m.text"},"ts":1231925820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"your understanding of WebIDL is wrong","msgtype":"m.text"},"ts":1231925821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1231925880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1231925940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you can use [Optional] in the [NamedConstructor]","msgtype":"m.text"},"ts":1231927020000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"use whichever you think looks nicer of that and the overloads","msgtype":"m.text"},"ts":1231927021000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"\"o_O\"s at the .../forms/old-names.html thing","msgtype":"m.emote"},"ts":1231927080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, but you should be able to define that yourself just by stating which named properties exist at a given time","msgtype":"m.text"},"ts":1231927140000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so [Optional] means omit this and all arguments following this?","msgtype":"m.text"},"ts":1231927141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yep","msgtype":"m.text"},"ts":1231927142000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"counterintuitive?","msgtype":"m.text"},"ts":1231927143000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: k. i'll avoid the nested decorators for now. might change it later.","msgtype":"m.text"},"ts":1231927144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: oh i know i can define it myself. just hoping i can get out of it :-D","msgtype":"m.text"},"ts":1231927200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1231927201000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam, seems fine, was slightly confused at first","msgtype":"m.text"},"ts":1231927202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"re [optional], i think it's the behavior we want, the name maybe could be better","msgtype":"m.text"},"ts":1231927203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure what to suggest though","msgtype":"m.text"},"ts":1231927204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[ThisAndTheRestOfTheArgumentsCanBeOmitted]","msgtype":"m.text"},"ts":1231927205000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"toDataURL(Optional [ in DOMString type, [Variadic] in any args ])","msgtype":"m.text"},"ts":1231927440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that might not be compatible with OMG IDL, but I dunno really","msgtype":"m.text"},"ts":1231927500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thinks [Optional] is fine","msgtype":"m.emote"},"ts":1231927620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is compatibility with OMG IDL important?","msgtype":"m.text"},"ts":1231927740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie, Web Workers twitter messages don't link to http://html5.org/tools/web-workers-tracker","msgtype":"m.text"},"ts":1231927741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: shouldn't open</span>([Optional] in DOMString type, in DOMString replace); be open</span>([Optional] in DOMString type, [Optional] in DOMString replace); ?","msgtype":"m.text"},"ts":1231927920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: what do they link to?","msgtype":"m.text"},"ts":1231927980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: which open is this?","msgtype":"m.text"},"ts":1231927981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"+  <span>HTMLDocument</span> <span title=\"dom-document-open\">open</span>([Optional] in DOMString type, in DOMString replace);","msgtype":"m.text"},"ts":1231928040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, they link to the Web Workers draft","msgtype":"m.text"},"ts":1231928041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fixed (i'd commented out the right link since you hadn't set it up yet)","msgtype":"m.text"},"ts":1231928220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'll be glad to know that with Web Sockets I am just reusing HTML5's infrastructure (and extracing the docs straight out of the HTML5 source) so that there's no need for yet another tracker","msgtype":"m.text"},"ts":1231928280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders why the ECMAScript comittee decided to change getter/setter syntax; http://blogs.msdn.com/ie/archive/2009/01/13/responding-to-change-updated-getter-setter-syntax-in-ie8-rc-1.aspx seems like an interop disaster rather than being helpful, but maybe I'm missing something","msgtype":"m.emote"},"ts":1231928340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: thanks fixed","msgtype":"m.text"},"ts":1231928341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, setting up trackers is easy now, just a one line file ;)","msgtype":"m.text"},"ts":1231928342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1231928343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`, it's likely much less important than i thought it would be at the outset","msgtype":"m.text"},"ts":1231928640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"toDataURL([in DOMString type, *[in any args]])","msgtype":"m.text"},"ts":1231928760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's compatible syntax, but less usefully compatible","msgtype":"m.text"},"ts":1231928820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"It's interesting how Mozilla, Opera and Google can get away with shipping wrong-sized browser app icons for Vista and Windows 7","msgtype":"m.text"},"ts":1231928940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If someone tried to ship OS X apps with wrong-sized icons, users would reject such an app","msgtype":"m.text"},"ts":1231928941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also, installers still show an occasional Windows 3.1-era icon under Windows 7...","msgtype":"m.text"},"ts":1231929060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: html5lib-discuss google group has two spam files uploaded to it. They direct the browser to somewhere that is blocked as attack sites in Firefox.","msgtype":"m.text"},"ts":1231931040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Fixed. Thanks","msgtype":"m.text"},"ts":1231931580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"adds another example of extension to the FAQ","msgtype":"m.emote"},"ts":1231934160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can someone explain to me when you use \"same origin\" and when you use \"non same origin\"?","msgtype":"m.text"},"ts":1231934820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1231934880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: http://validator.whatwg.org/ has the old name of hsivonen's service","msgtype":"m.text"},"ts":1231934881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"when you use \"same origin\" and when you use \"same-origin\"","msgtype":"m.text"},"ts":1231934882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you use \"same origin\" when \"origin\" is the last word in the phrase, and \"same-origin\" when that forms a single adjective form for another noun.","msgtype":"m.text"},"ts":1231934940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so \"this is the same origin\" and \"this is the same-origin policy\"","msgtype":"m.text"},"ts":1231934941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"great, thanks","msgtype":"m.text"},"ts":1231934942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: fixed","msgtype":"m.text"},"ts":1231935000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does the same apply to \"server side\"?","msgtype":"m.text"},"ts":1231935780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"google says it does","msgtype":"m.text"},"ts":1231935840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: we're probably going to keep our pixelratio impl","msgtype":"m.text"},"ts":1231936500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"shouldn't HTML5 say \"in an ASCII case-... manner\" rather than \"in a ASCII case-... manner\"?","msgtype":"m.text"},"ts":1231936920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i.e. an vs a","msgtype":"m.text"},"ts":1231936921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gets confused when an email entitled \"250 years of Robert Burns\" turns out to be about the Scottish poet","msgtype":"m.emote"},"ts":1231937340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm, finds \"WebSocket is cross-origin.\" shouldn't cross-origin there have been without the dash?","msgtype":"m.text"},"ts":1231938240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"having to edit a technical spec with terms that are not in common usage in English sucks","msgtype":"m.text"},"ts":1231938241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Same_origin_policy ...","msgtype":"m.text"},"ts":1231938360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i seem to remember chaals saying that there were no rules and people do it both ways","msgtype":"m.text"},"ts":1231938420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, that might be correct","msgtype":"m.text"},"ts":1231938421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Hyphen#Compound_modifiers has advice","msgtype":"m.text"},"ts":1231938600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: The Chicago Manual of Style has rules","msgtype":"m.text"},"ts":1231938660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it seems you can do it safely without for same origin and cross origin","msgtype":"m.text"},"ts":1231938661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"albeit the rules have a weird thing","msgtype":"m.text"},"ts":1231938662000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"CMoS says it's Civil War–era rather than Civil War-era","msgtype":"m.text"},"ts":1231938720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"en dash vs. hyphen","msgtype":"m.text"},"ts":1231938721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which would make the name of the spec \"Cross Origin Resource Sharing\"","msgtype":"m.text"},"ts":1231938722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, Wikipedia has a bunch of that stuff too","msgtype":"m.text"},"ts":1231938723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which seems fine, since Cross does not modify Resource or Sharing in any way, right..?","msgtype":"m.text"},"ts":1231938780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd have written Cross-Origin Resource Sharing","msgtype":"m.text"},"ts":1231938781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I don't have a specific rule to appeal to","msgtype":"m.text"},"ts":1231938782000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i'd like to either consistently use a hyphen or consistently not or have a rule that says when to use it and when not","msgtype":"m.text"},"ts":1231938840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and have it somehow made clear when that rule applies and when not...","msgtype":"m.text"},"ts":1231938841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll do cross origin and same origin for now, point that out on the list when I've done my edits and ask for advice there so someone can bikeshed it and everyone can be happy","msgtype":"m.text"},"ts":1231939200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually, never mind, it's going to be too much of a hassle","msgtype":"m.text"},"ts":1231939260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk2, \"Cross Origin Resource Sharing\" mean \"Angry Origin Resource Sharing\". :)","msgtype":"m.text"},"ts":1231939680000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1231939681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm annevk again btw, not annevk2 :p","msgtype":"m.text"},"ts":1231939682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, oops, legacy content problem","msgtype":"m.text"},"ts":1231939740000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"fortunately I'm more HTML than XML; maybe even more flexible, as I don't think <html2> means <html> in any user agent","msgtype":"m.text"},"ts":1231939741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fwiw, cross-threaded describes when a nut and bolt are misaligned, or the lid for a bottle","msgtype":"m.text"},"ts":1231939800000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"so there's a precedent for cross-something","msgtype":"m.text"},"ts":1231939801000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"cross-ply tyres have a structure which goes back and forth and is stacked up in layers","msgtype":"m.text"},"ts":1231939920000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"There's cross-examining and cross-checking etc too","msgtype":"m.text"},"ts":1231939980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, oh yeah...I guess there's a whole class of cross-something compounds as a precedent for cross-origin.","msgtype":"m.text"},"ts":1231940040000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":" but those probably aren't relevant since they're not used as adjectives","msgtype":"m.text"},"ts":1231940041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or maybe they're not relevant because the adjectival form (cross-examined etc) is a normal adjective prefixed by \"cross-\"","msgtype":"m.text"},"ts":1231940160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"whereas \"origin\" is never an adjective, so \"cross-\" is not just a modifier of that word; it's making a whole new word instead","msgtype":"m.text"},"ts":1231940220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"this is going to be a major game-changer: http://arstechnica.com/news.ars/post/20090114-nokia-qt-lgpl-switch-huge-win-for-cross-platform-development.html","msgtype":"m.text"},"ts":1231940280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you guys should review my drafts for spelling :)","msgtype":"m.text"},"ts":1231940281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What value would be added to your documents by having them spell-checked?","msgtype":"m.text"},"ts":1231940340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(There's no point spending much effort being correct solely out of a desire to be correct :-) )","msgtype":"m.text"},"ts":1231940400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk, I don't really see the problem with the current name. Though I don't really care that much if it's renamed","msgtype":"m.text"},"ts":1231940460000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1231940461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, you could use a spelling checker? (If your HTML editor doesn't do spell checking, you can copy-paste the text into a word processor, then correct the source from what the word processor finds.)","msgtype":"m.text"},"ts":1231940520000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"Philip`, less room for ambigiuity, as BenMillard pointed out","msgtype":"m.text"},"ts":1231940521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"BenMillard, I suppose...","msgtype":"m.text"},"ts":1231940522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only worth doing that once it's pretty stable, though","msgtype":"m.text"},"ts":1231940523000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"are there any good open-source English grammar checkers?","msgtype":"m.text"},"ts":1231940524000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: LGPL Qt sounds pretty nice - I couldn't find any alternatives to wxWidgets when writing a GUI for a not-quite-open-source project, so it's good if Qt is now usable in those situations","msgtype":"m.text"},"ts":1231940640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wonder what the chances of getting a unified Linux desktop are now","msgtype":"m.text"},"ts":1231940820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, with Android underway, having just one is not quite going to happen I think","msgtype":"m.text"},"ts":1231940880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though maybe Android will never be for desktop despite the rumors","msgtype":"m.text"},"ts":1231940881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, some Googling reveals a couple of open source grammar checkers but both were 0.x rather than 1.x versions. Also found this rather pessimistic description about the lack of success in this area: http://faq.cooldictionary.com/english-grammar-checker.php","msgtype":"m.text"},"ts":1231940940000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"hsivonen: Things seem to be moving in the opposite direction - I have Gtk applications, Qt3 applications and Qt4 applications","msgtype":"m.text"},"ts":1231940941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"BenMillard: thanks","msgtype":"m.text"},"ts":1231941000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: is Android's GUI toolkit on the Java layer on the one below?","msgtype":"m.text"},"ts":1231941060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"supposes it'd be easy to argue that grammar checkers destroy our language, by discouraging anyone from writing anything interesting and non-formulaic","msgtype":"m.emote"},"ts":1231941061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"on the (fake) Java layer","msgtype":"m.text"},"ts":1231941062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"afaik","msgtype":"m.text"},"ts":1231941063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1231941064000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that was the \"disadvantage\" of it, all popular Linux apps wouldn't run on it","msgtype":"m.text"},"ts":1231941065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least according to the articles I read; and given what they write about HTML5, I'm somewhat suspicious :p","msgtype":"m.text"},"ts":1231941120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1231941121000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"I'm getting used to the Google icon, but for some reason I keep thinking it's for organic milk or fruit juice or something of that ilk...maybe that's a good look to have captured.","msgtype":"m.text"},"ts":1231941180000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"those things are the epitomy of not being evil, after all","msgtype":"m.text"},"ts":1231941181000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"oh, maybe the reason is dark green along the bottom and bright blue along the top","msgtype":"m.text"},"ts":1231941240000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"I guess the red is like a sunset and the yellow like a corn field, too","msgtype":"m.text"},"ts":1231941241000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"BenMillard, I still hate the google icon. Though I find it funny that it looks like a slightly warped version of the AVG icon rotated 90˚ and the Windows icon rotated 180˚","msgtype":"m.text"},"ts":1231941300000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"likes it a lot more than the blue one","msgtype":"m.emote"},"ts":1231941301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's highly visible and different from other favicons","msgtype":"m.text"},"ts":1231941360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I preferred the blue g over the current icon, though liked their original one with the G in the box with coloured sides better","msgtype":"m.text"},"ts":1231941420000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"The G in the box looks very old-fashioned to me","msgtype":"m.text"},"ts":1231941421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the new one has rounded corners! it's web 2.0!","msgtype":"m.text"},"ts":1231941422000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"the blue lowercase g was lame","msgtype":"m.text"},"ts":1231941480000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"the \"Favicon Mobile\" version of that was better http://4.bp.blogspot.com/_7ZYqYi4xigk/SEnKfGpULuI/AAAAAAAAApw/2AqOUkg2Dz0/s1600-h/favicon_family.jpg","msgtype":"m.text"},"ts":1231941540000,"senderName":"Lachy_","senderId":"Lachy_@irc"},
{"content":{"body":"Lachy, those are nice, but at 16x16 in Firefox 2 it was lame. :)","msgtype":"m.text"},"ts":1231941541000,"senderName":"BenMillard","senderId":"BenMillard@irc"},
{"content":{"body":"They should use an animated GIF as the favicon","msgtype":"m.text"},"ts":1231941720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"twitter has this expansion function for URLs but you still have to go through the shorter URL service after expanding...","msgtype":"m.text"},"ts":1231942860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the IE getter and setter stuff is completely different it seems","msgtype":"m.text"},"ts":1231945140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://ajaxian.com/archives/next-ie-8-release-candidate-to-have-updated-gettersetter-support-and-dom-prototypes seems toally incompatible with http://ejohn.org/blog/javascript-getters-and-setters/","msgtype":"m.text"},"ts":1231945141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"do we [...] pursue implementing the ECMAScript 3.1 getter/setter API for the DOM, or do we ship what we have [i.e. the de factor API that is mutually supported by several other major browsers and programming environments] and tackle the ECMAScript 3.1 API in a future release?","msgtype":"m.text"},"ts":1231945500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"The answer really came down to what was best for the web developer; they need interoperability and by ensuring that we support getters/setters as outlined in ECMAScript 3.1, we help deliver that interoperability in the long-term.\"","msgtype":"m.text"},"ts":1231945501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Web developers need interoperability, and so IE chooses to ship something that is different to what everyone else is shipping? Seems a strange notion of interoperability...","msgtype":"m.text"},"ts":1231945502000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1231945503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is planning to blog something to that effect","msgtype":"m.emote"},"ts":1231945504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though it seems the ECMA-comittee is also to blame","msgtype":"m.text"},"ts":1231945505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Presumably the origin of the strangeness is ECMAScript 3.1 adding the feature in a different way to what's implemented","msgtype":"m.text"},"ts":1231945560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(\"This decision was made with the concurrence of all the major browser vendors including those who currently support the de facto getter/setter API.\")","msgtype":"m.text"},"ts":1231945620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which doesn't make it seem less strange, though admittedly I have absolutely zero knowledge of the new API and how it differs and why any decisions were made)","msgtype":"m.text"},"ts":1231945621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it seems the ie8 examples use \"getter\" while other browsers use \"get\"","msgtype":"m.text"},"ts":1231945920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"IE also has prop.getter and afaik there is no prop.get in other browsers","msgtype":"m.text"},"ts":1231945921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is pretty confused at this point, should probably do some actual testing instead of reading","msgtype":"m.emote"},"ts":1231945980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"javascript:foo={get test(){ return \"foo\"; }};alert(foo.test); doesn't work in ie8","msgtype":"m.text"},"ts":1231946160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Do IE8 compatible examples fail to compile in other browsers or do they just not work?","msgtype":"m.text"},"ts":1231946220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: I don't see anything in any documentation that suggests that ought to work","msgtype":"m.text"},"ts":1231946280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://intertwingly.net/blog/2008/12/15/Co-Chair-HTML-WG#c1231946437","msgtype":"m.text"},"ts":1231946400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: is it not correct es3.1?","msgtype":"m.text"},"ts":1231946401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thought the idea was to standardize the de facto syntax established in Gecko/Spidermonkey","msgtype":"m.emote"},"ts":1231946402000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: foo={}; Object.defineProperty(foo, \"test\", { getter: function() { return \"foo\" } }); alert(foo.test); is what the ES3.1 .doc linked from the IEBlog post appears to say","msgtype":"m.text"},"ts":1231946460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i really don't even know how to begin to respond to Michael Tomer.","msgtype":"m.text"},"ts":1231946700000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: the V.nu parser in svn now passes html5lib tests again","msgtype":"m.text"},"ts":1231946880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"You could say that his suggestion has been seen by members of the WG with implementation experience, and they do not believe it is a technically feasible approach","msgtype":"m.text"},"ts":1231946881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it apparently is possible, but being possible isn't the answer to the problem he sees.","msgtype":"m.text"},"ts":1231946940000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"hsivonen: I belive the html5lib tests are out of date on some issues around heading parsing or something","msgtype":"m.text"},"ts":1231947240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I fixed that today","msgtype":"m.text"},"ts":1231947241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh, yay, that means I can get hubbub back up-to-date with miminal work :)","msgtype":"m.text"},"ts":1231947242000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"jgraham: they were also out of date wrt. </form>","msgtype":"m.text"},"ts":1231947243000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Great.","msgtype":"m.text"},"ts":1231947300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"will fix that in html5lib soonish","msgtype":"m.emote"},"ts":1231947360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I am sort of working on the MathML+SVG stuff at the moment for which I made some large changes to support the possibility of namespaces so I guess I should fix regressions from that first)","msgtype":"m.text"},"ts":1231947480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"posted http://annevankesteren.nl/2009/01/gettters-setters","msgtype":"m.emote"},"ts":1231947481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Do we put HTML elements in the HTML namespace or not yeT?","msgtype":"m.text"},"ts":1231947660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: We don't do anything yet","msgtype":"m.text"},"ts":1231947661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1231947662000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But I am adding an option for whether or not to put HTML elements in the HTML NS because AFAIK things like etree can be pretty annoying to work with if you have namespcaes mixed in","msgtype":"m.text"},"ts":1231947720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, they can be","msgtype":"m.text"},"ts":1231947721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But in Anolis it'd be a lot nicer to just always have stuff in the HTML namespace to support both HTML and XHTML.","msgtype":"m.text"},"ts":1231947722000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: you probably already told me, but is there a way to kick off running v.nu against the html5lib tests?","msgtype":"m.text"},"ts":1231947780000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Otherwise I need to duplicate tag names, with their un-namespaced form for HTML and their namespaced form for XHTML.","msgtype":"m.text"},"ts":1231947781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Like I say I plan to support both with a option to HTMLParser()","msgtype":"m.text"},"ts":1231947782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/a/an/","msgtype":"m.text"},"ts":1231947840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"was going to do that some time, but is unlikely to do it for several months, so is rather pleased that someone else cares enough to do it for him","msgtype":"m.emote"},"ts":1231947841000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1231947842000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well at the moment I have no extra functionaility and a whole bunch of regressions (because I decided to pass the tokens from the tokenizer through the treebuilder rather than splitting up stuff at the start)","msgtype":"m.text"},"ts":1231947960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which means refactoring everything and may not even be a very good design)","msgtype":"m.text"},"ts":1231947961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I hope it's not going to have any performance regressions :-)","msgtype":"m.text"},"ts":1231948080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: fwiw, it seems (form source; I didn't actually test) that Gecko treats the meta prescan charset as confident","msgtype":"m.text"},"ts":1231948081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: I think it might :( ","msgtype":"m.text"},"ts":1231948082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: :'-(","msgtype":"m.text"},"ts":1231948140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Rewrite it in C!","msgtype":"m.text"},"ts":1231948141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Since I can't say anything polite I won't say anything at all.","msgtype":"m.text"},"ts":1231948200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1231948201000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wait...","msgtype":"m.text"},"ts":1231948202000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I think there is significant value in a pure-Python HTML5 parser","msgtype":"m.text"},"ts":1231948320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"e.g. you could use it on Google App Engine","msgtype":"m.text"},"ts":1231948321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so I'd like the pure-Python html5lib to be as good (i.e. fast) as possible","msgtype":"m.text"},"ts":1231948380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"regardless of any chtml5lib that someone else might make","msgtype":"m.text"},"ts":1231948381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But it's still slow.","msgtype":"m.text"},"ts":1231948560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It's slow in comparison to C/Java/etc, but it's fast in comparison to what html5lib would be like if there hadn't been any attempts to optimise it","msgtype":"m.text"},"ts":1231948680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(it is *really* fast compared to the first version that passed the tests :) )","msgtype":"m.text"},"ts":1231948681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and it's not terribly slow in comparison to other pure-Python angle-bracketed-markup parsers","msgtype":"m.text"},"ts":1231948740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"When people strike-through phrases in a kind of ironic way like \"I think that's a<s>n incredibly stupid</s> very novel idea\", what is the appropriate semantic element to use?","msgtype":"m.text"},"ts":1231949340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'm sure I've asked this before but I can't remember any convincing answers...)","msgtype":"m.text"},"ts":1231949400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: It sounds like you need EmotionML! Although you will first have to write your own emotion ontology that defines sarcasm. ANd then you will need to pick a numerical value for how sarcastic you were being (on a scale you get to define)","msgtype":"m.text"},"ts":1231950180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then you will have to convince Hixie that you have a valid use case for emotionML-in-HTML. I suggest proceeding by first construcing a EmotionML->RDF mapping and then lobbying for RDFa-in-HTML on the basis that you need to define just how sarcastic you are in a way that machines can understand","msgtype":"m.text"},"ts":1231950300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But all I want is some stricken-though text :-(","msgtype":"m.text"},"ts":1231950360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<del>","msgtype":"m.text"},"ts":1231950420000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Philip`: If machines can't understand how sarcastic you are how can they respond appropriately, e.g. by presenting more sarcastic error messages to you? Won't someone think of the machines!","msgtype":"m.text"},"ts":1231950421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rubys: That's for text which has been removed from the document, and in this case nothing has been removed - all the text has been there intentionally from the very beginning, and it would lose its meaning if anything was removed","msgtype":"m.text"},"ts":1231950480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"But all I want is some stricken-though text\"","msgtype":"m.text"},"ts":1231950481000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"you can get that through css or through del.  Apparently you want more.","msgtype":"m.text"},"ts":1231950482000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Well, I want it to be conforming HTML5 too","msgtype":"m.text"},"ts":1231950540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Actually I don't, but for the purposes of this IRC channel I'm pretending that I do)","msgtype":"m.text"},"ts":1231950600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<span style=\"text-decoration: line-through\">","msgtype":"m.text"},"ts":1231950601000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Also I want it to be media-independent, so it can't rely on visual CSS","msgtype":"m.text"},"ts":1231950660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"For someone who says \"all I want is some stricken-though text\", you certainly have a lot of requirements.","msgtype":"m.text"},"ts":1231950840000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I'm just <del>contradicting myself</del> treating them as basic, implicit requirements that underlie all HTML questions :-)","msgtype":"m.text"},"ts":1231951140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Does html5lib parse this document correctly according to the spec?   <title>hi<foo>bar</foo><body>hi</body>","msgtype":"m.text"},"ts":1231954080000,"senderName":"exarkun","senderId":"exarkun@irc"},
{"content":{"body":"exarkun: Yes - <title> is RCDATA, so any tags except </title> are treated as plain text rather than as actual tags, so it's equivalent to <html><head><title>hi&lt;foo&gt;bar&lt;/foo&gt;&lt;body&gt;hi&lt;/body&gt;</title></head><body></body></html>","msgtype":"m.text"},"ts":1231954740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So a missing </title> could eat a whole document","msgtype":"m.text"},"ts":1231954800000,"senderName":"exarkun","senderId":"exarkun@irc"},
{"content":{"body":"exarkun: Yes","msgtype":"m.text"},"ts":1231954920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"exarkun: which seems to match IE and Opera","msgtype":"m.text"},"ts":1231954921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"exarkun: (though Firefox seems to re-parse the content if it reaches EOF without ever seeing a </title>)","msgtype":"m.text"},"ts":1231954922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: Did you make changes that would have broken \"echo 'test' | python parse.py -\"? (It now dies with \"IOError: [Errno 29] Illegal seek\" inside detectBOM)","msgtype":"m.text"},"ts":1231954980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: (and I'm sure it used to work at some point in the past)","msgtype":"m.text"},"ts":1231955040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Thanks for the info","msgtype":"m.text"},"ts":1231955041000,"senderName":"exarkun","senderId":"exarkun@irc"},
{"content":{"body":"so since it seems people are still confused with this I thought I'd blog about it, the technical issue with integrating RDFa is xmlns right, no others?","msgtype":"m.text"},"ts":1231963320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, xmlns in XML cannot be selected using [xmlns] where it can when you use it in HTML because XML puts it in a namespace and HTML does not","msgtype":"m.text"},"ts":1231963321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of course you could build an API on top of this that abstracts away the differences, dunno, but you'd kill namespaces in HTML in the process","msgtype":"m.text"},"ts":1231963440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.schneier.com/blog/archives/2009/01/michael_chertof.html :)","msgtype":"m.text"},"ts":1231963500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the only issue as far as i am concerned is that i don't know what it's for (there's been a couple of use cases presented, but so far nowhere near enough to justify all of RDF as a solution, IMHO)","msgtype":"m.text"},"ts":1231965720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, agreed","msgtype":"m.text"},"ts":1231966380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems worthwhile to point out anyway, so people might realize sending RDFa in text/html is harmful rather than just invalid","msgtype":"m.text"},"ts":1231966500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though maybe at this point it is too late anyways","msgtype":"m.text"},"ts":1231966501000,"senderName":"annevk","senderId":"annevk@irc"}
]