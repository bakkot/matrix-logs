[
{"content":{"body":"TabAtkins: looking at that it seems that one potential problem here is that nothing marks errors with the @charset production","msgtype":"m.text"},"ts":1519374958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: e.g., if you have @charset hi { ... } it'll just be ignored","msgtype":"m.text"},"ts":1519374989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"incidentally, I wonder if the spec should normatively require authors to use UTF-8","msgtype":"m.text"},"ts":1519385686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to conform to the Encoding spec, with language similar to what the HTML spec has now","msgtype":"m.text"},"ts":1519385726000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: probably should, given that HTML does","msgtype":"m.text"},"ts":1519385726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1519385730000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hey so","msgtype":"m.text"},"ts":1519390625000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"What's the correct way to allow wss connections to 'self'?","msgtype":"m.text"},"ts":1519390701000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"with csp","msgtype":"m.text"},"ts":1519390795000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: self doesn't work?","msgtype":"m.text"},"ts":1519390943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: https://github.com/w3c/webappsec-csp/issues/7","msgtype":"m.text"},"ts":1519391038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, because even though the protocol starts as https it's upgraded to websocket and it must be specified as \"wss\" in the standard WebSocket api and since 'self' is https and not wss 'self' will block wss","msgtype":"m.text"},"ts":1519391172000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"annevk: so is there a workaround?","msgtype":"m.text"},"ts":1519391200000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"annevk: https://emil.fi/p/heatstream/ here's my page if you want to take a look","msgtype":"m.text"},"ts":1519391260000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"could be a chrome issue though","msgtype":"m.text"},"ts":1519391280000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"firefox only complains about Content Security Policy: Directive ‘child-src’ has been deprecated. Please use directive ‘worker-src’ to control workers, or directive ‘frame-src’ to control frames respectively.","msgtype":"m.text"},"ts":1519391320000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"while chrome says script.js:202 Refused to connect to 'wss://emil.fi/websocket/heatstream' because it violates the following Content Security Policy directive: \"connect-src 'self' *.emil.fi\".","msgtype":"m.text"},"ts":1519391361000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"annevk: so it might just be a chrome issue","msgtype":"m.text"},"ts":1519391766000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: ok, guess the workaround is listing the wss URL too","msgtype":"m.text"},"ts":1519391830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: I think we should make this work everywhere though (and get it tested)","msgtype":"m.text"},"ts":1519391872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I must do wss://emil.fi?","msgtype":"m.text"},"ts":1519391985000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"and wss://*.emil.fi?","msgtype":"m.text"},"ts":1519392056000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"also, one thing that'd be great is having access to the current host with say 'host' or so instead of having to write explicit *.domain.tld if I want to trust my own subdomains","msgtype":"m.text"},"ts":1519392110000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: I suspect that'll work","msgtype":"m.text"},"ts":1519392172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: you can file feature requests against the repository I linked earlier","msgtype":"m.text"},"ts":1519392193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: maybe search first if it hasn't been requested before","msgtype":"m.text"},"ts":1519392209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't entirely up-to-date on all things CSP","msgtype":"m.emote"},"ts":1519392220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: anycase thanks for confirming the issue, lets hope it gets fixed. I filed a bug report on crbug.com about this","msgtype":"m.text"},"ts":1519392660000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: maybe link that bug from the issue while you're at it?","msgtype":"m.text"},"ts":1519392727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: always helpful to have spec and browser issues cross-linked","msgtype":"m.text"},"ts":1519392748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well I dun goofed and selected the security tag and apparently only users with securityTeam permissions can see the issue :D","msgtype":"m.text"},"ts":1519392807000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"https://bugs.chromium.org/p/chromium/issues/detail?id=815142&can=2&start=0&num=100&q=&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified&groupby=&sort=","msgtype":"m.text"},"ts":1519392828000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"annevk: https://emil.fi/d/2018-02-23_15-34-28_SOzY3Qkc.png picture of bug report","msgtype":"m.text"},"ts":1519392882000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1519392910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh yeah if you meant link the github issue yeah I linked that","msgtype":"m.text"},"ts":1519392911000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"I meant link from GitHub to https://bugs.chromium.org/p/chromium/issues/detail?id=815142","msgtype":"m.text"},"ts":1519392929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I guess wait a little until it's opened up first","msgtype":"m.text"},"ts":1519392938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah I'll do that (y)","msgtype":"m.text"},"ts":1519392952000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Well, sorry, I meant link both ways, so what you did is definitely good","msgtype":"m.text"},"ts":1519392961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for helping out","msgtype":"m.text"},"ts":1519393100000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"annevk: https://github.com/w3c/webappsec-csp/issues/297 and filed a feature request for exposing the host","msgtype":"m.text"},"ts":1519393570000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1519393617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if Fetch knows it's not a range request and it gets a range response (it can look passed the opaque bit since it's the spec/impl), it could just return a network error?","msgtype":"m.text"},"ts":1519400109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so we annotate responses with whether they're range responses and if a service worker hands us a mismatch it's a network error","msgtype":"m.text"},"ts":1519400172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: You disagree :D https://github.com/whatwg/fetch/issues/144#issuecomment-323938559","msgtype":"m.text"},"ts":1519400593000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That was my original plan","msgtype":"m.text"},"ts":1519400600000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think that's slightly different","msgtype":"m.text"},"ts":1519400667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that's saying that if <script> makes a request and a server gives a 206 it'll just work","msgtype":"m.text"},"ts":1519400686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the Attack 4 AIUI is that <script> makes a normal request; then SW makes a Range request; then server gives a 206; then that's handed to <script>","msgtype":"m.text"},"ts":1519400735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in that case it seems reasonable to reject","msgtype":"m.text"},"ts":1519400758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe important even","msgtype":"m.text"},"ts":1519400769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or am I still missing something?","msgtype":"m.text"},"ts":1519400815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so how are you telling the difference between the two? The best I could think of was, in the second case, the response was gained by making a range request","msgtype":"m.text"},"ts":1519400839000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, you mark the response somehow","msgtype":"m.text"},"ts":1519400910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: \"range-requested flag\" or some such","msgtype":"m.text"},"ts":1519400947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's the solution I wrote for attack 4, right?","msgtype":"m.text"},"ts":1519400960000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"Fetch should reject if the original request did not have a range header, but the service worker provides a response that is opaque, partial, and was requested with a range header.\"","msgtype":"m.text"},"ts":1519400993000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah","msgtype":"m.text"},"ts":1519401006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sold","msgtype":"m.text"},"ts":1519401011000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess you're saying I should have said \"agreed\" instead :-p","msgtype":"m.text"},"ts":1519401020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: haha, I thought at first you were proposing an alternative","msgtype":"m.text"},"ts":1519401051000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks for continuing to tackle this","msgtype":"m.text"},"ts":1519401165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: np, about time really. I'll rebase that PR then make changes in additional commits.","msgtype":"m.text"},"ts":1519401214000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: https://bugs.chromium.org/p/chromium/issues/detail?id=815142 now its open","msgtype":"m.text"},"ts":1519402563000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"it's","msgtype":"m.text"},"ts":1519402566000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"hi all; I'm wondering why validator.w3.org says \"No Referer header found!\" for the link in the top-right of https://www.norbertdejonge.nl/","msgtype":"m.text"},"ts":1519406643000,"senderName":"norbert","senderId":"norbert@irc"},
{"content":{"body":"ankh of #w3c helped me out; the link had to be https (can't send the header from https to http)","msgtype":"m.text"},"ts":1519407058000,"senderName":"norbert","senderId":"norbert@irc"},
{"content":{"body":"norbert: you can with referrer-policy, but that's a better fix","msgtype":"m.text"},"ts":1519407977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok :)","msgtype":"m.text"},"ts":1519408188000,"senderName":"norbert","senderId":"norbert@irc"},
{"content":{"body":"annevk: Nothing \"marks errors\" anywhere in CSS, invalid things are always silently dropped.  (At most, DevTools might report something, but that can happen regardless of specs.)","msgtype":"m.text"},"ts":1519413927000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there a reasonable notion of what base URL to automatically use for URL-things created in JS?","msgtype":"m.text"},"ts":1519417700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, by default.","msgtype":"m.text"},"ts":1519417710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: looks like for `new Image()` it's done like this: \"Let document be the current global object's associated Document.\"","msgtype":"m.text"},"ts":1519417786000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"That's exactly analogous to the sort of object I was asking the question about, thanks!","msgtype":"m.text"},"ts":1519417825000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"of course Image is super-old, so I could imagine someone coming up with a better way to do it :)","msgtype":"m.text"},"ts":1519417855000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"\"better\"","msgtype":"m.text"},"ts":1519417860000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I mean, that's probably the most reasonable way to do it anyway.","msgtype":"m.text"},"ts":1519417899000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm gonna put in some advice that if people want a relative URL resolved in a particular way, they should use the URL constructor and supply their own.","msgtype":"m.text"},"ts":1519417928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"aklein: it does not get the base URL from the entry settings object or some such?","msgtype":"m.text"},"ts":1519419177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: note that you cannot rely on there being a document","msgtype":"m.text"},"ts":1519419216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, maybe Image is a bad example since it requires a document","msgtype":"m.text"},"ts":1519419229000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"fetch is probably what you're thinking?","msgtype":"m.text"},"ts":1519419244000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I'm probably fine with just failing to absolutize if there's no document.","msgtype":"m.text"},"ts":1519419246000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: pretty crappy for worklets et al?","msgtype":"m.text"},"ts":1519419318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, they have a URL, right.","msgtype":"m.text"},"ts":1519419342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Man, all this ambient information floating around in DOM is hard for me to keep track of. ^_^","msgtype":"m.text"},"ts":1519419358000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Designed a long time ago","msgtype":"m.text"},"ts":1519419699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"“Designed” I suppose","msgtype":"m.text"},"ts":1519419712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: annevk: this is fixable!","msgtype":"m.text"},"ts":1519422506000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think you just want to use the current or relevant settings object's API base URL","msgtype":"m.text"},"ts":1519422516000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"relevant, unless in a constructor, then current","msgtype":"m.text"},"ts":1519422529000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That should just do the right thing and also be equivalent to the image thing","msgtype":"m.text"},"ts":1519422563000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(API base URL is derived from the active document for Window global objects; and is set correctly otherwise for worker/worklet/etc. global objects.)","msgtype":"m.text"},"ts":1519422584000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1519422605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I notice the https://developer.mozilla.org/en-US/docs/Web/CSS/%40charset article describes @charset as an at-rule, so I’d like to edit that article to correct it","msgtype":"m.text"},"ts":1519424189000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but","msgtype":"m.text"},"ts":1519424192000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in looking through https://drafts.csswg.org/css-syntax-3/ I don’t really see a definition of what @charset is","msgtype":"m.text"},"ts":1519424239000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see a note that says:","msgtype":"m.text"},"ts":1519424265000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Note: Note that the syntax of an encoding declaration looks like the syntax of an at-rule named @charset,","msgtype":"m.text"},"ts":1519424271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so maybe I could edit the article to have it refer to @charset as the CSS “encoding declaration”?","msgtype":"m.text"},"ts":1519424329000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"otherwise, calling it, e.g., “the @charset byte sequence” doesn’t see so great","msgtype":"m.text"},"ts":1519424388000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe “@charset statement”","msgtype":"m.text"},"ts":1519424407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway it would help if the spec itself had some formal definition of it, to refer to","msgtype":"m.text"},"ts":1519424453000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: It is an at-rule, in that it conforms to the general at-rule grammar. It's just not a valid CSS at-rule, as in it's not defined to exist.  We use the term \"at-rule\" to refer to anything that matches the generic grammar, tho.","msgtype":"m.text"},"ts":1519427012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Note that in CSS2, @charset *was* called an actual at-rule, even tho it was only paid attention to according to the stringent byte-sequence rules that Syntax describes.  We just drop it from the stylesheet now, per spec, while before it would stick around and do nothing.","msgtype":"m.text"},"ts":1519427077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1519427089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for the clarification","msgtype":"m.text"},"ts":1519427097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]