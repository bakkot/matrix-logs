[
{"content":{"body":"Whilst I don't doubt that browsers could do better in many situations, I still maintain that complaining on the basis of some notional idea that web-pages are generally simple things that should never use much memory doesn't make any sense","msgtype":"m.text"},"ts":1419379298000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"running out of memory because of a browser is very new; never had anything close to this problem before maybe a year ago","msgtype":"m.text"},"ts":1419379386000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"safari may be slow, but it does seem to do a pretty good job of keeping memory in check","msgtype":"m.text"},"ts":1419380020000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: Re \"to pilgrim\", https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/nzRY-h_-_ig/vsNKAtkRIpIJ","msgtype":"m.text"},"ts":1419383077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, sorry for the late reply. if advanced transition is overthinking, does it mean the spec isn't interested in provide a solution for a problem like http://jsbin.com/layuhadiku/1/edit?html,css,output ?","msgtype":"m.text"},"ts":1419388179000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"a quick question: when the spec says node.append(nodes), does it mean node.append(...nodes) or nodes is just a regular array?","msgtype":"m.text"},"ts":1419389253000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"nm, IDL covered it.","msgtype":"m.text"},"ts":1419389389000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"roc: has ruby support landed already under a flag?","msgtype":"m.text"},"ts":1419396612000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in gecko I mean","msgtype":"m.text"},"ts":1419396625000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm yeah, I see dbaron's comment at https://bugzilla.mozilla.org/show_bug.cgi?id=256274#c204","msgtype":"m.text"},"ts":1419396672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"layout.css.ruby.enabled I guess","msgtype":"m.text"},"ts":1419396711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, Xidorn has been working on it lately","msgtype":"m.text"},"ts":1419396726000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"oh hey dbaron","msgtype":"m.text"},"ts":1419396739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool, thanks for the info","msgtype":"m.text"},"ts":1419396746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, we were just quibbling over getting the UA stylesheet bits landed today","msgtype":"m.text"},"ts":1419396750000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"MikeSmith, so that might land within a few days, which would make the pref more useful, even though it's still in progress","msgtype":"m.text"},"ts":1419396763000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"dbaron: very nice","msgtype":"m.text"},"ts":1419396779000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: you around?","msgtype":"m.text"},"ts":1419427567000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: when you get back, I'd be interested in any thoughts you may have on https://www.w3.org/Bugs/Public/show_bug.cgi?id=27687","msgtype":"m.text"},"ts":1419429188000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I","msgtype":"m.text"},"ts":1419429192000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"... 'm in favor; and since there is clearly no urgency, I'd be inclined to only implement it in the rewritten parser","msgtype":"m.text"},"ts":1419429221000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: you mean making \"http://s/:test\" non-conforming? And \"http://s/ test \"?","msgtype":"m.text"},"ts":1419429367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes to the first.  the second is \"      http://example.com/   \"","msgtype":"m.text"},"ts":1419429405000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"more background: http://intertwingly.net/tmp/urlvsuri.html","msgtype":"m.text"},"ts":1419429475000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\":\" is not excluded from path segments per the specification","msgtype":"m.text"},"ts":1419429488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"the specification\"?  Which one (URL or RFC 3986)?","msgtype":"m.text"},"ts":1419429522000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"URL","msgtype":"m.text"},"ts":1419429528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not suggesting changing the output of parse, simply indicating a conformance error.","msgtype":"m.text"},"ts":1419429548000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"That would also require changing the definition of path segments","msgtype":"m.text"},"ts":1419429567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And looking at https://tools.ietf.org/html/rfc3986#section-3.3 URIs can mostly contain a colon there just fine","msgtype":"m.text"},"ts":1419429648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"re: dfn of path segments: I don't follow.  Adding \"if c is ':' then parse error\" to https://url.spec.whatwg.org/#relative-path-start-state","msgtype":"m.text"},"ts":1419429671000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"That would make the parser inconsistent with how path segments are defined","msgtype":"m.text"},"ts":1419429700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, lets back up.  First: segment-nz-nc explicitly excludes colons.","msgtype":"m.text"},"ts":1419429736000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"this is referenced by path-noscheme","msgtype":"m.text"},"ts":1419429775000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Another way to address this would be to fix: https://specs.webplatform.org/url/webspecs/develop/#relative-url","msgtype":"m.text"},"ts":1419429846000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, that's for a case like <a href=\"s:test\"> as due to the colon it can no longer be a relative reference","msgtype":"m.text"},"ts":1419429848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, it explicitly is only the first character","msgtype":"m.text"},"ts":1419429876000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1419429913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'non-zero-length segment without any colon \":\"'","msgtype":"m.text"},"ts":1419429927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1419429964000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"path-noscheme = segment-nz-nc *( \"/\" segment )","msgtype":"m.text"},"ts":1419429969000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so this bizarre rule only applies to the first segment","msgtype":"m.text"},"ts":1419429980000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"yes, because of what I just said","msgtype":"m.text"},"ts":1419429992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's for relative references only","msgtype":"m.text"},"ts":1419430001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can disambiguate those from URIs","msgtype":"m.text"},"ts":1419430018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"going back to https://specs.webplatform.org/url/webspecs/develop/#relative-url, this check could be added to the last path.","msgtype":"m.text"},"ts":1419430080000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"all other cases have either a colon or a slash before the path","msgtype":"m.text"},"ts":1419430155000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"if you have this top down matching that seems redundant","msgtype":"m.text"},"ts":1419430218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it clearly isn't, as \":a\" doesn't produce a conformance error.","msgtype":"m.text"},"ts":1419430291000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I guess another way to fix this would be to allow scheme to return zero length strings, but produce a conformance error along the way.  See https://specs.webplatform.org/url/webspecs/develop/#scheme","msgtype":"m.text"},"ts":1419430395000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"@: would, however, be considered a conforming relative URL but not a valid URI","msgtype":"m.text"},"ts":1419430558000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: small confusion \"urltestdata.txt has the following tests\" ... which tests?","msgtype":"m.text"},"ts":1419430733000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: here is urltestdata.txt: https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.txt","msgtype":"m.text"},"ts":1419430998000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"So ALL of those?","msgtype":"m.text"},"ts":1419431021000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: I'm confused about what you are confused about.  :-)","msgtype":"m.text"},"ts":1419431053000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Here's the results of the tests: https://url.spec.whatwg.org/interop/test-results/","msgtype":"m.text"},"ts":1419431066000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"looking at those results, there are some conforming URLs that are not valid URIs.  I think that should be fixed.","msgtype":"m.text"},"ts":1419431114000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"looking deeper, I came up with: http://intertwingly.net/tmp/urlvsuri.html","msgtype":"m.text"},"ts":1419431131000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Okay, sorry, the bug just didn't say which of the tests in urltestdata.txt were being talked about","msgtype":"m.text"},"ts":1419431169000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: ah.  that is indeed confusing","msgtype":"m.text"},"ts":1419431238000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I meant to enumerate them","msgtype":"m.text"},"ts":1419431259000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"comment added to the bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27687#c1","msgtype":"m.text"},"ts":1419431461000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk's solution doesn't seem to cover \" foo.com \" from that list nor 100% whitespace like \" \\t\" ?","msgtype":"m.text"},"ts":1419431526000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"we didn't discuss that.  I'm proposing adding a check to https://specs.webplatform.org/url/webspecs/develop/#concept-basic-url-parser","msgtype":"m.text"},"ts":1419431583000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"mm, so by that wouldn't \" foo.com \" just become \"foo.com\" relative to any currently set base?","msgtype":"m.text"},"ts":1419431765000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"and \" \\t\" become the same as an empty \"\", and thus again resolve relative to the current base?","msgtype":"m.text"},"ts":1419431813000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: yes.  want to play with a few tests?  Try: https://url.spec.whatwg.org/reference-implementation/liveview2.html#about%3A","msgtype":"m.text"},"ts":1419431833000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"also, some tests have already been defined with test results captured for a variety of user agents: https://url.spec.whatwg.org/interop/test-results/","msgtype":"m.text"},"ts":1419431867000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"reads more","msgtype":"m.emote"},"ts":1419431986000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"\"A parse error if leading/trailing white space is present in\" seems a bit, mmm, over zealous? Given that none of the implementations today consider \" foo.com \" to be a parse error","msgtype":"m.text"},"ts":1419432178000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"a conformance error.  See https://specs.webplatform.org/url/webspecs/develop/#url-writing","msgtype":"m.text"},"ts":1419432234000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"ah, so not parse exception, so go ahead and keep parsing","msgtype":"m.text"},"ts":1419432461000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"*sigh* http://lists.w3.org/Archives/Public/public-ietf-w3c/2014Dec/0087.html","msgtype":"m.text"},"ts":1419441226000,"senderName":"rubys","senderId":"rubys@irc"}
]