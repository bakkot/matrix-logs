[
{"content":{"body":"jgraham: wow when even he can't tell from the specs what's supposed to be allowed, the specs are pretty bad","msgtype":"m.text"},"ts":1424822705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Daniel Stenberg I mean","msgtype":"m.text"},"ts":1424822720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1424822808000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if \"initial MIME type\" and \"final MIME type\" would be clearer than \"supplied MIME type\" and \"sniffed MIME type\", respectively.","msgtype":"m.emote"},"ts":1424823887000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"cool, another CORS header for everyone to copy and paste blindly into their server","msgtype":"m.text"},"ts":1424823899000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(heh)","msgtype":"m.text"},"ts":1424823908000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"GPHemsley: initial/final sound good.  supplied/sniffed sound like they're both inputs into an algorithm that'll spit out a final one.","msgtype":"m.text"},"ts":1424823995000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or mix 'em up, supplied/final.","msgtype":"m.text"},"ts":1424824006000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=28094","msgtype":"m.text"},"ts":1424824017000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Could that be what's in play here?","msgtype":"m.text"},"ts":1424824024000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Ah, no, in that bug, it's that the phrase \"the X is the Y\" is unclear - the directionality of the implication isn't obvious.","msgtype":"m.text"},"ts":1424824069000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I try to be explicit and say \"set X to Y\"","msgtype":"m.text"},"ts":1424824079000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or similar.","msgtype":"m.text"},"ts":1424824083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, interesting","msgtype":"m.text"},"ts":1424824086000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"leave a comment to that effect?","msgtype":"m.text"},"ts":1424824096000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Doing so.","msgtype":"m.text"},"ts":1424824103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1424824137000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: Any insight into the first two quotes?","msgtype":"m.text"},"ts":1424824339000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"why not specified mime type and computed mime type? 1/2 ;)","msgtype":"m.text"},"ts":1424824348000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"No, I don't know about the first two lines. Those seem fine to me.","msgtype":"m.text"},"ts":1424824375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: s/specified/supplied/ ?","msgtype":"m.text"},"ts":1424824399000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I like that","msgtype":"m.text"},"ts":1424824422000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"supplied and computed","msgtype":"m.text"},"ts":1424824427000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I never liked sniffed","msgtype":"m.text"},"ts":1424824431000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"agreed. use of \"sniff\" always smelled a bit funny to me.","msgtype":"m.text"},"ts":1424824452000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wonders what has changed out from under him since the last time the spec was updated","msgtype":"m.emote"},"ts":1424824454000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"igi smelled","msgtype":"m.text"},"ts":1424824461000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1424824469000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":" /kick #whatwg tantek Puns too terrible.","msgtype":"m.text"},"ts":1424824536000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"was there some change to the infrastructure, or should I be able to build like I always have?","msgtype":"m.text"},"ts":1424824654000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"You can try it and see?","msgtype":"m.text"},"ts":1424824703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suppose :)","msgtype":"m.text"},"ts":1424824770000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"looks like it should be OK, as long as I don't update anything","msgtype":"m.text"},"ts":1424824782000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"it seems like this \"Waiting for available socket\" thing in Chrome can't be caused by hitting a system-level limit in OSX, because when it happens with some particular URL, I can open up that same page in Firefox or Safari with no problem","msgtype":"m.text"},"ts":1424825647000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"X is Y\" means \"X == Y\"","msgtype":"m.text"},"ts":1424825915000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"set X to Y\" means \"X = Y\"","msgtype":"m.text"},"ts":1424825926000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"puts that in the style guide","msgtype":"m.emote"},"ts":1424825934000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Yeah, that's right.","msgtype":"m.text"},"ts":1424826532000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: don't know the particular issue, but you could have per-process (maybe per process tree?) limits","msgtype":"m.text"},"ts":1424827990000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Feedback welcome: https://wiki.whatwg.org/wiki/Specs/style#Equality","msgtype":"m.text"},"ts":1424828265000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: ^","msgtype":"m.text"},"ts":1424828268000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Looks good.","msgtype":"m.text"},"ts":1424828329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: Do you know the source of the \"inverse map\" term?","msgtype":"m.text"},"ts":1424828388000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's definitely not my expected name for a map where each key can have multiple values.","msgtype":"m.text"},"ts":1424828404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Likely me and/or Wikipedia","msgtype":"m.text"},"ts":1424828425000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: Feel free to check the logs :P","msgtype":"m.text"},"ts":1424828439000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"nevermind, I'll do it","msgtype":"m.text"},"ts":1424828596000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"6 Nov 2013","msgtype":"m.text"},"ts":1424828658000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin was involved","msgtype":"m.text"},"ts":1424828669000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"http://logs.glob.uno/?c=freenode%23whatwg&s=6+Nov+2013&e=6+Nov+2013&h=inverse+map#c838129","msgtype":"m.text"},"ts":1424828713000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Okay. ^_^","msgtype":"m.text"},"ts":1424828783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yay data!","msgtype":"m.text"},"ts":1424828868000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Oh wait, I see.  \"inverse map\" is actually more restrictive than anything in the platform; that really is the correct term in that case.  I was thinking it was basically equivalent to multimap, but it's not.","msgtype":"m.text"},"ts":1424828872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1424828893000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"[ For a keyed collection of values, use \"inverse map\" when there can be more than one value per key and only one key per value  ]","msgtype":"m.text"},"ts":1424829032000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hmm... I suppose that means that, if there are no orphans, the number of values is always greater than or equal to the number of keys","msgtype":"m.text"},"ts":1424829194000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"wanders off","msgtype":"m.emote"},"ts":1424829206000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"returns briefly to alert Hixie to the terminology change in mimesniff","msgtype":"m.emote"},"ts":1424829347000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"file a bug","msgtype":"m.text"},"ts":1424829363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1424829364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: ah ok","msgtype":"m.text"},"ts":1424829501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: have you got any ideas on how we want to deal with document conformance for documents that contain custom elements","msgtype":"m.text"},"ts":1424833955000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean both spec-wise and for conformance checkers","msgtype":"m.text"},"ts":1424833980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as far as the validator we could of course trivially just make it ignore any element names that contain hyphens","msgtype":"m.text"},"ts":1424834033000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the downside of that is we'd lose the ability to help people catch cases where they mistyped an element name by putting a stray hyphen into it","msgtype":"m.text"},"ts":1424834110000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I think that's probably a very rare mistake to make","msgtype":"m.text"},"ts":1424834123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and if they did that for a non-void element, they'd have to make that same mistake twice","msgtype":"m.text"},"ts":1424834152000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because otherwise the validator would at least emit an error about finding an end tag for an element that's not open","msgtype":"m.text"},"ts":1424834204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the bigger downside is that trivally ignoring any element with a hyphen in its name would also mean any of its child elements also get ignored by the validator","msgtype":"m.text"},"ts":1424834371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"My suggestion: Output a list of hyphen-containing elements, highlight somehow any that differ by one or two characters, especially if one of the different-by-one's only occurs once or twice.","msgtype":"m.text"},"ts":1424834596000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OK yeah that would help","msgtype":"m.text"},"ts":1424834771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but we still would have the problem that the validator can't do any checking of the child content of a custom element without knowing or assuming what type of content the element's meant to have","msgtype":"m.text"},"ts":1424834866000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess one way to deal with that could be to just try any child element as a div as a far as validation of its child content goes","msgtype":"m.text"},"ts":1424834922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but then some custome elements might be meant for use inline, as phrasing content","msgtype":"m.text"},"ts":1424834959000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm yeah seems not possible to solve without external metadata","msgtype":"m.text"},"ts":1424835096000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Which would require custom element authors to be people who want to give thought to validation constraints :/","msgtype":"m.text"},"ts":1424835133000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1424835276000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which isn't practical","msgtype":"m.text"},"ts":1424835283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but short of external metadata I could have the validator try to heuristically determine what kind of content the custom element is","msgtype":"m.text"},"ts":1424835363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., a simple case is, if the custom element is itself a descendant of an element that can only contain phrasing content","msgtype":"m.text"},"ts":1424835425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., a <p> element","msgtype":"m.text"},"ts":1424835432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"then in that case we can assume that the custom element can also only contain phrasing content","msgtype":"m.text"},"ts":1424835459000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and implementation-wise I could just have the validator treat it the same as a <span> I guess","msgtype":"m.text"},"ts":1424835490000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other words, we just make the content model of all custom elements be \"transparent\"","msgtype":"m.text"},"ts":1424835526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"fundamentally, no, i have no idea.","msgtype":"m.text"},"ts":1424835546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean that's what DTDs were to SGML","msgtype":"m.text"},"ts":1424835559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that failed","msgtype":"m.text"},"ts":1424835562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You could imagine a \"custom elements validator config\"","msgtype":"m.text"},"ts":1424837048000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It could be very simple, starting with one line or so for each element","msgtype":"m.text"},"ts":1424837061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And could become sharable","msgtype":"m.text"},"ts":1424837068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or people could end up just inputting it into a textbox alongside their HTML content","msgtype":"m.text"},"ts":1424837082000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and maintaining it in a .txt file they use","msgtype":"m.text"},"ts":1424837089000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this isn't new technology. xml schemas, dtds, relaxng, they're all elaborate ways to do this","msgtype":"m.text"},"ts":1424837110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and they all basically uniformally fail in a web enviroment","msgtype":"m.text"},"ts":1424837121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: right, something like that may be what we end up needing in the long run","msgtype":"m.text"},"ts":1424837121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean this really is exactly what we're doing here. we're making in possible for people to use a meta language to make a new vocabulary","msgtype":"m.text"},"ts":1424837150000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is exactly what sgml was, and xml later.","msgtype":"m.text"},"ts":1424837159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm not sure you're completely right about those existing schema languages having ways to do this","msgtype":"m.text"},"ts":1424837186000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"certainly Relaxg","msgtype":"m.text"},"ts":1424837194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i don't mean specifically define a vocabulary for custom elements in html","msgtype":"m.text"},"ts":1424837216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean the class of problems of \"describe validation criteria for a vocabulary in a metalanguage\"","msgtype":"m.text"},"ts":1424837237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1424837249000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I think the problem with most existing schema approaches for validation is that they're all grammar-based","msgtype":"m.text"},"ts":1424837298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so they by default say nothing is allowed anywhere","msgtype":"m.text"},"ts":1424837316000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's like Deny: *","msgtype":"m.text"},"ts":1424837327000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and they all require you to them explicitly define what's allowed where","msgtype":"m.text"},"ts":1424837363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the other approaches like schematron that are assertion-based do the opposite Allow:* way of saying everything's allowed everywhere","msgtype":"m.text"},"ts":1424837425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think my approach is predicated on my guess that those approaches failed because of usabilty issues","msgtype":"m.text"},"ts":1424837462000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyway for better or worse the validator at its core is a grammar-based checker so we're stuck with that limitation until we come up with something better to replace it","msgtype":"m.text"},"ts":1424837478000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i think these approaches failed because most people don't care to define constraints for their vocabularies.","msgtype":"m.text"},"ts":1424837495000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bingo","msgtype":"m.text"},"ts":1424837501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in the past very few people had any need to","msgtype":"m.text"},"ts":1424837516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Whereas something like \"contains only: phrasing content\" or \"contains only: [x-menuitem]\" --- with nothing else --- might succeed, at least in the domain of people who care enough about validation to lug around the metadata","msgtype":"m.text"},"ts":1424837526000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but I think custom elements changes that","msgtype":"m.text"},"ts":1424837529000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: yeah I think what you've described would need to be limited to some very simple limited easy to grok expression language","msgtype":"m.text"},"ts":1424837596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: left a reply, URL Standard has all the answers, but when you start looking at RFCs... yeah","msgtype":"m.text"},"ts":1424846685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: DOM === (!JavaScript && !<canvas>)","msgtype":"m.text"},"ts":1424859834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: haha, perfect!","msgtype":"m.text"},"ts":1424859855000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm having issues with my HTML5 DOM HTTP","msgtype":"m.text"},"ts":1424859934000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Do we know how common xml:base is?","msgtype":"m.text"},"ts":1424867522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: foolip has been counting it I think","msgtype":"m.text"},"ts":1424868713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj that is, these days","msgtype":"m.text"},"ts":1424868725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, he changed nicks","msgtype":"m.text"},"ts":1424868763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(thinking about it more, I don't really care that much for the problem I had in mind)","msgtype":"m.text"},"ts":1424868816000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(so don't worry)","msgtype":"m.text"},"ts":1424868823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28100","msgtype":"m.text"},"ts":1424868936000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"jgraham: see https://code.google.com/p/chromium/issues/detail?id=341854 for progress on removing xml:base","msgtype":"m.text"},"ts":1424868987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: https://bugzilla.mozilla.org/show_bug.cgi?id=903372 is still awaiting a volunteer","msgtype":"m.text"},"ts":1424869039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do I import a reserved/key word? Something like import { 'return' } as identity from 'fj-maybe'; does not work...","msgtype":"m.text"},"ts":1424871014000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"fj-maybe does: export default { 'return' (value) {return value;} }","msgtype":"m.text"},"ts":1424871077000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"annevk, jgraham, it's more convenient to be philipj in #blink, so...","msgtype":"m.text"},"ts":1424872172000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so the xml:base counter isn't for the presence of the attribute but just when it has an observable effect in Blink","msgtype":"m.text"},"ts":1424872230000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/580","msgtype":"m.text"},"ts":1424872251000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/681 is for the reflected attribute in SVG","msgtype":"m.text"},"ts":1424872285000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"looks great","msgtype":"m.text"},"ts":1424872322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it also seems that in Chrome it has barely any effect at all","msgtype":"m.text"},"ts":1424872342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's not true for Gecko though since no other browser does it...","msgtype":"m.text"},"ts":1424872352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: note that the SVG counter (681) hasn't reached stable yet, but I'm quite optimistic","msgtype":"m.text"},"ts":1424872391000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: On an entirely different topic, I needinfo'd you on a bug about wpt media test source selection. I hope you don't mind","msgtype":"m.text"},"ts":1424872420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yep, I saw that, and don't mind :)","msgtype":"m.text"},"ts":1424872442000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I also have a philipj⊙oc account in your Bugzilla, not sure why I have two","msgtype":"m.text"},"ts":1424872481000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Ah, foolip is a more unique search string ;)","msgtype":"m.text"},"ts":1424872510000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes it is :)","msgtype":"m.text"},"ts":1424872691000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"jgraham: I've replied to your needsinfo bug","msgtype":"m.text"},"ts":1424873026000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: Thanks!","msgtype":"m.text"},"ts":1424873037000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I like this needsinfo system BTW","msgtype":"m.text"},"ts":1424873038000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"MikeSmith bugged systeam about that, I wonder what happened","msgtype":"m.text"},"ts":1424873077000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, it seems to work quite well","msgtype":"m.text"},"ts":1424873082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"philipj, you can get accounts merged, fwiw... You need to file a bug somewhere","msgtype":"m.text"},"ts":1424873102000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I got a reply on the needsinfo thing—basically a \"maybe\"—so at least they didn't reject it yet","msgtype":"m.text"},"ts":1424873153000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I need to get back to them and continue to lobby for it","msgtype":"m.text"},"ts":1424873167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, any chance you can get a big banner on http://www.w3.org/TR/Window/?","msgtype":"m.text"},"ts":1424874730000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah","msgtype":"m.text"},"ts":1424874776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"got a page I can copy the banner from?","msgtype":"m.text"},"ts":1424874788000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, http://www.w3.org/TR/CSS1/ maybe","msgtype":"m.text"},"ts":1424876558000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1424876732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, or redirect to html.s.w.o ;)","msgtype":"m.text"},"ts":1424876779000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: would that I could 😄","msgtype":"m.text"},"ts":1424877061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, or, hell, the fork","msgtype":"m.text"},"ts":1424877117000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: will a bug just anywhere do the trick? ;)","msgtype":"m.text"},"ts":1424877812000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"<glob> Ms2ger, bugzilla.mozilla.org :: administration","msgtype":"m.text"},"ts":1424877931000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<glob> Ms2ger, we'll need a comment from both accounts","msgtype":"m.text"},"ts":1424877931000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: done","msgtype":"m.text"},"ts":1424878940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, yay, advanced 8 years :)","msgtype":"m.text"},"ts":1424879000000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1424879025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-webappsec/2015Feb/0414.html :-(","msgtype":"m.text"},"ts":1424881141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't even know where to start if I wanted to reply to that","msgtype":"m.text"},"ts":1424881207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah :(","msgtype":"m.text"},"ts":1424883372000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we talked about this at TAG f2f","msgtype":"m.text"},"ts":1424883377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"linked data software apparently isn't aware of redirects or canonicalization or anything like it","msgtype":"m.text"},"ts":1424883390000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just uses URLs as long guids","msgtype":"m.text"},"ts":1424883395000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That doesn't seem problematic","msgtype":"m.text"},"ts":1424883610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They should just have additional logic for fetching resources if they actually plan on doing that","msgtype":"m.text"},"ts":1424883630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, there's owl:sameAs... They just need to invest some work in integrity and such","msgtype":"m.text"},"ts":1424883683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1424883684000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Does anyone know what other browsers call what Gecko calls \"load group\"? The thing that's sort of responsible for keeping track of all fetches within an environment?","msgtype":"m.text"},"ts":1424883781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's an \"environment\"?","msgtype":"m.text"},"ts":1424885048000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"a tab?","msgtype":"m.text"},"ts":1424885069000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jamesr___: window or worker","msgtype":"m.text"},"ts":1424885915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr___: anything with a global object","msgtype":"m.text"},"ts":1424885930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Offhand, anyone know why the WebSocket constructor uses DOMString[] instead of sequence<DOMString> ?","msgtype":"m.text"},"ts":1424890314000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: No, but I wonder if you know anything about the server configuration for the blink service worker tests :)","msgtype":"m.text"},"ts":1424890803000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: not as much as I wish I knew, but I can try and get answers for you","msgtype":"m.text"},"ts":1424890825000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I'm trying to work out what to map the various servers to e.g. 127.0.0.1:8000, etc. It wasn't immediately clear (without trying too hard) what relationship each was intended to have with the main server (different post, different host, etc.)","msgtype":"m.text"},"ts":1424890934000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ah yes.... \"intended\" will be difficult w/o context. Generally it's just to get different origins, and it may be author's whim whether to vary host or port. Let me quick skim any docs we have to see if there's guidance...","msgtype":"m.text"},"ts":1424891066000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Oh dammit these tests have changed since I forked them :(","msgtype":"m.text"},"ts":1424891085000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://www.chromium.org/developers/testing/webkit-layout-tests#TOC-Tests-that-use-a-HTTP-Server says more... but I had never even heard of \"pending tests\" until now, digging...","msgtype":"m.text"},"ts":1424891231000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"It would be nice to coordinate with the people actually writing the tests here. I guess I could just email them…","msgtype":"m.text"},"ts":1424891241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: service workers specifically, right?","msgtype":"m.text"},"ts":1424891294000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Yeah","msgtype":"m.text"},"ts":1424891303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jsbell: That page is helful, thanks","msgtype":"m.text"},"ts":1424891315000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*helpful","msgtype":"m.text"},"ts":1424891320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm pinging the GOOG SW folks to see what the best way to coordinate with you would be. We've got some tracking cr bugs, we could spin up an issue on the SW github, etc.","msgtype":"m.text"},"ts":1424891641000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jgraham: so far as I can tell by looking at our apache config, that page is a lie; we use 8000, 8080, and 8443, not the other ports.","msgtype":"m.text"},"ts":1424891968000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Awesome, thanks!","msgtype":"m.text"},"ts":1424892348000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: What's the easiest way to tell if a string a an absolute url?","msgtype":"m.text"},"ts":1424892365000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and from a random sampling, it appears to just be up to the test author to chose between varying host or port to get a different origin. Apart from security/origin tests, which try both, of course.","msgtype":"m.text"},"ts":1424892414000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"JakeA: can we go ahead and remove scriptCaches","msgtype":"m.text"},"ts":1424893493000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1424893495000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"having a writable Cache that under-pins the ServiceWorker seems a bit dangerous... and we have no method to mark a Cache object read only currently","msgtype":"m.text"},"ts":1424893708000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm asking baku not to expose scriptCache in gecko for now","msgtype":"m.text"},"ts":1424893744000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no plans to implement it any time soon in blink, either","msgtype":"m.text"},"ts":1424894108000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thanks... good to know","msgtype":"m.text"},"ts":1424894136000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: updated https://github.com/slightlyoff/ServiceWorker/issues/473","msgtype":"m.text"},"ts":1424894283000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: there's the thing that drives the spinner, which may be similar","msgtype":"m.text"},"ts":1424899091000,"senderName":"jamesr___","senderId":"jamesr___@irc"},
{"content":{"body":"jgraham: also http://www.chromium.org/blink/serviceworker/testing - apart from host/port config and the py/php thing, if there's anything we're doing \"weird\" in our tests that's going to make upstreaming them more difficult, let me know and we can fix that doc and update our tests.","msgtype":"m.text"},"ts":1424900628000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Thanks!","msgtype":"m.text"},"ts":1424900943000,"senderName":"jgraham","senderId":"jgraham@irc"}
]