[
{"content":{"body":"We really need to fix that somehow","msgtype":"m.text"},"ts":1481958424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe we should give up on HTTP fixing it","msgtype":"m.text"},"ts":1481958448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Guess I can reach out one last time","msgtype":"m.text"},"ts":1481958462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you have a pointer to the FetchController idea? Sounds interesting","msgtype":"m.text"},"ts":1481967204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we do want to expose more things such as priority adjustments and H2 push","msgtype":"m.text"},"ts":1481967247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: sounds like that might offer it","msgtype":"m.text"},"ts":1481967276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not sure we have anything beyond \"a function that exposes an instance\"","msgtype":"m.text"},"ts":1481967403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if we can just subclass the promise and add this stuff on the returned value","msgtype":"m.text"},"ts":1481967445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah okay, so just a callback on RequestInit","msgtype":"m.text"},"ts":1481967445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1481967451000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I like promise subclass personally, feels natural to me, but Domenic was not a fan","msgtype":"m.text"},"ts":1481967508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: callback seems good too","msgtype":"m.text"},"ts":1481967534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: ^ is subclassing promises still a no-no? We're looking at adding methods onto the thing fetch() returns","msgtype":"m.text"},"ts":1481967695000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: we could put observables on there for h2 push too.","msgtype":"m.text"},"ts":1481969480000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although that gives us a TC39 dependency again","msgtype":"m.text"},"ts":1481969497000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, but H2 push is in no hurry","msgtype":"m.text"},"ts":1481973745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: adjusting priority seems good","msgtype":"m.text"},"ts":1481973800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: as something sooner rather than later","msgtype":"m.text"},"ts":1481973830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and termination of course","msgtype":"m.text"},"ts":1481973849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the more I think about it the more I want a promise subclass again. Or proxy then/catch to an underlying promise. Subclass would be preferable","msgtype":"m.text"},"ts":1481973875000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and cheap progress reports although I'm a little unclear if we have sufficient use cases for that one","msgtype":"m.text"},"ts":1481973897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: upload progress certainly","msgtype":"m.text"},"ts":1481974159000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think streams can be used for download progress efficiently, but probably needs things like BYOB reader","msgtype":"m.text"},"ts":1481974215000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"To avoid GC","msgtype":"m.text"},"ts":1481974226000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: someone else suggested we offer some kind of transform stream that exposes progress, but is otherwise transparent so the UA can optimize around that","msgtype":"m.text"},"ts":1481977047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if it takes a stream it'll have to take a content-length too","msgtype":"m.text"},"ts":1481977681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But that means you can create a generic progress transform","msgtype":"m.text"},"ts":1481977722000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: content-length could be on top in theory, but yeah, I suppose","msgtype":"m.text"},"ts":1481977792000,"senderName":"annevk","senderId":"annevk@irc"}
]