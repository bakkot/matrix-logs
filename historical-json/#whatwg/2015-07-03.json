[
{"content":{"body":"can someone help me understand step 5 here? https://dom.spec.whatwg.org/#dom-childnode-before","msgtype":"m.text"},"ts":1435884016000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"mainly, \"and to parent’s first child otherwise\"","msgtype":"m.text"},"ts":1435884033000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"basically, what am i setting to parent's first child?","msgtype":"m.text"},"ts":1435884632000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"frewsxcv: You set `viablePreviousSibling = (viablePreviousSibling != null ? viablePreviousSibling.nextSibling : parent.firstChild)`, from my understanding","msgtype":"m.text"},"ts":1435885508000,"senderName":"Mateon1","senderId":"Mateon1@irc"},
{"content":{"body":"Maybe set node to what I said","msgtype":"m.text"},"ts":1435885576000,"senderName":"Mateon1","senderId":"Mateon1@irc"},
{"content":{"body":"I don't think so, though.","msgtype":"m.text"},"ts":1435885600000,"senderName":"Mateon1","senderId":"Mateon1@irc"},
{"content":{"body":"I read \"If viablePreviousSibling is non-null, set it to viablePreviousSibling’s next sibling\"","msgtype":"m.text"},"ts":1435885933000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"viablePreviousSibling.next_sibling = viablePreviousSibling","msgtype":"m.text"},"ts":1435885949000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"but yours makes more sense","msgtype":"m.text"},"ts":1435885968000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"since mine is basically a recursive assignment","msgtype":"m.text"},"ts":1435885981000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"i suppose my thinking would have been worded \"set it as\"","msgtype":"m.text"},"ts":1435886067000,"senderName":"frewsxcv","senderId":"frewsxcv@irc"},
{"content":{"body":"JakeA: for podcasts, is the iTunes store not HTTPS yet?","msgtype":"m.text"},"ts":1435886430000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: not sure about iTunes, but when we last checked feeds, very little https","msgtype":"m.text"},"ts":1435899683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm I kind of thought feeds were all hosted by iTunes these days but now I am doubting myself, maybe iTunes is just a directory.","msgtype":"m.text"},"ts":1435902024000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: since you're awake, I've made some decent progress on cancelable promises. The remaining sticking point is propagating cancellation through resolved values","msgtype":"m.text"},"ts":1435903882000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: oh, you replied on github, I should read that first","msgtype":"m.text"},"ts":1435903928000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not too much substance in my reply really.","msgtype":"m.text"},"ts":1435905027000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: feel free to open more issues or prod me more. Was excited to look at the commit logs.","msgtype":"m.text"},"ts":1435905047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm on leave next week, so will write up remaining issues. Cheers!","msgtype":"m.text"},"ts":1435905496000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"bah, you europeans and your vacationing","msgtype":"m.text"},"ts":1435905509000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"meanwhile I end up in Japan during 4th of July so I miss those two days off","msgtype":"m.text"},"ts":1435905526000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: so... did you discuss network-spawned dialogs with sleevi?","msgtype":"m.text"},"ts":1435907117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/dom/issues/49 spam?","msgtype":"m.text"},"ts":1435907256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I chatted to him mostly about aborting, but he's in the UK today so we might be able to rope him in if he isn't busy with other stuff.","msgtype":"m.text"},"ts":1435907262000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It seemed to me that his concerns around that were about dialogs mostly, but I might be mistaken","msgtype":"m.text"},"ts":1435907359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: he was also worried about aborting, because we had a security issue around that recently, but it's been patched","msgtype":"m.text"},"ts":1435907422000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(will post a ticket for that if I can find it and it's public)","msgtype":"m.text"},"ts":1435907460000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: as for dialogs, he just wants to know where to surface http auth etc if the request comes from a SW","msgtype":"m.text"},"ts":1435907514000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if it's not public, can you copy me? Might be helpful guidance in our vetting work","msgtype":"m.text"},"ts":1435907672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: right, so you know fetch() disables HTTP auth?","msgtype":"m.text"},"ts":1435907690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I didn't. Didn't XHR allow it?","msgtype":"m.text"},"ts":1435907749000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sure, but XHR did lots of silly things, we wanted to make a better XHR, one of the things includes not showing UI by the browser","msgtype":"m.text"},"ts":1435907788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and XHR is a bit more complicated than just allow, e.g. cross-origin or with supplied credentials it would not)","msgtype":"m.text"},"ts":1435907836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm guessing there's nothing in a request object that can change that?  So a SW that does event.respondWith(fetch(event.request)) would break","msgtype":"m.text"},"ts":1435907944000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1435907957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It also breaks referrer at the moment, and maybe some other things","msgtype":"m.text"},"ts":1435907971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And redirects as we established","msgtype":"m.text"},"ts":1435907983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A thing that's not addressed currently is TLS client auth","msgtype":"m.text"},"ts":1435908104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which I think ideally would also not show UI, but according to sleevi that might break some use cases. However, I wonder if we can provide a programmatic API perhaps it might be okay...","msgtype":"m.text"},"ts":1435908148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry for slow replies, train is crawling slowly towards London through various connectivity black holes","msgtype":"m.text"},"ts":1435908233000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: is the UI case where the browser asks the user to select a cert?","msgtype":"m.text"},"ts":1435908259000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ah okay, I can do something else for a bit first","msgtype":"m.text"},"ts":1435908266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1435908270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that's basically it, I don't fully understand the protocol involved I'm afraid or where it is defined","msgtype":"m.text"},"ts":1435908289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll see what I can dig up and report back in 30 mins. I'd like to check we're doing the right thing with HTTP auth. It could just be that more of a case for event.default","msgtype":"m.text"},"ts":1435908427000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Note that what made event.default() notoriously hard was the idea of it handing back something to the service worker. Which makes it serve two clients at once.","msgtype":"m.text"},"ts":1435908686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what prompted the client.fetch() idea?","msgtype":"m.text"},"ts":1435910571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and what does it mean?","msgtype":"m.text"},"ts":1435910578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was thinking of how a request could be associated with a window client, so there was a place to show any required UI","msgtype":"m.text"},"ts":1435910629000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and if there was no associated window client, and a UI was required, the request would fail","msgtype":"m.text"},"ts":1435910646000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so event.client.fetch(event.request) could show cert or http auth UI in the client, if the client was a window","msgtype":"m.text"},"ts":1435910689000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It'd be easier if the client was part of the request, but that's tricky when it comes to caching","msgtype":"m.text"},"ts":1435910734000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"This seems tricky because it's not clear who is initiating the fetch and what it means in terms of referrer etc.","msgtype":"m.text"},"ts":1435910778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1435910875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't referrer set when the request is constructed?","msgtype":"m.text"},"ts":1435910900000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ahh ok, that happens later","msgtype":"m.text"},"ts":1435910926000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, request is constructed when fetch() is invoked","msgtype":"m.text"},"ts":1435910945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: referrer is one of the things that's not maintained at the moment","msgtype":"m.text"},"ts":1435910966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we'd basically have to allow referrer to be set to any same-origin URL and nobody has okayed that idea yet that I know","msgtype":"m.text"},"ts":1435910997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Presumably because nobody else has been thinking about referrer in the context of service workers...)","msgtype":"m.text"},"ts":1435911102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if an element makes a request for an image, a request is made with the css url as referrer. Is that not reflected in event.request?","msgtype":"m.text"},"ts":1435911196000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I can't quite parse that statement","msgtype":"m.text"},"ts":1435911244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that was bad, let me try again","msgtype":"m.text"},"ts":1435911263000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but, event.request does reflect the referrer, it is however not passed on to fetch() in anyway, fetch() uses the referrer from the environment","msgtype":"m.text"},"ts":1435911278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any way*?","msgtype":"m.text"},"ts":1435911301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh ok, so could we allow fetch to use the request's referrer, but put restrictions on when referrer can be set in manually constructed requests?","msgtype":"m.text"},"ts":1435911419000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: my idea was that we'd allow referrer to be set to any same-origin URL","msgtype":"m.text"},"ts":1435911706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if you can take referrer from a Request object you can basically get any same-origin URL anyway","msgtype":"m.text"},"ts":1435911754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess there isn't the concept of a request having headers but you can't see them with JS?","msgtype":"m.text"},"ts":1435912006000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think all forbidden headers are set post-service-workers in the network layer","msgtype":"m.text"},"ts":1435912072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what are you thinking of?","msgtype":"m.text"},"ts":1435912123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"if you can take referrer from a Request object you can basically get any same-origin URL anyway\" - so if my page's CSS, on another origin, makes a request for a background image, I can't see the referrer?","msgtype":"m.text"},"ts":1435912375000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: s/see/set/?","msgtype":"m.text"},"ts":1435912432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: see, as in event.request in the SW","msgtype":"m.text"},"ts":1435912453000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if I intercept the request for my CSS","msgtype":"m.text"},"ts":1435912511000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I should just test it…","msgtype":"m.text"},"ts":1435912517000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Cross-origin CSS seems like a major security hole...","msgtype":"m.text"},"ts":1435912519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If A embeds cross-origin CSS B, it should not be able to tell what B is fetching...","msgtype":"m.text"},"ts":1435912543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That violates the same-origin policy...","msgtype":"m.text"},"ts":1435912558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did we really not think of this?","msgtype":"m.text"},"ts":1435912567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you can get that information from computed styles","msgtype":"m.text"},"ts":1435912578000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That is not at all the same","msgtype":"m.text"},"ts":1435912588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not by a long shot","msgtype":"m.text"},"ts":1435912594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1435912626000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"There's a reason cross-origin CSSOM requires CORS","msgtype":"m.text"},"ts":1435912626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1435912633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what does it expose?","msgtype":"m.text"},"ts":1435912668000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"E.g. if that stylesheet uses credentials or relies on firewall IP-based authentication it could expose tokens in images it fetches","msgtype":"m.text"},"ts":1435912712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that wouldn't show up in computed styles?","msgtype":"m.text"},"ts":1435912742000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"With getComputedStyle you need to know where to look","msgtype":"m.text"},"ts":1435912765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And getComputedStyle wouldn't e.g. work with tokens in CSS subresources","msgtype":"m.text"},"ts":1435912799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: by subresources you mean @import?","msgtype":"m.text"},"ts":1435912826000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1435912836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes to check what resource timing API does here","msgtype":"m.emote"},"ts":1435912905000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Not sure that group has done their vetting carefully","msgtype":"m.text"},"ts":1435913029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1435913042000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: thanks, seems like it's breaking a great number of specifications, e.g. can't update Notifications API either","msgtype":"m.text"},"ts":1435913141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so resource timing does expose requests from cross-origin CSS","msgtype":"m.text"},"ts":1435913314000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1435913324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lemmie check it's not just Chrome…","msgtype":"m.text"},"ts":1435913354000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah, Firefox exposes it too","msgtype":"m.text"},"ts":1435913419000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://jakearchibald.com/ & performance.getEntriesByType('resource').map(obj => obj.name)","msgtype":"m.text"},"ts":1435913445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://github.com/slightlyoff/ServiceWorker/issues/719","msgtype":"m.text"},"ts":1435913458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so FWIW, if we can't go the API route for TLS client auth we need something like passing a reference to a client to fetch()","msgtype":"m.text"},"ts":1435913707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: perhaps each worker (including service workers) should simply hold a reference to the \"prominent browsing context\" (or null) and pass that along","msgtype":"m.text"},"ts":1435913749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I guess if we do that, we'd solve the \"no-cors\" http thing by banning http URLs if that's null (and global's origin is secure, to not affect dedicated/shared workers)","msgtype":"m.text"},"ts":1435913847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just before we move on from the CSS thing… the CSS make the request (bg img, @import) in the context of the page (it isn't its own client), so isn't it reasonable for that to be visible to the page owner? What about a cross-origin script doing new Image(url)?","msgtype":"m.text"},"ts":1435913908000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and perhaps that check should be in mixed content even, but I'll file an issue against Fetch for now, depending on that HTTP auth issue","msgtype":"m.text"},"ts":1435913928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: a cross-origin script cannot be sure that the things it invokes have not been meddled with","msgtype":"m.text"},"ts":1435914068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ouch, pretty bad Chrome bug http://musalbas.github.io/address-spoofing-poc/","msgtype":"m.text"},"ts":1435914312000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"actually you can't interact with the page so it's not as bad as I thought","msgtype":"m.text"},"ts":1435914497000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but still","msgtype":"m.text"},"ts":1435914498000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: \"prominent browsing context\" would be either the focused window, a visible window, any window, or null? (in that order of preference?)","msgtype":"m.text"},"ts":1435914562000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, something like that I guess","msgtype":"m.text"},"ts":1435914635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose as I developer I could potentially predict the outcome by looking at clients.matchAll","msgtype":"m.text"},"ts":1435914667000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: alternatively we could give the developer control over the window","msgtype":"m.text"},"ts":1435914694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's how I came to client.fetch","msgtype":"m.text"},"ts":1435914931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think client.fetch makes sense since you'd need to branch your code depending on what you anticipate the response will be","msgtype":"m.text"},"ts":1435914966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and that API suggests other things to me, like the client will actually run the fetch, meaning it would go through the service worker again, or some such","msgtype":"m.text"},"ts":1435915015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it'd be 'neater' if it were part of the request. We've gone back & forward on where \"client\" sits. Because of caching it feels like it shouldn't be part of the request object","msgtype":"m.text"},"ts":1435915046000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: true, I thought \"client isn't part of the storable request, but it's part of the execution of the request\", which is when I tried to build the association between the client & the fetching","msgtype":"m.text"},"ts":1435915081000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: here's that header truncation issue https://code.google.com/p/chromium/issues/detail?id=244260","msgtype":"m.text"},"ts":1435915179000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Depending on the outcome of that issue and how flexible this needs to be, setting a browsing context might not even be exposed...","msgtype":"m.text"},"ts":1435915192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which issue?","msgtype":"m.text"},"ts":1435915421000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"119","msgtype":"m.text"},"ts":1435915431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh gotcha","msgtype":"m.text"},"ts":1435915465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I think your \"any origin window\" idea is good enough. Will write up the options on that ticket","msgtype":"m.text"},"ts":1435915683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"will get someone to look at that CSS CORS issue too","msgtype":"m.text"},"ts":1435915721000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We still need to figure out how to update Fetch et al to catch those network-generated dialogs and surface them","msgtype":"m.text"},"ts":1435915748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But baby steps, I guess","msgtype":"m.text"},"ts":1435915753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would prefer though that fetch() by default generates no UI still...","msgtype":"m.text"},"ts":1435915768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And ideally it never does and if you rely on HTTP auth you just implement it yourself (you can with fetch())","msgtype":"m.text"},"ts":1435915791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if you rely on TLS client auth we need to think of something new... But maybe that one isn't feasible","msgtype":"m.text"},"ts":1435915806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: another big problem with SW is that we haven't rewritten all the features that should use Fetch, but currently invoke something else","msgtype":"m.text"},"ts":1435916739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: this makes it very unclear how they should work and handle certain types of responses","msgtype":"m.text"},"ts":1435916757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, there's some translation going on, so potentially wrong assumptions made","msgtype":"m.text"},"ts":1435916804000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well and most specs still assume the authority is with the request, whereas we shifted it to be on the response","msgtype":"m.text"},"ts":1435916839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which is a pretty big shift","msgtype":"m.text"},"ts":1435916845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: https://critic.hoppipolla.co.uk/r/4453","msgtype":"m.text"},"ts":1435920029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: ^^","msgtype":"m.text"},"ts":1435920041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there supposed to be a difference between \"Let source be the browsing context that contains the Document object with which subject in question is associated.\" and \"let target be the browsing context that subject itself is in.\" in https://html.spec.whatwg.org/multipage/semantics.html#following-hyperlinks-2 ?","msgtype":"m.text"},"ts":1435926688000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I think the answer is no","msgtype":"m.text"},"ts":1435926771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it would be clearer if target were set to source","msgtype":"m.text"},"ts":1435926781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1435926785000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'd suggest that, but without an editor...","msgtype":"m.text"},"ts":1435926807000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: there's a bunch of prose problems there","msgtype":"m.text"},"ts":1435926840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unsurprisingly :)","msgtype":"m.text"},"ts":1435926853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: could at least file a bug","msgtype":"m.text"},"ts":1435926989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there a much content relying on application/xhtml+xml ? (Should Servo try to support it at all?)","msgtype":"m.text"},"ts":1435927639000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It's not exactly hard, is it?","msgtype":"m.text"},"ts":1435927656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We don't support XML yet :)","msgtype":"m.text"},"ts":1435927795000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But there's an XML5 parser now","msgtype":"m.text"},"ts":1435927808000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Isn't that enough?","msgtype":"m.text"},"ts":1435927886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how much XML5 will break?","msgtype":"m.text"},"ts":1435927887000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Glue :)","msgtype":"m.text"},"ts":1435927898000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It shouldn't really break anything, but who knows","msgtype":"m.text"},"ts":1435927912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my point is that while we may wanna try XML5 for SVG and some other things that require an XML parser, maybe we should still not support XHTML","msgtype":"m.text"},"ts":1435927968000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"If you're going to have an XML parser, you should just parse everything +xml with it and not make exclusions","msgtype":"m.text"},"ts":1435928023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that’s… RFC 3023 ?","msgtype":"m.text"},"ts":1435928105000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"https://tools.ietf.org/html/rfc7303 these days","msgtype":"m.text"},"ts":1435928291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so the truncation issue sleevi mentioned is actually bigger when we introduce streams / cancel","msgtype":"m.text"},"ts":1435933543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it puts an attacker in control of the contents of \"no-cors\" resources","msgtype":"m.text"},"ts":1435933590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which is problematic","msgtype":"m.text"},"ts":1435933606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, maybe stream-wise those will be opaque so you don't get a stream... But there might be some other angle... But cancelation-wise the concerns still apply I think...","msgtype":"m.text"},"ts":1435933665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. That specific issue was down to Chrome not parsing headers properly, but maybe there are other security-sensitive formats that don't have a delimiter?","msgtype":"m.text"},"ts":1435933772000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: anything you can do with .cancel() could happen by going offline. So if it's a security issue it's already a security issue, just whether it happens accidentally or deliberately.","msgtype":"m.text"},"ts":1435933888000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, that seems somewhat absurd","msgtype":"m.text"},"ts":1435933926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: an attacker has control over cancel() and can easily try it many times without requiring the user to do anything special","msgtype":"m.text"},"ts":1435933988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed. It makes the highly unlikely quite possible, but it doesn't make the impossible possible.","msgtype":"m.text"},"ts":1435934177000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess it also depends on how we handle the cancelation in Fetch","msgtype":"m.text"},"ts":1435934220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Looking into the issue today, but remember you can always force-generate.","msgtype":"m.text"},"ts":1435934769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"input[type=hidden i]\" — am I missing something? what's that i for?","msgtype":"m.text"},"ts":1435935147000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Marks the value as matching CI","msgtype":"m.text"},"ts":1435935408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ASCII case-insensitive*","msgtype":"m.text"},"ts":1435936284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I've made a couple of mistakes in my latest cancelable promise commits, so don't worry about all the breakages. Will fix.","msgtype":"m.text"},"ts":1435938445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jochen__: any ETA on working on Referrer again?","msgtype":"m.text"},"ts":1435939941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't mind standing every dayyyyyy","msgtype":"m.text"},"ts":1435941121000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"out on your corner in the pouring raaaaain","msgtype":"m.text"},"ts":1435941131000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"look for the girl with the broken smile","msgtype":"m.text"},"ts":1435941158000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"ask her if she wants to a whiiiile","msgtype":"m.text"},"ts":1435941176000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"AND SHE WIIIIILL BE LOOOOOOOVED","msgtype":"m.text"},"ts":1435941191000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"Good channel for that. Totally meant it for another :P","msgtype":"m.text"},"ts":1435941235000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"well friday is as good a day as any for irc karaoke","msgtype":"m.text"},"ts":1435942282000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I should definitely have picked a cooler song to accidentally belt out though","msgtype":"m.text"},"ts":1435942321000,"senderName":"BigPants","senderId":"BigPants@irc"},
{"content":{"body":"the temptations is always a good pick","msgtype":"m.text"},"ts":1435942363000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: i'm working on it non-stop!","msgtype":"m.text"},"ts":1435944284000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: what's up with it?","msgtype":"m.text"},"ts":1435944288000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Can someone please remove X-UA-Compatible from https://wiki.whatwg.org/wiki/PragmaExtensions ? It became an official pragma: https://html.spec.whatwg.org/multipage/semantics.html#attr-meta-http-equiv-x-ua-compatible","msgtype":"m.text"},"ts":1435956541000,"senderName":"cvrebert","senderId":"cvrebert@irc"},
{"content":{"body":"peoples!  if I were unsure whether getBoundingClientRect().top could ever be -0, do people think it'd make more sense to file the bug on getBoundingClientRect, or on DOMRect?","msgtype":"m.text"},"ts":1435963223000,"senderName":"jwalden","senderId":"jwalden@irc"}
]