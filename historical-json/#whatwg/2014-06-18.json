[
{"content":{"body":"success! my pipline now outputs the same as anolis","msgtype":"m.text"},"ts":1403049706000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...for the first line of the file, anyway","msgtype":"m.text"},"ts":1403049712000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: validator.nu is fast enough that it can check the entire HTML spec in less than 3 seconds","msgtype":"m.text"},"ts":1403054593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: the part of that time that's taken up by parsing is milliseconds","msgtype":"m.text"},"ts":1403054695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: around?","msgtype":"m.text"},"ts":1403057969000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"gsnedders: hey do you know what order anolis uses for attributes when serialising?","msgtype":"m.text"},"ts":1403059828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: really?","msgtype":"m.text"},"ts":1403059833000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: it always seems to take quite a lot longer, to me...","msgtype":"m.text"},"ts":1403059841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: hm, no, i guess you're right","msgtype":"m.text"},"ts":1403059902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: that's pretty impressive","msgtype":"m.text"},"ts":1403059923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the power of hsivonen","msgtype":"m.text"},"ts":1403059941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"of course this is a different machine","msgtype":"m.text"},"ts":1403059951000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i dunno how it compares","msgtype":"m.text"},"ts":1403059954000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1403059968000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what tricks does the parser use?","msgtype":"m.text"},"ts":1403060041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, things like interning the strings to do string comparisons, dispatch tables, etc","msgtype":"m.text"},"ts":1403060051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that you would need to ask Henri about","msgtype":"m.text"},"ts":1403060092000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm really only familiar with the parts of the parser code that I've patched, which isn't very many parts, and mostly trivial","msgtype":"m.text"},"ts":1403060120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I'm not reminded that I'm waiting on Henri to make a decision about handling of un-ambiguous ampersands in the parser to bring it into conformance with the HTML spec","msgtype":"m.text"},"ts":1403060190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i don't understand the whitespace stripping that anolis does","msgtype":"m.text"},"ts":1403060255000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually i guess it's probably libhtml or whatever parser anolis uses","msgtype":"m.text"},"ts":1403060266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the validator error messages about, e.g., the ampersand in \"http://x?foo&bar\" being invalid are actually generated by the parser, which is an error-reporting implementation)","msgtype":"m.text"},"ts":1403060274000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: bingo","msgtype":"m.text"},"ts":1403060283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"still, i don't understand it","msgtype":"m.text"},"ts":1403060328000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in my experience there are a lot of WTFs in the results from the 3rd-party library code that anolis and the splitter use","msgtype":"m.text"},"ts":1403060351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah but if i don't reproduce those wtfs precisely, it's gonna be a pain to check the results :-)","msgtype":"m.text"},"ts":1403060421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1403060449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hey, I'm a bit unclear about the xhr spec, anyone who can help with that?","msgtype":"m.text"},"ts":1403060514000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Specifically, http://xhr.spec.whatwg.org/#the-send()-method step 13","msgtype":"m.text"},"ts":1403060524000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Hixie: I dealt with them in the past just be doing some post-processing. but I never noticed weirdness in teh WS handling","msgtype":"m.text"},"ts":1403060537000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The handling for synchronous requests is not totally clear to me since it seems to omit some important steps","msgtype":"m.text"},"ts":1403060561000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: annevk would be the one to ask but pretty sure he's sleeping at these hours","msgtype":"m.text"},"ts":1403060580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403060592000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Ms2ger isn't around either, usually I ask him :)","msgtype":"m.text"},"ts":1403060606000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: I wonder why you want to handle synchronous requests","msgtype":"m.text"},"ts":1403060645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: because I'm implementing XHR, and web-platform-tests wants them","msgtype":"m.text"},"ts":1403060741000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1403060751000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"wpt uses sync fetch often to get better workflow. I agree that sync fetch is a rather bad way of doing things on the web","msgtype":"m.text"},"ts":1403060791000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1403060855000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I didn't know wpt was doing that","msgtype":"m.text"},"ts":1403060868000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The one that's breaking for me right now is https://github.com/w3c/web-platform-tests/blob/master/XMLHttpRequest/abort-after-send.htm","msgtype":"m.text"},"ts":1403060886000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1403060893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because I'm not setting the readystate properly","msgtype":"m.text"},"ts":1403060897000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"When the spec says \"If req's synchronous flag is set, pass the return value, synchronously, to process response end-of-file below.\"","msgtype":"m.text"},"ts":1403060914000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I'm not sure if I'm suposed to skip the other \"process\" steps. I'm doing the steps, storing the data, but not sure if I should be changing ready state and firing events","msgtype":"m.text"},"ts":1403060947000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"readystatechange/onprogress doesn't make much sense for sync anyway","msgtype":"m.text"},"ts":1403060965000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1403060980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So for sync should the only effect on the XHR object be the changing of the ready state to Done when it finishes?","msgtype":"m.text"},"ts":1403061042000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"or should I be changing the ready state each step for sync, but not firing the event?","msgtype":"m.text"},"ts":1403061108000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"tries to think of who else might be around right now who's implemented XHR","msgtype":"m.emote"},"ts":1403061182000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah wait you're the one who's working on the XHR ipmlementation for servo?","msgtype":"m.text"},"ts":1403061214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"scratches off his \"ask that guy who's working on the XHR implementation in servo\" suggestion","msgtype":"m.emote"},"ts":1403061256000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"pahaha","msgtype":"m.text"},"ts":1403061305000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"smaug's not awake yet either","msgtype":"m.text"},"ts":1403061307000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"np, I'll wait till Ms2ger comes back then. I have one way of fixing the immediate issue, but I think it's best if I'm clear about that part of the spec","msgtype":"m.text"},"ts":1403061531000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Hixie: maybe you can run anolis with html5lib instead for comparison of the result?","msgtype":"m.text"},"ts":1403069340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Manishearth: around now","msgtype":"m.text"},"ts":1403073239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: yeah, even for synchronous you should dispatch readystatechange et al in the end","msgtype":"m.text"},"ts":1403073298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: but yeah, that could be done better","msgtype":"m.text"},"ts":1403073342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: sync XHR is one of those fun APIs that runs javascript reentrantly","msgtype":"m.text"},"ts":1403073483000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"the blink implementation is pretty straightforward, i can check things if you'd like","msgtype":"m.text"},"ts":1403073493000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: not per spec","msgtype":"m.text"},"ts":1403073495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh? in webkit/blink the rsc events fire 'under' the send() call, i believe","msgtype":"m.text"},"ts":1403073519000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"cooks up test","msgtype":"m.emote"},"ts":1403073529000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: per spec there's only a final set of events just before send() returns","msgtype":"m.text"},"ts":1403073551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_: but since the events are sync too, that's not re-entrant","msgtype":"m.text"},"ts":1403073571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the event handlers run before control returns to whoever calls send(), no?","msgtype":"m.text"},"ts":1403073598000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: sure","msgtype":"m.text"},"ts":1403073607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_: I guess that's a bit re-entrant, but no more than some custom function I have invoking dispatchEvent()","msgtype":"m.text"},"ts":1403073641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok. i guess it's a terminology difference, then. to me that's reentrant","msgtype":"m.text"},"ts":1403073643000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"right, since they are event handlers","msgtype":"m.text"},"ts":1403073654000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: fair, I was thinking nested event loop","msgtype":"m.text"},"ts":1403073655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_: which is what Gecko has at the moment and is definitely not supported by the spec","msgtype":"m.text"},"ts":1403073669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nah. we don't run anything else while the xhr is out","msgtype":"m.text"},"ts":1403073670000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"in chromium, the entire process's blink thread is locked","msgtype":"m.text"},"ts":1403073687000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"So six months after the purported deadline of ES6, class design is being reconsidered","msgtype":"m.text"},"ts":1403074220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When I said a while back it would take at least a year for people to get around to do proper subclassing everywhere, people got angry","msgtype":"m.text"},"ts":1403074294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lunchtime for me, will get back to you on this. Thanks!","msgtype":"m.text"},"ts":1403074478000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"is servo attempting the storage mutex stuff? or skipping it?","msgtype":"m.text"},"ts":1403074722000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"doesn't know","msgtype":"m.emote"},"ts":1403075111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: morning","msgtype":"m.text"},"ts":1403075421000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I added a question to the pad on the first algorithm","msgtype":"m.text"},"ts":1403075446000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: if the associated document is document.svg would url(document.svg#frag) be treated as element reference?","msgtype":"m.text"},"ts":1403075502000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: ..assuming the specified value is on an external CSS","msgtype":"m.text"},"ts":1403075526000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it certainly can’t be used as image since it would reference itself","msgtype":"m.text"},"ts":1403075566000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: why can't it be fetched and treated as image?","msgtype":"m.text"},"ts":1403075586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: more important, what do implementations do now?","msgtype":"m.text"},"ts":1403075616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: depends on the property… need to check an example with image… one moment","msgtype":"m.text"},"ts":1403075666000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm again surprised these questions haven't come up before, but I guess it's good we are addressing them now","msgtype":"m.text"},"ts":1403075711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there are no properties that reference images in SVG","msgtype":"m.text"},"ts":1403075919000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: With the exception of ‘cursor'","msgtype":"m.text"},"ts":1403075945000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, but is it treated as an external reference today or an internal?","msgtype":"m.text"},"ts":1403075991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: if url(style.css#frag) is internal, surely that must be external","msgtype":"m.text"},"ts":1403076024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that depends on the property. There is no implemented property that can be either of both today","msgtype":"m.text"},"ts":1403076031000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: not even in Gecko?","msgtype":"m.text"},"ts":1403076048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not even in Gecko…. however, give me a couple of minutes and I reproduce it with fill and cursor","msgtype":"m.text"},"ts":1403076072000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, but we should still be able to answer the question, if url(style.css#frag) is internal, then url(document.svg#frag) is either external or should not work","msgtype":"m.text"},"ts":1403076167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: can we at least confirm that much?","msgtype":"m.text"},"ts":1403076176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, self referencing with cursor doesn’t work","msgtype":"m.text"},"ts":1403076181000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: are you testing in a browser that supports SVG for cursors?","msgtype":"m.text"},"ts":1403076212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: needs checking in FF as well. I already told you what Blink and WebKit would do","msgtype":"m.text"},"ts":1403076216000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I would need to search a browser that doesn't","msgtype":"m.text"},"ts":1403076230000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: of course it supports SVG","msgtype":"m.text"},"ts":1403076243000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: does it start working if the style sheet is then associated with a different document?","msgtype":"m.text"},"ts":1403076255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are the tests online?","msgtype":"m.text"},"ts":1403076351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, can paste them","msgtype":"m.text"},"ts":1403076373000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/vf3hQKYS","msgtype":"m.text"},"ts":1403076411000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"style.css#grad doesn’t work, self.html#grad does in Firefox","msgtype":"m.text"},"ts":1403076439000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"and #grad does too?","msgtype":"m.text"},"ts":1403076462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1403076494000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":":-(","msgtype":"m.text"},"ts":1403076503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: same behavior in Blink WebKit (to my surprise)","msgtype":"m.text"},"ts":1403076508000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so the algorithm does not what FF, Chrome and Safari do today","msgtype":"m.text"},"ts":1403076555000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: in http://dump.testsuite.org/svg/url-parsing.html with #grad it does not work in Firefox","msgtype":"m.text"},"ts":1403076778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it does","msgtype":"m.text"},"ts":1403076818000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it is red","msgtype":"m.text"},"ts":1403076823000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: refresh","msgtype":"m.text"},"ts":1403076830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Nightly there is no red","msgtype":"m.text"},"ts":1403076841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only if I change it to url-parsing.html#grad","msgtype":"m.text"},"ts":1403076853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That means Firefox actually does sensible URL parsing here","msgtype":"m.text"},"ts":1403076874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hm, interesting… it does work locally","msgtype":"m.text"},"ts":1403076923000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"no it doesn't","msgtype":"m.text"},"ts":1403076953000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Yay Firefox for sanity","msgtype":"m.text"},"ts":1403076971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It does work in Safari, Chrome and IE","msgtype":"m.text"},"ts":1403077070000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I recommend we get them to fix this bug","msgtype":"m.text"},"ts":1403077088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ed: willing to change the behavior on Blink —^","msgtype":"m.text"},"ts":1403077127000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"*in","msgtype":"m.text"},"ts":1403077134000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"not sure ed is in this channel","msgtype":"m.text"},"ts":1403077147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"argh, wait","msgtype":"m.text"},"ts":1403077160000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"he is offline :(","msgtype":"m.text"},"ts":1403077173000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ah okay","msgtype":"m.text"},"ts":1403077180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know why this happens in WebKit and Blink and the implementation needs to be fixed anyway","msgtype":"m.text"},"ts":1403077194000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Yeah, you told me they parse the URL and then grab the fragment not doing any comparisons","msgtype":"m.text"},"ts":1403077215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wouldn’t mind changing the behavior in WebKit when I get to implement it","msgtype":"m.text"},"ts":1403077217000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Very happy Firefox didn't fuck it up","msgtype":"m.text"},"ts":1403077236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is not fully true anymore…. style.css#frag doesn’t work either","msgtype":"m.text"},"ts":1403077243000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Fair, so they must special case # at the start somehow","msgtype":"m.text"},"ts":1403077271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I assume we check the baseURL at the beginning… later we just care about the fragment identifier","msgtype":"m.text"},"ts":1403077321000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I am willing to change that","msgtype":"m.text"},"ts":1403077364000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so /document/ is still not correct in the algorithm… it must always check associated document URL","msgtype":"m.text"},"ts":1403077404000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: which can be /document/ but doesn’t need to","msgtype":"m.text"},"ts":1403077418000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, we should probably split CSS and element handling","msgtype":"m.text"},"ts":1403077422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: otherwise this gets too confusing","msgtype":"m.text"},"ts":1403077439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, we would split it anyway and the behavior needs to go to CSS directly","msgtype":"m.text"},"ts":1403077462000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: as a general behavior for future usage of url()","msgtype":"m.text"},"ts":1403077487000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, my plan is to write an email to www-style about this and work with TabAtkins to make it happen","msgtype":"m.text"},"ts":1403077600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: but before I do that I think it would be good for us to write the actual algorithms to make sure we're not missing anything","msgtype":"m.text"},"ts":1403077625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k.","msgtype":"m.text"},"ts":1403077690000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Btw. with stacked SVGs, fragment sniffing is still possible cross domain","msgtype":"m.text"},"ts":1403077711000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: the one thing the abarth thought would be a problem","msgtype":"m.text"},"ts":1403077723000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: not sure if it really is a problem since you can mostly do it with JS today","msgtype":"m.text"},"ts":1403077740000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: or even manually","msgtype":"m.text"},"ts":1403077751000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: just clip-path: url() is still a problem since it changes geometry… but this would require sensitive data within the clip-path","msgtype":"m.text"},"ts":1403077859000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"...so encoding a password in the path data of clip-path","msgtype":"m.text"},"ts":1403077904000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"which we of course can not prevent someone from doing…. but it is extremely unlikely as well","msgtype":"m.text"},"ts":1403077934000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"how can you do fragment sniffing using :target?","msgtype":"m.text"},"ts":1403078256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, abarth use case was the active involvement of the user","msgtype":"m.text"},"ts":1403078284000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: with :target you can make certain element visible or invisible","msgtype":"m.text"},"ts":1403078306000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but you don't know anything about the remote file","msgtype":"m.text"},"ts":1403078317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not without the help of the user","msgtype":"m.text"},"ts":1403078335000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: the link from abarth https://news.ycombinator.com/item?id=7855168","msgtype":"m.text"},"ts":1403078350000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I don't understand, the remote file would have to use :target","msgtype":"m.text"},"ts":1403078355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, that is true","msgtype":"m.text"},"ts":1403078372000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I don't really follow the attack scenario","msgtype":"m.text"},"ts":1403078378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, back in a bit","msgtype":"m.text"},"ts":1403078417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So do you think that in the sync case, all readystatechange events should be fired?","msgtype":"m.text"},"ts":1403081097000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"because thir handlers will only be executed after the sync finishes","msgtype":"m.text"},"ts":1403081108000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"or should the *last* one be the only one to fire?","msgtype":"m.text"},"ts":1403081134000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"krit: I updated the algorithms","msgtype":"m.text"},"ts":1403081377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: they now work for either style sheets or documents","msgtype":"m.text"},"ts":1403081384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looking","msgtype":"m.text"},"ts":1403081392000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Manishearth: only the last","msgtype":"m.text"},"ts":1403081399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Alrighty. Same answer for progress events?","msgtype":"m.text"},"ts":1403081430000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(only fire the last triplet of events)","msgtype":"m.text"},"ts":1403081438000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: the idea is that sync would invoke \"To process response end-of-file for response, run these substeps: \"","msgtype":"m.text"},"ts":1403081462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: there's a bug now though that state would not be LOADING","msgtype":"m.text"},"ts":1403081477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exactly :)","msgtype":"m.text"},"ts":1403081487000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"that's how I found it out","msgtype":"m.text"},"ts":1403081492000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: yeah I should rewrite this a bit to make it more clear what the synchronous handling is","msgtype":"m.text"},"ts":1403081521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My ready state in sync wasn't changing because I had implemented the spec, and I thought I had misinterpreted the \"If req's synchronous flag is set, pass the return value, synchronously, to process response end-of-file below.\"","msgtype":"m.text"},"ts":1403081542000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: how would you like to be acknowledged?","msgtype":"m.text"},"ts":1403081642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manish Goregaokar?","msgtype":"m.text"},"ts":1403081653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think a simple `If state is LOADING or the sync flag is set, run these subsubsteps:` would work","msgtype":"m.text"},"ts":1403081655000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1403081660000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1403081662000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: to confirm, for #get-svg-element it is not possible for authors to specify a dataURL or blob… in general it seems just possible for fetching images","msgtype":"m.text"},"ts":1403081662000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: note: no idea if dataURL or blog would make sense","msgtype":"m.text"},"ts":1403081688000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hee","msgtype":"m.text"},"ts":1403081689000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"here","msgtype":"m.text"},"ts":1403081691000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"why would it not be possible?","msgtype":"m.text"},"ts":1403081723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in your algorithm it would run into fetch, no?","msgtype":"m.text"},"ts":1403081792000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes, and Fetch handles data and blob URLs","msgtype":"m.text"},"ts":1403081810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fetch is not permitted if /internal only flag/ is true","msgtype":"m.text"},"ts":1403081815000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: that means dataURL and blob are not allowed for SVG as image","msgtype":"m.text"},"ts":1403081834000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"image/svg+xml","msgtype":"m.text"},"ts":1403081844000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no it doesn't","msgtype":"m.text"},"ts":1403081846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: the internal only flag is for cases that don't handle external references","msgtype":"m.text"},"ts":1403081858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: it's not for SVG as image","msgtype":"m.text"},"ts":1403081872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, got it","msgtype":"m.text"},"ts":1403081874000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"lets rename that one to local only flag","msgtype":"m.text"},"ts":1403081913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: #get-local-svg-element seems to allow style.css#frag","msgtype":"m.text"},"ts":1403081914000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"no it doesn't","msgtype":"m.text"},"ts":1403081923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" /baseURL/ would be the style sheet's URL and /document/ would be the style sheet's associated document","msgtype":"m.text"},"ts":1403081947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, because we do not look at external CSS anymore?","msgtype":"m.text"},"ts":1403081950000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ahh","msgtype":"m.text"},"ts":1403081957000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1403081958000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: is that defined that way in Fetch alread?","msgtype":"m.text"},"ts":1403081983000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: or does the algorithm need to do that","msgtype":"m.text"},"ts":1403081994000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Is what defined?","msgtype":"m.text"},"ts":1403082007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: it might take me a while to get to this, I'd like to fix it more properly than that","msgtype":"m.text"},"ts":1403082017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, I see. No problem","msgtype":"m.text"},"ts":1403082033000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: this “/document/ would be the style sheet's associated document\"","msgtype":"m.text"},"ts":1403082035000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"We might have to change the wording for the error handling too","msgtype":"m.text"},"ts":1403082046000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"krit: no, that all needs to be handled by SVG and CSS","msgtype":"m.text"},"ts":1403082062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: Fetch only deals with getting a bag of bits out of a URL","msgtype":"m.text"},"ts":1403082085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: and all the hassle that comes with that, it doesn't have magic built in","msgtype":"m.text"},"ts":1403082095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no magic, k :D","msgtype":"m.text"},"ts":1403082134000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what Fetch handles is indicated with [FETCH]","msgtype":"m.text"},"ts":1403082161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1403082173000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"everything else, including the line indicated with [FETCH] (so everything really) needs to be in SVG / CSS","msgtype":"m.text"},"ts":1403082195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: actually, maybe these algorithms should take a parsedURL and a document, that seems better","msgtype":"m.text"},"ts":1403082313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fetching an SVG element: “...MIME type is not image/svg+xml” what about application/xml","msgtype":"m.text"},"ts":1403082367000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: SVG can still be an XML documen","msgtype":"m.text"},"ts":1403082377000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"t","msgtype":"m.text"},"ts":1403082378000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: or, inline SVG, where the fetched SVG element is in an HTML document","msgtype":"m.text"},"ts":1403082402000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I thought that was outlawed","msgtype":"m.text"},"ts":1403082406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The CSS example that you uploaded used it. ok was local, but I think FF supports it for other HTML documents as well","msgtype":"m.text"},"ts":1403082460000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: only Firefox would support it…","msgtype":"m.text"},"ts":1403082498000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"local is completely different","msgtype":"m.text"},"ts":1403082501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: depends, how does <use> work?","msgtype":"m.text"},"ts":1403082520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uses the processing algorithm from SVG that you referenced yesterday","msgtype":"m.text"},"ts":1403082552000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: not restricted to mime type it seems","msgtype":"m.text"},"ts":1403082628000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: http://www.w3.org/TR/SVG/linking.html#processingIRI","msgtype":"m.text"},"ts":1403082647000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what about implementations?","msgtype":"m.text"},"ts":1403082685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: again, just Firefox would have implemented it… maybe Presto","msgtype":"m.text"},"ts":1403082708000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: creating an example","msgtype":"m.text"},"ts":1403082714000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I thought ed demonstrated external <use> support in Blink?","msgtype":"m.text"},"ts":1403082732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh right… was about to check for CSS","msgtype":"m.text"},"ts":1403082752000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: for CSS I don’t even get it to work with paint server in another SVG file right now...","msgtype":"m.text"},"ts":1403083041000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: same for paint server in an SVG","msgtype":"m.text"},"ts":1403083061000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/SVG/HTML/","msgtype":"m.text"},"ts":1403083068000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: ok, paint server in SVG document works… in HTML doesn't","msgtype":"m.text"},"ts":1403083141000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: for CSS on Firefox","msgtype":"m.text"},"ts":1403083153000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so I thought the idea was that external SVG elements would follow the SVG as image path","msgtype":"m.text"},"ts":1403083168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: which means only image/svg+xml","msgtype":"m.text"},"ts":1403083174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the same mode…","msgtype":"m.text"},"ts":1403083212000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: same mode as  image/svg+xml","msgtype":"m.text"},"ts":1403083220000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: but let me check <use> first","msgtype":"m.text"},"ts":1403083227000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: example with <use> to other <svg> https://dl.dropboxusercontent.com/u/39760138/self/selfReference.html","msgtype":"m.text"},"ts":1403083428000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: seems not to work in FF, but in Safar/Chrome","msgtype":"m.text"},"ts":1403083440000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: https://dl.dropboxusercontent.com/u/39760138/self/selfReference2.html <use> element reference to HTML","msgtype":"m.text"},"ts":1403083532000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: doesn’t work anywhere","msgtype":"m.text"},"ts":1403083537000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: ok, had a styling issue… first example works in FF now","msgtype":"m.text"},"ts":1403083647000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: 2nd seems to run in loops","msgtype":"m.text"},"ts":1403083676000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: FF doesn’t stop loading","msgtype":"m.text"},"ts":1403083687000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: possibly a bug in FF","msgtype":"m.text"},"ts":1403083693000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: https://dl.dropboxusercontent.com/u/39760138/self/selfReference3.html in this case I have a other.xml that I reference it works… but probably because browsers don’t always trust the mime type","msgtype":"m.text"},"ts":1403083793000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Firefox loads it with MIME type application/xml","msgtype":"m.text"},"ts":1403083846000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: other.xml","msgtype":"m.text"},"ts":1403083850000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, that does indicate the MIME type check is different for external references from images","msgtype":"m.text"},"ts":1403083860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so image/svg+xml and application/xml should be possible","msgtype":"m.text"},"ts":1403083870000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"which seems like a good reason keep external references and images distinct","msgtype":"m.text"},"ts":1403083897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and potentially apply different fetch modes to them","msgtype":"m.text"},"ts":1403083911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this again!","msgtype":"m.text"},"ts":1403084261000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I thought we had previously converged on a consensus to make external references and images use the same fetch model","msgtype":"m.text"},"ts":1403084306000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hey roc","msgtype":"m.text"},"ts":1403084440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: it seems that is impossible given that we support things like image.svg#test","msgtype":"m.text"},"ts":1403084456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: http://dahlström.net/svg/structure/svgstack-usage.html","msgtype":"m.text"},"ts":1403084481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: we're trying to figure out SVG/CSS fetching bits a bit more formally here https://etherpad.mozilla.org/fixing-svg-processing","msgtype":"m.text"},"ts":1403084516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought the resolution was to make everything use the image model","msgtype":"m.text"},"ts":1403085049000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: given mask:url(someurl#test)","msgtype":"m.text"},"ts":1403085672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: how do we know whether that's an image with #test or an mask identified by #test?","msgtype":"m.text"},"ts":1403085698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do an image load","msgtype":"m.text"},"ts":1403085746000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if #test is a <mask> element, treat it as a mask","msgtype":"m.text"},"ts":1403085760000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"do some kind of same-origin check","msgtype":"m.text"},"ts":1403085783000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"We had this worked out somewhere","msgtype":"m.text"},"ts":1403085790000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Manishearth: should be more clear now","msgtype":"m.text"},"ts":1403085862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: yes, except http://dahlström.net/svg/structure/svgstack-usage.html seems to kill that solution","msgtype":"m.text"},"ts":1403085898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: and apparently we allow more than SVG images for these loads (e.g. application/xml resources)","msgtype":"m.text"},"ts":1403085932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no it doesn't. None of the referenced elements there are <mask>s","msgtype":"m.text"},"ts":1403085942000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"or <pattern>s or gradients","msgtype":"m.text"},"ts":1403085951000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: fair","msgtype":"m.text"},"ts":1403085979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: what about supporting more than image/svg+xml?","msgtype":"m.text"},"ts":1403085986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: I think the other thing that changed is that we learned image fetching is really rather involved: https://www.w3.org/Bugs/Public/show_bug.cgi?id=24055","msgtype":"m.text"},"ts":1403086090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think supporting application/xml is important","msgtype":"m.text"},"ts":1403086104000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"servers are likely to map *.svg to image/svg+xml anyway","msgtype":"m.text"},"ts":1403086117000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: which means that overloading it with external element references might be painful, but I guess we can deal","msgtype":"m.text"},"ts":1403086117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm happy to write out that solution","msgtype":"m.text"},"ts":1403086155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think we'd be overloading it. I assume the image fetch algorithm eventually can produce something with an SVG DOM","msgtype":"m.text"},"ts":1403086160000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"krit: ^","msgtype":"m.text"},"ts":1403086161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: yeah fair, image fetch has a branch for image/svg+xml","msgtype":"m.text"},"ts":1403086180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, I assume it can produce many results, at least some of which have an SVG DOM","msgtype":"m.text"},"ts":1403086195000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"then we just need to be able to do some kind of same-origin check and get read-only access to the DOM","msgtype":"m.text"},"ts":1403086236000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah, we'd parse with scripting disabled","msgtype":"m.text"},"ts":1403086270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of course animations could be running in the DOM so it's a bit more complicated than that, but it should work","msgtype":"m.text"},"ts":1403086279000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and then we need some kind of \"safe render mode for SVG\" that handles the rest","msgtype":"m.text"},"ts":1403086294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that disables fetching more resources","msgtype":"m.text"},"ts":1403086309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, we already have that implemented. I think SVG specced something like that or at least talked about it","msgtype":"m.text"},"ts":1403086330000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"only talk so far, we're trying to write down the basics now","msgtype":"m.text"},"ts":1403086359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: the solution from annevk adds heuristics that would allow assumptions on the fetched resource before fetching it…. local element or image is that","msgtype":"m.text"},"ts":1403086360000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: that would be significant easier to implement in WebKit and Blink","msgtype":"m.text"},"ts":1403086380000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: without need to rewrite our CSS engine","msgtype":"m.text"},"ts":1403086397000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you mean heuristics to guess whether it's an image load or an external resource load?","msgtype":"m.text"},"ts":1403086403000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I advocated that for a long time myself :-)","msgtype":"m.text"},"ts":1403086411000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yes","msgtype":"m.text"},"ts":1403086413000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no","msgtype":"m.text"},"ts":1403086417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that algorithm only handles local references or images","msgtype":"m.text"},"ts":1403086431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not external references","msgtype":"m.text"},"ts":1403086435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you want both you need the solution roc and I came up with a year ago","msgtype":"m.text"},"ts":1403086454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: of course since your algo. does not allow fetching for things that can get an element or image… so we check the baseURL to figure that part out","msgtype":"m.text"},"ts":1403086464000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: my point","msgtype":"m.text"},"ts":1403086470000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I thought we could say url(...#foo) is an external resource load and too bad about SVG image stacks","msgtype":"m.text"},"ts":1403086476000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"however","msgtype":"m.text"},"ts":1403086477000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: I don’t want both","msgtype":"m.text"},"ts":1403086478000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes but roc does","msgtype":"m.text"},"ts":1403086485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't want that approach anymore","msgtype":"m.text"},"ts":1403086485000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"now I think just using image fetch will be fine","msgtype":"m.text"},"ts":1403086496000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and simpler","msgtype":"m.text"},"ts":1403086508000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: would you be fine with no external paint server loads on url() function?","msgtype":"m.text"},"ts":1403086512000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: cool","msgtype":"m.text"},"ts":1403086517000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1403086523000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"krit: you misunderstand roc","msgtype":"m.text"},"ts":1403086525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1403086529000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: say again please?","msgtype":"m.text"},"ts":1403086536000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm saying you can have external paint servers, it's just that the document is always loaded using the image fetch algorithm","msgtype":"m.text"},"ts":1403086545000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yeah, that is what Anne and I discussed on monday","msgtype":"m.text"},"ts":1403086573000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: if image fetch returns an SVG document and fragment points to a <mask> in it, it's a mask, otherwise an image, stuff like that","msgtype":"m.text"},"ts":1403086590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so fill:url(foo.svg#bar) would load foo.svg as an image, and then if the 'bar' element is a paint server, it gets used as a paint server, otherwise it's treated as the foo.svg#bar image","msgtype":"m.text"},"ts":1403086593000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: again, would require to rewrite parts of WebKit and Blinks CSS engine","msgtype":"m.text"},"ts":1403086595000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: Blink doesn’t seem to be keen about external element fetches for url() either","msgtype":"m.text"},"ts":1403086623000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"*as well","msgtype":"m.text"},"ts":1403086645000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I don't see what the problem is","msgtype":"m.text"},"ts":1403086649000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"krit: Blink is fine with it as long as the security check is there","msgtype":"m.text"},"ts":1403086655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth said as much the other day","msgtype":"m.text"},"ts":1403086669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: no, abarth is","msgtype":"m.text"},"ts":1403086670000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Blink/Webkit don't currently support \"external resource reference\" loads, but they do support SVG image loads. Gecko supports both","msgtype":"m.text"},"ts":1403086675000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: —^","msgtype":"m.text"},"ts":1403086676000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: right, we don't","msgtype":"m.text"},"ts":1403086687000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm proposing we eliminate external resource reference loads and only use SVG image loads, which Webkit/Blink already have. This is a great proposal for those guys :-)","msgtype":"m.text"},"ts":1403086705000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: that is Annes solution","msgtype":"m.text"},"ts":1403086728000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: element references just in the current SVG document","msgtype":"m.text"},"ts":1403086739000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: no external element references","msgtype":"m.text"},"ts":1403086747000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no it's not","msgtype":"m.text"},"ts":1403086748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"geez","msgtype":"m.text"},"ts":1403086751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: I think you're confused but I don't know exactly how :-)","msgtype":"m.text"},"ts":1403086783000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: #get-svg-element To get an SVG element given a /url/, a /document/, and an optional /internal only flag/: does exactly that","msgtype":"m.text"},"ts":1403086792000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no it doesn't support external SVG elements","msgtype":"m.text"},"ts":1403086807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: roc is proposing we do","msgtype":"m.text"},"ts":1403086822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: fill: url(externDocument.svg#pattern) is not supported in WebKit and Blink… but in FF… do you want it to work or don’t you care?","msgtype":"m.text"},"ts":1403086848000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you apply the same fetch algorithm as for images, and then you do post processing to determine whether or not it's an image or an external ref","msgtype":"m.text"},"ts":1403086856000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what Anne said","msgtype":"m.text"},"ts":1403086888000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: too bad :(","msgtype":"m.text"},"ts":1403086898000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1403086904000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: I am not advocating for allowing external paint servers","msgtype":"m.text"},"ts":1403086939000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"you mean you're against it?","msgtype":"m.text"},"ts":1403086948000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: so your opinion is not mine :)","msgtype":"m.text"},"ts":1403086948000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: even so I agree that it works in theory","msgtype":"m.text"},"ts":1403086962000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: don’t believe that the implementation efforts for fetching the resource and figuring out what it is are worth it in WebKit","msgtype":"m.text"},"ts":1403087042000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1403087043000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: simple cost to usage calculation","msgtype":"m.text"},"ts":1403087051000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"that's a reasonable position","msgtype":"m.text"},"ts":1403087074000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: would you apply the same restrictions on <use>?","msgtype":"m.text"},"ts":1403087125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given we already support external references in some form, the Gecko situation is a bit different and we might reach a different conclusion.","msgtype":"m.text"},"ts":1403087169000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: <use> is a different code path for us. However, <pattern> and co. with xlink:href still don’t need to reference external elements IMO","msgtype":"m.text"},"ts":1403087245000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: yes, right now I am entirely speaking as implementer...","msgtype":"m.text"},"ts":1403087270000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"…implementer for WebKit and Blink","msgtype":"m.text"},"ts":1403087288000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I would just say that <use> does an SVG image load and uses any element it can find. I don't think <use> is or will be specced to actually use an image.","msgtype":"m.text"},"ts":1403087327000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yeah, just wondering if it would be restricted to image/svg+xml as well, but that sounds good to me","msgtype":"m.text"},"ts":1403087357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: so we could agree on the general \"fetch as image” algorithm. It might be implemented in two stages in WebKit and Blink… 2nd stage being external element","msgtype":"m.text"},"ts":1403087372000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s","msgtype":"m.text"},"ts":1403087373000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: annevk: speaking for the CSS part of it","msgtype":"m.text"},"ts":1403087393000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: yeah, I think there's no point in speccing a fetch algorithm just for <use>","msgtype":"m.text"},"ts":1403087411000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: sgtm","msgtype":"m.text"},"ts":1403087447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: What about <pattern>, <linearGradient>/","msgtype":"m.text"},"ts":1403087505000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: both are not allowed to reference external elements in SVG… at least it could be interpreted that way","msgtype":"m.text"},"ts":1403087533000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: (SVG is not specific enought)","msgtype":"m.text"},"ts":1403087540000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: does Firefox allow referencing elements in other documents? <pattern xlink:href=“other.svg#patter”/>","msgtype":"m.text"},"ts":1403087570000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah I think so","msgtype":"m.text"},"ts":1403087597000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"in Gecko we have nsReferencedElement which handles tracking dynamic ID changes etc","msgtype":"m.text"},"ts":1403087608000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it also handles external resource loads automatically","msgtype":"m.text"},"ts":1403087617000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: ok","msgtype":"m.text"},"ts":1403087633000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: I guess WebKit can generalize the code more to handle these elements as well","msgtype":"m.text"},"ts":1403087657000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: ok, looks like one algorithm could be enough with a sub algorithm for image handling","msgtype":"m.text"},"ts":1403087733000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: another question mask: url(other.svg#maskDoesNotExist) would you interpret that as image with the new mask-image syntax?","msgtype":"m.text"},"ts":1403087788000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, and we'd disable the image path for <use> and such","msgtype":"m.text"},"ts":1403087793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: yes that would be an image","msgtype":"m.text"},"ts":1403087814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: otherwise \"stacked images\" would not work","msgtype":"m.text"},"ts":1403087833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exactly","msgtype":"m.text"},"ts":1403087839000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"we already covered that earlier","msgtype":"m.text"},"ts":1403087858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also, ignore abarth external image fragment sniffing?","msgtype":"m.text"},"ts":1403087912000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: (me doesn’t think it is a strong case anyway)","msgtype":"m.text"},"ts":1403087935000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: well we could require CORS opt-in for the external ref case (and only make images work for opaque responses)","msgtype":"m.text"},"ts":1403087958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: depends a bit on security guys","msgtype":"m.text"},"ts":1403087979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1403087987000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I guess this requires some additional parameter to the algorithm to indicate what is expected","msgtype":"m.text"},"ts":1403088053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we require that later anyway when url() gets CORS arguments, don’t we?","msgtype":"m.text"},"ts":1403088081000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: if we don't require it now, CORS won't make a difference later","msgtype":"m.text"},"ts":1403088106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the algorithm can already pretend that this is an argument","msgtype":"m.text"},"ts":1403088107000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: well what is the point of the parameters for url() anyway then","msgtype":"m.text"},"ts":1403088140000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"we need it at least for @import","msgtype":"m.text"},"ts":1403088153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1403088163000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"we might need it for the external ref case, that depends on security analysis","msgtype":"m.text"},"ts":1403088171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems we need it for clip too","msgtype":"m.text"},"ts":1403088181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: shape-outside as well","msgtype":"m.text"},"ts":1403088295000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: which has same-origin restrictions at the moment IIRC","msgtype":"m.text"},"ts":1403088318000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: http://dev.w3.org/csswg/css-shapes/#shape-outside-property","msgtype":"m.text"},"ts":1403088356000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: see <image>","msgtype":"m.text"},"ts":1403088364000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: CORS enabled fetch","msgtype":"m.text"},"ts":1403088379000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Fonts have something similar, so I guess CSS is already a bit of a mismatch between things","msgtype":"m.text"},"ts":1403088426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"head out for lunch","msgtype":"m.emote"},"ts":1403088564000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"SVG iframe element? Wat?","msgtype":"m.text"},"ts":1403089106000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes, I'm not a fan either","msgtype":"m.text"},"ts":1403089247000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Do we expect Intent to Implement for preffed-off features?","msgtype":"m.text"},"ts":1403089311000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: wrong channel? But I think so","msgtype":"m.text"},"ts":1403089419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty sure I haven't seen one for SVG iframes","msgtype":"m.text"},"ts":1403089438000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyone else having trouble reaching krijn?","msgtype":"m.text"},"ts":1403091494000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: he seems to be doing some cycling","msgtype":"m.text"},"ts":1403091562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Carrying his server?","msgtype":"m.text"},"ts":1403091591000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: roc: Not a fan of it as well. But maybe from a different perspective? I don’t like the duplication of code… tho could be done with <foreignObject …><html><iframe/></html></foreignObject> today. At least in theory. Just Firefox allows iframe as ancestor of <foreignObject>.","msgtype":"m.text"},"ts":1403092600000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: powercycling perhaps?","msgtype":"m.text"},"ts":1403092749000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"krit: you mean descendant","msgtype":"m.text"},"ts":1403092761000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: right","msgtype":"m.text"},"ts":1403092768000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit, sure, but fixing browser bugs by implementing new features doesn't really work","msgtype":"m.text"},"ts":1403093013000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don’t like having iframe in HTML NS and another one in SVG NS. Even though both use the same code in the background. And I am not saying that it is intend to be a work around for browser bugs.","msgtype":"m.text"},"ts":1403093120000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Oh, misread, then","msgtype":"m.text"},"ts":1403093169000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: oh boy. https://svgwg.org/svg2-draft/embedded.html","msgtype":"m.text"},"ts":1403093286000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"annevk: I did not know about this.","msgtype":"m.text"},"ts":1403093295000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"SVG 2 Requirement: \t- Have a video element in SVG namespace with the same characteristics as the HTML 5 video element.","msgtype":"m.text"},"ts":1403093317000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"- Support 'canvas' element in SVG 2","msgtype":"m.text"},"ts":1403093317000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Nice","msgtype":"m.text"},"ts":1403093319000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"volunteers roc to keep an eye on the SVGWG","msgtype":"m.emote"},"ts":1403093359000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"roc: not sure if we should do any of that","msgtype":"m.text"},"ts":1403093814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it looks crazy to me","msgtype":"m.text"},"ts":1403093823000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Yay, namespaces!","msgtype":"m.text"},"ts":1403093871000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: well, we should keep image!","msgtype":"m.text"},"ts":1403093889000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"the rest won’t survive the CR period","msgtype":"m.text"},"ts":1403093900000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"(and foreignObject should stay as well… for legacy)","msgtype":"m.text"},"ts":1403093930000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Let's kick it out before CR?","msgtype":"m.text"},"ts":1403093956000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"people are trying to implement SVGIframeElement for Gecko","msgtype":"m.text"},"ts":1403093961000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we need to kick it out now","msgtype":"m.text"},"ts":1403093967000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: they do?","msgtype":"m.text"},"ts":1403093980000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1403093987000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: why was there no email to dev.platform?","msgtype":"m.text"},"ts":1403093987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1403093988000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not us","msgtype":"m.text"},"ts":1403093989000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: didn’t see an intent to implement","msgtype":"m.text"},"ts":1403093991000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"contributors","msgtype":"m.text"},"ts":1403093993000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Nope","msgtype":"m.text"},"ts":1403093994000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1403093994000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"That's what I was complaining about above","msgtype":"m.text"},"ts":1403094002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I actually noticed this a month ago, commented in the bug, and then forgot about it. Oops.","msgtype":"m.text"},"ts":1403094021000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1403094029000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Do make it clear: I support having video and canvas within SVG content… just not SVG elements for it","msgtype":"m.text"},"ts":1403094059000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403094070000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"SVG hasn't even explained their version of the <script> element in detail","msgtype":"m.text"},"ts":1403094112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there some way to leave comments on the SVG spec that won't get lost?","msgtype":"m.text"},"ts":1403094127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"www-svg","msgtype":"m.text"},"ts":1403094136000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1403094138000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Mailing list comments tend to get lost","msgtype":"m.text"},"ts":1403094150000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"More so if convenient","msgtype":"m.text"},"ts":1403094164000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you can always point to them and say \"I told you so\"","msgtype":"m.text"},"ts":1403094166000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's the most important thing for me :-)","msgtype":"m.text"},"ts":1403094171000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'd say getting the spec fixed is more important, as is having a clear list of open issues","msgtype":"m.text"},"ts":1403094213000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1403094230000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"in practice it's usually easier for me to send an email to a list than file a bug or use some other issue tracker","msgtype":"m.text"},"ts":1403094245000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so that's what I do","msgtype":"m.text"},"ts":1403094250000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if I can","msgtype":"m.text"},"ts":1403094257000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I didn't say that was easier :)","msgtype":"m.text"},"ts":1403094265000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I said it was less likely to get lost","msgtype":"m.text"},"ts":1403094273000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"roc: oh, annevk can do that","msgtype":"m.text"},"ts":1403094354000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: Ms2ger: also, <script> will be specced in the way it is in HTML","msgtype":"m.text"},"ts":1403094404000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'd have suggested heycam, but I need him for IDL","msgtype":"m.text"},"ts":1403094409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"roc: Ms2ger: there is just a difference how to reference an external script.. which we try to harmonize as well","msgtype":"m.text"},"ts":1403094440000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: heycam is *just* the chair of the SVG WG… what can he do :P","msgtype":"m.text"},"ts":1403094468000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"roc: I'll sort it out","msgtype":"m.text"},"ts":1403094478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fix IDL bugs full-time for the next 6 months :)","msgtype":"m.text"},"ts":1403094485000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: well, what is there to sort out if we follow HTML on <style>, <script> and the other elements derived from HTML?","msgtype":"m.text"},"ts":1403094537000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm composing an email to www-svg right now :-)","msgtype":"m.text"},"ts":1403094537000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1403094555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: even synchronous loading… event handling and so on is harmonized with HTML now","msgtype":"m.text"},"ts":1403094561000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"is preparing some eggs","msgtype":"m.emote"},"ts":1403094567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: you can't just say \"follow\", you actually have to write things out and see if it works","msgtype":"m.text"},"ts":1403094605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: e.g. <html:style> does not work if there's no associated browsing context","msgtype":"m.text"},"ts":1403094657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: seems like SVG wants something else there","msgtype":"m.text"},"ts":1403094663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you have to write that <script> behaves as HTML <script> and reference HTML <script>… no complex wording needed. That was one of the biggest mistakes of SVG 1.1 that it did that","msgtype":"m.text"},"ts":1403094670000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Yeah so that is bullshit","msgtype":"m.text"},"ts":1403094682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no it is not","msgtype":"m.text"},"ts":1403094689000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it is bullshit to disrespect everything others do","msgtype":"m.text"},"ts":1403094715000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1403094814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just gave an example of why it doesn't work and then you say it does","msgtype":"m.text"},"ts":1403094826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<annevk> Yeah so that is bullshit","msgtype":"m.text"},"ts":1403094827000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sloppy work doesn't deserve respect","msgtype":"m.text"},"ts":1403094917000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it merits being called what it is","msgtype":"m.text"},"ts":1403094936000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"people do though","msgtype":"m.text"},"ts":1403094977000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1403094995000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it's important for people to not get defensive when others point out sloppiness in their work","msgtype":"m.text"},"ts":1403095066000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and it's important for them to also understand why people lose patience with sloppiness","msgtype":"m.text"},"ts":1403095090000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: defensive by asking for respect in the wording you use? That is called politeness.","msgtype":"m.text"},"ts":1403095125000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"he was just speaking his mind","msgtype":"m.text"},"ts":1403095145000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he didn't write that up as a message to the group or the editors","msgtype":"m.text"},"ts":1403095167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is convinced that having an argument will solve everything","msgtype":"m.emote"},"ts":1403095178000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: being impolite nearly always results in defensive and offensive behavior which will never lead to better specws","msgtype":"m.text"},"ts":1403095181000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"jgraham: agree","msgtype":"m.text"},"ts":1403095245000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I don't think using \"bullshit\" was necessary or helpful","msgtype":"m.text"},"ts":1403095259000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"anyway, to get back… We, speaking as a member of the SVG WG, always welcome feedback… www-svg is the right email list for that. The chairs are usually good at tracking the feedback we get and bring it up during calls.","msgtype":"m.text"},"ts":1403095365000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"even better are concrete examples that don’t work and suggestions how to improve the situation.","msgtype":"m.text"},"ts":1403095526000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so if you could bring up your issue with the associated browsing context and <style> to the www-svg mailing list, this would be very appreciated","msgtype":"m.text"},"ts":1403095607000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: as said before… the general theme for SVG2 is to harmonize the spec with HTML as much as possible. Browsers mostly do that today anyway.","msgtype":"m.text"},"ts":1403095723000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: there are even ideas to let SVG elements inherit from HTMLElement… this is an ambitious task that needs a lot of considerations","msgtype":"m.text"},"ts":1403095858000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I have to say that's the kind of bullshit that I would welcome heartily","msgtype":"m.text"},"ts":1403095892000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Yes it does, can you sympathise with \"bullshit\" re \"no complex wording needed\" above?","msgtype":"m.text"},"ts":1403095901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: are you going to give feedback about <iframe> and such or should I?","msgtype":"m.text"},"ts":1403095970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I will","msgtype":"m.text"},"ts":1403096134000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"krit, inherit sounds weird... Right now \"implements HTMLElement\" === \"in the HTML namespace\", I'd rather not mess with that invariant","msgtype":"m.text"},"ts":1403096231000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yes the namespacing is one of the issues… the biggest one for backwards and forwards compatibility","msgtype":"m.text"},"ts":1403096289000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: but in the long term.. do we really want to preserve the SVG namespace?","msgtype":"m.text"},"ts":1403096312000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I have no love for it","msgtype":"m.text"},"ts":1403096349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But I don't know if that's worth the time to fight with","msgtype":"m.text"},"ts":1403096369000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: well, we are talking about months of fighting for years or decades of complaining","msgtype":"m.text"},"ts":1403096433000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"What do you mean by preserving the SVG namespace?","msgtype":"m.text"},"ts":1403096489000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There's significant deployed SVG-in-XML that uses i","msgtype":"m.text"},"ts":1403096506000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So I suspect browsers won't be able to forget it entirely","msgtype":"m.text"},"ts":1403096522000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no, that is indeed a huge part of the discussion","msgtype":"m.text"},"ts":1403096547000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"You could change the XML parser","msgtype":"m.text"},"ts":1403096580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's an option, yes","msgtype":"m.text"},"ts":1403096591000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not one I'd take lightly, though","msgtype":"m.text"},"ts":1403096601000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: there are more issues. One is the <image> element with its different function set than <img>","msgtype":"m.text"},"ts":1403096670000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: <image> works in most HTML documents today and will create an HTMLImageElement","msgtype":"m.text"},"ts":1403096693000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: so how to differ between SVG <image> and “HTML” <image>","msgtype":"m.text"},"ts":1403096724000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I wish I could forget about that, but I know :/","msgtype":"m.text"},"ts":1403096729000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it goes on with (and we come back to it) <script> and <style> which we are working on harmonizing but certain things are still special for legacy content… like xlink:href on <script>","msgtype":"m.text"},"ts":1403096781000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: this might require changes to HTML… would HTML be willing to do that?","msgtype":"m.text"},"ts":1403096857000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm not going to say no without a concrete proposal","msgtype":"m.text"},"ts":1403096891000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It seems possible","msgtype":"m.text"},"ts":1403096895000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: on the other hand… SVG DOM for <style> is mostly useless… it won’t hurt to get rid of it","msgtype":"m.text"},"ts":1403096899000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ms2ger: Btw. the Blink team experimented with using the HTML parser even for standalone SVG documents. Missing support for XML entities seemed to be the biggest problem… not a huge problem for newer content though","msgtype":"m.text"},"ts":1403097012000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"XML entities?","msgtype":"m.text"},"ts":1403097032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"People actually declare internal DTDs for SVG?","msgtype":"m.text"},"ts":1403097043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in the past they did","msgtype":"m.text"},"ts":1403097148000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I haven't seen that in a while though tbh","msgtype":"m.text"},"ts":1403097617000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: a large part of the problem here is that Illustrator would make use of that","msgtype":"m.text"},"ts":1403097639000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I think more recent versions don't do that anymore","msgtype":"m.text"},"ts":1403097651000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1403097681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's possibly the least of the horrors that Illustrators did to SVG :)","msgtype":"m.text"},"ts":1403098003000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"krit: I updated the algorithm","msgtype":"m.text"},"ts":1403098904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: could remove most of it now","msgtype":"m.text"},"ts":1403098909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" ","msgtype":"m.text"},"ts":1403101429000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":" ","msgtype":"m.text"},"ts":1403101430000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well okay","msgtype":"m.text"},"ts":1403101445000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"What happened to SVG?","msgtype":"m.text"},"ts":1403104014000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: I'm convincing blink people that working on \"just put SVG in the HTML namespace\" is worthwhile.","msgtype":"m.text"},"ts":1403104346000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The hoops you have to jump through to get Web components to work with SVG are terrible currently.","msgtype":"m.text"},"ts":1403104372000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that would be awesome","msgtype":"m.text"},"ts":1403104733000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"TabAtkins: I'm not sure what that means","msgtype":"m.text"},"ts":1403104857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: are you also convincing your employer to employ an editor to work fulltime on fixing SVG? :)","msgtype":"m.text"},"ts":1403104892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At Lab49 we did a lot of SVG for our banking apps, and it was slow/buggy in Chrome. Might be able to squeeze it into the mobile performance banner.","msgtype":"m.text"},"ts":1403105284000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Remove SVG for mobile perf?","msgtype":"m.text"},"ts":1403105298000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Be careful what you wish for","msgtype":"m.text"},"ts":1403105313000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If we make SVG the way froward, presto is the rendering engine of the future","msgtype":"m.text"},"ts":1403105520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*forward","msgtype":"m.text"},"ts":1403105535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: It roughly means what I said: putting svg into the html namespace.","msgtype":"m.text"},"ts":1403106871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus the attendant changes to deal with that.","msgtype":"m.text"},"ts":1403106886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what happens to the SVG namespace?","msgtype":"m.text"},"ts":1403106900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: what classes do they implement?","msgtype":"m.text"},"ts":1403106915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We're working out the details.","msgtype":"m.text"},"ts":1403106926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in public?","msgtype":"m.text"},"ts":1403106942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It'll be hacky, I'm sure.","msgtype":"m.text"},"ts":1403106945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Once we have an inkling if what might work, yes.","msgtype":"m.text"},"ts":1403106958000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That sounds like \"no\"","msgtype":"m.text"},"ts":1403106996000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I heard \"no\" too","msgtype":"m.text"},"ts":1403107029000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You guys have some strange ears","msgtype":"m.text"},"ts":1403107136000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"More like strange IRC clients","msgtype":"m.text"},"ts":1403107218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_, not doing storage mutex stuff by virtue of not doing any storage in Servo","msgtype":"m.text"},"ts":1403107703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no cookies?","msgtype":"m.text"},"ts":1403107719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"None yet","msgtype":"m.text"},"ts":1403107732000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: http://discourse.specifiction.org/t/wheres-the-do-not-like-button/341 has been loading for several seconds now","msgtype":"m.text"},"ts":1403108701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just loaded in a snap from here","msgtype":"m.text"},"ts":1403108726000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1403108730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe some temporary hiccup?","msgtype":"m.text"},"ts":1403108734000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"seems there's occasional hanging","msgtype":"m.text"},"ts":1403108737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I doubled the server's power about a week ago","msgtype":"m.text"},"ts":1403108745000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"so far the load seems to be okay; but please don't hesitate to tell me again and I might double it again","msgtype":"m.text"},"ts":1403108765000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"http://jsfiddle.net/d29gj/ who's idea was this?","msgtype":"m.text"},"ts":1403108824000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"smh .v.","msgtype":"m.text"},"ts":1403108830000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"does it not, I don't know, make sense to maybe throw a type error or something if a form control's name is a property from lets say, Node or something, to avoid that nonsense? I mean really @_@","msgtype":"m.text"},"ts":1403109026000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"No, the design problem is that name shadows properties at all","msgtype":"m.text"},"ts":1403109088000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1403109105000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, that whole scenario is pretty sad =( jeeze","msgtype":"m.text"},"ts":1403109165000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Good ol' @HTML5_Chewbacca managed to get the word out about <picture> landing: https://twitter.com/HTML5_Chewbacca/status/479277675853651968","msgtype":"m.text"},"ts":1403109198000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyways, was that introduced in html of old, is that one of the more recent failures? I want to know if it's too late to file a bug about that nonsense","msgtype":"m.text"},"ts":1403109509000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Umm, that's actually pretty insulting","msgtype":"m.text"},"ts":1403109550000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1403109552000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well it's clearly a failure, the question is if it's too late to fix it or not","msgtype":"m.text"},"ts":1403109574000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't think anyone would have introduced that feature in the last 10 years","msgtype":"m.text"},"ts":1403109574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Far too late","msgtype":"m.text"},"ts":1403109582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It probably works like that in NS4 or IE5 or something","msgtype":"m.text"},"ts":1403109604000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"bleh","msgtype":"m.text"},"ts":1403109615000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the immobility of this stuff is really disheartening =)","msgtype":"m.text"},"ts":1403109648000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"mounir: is denying of locking exceptional? https://www.w3.org/Bugs/Public/show_bug.cgi?id=25054#c8","msgtype":"m.text"},"ts":1403109873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: otherwise you should not reject the promise","msgtype":"m.text"},"ts":1403109882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: that bit about promises is really unintuitive at the moment","msgtype":"m.text"},"ts":1403110027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it makes more sense in the try await catch world, but now...","msgtype":"m.text"},"ts":1403110047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems reasonable, for a method named lockOrientation, that if you can't lock the orientation, it's an exceptional condition","msgtype":"m.text"},"ts":1403110074000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if it were named canLockOrientation(), then getting back \"no\" would not be exceptional","msgtype":"m.text"},"ts":1403110108000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if it were named \"requestToLockOrientation(),\" then the answer is kind of wishy-washy.","msgtype":"m.text"},"ts":1403110122000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but yes, you should generally assume any time you reject a promise, that is essentially like throwing an exception, especially since people coding with try/catch/await will have exactly that experience.","msgtype":"m.text"},"ts":1403110172000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, it seems like if it were sync code you might well implement it with an exception","msgtype":"m.text"},"ts":1403110177000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: the entire lock flow assume that the lock happened when the promise succeeds","msgtype":"m.text"},"ts":1403110465000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"zcorpan: yeah that's not a bad idea","msgtype":"m.text"},"ts":1403110603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, any reason why it shouldn't *be* an exception?","msgtype":"m.text"},"ts":1403111172000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I mean, I see no reason why exceptions can only be transported by throwing","msgtype":"m.text"},"ts":1403111238000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"jgraham: you around? i'm getting an assertion trying to use html5lib instead of lxml.html","msgtype":"m.text"},"ts":1403113308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in your anolis instance","msgtype":"m.text"},"ts":1403113318000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assert isinstance(buffer, bytes) is throwing, in detectEncodingMeta in inputstream.py","msgtype":"m.text"},"ts":1403113330000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: anolis should just serialize attributes in alphabetical order","msgtype":"m.text"},"ts":1403114957000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: and if that assertion is being hit something is badly wrong :|","msgtype":"m.text"},"ts":1403114979000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i'm apparently using \"serializer=alllib\" too, i guess i should change that to html5lib","msgtype":"m.text"},"ts":1403115006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alllib? what on earth is that","msgtype":"m.text"},"ts":1403115020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1403115029000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1403115031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"blames jgraham ","msgtype":"m.emote"},"ts":1403115042000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think the alphabetical-serializing merged","msgtype":"m.text"},"ts":1403115048000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"merged?","msgtype":"m.text"},"ts":1403115058000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: given I think jgraham hasn't updated PMS in years…","msgtype":"m.text"},"ts":1403115073000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's the new-fangled term for landing a patch","msgtype":"m.text"},"ts":1403115087000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders, I thought he did at some point","msgtype":"m.text"},"ts":1403115093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: idk, I ignore all this PMS-related, um, stress","msgtype":"m.text"},"ts":1403115139000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see what you did there","msgtype":"m.text"},"ts":1403115156000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Gosh darn it Firefox crashing again","msgtype":"m.text"},"ts":1403115272000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IZh: Hi. As I see from the standard  the e-mail input field's value must consist of [a-zA-Z0-9-] characters in domain part (after @). But what about international domain names?","msgtype":"m.text"},"ts":1403117497000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"I mean user@москва.рф","msgtype":"m.text"},"ts":1403117518000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Punycode","msgtype":"m.text"},"ts":1403117535000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There is no requirement that the user sees ASCII, note","msgtype":"m.text"},"ts":1403117578000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but should a user know it's ugly e-mail version?","msgtype":"m.text"},"ts":1403117609000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"No, the user could enter the internationalized version","msgtype":"m.text"},"ts":1403117638000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And a browser will transparently convert the value?","msgtype":"m.text"},"ts":1403117672000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: yes","msgtype":"m.text"},"ts":1403117974000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't think browsers currently do transparently convert the value, I checked that a few weeks ago when it was brought up on angular","msgtype":"m.text"},"ts":1403117983000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"unless it's locale-dependent or something","msgtype":"m.text"},"ts":1403117990000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"IZh: or at least that is the intention","msgtype":"m.text"},"ts":1403118004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IZh: the spec only defines the over-the-wire format and at the JS API; what the browser displays in the UI is tangential","msgtype":"m.text"},"ts":1403118028000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean, if non-ascii value is not acceptable in JS, then a browser must do the convertion.","msgtype":"m.text"},"ts":1403118374000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Or user will enter an international value and it could be considered as invalid by a browser.","msgtype":"m.text"},"ts":1403118430000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"But the user doesn't see the JS API.","msgtype":"m.text"},"ts":1403118537000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"They see whatever widget the browser provides.","msgtype":"m.text"},"ts":1403118544000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How inputs in the widget map to values exposed at the JS level is up to the browser","msgtype":"m.text"},"ts":1403118641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes. But if a user will type user@москва.рф, then will it be considered invalid by browser according to the spec?","msgtype":"m.text"},"ts":1403118768000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"The spec makes no comment on such things.","msgtype":"m.text"},"ts":1403118783000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The spec makes no requirements on UI.","msgtype":"m.text"},"ts":1403118792000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://jsfiddle.net/UMrw6/ yeah still no punicod-ification, need to polyfill that stuff =(","msgtype":"m.text"},"ts":1403118797000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"kind of unfortunate","msgtype":"m.text"},"ts":1403118800000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"An extreme example would be exposing input@type=\"date\" (which uses the Georgian calendar at a JS/wire level) as another calendar in the UI, esp. in locales where other calendars are the default","msgtype":"m.text"},"ts":1403118824000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders; the spec actually does comment on that","msgtype":"m.text"},"ts":1403118909000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"although I guess it's not normative per se, but","msgtype":"m.text"},"ts":1403118957000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: okay, only my latter statement was true","msgtype":"m.text"},"ts":1403118975000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"right, that is true","msgtype":"m.text"},"ts":1403118997000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Ah... I see. The phrase \" The value attribute, if specified and not empty, must have a value that is a single valid e-mail address.\" is related to only markup's and JS' provided values, and not to a value that is typed by user.","msgtype":"m.text"},"ts":1403119018000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Correct","msgtype":"m.text"},"ts":1403119041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"IZh: The obvious example of this is to look at implementations of input@type=\"color\"","msgtype":"m.text"},"ts":1403119083000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IZh: Most don't expose the raw value anywhere","msgtype":"m.text"},"ts":1403119092000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see...","msgtype":"m.text"},"ts":1403119266000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"gsnedders: even more obvious is type=password","msgtype":"m.text"},"ts":1403124694000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, where are the same-origin rules codified these days ...","msgtype":"m.text"},"ts":1403129192000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"which ones?","msgtype":"m.text"},"ts":1403129371000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the same-origin policy pervades the entire platform","msgtype":"m.text"},"ts":1403129383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyone here familiar with dart2js?","msgtype":"m.text"},"ts":1403129751000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(if the whole thing is still being developed at all)","msgtype":"m.text"},"ts":1403129806000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah, #dart","msgtype":"m.text"},"ts":1403129858000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: well, I'm wondering about the definition of \"same\", and the interface for setting the origin to a more accessible value","msgtype":"m.text"},"ts":1403129873000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and, like, what do different ports do to things?","msgtype":"m.text"},"ts":1403129928000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, say, http:// vs https:// vs ftp:// ?","msgtype":"m.text"},"ts":1403129965000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the definition of \"same\" is http://whatwg.org/html#same-origin","msgtype":"m.text"},"ts":1403129974000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure what \"the interface for setting the origin to a more accessible value\" means","msgtype":"m.text"},"ts":1403129991000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor what you mean by \"things\"","msgtype":"m.text"},"ts":1403130001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i think the definition of \"same\" might answer that?","msgtype":"m.text"},"ts":1403130017000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"forget the \"and, \" before the \"like, \" there","msgtype":"m.text"},"ts":1403130053000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so, yeah","msgtype":"m.text"},"ts":1403130061000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: ah, nice, that's exactly what I was looking for","msgtype":"m.text"},"ts":1403130189000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: anyway, I half expected this section to have been pulled out into its own spec","msgtype":"m.text"},"ts":1403130212000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it might be in the origin RFC as well?","msgtype":"m.text"},"ts":1403130231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure what the state of that is","msgtype":"m.text"},"ts":1403130234000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i try to keep the number of specs down where possible)","msgtype":"m.text"},"ts":1403130246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"meh @ IETF","msgtype":"m.text"},"ts":1403130265000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"except opus seems pretty cool","msgtype":"m.text"},"ts":1403130282000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(even if it is missing the \"expected results\" half of its test suite ...)","msgtype":"m.text"},"ts":1403130372000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: you mean the opus test suite?","msgtype":"m.text"},"ts":1403130388000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403130395000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there's validation code in the RFC","msgtype":"m.text"},"ts":1403130412000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1403130420000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"maybe they just need a README in that directory on their website or something then","msgtype":"m.text"},"ts":1403130444000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I keep meaning to run it through emscripten and make a browser test page with it","msgtype":"m.text"},"ts":1403130457000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"how does it work?","msgtype":"m.text"},"ts":1403130490000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"goes to see if he can understand it ...","msgtype":"m.emote"},"ts":1403130500000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"https://tools.ietf.org/html/rfc6716#section-6.1","msgtype":"m.text"},"ts":1403130527000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"the idea with opus_compare is to do a fuzzy-match, so we can declare implementations compliant even if they're not bit-exact","msgtype":"m.text"},"ts":1403130565000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"giving implementors freedom to optimize the code","msgtype":"m.text"},"ts":1403130577000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hixie: I'm kind of surprised there isn't a \"domain name to ASCII\" algorithm that converts a whole name to ASCII, putting dots between the components ...","msgtype":"m.text"},"ts":1403130627000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there's also a smaller set for testing the .opus file encapsulation implementation. I'll agree with you that side isn't complete.","msgtype":"m.text"},"ts":1403130632000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"SamB: http://url.spec.whatwg.org/#concept-domain-to-ascii","msgtype":"m.text"},"ts":1403130873000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh nevermind","msgtype":"m.text"},"ts":1403130899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's still per-label","msgtype":"m.text"},"ts":1403130903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or no?","msgtype":"m.text"},"ts":1403130930000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://url.spec.whatwg.org/#concept-domain doesn't make sense to me","msgtype":"m.text"},"ts":1403130942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does \"the form of a domain\" look like?","msgtype":"m.text"},"ts":1403130956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=26138","msgtype":"m.text"},"ts":1403131012000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rillian: I guess I'd basically want to see some files like the ones on http://www.opus-codec.org/examples/ alongside the opus versions, at least","msgtype":"m.text"},"ts":1403131127000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though I might have expected FLAC rather than .wav","msgtype":"m.text"},"ts":1403131145000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: for human listening tests?","msgtype":"m.text"},"ts":1403131251000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"rillian: I mean, I understand that implementations aren't required to use any particular output sampling rate","msgtype":"m.text"},"ts":1403131253000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but you could downsample, say, 48k sample decodings to whatever output rate you're actually working at and test if the output is plausibly close, yeah?","msgtype":"m.text"},"ts":1403131383000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, worst case, do it by ear, yes","msgtype":"m.text"},"ts":1403131419000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: that's what opus_compare tries to do","msgtype":"m.text"},"ts":1403131452000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"part of the problem is that there are both fixed and floating point implementations","msgtype":"m.text"},"ts":1403131475000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"so you can exactly verify the entropy coder output, but not the audio output","msgtype":"m.text"},"ts":1403131490000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"how would you test 'plausibly close'?","msgtype":"m.text"},"ts":1403131506000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"well, I'd *probably* start by transforming to the frequency domain","msgtype":"m.text"},"ts":1403131579000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"https://git.xiph.org/?p=opus.git;a=blob;f=src/opus_compare.c","msgtype":"m.text"},"ts":1403131661000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"or possibly by buying a DSP book, or at least another signal processing book since someone lost the one I had for school ...","msgtype":"m.text"},"ts":1403131661000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, I suck at googling and chatting at the same time ;-)","msgtype":"m.text"},"ts":1403131755000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it looks like it splits the audio into overlapped blocks, does a rough transform, and applies some psychoacoustic stuff","msgtype":"m.text"},"ts":1403131872000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"anyway, I guess http://people.xiph.org/~greg/opus_testvectors/ is the one I was confused by","msgtype":"m.text"},"ts":1403131885000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and I was thinking for decode testing; encoder testing is obviously MUCH more involved","msgtype":"m.text"},"ts":1403131902000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, that could use a readme","msgtype":"m.text"},"ts":1403131914000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hixie: I really miss the days when I could use the single-page spec; too bad I have no real idea what changed that makes that so unpleasant now ...","msgtype":"m.text"},"ts":1403132124000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"what browser?","msgtype":"m.text"},"ts":1403132144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, ISTR it used to work okay in Chrome, but no more. Not sure if it was something on your end or Chrome's end, even ...","msgtype":"m.text"},"ts":1403132182000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"chrome sucking on the html spec these days is https://code.google.com/p/chromium/issues/detail?id=376847","msgtype":"m.text"},"ts":1403132215000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, *something* started demanding more RAM, but I'm not sure what ...","msgtype":"m.text"},"ts":1403132216000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"not sure if it worked okay in Firefox or not","msgtype":"m.text"},"ts":1403132232000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"firefox is fine once it's loaded","msgtype":"m.text"},"ts":1403132253000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but loading the spec in firefox is painful","msgtype":"m.text"},"ts":1403132258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not sure if they have a bug on that","msgtype":"m.text"},"ts":1403132263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how much memory does it use once it's loaded?","msgtype":"m.text"},"ts":1403132269000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"in which?","msgtype":"m.text"},"ts":1403132279000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox","msgtype":"m.text"},"ts":1403132283000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"about half a gig","msgtype":"m.text"},"ts":1403132343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(including the browser)","msgtype":"m.text"},"ts":1403132375000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"chrome uses a little over a quarter of a gig (not including the browser)","msgtype":"m.text"},"ts":1403132387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"memory isn't the issue though","msgtype":"m.text"},"ts":1403132394000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is *an* issue for me","msgtype":"m.text"},"ts":1403132485000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"buy more ram","msgtype":"m.text"},"ts":1403132570000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1403132571000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, iirc the SMBIOS data on this thing claims I can triple my RAM by doubling the size of the existing modules and installing a third, but I'm not positive the third slot actually exists","msgtype":"m.text"},"ts":1403132665000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1403132697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how much ram do you have?","msgtype":"m.text"},"ts":1403132703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"1 gig :-(","msgtype":"m.text"},"ts":1403132708000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"1 gig!","msgtype":"m.text"},"ts":1403132756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is this, 1997? :-P","msgtype":"m.text"},"ts":1403132762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok filed https://bugzilla.mozilla.org/show_bug.cgi?id=1027382 on firefox hanging while loading the html spec","msgtype":"m.text"},"ts":1403132789000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dude, the computer we got in, like, 1996 or 1997 came with 16 megs and my dad had to upgrade it to 32 megs","msgtype":"m.text"},"ts":1403132825000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: fwiw, I think refusing to adjust the spec when it's doing uncommon things (an unusually large page doing unusual things with CSS) to try to force browsers to do optimizations that they don't have time to do is unreasonable and harmful","msgtype":"m.text"},"ts":1403132857000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: he's doing that?","msgtype":"m.text"},"ts":1403132899000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I mean, on purpose?","msgtype":"m.text"},"ts":1403132911000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: it's not that unusual, and firefox handles it perfectly. Plus, until recently the situation was reversed (the CSS did something that hurt Firefox, but not Chrome, because Chrome cheated), so it's about time the tables were turned.","msgtype":"m.text"},"ts":1403132932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what my takeaway was from https://code.google.com/p/chromium/issues/detail?id=376847#c26","msgtype":"m.text"},"ts":1403132938000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm sure there are tons of cases where either browser is faster than the other; I think the HTML spec is the wrong place to wage these battles (all it means is today, I'm much less likely to load the spec to answer a question than I was a couple months ago)","msgtype":"m.text"},"ts":1403133015000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's not like this is on purpose","msgtype":"m.text"},"ts":1403133087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just wrote CSS that should work, and it did work","msgtype":"m.text"},"ts":1403133097000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except in chrome","msgtype":"m.text"},"ts":1403133099000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"making the spec convenient to access is far more important than trying to coerce a browser into making some whack-a-mole CSS optimization","msgtype":"m.text"},"ts":1403133099000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: fixing that responsiveness issue in FF needs multiprocess setup. That way UI wouldn't be blocked, only the child process. Similar to Chrome, where scrolling or resizing while loading html spec isn't working too well.","msgtype":"m.text"},"ts":1403133101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, that was my guess too","msgtype":"m.text"},"ts":1403133118000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(fortunately e10s project is doing quite well)","msgtype":"m.text"},"ts":1403133120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I do profile html spec loading occasionally","msgtype":"m.text"},"ts":1403133161000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: I don't think it counts as what you said unless he's insisting on sticking with his original approach in the face of a reasonable alternative","msgtype":"m.text"},"ts":1403133165000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: i haven't looked into what an alternative would look like","msgtype":"m.text"},"ts":1403133190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: but i'm sure it'd be possible to find one","msgtype":"m.text"},"ts":1403133194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, um, is there some way to let firefox take a breather during the loading process","msgtype":"m.text"},"ts":1403133200000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"someone recommended something on the ticket, iirc","msgtype":"m.text"},"ts":1403133209000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SamB: it is mostly layout stuff... need to improve interruptible layout","msgtype":"m.text"},"ts":1403133275000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In Firefox nightlies you can actually open the HTML5 spec in a separate process tab, so problem solved if you remember to do that :-)","msgtype":"m.text"},"ts":1403133279000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: also, it sounds kind of unreasonable to expect a transition that impacts every element to be too quick","msgtype":"m.text"},"ts":1403133285000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"smaug____: ah","msgtype":"m.text"},"ts":1403133293000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: it's blazing fast in firefox","msgtype":"m.text"},"ts":1403133296000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: not even a slight hickup","msgtype":"m.text"},"ts":1403133303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: buttery smooth 60fps goodness","msgtype":"m.text"},"ts":1403133309000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: huh, what properties ...","msgtype":"m.text"},"ts":1403133313000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"goes to check","msgtype":"m.emote"},"ts":1403133316000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: chrome is equally bad too with resizing the window for example","msgtype":"m.text"},"ts":1403133317000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"roc: how do i do that?","msgtype":"m.text"},"ts":1403133334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: i mean, i only have this one page open...","msgtype":"m.text"},"ts":1403133343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: but as soon as i try to open the spec, it messes up command-tabbing around the OS and so on, because it doesn't respond any more","msgtype":"m.text"},"ts":1403133368000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: presumably it has the client area in the other process but the chrome still in the main process","msgtype":"m.text"},"ts":1403133379000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh, it screws with the OS?","msgtype":"m.text"},"ts":1403133391000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"reasonable to expect it or not, having the spec be fast and convenient for everyone is so much more important than any style changes (the spec was perfectly fine before, IMO)","msgtype":"m.text"},"ts":1403133395000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"in the menu FF has open New e10s Window","msgtype":"m.text"},"ts":1403133420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"one may need to do Customize first, I think","msgtype":"m.text"},"ts":1403133431000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"roc: yeah, i just created a new e10s window and while the page is loading, if i command-tab to another app, the window stays up","msgtype":"m.text"},"ts":1403133436000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"e10s\"? is that supposed to be meaningful? heh","msgtype":"m.text"},"ts":1403133445000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"roc: and if i click on another app then command-tab back to firefox, the window doesn't show","msgtype":"m.text"},"ts":1403133448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: internal codename","msgtype":"m.text"},"ts":1403133456000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh okay","msgtype":"m.text"},"ts":1403133460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyway, *my* problems probably started >1y ago ...","msgtype":"m.text"},"ts":1403133466000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: the spec wasn't fine before, we got lots of complaints about the look. but yeah, it's sad that it's slow in chrome, i just don't like working around what are just bugs.","msgtype":"m.text"},"ts":1403133501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: and since i never worked around firefox bugs, it seems bad that i work around chrome bugs","msgtype":"m.text"},"ts":1403133519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what firefox bugs did you decide not to work around, and why?","msgtype":"m.text"},"ts":1403133559000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"some similar performance issue with selectors","msgtype":"m.text"},"ts":1403133577000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and for the same reason","msgtype":"m.text"},"ts":1403133580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"because it was just bugs\", not \"because the workaround was fugly\"?","msgtype":"m.text"},"ts":1403133598000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1403133603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bugs should be fixed :-)","msgtype":"m.text"},"ts":1403133607000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not worked around","msgtype":"m.text"},"ts":1403133612000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, yeah, I guess your hands are tied then","msgtype":"m.text"},"ts":1403133629000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'll probably end up working around this one eventually if they don't fix it, because it is somewhat more eggregious","msgtype":"m.text"},"ts":1403133652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however, you're perfectly at liberty to work around my lack of RAM, since that's not actually a bug in some vendor's code ;-P","msgtype":"m.text"},"ts":1403133660000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(and zewt is right)","msgtype":"m.text"},"ts":1403133667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that the spec being readable is more important)","msgtype":"m.text"},"ts":1403133678000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: that's what the multipage spec is for","msgtype":"m.text"},"ts":1403133686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though I don't expect you to find your own workaround","msgtype":"m.text"},"ts":1403133686000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, that does help","msgtype":"m.text"},"ts":1403133703000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but still, I miss the nifty crossref thing working document-wide, and Ctrl+F ...","msgtype":"m.text"},"ts":1403133774000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: what is \"additional data\"?","msgtype":"m.text"},"ts":1403133862000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"for origins?","msgtype":"m.text"},"ts":1403133876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403133881000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"e.g. certification signature or whatever","msgtype":"m.text"},"ts":1403133883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"certificate","msgtype":"m.text"},"ts":1403133886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably nothing, in practice","msgtype":"m.text"},"ts":1403133898000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, needs more hyperlinks","msgtype":"m.text"},"ts":1403134108000,"senderName":"SamB","senderId":"SamB@irc"}
]