[
{"content":{"body":"MikeSmith: I think we could also unblock the MDN work by temporarily reverting to URL segments instead of titles. Then the blocker is \"just\" review bandwidth.","msgtype":"m.text"},"ts":1536887416000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: good point, yeah","msgtype":"m.text"},"ts":1536887629000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that’s a relatively easy revert, so I can do it right now and push it soonish","msgtype":"m.text"},"ts":1536887668000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Great. I *hope* to make time to review tomorrow in that case, but this week has been really crammed, so I can't promise.","msgtype":"m.text"},"ts":1536887827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no worries, since it’s just an enhancement change and lack of it’s not blocking anybody else’s work","msgtype":"m.text"},"ts":1536888058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I should say thanks much for the review you’ve done so far ー I really appreciate it","msgtype":"m.text"},"ts":1536888096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: OK, wattsi code switched back to using the URL segment, and output pushed to https://arcane-cove-57093.herokuapp.com/","msgtype":"m.text"},"ts":1536897242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/html/pull/3656 Also changes the default classic worker credentials mode correct?","msgtype":"m.text"},"ts":1536902307000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I believe it does, just didn't see it mentioned in the thread","msgtype":"m.text"},"ts":1536902347000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Nope it doesn't nvm","msgtype":"m.text"},"ts":1536903830000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: about https://developer.mozilla.org/en-US/docs/Web/API/WorkerLocation","msgtype":"m.text"},"ts":1536910726000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> https://developer.mozilla.org/en-US/docs/Web/API/WorkerLocation","msgtype":"m.text"},"ts":1536910733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1536910735000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> The WorkerLocation interface doesn't inherit any property, but implements properties defined in the URLUtilsReadOnly interface.","msgtype":"m.text"},"ts":1536910741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is the above true?","msgtype":"m.text"},"ts":1536910750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if so I don’t see where it’s specified that it inherits properties defined in URLUtilsReadOnly","msgtype":"m.text"},"ts":1536910810000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/workers.html#worker-locations doesn’t state anything about that","msgtype":"m.text"},"ts":1536910878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, or is it because WorkerGlobalScope inherits?","msgtype":"m.text"},"ts":1536910927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, that used to be true, but not anymore","msgtype":"m.text"},"ts":1536911339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1536911350000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does URLUtilsReadOnly even exist anymore?","msgtype":"m.text"},"ts":1536911354000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm, no","msgtype":"m.text"},"ts":1536911372000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see that it actually does not exist anymore","msgtype":"m.text"},"ts":1536911385000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well there we are :)","msgtype":"m.text"},"ts":1536911636000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: btw I’m curious what the WPT interface test for the Window object does, as far as checking the IDL from the spec","msgtype":"m.text"},"ts":1536911833000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Can you elaborate? :)","msgtype":"m.text"},"ts":1536911868000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks at https://web-platform-tests.live/html/browsers/the-window-object/window-prototype-chain.html","msgtype":"m.emote"},"ts":1536911937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: I mean in that the properties aren’t exposed from the prototype the way they are for other IDL interfaces/objects","msgtype":"m.text"},"ts":1536911994000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yesterday Domenic and annevk clarified for me a bit about how it works, but I still don’t understand how we could test what was described to me","msgtype":"m.text"},"ts":1536912095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, there's branches like this one: https://github.com/web-platform-tests/wpt/blob/8a062c149e4581de0cd92cb51f316247e9514e5d/resources/idlharness.js#L2117","msgtype":"m.text"},"ts":1536912098000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1536912142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1536912156000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK, that makes sense","msgtype":"m.text"},"ts":1536912163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you can only observe it through WindowProxy","msgtype":"m.text"},"ts":1536912192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: so I guess you can study how that behaves (it's well defined)","msgtype":"m.text"},"ts":1536912254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: and if you then study the behavior for global objects in IDL you should have an idea how \"window\" works","msgtype":"m.text"},"ts":1536912279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and how to poke at it)","msgtype":"m.text"},"ts":1536912290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK","msgtype":"m.text"},"ts":1536912303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that leaves some complicated cases still, e.g., https://github.com/whatwg/html/issues/3997","msgtype":"m.text"},"ts":1536912329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK yeah I started to understand that from what you had pointed out yesterday. Was mostly left wondering how WPT idlharness handled it","msgtype":"m.text"},"ts":1536912333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks at https://github.com/whatwg/html/issues/3997","msgtype":"m.emote"},"ts":1536912348000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ah okay, I'm not sure about idlharness unfortunately","msgtype":"m.text"},"ts":1536912360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"god this stuff is so messy","msgtype":"m.text"},"ts":1536912371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., teh https://github.com/whatwg/html/issues/3997 things","msgtype":"m.text"},"ts":1536912381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*thing","msgtype":"m.text"},"ts":1536912386000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"uhuh","msgtype":"m.text"},"ts":1536912392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"folks must have been really worried about their job 20 years ago, but then they moved on and left us with their job security/technical debt","msgtype":"m.text"},"ts":1536912447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can’t imagine any other runtime comes close to this in terms of complications like this, and quirks","msgtype":"m.text"},"ts":1536912452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1536912458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I hear Windows is pretty bad","msgtype":"m.text"},"ts":1536912471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yeah maybe only that is anywehre close to being in the same class","msgtype":"m.text"},"ts":1536912495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess with development of most other runtimes, after the people who dumped all the bad designed stuff in there have moved on, the others who come in after can still (with enough time ane work) rip it out and replace it with something better","msgtype":"m.text"},"ts":1536912611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and break some legacy APIs I guess","msgtype":"m.text"},"ts":1536912621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suppose that’s what it comes downto, other runtimes developers have the luxury of being able to break backward compat","msgtype":"m.text"},"ts":1536912685000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but what’s also depressing to think about it is that, rightly, all the web platform’s messiness should be clearly documented, along with being specced","msgtype":"m.text"},"ts":1536912916000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and there is nobody who gets up in the morning looking forward to writing good documentation for that kind of stuff","msgtype":"m.text"},"ts":1536912945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Anne does!","msgtype":"m.text"},"ts":1536912958000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1536912963000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Or I choose to believe that","msgtype":"m.text"},"ts":1536912969000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thank heavens we got Anne","msgtype":"m.text"},"ts":1536912977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe we can talk Anne into writing docs along with speccing everything","msgtype":"m.text"},"ts":1536913003000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but short of that, at least reviewing","msgtype":"m.text"},"ts":1536913034000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Do we really need these intricacies documented outside the spec, though?","msgtype":"m.text"},"ts":1536913071000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"would be fine with \"here be dragons\"","msgtype":"m.emote"},"ts":1536913078000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1536913082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah maybe so","msgtype":"m.text"},"ts":1536913091000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Might be worth putting a stack of motivating examples in the spec, if we don't have them yet","msgtype":"m.text"},"ts":1536913114000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well partly that’s what we have MDN for","msgtype":"m.text"},"ts":1536913141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I personally don’t think loading the spec itself down with yet more non-normative stuff is the optimal solution","msgtype":"m.text"},"ts":1536913166000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the particular problem that concerns me right now is that after we add MDN annotations to the spec, readers following the links in the annotations and reading the MDN content are going to expect that it clarifies their understanding","msgtype":"m.text"},"ts":1536913229000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the vast majority of cases, the MDN docs do that, quite well","msgtype":"m.text"},"ts":1536913246000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the existing MDN docs for these cases like Window are a different matter","msgtype":"m.text"},"ts":1536913285000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: by way of contrast, I'm in favour of adding non-normative text to the spec if it helps people who don't already know the area intimately be able to read it","msgtype":"m.text"},"ts":1536929138000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://heycam.github.io/webidl/#idl-dictionaries - The identifier is the key name of the key–value pair. If the Type is an identifier followed by ?, then the identifier must identify an interface, enumeration, callback function or typedef. If the dictionary member type is an identifier not followed by ?, then the identifier must identify any one of those definitions or a dictionary.","msgtype":"m.text"},"ts":1536932130000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I keep reading this, but I have no idea what it means :D","msgtype":"m.text"},"ts":1536932145000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Can anyone help? What does ? mean in a dictionary?","msgtype":"m.text"},"ts":1536932162000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you use a ? you can't use a dictionary type","msgtype":"m.text"},"ts":1536932623000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: As in a dictionary within a dictionary? What's the benefit of ? then, other than asserting the type isn't a dictionary?","msgtype":"m.text"},"ts":1536932753000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1536932780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the ? means that null is allowed","msgtype":"m.text"},"ts":1536932785000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Riiiiight!","msgtype":"m.text"},"ts":1536932794000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but you can't use nullable together with a dictionary","msgtype":"m.text"},"ts":1536932798000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"since dictionaries are implicitly present if you say null","msgtype":"m.text"},"ts":1536932828000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think it'd have taken me a few months of reading that paragraph over and over again to figure that out","msgtype":"m.text"},"ts":1536932838000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Thanks for clearing that up","msgtype":"m.text"},"ts":1536932859000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"happy to help. I'll send you the bill :-P","msgtype":"m.text"},"ts":1536932874000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1536932879000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: TabAtkins: any remaining concerns about \"htmlsvg-global/nonce\" for https://github.com/whatwg/html/pull/4032 ? Would like to merge if not.","msgtype":"m.text"},"ts":1536934831000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm pushing a nit","msgtype":"m.text"},"ts":1536934867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nah go for it","msgtype":"m.text"},"ts":1536934879000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(autowrapping tooling would be really nice)","msgtype":"m.text"},"ts":1536934882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grumbles something about soft wrapping being better","msgtype":"m.emote"},"ts":1536934921000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"3... 2... 1...","msgtype":"m.text"},"ts":1536934960000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(that's my countdown for TabAtkins telling us how semantic wrapping is better.)","msgtype":"m.text"},"ts":1536934971000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":bursts in, gasping and out of breath:","msgtype":"m.text"},"ts":1536935020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(spaces)","msgtype":"m.text"},"ts":1536935039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(oh nooooo)","msgtype":"m.text"},"ts":1536935047000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":somehow bursts in a second time:","msgtype":"m.text"},"ts":1536935064000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"🍿","msgtype":"m.text"},"ts":1536935072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(rgb is the best way to specify colors)","msgtype":"m.text"},"ts":1536935691000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"papayawhips astearns","msgtype":"m.emote"},"ts":1536935818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"astearns: #rgb only of course, no one needs #rrggbb.","msgtype":"m.text"},"ts":1536936381000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: do we have tests for a fieldset with multiple legend elements where the first legend element is floated or positioned?","msgtype":"m.text"},"ts":1536936679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: no need for a pointer, just curious","msgtype":"m.text"},"ts":1536936690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes. also with dynamically changing the style","msgtype":"m.text"},"ts":1536936770000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good times were had I'm sure","msgtype":"m.text"},"ts":1536936782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't find any bugs with that test actually","msgtype":"m.text"},"ts":1536936804000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"surprisingly","msgtype":"m.text"},"ts":1536936811000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If we make <ul> support type=\"\", should it also support start=\"\"? /cc TabAtkins","msgtype":"m.text"},"ts":1536938967000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Firefox apparently supports the content attribute but not the IDL attribute","msgtype":"m.text"},"ts":1536938983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: Is the total reach of changing default classic script fetch options in https://github.com/whatwg/html/pull/3656 just making imports from classic workers be same-origin credentials, or is that inaccurate","msgtype":"m.text"},"ts":1536938989000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Meh, no opinion","msgtype":"m.text"},"ts":1536939022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Start comes with value on the li, of course","msgtype":"m.text"},"ts":1536939044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"domfarolino: it shouldn't affect class workers as they were same-origin bound anyway","msgtype":"m.text"},"ts":1536939085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"classic workers*","msgtype":"m.text"},"ts":1536939091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: this is mainly about <script type=module>","msgtype":"m.text"},"ts":1536939206000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Indeed, but I noticed `fetch a classic worker script` uses same-origin credentials (of course), but returns a script made from default classic script fetch options (omit creds). Is this the options that \"referencing script\" will have, when import()ing?","msgtype":"m.text"},"ts":1536939303000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"If so, I'm wondering if changing that will change the credentials mode that these imports() will be fetched with? (sorry, I could easily be getting lost in the cross-linking)","msgtype":"m.text"},"ts":1536939360000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: would that apply if a classic worker has a cross-origin import?","msgtype":"m.text"},"ts":1536941032000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Hmm I aww","msgtype":"m.text"},"ts":1536941295000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"*Hmm I see","msgtype":"m.text"},"ts":1536941298000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems like it would impact import()s from workers too, yeah","msgtype":"m.text"},"ts":1536941316000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But it should","msgtype":"m.text"},"ts":1536941318000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The idea is to just have same-origin credentials mode everywhere","msgtype":"m.text"},"ts":1536941327000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Unless changed via <script type=module crossorigin=\"use-credentials\"> or new Worker(url, { credentials: \"include\" })","msgtype":"m.text"},"ts":1536941376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the latter actually wouldn’t have an effect I think, since the credentials member is only used for module workers IIRC. But yes that makes sense, I was just trying to see if we’ll need another intent for chrome, since changing default classic worker creds is different from changing <script type=module>.","msgtype":"m.text"},"ts":1536941740000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"s/default classic worker creds/default classic script fetch options (and therefore classic worker descendent imports)","msgtype":"m.text"},"ts":1536941917000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"We'll also probably need descendent worker credentials tests (they seem missing)","msgtype":"m.text"},"ts":1536942688000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: aah well spotted, it does affect that and maybe importScripts()? That used to use “include” like regular scripts. Hmm","msgtype":"m.text"},"ts":1536943275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"importScripts() yes","msgtype":"m.text"},"ts":1536943451000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Oh interesting. Also I guess it’s a little odd that descendant classic worker scripts can’t be fetched with “include” credentials","msgtype":"m.text"},"ts":1536943500000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Ugh, descendant classic worker imports**","msgtype":"m.text"},"ts":1536943720000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"That also goes for some other fetch options, but perhaps this one is particularly annoying…","msgtype":"m.text"},"ts":1536946381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps we need to change classic back to include","msgtype":"m.text"},"ts":1536946461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I might not have considered “subfetches” carefully enough, sigh","msgtype":"m.text"},"ts":1536946528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why all this infrastructure is to be managed by only a couple people is beyond me, it could really use more attention","msgtype":"m.text"},"ts":1536946586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll write a comment on the PR attempting to summarize all of the changes introduced, and link to whatever tests exists, and whatever tests need written etc.","msgtype":"m.text"},"ts":1536947440000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah, it's very \"gnarly\" infra. Cool though","msgtype":"m.text"},"ts":1536947469000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: that’s great, thanks!","msgtype":"m.text"},"ts":1536951250000,"senderName":"annevk","senderId":"annevk@irc"}
]