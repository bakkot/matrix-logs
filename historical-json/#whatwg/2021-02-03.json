[
{"content":{"body":"Domenic: in documents you author other than HTML, you generally donâ€™t use any hard margin? I mean, not like the 100-character limit we use for the HTML spec source","msgtype":"m.text"},"ts":1612315336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, I guess not. At least, never in Markdown if I can avoid it.","msgtype":"m.text"},"ts":1612318062000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Definitely in JS and other programming languages...","msgtype":"m.text"},"ts":1612318073000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not sure what I do for HTML, but I guess usually no wrapping","msgtype":"m.text"},"ts":1612318080000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah I meant mostly for markdown or HTML","msgtype":"m.text"},"ts":1612318093000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for mdn/content source, we are not enforcing any line wrapping","msgtype":"m.text"},"ts":1612318120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at first, last month when we started with the new system, I though I would not like the lack of wrapping","msgtype":"m.text"},"ts":1612318175000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but then I spent time figuring out how to get my vim set up to handle it well â€” specifically, how to get it vim to soft-wrap regardless of the window size, and how to soft-wrap indented blocks right","msgtype":"m.text"},"ts":1612318250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and now I have kind of come around to really liking it","msgtype":"m.text"},"ts":1612318279000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it eliminates one less busywork thing to worry about","msgtype":"m.text"},"ts":1612318333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, I think we should give up on wrapping too. With GitHubâ€™s diffing and PR preview thereâ€™s far less of a need","msgtype":"m.text"},"ts":1612330766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Multiple commits from one PR works as well: https://twitter.com/fetchstandard/status/1356849141624799233","msgtype":"m.text"},"ts":1612336632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: crossOriginIsolated is a guarantee that this page does not have opaque content in the same process, right?","msgtype":"m.text"},"ts":1612340774000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It feels like it shouldn't also be other things like a sessionStorage or history.back boundary.","msgtype":"m.text"},"ts":1612340913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: there can still be opaque content, but it \"consented\"","msgtype":"m.text"},"ts":1612341014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm not sure how those are the same, after all, it will also have access to localStorage and such","msgtype":"m.text"},"ts":1612341053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, we're on the same page I think","msgtype":"m.text"},"ts":1612341227000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: https://wpt.fyi/results/fetch/h1-parsing/status-code.window.html is now correct btw","msgtype":"m.text"},"ts":1612348609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think we discussed this before, but why are you tracking things per browsing context rather than per top-level browsing context for session history? Or do browsers also track something at the browsing context level? cc smaug____","msgtype":"m.text"},"ts":1612350987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: is that to avoid having to re-identify the <iframe>s and such? (I guess I don't know how that actually works in browsers.)","msgtype":"m.text"},"ts":1612351057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: my plan is for an iframe's navigable to own its session history, but which item is it's 'current' item is dictated by the top-level navigable","msgtype":"m.text"},"ts":1612351132000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so say you have A which nests B","msgtype":"m.text"},"ts":1612351168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"user navigates B to B2 then navigates A to C; browser does aggressive GC of sorts so there's no bfcache and the iframe is gone, then user presses back","msgtype":"m.text"},"ts":1612351224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought browsers made that work, in that you would see A with B2, not B, fetched from the network","msgtype":"m.text"},"ts":1612351343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, when a document is discarded, it's nested session history will need to be serialised in some way. Reapplying that state can fail in all kinds of fun ways, so it may not create as many session history entries as it had previously","msgtype":"m.text"},"ts":1612351406000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I see, that's how you handle that and then you also deserialize it when traversing history","msgtype":"m.text"},"ts":1612351460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but while a document is present, I associate the session history with the nested navigable, that means those entries go away if the navigable is destroyed (eg when removing an iframe)","msgtype":"m.text"},"ts":1612351461000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: yeah, that's the plan. I'm going to tackle that in a second pass","msgtype":"m.text"},"ts":1612351479000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I haven't looked at the PR in detail yet but if this is not called out please XXX it somewhere","msgtype":"m.text"},"ts":1612351529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good to know there's a plan ðŸ™‚","msgtype":"m.text"},"ts":1612351551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: see 'spec changes' in https://github.com/whatwg/html/issues/5767. It's very hand-wavey there, but it covers my initial thinking","msgtype":"m.text"},"ts":1612351567000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: basically the document in a session history entry is replaced with a serialised representation of its nested history","msgtype":"m.text"},"ts":1612351605000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"do we have any good term for \"current document or any frame descendent\"?","msgtype":"m.text"},"ts":1612357512000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: https://github.com/whatwg/html/issues/1336#issuecomment-557512704","msgtype":"m.text"},"ts":1612357600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is there some summary somewhere on the current vs relevant debate?","msgtype":"m.text"},"ts":1612373562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: latest revival is https://github.com/heycam/webidl/issues/135#issuecomment-411109348","msgtype":"m.text"},"ts":1612373599000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see, I guess with bz doing other things we could see if there's appetite for revisiting this, but it's a pretty large undertaking","msgtype":"m.text"},"ts":1612373934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I dunno... It's less work than you might think because most specs still aren't being explicit about realms","msgtype":"m.text"},"ts":1612373965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm also not sure I fully understand the proposal, e.g., with new URL would its SearchParams always be in the same realm?","msgtype":"m.text"},"ts":1612373972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as long as URLSearchParams was created in the URL constructor then yes. If it was created lazily then no.","msgtype":"m.text"},"ts":1612374012000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think creating things lazily is just not done as often as bz though","msgtype":"m.text"},"ts":1612374021000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"At least in specs","msgtype":"m.text"},"ts":1612374026000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: any kind of promise fulfillment value, presumably?","msgtype":"m.text"},"ts":1612374061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean created lazily and cached","msgtype":"m.text"},"ts":1612374075000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And I guess my worry is not so much about updating specs as it is about impl and tests","msgtype":"m.text"},"ts":1612374129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I think there's like 3-5 test files (mostly written by us) that are rigorous about these things","msgtype":"m.text"},"ts":1612374196000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And who knows what impls do","msgtype":"m.text"},"ts":1612374202000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm, webidl/current-realm.html why is that named current","msgtype":"m.text"},"ts":1612374248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It does seem to be asserting current","msgtype":"m.text"},"ts":1612374311000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wait no I misred","msgtype":"m.text"},"ts":1612374336000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah it's asserting relevant","msgtype":"m.text"},"ts":1612374359000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"browsers pass most of the tests there atm","msgtype":"m.text"},"ts":1612374362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1612374388000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I dunno, we could say \"create promises and exceptions in the current realm, create everything else in relevant??\" Seems like a burden for spec authors","msgtype":"m.text"},"ts":1612374437000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I do think some amount of impl updates are necessary because having promises be in different realms depending on whether they're rejected or fulfilled is just bonkers","msgtype":"m.text"},"ts":1612374457000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess if we let spec authors not specify a realm (like we are already doing for exceptions, in practice) then it could work","msgtype":"m.text"},"ts":1612374521000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But then we'd need some of jyasskin's ideas about auto-propagating the realm into queued tasks","msgtype":"m.text"},"ts":1612374535000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"through in parallel? hmmmm","msgtype":"m.text"},"ts":1612374553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"magic realm","msgtype":"m.text"},"ts":1612374568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/heycam/webidl/issues/135#issuecomment-286789309 I objected to that in my reply but at this point maybe he's right, we just need anything we can get to make this a tractable problem for spec authors","msgtype":"m.text"},"ts":1612374580000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It doesn't seem to be that hard to get a realm and pass it to new and such, based on some recent editing of Fetch, but if we can make it easier that would be nice of course","msgtype":"m.text"},"ts":1612374651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well I think it becomes harder if you have to explicitly think about the realm each time","msgtype":"m.text"},"ts":1612374668000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And I'm worried if we say \"promises and exceptions do one thing, everything else does another\" then it's too hard","msgtype":"m.text"},"ts":1612374680000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm also more flexible than bz on what realm we pick and am happy to make the case internally, but yeah, we do need a story of sorts","msgtype":"m.text"},"ts":1612374703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also... what is even the story for dictionaries","msgtype":"m.text"},"ts":1612374711000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You return an Infra map, and IDL handles the conversion probably","msgtype":"m.text"},"ts":1612374721000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I bet it uses current","msgtype":"m.text"},"ts":1612374723000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(who knows what implementations do)","msgtype":"m.text"},"ts":1612374731000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah this is https://github.com/heycam/webidl/issues/371","msgtype":"m.text"},"ts":1612374752000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Could there also be compat fallout if this was changed for createElement or some such?","msgtype":"m.text"},"ts":1612374841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems possible but unlikely... Not sure it's worth trying","msgtype":"m.text"},"ts":1612374885000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I'm saying I appreciate that for interfaces we have implementation precedent and some vague reasons to use relevant. So if we did interfaces = relevant, everything else (notably sequences, dictionaries, records, exceptions, and promises) = current that might work. But I don't want to make spec authors deal with that distinction. Maybe we could just have them not pass a realm at all, if we do this auto-propagating","msgtype":"m.text"},"ts":1612374973000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"current/relevant for them.","msgtype":"m.text"},"ts":1612374973000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's certainly easy to not give \"a new promise\" a realm argument","msgtype":"m.text"},"ts":1612375026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And that one is pretty rarely called from queued tasks","msgtype":"m.text"},"ts":1612375058000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll drop a proposal in the thread...","msgtype":"m.text"},"ts":1612375085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's no current realm in that case I take it?","msgtype":"m.text"},"ts":1612375087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There is not currently","msgtype":"m.text"},"ts":1612375094000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But we could make there be one","msgtype":"m.text"},"ts":1612375097000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"By adding spec magic to \"in parallel\" and \"queue a task\"","msgtype":"m.text"},"ts":1612375104000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm right, don't we want to change queue a task to queue a global task anyway?","msgtype":"m.text"},"ts":1612375125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it definitely needs access to some global","msgtype":"m.text"},"ts":1612375179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a task that is","msgtype":"m.text"},"ts":1612375185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotta go for a bit, but I'll ponder it some more","msgtype":"m.text"},"ts":1612375200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/a bit/the day/","msgtype":"m.text"},"ts":1612375209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds good, let's continue on the Web IDL thread","msgtype":"m.text"},"ts":1612375222000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: HTML CI errored on main: \"docker: unauthorized: authentication required.\"","msgtype":"m.text"},"ts":1612375304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh dear","msgtype":"m.text"},"ts":1612375313000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Let's try re-running! I will debug...","msgtype":"m.text"},"ts":1612375343000,"senderName":"Domenic","senderId":"Domenic@irc"}
]