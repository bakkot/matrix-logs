[
{"content":{"body":"mathiasbynens: did you have a script to normalize scrollTop for html/body without browser sniffing?","msgtype":"m.text"},"ts":1423461226000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did you mean https://gist.github.com/dperini/ac3d921d6a08f10fd10e ?","msgtype":"m.text"},"ts":1423461524000,"senderName":"matijs","senderId":"matijs@irc"},
{"content":{"body":"matijs: looks like what i wanted at least. thanks","msgtype":"m.text"},"ts":1423461611000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i thought input type=“datetime” was pulled from the spec, but I see it here: https://html.spec.whatwg.org/multipage/forms.html#date-and-time-state-(type=datetime).","msgtype":"m.text"},"ts":1423465031000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"zcorpan: https://github.com/mathiasbynens/jquery-smooth-scrolling/blob/fba27f86a6b3a8788d1c1b3aa94a951eb9f087dc/jquery.smoothscroll.js#L4-L21 (jQuery but you get the idea)","msgtype":"m.text"},"ts":1423465099000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"matijs: wow, dperini’s is much nicer","msgtype":"m.text"},"ts":1423465127000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"I thought it was removed over a year ago. anyone know the status?","msgtype":"m.text"},"ts":1423465136000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"difference: mine is an actual feature test; dperini’s is based on weak inference","msgtype":"m.text"},"ts":1423465225000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"matijs: mathiasbynens: https://github.com/operasoftware/devopera/issues/242","msgtype":"m.text"},"ts":1423465238000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"estellevw__: in favor of only having datetime-local?","msgtype":"m.text"},"ts":1423468744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't find a bug that has datetime in the description","msgtype":"m.emote"},"ts":1423468770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can only find discussions on “non-official” sites that it has been dropped, and browsers don’t support it, but don’t know if WHATWG is or has actively discussed it","msgtype":"m.text"},"ts":1423469058000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"estellevw__: there has been mailing list discussion about the merits of datetime vs datatime-local","msgtype":"m.text"},"ts":1423470518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"estellevw__: and that ideally datetime-local would've been named datetime","msgtype":"m.text"},"ts":1423470532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"have been*","msgtype":"m.text"},"ts":1423470544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe that was over a year ago. Not sure what the process is for removing stuff from the spec. Trying to determine if it’s a done deal, or it is still being considered.","msgtype":"m.text"},"ts":1423470614000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"estellevw__: https://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_removing_bad_ideas_from_a_specification.3F","msgtype":"m.text"},"ts":1423471052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"estellevw__: https://lists.w3.org/Archives/Public/public-html/2014Feb/0003.html","msgtype":"m.text"},"ts":1423471062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks.","msgtype":"m.text"},"ts":1423471073000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"haha, yes, exactly a year ago.","msgtype":"m.text"},"ts":1423471080000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"and https://www.w3.org/Bugs/Public/show_bug.cgi?id=16959","msgtype":"m.text"},"ts":1423471098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and https://www.w3.org/Bugs/Public/show_bug.cgi?id=17855","msgtype":"m.text"},"ts":1423471157000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"It was noted that at the F2F that this feature is at risk for 5.0.\" and it was never resolved?","msgtype":"m.text"},"ts":1423471165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: that latter bug seems mostly about terminology, not about changing controls","msgtype":"m.text"},"ts":1423471231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, it's a different issue","msgtype":"m.text"},"ts":1423471246000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"...I realize now","msgtype":"m.text"},"ts":1423471264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hunts some more","msgtype":"m.emote"},"ts":1423471272000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=16960 is the one I was trying to find, I think","msgtype":"m.text"},"ts":1423471328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"corresponding whatwg bug is https://www.w3.org/Bugs/Public/show_bug.cgi?id=17856","msgtype":"m.text"},"ts":1423471352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"christ","msgtype":"m.text"},"ts":1423471402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Which defers to a mailing list thread :-)","msgtype":"m.text"},"ts":1423471404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah not sure that's it either","msgtype":"m.text"},"ts":1423471418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"too many bugs","msgtype":"m.text"},"ts":1423471421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/html/commit/3e5df1ee1aebed37571a23c9b62adc74a92a04b9","msgtype":"m.text"},"ts":1423471430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"month and week are also both in the living standards and 5.1 but not in 5.0, but i see no discussion on those being at risk","msgtype":"m.text"},"ts":1423471431000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"Removing input type=\"datetime-local\"","msgtype":"m.text"},"ts":1423471438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-whatwg-archive/2013Jul/0367.html and onwards","msgtype":"m.text"},"ts":1423471456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait they removed the useful one?","msgtype":"m.text"},"ts":1423471486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, browsers have implement datetime-local but not datetime","msgtype":"m.text"},"ts":1423471486000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1423471493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Typical committee decision","msgtype":"m.text"},"ts":1423471500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"estellevw__: https://github.com/w3c/html/commit/6ef6eaaad792247c89b2e231e9100d5ff413ad90 \"removed input types datetime, datetime-local, week, month\"","msgtype":"m.text"},"ts":1423471556000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks.","msgtype":"m.text"},"ts":1423471568000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"https://miketaylr.com/code/input-type-attr.html shows datetime is NOT supported, but datetime-local is","msgtype":"m.text"},"ts":1423471585000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"in blink","msgtype":"m.text"},"ts":1423471635000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"I think I may have actually been the one who recommended that we drop datetime, datetime-local, week, month from the W3C spec at that time","msgtype":"m.text"},"ts":1423471692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't remember","msgtype":"m.text"},"ts":1423471703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe darobin will remember better than me, if you want to ask him once he's around","msgtype":"m.text"},"ts":1423471729000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do. Thanks. My thought is some of those may have been dropped from 5 and left in 5.1 because they still needed to be better flushed out, like ::selection in CSS being moved from the selectors spec so that the spec can move forward.","msgtype":"m.text"},"ts":1423471816000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"Would like to know if I assuming incorrectly thought","msgtype":"m.text"},"ts":1423471849000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"thanks.","msgtype":"m.text"},"ts":1423471851000,"senderName":"estellevw__","senderId":"estellevw__@irc"},
{"content":{"body":"estellevw__: I suggest telling your readers to consider the W3C HTML5 Rec just be a snapshot of a subset of what the state of HTML was in October 2014","msgtype":"m.text"},"ts":1423472356000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it'd be misleading to lead them to believe they can work from the HTML5 Rec alone as a guide when authoring documents","msgtype":"m.text"},"ts":1423472450000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for one thing, even the W3C validator doesn't restrict itself to only what's included in the HTML5 Rec","msgtype":"m.text"},"ts":1423472483000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., the validator still considers datetime, datetime-local, week, month to be valid","msgtype":"m.text"},"ts":1423472523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and there was never any decision in the HTML WG to drop them from HTML5 itself. Instead there was just an editorial decision to leave them out of the HTML5 Rec snapshot.","msgtype":"m.text"},"ts":1423472624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as one of the main people responsible for creating all that confusion, I'd be happy to try to help come up with some wording that would hopefully make it all less confusing for readers","msgtype":"m.text"},"ts":1423472705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"estellevw__: I think http://www.w3.org/html/landscape/ is a still a good document to refer to for clarification about what the differences are, and a good document to point readers to","msgtype":"m.text"},"ts":1423472832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"although I realize it's also not complete","msgtype":"m.text"},"ts":1423472851000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm I think it's closer than I realized though","msgtype":"m.text"},"ts":1423472888000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g.,:","msgtype":"m.text"},"ts":1423472906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"No input types datetime, datetime-local, week, month in W3C HTML 5.0 (user agent)","msgtype":"m.text"},"ts":1423472907000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Insufficient implementation experience at this point.","msgtype":"m.text"},"ts":1423472911000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"... is listed there","msgtype":"m.text"},"ts":1423472926000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Insufficient implementation experience at this point.\"","msgtype":"m.text"},"ts":1423472935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think Robin did a great job at putting that together","msgtype":"m.text"},"ts":1423472969000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#mutation-method-macro — could this macro ever be exposed as a public method? Would there be a proper name or place for this macro, like ParentNode.mutation?","msgtype":"m.text"},"ts":1423494748000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: not sure we should expose that","msgtype":"m.text"},"ts":1423495104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: any update on bikeshedding DOM?","msgtype":"m.text"},"ts":1423495120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We have a set of DOM polyfills that rely on the mutation macro. Inspired by the change from ParentNode.replace to ParentNode.replaceWith, we plan to separate each of the polyfills and let them reference a separate mutation method. Keeping that method private is not a problem, but I want the name to be a semantic as possible. So, I’m trying to","msgtype":"m.text"},"ts":1423495862000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"imagine what its name might be were the method public.","msgtype":"m.text"},"ts":1423495862000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: I would imagine it to be a symbol if it were public","msgtype":"m.text"},"ts":1423496521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they might need to target super-legacy browsers with no concept of symbols, though","msgtype":"m.text"},"ts":1423496854000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk, caitp: indeed.","msgtype":"m.text"},"ts":1423496946000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: if you keep it private it doesn't seem to matter much","msgtype":"m.text"},"ts":1423496999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: mutationMacro and just rename it if the DOM changes?","msgtype":"m.text"},"ts":1423497009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: mutaitonMacro might not be super semantic either, all it's doing is pre-processing the arguments passed","msgtype":"m.text"},"ts":1423497036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is living html turing complete?","msgtype":"m.text"},"ts":1423497219000,"senderName":"safinaskar","senderId":"safinaskar@irc"},
{"content":{"body":"safinaskar: HTML's parser is, yes, due to </script>","msgtype":"m.text"},"ts":1423497269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean js?","msgtype":"m.text"},"ts":1423497337000,"senderName":"safinaskar","senderId":"safinaskar@irc"},
{"content":{"body":"okey, what is we disallow inclusion of other languages? is html turing complete?","msgtype":"m.text"},"ts":1423498187000,"senderName":"safinaskar","senderId":"safinaskar@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1423498578000,"senderName":"safinaskar","senderId":"safinaskar@irc"},
{"content":{"body":"i mean","msgtype":"m.text"},"ts":1423498861000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if you don't include document.write","msgtype":"m.text"},"ts":1423498893000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i'm not sure you could call html turing complete","msgtype":"m.text"},"ts":1423498902000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hmm, how does </script> make the parser turing complete?","msgtype":"m.text"},"ts":1423498980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"maybe with html imports you could theoretically create some kind of turing complete program using imports for flow control","msgtype":"m.text"},"ts":1423498982000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but you wouldn't really have any other flow control operators, I guess?","msgtype":"m.text"},"ts":1423499013000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, I'm struggling to see how HTML could be turing complete without imports","msgtype":"m.text"},"ts":1423499015000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I'm not convinced it is with imports, but it doesn't seem obviously impossible)","msgtype":"m.text"},"ts":1423499116000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Clearly as soon as you can run js, it *is* turning complete","msgtype":"m.text"},"ts":1423499144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Turing","msgtype":"m.text"},"ts":1423499149000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i think that's what the script tag thing was all about","msgtype":"m.text"},"ts":1423499197000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you could write a programme with just <script>document.write()</script>","msgtype":"m.text"},"ts":1423499228000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it might not be a very useful programme, but hey","msgtype":"m.text"},"ts":1423499272000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think CSS comes close","msgtype":"m.text"},"ts":1423499424000,"senderName":"albinowax","senderId":"albinowax@irc"},
{"content":{"body":"the problem with prollyfills is catching up with us: https://github.com/Financial-Times/polyfill-service/issues/284","msgtype":"m.text"},"ts":1423499803000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://jsbin.com/cuzatanufa/1/edit?html,output well that was pretty much the best i could come up with","msgtype":"m.text"},"ts":1423499816000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I didn't know document.write limited recursion","msgtype":"m.text"},"ts":1423499821000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"apparently it does","msgtype":"m.text"},"ts":1423499825000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"JonathanNeal: seems like your bad for not following semver","msgtype":"m.text"},"ts":1423499946000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: or rather, financial times's bad","msgtype":"m.text"},"ts":1423499969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I forwarded the recommendation. Thanks for raising the macrotask/microtask issue as well.","msgtype":"m.text"},"ts":1423500499000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"https://twitter.com/mulambda/status/564824426756472832 \\o/","msgtype":"m.text"},"ts":1423500540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It relates to a need we have for private methods, such as mutationMacro and whatever-handles-microtasks.","msgtype":"m.text"},"ts":1423500556000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JakeA: I seem to recall a github issue where we were talking about if Cache.add() or Cache.put() would continue even after the SW shuts down... maybe for background sync type stuff... do you remember that?  I can't find the issue","msgtype":"m.text"},"ts":1423505512000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I just wanted to note that we're probably going to cancel network requests when the SW exits (although we will probably try to keep the SW alive until all the network requests are complete)","msgtype":"m.text"},"ts":1423505577000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Is there any way to simulate the ParentNode object? It equates Document, DocumentFragment, and Element.","msgtype":"m.text"},"ts":1423510110000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what do you mean by simulate it","msgtype":"m.text"},"ts":1423510172000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"[Document, DocumentFragment, Element].forEach(...)","msgtype":"m.text"},"ts":1423510389000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: polyfilling the newish DOM functions? https://github.com/inexorabletash/polyfill/blob/master/experimental/dom.js","msgtype":"m.text"},"ts":1423510499000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"They were polyfilled long ago, but I’m trying to improve upon then. I want to make each polyfill modular so changing replace with replaceWith doesn’t affect the other methods. It’s also nicer when Chrome requires less methods than all other browsers.","msgtype":"m.text"},"ts":1423510631000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"^ jsbell","msgtype":"m.text"},"ts":1423510639000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic, ok, might as well Document.prototype.thing = DocumentFragment.prototype.thing = Element.prototype.thing then","msgtype":"m.text"},"ts":1423510665000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: no, that wouldn't be spec compliant, they shouldn't be ===","msgtype":"m.text"},"ts":1423510702000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"as soon as time machines capable of travelling backwards are a thing, someone is going to fix DOM","msgtype":"m.text"},"ts":1423510814000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: really? Even though they’re all ParentNode?","msgtype":"m.text"},"ts":1423510822000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"probably not before that, though","msgtype":"m.text"},"ts":1423510849000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"JonathanNeal: yes","msgtype":"m.text"},"ts":1423511343000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That is wild. Cause, like, HTMLElement.prototype.remove === Element.prototype.remove","msgtype":"m.text"},"ts":1423511426000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"but not Document.prototype.remove or DocumentFragment.prototype.remove","msgtype":"m.text"},"ts":1423511515000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Wild.","msgtype":"m.text"},"ts":1423511537000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"What is the reason the inheritency doesn’t cross between Document and Element?","msgtype":"m.text"},"ts":1423511563000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"element does not extend document or vice versa, they're different node types","msgtype":"m.text"},"ts":1423511592000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"So that, in theory, ParentNode.prototype.remove === Element.prototype.remove && ParentNode.prototype.remove === Document.prototype.remove && Document.prototype.remove !== Element.prototype.remove","msgtype":"m.text"},"ts":1423511617000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well ParentNode isn't a real thing, it's like a macro, its definition gets copied into the interfaces that implement it","msgtype":"m.text"},"ts":1423511669000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so when you look at it that way it makes sense","msgtype":"m.text"},"ts":1423511676000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's dumb, but it makes sense","msgtype":"m.text"},"ts":1423511707000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Thanks, caitp. It is dumb, but I’ll do my best to follow it.","msgtype":"m.text"},"ts":1423511723000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Unrelated. What is the name of the thing that cues microtasks in JavaScript? It’s used by MutationObserver and Promise.","msgtype":"m.text"},"ts":1423512129000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"In Node, it’s process.nextTick.","msgtype":"m.text"},"ts":1423512176000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: There's no standardized entry point from script","msgtype":"m.text"},"ts":1423512310000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Some Promise polyfills used MutationObserver :P","msgtype":"m.text"},"ts":1423512362000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Yea. I’m creating a private method to handle microtasks, but I don’t even know what the method or macro or whatever-it-is is called. I might just call it nextTick and use it like nextTick(callback).","msgtype":"m.text"},"ts":1423512501000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"it's called enqueueMicrotask","msgtype":"m.text"},"ts":1423512562000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic++ yeaaaaa","msgtype":"m.text"},"ts":1423512615000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"there's been some attempt at making \"asap\" the slang name. Hasn't caught on that much.","msgtype":"m.text"},"ts":1423512637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nowish()","msgtype":"m.text"},"ts":1423512920000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"rsn()","msgtype":"m.text"},"ts":1423512928000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Is enqueueMicrotask a private method or a macro or what?","msgtype":"m.text"},"ts":1423513118000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"it's a spec-level \"abstract operation\"","msgtype":"m.text"},"ts":1423513237000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although HTML doesn't call them that or use function-call notation","msgtype":"m.text"},"ts":1423513245000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's certainly not a method of anything","msgtype":"m.text"},"ts":1423513268000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for the purpose of polyfills, it would be best experienced as a method. Thanks, I’ve applied your feedback to my recommendation in FT’s polyfill-service.","msgtype":"m.text"},"ts":1423513570000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: what object is your polyfill making it a method on?","msgtype":"m.text"},"ts":1423513588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: what is dump about a mixin?","msgtype":"m.text"},"ts":1423513681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: if you think we should do something else, please do file a bug","msgtype":"m.text"},"ts":1423513693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dump about a mixin? I don’t follow.","msgtype":"m.text"},"ts":1423513710000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: above you called the ParentNode design dumb","msgtype":"m.text"},"ts":1423513791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"technically, I called it dumb, and it is --- it's like half-baked trait support without being built on a feature of the language","msgtype":"m.text"},"ts":1423513844000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not really exposed to the language, so you just have to know a bunch of arbitrary crap to deal with it","msgtype":"m.text"},"ts":1423513858000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"which is objectively terrible, I mean come on, this isn't news to anybody","msgtype":"m.text"},"ts":1423513872000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but you know that filing a bug on it wouldn't be actionable","msgtype":"m.text"},"ts":1423513905000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"none of this can ever really change","msgtype":"m.text"},"ts":1423513908000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so, it's just the way it is","msgtype":"m.text"},"ts":1423513912000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"There's no native support and the IDL looks a bit clunky, but copying over prototypes is done by JavaScript itself and seems perfectly decent","msgtype":"m.text"},"ts":1423513982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, I guess I disagree","msgtype":"m.text"},"ts":1423514008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here's the thing","msgtype":"m.text"},"ts":1423514013000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"suppose your api needs to deal with anything implementing this trait, what do you do?","msgtype":"m.text"},"ts":1423514025000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, I think objectively terrible is a strong overstatement","msgtype":"m.text"},"ts":1423514029000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you're looking at node types, or the constructor property","msgtype":"m.text"},"ts":1423514031000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or instanceof","msgtype":"m.text"},"ts":1423514035000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and this means you're dealing with things that don't really matter","msgtype":"m.text"},"ts":1423514056000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"best case would be if (!this implements Trait) throw TypeError();","msgtype":"m.text"},"ts":1423514088000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1423514089000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but instead you have to dig up idl and figure out everything that implements the trait, and how to identify those things","msgtype":"m.text"},"ts":1423514119000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's all kind of awful, like it's not a good scene, it's just that everyone has been stuck with it for so long that it will probably never become not-bad","msgtype":"m.text"},"ts":1423514158000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: it's not a trait, it's a mixin","msgtype":"m.text"},"ts":1423514244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's basically a trait","msgtype":"m.text"},"ts":1423514256000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it would be better if it were a trait","msgtype":"m.text"},"ts":1423514264000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: i concurred with caitp that it is dumb — but what more can I do but sigh? If it already works this way, “fixing” it would involve changing aka breaking the way it worked before, so would filing a bug be anything more than futile?","msgtype":"m.text"},"ts":1423514264000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well you can keep calling it that, but I don't think there's anything that supports that","msgtype":"m.text"},"ts":1423514268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only difference between a trait and a mixin, is that you can tell if something implements a trait","msgtype":"m.text"},"ts":1423514288000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1423514295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is simpler, and more scalable","msgtype":"m.text"},"ts":1423514317000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"IDL does not have traits, just mixins","msgtype":"m.text"},"ts":1423514322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thus objectively better and more correct","msgtype":"m.text"},"ts":1423514324000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't really see how it would be simpler","msgtype":"m.text"},"ts":1423514368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: I don't think much of this is implemented so dunno","msgtype":"m.text"},"ts":1423514400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"traits -> you have a single thing that you need to be aware of: \"does X implement T or not\"","msgtype":"m.text"},"ts":1423514403000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"mixins -> you have N things you need to be aware of","msgtype":"m.text"},"ts":1423514417000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: re: what object is your polyfill making it a method on? No object, it would be a private method within a closure, exposed only to polyfills.","msgtype":"m.text"},"ts":1423514428000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: all methods are on objects... do you mean it's a function then?","msgtype":"m.text"},"ts":1423514442000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"1 is fewer than N, thus mixins are simpler","msgtype":"m.text"},"ts":1423514470000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"As in all var’d and function’d things? Yes.","msgtype":"m.text"},"ts":1423514484000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1423514495000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"traits are","msgtype":"m.text"},"ts":1423514496000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I totally got that ass-backwards in that last line :>","msgtype":"m.text"},"ts":1423514505000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think in this case mixins are simpler since all these methods delegate to generics anyway","msgtype":"m.text"},"ts":1423514536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If we designed things from the ground up it might be different of course","msgtype":"m.text"},"ts":1423514556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the living example would be https://github.com/Financial-Times/polyfill-service/blob/feature/enqueueMicrotask/polyfills/enqueueMicrotask/polyfill.MutationObserver.js","msgtype":"m.text"},"ts":1423514556000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: yeah, that's definitely not a method.","msgtype":"m.text"},"ts":1423514572000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, not might, if we did it today things definitely would be a lot different :-)","msgtype":"m.text"},"ts":1423514575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it's possible that we will have traits some day, and webidl could be rewritten to make these partial interfaces traits, and it could still easily be backwards compatible","msgtype":"m.text"},"ts":1423514609000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but that's just blocked on so many things that it's just as likely to never happen","msgtype":"m.text"},"ts":1423514620000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't see how these particular methods would benefit from being traits","msgtype":"m.text"},"ts":1423514637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They're generic, like Array methods","msgtype":"m.text"},"ts":1423514655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not really about the implementation","msgtype":"m.text"},"ts":1423514679000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: that's not quite accurate; array methods don't do brand checks, whereas these do.","msgtype":"m.text"},"ts":1423514696000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's about being able to easily identify things that have them, don't have them, or should have them","msgtype":"m.text"},"ts":1423514697000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if a polyifller just needed to extend a trait, that would be pretty awesome","msgtype":"m.text"},"ts":1423514718000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: fair","msgtype":"m.text"},"ts":1423514724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"typing is hard","msgtype":"m.text"},"ts":1423514725000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: also fair","msgtype":"m.text"},"ts":1423514766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/streams/commit/06143f8bb8b92381fcce5f1f4f2d6fe10b64d087 Domenic++","msgtype":"m.text"},"ts":1423514806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1423514832000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: have you discussed Streams with sicking lately? Seems he still has the 4 objects vs constructing some kind of pipe concern","msgtype":"m.text"},"ts":1423514875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we had a bit of a discussion in the bug, I don't think he responded to the point","msgtype":"m.text"},"ts":1423514890000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1423514899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is interesting http://www.do-not-panic.com/2014/02/developer-certificate-of-origin.html more lightweight than a CLA but seemingly just as good","msgtype":"m.text"},"ts":1423514960000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"read CA and got confused","msgtype":"m.emote"},"ts":1423515099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"certificate\" and \"origin\" did not help","msgtype":"m.text"},"ts":1423515133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1423515141000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"more http://lwn.net/Articles/592503/","msgtype":"m.text"},"ts":1423515390000,"senderName":"Domenic","senderId":"Domenic@irc"}
]