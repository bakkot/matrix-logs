[
{"content":{"body":"attempts at isolating firefox 29 chewing cpu constantly: fruitless","msgtype":"m.text"},"ts":1400200663000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seems like it's just a small, constant amount of cpu per tab (and I have lots of tabs), since no matter how I close blocks of tabs, cpu usage drops linearly","msgtype":"m.text"},"ts":1400200683000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: does it not have a profiler?","msgtype":"m.text"},"ts":1400200938000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i don't know, i can't find any equivalent of chrome's task manager (which is a lot easier to implement in a process-model browser, of course)","msgtype":"m.text"},"ts":1400201097000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but stress level tangibly increased by having my cpu fan spinning nonstop","msgtype":"m.text"},"ts":1400201139000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: huh, I thought it had one of those now","msgtype":"m.text"},"ts":1400201398000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"if it does I haven't tripped over it yet","msgtype":"m.text"},"ts":1400201431000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's a profiler, but it looks like a regular per-page profiler","msgtype":"m.text"},"ts":1400201440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it has a profiler","msgtype":"m.text"},"ts":1400202039000,"senderName":"kbrosnan","senderId":"kbrosnan@irc"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Performance/Profiling_with_the_Built-in_Profiler","msgtype":"m.text"},"ts":1400202053000,"senderName":"kbrosnan","senderId":"kbrosnan@irc"},
{"content":{"body":"zewt: yeah, you'll want to profile the chrome","msgtype":"m.text"},"ts":1400202135000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you might need to do that special out-of-process thing","msgtype":"m.text"},"ts":1400202153000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"sorry mario, your devtools are in another process!\"","msgtype":"m.text"},"ts":1400202186000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"boogyman: your cloak isn't too effective if you join channels before it kicks in ...","msgtype":"m.text"},"ts":1400202235000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: the cloak is \"there\" because i donated.","msgtype":"m.text"},"ts":1400202309000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"a lot of networks just mask everyone's hostname","msgtype":"m.text"},"ts":1400202318000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(you have to donate for privacy?)","msgtype":"m.text"},"ts":1400202559000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, as soon as i turned the profiler on, the problem went away","msgtype":"m.text"},"ts":1400202646000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"some things never change","msgtype":"m.text"},"ts":1400202651000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"maybe they shouldn't have made it possible to turn it off ;-P","msgtype":"m.text"},"ts":1400202684000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"JakeA: did you follow the discussion I had with Domenic about ResponsePromise -> Promise?","msgtype":"m.text"},"ts":1400239139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: jungkees: I think he made a reasonable point that we should just have fetch() return a Promise for a Response, no subclassing warranted","msgtype":"m.text"},"ts":1400239173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1400239244000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: can you share some pointer to the discussion?","msgtype":"m.text"},"ts":1400239430000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: http://krijnhoetmer.nl/irc-logs/whatwg/20140515#l-420","msgtype":"m.text"},"ts":1400239565000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: ResponsePromise isn't doing anything special right now. It has toBlob on it, which is handy but not so handy that I want to get into the promise subclassing mess :D","msgtype":"m.text"},"ts":1400239689000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: If we use a Promise initially, how much breakage would happen if we switched to a subclass later?","msgtype":"m.text"},"ts":1400239717000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Not just thinking of ResponsePromise, but also the cache methods that return a promise for an array - the possibility of making them something both promise-like and async iterable later","msgtype":"m.text"},"ts":1400239754000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"\"[charter] Joint work with TAG on their Packaging on the Web spec?; deadline May 21\" worst thread in a while","msgtype":"m.text"},"ts":1400240251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: returning a subclass later is thought of as being reasonably safe","msgtype":"m.text"},"ts":1400240296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You sound like comic store guy's more reasonable cousin","msgtype":"m.text"},"ts":1400240297000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: we're considering it for query/queryAll for instance (return Array for now, Elements later)","msgtype":"m.text"},"ts":1400240316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shakes hands with annevk & Domenic in a weird 3-way handshake","msgtype":"m.emote"},"ts":1400240397000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: consider ResponsePromise dropped","msgtype":"m.text"},"ts":1400240412000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1400240460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We renamed purpose to context right? Are you still interested in having that on Request objects?","msgtype":"m.text"},"ts":1400240602000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(rather than event objects where it is now)","msgtype":"m.text"},"ts":1400240610000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think grouping it all on Request is fine","msgtype":"m.text"},"ts":1400240689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: We could either have a more pure \"HTTP-like Request\" class and a bunch of parameters, or we could just group them all together as we've done so far","msgtype":"m.text"},"ts":1400240724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the pure style is somewhat attractive I have to say, but basically more involved","msgtype":"m.text"},"ts":1400240780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's called \"context\" now right?","msgtype":"m.text"},"ts":1400240796000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes","msgtype":"m.text"},"ts":1400240801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://fetch.spec.whatwg.org/#concept-request-context","msgtype":"m.text"},"ts":1400240814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we could also call it \"API\" I suppose","msgtype":"m.text"},"ts":1400240863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but that's not a great property name","msgtype":"m.text"},"ts":1400240877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/279","msgtype":"m.text"},"ts":1400241254000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hello!","msgtype":"m.text"},"ts":1400241674000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"I’m looking for a suitable meta tag name for monitoring purpose but can’t anything, but the pingdom","msgtype":"m.text"},"ts":1400241703000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"is there any hash, uid, monitoring meta name I’ve missed?","msgtype":"m.text"},"ts":1400241725000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"how is inline SVG (in HTML code) supposed to react when using innerHTML?","msgtype":"m.text"},"ts":1400242739000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"Firefox parses it using the HTML parser, Chrome using the SVG parser…","msgtype":"m.text"},"ts":1400242756000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"espadrine, are you sure?","msgtype":"m.text"},"ts":1400242764000,"senderName":"pdr","senderId":"pdr@irc"},
{"content":{"body":"pdr: https://thefiletree.com/espadrine/bugs/svg-innerHTML/index.html?plug=none","msgtype":"m.text"},"ts":1400242770000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"it breaks because the HTML pass doesn't recognize it as valid","msgtype":"m.text"},"ts":1400242799000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"at least, I think","msgtype":"m.text"},"ts":1400242805000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"also, things like inserting <rect /><rect /> yields <rect><rect></rect></rect>","msgtype":"m.text"},"ts":1400242833000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"according to the dev tools","msgtype":"m.text"},"ts":1400242901000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"espadrine, chrome is parsing that with the html parser in the same way as the inline svg case. I'm not sure what's up with firefox though.","msgtype":"m.text"},"ts":1400242902000,"senderName":"pdr","senderId":"pdr@irc"},
{"content":{"body":"pdr: so, chrome does things right, and firefox is the one with the bug?","msgtype":"m.text"},"ts":1400242984000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"I'll file it.","msgtype":"m.text"},"ts":1400242988000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"espadrine, try to dig into what firefox is doing first. But I do think chrome is correct in this case","msgtype":"m.text"},"ts":1400243014000,"senderName":"pdr","senderId":"pdr@irc"},
{"content":{"body":"espadrine: firefox has a known bug; puts elements in the wrong namespace, IIRC.","msgtype":"m.text"},"ts":1400243330000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=886390","msgtype":"m.text"},"ts":1400243390000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"davve: good to know; I'm asking on #developers at mozilla","msgtype":"m.text"},"ts":1400243392000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"espadrine: Talk to hsivonen","msgtype":"m.text"},"ts":1400244300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"espadrine: i guess what firefox does matches an older revision of the spec","msgtype":"m.text"},"ts":1400244637000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yep. The updated spec is more intuitive.","msgtype":"m.text"},"ts":1400244777000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"ok then, anyone here who can help me getting a wiki account?","msgtype":"m.text"},"ts":1400245412000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"nedt: I don't own any wikis, but you probably need to state which wiki you want an account on & what permissions you're wanting","msgtype":"m.text"},"ts":1400245544000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(& why)","msgtype":"m.text"},"ts":1400245552000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://wiki.whatwg.org/","msgtype":"m.text"},"ts":1400245557000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"because of the meta tag I asked about an hour ago","msgtype":"m.text"},"ts":1400245567000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"nedt: I think annevk can help","msgtype":"m.text"},"ts":1400245594000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Certainly Hixie can later","msgtype":"m.text"},"ts":1400245604000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would be even more happy if there is an existing meta extension that gives a simple hash for monitoring etc. without being specific to a service. But couldn’t find one","msgtype":"m.text"},"ts":1400245704000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"What's the hash used for?","msgtype":"m.text"},"ts":1400245948000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"mostly for monitoring. i.e. verifing a site is up and everything needed to output the page (cms, db, …) is working.","msgtype":"m.text"},"ts":1400246037000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"there is the pingdom metaextension of the google-site-verification, but using them for an other service feels like misusing","msgtype":"m.text"},"ts":1400246074000,"senderName":"nedt","senderId":"nedt@irc"},
{"content":{"body":"nedt: pm with a username/password","msgtype":"m.text"},"ts":1400246075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nedt: not password, email address","msgtype":"m.text"},"ts":1400246088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"always forgets","msgtype":"m.emote"},"ts":1400246108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I think you should be able to create accounts too","msgtype":"m.text"},"ts":1400246432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh really?","msgtype":"m.text"},"ts":1400246469000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://wiki.whatwg.org/index.php?title=Special:UserLogin&type=signup","msgtype":"m.text"},"ts":1400247103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Interesting","msgtype":"m.text"},"ts":1400247173000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"most longtime users of the wiki can do it","msgtype":"m.text"},"ts":1400247204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: SimonSapin: querySelector/querySelectorAll can pass unpaired surrogates into the \"CSS\" parser; problem?","msgtype":"m.text"},"ts":1400250253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nope, not a problem. As part of parsing, the input stream gets cleaned up, which'll eliminate unpaired surrogates.","msgtype":"m.text"},"ts":1400250341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: CSSOM (both per spec and in impls) too. Currently they go through unchanged. I don’t like it, but I don’t know if we can change it","msgtype":"m.text"},"ts":1400250372000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: I don,t belive we hav ethat particular cleanup","msgtype":"m.text"},"ts":1400250410000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(sorry for the mangling, SSH is not very responsive over mobile in a moving train)","msgtype":"m.text"},"ts":1400250445000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Oh, you're right, we only kill nulls.","msgtype":"m.text"},"ts":1400250462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, I bet we could fix that.","msgtype":"m.text"},"ts":1400250469000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Keep things consistent between input and escapes.","msgtype":"m.text"},"ts":1400250484000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Why would you think we couldn't change it?  Where do you think unpaired surrogates might be used?  Only possible useful spot would be in Selectors, and I doubt there are many pages with purposefully unpaired surrogates in class/etc.","msgtype":"m.text"},"ts":1400250539000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, come to think of it, if you change that, run it by bz","msgtype":"m.text"},"ts":1400250657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I could see people assigning random strings to id/class and expect that to work","msgtype":"m.text"},"ts":1400250673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: not that it’s useful, but who know what crazy things people are doing in JS","msgtype":"m.text"},"ts":1400250851000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it’s just selectors, it’s all of CSSOM","msgtype":"m.text"},"ts":1400250862000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"it’s not just selectors, it’s all of CSSOM","msgtype":"m.text"},"ts":1400250872000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: If we change it at the preprocessing level, it'll still work (you'll be setting a different string, but also querying the same, different, string).","msgtype":"m.text"},"ts":1400250914000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but maybe we can get away with it. I’d be happy to","msgtype":"m.text"},"ts":1400250925000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: None of CSSOM is happy with unpaired surrogates except selectors and a few custom idents.","msgtype":"m.text"},"ts":1400250932000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which means that either you're explicitly putting unpaired surrogates in your markup (crazy?!?) or you're setting them in JS (and they'll get cleaned up in the same way, so they continue to match).","msgtype":"m.text"},"ts":1400250974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: could you bring it up at the f2f? I’ll try to join by phone in your afternoons","msgtype":"m.text"},"ts":1400250999000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Oh wait, nm, they wouldn't get cleaned up if you set class/id.","msgtype":"m.text"},"ts":1400251001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Add it to the wiki?","msgtype":"m.text"},"ts":1400251020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you can't do it through markup, has to be JS","msgtype":"m.text"},"ts":1400251057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: no text encoding allows for unpaired surrogates","msgtype":"m.text"},"ts":1400251075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, good.","msgtype":"m.text"},"ts":1400251077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, anything from Encoding is clean","msgtype":"m.text"},"ts":1400251106000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Then maybe we can make a coordinated change between DOM and CSS, get unpaired surrogates cleaned up everywhere at once?","msgtype":"m.text"},"ts":1400251107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it’s only JS strings","msgtype":"m.text"},"ts":1400251112000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"anything you can write/append to in chuncks, there is a risk that each half of a surrogate pair be in a different chunck, but is still ends up paired correctly","msgtype":"m.text"},"ts":1400251262000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: for DOM in general that's a no :(","msgtype":"m.text"},"ts":1400251284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you think about just cleaning up id/class and maybe attrs?","msgtype":"m.text"},"ts":1400251334000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I wonder if anyone is willing to take a perf hit on that and whether it's actually worth it","msgtype":"m.text"},"ts":1400251368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: kinda depends too on what you see as the bottom layer, if it's JS, getting rid of the unpaired surrogates is kinda pointless","msgtype":"m.text"},"ts":1400251397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk (or anyone): what decides whether an API wants ScalarValueString? It seems to be something to do with URLs?","msgtype":"m.text"},"ts":1400258364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"never heard of it","msgtype":"m.text"},"ts":1400258549000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sounds like something annevk made up","msgtype":"m.text"},"ts":1400258616000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since he's the only person that uses \"Scalar Value\" to mean something related to unicode","msgtype":"m.text"},"ts":1400258636000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i use \"scalar value\" in the parts of the spec that interface with Unicode...","msgtype":"m.text"},"ts":1400258695000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No, you use \"Unicode scalar value\" and define a synonym","msgtype":"m.text"},"ts":1400258955000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's what i mean","msgtype":"m.text"},"ts":1400258963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Your only use of \"scalar value\" is in the normal meaning","msgtype":"m.text"},"ts":1400258982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i basically do \"import scalar value as...\" :-)","msgtype":"m.text"},"ts":1400258982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh anne uses it for a non-unicode meaning?","msgtype":"m.text"},"ts":1400258993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, annevk uses \"scalar value\" for \"unicode scalar value\"","msgtype":"m.text"},"ts":1400259020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so his use is the normal meaning too","msgtype":"m.text"},"ts":1400259072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by \"normal meaning\" I mean \"unrelated to unicode\"","msgtype":"m.text"},"ts":1400259078000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you just quoted the part of the spec where i use it in the unicode sense :-)","msgtype":"m.text"},"ts":1400259115000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The only use of \"scalar value\" in HTML is \"The meter element also does not represent a scalar value of arbitrary range\"","msgtype":"m.text"},"ts":1400259117000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm confused","msgtype":"m.text"},"ts":1400259117000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus the two uses i just mentioned, where i'm interfacing with the unicode spec","msgtype":"m.text"},"ts":1400259132000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, that's *unicode* scalar value","msgtype":"m.text"},"ts":1400259143000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"unicode scalar value\" contains \"scalar value\"...","msgtype":"m.text"},"ts":1400259177000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this conversation is making my head hurt","msgtype":"m.text"},"ts":1400259184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't see why it's confusing","msgtype":"m.text"},"ts":1400259313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well part of it is i've not yet woken up :-)","msgtype":"m.text"},"ts":1400259329000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"There are two distinct terms; \"scalar value\" and \"unicode scalar value\"","msgtype":"m.text"},"ts":1400259339000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"to me, \"unicode scalar value\" contains the term \"scalar value\", and both contain the term \"scalar\".","msgtype":"m.text"},"ts":1400259367000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1400259994000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"jgraham: those might seem distinct at the markup level, but in English it is just as Hixie says","msgtype":"m.text"},"ts":1400260679000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"It really isn't","msgtype":"m.text"},"ts":1400260787000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"though reading the scrollback it does seem like if you mean a special unicode concept, you should either use the word Unicode or state up front that you're going to be omitting it from the term for brevity","msgtype":"m.text"},"ts":1400260796000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"They are different compound nouns","msgtype":"m.text"},"ts":1400260807000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ScalarValueString is the new name for [EnsureUTF16] DOMString apparently","msgtype":"m.text"},"ts":1400261946000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: Hi. There is a bug in acknowledgements section.","msgtype":"m.text"},"ts":1400263007000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"... Alexey Feldgendler, &Acy;&lcy;&iecy;&kcy;&scy;&iecy;&jcy; &Pcy;&rcy;&ocy;&scy;&kcy;&ucy;&rcy;&yacy;&kcy;&ocy;&vcy; (Alexey Proskuryakov), Alexis Deveria,...","msgtype":"m.text"},"ts":1400263038000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: ?","msgtype":"m.text"},"ts":1400263102000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ap: Why there are entities instead of characters?","msgtype":"m.text"},"ts":1400263147000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: oh. that I don't know or care about - it looks correct in a browser :)","msgtype":"m.text"},"ts":1400263205000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/acknowledgments.html#acknowledgments","msgtype":"m.text"},"ts":1400263234000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"ap: Hmm... Perhaps mobile browser is buggy... Wait.","msgtype":"m.text"},"ts":1400263285000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"No. The same bug.","msgtype":"m.text"},"ts":1400263322000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"The problem is bacause the ampersand was escaped as &amp;. Double escaping problem.","msgtype":"m.text"},"ts":1400263403000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: I see now. It's correct on http://www.whatwg.org/specs/web-apps/current-work/, but yes, double escaping in acknowledgments.html","msgtype":"m.text"},"ts":1400263476000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1400263502000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"much appreciated (hopefully Hixie will see and fix this) :)","msgtype":"m.text"},"ts":1400263510000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"I have filed a bug.","msgtype":"m.text"},"ts":1400263621000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh, ap: yeah, known bug with the multipage splitter. I'm slowly working on revamping my pipeline which will fix this.","msgtype":"m.text"},"ts":1400269400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" Hixie: the page splitter double escapes?","msgtype":"m.text"},"ts":1400269726000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"the page splitter has some parsing/serialising bugs","msgtype":"m.text"},"ts":1400269747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now the pipeline isn't using a modern HTML parser throughout, which has all kinds of weird bugs","msgtype":"m.text"},"ts":1400269778000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i have a suggestion for a test for the html test suite, where do i put it?","msgtype":"m.text"},"ts":1400270603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3026","msgtype":"m.text"},"ts":1400270605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: A suggestion for a test rather than a test?","msgtype":"m.text"},"ts":1400270623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well i haven't made it use the complicated harness stuff","msgtype":"m.text"},"ts":1400270633000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: https://github.com/w3c/web-platform-tests/issues","msgtype":"m.text"},"ts":1400270641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1400270647000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: feel free to assign to me","msgtype":"m.text"},"ts":1400270659000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Well the way it's written it would have to be a reftest, but I guess you could fix that","msgtype":"m.text"},"ts":1400270706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no idea how to assign the bug","msgtype":"m.text"},"ts":1400270720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/issues/993","msgtype":"m.text"},"ts":1400270722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, has there been any movement on providing a \"directory\" API to go with the File API?","msgtype":"m.text"},"ts":1400270770000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You might not be allowed to assign the bug because github is strange","msgtype":"m.text"},"ts":1400270773000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway, I did it","msgtype":"m.text"},"ts":1400270779000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"github--","msgtype":"m.text"},"ts":1400270812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: the \"new\" filesystem API seems to be directory based","msgtype":"m.text"},"ts":1400272173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am not sure how I feel about that; most native FS APIs I have used are just plain filename based, with e.g. a directory listing API that accepts a path, but no first-class realization of directories","msgtype":"m.text"},"ts":1400272215000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how much buy-in does it have?","msgtype":"m.text"},"ts":1400272546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hard to say, but from what I've seen it has tentative buy-in from Mozilla and Google? Not quite finished yet though so I imagine they're taking wait-and-see positions...","msgtype":"m.text"},"ts":1400273442000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: wait who's speccing it if not a browser vendor?","msgtype":"m.text"},"ts":1400273532000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: looks like Mozilla. I probably shouldn't be trying to summarize something I've only half paid attention to...","msgtype":"m.text"},"ts":1400273579000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400273591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so someone once complained of the spec, \"can't find html5 counterpart of many html 4.01 specifications\"","msgtype":"m.text"},"ts":1400275454000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder what they meant","msgtype":"m.text"},"ts":1400275457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it may be *harder* to find","msgtype":"m.text"},"ts":1400275608000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pretty meaningless without specifying \"many\"","msgtype":"m.text"},"ts":1400275653000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"some other feedback: \"information is there but in planty so you end up reading all night when you need just few lines\"","msgtype":"m.text"},"ts":1400275982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sounds about right","msgtype":"m.text"},"ts":1400275986000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also i love the people who ask for a way to jump back to the top dearly","msgtype":"m.text"},"ts":1400276188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but darlings","msgtype":"m.text"},"ts":1400276190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"learn about the \"home\" key","msgtype":"m.text"},"ts":1400276193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"please","msgtype":"m.text"},"ts":1400276194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: you any idea how we could adjust the spec to address things like \"should be easier to check questions such as can a p tag contain a div\" ?","msgtype":"m.text"},"ts":1400276261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Interesting, yeah, I've found myself asking that question a lot","msgtype":"m.text"},"ts":1400276493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in developers edition you can follow links pretty easily","msgtype":"m.text"},"ts":1400276504000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for content models","msgtype":"m.text"},"ts":1400276508000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nearly all the restrictions about what tags can contain what other tags or not were some of the dumbest things to put into HTML","msgtype":"m.text"},"ts":1400276520000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"did nothing but confuse people","msgtype":"m.text"},"ts":1400276526000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so the more we can get rid of those, the better","msgtype":"m.text"},"ts":1400276548000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"p is a great example of wrongness","msgtype":"m.text"},"ts":1400276563000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"i dunno about that","msgtype":"m.text"},"ts":1400276673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the restrictions aren't really restrictions, they're just cases that make no sense and are likely an indication of an error","msgtype":"m.text"},"ts":1400276689000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. putting an ordered list in an <h1> is very unlikely to be what the author meant, and so it's helpful if we can flag that","msgtype":"m.text"},"ts":1400276722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: is it not easy to follow the links on the big version of the spec?","msgtype":"m.text"},"ts":1400276745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: where it needs to be put into something that does not expect unpaired surrogates","msgtype":"m.text"},"ts":1400277491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: URL and Encoding are such layers","msgtype":"m.text"},"ts":1400277505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pokes at the style sheet some more","msgtype":"m.emote"},"ts":1400278787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tried to add more White Space.","msgtype":"m.text"},"ts":1400278795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is there any standard regarding getting the amount of memory JS consumes in a web page? I'm using memory.performance in Chrome and I was wondering if there is anything I should look at in terms of standards","msgtype":"m.text"},"ts":1400279670000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: what kind of standards?","msgtype":"m.text"},"ts":1400280690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"benjamingr: (the answer is probably \"no\")","msgtype":"m.text"},"ts":1400280698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"benjamingr: like, requirements on how much a browser should use for a given page?","msgtype":"m.text"},"ts":1400280715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:  as in, be able to get the amount of available memory for the page in the browser, or a vague indication of it","msgtype":"m.text"},"ts":1400281060000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"even the browser probably doesn't know that","msgtype":"m.text"},"ts":1400281081000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1400281083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe in the web perf wg's set of specs?","msgtype":"m.text"},"ts":1400281110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In chrome, I can get it via the performance.memory object","msgtype":"m.text"},"ts":1400281115000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"i don't know of anything offhand","msgtype":"m.text"},"ts":1400281116000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatwg spec editors: if your spec is too big for browsers to do the transitions i just added without making scrolling painful, add class=big to your <html> element.","msgtype":"m.text"},"ts":1400281968000,"senderName":"Hixie","senderId":"Hixie@irc"}
]