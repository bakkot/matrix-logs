[
{"content":{"body":"I'd render unstable Web IDL with a // unstable that's bold or red or something similar","msgtype":"m.text"},"ts":1476924098000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe blinking ;)","msgtype":"m.text"},"ts":1476924102000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder what a typical performance-sensitive case of UTF-16 to UTF-8 conversion in browsers is like","msgtype":"m.text"},"ts":1476948198000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: does UTF-16 include internal representation of most things?","msgtype":"m.text"},"ts":1476948373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: because then maybe URLs?","msgtype":"m.text"},"ts":1476948466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean other than URLs and form submessions, which apply to other enodings","msgtype":"m.text"},"ts":1476948824000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: yes, UTF-16 is the internal representation of most things","msgtype":"m.text"},"ts":1476948838000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so serializing stuff for XHR POST would do UTF-16 to UTF-8","msgtype":"m.text"},"ts":1476948858000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: added more test cases on https://github.com/w3c/web-platform-tests/pull/3968","msgtype":"m.text"},"ts":1476948890000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"URLs are almost always ASCII","msgtype":"m.text"},"ts":1476948902000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"form submissions in non-Latin scripts are almost entirely non-ASCII","msgtype":"m.text"},"ts":1476948943000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I wonder if there are real-world cases where mixed ASCII/non-ASCII matters for perf for UTF-16 to UTF-8","msgtype":"m.text"},"ts":1476948993000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I have a pretty good idea what metric I should be optimizing for decode","msgtype":"m.text"},"ts":1476949020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also for URL use case encode","msgtype":"m.text"},"ts":1476949030000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: maybe it matters more in a world where more is done in UTF-8 or WTF-8 internally, although maybe then UTF-16 would almost never be used","msgtype":"m.text"},"ts":1476949041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I don't have a good idea what metric I should be optimizing for UTF-16 to UTF-8 encode","msgtype":"m.text"},"ts":1476949068000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in a world where the internal representation is Rust-style guaranteed-valid UTF-8, encode takes zero time. :-)","msgtype":"m.text"},"ts":1476949104000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: sure, but I'm not sure Rust-style can be the end game given JavaScript","msgtype":"m.text"},"ts":1476949142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we might get away with UTF-8 DOM","msgtype":"m.text"},"ts":1476949183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: and break pages that expect to be able to put lone surrogates in the DOM and join them later","msgtype":"m.text"},"ts":1476949210000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: anyway, not sure what there is beyond URLs, forms, saving to disk, and perhaps some very cool OS that uses UTF-8 for strings everywhere","msgtype":"m.text"},"ts":1476949215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: within the JS engine, there needs to be a way to have lone surrogates, sure","msgtype":"m.text"},"ts":1476949231000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: saving to disk is rare and not a worthy perf target","msgtype":"m.text"},"ts":1476949252000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: agreed, was just trying to enumerate targets","msgtype":"m.text"},"ts":1476949266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's XHR POST","msgtype":"m.text"},"ts":1476949285000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: mkay, fetch() and new Blob() too indeed","msgtype":"m.text"},"ts":1476949308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and TextEncoder","msgtype":"m.text"},"ts":1476949309000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"trouble is, I have no clue what the usage patterns for those are","msgtype":"m.text"},"ts":1476949335000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: WebSocket (though that'll disappear in favor of fetch())","msgtype":"m.text"},"ts":1476949344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what I'm looking for is a natural interleave of ASCII and non-ASCII","msgtype":"m.text"},"ts":1476949360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I doubt that with all these I/O things encoding is going to be the bottleneck","msgtype":"m.text"},"ts":1476949373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: we'd be in a pretty nice place then","msgtype":"m.text"},"ts":1476949379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: which is why URLs still seem like the only \"real\" thing, despite a lot of them being ASCII-only","msgtype":"m.text"},"ts":1476949400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FWIW, for decode, I took Wikipedia as the natural interleave of ASCII and non-ASCII","msgtype":"m.text"},"ts":1476949422000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(it also feels a bit morally wrong that we have all these ASCII fast-paths btw)","msgtype":"m.text"},"ts":1476949429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey, that's my change to outperform the competition","msgtype":"m.text"},"ts":1476949459000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*chance","msgtype":"m.text"},"ts":1476949467000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Does the competition have clever parallel decoding/encoding? Although I guess the hardware might not be ubiquitous enough as we discussed earlier","msgtype":"m.text"},"ts":1476949525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not morally wrong for decoders as longs as the bulk of HTML/CSS/JS/URL syntax is ASCII","msgtype":"m.text"},"ts":1476949526000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That's fair, but it's kinda sad that you get a massive drop in performance if you stick an emoji in your JavaScript resource (happens in Chrome)","msgtype":"m.text"},"ts":1476949563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ICU has manually unrolled loops but not manual SIMD at least for single-byte","msgtype":"m.text"},"ts":1476949567000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Windows has something faster than ICU internally","msgtype":"m.text"},"ts":1476949582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Or for that matter, a non-ASCII comment","msgtype":"m.text"},"ts":1476949604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The Rust standard lib optimizes ASCII with ALU word-sized operations when the      right. no explicit SIMD","msgtype":"m.text"},"ts":1476949645000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"the ? right\"?","msgtype":"m.text"},"ts":1476949670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uconv has SIMD for x86 ASCII and ALU word for ARM but for UTF-8 decode only","msgtype":"m.text"},"ts":1476949678000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rniwa: sweet, looking now","msgtype":"m.text"},"ts":1476949709000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks!","msgtype":"m.text"},"ts":1476949716000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Optimizing UTF-8 over others seems totally fair game btw","msgtype":"m.text"},"ts":1476949719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: those were just repeated spaces. I get repeated characters thanks to a build in another VM making this one deal with the keyboard too slowly","msgtype":"m.text"},"ts":1476949731000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh. there was a mord missing","msgtype":"m.text"},"ts":1476949746000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"word","msgtype":"m.text"},"ts":1476949750000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"when the alignment is right\"","msgtype":"m.text"},"ts":1476949768000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1476949782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"glibc is so slow that I doubt is has any fancy optimizations","msgtype":"m.text"},"ts":1476949817000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for IBM mainframes, it has a fast path for ISO-8859-1 to some EBCDIC flavor, but the stuff we use over here in the non-IBM world is slow","msgtype":"m.text"},"ts":1476949894000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"one option is that I test encode with URL and form submission -like workloads","msgtype":"m.text"},"ts":1476950205000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but it really bothers me that I don't know what XHR POST and TextEncoder workloads really look like","msgtype":"m.text"},"ts":1476950233000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"FWIW, I've been designing for form submission work loads to be very slow anyway","msgtype":"m.text"},"ts":1476950263000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"on the theory that form submission perf (for non-UTF-8 targets) doesn't matter much","msgtype":"m.text"},"ts":1476950333000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"interestingly, I discovered that currently in Gecko, EUC-KR *decode* is super-slow","msgtype":"m.text"},"ts":1476950366000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yet, I don't recall anyone noticing it enough to complain","msgtype":"m.text"},"ts":1476950380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: do you happen to know if the emoji slowness in Chrome is about promoting an ISO-8859-1 target buffer to an UTF-16 target buffer or the emoji just messing up memory alignment afterwards?","msgtype":"m.text"},"ts":1476950499000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I believe it's the former","msgtype":"m.text"},"ts":1476950663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(pretty sure)","msgtype":"m.text"},"ts":1476950668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe I should take a look at what goes over the wire in a Gmail mail composition session and see what the wire format is like","msgtype":"m.text"},"ts":1476950985000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm rather surprised that Gmail uses application/x-www-form-urlencoded;charset=utf-8 is its XHR wire format instead of using JSON","msgtype":"m.text"},"ts":1476952566000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/is/as/","msgtype":"m.text"},"ts":1476952610000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: does Gmail still offer the JS-less version? Might be because of that","msgtype":"m.text"},"ts":1476952694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know.","msgtype":"m.text"},"ts":1476953330000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I like yaml, butjson is good too. All is better than the verbosity of XML","msgtype":"m.text"},"ts":1476953372000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"The line noise and the st-udder it gets to you","msgtype":"m.text"},"ts":1476953433000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"OK. mathML 3 is awful, but it is a standard. And in DOM it starts to make sense","msgtype":"m.text"},"ts":1476953530000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"Persona: I am a software developer, educated at University of Oslo","msgtype":"m.text"},"ts":1476953597000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"I have worked for Opera software in the core development team","msgtype":"m.text"},"ts":1476953638000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"younder: oh, when?","msgtype":"m.text"},"ts":1476953680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am now exploring developing MathML, from scratch, in blink","msgtype":"m.text"},"ts":1476953706000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"No faulty WebKit implementation","msgtype":"m.text"},"ts":1476953784000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"annevk, 2000","msgtype":"m.text"},"ts":1476953792000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"younder: for a while or only that year?","msgtype":"m.text"},"ts":1476953863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was there 2005-2012","msgtype":"m.emote"},"ts":1476953878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, 1999-2000","msgtype":"m.text"},"ts":1476953942000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"That was early days still, must have been pretty exciting","msgtype":"m.text"},"ts":1476954006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, It was we were 40 people in Opera back then.","msgtype":"m.text"},"ts":1476954035000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"heh, I was 251 iirc","msgtype":"m.text"},"ts":1476954110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I worked under CSS developer Håkon Lie","msgtype":"m.text"},"ts":1476954418000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"jochen__: so why the setSecurityOrigin() call?","msgtype":"m.text"},"ts":1476955182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: that seems to be the thing that might be upsetting to bz, though you said it wasn't needed if you were same-origin anyway","msgtype":"m.text"},"ts":1476955230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I can also ask in the issue directly if that's preferable","msgtype":"m.text"},"ts":1476955366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Evernote Web seems to have a chatty GWT-based wire protocol","msgtype":"m.text"},"ts":1476958837000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not particularly interesting in terms of encoder performance: bunch of ASCII, then user-supplied content, then bunch of ASCII","msgtype":"m.text"},"ts":1476958865000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Most implementors of the web speak English. (Even if they are not English)","msgtype":"m.text"},"ts":1476962559000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"I am Norwegain...","msgtype":"m.text"},"ts":1476962600000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"like  ,I suppose, annevk","msgtype":"m.text"},"ts":1476962642000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"younder: Dutch","msgtype":"m.text"},"ts":1476964257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry... (Opera, Norway et al)","msgtype":"m.text"},"ts":1476964336000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"Hmm, currently downloading a 100 MiB or so just to amend a PR","msgtype":"m.text"},"ts":1476965538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Must be a more efficient way to do that GitHub","msgtype":"m.text"},"ts":1476965545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"blink does an incredible 50 000 file compile. Drowns any download concers","msgtype":"m.text"},"ts":1476965791000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"1 hr on a 8 core xenon","msgtype":"m.text"},"ts":1476965821000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"Firfox get's none in 11 minutes","msgtype":"m.text"},"ts":1476965861000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"s/none/done/","msgtype":"m.text"},"ts":1476965880000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"annevk, I think back then that was required to make the origin an alias","msgtype":"m.text"},"ts":1476965913000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk, not sure whether that's still a thing?","msgtype":"m.text"},"ts":1476965920000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: alias these days is basically a pointer to the same origin object","msgtype":"m.text"},"ts":1476966343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: however, it's unclear to me what the effect would be if you already have a same-origin check preceding it","msgtype":"m.text"},"ts":1476966372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it can be same origin without being the same origin object still, no?","msgtype":"m.text"},"ts":1476966811000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: yes","msgtype":"m.text"},"ts":1476966863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: though not for opaque origins","msgtype":"m.text"},"ts":1476966870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: but with opaque origins they'd already have to be the same, so aliasing doesn't make sense","msgtype":"m.text"},"ts":1476966889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: ah, I guess it's observable when they are not aliased, then you do window.open(), then you do document.domain on one side and somehow still get access?","msgtype":"m.text"},"ts":1476966984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if they're aliased document.domain would change both origins, if they're not aliased you'd be isolated","msgtype":"m.text"},"ts":1476967024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"isolated\"","msgtype":"m.text"},"ts":1476967031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: you around?","msgtype":"m.text"},"ts":1476968879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: can you check the checkbox in https://github.com/whatwg/url/pull/113 that makes your PR mutable?","msgtype":"m.text"},"ts":1476968894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: done","msgtype":"m.text"},"ts":1476968980000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1476968995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is <script>document.write('<template>')</script> as insane as I think?","msgtype":"m.text"},"ts":1476970715000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No new notifications. \\o/","msgtype":"m.text"},"ts":1476970766000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nox: what's insane about it?","msgtype":"m.text"},"ts":1476970824000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, right","msgtype":"m.text"},"ts":1476970852000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"zcorpan: That everything following that will end up in the template contents I guess?","msgtype":"m.text"},"ts":1476970869000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jochen__: I wonder if that's tested in WPT already, but I guess we'll make sure once we make this change","msgtype":"m.text"},"ts":1476970927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: ok, yeah, but nothing new for <template>; that also happens for e.g. <title> or <plaintext> (the latter can't even be closed)","msgtype":"m.text"},"ts":1476970955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Why can't it be closed? :o","msgtype":"m.text"},"ts":1476970978000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"because it's <plaintext> :-D","msgtype":"m.text"},"ts":1476970991000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's the text/plain of HTTP/0.9","msgtype":"m.text"},"ts":1476971028000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1476971258000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I still have it on my todo list though :-/","msgtype":"m.text"},"ts":1476971267000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"hmm, elements with position:fixed appear somehow buggy during a transition that modifies their parent's transform. both ff+chrome. hard to reduce right now; is this a known thing?","msgtype":"m.text"},"ts":1476972025000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"jochen__: talked a bit with bz, the way he'd like us to proceed is come up with a plan for changes and some number of tests demonstrating they actually match impl and then bring him back into the conversation (he unsubscribed for now, bit of a sensitive topic)","msgtype":"m.text"},"ts":1476974317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: which seems totally reasonable to me","msgtype":"m.text"},"ts":1476974343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: \"(and I know there was discussion with Anne somewhere, but I can't find it at the moment)\" I think we only had one in person","msgtype":"m.text"},"ts":1476974398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: activation behavior name changes look okay? did you have a look at the commit message I proposed?","msgtype":"m.text"},"ts":1476975796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think I'm good with both, but was thinking to wait for you to wake up just in case","msgtype":"m.text"},"ts":1476975817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: (DOM side landed already with review from MikeSmith)","msgtype":"m.text"},"ts":1476975832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm awake and have read all my emails; I think I had a commit message nit, let me page it back in","msgtype":"m.text"},"ts":1476975882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/pull/1925#issuecomment-255052832","msgtype":"m.text"},"ts":1476975904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK yeah, LGTM.","msgtype":"m.text"},"ts":1476975951000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The no-longer-being-conditionally-associated thing is interesting","msgtype":"m.text"},"ts":1476975959000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"On the face of it it's a normative change","msgtype":"m.text"},"ts":1476975966000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But because <input> can never be nested inside <input> it's not","msgtype":"m.text"},"ts":1476975978000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"They can be nested through script, but I don't think that affects anything","msgtype":"m.text"},"ts":1476976029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is, HTML's old \"nearest activatable element\" + conditional association vs. DOM's new walk-until-you-find-activation-behavior could in theory be different, but in practice not","msgtype":"m.text"},"ts":1476976034000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1476976038000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well hmm","msgtype":"m.text"},"ts":1476976065000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<button>text <input disabled> </button>","msgtype":"m.text"},"ts":1476976072000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The conditional association mostly affects other things doing conditional testing on these things","msgtype":"m.text"},"ts":1476976097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://jsbin.com/zimege/edit?html,console,output","msgtype":"m.text"},"ts":1476976100000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess this becomes about hit testing","msgtype":"m.text"},"ts":1476976119000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which UI events talks about in terms of activation behavior https://w3c.github.io/uievents/#event-flow-activation","msgtype":"m.text"},"ts":1476976158000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think this is worth holding up the train for, just interesting","msgtype":"m.text"},"ts":1476976171000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That is something worth looking into indeed","msgtype":"m.text"},"ts":1476976190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So yeah, I guess that should look at things being disabled instead","msgtype":"m.text"},"ts":1476976214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just like click() already does and a number of other things do too","msgtype":"m.text"},"ts":1476976224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think HTML might need to bring back some concept of \"activatable\"","msgtype":"m.text"},"ts":1476976252000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which is roughly \"activation behavior + not disable\"","msgtype":"m.text"},"ts":1476976258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's unfortunate we only noticed that now, since the commit message could have enunciated that more","msgtype":"m.text"},"ts":1476976260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-S","msgtype":"m.text"},"ts":1476976273000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think the spec actually made a change for the better though","msgtype":"m.text"},"ts":1476976445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4594","msgtype":"m.text"},"ts":1476976447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if you comment out child.disabled = true you'll see only the child getting checked","msgtype":"m.text"},"ts":1476976462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but either way it doesn't reach the parent, even though the child was disabled and did not have \"activation behavior\" per the old HTML text (which was therefore wrong)","msgtype":"m.text"},"ts":1476976505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah, nice.","msgtype":"m.text"},"ts":1476976523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I should add a test for that tomorrow","msgtype":"m.text"},"ts":1476976795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hopefully I remember","msgtype":"m.text"},"ts":1476976799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: is the long term plan to keep the registry in the permission spec or are you waiting on partial enums to have each power feature include it in its own spec?","msgtype":"m.text"},"ts":1476977438000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Once we have partial enums, I think we'll have Bikeshed generate an index into the permissions spec, but have each feature spec define its own enum value.","msgtype":"m.text"},"ts":1476977709000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: what do you mean by: \"we'll have Bikeshed generate an index into the permissions spec\"","msgtype":"m.text"},"ts":1476977752000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins has an index element that he's used for CSS, which will let the permissions spec link to all the individual permissions.","msgtype":"m.text"},"ts":1476977857000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: oh. a secret feature? That's awesome.","msgtype":"m.text"},"ts":1476977931000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yep.","msgtype":"m.text"},"ts":1476978249000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Secret because I haven't given it a ton of thought yet. But it's probably ready for primetime.","msgtype":"m.text"},"ts":1476981519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's what's used to generate https://drafts.csswg.org/indexes/ right now.","msgtype":"m.text"},"ts":1476981919000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: also confirmed with <form onsubmit=\"w(1); return false\"><button type=submit>test <input type=checkbox disabled></button><form> that disabled doesn't influence the activatable target","msgtype":"m.text"},"ts":1476983442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it does seem that Firefox does strange hit testing for <button>","msgtype":"m.text"},"ts":1476983451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and basically bypasses any children","msgtype":"m.text"},"ts":1476983461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1476983479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but in Chrome that will not submit the form when you click the checkbox","msgtype":"m.text"},"ts":1476983498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think HTML might have some open issues around <button> already and how it should be handled and I think Firefox has an open bug too with respect to hit testing / activation","msgtype":"m.text"},"ts":1476983529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: anyway, will turn these two examples into tests since I have some time now","msgtype":"m.text"},"ts":1476983545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/w3c/web-platform-tests/pull/4043","msgtype":"m.text"},"ts":1476984390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for the feedback, Domenic!","msgtype":"m.text"},"ts":1476992177000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"https://w3c.github.io/charter-html/group-charter.html","msgtype":"m.text"},"ts":1476995752000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"does this WG have any relationship with WHATWG?","msgtype":"m.text"},"ts":1476995760000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"I'm going to guess the relationship, if one can call it that, is specified in the section labelled \"External Groups\"","msgtype":"m.text"},"ts":1476996022000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"KiChjang: what terinjokes said","msgtype":"m.text"},"ts":1476996198000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it seems unnecessary for another WG to work on the same things as whatwg?","msgtype":"m.text"},"ts":1476996267000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: sometimes the W3C likes to copy and paste our work and put their logo on it for various reasons. It sucks and is a waste of a ton of peoples' time, but is outside our control.","msgtype":"m.text"},"ts":1476996690000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is there no copyright/patent laws preventing that from happening?","msgtype":"m.text"},"ts":1476996749000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"copyleft*","msgtype":"m.text"},"ts":1476996754000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"Our specs are licensed under liberal licenses","msgtype":"m.text"},"ts":1476996774000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"KiChjang: the main reason why those involved in the WHATWG don't kick up an even bigger fuss is the patent protection provided by W3C RECs","msgtype":"m.text"},"ts":1476996827000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/www-archive/2014Apr/0034.html is relevant","msgtype":"m.text"},"ts":1476996840000,"senderName":"Domenic","senderId":"Domenic@irc"}
]