[
{"content":{"body":"Are there static versions of the WHAWG specs that can be used for referencing? So a version of the spec to a specific commit that can be referenced and viewed in the browser?","msgtype":"m.text"},"ts":1379497109000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: https://github.com/whatwg/html-mirror - you could use rawgithub.com on a specific commit of complete.html. no multipage though afaik","msgtype":"m.text"},"ts":1379497559000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so no hosted version?","msgtype":"m.text"},"ts":1379497625000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zcorpan: just the source itself is in a repository","msgtype":"m.text"},"ts":1379497649000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: https://rawgithub.com/whatwg/html-mirror/f0225ebc726f806502bf85905b40be7f9d4e1311/complete.html","msgtype":"m.text"},"ts":1379497690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks. Is there a similar option for the other specs like URL or Fetch?","msgtype":"m.text"},"ts":1379497747000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"http: instead of https: to get the style sheet to work","msgtype":"m.text"},"ts":1379497753000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"krit: yeah they are in github so the same trick should work for those","msgtype":"m.text"},"ts":1379497776000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why do you want to point to a specific commit?","msgtype":"m.text"},"ts":1379497838000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok, thanks will take a look","msgtype":"m.text"},"ts":1379497843000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zcorpan: The specification text changes from time to time as do some definitions. For quoting it is desirable to reference s specific version.","msgtype":"m.text"},"ts":1379497893000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zcorpan: This can get more important if the W3C has an official statement on normative references to WHAT","msgtype":"m.text"},"ts":1379497923000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"WG specs","msgtype":"m.text"},"ts":1379497927000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"i mean in what context do you want to put the reference?","msgtype":"m.text"},"ts":1379497961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: in a context of another specification that references a WHATWG spec","msgtype":"m.text"},"ts":1379498030000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: ok. i'm not sure that's a good idea. but my experience with discussing this in the past hasn't been productive so i'll leave it at that :-)","msgtype":"m.text"},"ts":1379498115000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wont:","msgtype":"m.text"},"ts":1379498535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That isn't a good idea","msgtype":"m.text"},"ts":1379498539000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Please don't do it","msgtype":"m.text"},"ts":1379498543000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It just means that your reference won't match reality","msgtype":"m.text"},"ts":1379498553000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"+'","msgtype":"m.text"},"ts":1379498557000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"marcosc: there still seems to be some weird issues with specref. Not sure what gives but the latest release crashes when restarting the application.","msgtype":"m.text"},"ts":1379503215000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"marcosc: could there possibly be a file encoding issue (https://github.com/tobie/specref/commit/b30cb27) that wasn't rolled back properly?","msgtype":"m.text"},"ts":1379503308000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"zcorpan_: So based on some discussion last night in #testing, I have the idea of making most tests in testharness.js not timeout until the overall harness times out. This means that you wouldn't get the pattern of doing setup({timeout:10100}); async_test(\"foo\", {timeout:10000})","msgtype":"m.text"},"ts":1379504231000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"People would just set timeouts for specific tests in cases where the tests are run in sequence","msgtype":"m.text"},"ts":1379504264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So that the next test doesn't start before the previous one finished","msgtype":"m.text"},"ts":1379504281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does that sound at all sensible?","msgtype":"m.text"},"ts":1379504310000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so by default, tests don't have a timeout, but get a TIMEOUT result if the harness times out?","msgtype":"m.text"},"ts":1379504388000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and you can still set specific timeout for certain tests in ms?","msgtype":"m.text"},"ts":1379504413000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1379504421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sounds OK","msgtype":"m.text"},"ts":1379504438000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Makes it harder to integreate with automation since you really want the harness to time out if possible, but that's OK, I think","msgtype":"m.text"},"ts":1379504483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s//don't/ ?","msgtype":"m.text"},"ts":1379504515000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"No, I mean you can't just kill the whole browser at the timeout because then you will get 0 results if any test timed out","msgtype":"m.text"},"ts":1379504553000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1379504586000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"so can't you report the result for each test when it's ready?","msgtype":"m.text"},"ts":1379504779000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I could do that I guess","msgtype":"m.text"},"ts":1379504867000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"YOu still wouldn't get any result at all for the tests that timed out though","msgtype":"m.text"},"ts":1379504881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"right. but you can signal that the test exists when it is created, and consider it to be a TIMEOUT if you don't get anything, maybe?","msgtype":"m.text"},"ts":1379504937000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Yeah. It makes the wire protocol pretty verbose though","msgtype":"m.text"},"ts":1379504957000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1379504971000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"It's probably easier just to add a timeout in js","msgtype":"m.text"},"ts":1379504991000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"which will cause all the results to be reported","msgtype":"m.text"},"ts":1379505013000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(this is the setup I originally had, but I moved to the simpler system of just having a single timeout that dealt with all harness timed out / browser hung / etc. scenarios)","msgtype":"m.text"},"ts":1379505081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tobie_: looks like the encoding broke","msgtype":"m.text"},"ts":1379509357000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Thought so.","msgtype":"m.text"},"ts":1379509398000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"No idea how to fix that (outside of a forced update).","msgtype":"m.text"},"ts":1379509418000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"tobie_: did you merge in Addison's stuff?","msgtype":"m.text"},"ts":1379509439000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I didn't touch anything.","msgtype":"m.text"},"ts":1379509454000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"hmm... ok, looking","msgtype":"m.text"},"ts":1379509478000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Seems that your rollback didn't fix everything.","msgtype":"m.text"},"ts":1379509498000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"stupid rollback :)","msgtype":"m.text"},"ts":1379509510000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1379509517000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"Stupid encoding.","msgtype":"m.text"},"ts":1379509521000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"heh, strange because Travis said it was all cool","msgtype":"m.text"},"ts":1379509530000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"tobie_: I think I didn't roll back far enough","msgtype":"m.text"},"ts":1379509567000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I needed to go one more","msgtype":"m.text"},"ts":1379509574000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"It is possible that the test suite doesn't catch these encoding issues.","msgtype":"m.text"},"ts":1379509603000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"(if encoding issues are the problem.)","msgtype":"m.text"},"ts":1379509619000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"Wait, what? Service Workers? Is this happening in secret again?","msgtype":"m.text"},"ts":1379510269000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: nah","msgtype":"m.text"},"ts":1379510311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: stuff just got renamed","msgtype":"m.text"},"ts":1379510318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where?","msgtype":"m.text"},"ts":1379510325000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: same place, https://github.com/slightlyoff/ServiceWorker/","msgtype":"m.text"},"ts":1379510339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: (old URL https://github.com/slightlyoff/NavigationController/ redirects there)","msgtype":"m.text"},"ts":1379510353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well that's clearly a different place","msgtype":"m.text"},"ts":1379510357000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1379510415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Would be nice if all this github stuff didn't take whatwg/webapps entirely out of the loop","msgtype":"m.text"},"ts":1379510437000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1379511770000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Encoding question ... we have a JSON file on GH and a pull request we got seems to have changed the encoding. To prevent that from happening, would it be a good idea to at a BOM to the file?","msgtype":"m.text"},"ts":1379512124000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"See: https://github.com/tobie/specref/commit/b30cb27","msgtype":"m.text"},"ts":1379512268000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Aren't JSON files utf8 by definition?","msgtype":"m.text"},"ts":1379512329000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Someone might have given you non-utf8","msgtype":"m.text"},"ts":1379512342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"marcosc: wouldn't the best thing be to just not accept the pull request, and ask the committer to fix it?","msgtype":"m.text"},"ts":1379512357000,"senderName":"hasather_","senderId":"hasather_@irc"},
{"content":{"body":"But then you don't have a JSON file...","msgtype":"m.text"},"ts":1379512361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"marcosc: who know what broken tool is responsible. I don’t think a BOM would help much","msgtype":"m.text"},"ts":1379512362000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Right, just reject the PR","msgtype":"m.text"},"ts":1379512374000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"JSON text SHALL be encoded in Unicode. The default encoding is UTF-8\"","msgtype":"m.text"},"ts":1379512378000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(What counts as \"encoded in Unicode\"?)","msgtype":"m.text"},"ts":1379512395000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1379512428000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unicode isn't an encoding","msgtype":"m.text"},"ts":1379512435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hasather_: the problem is that we didn't spot the problem until after","msgtype":"m.text"},"ts":1379512435000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Crockford is an idiot","msgtype":"m.text"},"ts":1379512439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I can encode into Unicode, as an abstract model, and then serialize it as ISO-8859-1?)","msgtype":"m.text"},"ts":1379512443000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"News at 11","msgtype":"m.text"},"ts":1379512444000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1379512458000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"\"JSON may be represented using UTF-8, UTF-16, or UTF-32.\"","msgtype":"m.text"},"ts":1379512459000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"krit: yo","msgtype":"m.text"},"ts":1379512475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"UTF-32? Why not UTF-9?","msgtype":"m.text"},"ts":1379512487000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: hi. The URL spec does not handle data URL's yet. Is that intended?","msgtype":"m.text"},"ts":1379512498000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"SimonSapin: That's different to what it says above!","msgtype":"m.text"},"ts":1379512505000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: Bloody hell.","msgtype":"m.text"},"ts":1379512509000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(isn't the guy that made the PR in the i18n WG?)","msgtype":"m.text"},"ts":1379512514000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"SimonSapin: I was thinking that if we get a PR with the missing BOM, at least we could easily spot that","msgtype":"m.text"},"ts":1379512527000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"(if you are American and don't understand irony, that is is)","msgtype":"m.text"},"ts":1379512527000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*it","msgtype":"m.text"},"ts":1379512530000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan_: so I learned yesterday that UTF-9 and UTF-18 are not that crazy: http://en.wikipedia.org/wiki/36-bit","msgtype":"m.text"},"ts":1379512540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if you are American and do understand irony, good for you)","msgtype":"m.text"},"ts":1379512545000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"krit: it does","msgtype":"m.text"},"ts":1379512568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(if you are some other nationality and don't understand irony, sorry I can't help)","msgtype":"m.text"},"ts":1379512568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"marcosc: wasn't it easy enough to spot that something was broken there? :)","msgtype":"m.text"},"ts":1379512572000,"senderName":"hasather_","senderId":"hasather_@irc"},
{"content":{"body":"hasather: no, not when we got the request","msgtype":"m.text"},"ts":1379512594000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"it looked fine :(","msgtype":"m.text"},"ts":1379512598000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: given that some tool is broken enough to do this in the first place, can you rely on it removing the BOM?","msgtype":"m.text"},"ts":1379512599000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: so data is not a scheme?","msgtype":"m.text"},"ts":1379512602000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"\"data\"","msgtype":"m.text"},"ts":1379512607000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"SimonSapin: yeah you are probably right","msgtype":"m.text"},"ts":1379512611000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"krit: I have http://simonsapin.github.io/data-urls/ , but it’s more a collection of issues that anything","msgtype":"m.text"},"ts":1379512645000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"than*","msgtype":"m.text"},"ts":1379512651000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hasather: see here: https://github.com/tobie/specref/pull/44/files","msgtype":"m.text"},"ts":1379512665000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"krit: it's a scheme, sure","msgtype":"m.text"},"ts":1379512674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hasather: that's the original PR - as you can see, it all looks good","msgtype":"m.text"},"ts":1379512677000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"but once it merged, it all went bad","msgtype":"m.text"},"ts":1379512685000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"krit: it's not a relative scheme if that's what you mean","msgtype":"m.text"},"ts":1379512694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, that explains","msgtype":"m.text"},"ts":1379512708000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"it","msgtype":"m.text"},"ts":1379512709000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"SimonSapin: still a bit red :)","msgtype":"m.text"},"ts":1379512718000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: as soon as you poke in the corner cases, nobody knows what should really happen.","msgtype":"m.text"},"ts":1379512772000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: non-deterministic specs!","msgtype":"m.text"},"ts":1379512796000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"marcosc: Uh, no the original PR looks broken","msgtype":"m.text"},"ts":1379512797000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/addison/specref/commit/b30cb27ef8eb6356a77f96ceb998d6d4b5386d98","msgtype":"m.text"},"ts":1379512804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"krit: just plain boring undefined","msgtype":"m.text"},"ts":1379512820000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"jgraham: strange, because what I reviewed was  https://github.com/tobie/specref/pull/44/files","msgtype":"m.text"},"ts":1379512850000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: There seem to be two commits","msgtype":"m.text"},"ts":1379512895000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One that introduces the error and one that reverts it","msgtype":"m.text"},"ts":1379512906000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, that's why I didn't see it","msgtype":"m.text"},"ts":1379512918000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Although it is pretty fricking hard to tell because github is a pile of shit","msgtype":"m.text"},"ts":1379512934000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"... coming to a sad realization too :(","msgtype":"m.text"},"ts":1379512953000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Sometimes I think I should start my own company doing something technically interesting just so that I can have a blog, which would then attract a large readership, finally allowing me to post \"github considered slightly crappy\" in front of a massive audience, whereupon I would disband the whole enterprise and go back to quietly testing the web","msgtype":"m.text"},"ts":1379513086000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that’s some yak shaving","msgtype":"m.text"},"ts":1379513141000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Domenic_: https://gist.github.com/annevk/6609620","msgtype":"m.text"},"ts":1379513162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just to make sure. if the URL is \"#fragment\", than the URL does not have a scheme?","msgtype":"m.text"},"ts":1379513275000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: https://gist.github.com/domenic/0c47ae300608341f3d7f (but that was before the { done, value } idea)","msgtype":"m.text"},"ts":1379513295000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"krit: it does after you parse it, or it turns into failure if there's no base URL...","msgtype":"m.text"},"ts":1379513308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah ok. So after parsing you have an absolute path with a scheme \"http\" or \"frp\" for example","msgtype":"m.text"},"ts":1379513354000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ftp","msgtype":"m.text"},"ts":1379513364000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"(just to name two :P was not meant to be exclusive)","msgtype":"m.text"},"ts":1379513388000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"depends on the base URL","msgtype":"m.text"},"ts":1379513464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: there's absolutely a plan to bring this all back to webapps","msgtype":"m.text"},"ts":1379513552000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"jgraham: the goal isn't to sideline the standards process, but to build consensus slowly among people who are heavily invested in the area","msgtype":"m.text"},"ts":1379513575000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"GitHub is *way* more open, from a developers on the ground perspective, than these mailing lists.","msgtype":"m.text"},"ts":1379513676000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"This is #1 piece of feedback from developers when I give talks on extensible web etc.","msgtype":"m.text"},"ts":1379513697000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: the spec explains that a URL is either a abs or rel URL which can be followed by a fragemnt. rel URL is a URL w/o scheme but must be relative to base URL… base URL is an absolute URL with relative scheme","msgtype":"m.text"},"ts":1379513831000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: sure, at the writing level","msgtype":"m.text"},"ts":1379513854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: at the spec level you only deal with parsed URLs","msgtype":"m.text"},"ts":1379513862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so how do you get to the base URL","msgtype":"m.text"},"ts":1379513864000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: … from a relative URL","msgtype":"m.text"},"ts":1379513885000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you can parse with a null base (although maybe that ought to be about:blank as a base URL always...)","msgtype":"m.text"},"ts":1379513892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: not sure I parse that question","msgtype":"m.text"},"ts":1379513921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the term relative URL is explained with the relation to the base URL","msgtype":"m.text"},"ts":1379513950000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and it is not clear to me how the base URL looks like for a base URL from resding the first paragraph","msgtype":"m.text"},"ts":1379513975000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: (I am at section 5)","msgtype":"m.text"},"ts":1379513990000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: an introducing example how a URL does look like could help as well","msgtype":"m.text"},"ts":1379514026000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: the base URL is derived from the URL of the resource, or e.g. <base>","msgtype":"m.text"},"ts":1379514028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I took this as reference :P http://en.wikipedia.org/wiki/URI_scheme#Examples","msgtype":"m.text"},"ts":1379514043000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah, at some point we should include that I suppose","msgtype":"m.text"},"ts":1379514066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"once there's some implementations","msgtype":"m.text"},"ts":1379514072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what is a <base>? according to the spec: optionally with a base URL base","msgtype":"m.text"},"ts":1379514121000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: which doesn't explain it :)","msgtype":"m.text"},"ts":1379514129000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: as you noticed, I am no expert at all on URL and try to understand it from just reading the spec","msgtype":"m.text"},"ts":1379514171000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: <base> is an HTML element","msgtype":"m.text"},"ts":1379514191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you mean like <img>","msgtype":"m.text"},"ts":1379514208000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes","msgtype":"m.text"},"ts":1379514216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: if there's no base URL, parsing \"/test.html\" will return failure","msgtype":"m.text"},"ts":1379514264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: also if the base URL does not have a relative scheme","msgtype":"m.text"},"ts":1379514309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really see how github is \"more open\". I could perhaps buy \"more familiar\".","msgtype":"m.text"},"ts":1379514331000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not more open if you use private gists, Domenic_ ;)","msgtype":"m.text"},"ts":1379514385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"the base URL is derived from the URL of the resource, or e.g. <base>\" so if <img> is from file://test.html, then base URL is derived from  file://test.html","msgtype":"m.text"},"ts":1379514392000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no, <base> is an element to override the base URL of a resource","msgtype":"m.text"},"ts":1379514410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how does <img src=\"image.png\"> override the base URL if <img> is in the document at file://test.html?","msgtype":"m.text"},"ts":1379514524000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: <img> doesn't override the base URL","msgtype":"m.text"},"ts":1379514535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ancil: you said <base> does","msgtype":"m.text"},"ts":1379514545000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: <base> does","msgtype":"m.text"},"ts":1379514547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and <img> is <base>","msgtype":"m.text"},"ts":1379514556000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no, <img> is an element, just like <base> is","msgtype":"m.text"},"ts":1379514563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh you really mean there is a <base> element?","msgtype":"m.text"},"ts":1379514585000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: dude","msgtype":"m.text"},"ts":1379514592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-base-element","msgtype":"m.text"},"ts":1379514607000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"is obviously confused","msgtype":"m.emote"},"ts":1379514612000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hmm. data--=\"\" seems borked in the dataset api","msgtype":"m.text"},"ts":1379514673000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hah nice zcorpan_","msgtype":"m.text"},"ts":1379514692000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zcorpan_: should be dataset[\"-\"]","msgtype":"m.text"},"ts":1379514767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. but setting \"-\" throws","msgtype":"m.text"},"ts":1379514797000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: no","msgtype":"m.text"},"ts":1379514820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, right","msgtype":"m.text"},"ts":1379514840000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: ok, got the purpose of <base> :P however, this is HTML specific. So say the example does not have a base element… then the document URL of <img> is used for base URL ?","msgtype":"m.text"},"ts":1379514841000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes","msgtype":"m.text"},"ts":1379514854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: <base> also affects SVG, just use the correct namespace","msgtype":"m.text"},"ts":1379514875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, thanks","msgtype":"m.text"},"ts":1379514905000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"wonder if svg should allow <base> in its content model","msgtype":"m.text"},"ts":1379515213000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: <base> is terrible, let's not encourage it","msgtype":"m.text"},"ts":1379515433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: But we don't have type checking, and it's not likely to happen soon, and when it does it will be completely opt-in, so you should stop trying to design things around the assumption of \"this is how a type-checked language would do it\".","msgtype":"m.text"},"ts":1379524280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: There's no reason video can't be in an <img>, and I've suggested that very thing in blink-dev. We're waiting for it to be technically *possible* on our end before seriously considering it. (Right now, spinning up videos is unnecessarily expensive. Doing lots of small git-style videos would kill your page at the moment. We're fixing this.)","msgtype":"m.text"},"ts":1379524411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: But yeah, basically exposing a Vine-like interface for video-in-<img> would be wonderful.","msgtype":"m.text"},"ts":1379524427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"autoplaying and muted, with the only control being an unmute button","msgtype":"m.text"},"ts":1379524448000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wow, we have very different visions of utopia","msgtype":"m.text"},"ts":1379524648000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yeah, you hate gifs, while I enjoy tumblr.","msgtype":"m.text"},"ts":1379524695000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Presumably it's related to you being crotchety. ^_^","msgtype":"m.text"},"ts":1379524709000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Yeah, although I'm not convinced what problems it solves that <video> with autoplay & no controls doesn't","msgtype":"m.text"},"ts":1379526636000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"seems better to treat gifs in img as a weird backwards-compatibility thing, and instead optimize <video> to be lighter-weight, but as for how practical or annoying that is to actually implement I don't know","msgtype":"m.text"},"ts":1379526912000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(rather than having two ways to do the same thing, and making authors have to pick between \"features and expensive\" or \"no features and cheap\")","msgtype":"m.text"},"ts":1379527063000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2527 In anything but webkit/blink, could someone try click-dragging some text down to try to force the div to scroll, then try it again starting from the input?","msgtype":"m.text"},"ts":1379527218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no scrolling","msgtype":"m.text"},"ts":1379527387000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(in FF, IE9)","msgtype":"m.text"},"ts":1379527396000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Okay, cool.","msgtype":"m.text"},"ts":1379527403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"chrome scrolls if you start the drag from inside the <input>, which seems like a bug.","msgtype":"m.text"},"ts":1379527416000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: agree about the gif thing. Although is there a good reason to support video content as CSS imagery?","msgtype":"m.text"},"ts":1379529812000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"matjas: yt?","msgtype":"m.text"},"ts":1379530432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: are you saying https://bugs.ecmascript.org/show_bug.cgi?id=1802 is invalid?","msgtype":"m.text"},"ts":1379530643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: no scrolling in Presto either","msgtype":"m.text"},"ts":1379530809000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"fwiw","msgtype":"m.text"},"ts":1379530812000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Getting people to comment on spec is hard. Still having trouble getting implementors/consumers of MutationObservers to make any comments about them good or bad. Most just acknowledgement of their use/implementation or ask if it causes a bug in their code.","msgtype":"m.text"},"ts":1379531102000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"bradleymeck: reviewing is hard","msgtype":"m.text"},"ts":1379531235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FWIW: http://wiki.ecmascript.org/doku.php?id=strawman:embracing_workers","msgtype":"m.text"},"ts":1379531269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all of the spec is hard. I gain more respect about specification issues the more I try to talk to people","msgtype":"m.text"},"ts":1379531272000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"[[transfer]] makes me zoo happy","msgtype":"m.text"},"ts":1379531305000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"soo*","msgtype":"m.text"},"ts":1379531309000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"it's non-extensible though","msgtype":"m.text"},"ts":1379531335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mostly much needed refactoring","msgtype":"m.text"},"ts":1379531344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"its a proposal for now, just talk about it is encouraging :). I actually had a twitter comment about this topic the other day","msgtype":"m.text"},"ts":1379531389000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"I know it's a proposal, I just wrote it","msgtype":"m.text"},"ts":1379531423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gah respec","msgtype":"m.text"},"ts":1379531488000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"annevk: Then I forgot to thank you. So thanks on that and on my issues :)","msgtype":"m.text"},"ts":1379531561000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jamesr__: What about respec?","msgtype":"m.text"},"ts":1379532742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gah","msgtype":"m.text"},"ts":1379532761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think he was pretty clear on that point","msgtype":"m.text"},"ts":1379532764000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yeah, I was wondering *why* he was gah'ing.","msgtype":"m.text"},"ts":1379534299000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"respec messes up IDL and method definitions generally","msgtype":"m.text"},"ts":1379534461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"very much old-style, it's configurable, but nobody does that","msgtype":"m.text"},"ts":1379534477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, it's all kinds of weird.","msgtype":"m.text"},"ts":1379534597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"happy with what me and plinss have come up with for Bikeshed.","msgtype":"m.text"},"ts":1379534612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A resilient parser (so it won't die as new features are added to IDL) that we just use to decorate <pre class=idl> contents with <dfn>/<a> markup automatically.","msgtype":"m.text"},"ts":1379534641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: because of respec. duh","msgtype":"m.text"},"ts":1379534654000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Thanks. So helpful. ^_^","msgtype":"m.text"},"ts":1379534664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm helping, i'm helping","msgtype":"m.text"},"ts":1379534666000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: Anolis-style compatible?","msgtype":"m.text"},"ts":1379534668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: is Bikeshed open source?","msgtype":"m.text"},"ts":1379534689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I dunno what Anolis-style is, because it's not documented in the current docs.  But I do plan on eventually adding an Anolis compat-mode.","msgtype":"m.text"},"ts":1379534719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yes, it's in my github: http://github.com/tabatkins/bikeshed","msgtype":"m.text"},"ts":1379534730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interface <dfn>trololol</dfn> { boolean attribute <span title=dom-trololol-member>member</span>; };","msgtype":"m.text"},"ts":1379534763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Someone actually documenting Anolis' features would be greatly appreciated, and would bring the compat-switch closer.","msgtype":"m.text"},"ts":1379534770000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why mark anything up?  Bikeshed just needs plain IDL text, and adds all the markup automatically for you.","msgtype":"m.text"},"ts":1379534798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it is marked up in that style, yes.","msgtype":"m.text"},"ts":1379534807000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm just illustrating what we do now :)","msgtype":"m.text"},"ts":1379534815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css-font-load-events/#FontFaceSet-interface shows off the current idl stuff.","msgtype":"m.text"},"ts":1379534982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"From this source: http://dev.w3.org/csswg/css-font-load-events/Overview.src.html#FontFaceSet-interface","msgtype":"m.text"},"ts":1379535098000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: fwiw, I recommend a new thread for the alternative Stream proposal","msgtype":"m.text"},"ts":1379535607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: current thread seems lost","msgtype":"m.text"},"ts":1379535617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good. plan to do so by end of weekend probably.","msgtype":"m.text"},"ts":1379535628000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yeah, I lost track of what was going on for the Stream stuff a long time ago.  A fresh thread with the proposal would be great.","msgtype":"m.text"},"ts":1379535672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: FOUC","msgtype":"m.text"},"ts":1379536121000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"it feels like a system designed by someone who doesn't understand the web","msgtype":"m.text"},"ts":1379536143000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"which is awful for something that's supposed to define the web","msgtype":"m.text"},"ts":1379536173000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"I think it's just \"hey, JS is easy to work with, so let's do the spec generation in it\".","msgtype":"m.text"},"ts":1379536264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then it's accidentally really painful and bad.","msgtype":"m.text"},"ts":1379536270000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: no, https://bugs.ecmascript.org/show_bug.cgi?id=1802 is valid","msgtype":"m.text"},"ts":1379536437000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"unless I misunderstood TR31 (which may very well be the case)","msgtype":"m.text"},"ts":1379536476000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: did you see my email?","msgtype":"m.text"},"ts":1379536520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: following the dots it seems 2E2F is fine as ID_Start","msgtype":"m.text"},"ts":1379536532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Pattern_Syntax, though","msgtype":"m.text"},"ts":1379536731000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: just replied","msgtype":"m.text"},"ts":1379536740000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: okay, so you're wrong in https://code.google.com/p/v8/issues/detail?id=2892 ?","msgtype":"m.text"},"ts":1379536837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ES5 doesn’t use ID_Start, it just lists the Unicode categories directly, hence the difference","msgtype":"m.text"},"ts":1379536944000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"see my old blog post if you’re interested","msgtype":"m.text"},"ts":1379536972000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"ES6 simplifies the whole thing by just deferring to TR31 (more or less)","msgtype":"m.text"},"ts":1379537001000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: okay, so the comment you're making there is about ES5, while I filed a bug about ES6","msgtype":"m.text"},"ts":1379537018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: actually, you filed that bug, that's just confusing","msgtype":"m.text"},"ts":1379537036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think your comment #2 on that page is incorrect","msgtype":"m.text"},"ts":1379537086000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: V8 currently implements ES5 rules for identifiers, so it allows 2E2F","msgtype":"m.text"},"ts":1379537190000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"but it shouldn't since it won't be allowed anymore in ES6","msgtype":"m.text"},"ts":1379537227000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I see what you mean, however, saying to blacklist 2E2F does not seem appropriate either","msgtype":"m.text"},"ts":1379537232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The list needs to be generated based on ID_Start","msgtype":"m.text"},"ts":1379537247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i see. so in your comment you meant to say \"generate the list based on TR31 as per ES6 rather than hardcoding the categories as per ES5\"","msgtype":"m.text"},"ts":1379537314000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"simply using a different Unicode version would not make a difference for 2E2F afaict","msgtype":"m.text"},"ts":1379537362000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yes (to both)","msgtype":"m.text"},"ts":1379537440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then we're in agreement","msgtype":"m.text"},"ts":1379537501000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"krit|zZz: i try to discourage referencing old versions, because they tend to end up in google search, and then you end up with the kind of mess the w3c has, where people are always ending up looking at obsolete specs without realising it","msgtype":"m.text"},"ts":1379539134000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"krit|zZz: other specs should _definitely_ never refer to a version of the spec with bugs that have since been fixed","msgtype":"m.text"},"ts":1379539170000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zcorpan: did you conclude data--=\"\" worked ok with the API, or is there a bug in the spec?","msgtype":"m.text"},"ts":1379539328000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: works ok","msgtype":"m.text"},"ts":1379539340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: i don't design things around the assumption of \"this is how a type-checked language would do it\".","msgtype":"m.text"},"ts":1379539347000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i think the spec is ok","msgtype":"m.text"},"ts":1379539357000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1379539374000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"teehee, anne keeps saying \"plan of record\"","msgtype":"m.text"},"ts":1379545738000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"wonders where this record is :-)","msgtype":"m.emote"},"ts":1379545748000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Doesn't \"plan of record\" just mean \"what TC39 are thinking this week\"?","msgtype":"m.text"},"ts":1379545916000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"</rimshot>","msgtype":"m.text"},"ts":1379545924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"one of them was about javascript: and navigation, which i think is just the fetch spec, not anything to do with js","msgtype":"m.text"},"ts":1379545965000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I wasn't being serious :)","msgtype":"m.text"},"ts":1379546058000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how does the positioning in the webvtt processing model with 'vw' and 'vh' CSS units make sense? these will mostly always be relative to the page viewport","msgtype":"m.text"},"ts":1379546406000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"the viewport is redefined for vtt purposes","msgtype":"m.text"},"ts":1379546533000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or at least, it used to be, i assume that's still there","msgtype":"m.text"},"ts":1379546539000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"search for \"viewport\"","msgtype":"m.text"},"ts":1379546543000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i'm not seeing anything, but i see a lot of references to 'video viewport' so i guess it's implicit","msgtype":"m.text"},"ts":1379546654000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"file a bug to make it explicit :-)","msgtype":"m.text"},"ts":1379546668000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but why not just use %","msgtype":"m.text"},"ts":1379546669000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"it's the same in practice, no? if we just use %","msgtype":"m.text"},"ts":1379546680000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"(but i'm pretty sure it was explicit)","msgtype":"m.text"},"ts":1379546682000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i'll take a closer look","msgtype":"m.text"},"ts":1379546689000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"i don't think it's the same, but i don't have it paged in","msgtype":"m.text"},"ts":1379546697000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ah \"The viewport (and initial containing block) is video's rendering area.\"","msgtype":"m.text"},"ts":1379546777000,"senderName":"reyre","senderId":"reyre@irc"}
]