[
{"content":{"body":"https://github.com/w3c/html/commit/180c3a639a0b1998596e16907c8c182c82a7f53a \"Integrate changes from other location\"","msgtype":"m.text"},"ts":1463118850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is so messed up","msgtype":"m.text"},"ts":1463118869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic++","msgtype":"m.text"},"ts":1463128210000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: script cleanup?","msgtype":"m.text"},"ts":1463128299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In particular, but also all the horrible js interaction crap he's been doing :)","msgtype":"m.text"},"ts":1463128325000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, do you think setting this up would be useful: https://travis-ci.org/Ms2ger/dom/builds/128303192","msgtype":"m.text"},"ts":1463130301000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To make sure PRs don't accidentally break the spec generation","msgtype":"m.text"},"ts":1463130318000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah maybe, should ask Domenic too","msgtype":"m.text"},"ts":1463130362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, consider yourself asked :)","msgtype":"m.text"},"ts":1463130384000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: he had some ideas about running bikeshed on the server instead, and also publishing snapshots","msgtype":"m.text"},"ts":1463130395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That'd be nice too","msgtype":"m.text"},"ts":1463130403000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: with this we could presumably also let Travis post a review URL so you can read the generated HTML rather than the diff","msgtype":"m.text"},"ts":1463130424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lots of folks don't like to read spec-HTML, and I can't really blame them","msgtype":"m.text"},"ts":1463130456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should maybe rename tuple origin to network origin","msgtype":"m.text"},"ts":1463143379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Got to love @mention spamming","msgtype":"m.text"},"ts":1463144838000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: from wpt?","msgtype":"m.text"},"ts":1463144937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"w3c/encryptedmedia","msgtype":"m.text"},"ts":1463145102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Someone deciced to @mention everyone in the w3c github org or something","msgtype":"m.text"},"ts":1463145120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's just another flaw with GitHub, should honestly be handled with Bugzilla or with a mailing list and a thread per issue","msgtype":"m.text"},"ts":1463145853000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"a mailing list? ...really?","msgtype":"m.text"},"ts":1463146851000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yes?","msgtype":"m.text"},"ts":1463146870000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"A mailing list is the best way to perform threaded communication.","msgtype":"m.text"},"ts":1463146910000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"Unless you use the gmail web client, anyway","msgtype":"m.text"},"ts":1463146949000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"If you use a real mail client, you'll have a much better experience.","msgtype":"m.text"},"ts":1463146967000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"I would suggest Mozilla Thunderbird, and if you use GNU+Linux I would suggest trying Evolution","msgtype":"m.text"},"ts":1463147002000,"senderName":"JohnMH","senderId":"JohnMH@irc"},
{"content":{"body":"jyasskin: I wonder if some kind of non-HTML sketch of the model would make it easier","msgtype":"m.text"},"ts":1463151882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: since I suspect everyone is getting lost in the weeds","msgtype":"m.text"},"ts":1463151889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: also, for me personally I'm having a lot of other things at the moment so I haven't really put as much thought into it as I probably should","msgtype":"m.text"},"ts":1463151920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I've got https://docs.google.com/document/d/1sdRwvnG3lAk95RNPHXFSuWQeq9Rx8lgMKPvrmjQ-y4I/edit?usp=sharing, but it doesn't have a lot of examples.","msgtype":"m.text"},"ts":1463151963000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I'm getting that impression from most other participants too, nobody has this really figured out, not sure if that means we should take a step back or some such","msgtype":"m.text"},"ts":1463151972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah. We could set up a VC in a week or two, and I could undo the changes to Bluetooth that rely on having permission storage.","msgtype":"m.text"},"ts":1463152061000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: e.g., one thing that was brought up is privacy mode, but I don't think that is worth of consideration here","msgtype":"m.text"},"ts":1463152088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: if we introduce that as a thing, that would end up splitting a lot of things into two effectively, I think trying to consider it here in isolation is very distracting","msgtype":"m.text"},"ts":1463152124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think privacy mode fits into either of the last two models, but their complexity is needed even to capture Firefox and Safari at the same time.","msgtype":"m.text"},"ts":1463152167000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"(Firefox's and Safari's non-private modes)","msgtype":"m.text"},"ts":1463152176000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: so one good thing to do I guess would be to write down the requirements for the more complicated permission types, including the requirements coming from various browsers","msgtype":"m.text"},"ts":1463152253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: it does seem though that a generic permissions API is not super great given that so far it seems a lot of them have very different requirements","msgtype":"m.text"},"ts":1463152434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: but maybe there's some primitives we can uncover...","msgtype":"m.text"},"ts":1463152448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: By \"permission types\", do you mean the values of the PermissionName enum, or the kinds of ways that browsers store permissions?","msgtype":"m.text"},"ts":1463152526000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: former","msgtype":"m.text"},"ts":1463152569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'k, I'll make a document listing their behavior.","msgtype":"m.text"},"ts":1463152821000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: thanks, I still feel like I'm not really helping you, but I should have more time soon","msgtype":"m.text"},"ts":1463153147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks for the help you have been providing.","msgtype":"m.text"},"ts":1463153649000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: is there a description of this spec language using \"!\" or \"?\" before calling a function?  for example, \"Return ! CreateArrayFromList(branches).\"","msgtype":"m.text"},"ts":1463172790000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Heh, that's a popular topic today..","msgtype":"m.text"},"ts":1463172808000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://tc39.github.io/ecma262/#sec-algorithm-conventions","msgtype":"m.text"},"ts":1463172815000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"seems like we should link all !s and ?s to there","msgtype":"m.text"},"ts":1463172825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1463172881000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ecmascript docs hurt my brain","msgtype":"m.text"},"ts":1463172891000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"seems \"?\" means that the algorithm may abort depending on the returned result?","msgtype":"m.text"},"ts":1463172923000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and \"!\" are essentially infallible?","msgtype":"m.text"},"ts":1463172929000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yep that's the idea","msgtype":"m.text"},"ts":1463172949000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"? used to be written as ReturnIfAbrupt, basically","msgtype":"m.text"},"ts":1463172952000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1463172975000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Sorry for the confusion :-/","msgtype":"m.text"},"ts":1463172983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how is a logic not operation written if we are using \"!\" for this?","msgtype":"m.text"},"ts":1463172996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: \"if true, false. if false, true\"","msgtype":"m.text"},"ts":1463173015000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Usually you just end up saying \"if x is false\"","msgtype":"m.text"},"ts":1463173033000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1463173033000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: how can \"highWaterMark\" be undefined in new ReadableStream() step 7a?  It seems to default to 1","msgtype":"m.text"},"ts":1463173992000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"new ReadableStream(underlyingSource = {}, { size, highWaterMark = 1 } = {})","msgtype":"m.text"},"ts":1463174017000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: good catch, we didn't fix the heading when we introduced the different defaults","msgtype":"m.text"},"ts":1463174052000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'll write an issue","msgtype":"m.text"},"ts":1463174064000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/streams/issues/447","msgtype":"m.text"},"ts":1463174157000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1463174209000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is the ReadableStream spec pretty stable now?","msgtype":"m.text"},"ts":1463174399000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"any more large changes in the works?","msgtype":"m.text"},"ts":1463174403000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: apart from piping, yes, i'd say very stable","msgtype":"m.text"},"ts":1463174415000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but we need WritableStream for that, though, right?","msgtype":"m.text"},"ts":1463174435000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1463174438000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1463174444000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"writable/transform/piping still unstable, sadly","msgtype":"m.text"},"ts":1463174449000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the controller changes seem pretty extensive","msgtype":"m.text"},"ts":1463174519000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah... the actual behavior changes were very minor, but Takeshi moved a bunch of stuff into the controller to fit your suggestion as to how to use the revealing constructor pattern to customize one class into doing two jobs","msgtype":"m.text"},"ts":1463174917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yea... I think it will be good to avoid the two types","msgtype":"m.text"},"ts":1463174969000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just unwinding what that means for our first cut at streams","msgtype":"m.text"},"ts":1463174980000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think I'm just going to update it all to the new spec language","msgtype":"m.text"},"ts":1463174996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"We have something that might be helpful... Takeshi updated the implementation for the new changes, just without any byte stuff yet","msgtype":"m.text"},"ts":1463175052000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/streams/ReadableStream.js&q=ReadableStream.js&sq=package:chromium&l=1","msgtype":"m.text"},"ts":1463175069000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thanks!  although our self-hosting code looks a bit different","msgtype":"m.text"},"ts":1463175263000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"may not be able to use that too much","msgtype":"m.text"},"ts":1463175268000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah that's fair","msgtype":"m.text"},"ts":1463175291000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for example, our self-hosted code doesn't support constructors directly :-(","msgtype":"m.text"},"ts":1463175309000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we have to bounce through c++ the first time to a constructor handle, etc","msgtype":"m.text"},"ts":1463175328000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1463175331000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway, I have to run to dinner","msgtype":"m.text"},"ts":1463175340000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks for the help!","msgtype":"m.text"},"ts":1463175344000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anytime!","msgtype":"m.text"},"ts":1463175581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"still have 1h to answer the #HTMLQuiz y'all 📢 https://twitter.com/zcorpan/status/730891209019822084","msgtype":"m.text"},"ts":1463175955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I checked after my answer; I got it wrong :(","msgtype":"m.text"},"ts":1463176153000,"senderName":"Domenic","senderId":"Domenic@irc"}
]