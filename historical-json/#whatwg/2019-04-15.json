[
{"content":{"body":"I think I saw a tweet go by saying that Chrome disabled sync XHR from onunload in the latest release. Do I recall correctly? Is it now disabled?","msgtype":"m.text"},"ts":1555318543000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: could be, someone did reach out about standardizing it, but that hasn't really happened yet","msgtype":"m.text"},"ts":1555318582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Twitter search doesn't find the tweet","msgtype":"m.text"},"ts":1555318616000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: per \"[blink-dev] Intent to Implement & Ship: Disallow Sync XHR in Page Dismissal\" it'll be enabled by default in M75","msgtype":"m.text"},"ts":1555318665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That thread also basically ignored my question on standardization it seems","msgtype":"m.text"},"ts":1555318784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh","msgtype":"m.text"},"ts":1555318792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. must have been the intent to implement twitter account, because I couldn't find anything from @ChromiumDev or the personal accounts of folks who'd usually tweet stuff like this","msgtype":"m.text"},"ts":1555318974000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: no reply to bz's comment in the thread...","msgtype":"m.text"},"ts":1555319274000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. do Blink and WebKit support IE's event.fromElement?","msgtype":"m.text"},"ts":1555319649000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"at least Blink does...","msgtype":"m.text"},"ts":1555319856000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: tracked by https://github.com/w3c/uievents/issues/84","msgtype":"m.text"},"ts":1555320017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, wanna review https://github.com/web-platform-tests/wpt/pull/16278 ?","msgtype":"m.text"},"ts":1555320231000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: are there bugs to be filed?","msgtype":"m.text"},"ts":1555320350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I was planning to do that after I merged the spec PR","msgtype":"m.text"},"ts":1555320379000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: also, () =>, let/const, are cool, you should start using them","msgtype":"m.text"},"ts":1555320379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1555320600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1555323368000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: Does this test pass for your stuff? https://github.com/web-platform-tests/wpt/commit/8553d30dd590715a63273e90da1951b8b0b37672","msgtype":"m.text"},"ts":1555332840000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(this commit bypassed GitHub PR review)","msgtype":"m.text"},"ts":1555332869000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: that looks correct","msgtype":"m.text"},"ts":1555333188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fwiw","msgtype":"m.text"},"ts":1555333197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm curious as to why my code failed in exactly the same way as the commit message suggests Chromium does","msgtype":"m.text"},"ts":1555333256000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"there must be some commonality somewhere","msgtype":"m.text"},"ts":1555333263000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: https://jsdom.github.io/whatwg-url/#url=d293Ou+/vQ==&base=YWJvdXQ6Ymxhbms=","msgtype":"m.text"},"ts":1555333400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: seems Chrome/Safari get it right at least","msgtype":"m.text"},"ts":1555333408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm seeing them percent-encoded as %EF%BF%BD everywhere I'm looking","msgtype":"m.text"},"ts":1555333528000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yes, which is what the test asserts","msgtype":"m.text"},"ts":1555333555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the test is expecting %EF%BF%BF","msgtype":"m.text"},"ts":1555333573000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: oh wat","msgtype":"m.text"},"ts":1555333582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: oh, but the input is U+FFFF, not U+FFFD","msgtype":"m.text"},"ts":1555333635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: so I think that's still good","msgtype":"m.text"},"ts":1555333641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(my corresponding test uses U+FFFD, which is why the off-by-two)","msgtype":"m.text"},"ts":1555333663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Unless I'm doing this wrong (which I probably am), U+FFFF is still being coerced to U+FFFD before being percent-encoded","msgtype":"m.text"},"ts":1555333852000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"yeah, no, I think I'm doing it wrong","msgtype":"m.text"},"ts":1555333967000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so jsdom is handling this correctly?","msgtype":"m.text"},"ts":1555333999000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: where is that coercion happening?","msgtype":"m.text"},"ts":1555334282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's not, I was misreading the output","msgtype":"m.text"},"ts":1555334298000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: it has to happen for lone surrogates, e.g., U+D800, but not U+FFFF, afaict","msgtype":"m.text"},"ts":1555334299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if there's coverage for lone surrogates, I'd hope so","msgtype":"m.text"},"ts":1555334319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My code is using the replacement character for invalid characters like U+FFFF, but it seems that jsdom is not doing that","msgtype":"m.text"},"ts":1555334338000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: there's nothing that says that should happen","msgtype":"m.text"},"ts":1555334396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I think it may be a side effect of how I'm doing UTF-8 encoding","msgtype":"m.text"},"ts":1555334419000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(this is the first time a test has failed for it)","msgtype":"m.text"},"ts":1555334440000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Isn't this USVString coercion?","msgtype":"m.text"},"ts":1555334652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: Am I correct in my understanding that the UTF-8 encoder in Encoding is the \"non-strict\" version of UTF-8?","msgtype":"m.text"},"ts":1555334707000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a U+FFFD REPLACEMENT CHARACTER.\"","msgtype":"m.text"},"ts":1555334734000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"From https://heycam.github.io/webidl/#dfn-obtain-unicode","msgtype":"m.text"},"ts":1555334740000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I've got a question about SharedArrayBuffers and window.opener = null. Does the agent cluster key change at window.opener = null?","msgtype":"m.text"},"ts":1555334774000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"Domenic: it's not therefore, right?","msgtype":"m.text"},"ts":1555334788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: USVString coercion makes U+FFFF go to U+FFFD by my reading. This explains jsdom's output, I think.","msgtype":"m.text"},"ts":1555334810000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Aren't we at \"c < 0xD800 or c > 0xDFFF","msgtype":"m.text"},"ts":1555334811000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"    Append to U the Unicode character with code point c.","msgtype":"m.text"},"ts":1555334811000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"?","msgtype":"m.text"},"ts":1555334811000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"dtapuska: setting window.opener cannot affect agent clusters as you already have/had access at that point","msgtype":"m.text"},"ts":1555334821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm right","msgtype":"m.text"},"ts":1555334834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I suggest you read again","msgtype":"m.text"},"ts":1555334835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it says if it's greater than 0xDFFF, which 0xFFFF is, you use it as a code point and don't coerce","msgtype":"m.text"},"ts":1555334858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: setting window.opener to null does change window name lookup a bit","msgtype":"m.text"},"ts":1555334914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: defining that properly is issue 313","msgtype":"m.text"},"ts":1555334930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hope that helps","msgtype":"m.text"},"ts":1555334939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Debugger reveals that it gets turned into U+FFFD before it even hits the whatwg-url parser code. Something in the deserialization maybe.","msgtype":"m.text"},"ts":1555334969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: ya it was just in context of implementing the Agent, etc in Chrome.. and I wondered if it should support changing at a time but it seems it doesn't need to. Everything is determined at construction time","msgtype":"m.text"},"ts":1555334983000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"annevk: also take a look at https://github.com/whatwg/fetch/pull/853","msgtype":"m.text"},"ts":1555335017000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: right, it's very similar to a process boundary, dynamically changing it would be...","msgtype":"m.text"},"ts":1555335022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think I've addressed the issues you raised before.. there isn't a good way to link into the RFC though","msgtype":"m.text"},"ts":1555335038000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"Domenic, annevk: So now I'm confused. Is jsdom replacing or not?","msgtype":"m.text"},"ts":1555335053000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I don't think it is, but the online viewer is broken so I can't be sure.","msgtype":"m.text"},"ts":1555335067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"also, it seems we need more tests for this","msgtype":"m.text"},"ts":1555335072000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I'll boot up the actual library tests","msgtype":"m.text"},"ts":1555335083000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I suspect you cannot get U+FFFF in your clipboard easily","msgtype":"m.text"},"ts":1555335125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well the url=d293Ou+/vQ==&base=YWJvdXQ6Ymxhbms= fragment either encodes U+FFFD or is decoded as U+FFFD","msgtype":"m.text"},"ts":1555335153000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dtapuska: yeah, I think that's good enough","msgtype":"m.text"},"ts":1555335170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am using TextEncoder/TextDecoder","msgtype":"m.text"},"ts":1555335171000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there a way to view all the mentions of an externally-defined term in a spec?","msgtype":"m.text"},"ts":1555335173000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: no :-(","msgtype":"m.text"},"ts":1555335180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boo :(","msgtype":"m.text"},"ts":1555335188000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It's becoming a bit of an issue","msgtype":"m.text"},"ts":1555335198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There is in bikeshed","msgtype":"m.text"},"ts":1555335200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess there is some kind of dumping thing, indeed","msgtype":"m.text"},"ts":1555335217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Click on the term in the \"Terms defined by reference\" section","msgtype":"m.text"},"ts":1555335235000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ugh and the test file formats have changed since last I updated the tests","msgtype":"m.text"},"ts":1555335251000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Going to file an issue on whatwg-url and get to this later","msgtype":"m.text"},"ts":1555335258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it seems we need more tests for strict vs. non-strict UTF-8","msgtype":"m.text"},"ts":1555335287000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"now, granted, this would be a bug in an Encoding implementation","msgtype":"m.text"},"ts":1555335313000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but it would still be useful to have for URL IMO","msgtype":"m.text"},"ts":1555335324000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic, pushed a fixup for https://github.com/heycam/webidl/pull/705 ; do you want to look or should I merge straight away?","msgtype":"m.text"},"ts":1555335338000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: LGTM","msgtype":"m.text"},"ts":1555335357000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger++","msgtype":"m.text"},"ts":1555335366000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1555335366000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"waves at GPHemsley","msgtype":"m.emote"},"ts":1555335378000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Am I correct in my understanding that U+FFFF will UTF-8 encode as EF BF BF but that will UTF-8 decode as U+FFFD (as defined in Encoding)?","msgtype":"m.text"},"ts":1555335903000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I don't think so","msgtype":"m.text"},"ts":1555335956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1555335960000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: U+FFFF roundtrips afaik","msgtype":"m.text"},"ts":1555335963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1555335991000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"because it's BF now","msgtype":"m.text"},"ts":1555335995000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1555335996000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: What do you make of this text? \"However, thanks to later revisions to the applicable standards, official UTF-8 is now rather stricter than that. For example, its range is much narrower (0 .. 0x10_FFFF to cover only 21 bits instead of 32 or 64 bits) and some sequences are not allowed, like those used in surrogate pairs, the 31 non-character code points 0xFDD0 .. 0xFDEF, the last two code points in any plane (0xXX_FFFE and","msgtype":"m.text"},"ts":1555336108000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"0xXX_FFFF), all non-shortest encodings, etc.\"","msgtype":"m.text"},"ts":1555336109000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"does this seem correct?","msgtype":"m.text"},"ts":1555336124000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: no","msgtype":"m.text"},"ts":1555336302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where is it wrong?","msgtype":"m.text"},"ts":1555336333000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: after surrogate pairs","msgtype":"m.text"},"ts":1555336349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1555336366000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1555336626000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"can someone begin to explain to me why the context.commit() method of offscreen canvas was removed?","msgtype":"m.text"},"ts":1555336650000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"It seems very useful, right?","msgtype":"m.text"},"ts":1555336687000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"d410: the commit log should have some pointers","msgtype":"m.text"},"ts":1555336972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wait are we talking about commit log of github? :P","msgtype":"m.text"},"ts":1555337005000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"or commit log of commit()?","msgtype":"m.text"},"ts":1555337014000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1555337019000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"d410: of whatwg/html","msgtype":"m.text"},"ts":1555337022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, ambiguity","msgtype":"m.text"},"ts":1555337042000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1555337044000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"annevk, quick editorial review at https://github.com/heycam/webidl/pull/713 , if you want :)","msgtype":"m.text"},"ts":1555337172000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: https://github.com/whatwg/dom/pull/754 might be of interest","msgtype":"m.text"},"ts":1555338821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: do you remember if there are tests for adoptedCallback?","msgtype":"m.text"},"ts":1555339185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There should be...","msgtype":"m.text"},"ts":1555339213000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I suspect the ordering is different between Firefox and others atm","msgtype":"m.text"},"ts":1555339214000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: when the c-e is a child of a document fragment","msgtype":"m.text"},"ts":1555339226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: looks like it's already tested and somehow goes right","msgtype":"m.text"},"ts":1555339754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: actually, nope","msgtype":"m.text"},"ts":1555340256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, testing document fragments I could easily see being omitted","msgtype":"m.text"},"ts":1555340293000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's very close, but it only moves the host","msgtype":"m.text"},"ts":1555340310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"overall though rniwa did an amazing job with custom element / shadow tree tests","msgtype":"m.text"},"ts":1555342872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: your poll might also need desktop/mobile caveats, at least for those voting for option 2","msgtype":"m.text"},"ts":1555343042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, you think it'd make sense to have 1 for all desktop platforms and 1 for all mobile platforms?","msgtype":"m.text"},"ts":1555343073000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean, I voted for option 1, but I wouldn't want my desktop date picker to match the one on my phone and vice versa","msgtype":"m.text"},"ts":1555343104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess popup-based controls are a bit different","msgtype":"m.text"},"ts":1555343158000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: on some platforms date is mixed","msgtype":"m.text"},"ts":1555343190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and time is a popup on mobile and text on desktop, iirc","msgtype":"m.text"},"ts":1555343216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure the desktop control is any good though... let me check what Windows 10 does...","msgtype":"m.text"},"ts":1555343234000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm https://usercontent.irccloud-cdn.com/file/P03TNBfo/image.png","msgtype":"m.text"},"ts":1555343260000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1555343274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmmmmmm https://usercontent.irccloud-cdn.com/file/WhZHUtdy/image.png","msgtype":"m.text"},"ts":1555343293000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd prefer typing 12:30, but to each their own I suppose","msgtype":"m.text"},"ts":1555343294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aah, that reminds of the Windows I know and love","msgtype":"m.text"},"ts":1555343316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah maybe Windows 10 doesn't have its act together... curious about macOS.","msgtype":"m.text"},"ts":1555343324000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Date & Time preference panel is definitely very different from iOS","msgtype":"m.text"},"ts":1555343370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/date-and-time is apparently the new Windows app recommendation... which is neither of those. Such churn O_O","msgtype":"m.text"},"ts":1555343397000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess the weird thing with iOS is that <input type=checkbox> isn't rendered as a switch","msgtype":"m.text"},"ts":1555343403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On Android and Windows at least checkbox and switch have different uses https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/toggles#choosing-between-toggle-switch-and-check-box","msgtype":"m.text"},"ts":1555343432000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I admit not remembering any checkboxes on iOS","msgtype":"m.text"},"ts":1555343439000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ooh, immediate effect is nice","msgtype":"m.text"},"ts":1555343465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That does argue for having something like <input type=checkbox switch>","msgtype":"m.text"},"ts":1555343474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh well, one day","msgtype":"m.text"},"ts":1555343487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My team is hopefully doing switch next quarter, but it's surprisingly complicated... http://adrianroselli.com/2019/03/under-engineered-toggles.html is a great overview of all the things to consider","msgtype":"m.text"},"ts":1555343673000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: interesting, I guess indeterminate kinda argues for type=switch, even though backcompat is less nice","msgtype":"m.text"},"ts":1555343766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess we can make it not apply either way","msgtype":"m.text"},"ts":1555343808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We're currently thinking a new element would be better to start paving away from the problematic design of everything being a single element. Especially with form-associated CE stuff it should be pretty polyfillable either way.","msgtype":"m.text"},"ts":1555343825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, except for all the focus and activation handling that isn't really covered yet?","msgtype":"m.text"},"ts":1555343879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, this is the excuse to fix all that ^_^","msgtype":"m.text"},"ts":1555343890000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"a11y too","msgtype":"m.text"},"ts":1555343896000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, there's quite a bit more indeed","msgtype":"m.text"},"ts":1555343909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, interesting","msgtype":"m.text"},"ts":1555343917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's <input type=checkbox> on iOS?","msgtype":"m.text"},"ts":1555344203000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: macOs-style checkbox, though grey when checked","msgtype":"m.text"},"ts":1555344335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domenic: \"We're currently thinking a new element would be better to start paving away from the problematic design of everything being a single element. \" - would this be maybe a built-in module path thing?","msgtype":"m.text"},"ts":1555349476000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: not sure what you mean","msgtype":"m.text"},"ts":1555350022000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"like, 'layered api'?","msgtype":"m.text"},"ts":1555350168000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Still not sure what you mean :). Is there a concrete technical question?","msgtype":"m.text"},"ts":1555350206000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I thought the topic above was your team maybe working on a new element.. if so, would that work be done in the way I think that is described in the layered api proposals - basically, nothing magical, a custom element that might ship with the browser? or am I misunderstanding that proposal too?","msgtype":"m.text"},"ts":1555350366000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"The hope is that the element would be 100% polyfillable, yes.","msgtype":"m.text"},"ts":1555350666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, I would love to follow this or even help maybe.. it seems like this idea (esp the browser potentially shipping something that you don't have to request) seems full of interesting questions and potential","msgtype":"m.text"},"ts":1555350939000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I mean it's just a new HTML element. Chrome hopes to implement it in JS, but that's our strategy and it might not work out.","msgtype":"m.text"},"ts":1555351010000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you implement it in js, wouldn't it necessarily have a dash?","msgtype":"m.text"},"ts":1555351383000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I mean, it's very possible that there is a lot more sketched out and discussed here than I currently understand and this is entirely plain to you but it's not yet to me so sorry if this seems remedial somehow","msgtype":"m.text"},"ts":1555351453000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yes, that's one of the trickier parts.","msgtype":"m.text"},"ts":1555351486000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<toggleswitch-> or <std-toggleswitch> or similar probably.","msgtype":"m.text"},"ts":1555351496000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or we could discuss removing the dash restriction on custom elements.","msgtype":"m.text"},"ts":1555351515000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"On the assumption that all future new HTML elements will be opt-in (via importing modules)","msgtype":"m.text"},"ts":1555351536000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"right, this is where I was getting to... it seems full of interesting /important topics and challenges on  where we go next - really things that have interested for a long time...","msgtype":"m.text"},"ts":1555351999000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"wow innovati im not surprised you are here","msgtype":"m.text"},"ts":1555352078000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"you seem to be everywhere that's web related lol","msgtype":"m.text"},"ts":1555352091000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":":3","msgtype":"m.text"},"ts":1555352101000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"see you on codesupport :)","msgtype":"m.text"},"ts":1555352114000,"senderName":"d410","senderId":"d410@irc"},
{"content":{"body":"it seems like some things like 'can it have a shadow dom' is a slightly different problem in that context... maybe a better one?","msgtype":"m.text"},"ts":1555352223000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Domenic / annevk: If y'all wanna send me some pictures to add to https://drafts.csswg.org/css-forms/#examples I wouldn't mind ^_^","msgtype":"m.text"},"ts":1555364398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]