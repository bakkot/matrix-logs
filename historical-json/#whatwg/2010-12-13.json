[
{"content":{"body":"MikeSmith: fixed setTransitionHander. fixe annotation-xml encoding","msgtype":"m.text"},"ts":1292204100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: deferring the locator fix until I have access to a proper keyboard","msgtype":"m.text"},"ts":1292204101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1292204102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1292204103000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm guessing you must be traveling","msgtype":"m.text"},"ts":1292204104000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1292204105000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the locator thing will require a wrapper Locator that delegates to the real Locator once it is ready","msgtype":"m.text"},"ts":1292204220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1292204340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"newbie IRC question: if I join a channel and it says \"Cannot send to channel\" if I try to say something, what's the deal?","msgtype":"m.text"},"ts":1292204760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the mode is \"+cnt\", whatever that means. :)","msgtype":"m.text"},"ts":1292204761000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I wonder hwat would be a good example to demonstrate HTML-in-annotation-xml with","msgtype":"m.text"},"ts":1292206620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: *-+ ","msgtype":"m.text"},"ts":1292208660000,"senderName":"MikeSmith_","senderId":"MikeSmith_@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1292208661000,"senderName":"MikeSmith_","senderId":"MikeSmith_@irc"},
{"content":{"body":"hsivonen: I think there is some example in the MathML3 spec","msgtype":"m.text"},"ts":1292208662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or somewhere in some doc produced by the working group","msgtype":"m.text"},"ts":1292208720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but as I recall it's not a very good example","msgtype":"m.text"},"ts":1292208721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe David can provide a better one","msgtype":"m.text"},"ts":1292208780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's still really not clear to me how specifically someone might want to use it in a MathML-in-HTML document","msgtype":"m.text"},"ts":1292208900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"especially since it's display: none by default","msgtype":"m.text"},"ts":1292208901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: fwiw, about the locator thing, I just noticed the problem originally when I was messing around with the HtmlSpecBuilder stuff","msgtype":"m.text"},"ts":1292208960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it's nice it resulted in finding an actual parser issue worth fixing, even if it's not super important to have it for the spec build","msgtype":"m.text"},"ts":1292209080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that said, I guess if it's actually fixed, maybe we can user it to get the HtmlSpecBuilder to report line numbers correctly","msgtype":"m.text"},"ts":1292209140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1292211120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Opera's Mac autoupdates is as full of FAIL as it was a year ago :-(","msgtype":"m.text"},"ts":1292211180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*autoupdater","msgtype":"m.text"},"ts":1292211181000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, I really wish they would fix that","msgtype":"m.text"},"ts":1292212740000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"man, the crecord extension for mercurial is brilliant","msgtype":"m.text"},"ts":1292213100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://blog.jclark.com/2010/12/microxml.html","msgtype":"m.text"},"ts":1292231640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i wonder how effective websocket masking is going to be when we start supporting sending Stream, Blob, etc","msgtype":"m.text"},"ts":1292233260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Why would that matter? I thought the whole idea was that you couldn't reliably predict the byte sequence even with free control over the input bytes","msgtype":"m.text"},"ts":1292233320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it is just a one-time pad","msgtype":"m.text"},"ts":1292233321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: if the attacker has control over the server, he can send the key to the client","msgtype":"m.text"},"ts":1292233322000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yes, clearly. But that requires an attack that is effective even after you have already successfully connected to a server","msgtype":"m.text"},"ts":1292233440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which I didn't think was the case","msgtype":"m.text"},"ts":1292233441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if so, why bother masking the frames?","msgtype":"m.text"},"ts":1292233500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think someone else made the same point","msgtype":"m.text"},"ts":1292233501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess if you use something stronger than XOR (e.g. the original AES suggestion) you are still protected in that case because it is hard to find the input giving the desired output, even with the key","msgtype":"m.text"},"ts":1292233740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"notes that when Greg says \"I agree with Simon\", he actually means \"I disagree with Simon\", assuming I am remembering his prior statements correctly and he had not significantly changed his position","msgtype":"m.emote"},"ts":1292234340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we have 'error frames' these days?","msgtype":"m.text"},"ts":1292235180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I didn't think so. I rather suspect they are Greg's invention. But I could be wrong","msgtype":"m.text"},"ts":1292235300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think he didn't understand what Simon said","msgtype":"m.text"},"ts":1292236020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the whole new framing thing seems like a huge waste of time","msgtype":"m.text"},"ts":1292236021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's greatly increased the complexity of the framing with very little practical benefit","msgtype":"m.text"},"ts":1292236022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah, well it seems like WebSockets is stuck in design-by-leadership-free-committee hell, so pretty much the whole history of humanity supports the notion that it will tend toward useless complexity","msgtype":"m.text"},"ts":1292236560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: especially since it's display: none by default","msgtype":"m.text"},"ts":1292237220000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1292237280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: best to think of it like data- attributes, but allowing structured annotation","msgtype":"m.text"},"ts":1292237281000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292237282000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"some concrete examples would help though","msgtype":"m.text"},"ts":1292237283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they seem to be hard to come by","msgtype":"m.text"},"ts":1292237284000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so for example you may want to give proof hints that appear on user interaction","msgtype":"m.text"},"ts":1292237285000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1292237286000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well yes because it didn't work in browsers in html until recently:-)","msgtype":"m.text"},"ts":1292237287000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"I'll try to make (someone) make some more plausible examples","msgtype":"m.text"},"ts":1292237340000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"that'd be great","msgtype":"m.text"},"ts":1292237341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://blog.regehr.org/archives/320","msgtype":"m.text"},"ts":1292237640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://blog.jclark.com/2010/12/microxml.html","msgtype":"m.text"},"ts":1292238720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"btw, css3-images endorses extension sniffing","msgtype":"m.text"},"ts":1292239080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"someone should make that go away","msgtype":"m.text"},"ts":1292239081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, please","msgtype":"m.text"},"ts":1292239260000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"http://my.opera.com/karlcow/blog/new-xml-generation","msgtype":"m.text"},"ts":1292247060000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"It would be great if HTML5 provided an alternate way (using attributes or elements) to declare that an HTML document be parsed in standards mode. Perhaps a boolean \"standard\" attribute on the <meta> element?\"","msgtype":"m.text"},"ts":1292251500000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"<meta http-equiv=\"X-Standard-Compatible\" content=\"HTML=5\"> ?","msgtype":"m.text"},"ts":1292251920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why would it be great ?","msgtype":"m.text"},"ts":1292251921000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"it's to allow validation of fragments AFAICT","msgtype":"m.text"},"ts":1292252100000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Rik`: So we could get rid of doctypes entirely","msgtype":"m.text"},"ts":1292252101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No it's because MicroXML doesn't want doctypes","msgtype":"m.text"},"ts":1292252102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just render everything in standards mode ?","msgtype":"m.text"},"ts":1292252580000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"webben, validation of fragments doesn't depend on the parsing mode being known because the parse mode doesn't change the conformance definition.","msgtype":"m.text"},"ts":1292252760000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: good point.","msgtype":"m.text"},"ts":1292252940000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"actually, it might. given the case of <p>...<table>","msgtype":"m.text"},"ts":1292253000000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"quirks mode is non-conforming, so a fragment validator could assume standards mode","msgtype":"m.text"},"ts":1292253180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, MicroXML not wanting DOCTYPEs doesn't really explain why having a non-DOCTYPE standards mode switch would be a good idea, since XML just uses standards mode anyway. Any new syntax should just not support quirks mode","msgtype":"m.text"},"ts":1292253660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"lachy: he wants to use a (micr)xml toolchain to generate html (or if you prefer, ployglot xhtml served as text/html)","msgtype":"m.text"},"ts":1292253720000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"use a text/html serializer at the end of the toolchain instead of an xml serializer","msgtype":"m.text"},"ts":1292253780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"then stick an HTML5 serialiser on the end of it. No need to add HTML-only syntactic features into MicroXML","msgtype":"m.text"},"ts":1292253840000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"don#t shoot the messenger;-)","msgtype":"m.text"},"ts":1292253841000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"BANG!","msgtype":"m.text"},"ts":1292253842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1292253843000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"goes off to read about MicroXML","msgtype":"m.emote"},"ts":1292253900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But requiring an html5-specific serialiser to avoid html5 weirdness is a sign of weakness in html5 design, there's no real way to avoid the conclusion that doctype weirdness and /.. weirdness in html5 is well weird.","msgtype":"m.text"},"ts":1292253960000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"sorry meant to say /> weirdness","msgtype":"m.text"},"ts":1292254020000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"It is standardising unfortunate behaviour forever because it works in the current crop of browsers.","msgtype":"m.text"},"ts":1292254080000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Of course it is easier for me to say that if I'm not responsible for keeping browsers working on deployed content...","msgtype":"m.text"},"ts":1292254140000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"no, because there are billions of web pages that rely on the unforgunate behavior","msgtype":"m.text"},"ts":1292254141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"see i said that for you","msgtype":"m.text"},"ts":1292254142000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"oh, sorry, didn't read carefully :)","msgtype":"m.text"},"ts":1292254143000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but I'm a pure mathematician by training, and I can work out there are more future documents than past ones, ","msgtype":"m.text"},"ts":1292254200000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"XML standardised weirdness like doctypes and namespaces without even having the excuse of deployed content :-)","msgtype":"m.text"},"ts":1292254201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah i'm not sure moving to xml is a win in terms of amount of weirdness","msgtype":"m.text"},"ts":1292254202000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but we like our weirdness, and don't like yours. So there.","msgtype":"m.text"},"ts":1292254260000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1292254261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if MicroXML were to restrict the DOCTYPE to \"<!DOCTYPE html>\", with no public or system identifiers permitted, then that might be acceptable since it would be a meaningless talisman in XML contexts.","msgtype":"m.text"},"ts":1292254262000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"lachy: er i just said that on james' blog","msgtype":"m.text"},"ts":1292254320000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"I didn't read the comments yet","msgtype":"m.text"},"ts":1292254321000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so the idea is to add yet another language?","msgtype":"m.text"},"ts":1292254380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh god","msgtype":"m.text"},"ts":1292254381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least XML5 was backwards compatible","msgtype":"m.text"},"ts":1292254382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/was/is/","msgtype":"m.text"},"ts":1292254383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: James's variant is backwards compatible to xml 1.0 as well (compatibility with namespaces less so in some variants)","msgtype":"m.text"},"ts":1292254440000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle, not when it comes to doctypes apparently","msgtype":"m.text"},"ts":1292254500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is the xml5 spec served somewhere as a document (I've seen the source in svn)","msgtype":"m.text"},"ts":1292254501000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"it seems like microxml aims to reduce the complexity in controlled environments while xml5 aims to remove fatal errors in browsers","msgtype":"m.text"},"ts":1292254560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"on doctypes he was just suggesting banning them, which is compatible in one direction","msgtype":"m.text"},"ts":1292254561000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"You have to wonder what they were thinking when they made the doctype subsets optional...","msgtype":"m.text"},"ts":1292254620000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"annevk, microxml just seems to be describing authoring requirements as a strict subset of XML and HTML5 syntax, so AFAICT, it's just trying to generalise the syntactic requirements of polyglot documents","msgtype":"m.text"},"ts":1292254621000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's not redefining any implementation requirements","msgtype":"m.text"},"ts":1292254680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"david_carlisle, backwards compatible means you can parse all existing documents","msgtype":"m.text"},"ts":1292254681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as i said, one direction:-)","msgtype":"m.text"},"ts":1292254682000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle, not that new content can be parsed by old software","msgtype":"m.text"},"ts":1292254683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"david_carlisle, old software is boring and usually broken","msgtype":"m.text"},"ts":1292254684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I sent a mail on www-style for the extension sniffing btw","msgtype":"m.text"},"ts":1292254800000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1292254860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm on a semi-vacation","msgtype":"m.text"},"ts":1292254861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently I had too many days left","msgtype":"m.text"},"ts":1292254862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but so far I'm failing; on the other hand, this is only day one","msgtype":"m.text"},"ts":1292254863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: go away","msgtype":"m.text"},"ts":1292254864000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1292254920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://forums.whatwg.org/viewtopic.php?t=4495 - time to tweak the outline algorithm?","msgtype":"m.text"},"ts":1292255400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"styling is an issue, but i think styling is messed up as it is today anyway","msgtype":"m.text"},"ts":1292255401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Man, could spammers at least have enough respect to spam an HTML5 doctype in the HTML5 bug tracker?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=11543","msgtype":"m.text"},"ts":1292256120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: No","msgtype":"m.text"},"ts":1292256240000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Well, doesn't hurt to ask.","msgtype":"m.text"},"ts":1292256300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If we're going to ask things of the spammers, we should ask them to spam with actual content instead of an empty document :)","msgtype":"m.text"},"ts":1292256360000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Workshiva, http://xkcd.com/810/","msgtype":"m.text"},"ts":1292256540000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gsnedders: Your shirts came in.","msgtype":"m.text"},"ts":1292260020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nintendo should really make a controller that does not give you a sore thumb","msgtype":"m.text"},"ts":1292260320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This has been bad since the NES","msgtype":"m.text"},"ts":1292260380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've never found a controller *anywhere* that doesn't make my thumb sore with sufficient use.","msgtype":"m.text"},"ts":1292260440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That said, old d-pads were the worst.","msgtype":"m.text"},"ts":1292260500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"obviously doesn't play enough","msgtype":"m.emote"},"ts":1292260620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I didn't realize how much I relied on my 360 until it broke and I went without it for three weeks.  ;_;","msgtype":"m.text"},"ts":1292260680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On the plus side, we're playing through a fun PS2 rpg that we never got around to earlier.","msgtype":"m.text"},"ts":1292260681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Donkey Kong!","msgtype":"m.text"},"ts":1292260682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What do you guys think of http://www.iecss.com/whatwg-base.css so far?","msgtype":"m.text"},"ts":1292260683000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: How has it changed since last time?","msgtype":"m.text"},"ts":1292260740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Opps, probably a better question for #html5, for this chan I would have meant http://www.iecss.com/whatwg.css","msgtype":"m.text"},"ts":1292260741000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yea, -base is based on current a grade browser settings, and only lists the offsets.","msgtype":"m.text"},"ts":1292260742000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"The \":section(n) hn\" sets of rules aren't correct.  h5 can still be a top-level heading in any level of section, if it's the highest-level one.","msgtype":"m.text"},"ts":1292260800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You just need a :heading(n) pseudo.","msgtype":"m.text"},"ts":1292260801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though, hm.  You still want <hn> to have the legacy behavior in un-sectioned content.  So I suspect you want to do just a set of \"hn, :heading(n)\" rules, but in *reverse*, starting with h6 and going down to h1.","msgtype":"m.text"},"ts":1292260980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That way precedence will take over and make, say, an h5 look like a top-level heading if it really is one.","msgtype":"m.text"},"ts":1292260981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"While still letting it look like an h5 in the absence of sections.","msgtype":"m.text"},"ts":1292260982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, how willing are you to put in less-established selectors?  Is this intended to be usable *now*?","msgtype":"m.text"},"ts":1292261040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, considering your use of pseudos and odd values on img and video, maybe not?","msgtype":"m.text"},"ts":1292261100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"whatwg is meant to be latest and greatest theory.","msgtype":"m.text"},"ts":1292261101000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"So it is not subject to the reality of current browser css engines.","msgtype":"m.text"},"ts":1292261102000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"-base is subject.","msgtype":"m.text"},"ts":1292261160000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Okay.  Then you can replace a big chunk of the list styles by using :any().","msgtype":"m.text"},"ts":1292261161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Maybe I'm wrong, but I think the styling of headings within sections (without using a classname helper) would like quadrouple the size of the css file without :section type selectors.","msgtype":"m.text"},"ts":1292261220000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Nah, I just explained how to do it.","msgtype":"m.text"},"ts":1292261221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, hmm mind teaching me what you mean?  I'm afraid I don't understand.","msgtype":"m.text"},"ts":1292261222000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You need :heading(n) selectors, is all.","msgtype":"m.text"},"ts":1292261223000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For headings, or lists?","msgtype":"m.text"},"ts":1292261224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Are you able to give me line numbers?","msgtype":"m.text"},"ts":1292261280000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"For which?","msgtype":"m.text"},"ts":1292261281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you don't mind, I'd like to start with headings and then move on to lists.","msgtype":"m.text"},"ts":1292261282000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1292261283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I really appreciate it.  I like to keep this list updated.","msgtype":"m.text"},"ts":1292261284000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"So, line 223 through 260.","msgtype":"m.text"},"ts":1292261285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1292261340000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You should be able to replace each chunk with just a pair of selectors, \"hn, :heading(n)\", where :heading(n) is a hypothetical pseudo that selects that nth level heading in a given section.","msgtype":"m.text"},"ts":1292261341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But list them in reverse, from h6 to h1.","msgtype":"m.text"},"ts":1292261342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so h6 would be h6, :heading(6), yes?","msgtype":"m.text"},"ts":1292261343000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"That way, in unsectioned content, they'll all work normally.  But in sectioned content, a numbered heading will act like a higher-level heading if appropriate.","msgtype":"m.text"},"ts":1292261344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1292261400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need to at least *start* a Selectors 4 at some point so we have something to refer to here.","msgtype":"m.text"},"ts":1292261401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you refresh and reference the new lines 224 - 152 I hope I've implemented this correctly.","msgtype":"m.text"},"ts":1292261460000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"ahem, 224-252","msgtype":"m.text"},"ts":1292261520000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yeah, looks good.","msgtype":"m.text"},"ts":1292261521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Awesome, want to help me with the lists now?  Thank you.","msgtype":"m.text"},"ts":1292261522000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You can do the same with font-size in 324-361","msgtype":"m.text"},"ts":1292261523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Go ahead and reference the new lines 324-252","msgtype":"m.text"},"ts":1292261640000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yup.","msgtype":"m.text"},"ts":1292261700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, now, 411-451.","msgtype":"m.text"},"ts":1292261701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What about them?","msgtype":"m.text"},"ts":1292261702000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Well, first, 411-419 can be replaced with just \":any(menu, ol, ul) :any(dl, menu, ul)\"","msgtype":"m.text"},"ts":1292261703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Is dl correct there?)","msgtype":"m.text"},"ts":1292261760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just checked, that style is @ http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#the-css-user-agent-style-sheet-and-presentational-hints","msgtype":"m.text"},"ts":1292261761000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"so should I add dl?","msgtype":"m.text"},"ts":1292261820000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hm, yeah.  Okay.","msgtype":"m.text"},"ts":1292261880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, dir is missing.","msgtype":"m.text"},"ts":1292261881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So \":any(dir, menu, ol, ul) :any(dl, menu, ul)\"","msgtype":"m.text"},"ts":1292261882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then similar for the 3-deep version.","msgtype":"m.text"},"ts":1292261883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Can we back up one bit, so from 411-419 change that to :any(dir, menu, ol, ul) ?","msgtype":"m.text"},"ts":1292261940000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Also, is \"dir\" an html5 valid element?","msgtype":"m.text"},"ts":1292262000000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"It's obsolte, but yeah.","msgtype":"m.text"},"ts":1292262240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how much exact new tags are there currently in the html5 spec?","msgtype":"m.text"},"ts":1292262300000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"does anyone know where i can find this?","msgtype":"m.text"},"ts":1292262301000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: Check the element index in the spec.","msgtype":"m.text"},"ts":1292262302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MrWax: http://www.whatwg.org/specs/web-apps/current-work/complete/section-index.html#elements-1","msgtype":"m.text"},"ts":1292262360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: Use the line I gave for 411-419 - \":any(dir, menu, ol, ul) :any(dl, menu, ul)\".","msgtype":"m.text"},"ts":1292262361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i dont have time to count all","msgtype":"m.text"},"ts":1292262420000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"isnt there any other reference?","msgtype":"m.text"},"ts":1292262421000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"MrWax: I don't have time to list them all.","msgtype":"m.text"},"ts":1292262422000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, done (but if you don't mine with one alternate, the exclusion of dir as this list ignores removed elements from the html5 spec.","msgtype":"m.text"},"ts":1292262480000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: k, now just use a similar rule for the 3-deep one \":any(menu, ol, ul) :any(menu, ol, ul) :any(dl, menu, ul)\"","msgtype":"m.text"},"ts":1292262540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Done, the new lines are 411-417","msgtype":"m.text"},"ts":1292262600000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You just replaced 411 with the 3-deep version for some reason.","msgtype":"m.text"},"ts":1292262660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolishness, fixed.","msgtype":"m.text"},"ts":1292262720000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Or, a typo rather.","msgtype":"m.text"},"ts":1292262721000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Okay, cool.","msgtype":"m.text"},"ts":1292262722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So this is the latest and greatest again?","msgtype":"m.text"},"ts":1292262723000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"<img> and <video> can just stick with auto width and height.  The 300px/150px initial size and the proper size negotiation are handled automatically by CSS.","msgtype":"m.text"},"ts":1292262780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders how UndoManager is supposed to work","msgtype":"m.emote"},"ts":1292262781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Would this be the same for canvas?","msgtype":"m.text"},"ts":1292262840000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hmm.  Yeah, probably.  Are @width and @height covered by another rule elsewhere?","msgtype":"m.text"},"ts":1292262841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For some reason I thought 300px was defined by you guys.  I guess just most browsers are deciding that, but it isn't expressed by whawg.","msgtype":"m.text"},"ts":1292262900000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Well, never mind, yes, CSS handles it.  The width and height of the canvas are part of its natural size.","msgtype":"m.text"},"ts":1292262960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is taken into account during the size negotiation in CSS.","msgtype":"m.text"},"ts":1292262961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"To be clear, nowhere does it say that the presentation of canvas or video should be 300x150?","msgtype":"m.text"},"ts":1292263260000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"That's implicit in the size negotiation algorithm in CSS now.  ","msgtype":"m.text"},"ts":1292263261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css3-images/#sizing Check out the \"default image sizing area\" bit.","msgtype":"m.text"},"ts":1292263262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, sure, and what about for audio?","msgtype":"m.text"},"ts":1292263320000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"line 484","msgtype":"m.text"},"ts":1292263321000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"That one needs a special rule, yes, because it acts differently than other replaced elements.","msgtype":"m.text"},"ts":1292263322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Will the size negotiations take over for img:complete, video:poster, and video:metadata as well?","msgtype":"m.text"},"ts":1292263323000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1292263324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lemme check to see if html defines things correctly for that to work...","msgtype":"m.text"},"ts":1292263380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All right, I will strip them all out.  For the remaining \"audio[controls]\" will the width: 300px be automatic?","msgtype":"m.text"},"ts":1292263381000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yes, that falls out of the fact that audio only has a height and not a ratio.","msgtype":"m.text"},"ts":1292263440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Updated 484 - 490","msgtype":"m.text"},"ts":1292263441000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Might wanna fuse the \"Media\" section into other sections then.","msgtype":"m.text"},"ts":1292263442000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I guess it's okay where it is.","msgtype":"m.text"},"ts":1292263500000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: I found the SNES to not be too painful when playing Donkey Kong for hours a few months back","msgtype":"m.text"},"ts":1292263980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Obviously I'm too young to know about the original NES)","msgtype":"m.text"},"ts":1292263981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, bummer, I loved the NES.","msgtype":"m.text"},"ts":1292264040000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Would there be an intelligent name for the grouping of menu, ol, and ul?","msgtype":"m.text"},"ts":1292264100000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"list?","msgtype":"m.text"},"ts":1292264160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, I thought so as well, but one that distincts those elements from \"dl\"","msgtype":"m.text"},"ts":1292264161000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Array :P","msgtype":"m.text"},"ts":1292264220000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Maybe I don't understand what the meaning is with http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#margins-and-padding","msgtype":"m.text"},"ts":1292264580000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"and http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#punctuation-and-decorations","msgtype":"m.text"},"ts":1292264640000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"What are you confused about, precisely?  I don't understand.","msgtype":"m.text"},"ts":1292264700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Specifically with list-style-type: disc, circle, and square, and why those combinations of elements should produce those styles.","msgtype":"m.text"},"ts":1292264760000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don't know why \"dl\" is involved, but otherwise it's just all the types of lists that produce markers.","msgtype":"m.text"},"ts":1292264820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, dl makes sense for the margins and padding section.","msgtype":"m.text"},"ts":1292264821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So IF there were a :list pseudo element THEN \":any(menu, ol, ul) :any(dl, menu, ul)\" might read \":list :list\" ?","msgtype":"m.text"},"ts":1292264940000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Sure, but why would we need :list?  It's only purpose would be to simplify UA stylesheets, because normal people don't need to group lists almost ever.","msgtype":"m.text"},"ts":1292265000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, :any() works pretty well by itself.","msgtype":"m.text"},"ts":1292265001000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I know and I agree, but so that I understand what it is doing.","msgtype":"m.text"},"ts":1292265002000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Actually, that wouldnt' work anyway.","msgtype":"m.text"},"ts":1292265003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You don't want to set list-style to \"square\" for ol.","msgtype":"m.text"},"ts":1292265004000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's a reason the last :any() is different from the previous ones.","msgtype":"m.text"},"ts":1292265060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, that makes sense to me, thanks.","msgtype":"m.text"},"ts":1292265360000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Haha. I have to be careful not ot accidently think I forgot something and add a quirksmode style.  I almost added form { margin: 0 0 1em; }","msgtype":"m.text"},"ts":1292265420000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"*not to","msgtype":"m.text"},"ts":1292265480000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hrm @ the <comment> suggestion.","msgtype":"m.text"},"ts":1292266860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"New sectioning element, semantics of a response to the nearest parent <article>?","msgtype":"m.text"},"ts":1292266861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"@ me?","msgtype":"m.text"},"ts":1292266920000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"No, at the mailing list.","msgtype":"m.text"},"ts":1292266921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At you, I just confirmed that HTML does indeed define <video> correctly to let the CSS size negotiation work properly.","msgtype":"m.text"},"ts":1292266980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't see what <comment> gets us that <article>...<article>...</article></article> doesn't","msgtype":"m.text"},"ts":1292267220000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"The added semantic of user-generated content, as separate from the author-generated content from the parent article?","msgtype":"m.text"},"ts":1292267221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dunno if it's sufficiently useful to use for search engines and such to be worthwhile.","msgtype":"m.text"},"ts":1292267280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or if it would potentially help screen-readers do heading/section-based navigation.","msgtype":"m.text"},"ts":1292267281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought IE already implemented <comment>","msgtype":"m.text"},"ts":1292267520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm not sure about the user- v. author-generated distinction","msgtype":"m.text"},"ts":1292267521000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Aw, dammit.","msgtype":"m.text"},"ts":1292267522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as a synonym for <!--...-->","msgtype":"m.text"},"ts":1292267523000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, they did.","msgtype":"m.text"},"ts":1292267524000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WTF?","msgtype":"m.text"},"ts":1292267525000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Only through 6, though.","msgtype":"m.text"},"ts":1292267526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"e.g., consider a Planet aggregator that displays comments from the blogs it aggregates","msgtype":"m.text"},"ts":1292267527000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"So, probably can be ignored.  I'll bring it up in the thread, though.","msgtype":"m.text"},"ts":1292267580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: Yeah, I'm not sure about it either.  I'd like to see if other people think there's a useful distinction to be made there.","msgtype":"m.text"},"ts":1292267581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*nod*","msgtype":"m.text"},"ts":1292267700000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"not a fan of comment, can't keep adding new elements to HTML for every type of textual content (article, post, comment, wiki, news, micropost, message) etc etc, where do you stop?","msgtype":"m.text"},"ts":1292267760000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"better to have one element that can be augmented with a type","msgtype":"m.text"},"ts":1292267761000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Not a fan of one element that can be augmented with a type, can't keep adding new types to HTML for every type of textual content (article, post, comment, wiki, news, micropost, message) etc etc, where do you stop?","msgtype":"m.text"},"ts":1292267820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<article itemtype=\"<anything>\"> you never need to stop, keeps HTML simple","msgtype":"m.text"},"ts":1292267880000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"<anything> isn't helpful.","msgtype":"m.text"},"ts":1292267881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The whole point of the semantic elements is to, you know, have semantics - a common public meaning that everyone knows about.","msgtype":"m.text"},"ts":1292267940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but that's an endless set..","msgtype":"m.text"},"ts":1292267941000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Not really.","msgtype":"m.text"},"ts":1292267942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The existing set covers everything.  We can slice more finely if it's sufficiently useful (for example, by subclassing <article> into <comment>), but we don't have to jump down the rabbit-hole.","msgtype":"m.text"},"ts":1292268000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's the point in microdata then? just keep adding new elements and attributes..","msgtype":"m.text"},"ts":1292268001000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Microdata's for exposing visible data in a machine-readable way.  It doesn't do anything semantically.","msgtype":"m.text"},"ts":1292268060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so what's the semantic distinction being made between an article and a comment?","msgtype":"m.text"},"ts":1292268180000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"That it's an article, or a comment on the article.  The latter is a user-generated response to the author-generated content.","msgtype":"m.text"},"ts":1292268240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and if the author comments? or the comment is on a comment?","msgtype":"m.text"},"ts":1292268300000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"or if the article is a comment on another article on another site?","msgtype":"m.text"},"ts":1292268301000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"The former still carry the same basic semantics.  The latter is probably too minor to distinguish - just call it an <article> like normal.","msgtype":"m.text"},"ts":1292268302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"both IE6 and IE7 treat <comment> as comments","msgtype":"m.text"},"ts":1292268360000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"IE8?","msgtype":"m.text"},"ts":1292268361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"IE8 doesn't.","msgtype":"m.text"},"ts":1292268362000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What about quirks mode?","msgtype":"m.text"},"ts":1292268420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think they actually use the old parser in their compat modes, so it'll probably work there.","msgtype":"m.text"},"ts":1292268480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh wait, IE8 does.  I was using IE9 beta accidentally.","msgtype":"m.text"},"ts":1292268540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IE9 doesn't treat it as a comment.","msgtype":"m.text"},"ts":1292268541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the fact that html5 is backwards compatible mainly points in the fact that all uses of html4 will still be interpretable using the new doctype right?","msgtype":"m.text"},"ts":1292269320000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"Well, ignore the doctype.  The HTML5 *parser* will indeed parse html4 and earlier documents in a compatible manner.","msgtype":"m.text"},"ts":1292269380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/","msgtype":"m.text"},"ts":1292280540000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Could anyone maybe give an example what the worker api could do/fix for a CMS ?","msgtype":"m.text"},"ts":1292281080000,"senderName":"MrWax","senderId":"MrWax@irc"},
{"content":{"body":"you could make the CMS do all its network communication in the background and have it cache data locally to make it seem faster","msgtype":"m.text"},"ts":1292281200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I use a CMS of sorts at work that does that sort of thing in Flash :|","msgtype":"m.text"},"ts":1292281320000,"senderName":"mgdm","senderId":"mgdm@irc"},
{"content":{"body":"Ahoy","msgtype":"m.text"},"ts":1292282460000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yo.","msgtype":"m.text"},"ts":1292282520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just had to school someone on proper password storage.","msgtype":"m.emote"},"ts":1292282521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"stickers? :)","msgtype":"m.text"},"ts":1292282580000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"TabAtkins, as in, salted hashing?","msgtype":"m.text"},"ts":1292283300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yes.","msgtype":"m.text"},"ts":1292283301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm experimenting right now with using hash functions that are particularly resistant to brute-forcing.","msgtype":"m.text"},"ts":1292283302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Someone was trying to claim that salts are unnecessary if you use a sufficiently expensive hashing algorithm.","msgtype":"m.text"},"ts":1292283303000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I pointed out that they're stupid.","msgtype":"m.text"},"ts":1292283304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Salts are *less* useful if you use a very cheap hash.","msgtype":"m.text"},"ts":1292283305000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But using an expensive hash is a good idea anyway.","msgtype":"m.text"},"ts":1292283360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm trying to make a hash that's expensive on GPUs as well as CPUs.","msgtype":"m.text"},"ts":1292283361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i use http://passwordsafe.sourceforge.net/","msgtype":"m.text"},"ts":1292283362000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Sure, but doubling the size of your salt with a cheap hash is basically free for you but makes bruteforcing much more expensive.  Using a more expensive hash is expensive for you and make bruteforcing much more expensive.","msgtype":"m.text"},"ts":1292283363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because you can just iterate a hash a few ten thousand times, PBKDF style.  But you can still crack those very quickly on a GPU, at least compared to a CPU (>10x speedup).","msgtype":"m.text"},"ts":1292283420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The size of your salt is practically irrelevant to brute-forcing attempts.  If your attacker has the hash, they probably have the salt too.","msgtype":"m.text"},"ts":1292283421000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Combining the two can be good, but when you want the hash to not spin your server's cpu for extended periods of time, just use a longer salt.","msgtype":"m.text"},"ts":1292283422000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The point of salts is only to avoid rainbow table attacks.","msgtype":"m.text"},"ts":1292283423000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes?","msgtype":"m.text"},"ts":1292283424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if you're interested in publishing the specs on the TR/ page, what's the easiest way I can help you with that?","msgtype":"m.text"},"ts":1292283425000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"easiest for you, i mean","msgtype":"m.text"},"ts":1292283426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I.e., make the attack O(M*N) instead of O(M + N), where M is the number of passwords and N is the number of passwords you're trying.","msgtype":"m.text"},"ts":1292283427000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It doesn't matter how long or short your salts are, as long as they're all different.","msgtype":"m.text"},"ts":1292283480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: I have no idea.  I don't know what your tooling is, or how you currently push things to TR.","msgtype":"m.text"},"ts":1292283481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"at this point i don't","msgtype":"m.text"},"ts":1292283482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Server CPU usage by hash functions is practically irrelevant, since you only have to run the algorithm on login and registration.  As long as it takes less than a few hundred milliseconds, it's fine.","msgtype":"m.text"},"ts":1292283483000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"previously i had a system whereby i would set up all the boilerplate and then hit a switch in my postprocessor","msgtype":"m.text"},"ts":1292283484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it would use the appropriate boilerplate and replace the dev.w3.org draft with the appropriate text","msgtype":"m.text"},"ts":1292283540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: The dude I was reading was saying to use bcrypt set to really expensive, to it took a good half-second to hash anything.","msgtype":"m.text"},"ts":1292283541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But iterating it a zillion times (or otherwise slowing it down) will seriously hamper an attacker.  My GPU cracker went from 220 million passwords per second to about 10,000 per second when I just iterated the hash a bunch of times.","msgtype":"m.text"},"ts":1292283542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But it was 120/second/core for a CPU.  So I'm looking to limit the GPU further without hurting CPU users.","msgtype":"m.text"},"ts":1292283543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, I can't parse that sentence.","msgtype":"m.text"},"ts":1292283544000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/to/so/","msgtype":"m.text"},"ts":1292283600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\" was saying to use bcrypt set to really expensive\"?","msgtype":"m.text"},"ts":1292283601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Apparently you can specify how expensive bcrypt should be?","msgtype":"m.text"},"ts":1292283602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably just by iterating it lots of times.","msgtype":"m.text"},"ts":1292283603000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You should be able to tune it for your needs.","msgtype":"m.text"},"ts":1292283660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1292283661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Iterating 32,768 times seems to take some tens of milliseconds on a typical CPU for SHA1.","msgtype":"m.text"},"ts":1292283662000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like maybe 100 ms.","msgtype":"m.text"},"ts":1292283663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is fine for real-world uses, but messes up attackers quite a lot.","msgtype":"m.text"},"ts":1292283664000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins, who else might be a good resource here to review the whatwg css file?","msgtype":"m.text"},"ts":1292283720000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"review the whatwg css file?","msgtype":"m.text"},"ts":1292283721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1292283780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's a css file I've been working on and maintaining for a few months tracking the html5 ua stylesheet and presentational hints @ http://www.iecss.com/whatwg.css","msgtype":"m.text"},"ts":1292283781000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"neat","msgtype":"m.text"},"ts":1292283782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: here's what i'm thinking","msgtype":"m.text"},"ts":1292283840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i put the header files somewhere you can edit","msgtype":"m.text"},"ts":1292283841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: and i make my tool grab the status and date of publication from those files somehow","msgtype":"m.text"},"ts":1292283842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: then to do the publication stuff all you have to do is tweak the files accordingly, and then give me a heads-up and i'll regen the spec with those files","msgtype":"m.text"},"ts":1292283843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If that's easy for you, it sounds easy to me.","msgtype":"m.text"},"ts":1292283960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1292283961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me figure out how to do the second bit, and then i'll find a place to put the files","msgtype":"m.text"},"ts":1292283962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal: Not sure who else would be good.  Maybe just send an email to whatwg?","msgtype":"m.text"},"ts":1292283963000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yea, I guess so.  Cool, well, thank you.","msgtype":"m.text"},"ts":1292284020000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"AryehGregor: How are you trying to make it worse on GPUs?","msgtype":"m.text"},"ts":1292284021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, my current theory is to salt everything with a large fixed hash, say 1 MB, since GPUs don't have memory caches.  The problem with this is that you could conceivably just do an ad hoc memory cache in shared contexts.  Plus I think I heard that next-gen NVIDIA GPUs do have some memory cache.","msgtype":"m.text"},"ts":1292284080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But it's worth a try.","msgtype":"m.text"},"ts":1292284081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If I make it something like 8 or 16 MB, it will kill a naive CPU implementation's L2 cache also.  But that can be worked around pretty easily.","msgtype":"m.text"},"ts":1292284140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just do a lot of hashes in parallel, reading in the salt a small amount at a time.","msgtype":"m.text"},"ts":1292284141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I considered making the code very branchy, so that GPUs would run at 1/8 speed or so, but I didn't think of a good way to do that.","msgtype":"m.text"},"ts":1292284200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is writing his OpenCL program to test all this out right now, and seriously wants to say impolite things to the people who wrote NVIDIA's OpenCL compiler.","msgtype":"m.emote"},"ts":1292284201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"When compiling my OpenCL programs, I have so far had: segmentation faults (in compilation!), cryptic error messages, infinite loops, and one variable mysteriously just having the wrong value for no apparent reason.","msgtype":"m.text"},"ts":1292284260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe find some way to make it rely on random access to a very large buffer, so the cache used for one hash can't be used in parallel for another","msgtype":"m.text"},"ts":1292284261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Interesting thought.","msgtype":"m.text"},"ts":1292284320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(so you'll be bottlenecked by memory bandwidth before you can exploit the GPU's parallel computation power)","msgtype":"m.text"},"ts":1292284321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Like use the last n bits of the last byte of the hash to index into the buffer.","msgtype":"m.text"},"ts":1292284322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(whereas a normal CPU computing one hash at a time won't be disadvantaged much)","msgtype":"m.text"},"ts":1292284380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The problem is that one constraint is this has to be fast enough when implemented in PHP.","msgtype":"m.text"},"ts":1292284381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So there's a very sharp limit to how much custom execution logic I can have.","msgtype":"m.text"},"ts":1292284382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So you need a PHP implementation to be fast and a GPU implementation to be slow?","msgtype":"m.text"},"ts":1292284440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Note, the \"fast\" and \"slow\" are measured on different timescales.","msgtype":"m.text"},"ts":1292284441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need a PHP implementation to take under (roughly) 100 ms per hash.  Given that constraint, I want cracking to be as slow as possible.","msgtype":"m.text"},"ts":1292284500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"On either CPU or GPU.","msgtype":"m.text"},"ts":1292284501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Particularly GPU, since that's likely to be faster.","msgtype":"m.text"},"ts":1292284502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You could force users to enter longer passwords, since it'll take no longer to compute the hash but exponentially longer to crack","msgtype":"m.text"},"ts":1292284620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's orthogonal, though.","msgtype":"m.text"},"ts":1292284680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It solves your problem :-)","msgtype":"m.text"},"ts":1292284681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor http://en.wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions GOST hash is hardest","msgtype":"m.text"},"ts":1292284682000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"No point worrying about GPUs being 10x faster if you find a way to make cracking half a million times slower without changing the algorithm","msgtype":"m.text"},"ts":1292284683000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"bga_, \"hardest\"?","msgtype":"m.text"},"ts":1292284684000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`, it's incompatible with our requirements.  We want users to be able to input short passwords if they want.","msgtype":"m.text"},"ts":1292284740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"2^105 to find collision","msgtype":"m.text"},"ts":1292284741000,"senderName":"bga_","senderId":"bga_@irc"}
]