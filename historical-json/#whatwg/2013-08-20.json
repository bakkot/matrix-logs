[
{"content":{"body":"jgraham: Can you touch <https://github.com/html5lib/html5lib-python/issues/85> yet? :P","msgtype":"m.text"},"ts":1376957419000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Or still too busy with this whole new-country thing?","msgtype":"m.text"},"ts":1376957436000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wanted: firefox plugin to keep pages from being able to break password autocomplete","msgtype":"m.text"},"ts":1376957987000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I use LastPass for that.","msgtype":"m.text"},"ts":1376960388000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"IE supports IDNA2008 + TR46? http://lists.w3.org/Archives/Public/www-tag/2013Aug/0083.html","msgtype":"m.text"},"ts":1376960622000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does a rejection in a promise's .then() impact the next chained promise's .then()?","msgtype":"m.text"},"ts":1376961647000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: it is not entirely clear what you're asking, but I believe the answer is yes.","msgtype":"m.text"},"ts":1376962670000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JonathanNeal: you can test all this behavior with any existing Promises/A+ library, by the way.","msgtype":"m.text"},"ts":1376962680000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JonathanNeal: https://github.com/promises-aplus/promises-spec/blob/master/implementations.md","msgtype":"m.text"},"ts":1376962705000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"kochi1: IME API is listed under http://www.w3.org/TR/#tr_Javascript_APIs","msgtype":"m.text"},"ts":1376962757000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: aha, Okay!  I coundn't find it...","msgtype":"m.text"},"ts":1376962815000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"yeah the usability of that page is not so great","msgtype":"m.text"},"ts":1376962890000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, someone has to implement incremental search on the page!","msgtype":"m.text"},"ts":1376962946000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"btw, \"IME\" matches many substrings like \"Time\" \"Primer\" \"Multimedia\" and so on","msgtype":"m.text"},"ts":1376963002000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"we should choose more outstanding spec name :)","msgtype":"m.text"},"ts":1376963026000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1376963065000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"0000IME API","msgtype":"m.text"},"ts":1376963078000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1376963086000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seriously, someone may argue \"IME\" is a microsoft term, and more generally it could be \"input method\" or \"text input\"","msgtype":"m.text"},"ts":1376963157000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"e.g. OSX has a class NSTextInputClient","msgtype":"m.text"},"ts":1376963189000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"MikeSmith: what is the moderation style in the meeting next week?","msgtype":"m.text"},"ts":1376963249000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"kochi1: relatively informal","msgtype":"m.text"},"ts":1376963417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I got your e-mail message","msgtype":"m.text"},"ts":1376963428000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you don't really need to be concerned much about the format","msgtype":"m.text"},"ts":1376963451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"15 minutes is a pretty short time","msgtype":"m.text"},"ts":1376963471000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok, thanks.  I'll prepare some 10-minute material and take some time for questions.","msgtype":"m.text"},"ts":1376963494000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"I think it's sufficient to first just explain what problems we are trying to solve with the IM API","msgtype":"m.text"},"ts":1376963501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kochi1: yup","msgtype":"m.text"},"ts":1376963504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: agreed, thanks for the suggestion.","msgtype":"m.text"},"ts":1376963585000,"senderName":"kochi1","senderId":"kochi1@irc"},
{"content":{"body":"TabAtkins: You know promises would make more sense if a) flatMap wasn't a silly word and b) flatMap wasn't the thing that doesn't flatten","msgtype":"m.text"},"ts":1376990184000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I'm not sure why you think that error messages shouldn't, in principle, be localisable","msgtype":"m.text"},"ts":1376990212000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I also think that no one has ever shown any inclination to use the feature","msgtype":"m.text"},"ts":1376990233000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, I think if I am considering using metaclasses to solve a problem, I might be overengineering things","msgtype":"m.text"},"ts":1376991487000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://twitter.com/davidbaron/status/369610549799026688","msgtype":"m.text"},"ts":1376991521000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, promises, IDNA, or encodings","msgtype":"m.text"},"ts":1376995066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I assume you saw the rust encoding issue?","msgtype":"m.text"},"ts":1376995458000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, no","msgtype":"m.text"},"ts":1376995675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: pointer?","msgtype":"m.text"},"ts":1376995710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/lifthrasiir/rust-encoding/issues/3","msgtype":"m.text"},"ts":1376995718000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: doesn't really look like a Rust issue","msgtype":"m.text"},"ts":1376995986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, more like \"implementation issue\", I guess","msgtype":"m.text"},"ts":1376996050000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: although maybe we should change the way encoder and decoder errors are written in the specification. At least this implementation seems suboptimal...","msgtype":"m.text"},"ts":1376996057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: \"spec is hard\"","msgtype":"m.text"},"ts":1376996074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lets do something simpler that comes close","msgtype":"m.text"},"ts":1376996084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Encoding are hard, let's go shopping","msgtype":"m.text"},"ts":1376996092000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I should actually do that one of these days. At least get a bicycle...","msgtype":"m.text"},"ts":1376996167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: is there something wrong here? critic has fewer commits looks like. https://github.com/w3c/web-platform-tests/pull/262 https://critic.hoppipolla.co.uk/r/238","msgtype":"m.text"},"ts":1376998585000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: It looks like it stopped tracking because the author did some kind of merge/rebase that critic didn't like","msgtype":"m.text"},"ts":1376999038000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In theory it should be possible to recover from this, but it seems to be broken. I don't know if it's a fixed bug, or an unknown bug, or something else","msgtype":"m.text"},"ts":1376999133000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe I should try upgrading","msgtype":"m.text"},"ts":1376999142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ouch :-/ i'll leave it to you and belem to sort out","msgtype":"m.text"},"ts":1377000410000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I need someone to proofread my emails... Especially when replying to people who made up this internet thing. http://lists.w3.org/Archives/Public/www-tag/2013Aug/0085.html :/","msgtype":"m.text"},"ts":1377002390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I was merely investigating what would have been a cool hypothesis if you had been left-handed. But if you're right-handed, it's far from being cool.","msgtype":"m.text"},"ts":1377002479000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: Nothing sinister, I promise.","msgtype":"m.text"},"ts":1377002492000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"http://people.mozilla.com/~roc/animated-SVG-glyphs.webm hah","msgtype":"m.text"},"ts":1377002752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: ^^","msgtype":"m.text"},"ts":1377002755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I hate you","msgtype":"m.text"},"ts":1377002963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: don't shoot the messenger, man","msgtype":"m.text"},"ts":1377002998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, why? what's not to like about animated glyphs?","msgtype":"m.text"},"ts":1377003014000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"What is this I don't even.","msgtype":"m.text"},"ts":1377003090000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I can't wait for someone to make an animated, wiggly version of Comic Sans. That'd be awesome.","msgtype":"m.text"},"ts":1377003098000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"animated glyphs seem like such a terrible idea","msgtype":"m.text"},"ts":1377003186000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: roc is too far away to shoot","msgtype":"m.text"},"ts":1377003225000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Animated glyphs seem great. I hope we can soon create glyphs that mask videos...","msgtype":"m.text"},"ts":1377003720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Now you can't use your \"only the messanger\" defence","msgtype":"m.text"},"ts":1377003776000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: as long as you keep staring at your screen I think I'm safe","msgtype":"m.text"},"ts":1377003802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: \" Do you have a FfOS Mobile Device? \"","msgtype":"m.text"},"ts":1377004252000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley, \"No\"","msgtype":"m.text"},"ts":1377005157000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Note it says FfOS, not FxOS","msgtype":"m.text"},"ts":1377005183000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: \"iso-8859-8 and iso-8859-8-i are distinct encoding names, because iso-8859-8 has influence on the layout direction.\" What does this mean?","msgtype":"m.text"},"ts":1377005391000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: what do you think it means?","msgtype":"m.text"},"ts":1377005442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is this about CSS writing modes? I think there should be a link there","msgtype":"m.text"},"ts":1377005501000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"or is it in HTML?","msgtype":"m.text"},"ts":1377005545000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Once someone has defined it I might add a link I guess","msgtype":"m.text"},"ts":1377005584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's a bug somewhere","msgtype":"m.text"},"ts":1377005589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's mentioned in the source: https://www.w3.org/Bugs/Public/show_bug.cgi?id=19505","msgtype":"m.text"},"ts":1377005608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think it’s bad to have valuable info hidden in HTML comments. <p class=note> or <p class=issue> would be better","msgtype":"m.text"},"ts":1377005718000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah, nowadays I usually do that","msgtype":"m.text"},"ts":1377005774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I'd argue they're developer-facing messages, which others often don't localize.","msgtype":"m.text"},"ts":1377007780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: What kind of developers?","msgtype":"m.text"},"ts":1377008013000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: If, for example, you wanted to write a python-based validator with html5lib as the parser layer, you might well want to localise these messages","msgtype":"m.text"},"ts":1377008047000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Does any validator do this or have any intension of every doing this?","msgtype":"m.text"},"ts":1377009118000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Localised error messages or use html5lib?","msgtype":"m.text"},"ts":1377009161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The former.","msgtype":"m.text"},"ts":1377009182000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/wiki/CssValidator/Localization","msgtype":"m.text"},"ts":1377009264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie_: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22496#c11","msgtype":"m.text"},"ts":1377009999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: and you were right, my bad :/","msgtype":"m.text"},"ts":1377010011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: might also want to review https://www.w3.org/Bugs/Public/show_bug.cgi?id=21976#c6 as it seems the single host concept might be obsolete soon","msgtype":"m.text"},"ts":1377011102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"win 27","msgtype":"m.text"},"ts":1377011253000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder to what extent people have reviewed this HTML imports stuff...","msgtype":"m.text"},"ts":1377011526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/imports/index.html should just be folded into HTML","msgtype":"m.text"},"ts":1377011630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is the use case of html imports again? :-/","msgtype":"m.text"},"ts":1377011918000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"External templates, afaict","msgtype":"m.text"},"ts":1377012019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. most people seem to do that via require('./myTemplate.html') at least in my circles.","msgtype":"m.text"},"ts":1377012050000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: it seems return in then()'s callbacks doesn't need to do anything either and can just call resolve()","msgtype":"m.text"},"ts":1377012054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yup. step 7 at https://github.com/promises-aplus/promises-spec#the-then-method","msgtype":"m.text"},"ts":1377012089000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: at which point the question is what kind of checks then() does","msgtype":"m.text"},"ts":1377012093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: resolve(), you mean?","msgtype":"m.text"},"ts":1377012107000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I thought we were going to spec the model where then() does unwrapping","msgtype":"m.text"},"ts":1377012124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, so what exactly resolve() does is different in that model, but the fact that return <-> resolve (and throw <-> reject) stays the same","msgtype":"m.text"},"ts":1377012166000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: afaict in that model resolve() just sets promise's value","msgtype":"m.text"},"ts":1377012225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh I see, yeah you're right, it's then()s initial behavior that becomes the new question.","msgtype":"m.text"},"ts":1377012268000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"this model seems kinda weird, in that the promise has a value that's a promise... and then if you do .then() it needs to be chained all the way through","msgtype":"m.text"},"ts":1377012503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it's not the promise's value, it's the promise's resolution... but yes, the fact that value/reason/state are all now emergent makes it a bit trippy.","msgtype":"m.text"},"ts":1377012545000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Mark and I are planning to nail down an exact algorithm later tonight-ish. The plan is to leave what \"isPromiseLike\" means exactly unspecified for now, to be argued about after we have a solid algorithm in place. Like http://esdiscuss.org/topic/promises-consensus-with-a-terminology but with more detail.","msgtype":"m.text"},"ts":1377012571000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1377012738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I referenced the \"earlier X\" quite explicitly","msgtype":"m.text"},"ts":1377013908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Promises, Promises.","msgtype":"m.text"},"ts":1377017664000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Futures.","msgtype":"m.text"},"ts":1377017681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is futures a more accurate term, just less aesthetic to me?","msgtype":"m.text"},"ts":1377017713000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"it is what some other languages use","msgtype":"m.text"},"ts":1377018388000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"mostly i hear java people using it","msgtype":"m.text"},"ts":1377018411000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"hsivonen: re https://www.w3.org/Bugs/Public/show_bug.cgi?id=12400 - what do you think is wrong in the specs, exactly?","msgtype":"m.text"},"ts":1377019872000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm amused that all the people who wanted their changes done to the whatwg html spec 5+ years ago, like having cite allow people's names, having blockquote ambiguously allow citations to be inlined, etc, are now just asking the htmlwg to make the changes instead","msgtype":"m.text"},"ts":1377020453000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: pls see https://www.w3.org/Bugs/Public/show_bug.cgi?id=22500","msgtype":"m.text"},"ts":1377021481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if you want a constructor that takes arguments and does something special to them, and you have several of these, is NamedConstructor the preferred solution or are factory methods preferred?","msgtype":"m.text"},"ts":1377022864000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. something like (but obviously not actually this):  new IntegerByAddition(1,2,3) => an Integer representing 6;  new IntegerByConcatenation(1,2,3) => an Integer representing 123","msgtype":"m.text"},"ts":1377022940000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"vs createIntegerByAddition(1,2,3) and createIntegerByConcatenation(1,2,3)","msgtype":"m.text"},"ts":1377022957000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I can think of examples of the latter, but not the former, assuming the resulting objects are indistinguishable","msgtype":"m.text"},"ts":1377023175000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"FWIW, I only find two NamedConstructor examples in blink's IDLs, and they are one per interface (Option for HTMLOptionElement and Audio for HTMLAudioElement), not even multiple per interface let alone different names","msgtype":"m.text"},"ts":1377023478000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"there should also be one for Image","msgtype":"m.text"},"ts":1377023491000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which has three","msgtype":"m.text"},"ts":1377023505000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but they're all just Image","msgtype":"m.text"},"ts":1377023508000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"certainly right now i'm not aware of anyone doing the named constructor thing","msgtype":"m.text"},"ts":1377023519000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but people hate factory methods","msgtype":"m.text"},"ts":1377023530000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so i don't know which is preferred","msgtype":"m.text"},"ts":1377023534000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, looks like Blink's HTMLImageElement constructor has custom code rather than being expressed through IDL; may be crufty code that can be updated, dunno. (And why not Video, for symmetry?)","msgtype":"m.text"},"ts":1377023746000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"The third alternative is new Integer({add: [1, 2, 3]}) vs. new Integer({concat: [1,2,3]}). With argument destructuring that might be considered more ES6-ish","msgtype":"m.text"},"ts":1377023896000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"i.e. as an implementer in ES6 you can write |let {add, concat} = options;| and decide what to do from there; supposedly that will be the new hotness; since they're exclusive it's icky, though","msgtype":"m.text"},"ts":1377024058000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hixie_: Integer.create(...) is what ES uses these days","msgtype":"m.text"},"ts":1377024656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: flatMap *does* flatten.  It flattens *once* - when you return a promise from the callback, rather than making a promise for a promise, it flattens it.","msgtype":"m.text"},"ts":1377024802000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: The name comes from the fact that it's identical to a .map() method, except it adds the flattening at the end.","msgtype":"m.text"},"ts":1377024829000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I think it's from Scala, and it's at least better than .bind() (or >>=).","msgtype":"m.text"},"ts":1377024849000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: What do you mean by \"Integer.create() is what ES uses\"?","msgtype":"m.text"},"ts":1377024943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, didn't see the context.  You meant when there are multiple constructors.","msgtype":"m.text"},"ts":1377024964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: maybe there isn't anything wrong with the specs. Basically, if browsers don't support marking up combining marks separately, it should be an authoring error to do so","msgtype":"m.text"},"ts":1377024984000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie_: requiring each text node to be in NFC takes care of this, AFAICT","msgtype":"m.text"},"ts":1377025010000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: roc at one point touted this as a feature","msgtype":"m.text"},"ts":1377026677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: Audio used to be a non-element object, the Audio constructor was added to <audio> when we made <audio> and removed that object.","msgtype":"m.text"},"ts":1377036852000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hsivonen: does NFC require no leading combining characters?","msgtype":"m.text"},"ts":1377036882000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hsivonen: and do we require NFC?","msgtype":"m.text"},"ts":1377036905000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hsivonen: (see in particular https://www.w3.org/Bugs/Public/show_bug.cgi?id=13502#c22)","msgtype":"m.text"},"ts":1377037068000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I'm pretty sure that neither the HTML spec nor any of its depedencies require NFC. That's why I changed the validator (a couple years or so ago) to emit warnings about NFC problems, instead of errors","msgtype":"m.text"},"ts":1377038989000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, that was my conclusion too","msgtype":"m.text"},"ts":1377039009000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think http://www.w3.org/TR/charmod-norm/ was the only document that said anything about NFC, and HTML doesn't reference that","msgtype":"m.text"},"ts":1377039133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, there's even a comment in the source saying i should do something to allow isolated combining characters if we ever _do_ reference that","msgtype":"m.text"},"ts":1377039451000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ah oK","msgtype":"m.text"},"ts":1377039567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]