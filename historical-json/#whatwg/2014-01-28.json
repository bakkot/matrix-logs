[
{"content":{"body":"Hixie, no there's no need to put [Exposed] on the ancestors of a global interface","msgtype":"m.text"},"ts":1390869919000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, I should write something about \"implements\" and [Exposed], though, that's not handled currently","msgtype":"m.text"},"ts":1390869935000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, though I do handle partial interfaces","msgtype":"m.text"},"ts":1390869942000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, if [Exposed] is on a [NoInterfaceObject], then it should be just like if you used a partial interface with [Exposed] on it","msgtype":"m.text"},"ts":1390869970000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or maybe it should be on the implements statement, as you say","msgtype":"m.text"},"ts":1390870064000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk-cloud: is there a test suite anywhere for your url spec?","msgtype":"m.text"},"ts":1390878145000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk-cloud: not written down. CancellablePromise is the most prominent.","msgtype":"m.text"},"ts":1390878445000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"othermaciej: https://github.com/w3c/web-platform-tests/tree/master/url","msgtype":"m.text"},"ts":1390878803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"othermaciej: and served at http://w3c-test.org/web-platform-tests/master/url/a-element.html","msgtype":"m.text"},"ts":1390879134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1390879462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1390879478000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm about to implement the URL interface, maybe I can tweak the A element tests to apply to URL","msgtype":"m.text"},"ts":1390879520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I wonder if any of these tests check mutation of URL components?","msgtype":"m.text"},"ts":1390879575000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I think they do not","msgtype":"m.text"},"ts":1390879741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"LOGIN Streusel 1234","msgtype":"m.text"},"ts":1390880323000,"senderName":"Streusel","senderId":"Streusel@irc"},
{"content":{"body":"whoops","msgtype":"m.text"},"ts":1390880327000,"senderName":"Streusel","senderId":"Streusel@irc"},
{"content":{"body":"awh well","msgtype":"m.text"},"ts":1390880329000,"senderName":"Streusel","senderId":"Streusel@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1390882622000,"senderName":"Fernandos","senderId":"Fernandos@irc"},
{"content":{"body":"Can <section>, <article> and <aside> be a parent of <main> and is that meaningful (semantic)? <main class=\"row\"> <aside>my-sidebar</aside><section>my-widescreen-section</section><article>my-content</article></main>","msgtype":"m.text"},"ts":1390882813000,"senderName":"Fernandos","senderId":"Fernandos@irc"},
{"content":{"body":"annevk-cloud: 1024, you bytes for encoding detection?","msgtype":"m.text"},"ts":1390883228000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Fernandos: that shows them being a child of main, not a parent.","msgtype":"m.text"},"ts":1390886518000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Fernandos: see http://html5doctor.com/the-main-element/","msgtype":"m.text"},"ts":1390894786000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"wonders why some people call hsivonen \"Henry\"","msgtype":"m.emote"},"ts":1390895562000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders why some people call hsivonen \"Onry\"","msgtype":"m.emote"},"ts":1390895854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: Because \"Henri\" is a rare spelling in America?","msgtype":"m.text"},"ts":1390897061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Onry\" is how \"Henri\" is pronounced in French, with English speakers have probably heard more often than presumably the Finnish version","msgtype":"m.text"},"ts":1390897321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Ms2ger: how would https://critic.hoppipolla.co.uk/r/56 be done with testharness-in-workers support?","msgtype":"m.text"},"ts":1390897518000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej: URL interface probably needs a different set of tests","msgtype":"m.text"},"ts":1390897548000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej: that testsuite is primarily about parsing/resolving","msgtype":"m.text"},"ts":1390897586000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, I can see that","msgtype":"m.text"},"ts":1390897635000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"will try to make my own","msgtype":"m.text"},"ts":1390897640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah I was just being sportive. Having some sport with the name. Like the first time plh told me about Hungry Mother in Cambridge and I was searching google maps for \"Angry Mother\" to find the location","msgtype":"m.text"},"ts":1390897684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you get 5 bounty points for making a web-platform-tests pull request :-)","msgtype":"m.text"},"ts":1390897700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"we need proper webidlharness.js-based tests for the URL interface I guess","msgtype":"m.text"},"ts":1390897759000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I once almost missed a telecon that involved the organizer calling me and asking if I was [American approximation of French pronunciation of Henri]","msgtype":"m.text"},"ts":1390897759000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OTOH, in Starbucks du Louvre, I said my name was Henri (pronounce the French way) and the American kid working at Starbucks in France wrote \"Harry\" on the cup","msgtype":"m.text"},"ts":1390897819000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can't win","msgtype":"m.text"},"ts":1390897822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: yeah, but that's not enough","msgtype":"m.text"},"ts":1390897831000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, 10 for reviewing one? :):","msgtype":"m.text"},"ts":1390897847000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: hah","msgtype":"m.text"},"ts":1390897856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: sure","msgtype":"m.text"},"ts":1390897871000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks how https://critic.hoppipolla.co.uk/r/56 works","msgtype":"m.emote"},"ts":1390897946000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: well we need that at least. though it wouldn't be very satisfying to run unless Gecko already supports the interface","msgtype":"m.text"},"ts":1390897987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gets his shield while Ms2ger discovers how horrible that code is","msgtype":"m.emote"},"ts":1390898041000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1390898046000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You've got your shield now? :)","msgtype":"m.text"},"ts":1390898057000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hold on... yep ok","msgtype":"m.text"},"ts":1390898070000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You're testing postMessage, so I don't see how it would work with writing only one side","msgtype":"m.text"},"ts":1390898158000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1390898185000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So \"like this\"","msgtype":"m.text"},"ts":1390898195000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: FWIW, in English, I introduce myself the way \"Henry\" is pronounced in English","msgtype":"m.text"},"ts":1390898235000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: ok","msgtype":"m.text"},"ts":1390898242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen, now I wonder if I've been mispronouncing Henry, Henri, or both :)","msgtype":"m.text"},"ts":1390898294000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i was thinking about introducing a way to do more assertions of a test in a worker. but maybe it'd be clearer to have two separate tests for the two contexts. dunno, but it would be nice to be able to use real assertions somehow","msgtype":"m.text"},"ts":1390898573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So making steps on one test in both contexts? That sounds somewhat painful","msgtype":"m.text"},"ts":1390898687000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"will think about it some more","msgtype":"m.emote"},"ts":1390898782000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh great. The SVG  WG has introduced a new camel-case element that's not in the HTML parsing spec: feDropShadow","msgtype":"m.text"},"ts":1390899167000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hey, you could be dealing with the geolocation wg","msgtype":"m.text"},"ts":1390899195000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: is geolocation still active?","msgtype":"m.text"},"ts":1390899242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Apparently \"no, fuck your comments\"","msgtype":"m.text"},"ts":1390899264000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"are javascript RegExp .sticky and .unicode  implemented?","msgtype":"m.text"},"ts":1390899932000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: they promised they wouldn't do that iirc","msgtype":"m.text"},"ts":1390899978000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: thanks for https://dvcs.w3.org/hg/csswg/rev/8dd698785f16","msgtype":"m.text"},"ts":1390901114000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how long until this gets attributed to the WHATWG: http://wiki.whatwg.org/wiki/Internet_Encrypted_Media_Extensions ?","msgtype":"m.text"},"ts":1390902476000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"BREAKING NEWS: WHATWG PUTS ITS WEIGHT BEHIND DRM AND HIXIE EATS KITTENS","msgtype":"m.text"},"ts":1390903932000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://dev.w3.org/Graphics-FX/modules/filters/publish/SVGFilter.html says to look at https://dvcs.w3.org/hg/FXTF/raw-file/tip/filters/publish/Filters.html which gives an error","msgtype":"m.text"},"ts":1390904030000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"finds https://dvcs.w3.org/hg/FXTF/raw-file/e1ae5deb9fa8/filters/index.html","msgtype":"m.emote"},"ts":1390904112000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: the answer is, not long, not long at all... https://twitter.com/johnfoliot/status/428039862097559552","msgtype":"m.text"},"ts":1390904954000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"An unhelpful comment from John Foliot? Count me surprised.","msgtype":"m.text"},"ts":1390905058000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"At least JF is right about that the suggestion on the wiki page being misguided.","msgtype":"m.text"},"ts":1390905141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SimonSapin: hsivonen: wait, why is the @charset change good? won't the label fail to match if it contains whitespace anyway?","msgtype":"m.text"},"ts":1390905329000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe the spec has changed in other ways, since I last read it","msgtype":"m.text"},"ts":1390905442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1390905446000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm http://encoding.spec.whatwg.org/#concept-encoding-get does trim whitespace. wonder why","msgtype":"m.text"},"ts":1390905504000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: since when has the spec constrained the values of XX to between 0x23 and 0x7E?","msgtype":"m.text"},"ts":1390905547000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and yeah, 19 bytes is much better than 1024","msgtype":"m.text"},"ts":1390905575000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1390905581000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"despite Gecko using 1024 now","msgtype":"m.text"},"ts":1390905584000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or Gecko using 1024 last time I looked","msgtype":"m.text"},"ts":1390905611000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk-cloud: see above","msgtype":"m.text"},"ts":1390905734000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"FWIW annevk-cloud has taken to using a pseudonym when in situations that casually require a name (e.g. ordering food) in the UK","msgtype":"m.text"},"ts":1390905855000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders which","msgtype":"m.emote"},"ts":1390905952000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: s/19/31/","msgtype":"m.text"},"ts":1390905991000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.behindthename.com/names/extra.php?terms=anne&extra=s&gender=both","msgtype":"m.text"},"ts":1390906274000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Not \"Amy\"","msgtype":"m.text"},"ts":1390906339000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh the url didn't update when i changed the filter. i meant to filter for male english names","msgtype":"m.text"},"ts":1390906554000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: do you have a reference to whatever the SVG WG agreed to regarding camelCasing?","msgtype":"m.text"},"ts":1390910504000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: zcorpan: so about the validator  behavior for text/html documents with an HTML4 or XHTML1, I would like to flip the default behavior such that we no longer do doctype sniffing and validate them against the HTML4 or XHTML1 schema but instead just validate them as HTML5 (i.e., as html5.validator.nu does)","msgtype":"m.text"},"ts":1390910521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: WFM","msgtype":"m.text"},"ts":1390910564000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Ok so my next question would be, as far as the UI, I don't think we need an option for \"Do doctype sniffing for text/html\" (or however it might be worded). But if you think we need one I can add it.a","msgtype":"m.text"},"ts":1390910814000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you mean getting rid of Preset: None and making Preset: default to HTML5?","msgtype":"m.text"},"ts":1390911148000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not at hand, so possibly i'm making it up, but i could try to dig a bit","msgtype":"m.text"},"ts":1390911569000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: no I just mean not adding any new option in the UI to let users revert to the old (currently existing) doctype-sniffing behavior (after we remove it)","msgtype":"m.text"},"ts":1390911760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so users would lose the option to even opt into the doctype sniffing if they wanted it","msgtype":"m.text"},"ts":1390911828000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"darobin: the studios should put Foliot on retainer","msgtype":"m.text"},"ts":1390912059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: have you seen Promised Land (that flick about fracking with Matt Damon)?","msgtype":"m.text"},"ts":1390912119000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"because I reckon the studios might just have Fred Andrews on retainer","msgtype":"m.text"},"ts":1390912132000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I think it's the otehr way around, that the EFF is paying Foliot to make the pro-EME argument look as absurd as possible. Kind of like, Man, If this is guy is p","msgtype":"m.text"},"ts":1390912275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*if this guys is for it, it must really be a bad idea","msgtype":"m.text"},"ts":1390912300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and as far as http://wiki.whatwg.org/wiki/Internet_Encrypted_Media_Extensions, is it crazy or completely wrong?","msgtype":"m.text"},"ts":1390912451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm asking","msgtype":"m.text"},"ts":1390912459000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean I looked through it and on the face of it at least nothing there seems whacko","msgtype":"m.text"},"ts":1390912496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I assume it's in the spirit of being a proposal in response to the rhetoric about \"We can't discuss alternatives to EME unless we have actual proposals\"","msgtype":"m.text"},"ts":1390912617000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: i only find http://lists.w3.org/Archives/Public/public-html/2009Mar/0581.html (see the end of it)","msgtype":"m.text"},"ts":1390914401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: it was brought to my attention that svg2 also has meshGradient","msgtype":"m.text"},"ts":1390914428000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: seems fine not to be able to opt into doctype sniffing","msgtype":"m.text"},"ts":1390920736000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ok cool","msgtype":"m.text"},"ts":1390920815000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: the one case I can think of it breaking is if somebody's using the Web service API","msgtype":"m.text"},"ts":1390920916000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, but we can't freeze everything for that","msgtype":"m.text"},"ts":1390920985000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"agree eyah","msgtype":"m.text"},"ts":1390920995000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess we could add a request parameter","msgtype":"m.text"},"ts":1390921025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that they'd need to specify if they wanted the old behavior","msgtype":"m.text"},"ts":1390921052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that seems pretty low-cost","msgtype":"m.text"},"ts":1390921079000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1390921084000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1390921088000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's what I'll do then","msgtype":"m.text"},"ts":1390921095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanted to ask zcorpan if he had any concerns about this plan but I guess he's away right now","msgtype":"m.emote"},"ts":1390921172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what was the plan?","msgtype":"m.text"},"ts":1390921770000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: no sniffing except for opt-in in web service api?","msgtype":"m.text"},"ts":1390921876000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: is the plan to remove the option to sniff in the web service api later? if yes why not do it now?","msgtype":"m.text"},"ts":1390922086000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: I picked 1024 from the HTML spec and Gecko code, and to not be tied too much to a set of supported encodings. Do you think it helps to reduce that number? How much? I think I used 100 bytes in tinycss2 and rust-cssparser","msgtype":"m.text"},"ts":1390923559000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: what do you think of moving http://dev.w3.org/csswg/css-syntax/#environment-encoding-xml into CSSOM?","msgtype":"m.text"},"ts":1390923587000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"into http://dev.w3.org/csswg/cssom/#requirements-on-user-agents-implementing-the-xml-stylesheet-processing-instruction actually","msgtype":"m.text"},"ts":1390923598000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: wfm","msgtype":"m.text"},"ts":1390923615000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I’d do it, but I failed to make Anolis work for CSSOM :)","msgtype":"m.text"},"ts":1390923647000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: i'll get around to it","msgtype":"m.text"},"ts":1390923666000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does cssom still use the... interesting preprocessor?","msgtype":"m.text"},"ts":1390923698000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1390923718000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So far.","msgtype":"m.text"},"ts":1390923721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan has said he wants to switch to Bikeshed. I think I just need to offer more forcefully to migrate him myself.","msgtype":"m.text"},"ts":1390923738000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is CSS Serialization for getComputedStyle actualy defined now?","msgtype":"m.text"},"ts":1390925525000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: it trims whitespace cause that is what is needed in a ton of contexts","msgtype":"m.text"},"ts":1390925583000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"I can see an argument for not doing it there though, had not really considered that","msgtype":"m.text"},"ts":1390925630000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"jgraham: AFAICT no, at least not for interesting cases like multi-component values with optional parts","msgtype":"m.text"},"ts":1390927355000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"browsers apparently do trim whitespace in @charset","msgtype":"m.text"},"ts":1390927413000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I don't really care about interesting edge cases","msgtype":"m.text"},"ts":1390927848000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I care very specifically about whether https://critic.hoppipolla.co.uk/585e8a45?review=447 is valid","msgtype":"m.text"},"ts":1390927868000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(actually I *do* care about those edge cases)","msgtype":"m.text"},"ts":1390927880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but not so much right now)","msgtype":"m.text"},"ts":1390927887000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the failure to standardise this stuff is tragi-comic)","msgtype":"m.text"},"ts":1390927905000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Relative lengths: the <number> component serialized as per <number> followed by the unit in its canonical form as defined in its respective specification.","msgtype":"m.text"},"ts":1390928099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"OK, so that test is good then?","msgtype":"m.text"},"ts":1390928593000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1390928892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunnop","msgtype":"m.text"},"ts":1390929328000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dunno*","msgtype":"m.text"},"ts":1390929330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Huh. Understanding all possible transitions in the tree constructor is bloody hard.","msgtype":"m.text"},"ts":1390929667000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The tree construction dispatcher makes it very non-obvious what's possible","msgtype":"m.text"},"ts":1390929810000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"As does resetting the insertion mode.","msgtype":"m.text"},"ts":1390929822000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1390930165000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hi dglazkov!","msgtype":"m.text"},"ts":1390930267000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"dglazkov: Look I can beat Ms2ger! Lots of new PRs just waiting for your review!","msgtype":"m.text"},"ts":1390930702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yay?","msgtype":"m.text"},"ts":1390930728000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"https://critic.hoppipolla.co.uk/r/670 and https://critic.hoppipolla.co.uk/r/668","msgtype":"m.text"},"ts":1390930736000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"today's chances looking slim. Gardening Blink.","msgtype":"m.text"},"ts":1390930776000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Did someone replae dglazkov with a magic eightball?","msgtype":"m.text"},"ts":1390930806000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Signs point to yes.","msgtype":"m.text"},"ts":1390930939000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"actually, I need to get hayato and morrita on to critic. They are the ones who should be looking at Shadow DOM and Imports tests, respectively.","msgtype":"m.text"},"ts":1390931194000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"and dominicc at Custom Elements","msgtype":"m.text"},"ts":1390931205000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"delegates","msgtype":"m.emote"},"ts":1390931211000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: Replacing yourself with three people sounds like a win","msgtype":"m.text"},"ts":1390931333000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially if they join IRC so we can nag them too ;)","msgtype":"m.text"},"ts":1390931350000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Nagging sounds good","msgtype":"m.text"},"ts":1390931505000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heycam: you around?","msgtype":"m.text"},"ts":1390932273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yes","msgtype":"m.text"},"ts":1390932291000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: http://xhr.spec.whatwg.org/#interface-formdata","msgtype":"m.text"},"ts":1390932291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: [Constructor(optional HTMLFormElement form)]","msgtype":"m.text"},"ts":1390932296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: are you going to define what happens when HTMLFormElement is not part of the global?","msgtype":"m.text"},"ts":1390932308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, for now, probably not; the conversion rules will just never consider any object passed in to be a value of the right type","msgtype":"m.text"},"ts":1390932348000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since you can't get at one","msgtype":"m.text"},"ts":1390932351000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"look at all those [EnsureUTF16]s","msgtype":"m.text"},"ts":1390932373000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: except if you pass undefined since that'll mean missing?","msgtype":"m.text"},"ts":1390932381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sure","msgtype":"m.text"},"ts":1390932390000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah you need to come up with a consistent story for EnsureUTF16 and ByteString :-)","msgtype":"m.text"},"ts":1390932399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1390932405000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: okay, sounds good","msgtype":"m.text"},"ts":1390932415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grr zcorpan away again","msgtype":"m.text"},"ts":1390932717000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That damn zcorpan, being at home with his family","msgtype":"m.text"},"ts":1390932820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"j #temporaldeadzone","msgtype":"m.text"},"ts":1390933284000,"senderName":"bterlson","senderId":"bterlson@irc"},
{"content":{"body":"heycam: are callbacks and enmums automatically available everywhere?","msgtype":"m.text"},"ts":1390934067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yes","msgtype":"m.text"},"ts":1390934079000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, you mean in all globals? or all specs?","msgtype":"m.text"},"ts":1390934092000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"either way, yes","msgtype":"m.text"},"ts":1390934094000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1390934099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"enums aren't detectable in a global, right?","msgtype":"m.text"},"ts":1390934204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, they're just strings","msgtype":"m.text"},"ts":1390934206000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1390934216000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"MikeSmith: https://twitter.com/sideshowbarker/status/428240986465005568 <3","msgtype":"m.text"},"ts":1390936264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders how MikeSmith just gets better looking year after year .... ","msgtype":"m.emote"},"ts":1390943624000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"must be the drugs, booze, and party animal lifestyle.","msgtype":"m.text"},"ts":1390943686000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"any IE-capable users around?","msgtype":"m.text"},"ts":1390945254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2780","msgtype":"m.text"},"ts":1390945258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I think I just learned custom elements invented nanotasks","msgtype":"m.text"},"ts":1390946666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?!?","msgtype":"m.text"},"ts":1390946770000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://w3c.github.io/webcomponents/spec/custom/#enqueuing-and-invoking-callbacks","msgtype":"m.text"},"ts":1390946775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"When transitioning back from the user agent code to script, pop the element queue from the processing stack and invoke callbacks in that queue.\"","msgtype":"m.text"},"ts":1390946805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That should really be discussed in the context of TC39 I think","msgtype":"m.text"},"ts":1390946822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what does that even mean, exactly?","msgtype":"m.text"},"ts":1390946848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to do something similar in HTML we needed a bunch of WebIDL hooks","msgtype":"m.text"},"ts":1390946868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it means that x.do(); /* nanotask */ x.doElse();","msgtype":"m.text"},"ts":1390946873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"setTimeout(window.open, 0, ...); does this happen when the timeout fires at all?","msgtype":"m.text"},"ts":1390946902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well that is a different problem I think","msgtype":"m.text"},"ts":1390946949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1390947235000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about dispatchEvent(), does it \"transition back from user agent code to script\"? or vice versa? or both?","msgtype":"m.text"},"ts":1390947270000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm those nanotasks look bad","msgtype":"m.text"},"ts":1390947842000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"That's not what it means.  It's meant to be referring to microtask checkpoints.","msgtype":"m.text"},"ts":1390948537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm almost certain; if I'm wrong, we shoudl complain harder.","msgtype":"m.text"},"ts":1390948551000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm going to raise it on the list in a bit","msgtype":"m.text"},"ts":1390948648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if we have interop on what <script>document.write(\"uD800uDC80\");</script> does.","msgtype":"m.emote"},"ts":1390948747000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because having that actually insert U+10080 would be so much nicer.","msgtype":"m.text"},"ts":1390948760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so... why did we not make </caption> optional?","msgtype":"m.text"},"ts":1390949049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"these are neither nanotasks, nor microtask checkpoints","msgtype":"m.text"},"ts":1390950213000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"they are simply an auto-release pool-like barrier between UA code and user code","msgtype":"m.text"},"ts":1390950235000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: given mutation events you'll have to define that a lot better","msgtype":"m.text"},"ts":1390950278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if you call an array's \"sort\" method with a user-code function that manipulates the DOM, do they run between each call to the sort function?","msgtype":"m.text"},"ts":1390950293000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorter function, rather?","msgtype":"m.text"},"ts":1390950297000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"theoretically yes, but in practice no, because sort function itself is incapable of introducing the relevant DOM changes","msgtype":"m.text"},"ts":1390950358000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1390950370000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how? :)","msgtype":"m.text"},"ts":1390950386000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"the sort function can do anything, even opening new browsing contexts and creating new documents","msgtype":"m.text"},"ts":1390950389000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just user code","msgtype":"m.text"},"ts":1390950393000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"array.sort(function (a, b) { ...do whatever you want... });","msgtype":"m.text"},"ts":1390950410000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by sort function I meant Array.sort","msgtype":"m.text"},"ts":1390950414000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie did too","msgtype":"m.text"},"ts":1390950420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Array.sort in itself does not do any dom changes.","msgtype":"m.text"},"ts":1390950436000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1390950437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even if you apply it to an Element? it's a generic function, no?","msgtype":"m.text"},"ts":1390950459000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: so what you're saying is that you are monkey patching methods and properties that do changes to the DOM","msgtype":"m.text"},"ts":1390950462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: to process your nanotasks or whatever you want to call them","msgtype":"m.text"},"ts":1390950474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: without defining that in detail","msgtype":"m.text"},"ts":1390950479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in practice, there are actually only a few methods need that. See CustomElementCallbacks tag on the Blink idls: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/core/dom/Document.idl&q=Document.idl&sq=package:chromium&type=cs","msgtype":"m.text"},"ts":1390950497000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"surely if you apply JS Array.sort() to a proxy object whose user-specified internal methods ([[Get]], etc) manipulate the DOM...","msgtype":"m.text"},"ts":1390950530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You don't even need proxies. ES5's getters/setters are enough even with the default comparator","msgtype":"m.text"},"ts":1390950578000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: it's not at all about what the proxy object does. It's what the Array.sort itself does internally. If it's applied to another object, that object will have the barriers around the things that trigger changes.","msgtype":"m.text"},"ts":1390950608000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1390950618000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sounds like it'd be better to define it in terms of those barriers then","msgtype":"m.text"},"ts":1390950637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rather than all user->ua code transitions","msgtype":"m.text"},"ts":1390950651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was actually thinking of moving this barrier thing into a separate abstraction. It's very primitively defined in the custom elements spec","msgtype":"m.text"},"ts":1390950652000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1390950660000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Yeah, you want to just define this in the relevant methods I think","msgtype":"m.text"},"ts":1390950677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because all rendering engines actually have these types of things.","msgtype":"m.text"},"ts":1390950682000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"We do have it, but not exposed to web content","msgtype":"m.text"},"ts":1390950699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the way it works in Gecko is similar to mutation events, which we just tried to remove","msgtype":"m.text"},"ts":1390950719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right. And I avoided it as an exposed API in custom elements","msgtype":"m.text"},"ts":1390950721000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Well these callbacks are certainly exposed","msgtype":"m.text"},"ts":1390950736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's different from mutation events, because the callbacks are actually only invoked at a safe point","msgtype":"m.text"},"ts":1390950746000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that's the whole point of the barrier","msgtype":"m.text"},"ts":1390950754000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Well, you're saying they are the same as what engines have, but you saying that means they are not","msgtype":"m.text"},"ts":1390950769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. appendChild(node) will remove node from its parent first and then run adopt; we'd run code after the removal","msgtype":"m.text"},"ts":1390950793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That would be problematic","msgtype":"m.text"},"ts":1390950800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we","msgtype":"m.text"},"ts":1390950802000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I meant Gecko there","msgtype":"m.text"},"ts":1390950811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will run the code just before appendChild method returns","msgtype":"m.text"},"ts":1390950813000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"no problems :)","msgtype":"m.text"},"ts":1390950830000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Well the way this is defined is problems imo","msgtype":"m.text"},"ts":1390950844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should just patch the methods this affects to make it way more transparent","msgtype":"m.text"},"ts":1390950860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's not necessarily the best strategy. Every time you add a new DOM API, you'd have to patch up the spec.","msgtype":"m.text"},"ts":1390950892000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: the easiest thing to do is to say -- do this for all UA code and leave UA vendors opportunities to optimize when it's certain that the callbacks won't be queued.","msgtype":"m.text"},"ts":1390950928000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Not if we move to a world where more is self-hosted","msgtype":"m.text"},"ts":1390950955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the lines become blurry","msgtype":"m.text"},"ts":1390950959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure. Then we will need this abstraction as a separate API","msgtype":"m.text"},"ts":1390950975000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's not like the current solution closes this path","msgtype":"m.text"},"ts":1390950984000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Also having to know that a callback can run at the end of a method and not having it defined there is a pretty bad way to write a specification imo","msgtype":"m.text"},"ts":1390950986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You have effectively changed a large set of the default library methods, without telling the people who define those methods","msgtype":"m.text"},"ts":1390951051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1390951072000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"what's a default library?","msgtype":"m.text"},"ts":1390951102000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"as I said before, the alternative is to create a strict dependency on all possible things that could cause DOM changes. I don't think that's much better either.","msgtype":"m.text"},"ts":1390951229000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"why is that not better?","msgtype":"m.text"},"ts":1390951246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, ideally, this would just be in the DOM spec, no? presumably that's what we're going to do eventually","msgtype":"m.text"},"ts":1390951259000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because that's not an easily bound set","msgtype":"m.text"},"ts":1390951260000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"what about CSSOM, Editing, Selection, etc?","msgtype":"m.text"},"ts":1390951277000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"what about them?","msgtype":"m.text"},"ts":1390951287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wouldn't they be defined in terms of the DOM algorithms?","msgtype":"m.text"},"ts":1390951298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would that matter?","msgtype":"m.text"},"ts":1390951309000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"well if the logic is in the DOM algorithms, that would just trigger them, i guess","msgtype":"m.text"},"ts":1390951332000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't really understand what we're trying to do here, so my advice may not be useful","msgtype":"m.text"},"ts":1390951345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what matters is that anytime anyone decides to invent a supplemental IDL, I'd have to be on the lookout for that spec and evaluate whether their methods need to be explicitly mentioned in the spec","msgtype":"m.text"},"ts":1390951346000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"well, they have to be on the lookout for whether they need to worry about the DOM spec, rather, but yeah","msgtype":"m.text"},"ts":1390951390000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we all have to make sure we're aware of each other's work","msgtype":"m.text"},"ts":1390951399000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: there maybe something to that. The spec has a well-defined set of DOM manipulations that causes callbacks to enqueue","msgtype":"m.text"},"ts":1390951482000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"all DOM manipulations go through the DOM spec","msgtype":"m.text"},"ts":1390951497000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1390951501000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"the only issue is when the callbacks are invoked.","msgtype":"m.text"},"ts":1390951514000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so if you monkeypatch the DOM spec, any other new spec that does DOM manipulations is supported for free, right?","msgtype":"m.text"},"ts":1390951519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wait, you're calling user code here?","msgtype":"m.text"},"ts":1390951537000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the queueing, right. I already did that","msgtype":"m.text"},"ts":1390951538000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"in the middle of other user code?","msgtype":"m.text"},"ts":1390951548000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1390951553000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: you need to be on the lookout anyway, because you implemented this with an IDL extension","msgtype":"m.text"},"ts":1390951557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess i don't understand the issue here","msgtype":"m.text"},"ts":1390951566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"me neither :)","msgtype":"m.text"},"ts":1390951571000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: it's better if we centralize that lookout, than do it on a per engine level","msgtype":"m.text"},"ts":1390951572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: the idea is to call user code just before you return from certain method calls","msgtype":"m.text"},"ts":1390951626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: bz pointed out that you pass the mutation events problem on to JS implemented libraries","msgtype":"m.text"},"ts":1390951642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dglazkov just said that it wasn't that","msgtype":"m.text"},"ts":1390951645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I guess I want to understand what is the \"mutation events problem\", then. It doesn't fit my understanding of what I thought it was.","msgtype":"m.text"},"ts":1390951710000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: e.g. if you appendChild() a node and then its leftView callback calls remove child and then its enteredView callback will be confused","msgtype":"m.text"},"ts":1390951715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, it's not","msgtype":"m.text"},"ts":1390951730000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"please read the spec","msgtype":"m.text"},"ts":1390951732000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: from the perspective of the JS library","msgtype":"m.text"},"ts":1390951749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the whole notion of the queues is to ensure the consistent sequence of callbacks","msgtype":"m.text"},"ts":1390951750000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: not the browser","msgtype":"m.text"},"ts":1390951753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, that's exactly what I am talking about, too","msgtype":"m.text"},"ts":1390951791000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"why aren't we just using the mutation observers here?","msgtype":"m.text"},"ts":1390951794000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sounds rather similar...","msgtype":"m.text"},"ts":1390951799000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mutation observers are too late","msgtype":"m.text"},"ts":1390951808000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"too late for what?","msgtype":"m.text"},"ts":1390951813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for developers: var foobar= document.createElement(\"foo-bar\"); foobar.doStuff();","msgtype":"m.text"},"ts":1390951847000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"if you use mutation observers, doStuff will be operating on an uninitialized object.","msgtype":"m.text"},"ts":1390951869000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"because createdCallback will be called at a microtask checkpoint","msgtype":"m.text"},"ts":1390951881000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sure, when you _create_ an element that's bound you need to run its constructor","msgtype":"m.text"},"ts":1390951907000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I am happy to explain the element/callback queues and how they help the JS developer keep a consistent view of the world.","msgtype":"m.text"},"ts":1390951925000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: the key here is that as long as JS developer listens to callbacks, their sequence is always correct. There is no inconsistent state.","msgtype":"m.text"},"ts":1390951991000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"well an element is only created once, right?","msgtype":"m.text"},"ts":1390952021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why is there a queue?","msgtype":"m.text"},"ts":1390952031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"surely it should just be synchronous with element creation","msgtype":"m.text"},"ts":1390952038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: so I have a custom element X that has all the lifecycle callbacks","msgtype":"m.text"},"ts":1390952097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: expand this example to when I innerHTML \"<foo-bar>\" and then try to query for it with querySelector","msgtype":"m.text"},"ts":1390952101000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: how is that different?","msgtype":"m.text"},"ts":1390952115000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: I have two globals each with a document (A, B), X is part of B","msgtype":"m.text"},"ts":1390952119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: I then do appendChild(X) in A","msgtype":"m.text"},"ts":1390952139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's two globals? can you explain a bit?","msgtype":"m.text"},"ts":1390952159000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: A is a document and B is <iframe>.contentDocument nested in A","msgtype":"m.text"},"ts":1390952194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1390952201000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: I was assuming the callbacks leftView and enteredView would invoke at that point","msgtype":"m.text"},"ts":1390952255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it depends on where A is registered","msgtype":"m.text"},"ts":1390952285000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"where X is registered, sorry :)","msgtype":"m.text"},"ts":1390952303000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"In B","msgtype":"m.text"},"ts":1390952323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it's simpler we could first consider A and B being in the same global","msgtype":"m.text"},"ts":1390952408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, let's do it","msgtype":"m.text"},"ts":1390952492000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Okay, I figured you would take it from here, but am I correct that leftView and enteredView would be called before appendChild(X) returns?","msgtype":"m.text"},"ts":1390952586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In that order?","msgtype":"m.text"},"ts":1390952593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has to go for a bit in 10 minutes unfortunately","msgtype":"m.emote"},"ts":1390952611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then the question is if the leftView callback removes X again, how will enteredView not be confused? Will it be removed from the callback queue?","msgtype":"m.text"},"ts":1390952653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: ^","msgtype":"m.text"},"ts":1390952671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it won't be confused, because there is an element queue, which drains all callbacks per element at the time of invocation. This ensures a consistent sequence of callbacks.","msgtype":"m.text"},"ts":1390952812000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so yes, just before appendChild(X) returns, X will see a sequence of callbacks. If a callback code itself enqueues another callback, that callback goes to the end of the callback queue for this element","msgtype":"m.text"},"ts":1390952897000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"if you'd like, we can VC/Skype/whatevs","msgtype":"m.text"},"ts":1390952916000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"encourages the use of archived communication methods so that other people can learn from the discussion","msgtype":"m.emote"},"ts":1390952950000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we can do hangout on air and post a youtube video of me struggling with a felt marker","msgtype":"m.text"},"ts":1390953072000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"+1 for this if it involves making fun of dglazkov","msgtype":"m.text"},"ts":1390953125000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well a hangout on air isn't as convenient as an irc conversation, but it's a step up from a private vc :-)","msgtype":"m.text"},"ts":1390953297000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: I'll get back to you on this I guess","msgtype":"m.text"},"ts":1390953305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: I have to do something now","msgtype":"m.text"},"ts":1390953312000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no worries. I have to run, too","msgtype":"m.text"},"ts":1390953320000,"senderName":"dglazkov","senderId":"dglazkov@irc"}
]