[
{"content":{"body":"wow, you sure have a lot of tests","msgtype":"m.text"},"ts":1402279995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"woot, i finally found a real bug in the parser tests","msgtype":"m.text"},"ts":1402285793000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wow, no, it's a spec bug","msgtype":"m.text"},"ts":1402286076000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fixes the spec","msgtype":"m.emote"},"ts":1402287160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like validator.nu already does this per the new spec","msgtype":"m.text"},"ts":1402287172000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1402287199000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"just pretend it was always this way","msgtype":"m.text"},"ts":1402287212000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"bummo, finally got to a test that relies on the script data less than sign state","msgtype":"m.text"},"ts":1402288496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bummo","msgtype":"m.text"},"ts":1402288613000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"woops, the last checkin's message is bogus","msgtype":"m.text"},"ts":1402292643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"damnit","msgtype":"m.text"},"ts":1402292649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"quick, force-push","msgtype":"m.text"},"ts":1402292694000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"before it's too late!","msgtype":"m.text"},"ts":1402292703000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"don't think svn supports that, does it?","msgtype":"m.text"},"ts":1402292711000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: no, but I think you *can* edit the commit message","msgtype":"m.text"},"ts":1402292796000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, using svnadmin apparently","msgtype":"m.text"},"ts":1402292804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder where the repo actually is...","msgtype":"m.text"},"ts":1402292815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could do strange things to git mirrors ...","msgtype":"m.text"},"ts":1402292821000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"aha, here we go","msgtype":"m.text"},"ts":1402292829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"eh, it's the checkin message","msgtype":"m.text"},"ts":1402292841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how bad could it be","msgtype":"m.text"},"ts":1402292844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"history would diverge depending on whether or not they saw the commit with the old message","msgtype":"m.text"},"ts":1402292915000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'm sure svn has full support for being terrible just like git does","msgtype":"m.text"},"ts":1402292941000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there, history has been revised.","msgtype":"m.text"},"ts":1402293137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"la la la.","msgtype":"m.text"},"ts":1402293138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh great, i found a bug in my tokeniser that the tokeniser tests didn't catch","msgtype":"m.text"},"ts":1402293322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1402293323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok well now that i've broken everything it's time for bed. nn.","msgtype":"m.text"},"ts":1402293331000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"RESOLVED: Specs that define obsolete features don't need to test those features to exit CR.\"","msgtype":"m.text"},"ts":1402296023000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"foolip: apparently Hixie changed a commit message in SVN, will that have bad effects on your mirror?","msgtype":"m.text"},"ts":1402297833000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Ms2ger: what, for real?","msgtype":"m.text"},"ts":1402297892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Part III of the Seoul notes","msgtype":"m.text"},"ts":1402298050000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh wow, this was not from the HTML WG?","msgtype":"m.text"},"ts":1402298088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1402298092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, CSS","msgtype":"m.text"},"ts":1402298101000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is not impressed","msgtype":"m.emote"},"ts":1402298104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You should know I don't pay attention to the HTMLWG :)","msgtype":"m.text"},"ts":1402298180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So is the table display model now obsolete?","msgtype":"m.text"},"ts":1402298182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how did he do that?","msgtype":"m.text"},"ts":1402300105000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but more importantly, which commit?","msgtype":"m.text"},"ts":1402300119000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: the last commit I think","msgtype":"m.text"},"ts":1402300126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me check","msgtype":"m.text"},"ts":1402300182000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"do you know what the old and new message was?","msgtype":"m.text"},"ts":1402300246000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: old is what http://html5.org/r/8665 has","msgtype":"m.text"},"ts":1402300285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: http://krijnhoetmer.nl/irc-logs/whatwg/20140609#l-142","msgtype":"m.text"},"ts":1402300332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: with Anolis, why if I have <dfn>origin</dfn> I cannot refer to an origin defined elsehwere?","msgtype":"m.text"},"ts":1402300368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: why is data-anolis-spec not stronger?","msgtype":"m.text"},"ts":1402300380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mm","msgtype":"m.text"},"ts":1402300381000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's probably because those are implemented in different processes","msgtype":"m.text"},"ts":1402300424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Try https://pastebin.mozilla.org/5378908","msgtype":"m.text"},"ts":1402300522000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll hack around it","msgtype":"m.text"},"ts":1402300539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I want to switch to Bikeshed at some point anyway","msgtype":"m.text"},"ts":1402300571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: html-mirror is now in sync with svn, but you'll probably need to force update your end since it's not a fast-forward commit","msgtype":"m.text"},"ts":1402301121000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: is there a way I can always do that?","msgtype":"m.text"},"ts":1402301224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: so I don't have to do it if it happens again","msgtype":"m.text"},"ts":1402301230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, you could fetch and reset --hard in your script","msgtype":"m.text"},"ts":1402301407000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I can't get it to change","msgtype":"m.text"},"ts":1402302278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I tried git fetch --force; git reset --hard","msgtype":"m.text"},"ts":1402302288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: also tried git pull --force","msgtype":"m.text"},"ts":1402302306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: try simply git fetch and git reset --hard origin/master","msgtype":"m.text"},"ts":1402302398000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(assuming you're on the master branch)","msgtype":"m.text"},"ts":1402302408000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: that seems to have fixed it","msgtype":"m.text"},"ts":1402302566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: should I just change my script to that then?","msgtype":"m.text"},"ts":1402302606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess if Hixie does it again I'll do that","msgtype":"m.text"},"ts":1402302619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam|away: doesn't webidl allow single quotes? https://dvcs.w3.org/hg/csswg/rev/aec2cc899bab","msgtype":"m.text"},"ts":1402302845000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://heycam.github.io/webidl/#prod-string","msgtype":"m.text"},"ts":1402302910000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Apparently not","msgtype":"m.text"},"ts":1402302929000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1402302937000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i actually run a webidl checker in the build process but it's flooded with missing interface type definitions so i missed that thing","msgtype":"m.text"},"ts":1402302985000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: there's a small risk that if my mirror breaks completely, reset --hard on your end will blindly follow along, leaving the web interface also broken until someone notices","msgtype":"m.text"},"ts":1402303334000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I don't think it's going to matter much what you do, it'll be some work either way","msgtype":"m.text"},"ts":1402303357000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: okay, left it as is for now","msgtype":"m.text"},"ts":1402304530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the css \"obsolete\" was in the context of features that are non-web and must not be implemented by browsers","msgtype":"m.text"},"ts":1402304955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: ^","msgtype":"m.text"},"ts":1402304956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess it wouldn't hurt with negative tests, but OTOH i think it's fine to exit CR always","msgtype":"m.text"},"ts":1402305115000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1402306049000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe I'll merge XMLHttpRequest in sooner. There's a lot of potential code sharing between XMLHttpRequest and fetch()","msgtype":"m.text"},"ts":1402306341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks what fetch() looks like","msgtype":"m.emote"},"ts":1402306420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, GlobalFetch,  there it is","msgtype":"m.text"},"ts":1402306607000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: response.url, what did we decide that would be for constructed responses?","msgtype":"m.text"},"ts":1402306622000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the empty string, underlying object would be null","msgtype":"m.text"},"ts":1402306644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, do you want to implement Promises in Servo? :)","msgtype":"m.text"},"ts":1402306650000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: how do you suggest i fix addListener without invoking addEventListener?","msgtype":"m.text"},"ts":1402306655000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you can use the underlying concepts just as addEventListener does","msgtype":"m.text"},"ts":1402306676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: not really","msgtype":"m.text"},"ts":1402306684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1402306717000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Would be nice if Servo did fetch() first","msgtype":"m.text"},"ts":1402306722000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Servo should do Fetch first","msgtype":"m.text"},"ts":1402306732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not it :)","msgtype":"m.text"},"ts":1402306773000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: So, if a page's CSP wanted to prevent constructed responses, we already have ways to detect that? We'd just need a CSP step after step 8 http://fetch.spec.whatwg.org/#http-fetch","msgtype":"m.text"},"ts":1402306779000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes the idea for SW / CSP is to have a new step around there","msgtype":"m.text"},"ts":1402306822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1402306852000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we still need to check if we do all the correct things with regards to redirects and such","msgtype":"m.text"},"ts":1402306861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also currently response.url will be overwritten by request.url so we might need some distinct flag","msgtype":"m.text"},"ts":1402306892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: there's a bunch of things there we need to walk through carefully","msgtype":"m.text"},"ts":1402306918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't done that, I'm mostly working on defining the API","msgtype":"m.text"},"ts":1402306937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there any reason to overwrite response.url with request.url if the fetch is invoked recursively? That may be a good way to preserve it for the final CSP check","msgtype":"m.text"},"ts":1402307032000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes, to make sure it's correct with respect to redirects","msgtype":"m.text"},"ts":1402307058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: otherwise e.g. responseURL on XMLHttpRequest would be wrong","msgtype":"m.text"},"ts":1402307074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1402307077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: http://fetch.spec.whatwg.org/#fetchbodystream","msgtype":"m.text"},"ts":1402309077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wfm!","msgtype":"m.text"},"ts":1402309109000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the main outstanding issue now is header representation","msgtype":"m.text"},"ts":1402309874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess I'll try to tidy up everything aside from that","msgtype":"m.text"},"ts":1402309924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if you could get some people to chime in on https://github.com/slightlyoff/ServiceWorker/issues/300 that'd be great","msgtype":"m.text"},"ts":1402309947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi! Anyone here from Russian Google office in Moscow?","msgtype":"m.text"},"ts":1402311189000,"senderName":"toydestroyer","senderId":"toydestroyer@irc"},
{"content":{"body":"annevk: Is anyone aside from Jonas against your proposal?","msgtype":"m.text"},"ts":1402311891000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not sure, also unsure whether HeaderMap is still the best name if it isn't really a map","msgtype":"m.text"},"ts":1402311916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe just Headers","msgtype":"m.text"},"ts":1402311942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Headers works, or HeaderData like FormData. I prefer just Headers.","msgtype":"m.text"},"ts":1402312103000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I think the proposal is spot on though. I don't think we need to make it a Map","msgtype":"m.text"},"ts":1402312134000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Should we namespace all these classes? FetchHeaders, FetchRequest?","msgtype":"m.text"},"ts":1402312138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At the moment some are namespaced, some are not","msgtype":"m.text"},"ts":1402312152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not keen on FetchRequest etc. Should it be HTTPRequest, or is it safe to assume http for browser requests?","msgtype":"m.text"},"ts":1402312444000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although HTTPHeaders is clear","msgtype":"m.text"},"ts":1402312463000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: HTTP is wrong for fetch()","msgtype":"m.text"},"ts":1402312464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: fetch() takes data URLs and such too","msgtype":"m.text"},"ts":1402312483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, but when I do new Response(body) I'm creating an HTTP response","msgtype":"m.text"},"ts":1402312517000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"anyway, I'm happy with just Response","msgtype":"m.text"},"ts":1402312525000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not sure I see it that way","msgtype":"m.text"},"ts":1402312536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. Fetch (the spec) creates responses for data URLs too, they look like HTTP responses, but naming them such seems wrong","msgtype":"m.text"},"ts":1402312558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fair","msgtype":"m.text"},"ts":1402312624000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I agree with your proposal fwiw","msgtype":"m.text"},"ts":1402312950000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: so to('blob') ignores its argument if someone has previously called to('arraybuffer')? I think throwing an error would be better?","msgtype":"m.text"},"ts":1402315064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"errr return a rejected promise, of course","msgtype":"m.text"},"ts":1402315305000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: > If the given value is not in the range 200 to 599, throw a TypeError. // should be RangeError","msgtype":"m.text"},"ts":1402316138000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you mean it would only work once?","msgtype":"m.text"},"ts":1402316266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^","msgtype":"m.text"},"ts":1402316285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: happy b-day btw","msgtype":"m.text"},"ts":1402316311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Ohh, happy birthday! Are you allowed to drink in pubs yet? :P","msgtype":"m.text"},"ts":1402316344000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: thanks :). and, gtg, but yes, once you consume the stream, it's all gone. can discuss more later, maybe will open an issue or something","msgtype":"m.text"},"ts":1402316367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: If streams can only be consumed once, then to() should reject on second calling","msgtype":"m.text"},"ts":1402316371000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could make to() store the contents somewhere, but it's prolly better to just throw it away I guess","msgtype":"m.text"},"ts":1402317806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: throwing away sounds better. More compatible with streams and better for memory","msgtype":"m.text"},"ts":1402317851000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1402318409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: you must be new here (re https://github.com/ResponsiveImagesCG/picture-element/issues/198 )","msgtype":"m.text"},"ts":1402318575000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: i guess I should go see the topic ^ now?","msgtype":"m.text"},"ts":1402318606000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: yes :-)","msgtype":"m.text"},"ts":1402318619000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: so in this case i'd expect people to use <picture> and test in a browser without support for <picture> (using picturefill or so) and conclude that everything is fine","msgtype":"m.text"},"ts":1402318690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but maybe it's not much of an issue","msgtype":"m.text"},"ts":1402318718000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(or they test in a browser with support for <picture> but don't test dragging)","msgtype":"m.text"},"ts":1402318746000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: should Response.redirect() throw RangeError too?","msgtype":"m.text"},"ts":1402322359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aitp","msgtype":"m.text"},"ts":1402323857000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"irc clients mang, they're not very good","msgtype":"m.text"},"ts":1402323907000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hey caitp","msgtype":"m.text"},"ts":1402325438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good morning MikeSmith senpai","msgtype":"m.text"},"ts":1402325541000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1402325554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: been meaning to ask you about https://github.com/w3c/web-platform-tests/pull/981","msgtype":"m.text"},"ts":1402325687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does that need review from annevk maybe?","msgtype":"m.text"},"ts":1402325698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh I see Simon commented on it","msgtype":"m.text"},"ts":1402325731000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there was an issue opened about it on fetch or xhr, I forget","msgtype":"m.text"},"ts":1402325752000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402325775000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ya RangeError there too I think.","msgtype":"m.text"},"ts":1402326412000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: use GitHub issues and link to them from the top :)","msgtype":"m.text"},"ts":1402326419000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: don't really want to migrate the existing setup","msgtype":"m.text"},"ts":1402326477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"From v0.11.6 I'm waiting for direct proxies in node..now we are at v0.11.13 still they havn arrived..:/ but why?","msgtype":"m.text"},"ts":1402335184000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: nobody is working on proxies in V8.","msgtype":"m.text"},"ts":1402335834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://code.google.com/p/v8/issues/detail?id=1543","msgtype":"m.text"},"ts":1402335862000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, Holy Goodness, it was reported on Jul 7, 2011! :(","msgtype":"m.text"},"ts":1402335979000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: implementer priorities are what they are... age of a feature doesn't really make much of a difference.","msgtype":"m.text"},"ts":1402336074000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"2011 is nothing","msgtype":"m.text"},"ts":1402336111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why are they finding it hard to sync up!? AFAIK SpiderMonkey is the only one which is almost up to the mark...","msgtype":"m.text"},"ts":1402336195000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"people have a lot to work on?","msgtype":"m.text"},"ts":1402336220000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"But why have Proxy.create()? Rather remove it.","msgtype":"m.text"},"ts":1402336259000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"annevk: Context for \"obsolete doesn't need to be tested\" is some property values that we're only defining in an informative appendix as having been supported by some printers, never browsers.","msgtype":"m.text"},"ts":1402336267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SpiderMonkey also seems more willing to push out mostly-compliant, but unoptimized, versions of ES6 features.","msgtype":"m.text"},"ts":1402336268000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hemanth: they don't have Proxy.create() unless you turn on flags","msgtype":"m.text"},"ts":1402336282000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: yeah, zcorpan mentioned that, I guess that's fine","msgtype":"m.text"},"ts":1402336313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, Yeah, in any case for most of the ES6 features we need to turn on the flag","msgtype":"m.text"},"ts":1402336329000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"I can understand it's tough for all the implementer to be in sync, but atleast when they are implementing a new spec, they can try to be, right? Each time a new spec is being implemented again the same mistakes are repeated....","msgtype":"m.text"},"ts":1402336520000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"annevk: Yeah, things which need to be supported by browsers obviously need testing, even if they're obsolete and not to be used by authors.","msgtype":"m.text"},"ts":1402336536000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, but I'm finding it hard to understand the underlying problem.","msgtype":"m.text"},"ts":1402336554000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: wrong channel to complain about V8","msgtype":"m.text"},"ts":1402336568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sits at a corner. ","msgtype":"m.emote"},"ts":1402336575000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"No response at #node.js; annevk. I'm not complaining, just trying to understand...","msgtype":"m.text"},"ts":1402336628000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"<pachet> hemanth: because proxies are evil and will cause all of your friends to stop talking to you","msgtype":"m.text"},"ts":1402336693000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"^ heh heh from #node.js","msgtype":"m.text"},"ts":1402336703000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"hemanth: there's no infinite resources for a project so there is some balancing between new features, improving existing features, fixing bugs, perf, security, etc.","msgtype":"m.text"},"ts":1402336727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: then there's been ongoing discussion on the proxy design over in TC39 over the past couple of years which will likely lower priority for implementing it, etc.","msgtype":"m.text"},"ts":1402336756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hemanth: age of the bug doesn't really matter, there's decade old bugs that haven't been fixed yet","msgtype":"m.text"},"ts":1402336773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for the insight annevk.","msgtype":"m.text"},"ts":1402336919000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"makes a note in his diary : \"So it's all about implementer priorities and finite resources.\"","msgtype":"m.emote"},"ts":1402336950000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"that's a recurring theme around here","msgtype":"m.text"},"ts":1402336982000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1402337017000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"well \"If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move on to the next one\" is a huge pain in the neck...","msgtype":"m.text"},"ts":1402337062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1402337065000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i guess the tree constructor just has to set a flag on the tokeniser","msgtype":"m.text"},"ts":1402337164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Can anyone state an example for an exotic object?","msgtype":"m.text"},"ts":1402337701000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"Window","msgtype":"m.text"},"ts":1402337701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(right?)","msgtype":"m.text"},"ts":1402337701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or no?)","msgtype":"m.text"},"ts":1402337702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[]?","msgtype":"m.text"},"ts":1402337702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Window heh heh yup, [] not sure.","msgtype":"m.text"},"ts":1402337750000,"senderName":"hemanth","senderId":"hemanth@irc"},
{"content":{"body":"yay, feedback from Microsoft","msgtype":"m.text"},"ts":1402342964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Domenic: if to() reads all, what happens if you then store it?","msgtype":"m.text"},"ts":1402344058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: Domenic: there won't be anything, that seems kinda sad","msgtype":"m.text"},"ts":1402344066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean, \"then store it\"?","msgtype":"m.text"},"ts":1402346467000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"on http://www.w3.org/TR/html-markup/input.button.html the constraints and admonitions make it seem like list is a valid attribute. While it does not mention the list attribute as a valid attribute in the first half of the document, adding \"The list attribute of the input element must refer to a datalist element.\" on the button type page makes it seem like it would actually do something. Does anyone know who edits these pages, and if it makes sense to bu","msgtype":"m.text"},"ts":1402350906000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"them to remove that line?","msgtype":"m.text"},"ts":1402350907000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"estellevw: did you see the abstract at http://www.w3.org/TR/html-markup/Overview.html ?","msgtype":"m.text"},"ts":1402351063000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nope. i did not. thanks","msgtype":"m.text"},"ts":1402351084000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"wow. those pages aren't as informative as the archive. I need to do some updating. (Anyone have a time traveler I can borrow so I can find the time.)","msgtype":"m.text"},"ts":1402351261000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"hm, that's odd","msgtype":"m.text"},"ts":1402357961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my mail to es-discuss didn't make the archives?","msgtype":"m.text"},"ts":1402357965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tries sending it again","msgtype":"m.emote"},"ts":1402358171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey anyone know how we're doing with dropping mutation events?","msgtype":"m.text"},"ts":1402358356000,"senderName":"Hixie","senderId":"Hixie@irc"}
]