[
{"content":{"body":"Anyone awake that can rubberstamp https://github.com/whatwg/meta/pull/167?","msgtype":"m.text"},"ts":1587533559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On the one hand, I kinda hope nobody writes nested data URL dedicated workers, but on the other hand, I kinda want to test it does the right thing now...","msgtype":"m.text"},"ts":1587539173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: question about [[Class]], doesn't [[PlatformBrand]] or whatever we ended up calling it not also give that? Or is it different for prototype objects?","msgtype":"m.text"},"ts":1587551908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(more of a curiosity; I'm personally on train Chromium with respect to this issue)","msgtype":"m.text"},"ts":1587551954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks MikeSmith!","msgtype":"m.text"},"ts":1587554711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cheers","msgtype":"m.text"},"ts":1587558518000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: in ES5 Object.prototype.toString was defined to return \"object [[Class]]\", so changing [[Class]] would magically (i.e. non-user-hookably) affect Object.prototype.toString output. We have no such connection with [[PlatformBrand]].","msgtype":"m.text"},"ts":1587561818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oooh, they all use Object.prototype.toString(), I see","msgtype":"m.text"},"ts":1587561886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"qq: are https://dom.spec.whatwg.org/ going to be immutable? (specifically https://dom.spec.whatwg.org/#dom-node-contains)","msgtype":"m.text"},"ts":1587563670000,"senderName":"bopandrade","senderId":"bopandrade@irc"},
{"content":{"body":"im wondering if i need a revision link or something","msgtype":"m.text"},"ts":1587563676000,"senderName":"bopandrade","senderId":"bopandrade@irc"},
{"content":{"body":"are [...] links going to be [...]","msgtype":"m.text"},"ts":1587563693000,"senderName":"bopandrade","senderId":"bopandrade@irc"},
{"content":{"body":"bopandrade: https://whatwg.org/working-mode#anchors","msgtype":"m.text"},"ts":1587563872000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"great, will use https://dom.spec.whatwg.org/commit-snapshots/543b7e33487be5e733b0a715eaf71d027e354a50/#interface-node in addition to the living standard one. thanks!","msgtype":"m.text"},"ts":1587564107000,"senderName":"bopandrade","senderId":"bopandrade@irc"},
{"content":{"body":"i mean, i linked the wrong anchor but you get the point","msgtype":"m.text"},"ts":1587564125000,"senderName":"bopandrade","senderId":"bopandrade@irc"},
{"content":{"body":"has there been any discussion of moving the \"part\" attribute and \"exportparts\" attributes into the HTML spec?","msgtype":"m.text"},"ts":1587564495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from https://drafts.csswg.org/css-shadow-parts/#part-attr and https://drafts.csswg.org/css-shadow-parts/#exportparts-attr","msgtype":"m.text"},"ts":1587564522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part#Browser_compatibility shows that \"part\" at least is already shipped both in Firefox and Chrome","msgtype":"m.text"},"ts":1587564620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in general about new attributes defined in other specs, we don’t seem to be following any kind of consistent process of identifying them and deciding if/when to move them into HTML","msgtype":"m.text"},"ts":1587564712000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we instead seem to be defaulting to just expecting editors of other specs to take some action at some point","msgtype":"m.text"},"ts":1587564789000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"We should do that...","msgtype":"m.text"},"ts":1587564905000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I'm still bitter about adding reflection for the attributes being blocked","msgtype":"m.text"},"ts":1587564915000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(by Apple)","msgtype":"m.text"},"ts":1587564920000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It would feel very incomplete to add the attribute to HTML with no reflection support","msgtype":"m.text"},"ts":1587564937000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess this might be split across DOM and HTML similar to https://html.spec.whatwg.org/multipage/dom.html#classes","msgtype":"m.text"},"ts":1587565485000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The objection was to string reflection, right? Perhaps we should let rniwa know about srcset; I wonder if that changes things","msgtype":"m.text"},"ts":1587566405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Alternatively, perhaps there is a thing we could use? Not entirely clear given the weirdish data model though","msgtype":"m.text"},"ts":1587566441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We've let him know about srcset","msgtype":"m.text"},"ts":1587566528000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There is no thing we could use; the data model is new","msgtype":"m.text"},"ts":1587566539000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I argued repeatedly for adding string reflection and then, if Apple wants to spec and implement something new, they can. (Like class + classList.) But he said having any string reflection at all wasn't acceptable. So without a second implementer supporting string reflection we're stuck.","msgtype":"m.text"},"ts":1587566585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: turns out I made a mistake in that wasm PR, gonna PR soonish","msgtype":"m.text"},"ts":1587567352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://github.com/web-platform-tests/wpt/pull/23172","msgtype":"m.text"},"ts":1587568433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1587568582000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: did you see Maciej's comment about Workstreams?","msgtype":"m.text"},"ts":1587586591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the easiest way to do compact is with <p>s, but ...","msgtype":"m.text"},"ts":1587586606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: doesn't seem that hard to just decrease a few margins?","msgtype":"m.text"},"ts":1587587707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: isn’t the main thing all the additional “newlines”?","msgtype":"m.text"},"ts":1587588096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I didn't catch that. I guess I will stare at the two side by side more.","msgtype":"m.text"},"ts":1587588144000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dls are easy to style now though if you use div wrappers","msgtype":"m.text"},"ts":1587588164000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you want to take that on that’d be great, but I suppose I can take a look tomorrow. I was hoping this would be over","msgtype":"m.text"},"ts":1587588343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, those seemed like really strange things to hold up the work over...","msgtype":"m.text"},"ts":1587589323000,"senderName":"Domenic","senderId":"Domenic@irc"}
]