[
{"content":{"body":"MikeSmith: I suppose template should have been parsed like foreignObject","msgtype":"m.text"},"ts":1494834806000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think all that was considered at the time","msgtype":"m.text"},"ts":1494834849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But too long ago to remember the specifics :/","msgtype":"m.text"},"ts":1494834867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or like foreignObject doesn't solve that, hmm","msgtype":"m.text"},"ts":1494834898000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1494834905000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well if we don’t want to change the parsing at this point, or can’t, then I guess we should at least change the document-conformance requirements as far as the end-tag omission rules","msgtype":"m.text"},"ts":1494834972000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1494834976000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean specifically to say that the </td> and </tr> end tags can’t be omitted if for a td or tr element that’s a child of a template element","msgtype":"m.text"},"ts":1494835031000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1494835628000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1494836133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will raise a PR for that then","msgtype":"m.text"},"ts":1494836138000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1494836144000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is currently very annoyed by http://www.unicode.org/L2/L2017/17168-utf-8-recommend.pdf","msgtype":"m.emote"},"ts":1494838146000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder how to formulate polite and well-reasoned feedback","msgtype":"m.text"},"ts":1494838162000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't feel polite at all about that at the moment","msgtype":"m.text"},"ts":1494838175000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess I'm going to argue that we know UTF-16 is bad, so we should optimize UTF-8 decode to software that uses UTF-8 internally and, therefore, we should optimize for UTF-8 *validation*","msgtype":"m.text"},"ts":1494838313000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: can't we just argue on the basis that changing something widely deployed is bad if there's no concrete benefit?","msgtype":"m.text"},"ts":1494838509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I guess I'm glad you know where to even go raise this, Unicode is rather opaque to me","msgtype":"m.text"},"ts":1494838545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: arguing from deployment isn't a great point when the argument for change involves standardizing ICU's spec violation","msgtype":"m.text"},"ts":1494838683000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I want to argue though that Unicode now owning ICU is hazardous to the credibility of spec text if ICU bugs, not spec text, rules","msgtype":"m.text"},"ts":1494838726000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I had forgotten the bit about ICU, sigh","msgtype":"m.text"},"ts":1494838766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JavaScript folks building APIs directly on top of ICU is also rather worrisome","msgtype":"m.text"},"ts":1494838823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I haven't been able to convince littledan and others of that I think","msgtype":"m.text"},"ts":1494838836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hey, now's a great time to have this conversation; Mozilla just started contracting with Igalia to work on Intl features (Zibi's been my contact), so I'll have more time to take things in whatever direction is appropriate","msgtype":"m.text"},"ts":1494838930000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"question 1: Do you think a normative reference to, not ICU but CLDR would be bad?","msgtype":"m.text"},"ts":1494838971000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"CLDR dependency seems more okay, there's some precedent for that I think","msgtype":"m.text"},"ts":1494839007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's standardized data, basically, not a standardized implementation","msgtype":"m.text"},"ts":1494839061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"question 2: If new APIs should differ from ICU, how should they? Obviously we won't replicate warts like calling something Normalizer2, but there are some basic patterns that have been copied so far, like using using a factory that holds locale data, and keeping the names when they seem reasonable","msgtype":"m.text"},"ts":1494839080000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"are these bad ideas?","msgtype":"m.text"},"ts":1494839086000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"question 3: How should we deal with OS default settings--should it somehow be serialized in a locale object (similar to current patterns), or should it just be threaded through as a complicated default, possibly in conjunction with new options that explicitly opt into it (Zibi's been suggesting this; apparently the suggestion came from MS)","msgtype":"m.text"},"ts":1494839151000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I think in terms of API design it's always good to check how various systems solve it, but ultimately you want something that looks familiar to JavaScript developers; if what ICU does matches that it doesn't necessarily seem problematic to copy patterns","msgtype":"m.text"},"ts":1494839256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As for that last question, OS defaults are typically exposed on the Navigator object somehow","msgtype":"m.text"},"ts":1494839289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"question 4: Should we add CLDR pattern strings for datetime and number formatting? Should we add parsing? We've been leaving these out so far, in order to avoid being too ICU-like","msgtype":"m.text"},"ts":1494839332000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"the claim is that, without pattern strings, there's no realistic way to expose the OS defaults on the navigator","msgtype":"m.text"},"ts":1494839355000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: does Microsoft participate actively?","msgtype":"m.text"},"ts":1494839473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not at the moment; they're too tied up in investigating switching to ICU","msgtype":"m.text"},"ts":1494839494000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: so far they have the only non-ICU implementation that's somewhat competitive in terms of features","msgtype":"m.text"},"ts":1494839497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh my","msgtype":"m.text"},"ts":1494839501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OTOH we have community members who are building various polyfills based on CLDR and not ICU","msgtype":"m.text"},"ts":1494839522000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I wish Mozilla had more resources so we could write an impl in Rust","msgtype":"m.text"},"ts":1494839531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like Mathias Bynens and the Intl.js folks","msgtype":"m.text"},"ts":1494839538000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"well, I was just invited to the Mozilla all-hands for this Intl work, and then un-invited since it's not Quantum; maybe if a Rust rewrite were added into the picture, Intl would suddenly be Quantum and everyone would get resources...","msgtype":"m.text"},"ts":1494839605000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"currently Zibi's working on using ICU *more* rather than Mozilla's legacy stuff for things were functionality overlaps; Jungshik Shin is doing the same within V8","msgtype":"m.text"},"ts":1494839669000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"since the non-ICU stuff tends to be a worse implementation","msgtype":"m.text"},"ts":1494839681000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Well, hsivonen just wrote a new encoding library in Rust that seems to be better than what ICU offers, which is what prompted my thing above","msgtype":"m.text"},"ts":1494839740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, FWIW V8 doesn't use ICU's UTF-8 decoder and isn't looking at switching","msgtype":"m.text"},"ts":1494839758000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"But we didn't use ICU before, we used iconv","msgtype":"m.text"},"ts":1494839773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, plus patches","msgtype":"m.text"},"ts":1494839784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, that thread is sad","msgtype":"m.text"},"ts":1494839800000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: anyway, I guess we are mostly on the same page, I just hope that everyone using ICU underneath won't make future refactorings extremely hard","msgtype":"m.text"},"ts":1494839854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hope so too. The Intl spec tries to be sufficiently detailed so it should be possible. Do you think it meets that goal?","msgtype":"m.text"},"ts":1494839894000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(actually, IMO the Intl spec is too detailed now, tying down some things to a wrong default that implementations should be allowed to get right)","msgtype":"m.text"},"ts":1494839917000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I haven't reviewed it in enough detail to say, I probably should one day","msgtype":"m.text"},"ts":1494840405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. my email doesn't show up at http://unicode.org/pipermail/unicode/2017-May/date.html","msgtype":"m.text"},"ts":1494843944000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe stuck in human moderation or achive view slow to update","msgtype":"m.text"},"ts":1494843967000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: argument from deployment works, actually, since Blink and WebKit don't use the ICU UTF-8 decoder","msgtype":"m.text"},"ts":1494844003000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: uconv isn't iconv plus patches","msgtype":"m.text"},"ts":1494844090000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: we use iconv only for non-Android, non-Mac *nix filenames","msgtype":"m.text"},"ts":1494844194000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"JakeA: when you have time, please see https://stackoverflow.com/questions/43974704/service-workers-fetch-event-listener-what-does-it-catch and consider posting an answer","msgtype":"m.text"},"ts":1494844232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I tried myself http://stackoverflow.com/a/43976229/441757 but that’s basically just repeating what’s already explained at MDN and the OP seems to indicate they’re seeing some behavior that doesn’t conform to the requirements","msgtype":"m.text"},"ts":1494844328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but they’re seeing it in both Firefox and Chrome so maybe there’s something I’m misunderstanding","msgtype":"m.text"},"ts":1494844361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk:","msgtype":"m.text"},"ts":1494844369000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ⬆","msgtype":"m.text"},"ts":1494844375000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: oh, uconv is its own thing, ta","msgtype":"m.text"},"ts":1494845238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: added an answer","msgtype":"m.text"},"ts":1494845375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1494845386000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"takes a look","msgtype":"m.emote"},"ts":1494845390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, d'oh navigations","msgtype":"m.text"},"ts":1494845425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1494845429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: potentially with Origin policy we could do the \"request with me without credentials always\" thing, but bleh","msgtype":"m.text"},"ts":1494845525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: *shrug* It would be nice if the problem statement was a bit crisper. It's not clear what folks want.","msgtype":"m.text"},"ts":1494845567000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: timbl doesn't like varying on credentials; he thinks the input should be just a URL, nothing else","msgtype":"m.text"},"ts":1494845630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I now I got notification that my email got stuck in moderation","msgtype":"m.text"},"ts":1494845651000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mkwst: and the TAG apparently doesn't just tell me no so now there's this debate-by-proxy","msgtype":"m.text"},"ts":1494845660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/me/him/ oops","msgtype":"m.text"},"ts":1494845670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: *shrug* Like I said on the bug, I don't think something like `Access-Control-Allow-Origin: omg-its-totally-public-did-you-make-sure-this-is-sane?` is out of the question.","msgtype":"m.text"},"ts":1494845766000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But I'm reluctant to add it without something more compelling than \"Tim doesn't want to add options to `fetch()`.\"","msgtype":"m.text"},"ts":1494845797000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'd actually like that implementers pick up on existing extensions first","msgtype":"m.text"},"ts":1494845887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"By \"extension\" do you mean \"redirect behavior\"?","msgtype":"m.text"},"ts":1494845960000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that and also allowing * for more headers","msgtype":"m.text"},"ts":1494845979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know some folks on our loading team wanted to look at that.","msgtype":"m.text"},"ts":1494845982000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Hrm. Which headers? That should be a small change.","msgtype":"m.text"},"ts":1494846000000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: Expose-Headers, Allow-Headers, Allow-Methods (as long as no credentials are in play and with the exception of Authorization)","msgtype":"m.text"},"ts":1494846035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I filed bugs and there's tests too","msgtype":"m.text"},"ts":1494846063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see. I'll follow up.","msgtype":"m.text"},"ts":1494846074000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: Does Gecko support these wildcards? I'm trying to run the tests you added from `w3c-test.org`, but it's too slow to execute.","msgtype":"m.text"},"ts":1494847001000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I don't think it does yet","msgtype":"m.text"},"ts":1494847016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: using https:// sometimes ends up being faster on w3c-test.org","msgtype":"m.text"},"ts":1494847034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: not sure what is going on with that server, it's rather useless","msgtype":"m.text"},"ts":1494847044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Huh. HTTPS is faster.","msgtype":"m.text"},"ts":1494847059000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Ok. I'll poke our loading folks to see if they can get this on a roadmap.","msgtype":"m.text"},"ts":1494847131000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I take it that moderation of the unicode list doesn't happen at European business hours","msgtype":"m.text"},"ts":1494848025000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Mark Davis lives in Europe, but I suppose he wouldn't do the moderation","msgtype":"m.text"},"ts":1494849923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I tried to find if he has a GitHub ID so I could copy him on that issue, but no luck.)","msgtype":"m.text"},"ts":1494849961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MDN and caniuse claim IE10/11 support WebKitCSSMatrix. Per browserstack testing http://software.hixie.ch/utilities/js/live-dom-viewer/saved/5168 that seems false... Anyone know which version (of Edge) it was added?","msgtype":"m.text"},"ts":1494852812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"var l = document.createElement(\"label\"); l.innerHTML = \"<input>\"; l.firstChild.labels.length","msgtype":"m.text"},"ts":1494858632000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"why would that be 0?","msgtype":"m.text"},"ts":1494858637000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: sounds like a bug","msgtype":"m.text"},"ts":1494858724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is what I think too","msgtype":"m.text"},"ts":1494858903000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"What kind of music would the band \"Pseudo-classing Pseudo-elements\" play?","msgtype":"m.text"},"ts":1494858995000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ambient","msgtype":"m.text"},"ts":1494859070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk++","msgtype":"m.text"},"ts":1494859708000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: Markus works for Google, so if a direct line would help, I can help set one up.","msgtype":"m.text"},"ts":1494864909000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"hsivonen: Your message didn't really make clear to me what operation the new spec would make difficult. Is it ingesting external \"claimed-UTF-8\" into internal \"definitely-UTF-8\"? Markus's team has written that operation, so he'll have some context for it.","msgtype":"m.text"},"ts":1494865423000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yes, when you need to U+FFFD input","msgtype":"m.text"},"ts":1494868724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: the proposed spec change requires not just an UTF-8 validation state machine but also the states for skipping over the original UTF-8 forms that were made illegal for UTF-16 compat","msgtype":"m.text"},"ts":1494872480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jyasskin: so it requires a larger state machine and the rationale is really flimsy: \"feels right\" in the context of an UTF-16-oriented implementation","msgtype":"m.text"},"ts":1494872520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jyasskin: currently, you only need the validation state machine states, since you fall out of the state machine to output U+FFFD as soon as invalidity is detected","msgtype":"m.text"},"ts":1494872587000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Mhmm. FWIW, even ignoring UTF-16, transforming up to 6 bytes of data matching the \"n 1's followed by n-1 bytes\" form into a single U+FFFD seems reasonable. But if it makes the optimal UTF-8 validator larger, that seems like a good argument against it.","msgtype":"m.text"},"ts":1494872914000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"It's the sort of thing that might convince Markus, especially if you have code size or speed measurements to explain the impact.","msgtype":"m.text"},"ts":1494873002000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I think the current spec text is technically better due to the state machine size issue, but procedurally, I think a proposal to change something like this should be argued way better than \"feels right\"","msgtype":"m.text"},"ts":1494873411000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"JakeA: I've been trying to verify the validity of a service workers test in WPT. I could use your help, though. Would you mind weighing in on https://codereview.chromium.org/2873373004/ ?","msgtype":"m.text"},"ts":1494873441000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"hsivonen: The choice of how many U+FFFDs to include initially seemed like a matter of taste to me, in which case \"feels right\" is perhaps the only way to decide. However, you've introduced a technical reason that one of the options is easier to implement, which starts meaning the technical reason should win.","msgtype":"m.text"},"ts":1494873568000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jugglinmike: looking into it now…","msgtype":"m.text"},"ts":1494874630000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jugglinmike: I agree with your analysis. That condition shouldn't happen. I'm not sure why the test is broken down into wait_for_install and wait_for_activate – isn't wait_for_activate enough?","msgtype":"m.text"},"ts":1494875194000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Seems that way","msgtype":"m.text"},"ts":1494875385000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"JakeA: I was going to say that, from the perspective of the person who thought these extra conditions were necessary, the split would also be necessary","msgtype":"m.text"},"ts":1494875482000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but knowing the history of the test (specifically the commit that Matt found https://hg.mozilla.org/mozilla-central/rev/1ea2ebce35fe ), this was originally written in such a way as to not need that","msgtype":"m.text"},"ts":1494875525000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I'm glad to get your confirmation here. I've spent the better part of today going back and forth between the spec, the test, and your post https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/","msgtype":"m.text"},"ts":1494875575000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jyasskin: maybe initially a matter of taste, but a decade in it should not be a matter of taste to change it","msgtype":"m.text"},"ts":1494877487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Fair enough.","msgtype":"m.text"},"ts":1494877512000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"JakeA: Would you mind taking a look at another one? https://codereview.chromium.org/2880823002/diff/1/third_party/WebKit/LayoutTests/external/wpt/service-workers/service-worker/ready.https.html#newcode61","msgtype":"m.text"},"ts":1494877937000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: glad the event loop post was useful. Looking at that other issue now…","msgtype":"m.text"},"ts":1494878607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jugglinmike: is it specifically line 61+ that you're wanting me to look at, or the test as a whole?","msgtype":"m.text"},"ts":1494878752000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: actually, it's falken's request and my response to his request","msgtype":"m.text"},"ts":1494878946000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Ahh the equality thing. Gotcha","msgtype":"m.text"},"ts":1494878968000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"What does setting [SecureContext] on a partial interface actually do?","msgtype":"m.text"},"ts":1494887172000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"See https://github.com/heycam/webidl/issues/119","msgtype":"m.text"},"ts":1494887211000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: not really sure, but maybe nothing, since the main interface already has it...","msgtype":"m.text"},"ts":1494887465000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: seems like we should disallow them altogether, if that's the case.","msgtype":"m.text"},"ts":1494887514000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well, or that issue is suggesting mandating them, but yeah....","msgtype":"m.text"},"ts":1494887583000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, the mandate is decorative.","msgtype":"m.text"},"ts":1494887611000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"you can't have a constructor on a partial interface. You shouldn't have [SC] either.","msgtype":"m.text"},"ts":1494887662000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Is it a shorthand for putting [SecureContext] on all the bits added by that partial part of the interface?","msgtype":"m.text"},"ts":1494887791000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I don't think so. But I might be wrong.","msgtype":"m.text"},"ts":1494887827000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: I'm having a hard time parsing sentences like \"The interface or namespace is not available only in secure contexts.\" tbh","msgtype":"m.text"},"ts":1494887849000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I interpret \"The interface member is available only in secure contexts if and only if the interface or partial interface the member is declared on is.\" to say that methods within a [SecureContext] partial interface are themselves [SecureContext].","msgtype":"m.text"},"ts":1494887900000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I wouldn't object to saying that you should just say [SecureContext] on all the members you intend it for.","msgtype":"m.text"},"ts":1494887919000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"tobie: I think [SecureContext] on a partial interface does nothing to the actual interface object, since https://heycam.github.io/webidl/#dfn-exposed doesn't care whether *partial* interfaces are available only in secure contexts.","msgtype":"m.text"},"ts":1494888105000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"s/wouldn't object to/would support/","msgtype":"m.text"},"ts":1494888149000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: so [SecureContext] on a partial interface whose's non partial interface doesn't have [SecureContext] is shorthand for marking each members of that partial interface with [SecureContext]?","msgtype":"m.text"},"ts":1494888174000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That's how I read the current wording, yes.","msgtype":"m.text"},"ts":1494888190000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Whereas [SecureContext] on a non partial interface makes the whole interface unavailable, not just its members right?","msgtype":"m.text"},"ts":1494888290000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1494888298000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I think it would be a lot simpler to spec, and a lot clearer to read and understand if that was simplified.","msgtype":"m.text"},"ts":1494888351000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I agree. :)","msgtype":"m.text"},"ts":1494888411000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"tobie: Oh great, you're citing me as if I actually know things instead of just guessing them based on some words in a spec. ;-)","msgtype":"m.text"},"ts":1494889067000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: As far as I'm concerned, anybody willing to comment here understands this better than I do at present. :D","msgtype":"m.text"},"ts":1494889295000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So predictably bz has a point","msgtype":"m.text"},"ts":1494890322000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I don't understand the question about 'How would you handle the \"on |O| if |O| is not null\" part keeping it in WebIDL, though?'","msgtype":"m.text"},"ts":1494890744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why not just put \"on |O| if |O| is not null\" into those steps?","msgtype":"m.text"},"ts":1494890755000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like you did?","msgtype":"m.text"},"ts":1494890761000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess it's the \"on\" part that bothers me.","msgtype":"m.text"},"ts":1494890804000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hmm, seems fine to me...","msgtype":"m.text"},"ts":1494890835000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OK, I was thinking about putting that right after the ¶ were https://heycam.github.io/webidl/#dfn-regular-attribute is defined.","msgtype":"m.text"},"ts":1494891045000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: seems good. I edited my most recent comment as I realized I forgot the \"O\" bits.","msgtype":"m.text"},"ts":1494891130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I was about to ask. :)","msgtype":"m.text"},"ts":1494891158000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Alright I'll fix that tomorrow","msgtype":"m.text"},"ts":1494891184000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1494891188000,"senderName":"tobie","senderId":"tobie@irc"}
]