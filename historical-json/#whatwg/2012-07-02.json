[
{"content":{"body":"https://groups.google.com/forum/?fromgroups#!topic/es-operating-system/8oWtRZnDK_w","msgtype":"m.text"},"ts":1341195873000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Shiki Okasaka  wrote his own new browser engine","msgtype":"m.text"},"ts":1341195912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: http://code.google.com/p/es-operating-system/wiki/Cplusplus0xBinding is also pretty interesting","msgtype":"m.text"},"ts":1341208065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: did he implement HTML/CSS in JavaScript or C/C++?","msgtype":"m.text"},"ts":1341208092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the engine is all C++ I think","msgtype":"m.text"},"ts":1341208558000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the UI is HTML and CSS","msgtype":"m.text"},"ts":1341208578000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool cool cool","msgtype":"m.text"},"ts":1341208663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we should go visit Shiki down in Kyoto next time you're here","msgtype":"m.text"},"ts":1341208698000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he owns a cafe there","msgtype":"m.text"},"ts":1341208707000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I know, would be nice :)","msgtype":"m.text"},"ts":1341208718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for <ol reversed>, isn't the simplest thing to compute the start value by counting child <li> elements, and let the result be bogus if you do something bogus?","msgtype":"m.text"},"ts":1341209993000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"how is computed now?","msgtype":"m.text"},"ts":1341210021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it /\\","msgtype":"m.text"},"ts":1341210027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's the way it's counted","msgtype":"m.text"},"ts":1341210140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Only if you do something bogus the spec isn't too clear about markers","msgtype":"m.text"},"ts":1341210160000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hey! I was wondering if there's a way to completely remove the app cache from a website? Deleting the file and reference isn’t enough apparently :/","msgtype":"m.text"},"ts":1341216011000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"you mean programatically? or just from the perspective of the user (i.e, by asking the user to go in the browser's settings and delete it)?","msgtype":"m.text"},"ts":1341216113000,"senderName":"shwetank","senderId":"shwetank@irc"},
{"content":{"body":"programatically :)","msgtype":"m.text"},"ts":1341216127000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"well, it should be enough ... which browser you're trying in? trying reloading a couple of times I guess, deleting the file and/or reference to it should be enough (i've always done this myself and had no issues)","msgtype":"m.text"},"ts":1341216378000,"senderName":"shwetank","senderId":"shwetank@irc"},
{"content":{"body":"hm ok I'll give it another try then… testing on mobile safari / ios5","msgtype":"m.text"},"ts":1341216509000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"TabAtkins_: please add a new value to 'clear', clear:fix","msgtype":"m.text"},"ts":1341216568000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I might be wrong but I think I've read some article saying it was actually not enough to just remove references","msgtype":"m.text"},"ts":1341216588000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"which will be the new new new way to do it","msgtype":"m.text"},"ts":1341216589000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"bdc: did you serve the manifest with no-cache headers?","msgtype":"m.text"},"ts":1341216624000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good question :p","msgtype":"m.text"},"ts":1341216655000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"see gotcha #4 http://www.alistapart.com/articles/application-cache-is-a-douchebag/","msgtype":"m.text"},"ts":1341216705000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's exactly the issue I have","msgtype":"m.text"},"ts":1341216762000,"senderName":"bdc","senderId":"bdc@irc"},
{"content":{"body":"Velmont: zcorpan: fancy creating a proper SVG out of http://lists.w3.org/Archives/Public/public-webappsec/2012Jun/att-0045/Hodges-CORS-Diagram-SimpleRequest-00.pdf ?","msgtype":"m.text"},"ts":1341221274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hm, ok.","msgtype":"m.text"},"ts":1341221297000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: unless you think it's not useful of course, but it looks fairly useful","msgtype":"m.text"},"ts":1341221316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah. I might've decoded it faster if it was more visual though. But it's helpful either way.","msgtype":"m.text"},"ts":1341221468000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"if it would've helped you, future generations will like you for making it that way :)","msgtype":"m.text"},"ts":1341221583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: doesn't seem useful for *me*","msgtype":"m.text"},"ts":1341221988000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1341222100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Yeah, but you need to put yourself in a poor webdev's shoes and then think about it like that.","msgtype":"m.text"},"ts":1341222134000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"yeah i'm not saying it's not useful for everyone but me","msgtype":"m.text"},"ts":1341222176000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It seems pretty confusing","msgtype":"m.text"},"ts":1341222211000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: It's not like I didn't know how these requests were supposed to be made :P","msgtype":"m.text"},"ts":1341222212000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"jgraham: are you on public-webappsec?","msgtype":"m.text"},"ts":1341222235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: might want to mention that","msgtype":"m.text"},"ts":1341222240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1341222241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"email to reply to is http://lists.w3.org/Archives/Public/public-webappsec/2012Jun/0045.html","msgtype":"m.text"},"ts":1341222251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can mention it here","msgtype":"m.text"},"ts":1341222258000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems inconsistent in the use of speech bubbles","msgtype":"m.text"},"ts":1341222274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The initial request doesn't have one. They don't all list the same things","msgtype":"m.text"},"ts":1341222303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, I'm kinda changing it a bit now.","msgtype":"m.text"},"ts":1341222341000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"`'_'.anchor('x')` is `'<a name=\"x\">_</a>'` in all browsers, except in IE, where it’s `'<A NAME=\"x\">_</A>'` instead","msgtype":"m.text"},"ts":1341226791000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"should I tweak http://mathias.html5.org/specs/javascript/#string to allow uppercase, or could I ignore IE in this case as the resulting string is equivalent anyway?","msgtype":"m.text"},"ts":1341226849000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"IE is dumb, spec the lower case thing :)","msgtype":"m.text"},"ts":1341227190000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yay, then no tweaks are needed!","msgtype":"m.text"},"ts":1341227206000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I guess the Strings chapter is complete then. I wrote tests for it, too: http://mathias.html5.org/tests/javascript/strings/","msgtype":"m.text"},"ts":1341227231000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I spent some time speccing the Object extensions too, in case anyone wants to review: http://mathias.html5.org/specs/javascript/#object","msgtype":"m.text"},"ts":1341227305000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: as a general rule, don't allow two things in a spec just because browsers disagree. specs are supposed to get rid of the \"disagree\" part, so pick the majority or the most sensible option","msgtype":"m.text"},"ts":1341227355000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks; that makes sense","msgtype":"m.text"},"ts":1341227373000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: is your algorithm of substr different from the one in the ES spec?","msgtype":"m.text"},"ts":1341227580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it produces the same results, but the algo is a bit different","msgtype":"m.text"},"ts":1341227610000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i had already written this when you told me it was already defined in the ES5.1 spec","msgtype":"m.text"},"ts":1341227638000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i think this version is much more readable, but i guess that doesn’t matter","msgtype":"m.text"},"ts":1341227669000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas, do you want to check IsCallable() (http://ecma-international.org/ecma-262/5.1/#sec-9.11) for defineGetter/defineSetter?","msgtype":"m.text"},"ts":1341227671000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i suggest you drop it and just reference the ES one","msgtype":"m.text"},"ts":1341227675000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"removes","msgtype":"m.emote"},"ts":1341227678000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"having two algorithms means implementors need to spend time one evaluating whether they are equivalent","msgtype":"m.text"},"ts":1341227701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: i guess all of the appendix in the ES spec is needed for compat, right? maybe say that all of it must be supported?","msgtype":"m.text"},"ts":1341227779000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good call. would it be useful to have the separate features listed out in our spec, or would you just mention annex b once and never explicitly mention e.g. String#substr","msgtype":"m.text"},"ts":1341227914000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas, and what do Object.prototype.__defineGetter__ and friends do if you call them on non-objects?","msgtype":"m.text"},"ts":1341227987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"either way works, your call :-)","msgtype":"m.text"},"ts":1341227994000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: do you think that’s better / more clear than what it says now? “If function is not a Function instance (of type Function), throw a TypeError and return”","msgtype":"m.text"},"ts":1341228008000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Well, is it equivalent, and if not, what do browsers do?","msgtype":"m.text"},"ts":1341228033000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"seems like it is, as only Function instances have an internal [[Call]] property set to `true`","msgtype":"m.text"},"ts":1341228066000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"afaict","msgtype":"m.text"},"ts":1341228070000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i guess it’s clearer to re-use the ES spec lingo though","msgtype":"m.text"},"ts":1341228100000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"thanks for the feedback! <3","msgtype":"m.text"},"ts":1341228150000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Np :)","msgtype":"m.text"},"ts":1341228156000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, http://mxr.mozilla.org/mozilla-central/source/js/src/tests/ecma_5/extensions/extension-methods-reject-null-undefined-this.js","msgtype":"m.text"},"ts":1341228204000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"goes off for a bit","msgtype":"m.emote"},"ts":1341228385000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"interesting! I didn’t know Mozilla had a `String#quote`","msgtype":"m.text"},"ts":1341228505000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: In http://mathias.html5.org/specs/javascript/#tohtmltag, step 2, there is an extra quotation mark in \"\\\"\">\"","msgtype":"m.text"},"ts":1341229015000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: good catch; thanks!","msgtype":"m.text"},"ts":1341229082000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: I'm also skeptic about the name, ToHTMLElement instead?","msgtype":"m.text"},"ts":1341229118000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: i don’t know. IMHO an element is what’s in the DOM, tags are what devs write","msgtype":"m.text"},"ts":1341229184000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"it doesn’t actually create an element (like `document.createElement`) so I think that would be confusing","msgtype":"m.text"},"ts":1341229218000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hmm, it’s not just one “tag” though","msgtype":"m.text"},"ts":1341229262000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"could it be just “ToHTML”?","msgtype":"m.text"},"ts":1341229278000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: that's better. I wouldn't say that element is only a DOM concept though (XML has a production for it, and so has SGML)","msgtype":"m.text"},"ts":1341229546000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"ToTagSoup","msgtype":"m.text"},"ts":1341229662000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1341229680000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"i think that's about as accurate as it gets :-)","msgtype":"m.text"},"ts":1341229729000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":')","msgtype":"m.text"},"ts":1341229864000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: s#<code>\"&amp;quot;\"</code>#\"<code>&amp;quot;</code>\"#","msgtype":"m.text"},"ts":1341230057000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks. i assume the same goes for the strings in the http://mathias.html5.org/specs/javascript/#tohtml algo?","msgtype":"m.text"},"ts":1341230166000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1341230181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"actually the backslash thing is a bit un-spec-y","msgtype":"m.text"},"ts":1341230230000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i think i'd use http://simon.html5.org/tools/js/unicodeize/ notation","msgtype":"m.text"},"ts":1341230281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so, \"<code>\"></code>\" (U+0022 U+003E)","msgtype":"m.text"},"ts":1341230361000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"nice tool btw!","msgtype":"m.text"},"ts":1341230379000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1341230410000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe i should make it emit <code>s too","msgtype":"m.text"},"ts":1341230421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"do it!","msgtype":"m.text"},"ts":1341230428000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: is there a reason to say \"six-character string\" instead of \"string\"?","msgtype":"m.text"},"ts":1341230487000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: I saw that in the HTML spec somewhere and assumed it was the right way of doing things","msgtype":"m.text"},"ts":1341230525000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hasather: it also made it more clear that the quotes aren’t part of the string; but that’s not an issue anymore with zcorpan’s suggestions","msgtype":"m.text"},"ts":1341230560000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: seems redundant, and it's not used like that always like that in the HTML spec, but I don't know if there's a reason for it","msgtype":"m.text"},"ts":1341230583000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"matjas: anyway, just nit-picking :)","msgtype":"m.text"},"ts":1341230600000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: thanks for nit-picking! very useful feedback","msgtype":"m.text"},"ts":1341230623000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: done","msgtype":"m.text"},"ts":1341230790000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks! could you add .replace(/</g, '&lt;').replace(/&/g, '&amp;')?","msgtype":"m.text"},"ts":1341230838000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i did :-)","msgtype":"m.text"},"ts":1341230866000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1341230877000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: \"=\\\"\" still has a backslash, and not all of them have code points, but maybe you're currently updating that","msgtype":"m.text"},"ts":1341231057000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: I am, but thanks anyway :)","msgtype":"m.text"},"ts":1341231070000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hmmm. Is this clearer?  http://odin.s0.no/tmp/Hodges_odinho-CORS-Diagram-SimpleRequest.svg","msgtype":"m.text"},"ts":1341234123000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: minor typo: s/Do Access-Control-Allow-Origin/Does Access-Control-Allow-Origin/","msgtype":"m.text"},"ts":1341239067000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Fack, and I \"fixed\" it from Does to Do :P","msgtype":"m.text"},"ts":1341239082000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Was unsure, so.","msgtype":"m.text"},"ts":1341239091000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"matjas: But no other comments?","msgtype":"m.text"},"ts":1341240000000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"So, I never liked that IndexedDB used .continue() and .delete() as they are reserved in JS, but thought, ohwell. -- But it actually breaks \"with\".   with(os) { delete(); continue(); }  doesn't work at all...","msgtype":"m.text"},"ts":1341240077000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: looks very clear to me. maybe explain what happens if access is not allowed","msgtype":"m.text"},"ts":1341240085000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: I call \"feature\"","msgtype":"m.text"},"ts":1341240096000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1341240106000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas: Yea, thought about that. ... Hmm. Maybe I should try. Don't want it to be too advanced. And I'm basically only beautifying and SVG-ing something Jeff Hodges made.","msgtype":"m.text"},"ts":1341240141000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: only for backwards compatibility with ES3. in ES5, `continue` and `delete` are valid property names: http://mothereff.in/js-properties#delete","msgtype":"m.text"},"ts":1341240150000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: You mean that with will work correctly then?","msgtype":"m.text"},"ts":1341240198000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: as a property, yes","msgtype":"m.text"},"ts":1341240212000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: in your `with` example, you’re using `delete` as an identifier, which is not allowed","msgtype":"m.text"},"ts":1341240266000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Yea, but property.  continue() isn't a property? It has to hang onto somewhere?","msgtype":"m.text"},"ts":1341240270000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"even in ES5","msgtype":"m.text"},"ts":1341240271000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Yep, so what I was saying :P  -- We have  object.delete() and object.continue() working fine.","msgtype":"m.text"},"ts":1341240288000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"yeah, because they’re property names","msgtype":"m.text"},"ts":1341240309000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"ES5 allows the use of unquoted reserved words as property names","msgtype":"m.text"},"ts":1341240312000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: reserved words are valid IdentifierNames, but not valid Identifiers, in ES5","msgtype":"m.text"},"ts":1341240338000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Yeah, but it's a bit strange to use them in a web API like IDB...","msgtype":"m.text"},"ts":1341240361000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"see http://mathiasbynens.be/notes/javascript-identifiers and http://mathiasbynens.be/notes/javascript-properties if you’re interested","msgtype":"m.text"},"ts":1341240366000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Highlight in vim is strange and all.","msgtype":"m.text"},"ts":1341240368000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"matjas: Yeah, I have somewhat control over that, keyPaths have to be valid identifiers, so I've read those parts of the ES spec.","msgtype":"m.text"},"ts":1341240405000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho, 'with' is evil anyway.","msgtype":"m.text"},"ts":1341240500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah, noone needs to tell me.","msgtype":"m.text"},"ts":1341240523000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: It seems they do, because you keep talking as if breaking it is a problem","msgtype":"m.text"},"ts":1341240549000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1341240555000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it's also evil to make API's that break features.","msgtype":"m.text"},"ts":1341240556000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"\"with\" ain't no feature","msgtype":"m.text"},"ts":1341240568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And that highlight strangely in vim. :P","msgtype":"m.text"},"ts":1341240574000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Aha, so now we see your real motive.","msgtype":"m.text"},"ts":1341240586000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham: misfeatures then.","msgtype":"m.text"},"ts":1341240588000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Gecko just unprefixed backface-visibility, perspective, perspective-origin, transform, transform-origin, transform-style — nice!","msgtype":"m.text"},"ts":1341240765000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Yep!","msgtype":"m.text"},"ts":1341240799000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hurrah!","msgtype":"m.text"},"ts":1341240803000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Thank Ms2ger.","msgtype":"m.text"},"ts":1341240808000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yay me :)","msgtype":"m.text"},"ts":1341240955000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas, all the String.prototype functions in ES5 call CheckObjectCoercible, and it looks like Gecko does that as well","msgtype":"m.text"},"ts":1341241243000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ah, only now I understand explains the Gecko source link you posted earlier","msgtype":"m.text"},"ts":1341242406000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Ms2ger: thanks!","msgtype":"m.text"},"ts":1341242408000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1341242424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: do you know what I’m doing wrong here? test(function() { assert_throws(null, String.prototype.substr.call(null)); }); — http://mathias.html5.org/tests/javascript/strings/","msgtype":"m.text"},"ts":1341243784000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I tried `assert_throws('TypeError', fn)` first","msgtype":"m.text"},"ts":1341243802000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"assert_throws(null, function() { String.prototype.substr.call(null); });","msgtype":"m.text"},"ts":1341243847000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or assert_throws(new TypeError(), function() { String.prototype.substr.call(null); });","msgtype":"m.text"},"ts":1341243862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"without wrapping it in test(), you mean?","msgtype":"m.text"},"ts":1341243871000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"No, within the test","msgtype":"m.text"},"ts":1341243898000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But you need another function()","msgtype":"m.text"},"ts":1341243905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah, duh!","msgtype":"m.text"},"ts":1341243915000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1341243919000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I wonder if the kobo touch JP (webkit) handles Furigana http://img.asiajin.com/blog/wp-content/uploads/2012/07/rakuten-kobo.png","msgtype":"m.text"},"ts":1341244965000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"hmm yes it does.","msgtype":"m.text"},"ts":1341244981000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"stupid me visible on the pic","msgtype":"m.text"},"ts":1341244988000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"interesting, WebKit & IE don’t perform the CheckObjectCoercible step for the String extensions","msgtype":"m.text"},"ts":1341245229000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Opera and Gecko do, though","msgtype":"m.text"},"ts":1341245833000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Actually, is this WebKit or V8?","msgtype":"m.text"},"ts":1341245849000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"V8 I guess","msgtype":"m.text"},"ts":1341245915000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"matjas, http://mathias.html5.org/specs/javascript/ is empty","msgtype":"m.text"},"ts":1341247272000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: fixed","msgtype":"m.text"},"ts":1341249680000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1341249689000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What is WhatWG again? Some kind of subset of W3C? And why did W3C rename to W3?","msgtype":"m.text"},"ts":1341258561000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"smokeyrat: WHATWG is an independent group that was formed after the W3C decided not to work on HTML.  The W3C later changed its mind, and now HTML is developed jointly by both groups.","msgtype":"m.text"},"ts":1341258646000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"The W3C didn't rename to W3.  It just uses \"w3.org\" as its url.","msgtype":"m.text"},"ts":1341258658000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"You mean when they went all XHTML?","msgtype":"m.text"},"ts":1341259136000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1341259156000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"How come WhatWG has a say? Who made it? Usually, sensible groups that break out from a big organization have no say.","msgtype":"m.text"},"ts":1341259190000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"That whole XHTML thing was bizarre.","msgtype":"m.text"},"ts":1341259199000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Because browsers vendors believe the WHATWG has a say","msgtype":"m.text"},"ts":1341259255000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"whatwg is also sort of a w3c community group but still in some ways independent","msgtype":"m.text"},"ts":1341259280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I always found the W3C site to be a strange place. They used all kinds of bad practice in their own code, and even in examples, and at some point they used AdSense for Search on their site. They just gave a very lousy impression.","msgtype":"m.text"},"ts":1341259311000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"The w3c takes feedback on their site design","msgtype":"m.text"},"ts":1341259366000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The WHATWG was created *by* browser vendors, who were annoyed at the W3C stopping work on HTML.  It was just an alternate location to keep developing HTML, since the W3C wasn't going to allow it anymore.","msgtype":"m.text"},"ts":1341259568000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"W3C = George Lucas?","msgtype":"m.text"},"ts":1341259599000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"\"HTML doesn't exist. HTML is dead to us. XHTML is the future.\"","msgtype":"m.text"},"ts":1341259614000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"But yeah, they seem to have gotten *some* sense back.","msgtype":"m.text"},"ts":1341259632000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Too bad they still didn't make a sensible doctype syntax for HTML 5.","msgtype":"m.text"},"ts":1341259644000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"the doctype in HTML now was developed in the WHATWG actually :-)","msgtype":"m.text"},"ts":1341259679000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<!DOCTYPE html> was invented by the WHATWG","msgtype":"m.text"},"ts":1341259684000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's the shortest thing we could come up with that still worked","msgtype":"m.text"},"ts":1341259687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(we tried pretty hard to find shorter ones)","msgtype":"m.text"},"ts":1341259697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"w3c is not really pushing XHTML-everything any more","msgtype":"m.text"},"ts":1341259698000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Why in the freaking heck not <html version=\"5\">?","msgtype":"m.text"},"ts":1341259707000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"though there is a new desire to try to shove anything and everything into HTML","msgtype":"m.text"},"ts":1341259715000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Why was it ever an incredibly long and impossible-to-memorize line?","msgtype":"m.text"},"ts":1341259724000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"<html version=\"5\"> is not a doctype","msgtype":"m.text"},"ts":1341259731000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the impossible-to-memorize line was due to SGML","msgtype":"m.text"},"ts":1341259743000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\"<!doctype html>\" is the shortest string that triggers standards mode","msgtype":"m.text"},"ts":1341259759000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that is the sole reason for it","msgtype":"m.text"},"ts":1341259763000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The only thing I know of that is in HTML 5 that I don't get (but I'm sure there is more) is some kind of client-side SQL database. Which makes no sense at all.","msgtype":"m.text"},"ts":1341259769000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"you really want to be in standards more, not quirks mode","msgtype":"m.text"},"ts":1341259772000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"otherwise html5 would have no doctype at all","msgtype":"m.text"},"ts":1341259778000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The entire concept of standards/quirks mode still exists in modern IEs?","msgtype":"m.text"},"ts":1341259796000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"sadly yes","msgtype":"m.text"},"ts":1341259823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's even specced now","msgtype":"m.text"},"ts":1341259829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we had no choice, there were pages depending on both modes","msgtype":"m.text"},"ts":1341259844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In all modern browsers, not just IE.","msgtype":"m.text"},"ts":1341259846000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(four modes, really)","msgtype":"m.text"},"ts":1341259855000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dang ol' mess.","msgtype":"m.text"},"ts":1341259871000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"welcome to html","msgtype":"m.text"},"ts":1341259876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Not really new to it... I remember when IE 6 was bliss compared to Netscape Navigator 4.8.","msgtype":"m.text"},"ts":1341259905000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Some PNGs in IE are not properly transparent, it seems. Or maybe I should phrase it like this: the transparency of PNGs in today's current stable versions of IE, Opera, Firefox, Safari and Chrome seems to vary. Can somebody confirm this?","msgtype":"m.text"},"ts":1341260428000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"probably fine in latest version","msgtype":"m.text"},"ts":1341260662000,"senderName":"c|oneman","senderId":"c|oneman@irc"},
{"content":{"body":"I knoew early IE's hae trouble","msgtype":"m.text"},"ts":1341260669000,"senderName":"c|oneman","senderId":"c|oneman@irc"},
{"content":{"body":"IE 9 here.","msgtype":"m.text"},"ts":1341260673000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Not fine.","msgtype":"m.text"},"ts":1341260675000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"Hello I'd like to submit a proposal about the canvas API","msgtype":"m.text"},"ts":1341262830000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"In my use case, I'd like to be able to manipulate canvases with lower bit-depth","msgtype":"m.text"},"ts":1341262854000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"like say one colour channel per pixel","msgtype":"m.text"},"ts":1341262868000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"that is useful if you need to store a lot of offscreen canvases but don't really need all that pixel information","msgtype":"m.text"},"ts":1341262910000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"it would allow to stuff more offscreen canvases in the same memory chunk","msgtype":"m.text"},"ts":1341262937000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"that could be useful in games, image manipulation apps","msgtype":"m.text"},"ts":1341262955000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"etc.","msgtype":"m.text"},"ts":1341262959000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"and it should improve the processing time too in some cases","msgtype":"m.text"},"ts":1341262977000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"because it would mean less pixels to copy when blitting for example","msgtype":"m.text"},"ts":1341262996000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"tsatse, interesting! take a look at http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F if you haven't seen it. the proposal sounds reasonable, but as an implementor i would wonder if there are enough use cases to justify adding the API surface area / implementation code","msgtype":"m.text"},"ts":1341265919000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"tsatse, if you just do the naive thing and use a canvas with full bit-depth, how wasteful is it in practice? i.e. how many games / image manipulation apps / etc see significant overhead?","msgtype":"m.text"},"ts":1341265944000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"and if there are a lot, is canvas 2d the right primitive for them?","msgtype":"m.text"},"ts":1341265957000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr, thanks. someone suggested me to store lower-depth image data in a typed array and manually move the data back and forth between the canvas when needed","msgtype":"m.text"},"ts":1341267086000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"which is reasonable in my use case","msgtype":"m.text"},"ts":1341267099000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"jamesr, I was thinking this was lacking because it's so common in opengl for instance to manipulate different colour-depth textures","msgtype":"m.text"},"ts":1341267148000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"jamesr, and thanks for the pointer to the faq. I was looking for that formal information","msgtype":"m.text"},"ts":1341267202000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"it's more advice than formal information","msgtype":"m.text"},"ts":1341267218000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"webgl does have support for different texture formats, etc","msgtype":"m.text"},"ts":1341267227000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"but it's less supported than canvas-2d","msgtype":"m.text"},"ts":1341267244000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"canvas 2d is a bit higher-level","msgtype":"m.text"},"ts":1341267244000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1341267250000,"senderName":"tsatse","senderId":"tsatse@irc"},
{"content":{"body":"it didn't have any support for controlling filtering until very recently","msgtype":"m.text"},"ts":1341267267000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"it's good to have those features coming to canvas 2d because it means a higher reach for users","msgtype":"m.text"},"ts":1341267312000,"senderName":"tsatse","senderId":"tsatse@irc"}
]