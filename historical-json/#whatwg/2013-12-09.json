[
{"content":{"body":"Yay for Google fucking over Google: http://code.google.com/p/chromium/issues/detail?id=43394#c44","msgtype":"m.text"},"ts":1386577254000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: wonderful","msgtype":"m.text"},"ts":1386579313000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Gmail and other Google Apps are relying on the fact that Chrome defines DOM attributes on DOM instances.\"","msgtype":"m.text"},"ts":1386579333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"It's strange that these Google Apps are working fine in Firefox and IE where DOM attributes are defined on prototype chains. Probably Google Apps are using different JavaScript code depending on browsers.\"","msgtype":"m.text"},"ts":1386579379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so you'd think they'd be happy if they could move to just one code path instead of needing to maintain two","msgtype":"m.text"},"ts":1386579440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: oh, but see the next comment","msgtype":"m.text"},"ts":1386579498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, indeed","msgtype":"m.text"},"ts":1386579648000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"as I noted on the bug, I think that statement is false","msgtype":"m.text"},"ts":1386579866000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I'll try to look at your javascript: urls later, haven't had time yet","msgtype":"m.text"},"ts":1386579872000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's just that the new codepath for the attributes in v8 was not tested very well and likely broken","msgtype":"m.text"},"ts":1386579883000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Anyway, we'll see :)","msgtype":"m.text"},"ts":1386579920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heads off for a while","msgtype":"m.emote"},"ts":1386579939000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jochen__: yeah your comment is the one I meant by \"oh, but see the next comment\"","msgtype":"m.text"},"ts":1386580069000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, I'll got back to remaining optimistic","msgtype":"m.text"},"ts":1386580098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: if it's OK with you, I'd like to add \"Access-Control-Allow-Headers: content-type\" to the validator response headers","msgtype":"m.text"},"ts":1386580237000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for context see http://lists.whatwg.org/pipermail/implementors-whatwg.org/2013-December/000338.html","msgtype":"m.text"},"ts":1386580252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1386580449000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"hsivonen: otherwise, if somebody wants to use the validator REST interface with XHR, they have to send the \"laxtype\" parameter and even then they'll get back a \"Being lax about non-HTML Content-Type: text/plain\" warning","msgtype":"m.text"},"ts":1386580572000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jochen__: it will be nice to see the interface tests in the web-platform-tests testsuite working in Chrome (since for most of those we rely on a test harness that in turn relies on conformant WebIDL support)","msgtype":"m.text"},"ts":1386580716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1386580912000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"however, the patch Kentaro uploaded only moved \"popular\" attributes","msgtype":"m.text"},"ts":1386580928000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: oh really?","msgtype":"m.text"},"ts":1386580945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't know","msgtype":"m.text"},"ts":1386580948000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i guess the idea is that if the popular ones work, we can mass-move the rest","msgtype":"m.text"},"ts":1386580969000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that sounds like a sane way to do it I guess","msgtype":"m.text"},"ts":1386580993000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: to be clear, ideally a Web app should be able to do .setRequestHeader(\"Content-type\", \"text/html\") for an XHR to the validator. But if it does then the request gets preflighted and rejected because the validator doesn't send \"Access-Control-Allow-Headers: content-type\" in the options response","msgtype":"m.text"},"ts":1386581307000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so if we add \"Access-Control-Allow-Headers: content-type\" it will eliminate the need for apps to send the laxtype parameter, and eliminate the warning message the gets reported bacause of that","msgtype":"m.text"},"ts":1386581500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oops. I missed that aspect of CORS. Yeah, sure, it makes sense to add that.","msgtype":"m.text"},"ts":1386581631000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if there are other headers that should be allowed","msgtype":"m.text"},"ts":1386581641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah I wondering the same thing","msgtype":"m.text"},"ts":1386581660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tries to see if Content-Length and such are permitted by default by the spec","msgtype":"m.emote"},"ts":1386581684000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"To be clear, the method and header fields are mutually exclusive. When one of them is empty the other is non-empty.\" what's that about?","msgtype":"m.text"},"ts":1386581751000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That is about caching","msgtype":"m.text"},"ts":1386581788000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"annevk-cloud: yeah, but does it mean that allowing methods GET and POST would remove the need to care about particular headers?","msgtype":"m.text"},"ts":1386581828000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Content-Length is set by the UA iirc","msgtype":"m.text"},"ts":1386581832000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"No it does not","msgtype":"m.text"},"ts":1386581846000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"It just means that the cache entry is either for a header or a method","msgtype":"m.text"},"ts":1386581877000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1386581901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Is hopefully clearer in Fetch","msgtype":"m.text"},"ts":1386581905000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"If not, bug reports appreciated","msgtype":"m.text"},"ts":1386581918000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"does validator.nu need to add Access-Control-Allow-Methods, too?","msgtype":"m.text"},"ts":1386581939000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or maybe it already does in OPTIONS responses","msgtype":"m.text"},"ts":1386581974000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should look at the source","msgtype":"m.emote"},"ts":1386581982000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If you allow more than GET and POST","msgtype":"m.text"},"ts":1386581993000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"is looking right now also","msgtype":"m.emote"},"ts":1386581996000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my tests with POST already work fine","msgtype":"m.text"},"ts":1386582028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"If you feel your setup is secure you could allow any header","msgtype":"m.text"},"ts":1386582040000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"Just echo the requested headers","msgtype":"m.text"},"ts":1386582051000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"I think that might be overkill but maybe not","msgtype":"m.text"},"ts":1386582095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it already does Access-Control-Allow-Methods\", \"GET, HEAD, POST, OPTIONS","msgtype":"m.text"},"ts":1386582102000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which is why POST works","msgtype":"m.text"},"ts":1386582107000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"POST works by default though iirc","msgtype":"m.text"},"ts":1386582130000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"HEAD is also whitelisted","msgtype":"m.text"},"ts":1386582148000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"And OPTIONS is part of the protocol","msgtype":"m.text"},"ts":1386582173000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"annevk-cloud: What's going on with promises at the moment, which spec is \"the spec\"?","msgtype":"m.text"},"ts":1386582232000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Just saw https://code.google.com/p/v8/source/browse/branches/bleeding_edge/src/promise.js?spec=svn18113&r=18113 - and there's things like Promise.resolved and Promise.one, which aren't in https://github.com/domenic/promises-unwrapping/blob/master/README.md","msgtype":"m.text"},"ts":1386582287000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hsivonen: btw I see Access-Control-Policy-Path in there. in VerifierServlet.java. I guess we should get rid of that","msgtype":"m.text"},"ts":1386582300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I can't remember what that is about","msgtype":"m.text"},"ts":1386582333000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: something that has been removed from the spec?","msgtype":"m.text"},"ts":1386582358000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, long gone now","msgtype":"m.text"},"ts":1386582399000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: btw while we're on the subject of headers, I'd like to also propose we change the Accept header that the validator's sending, so that it's something closer to what browsers send","msgtype":"m.text"},"ts":1386582947000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right now it's sending \"/*; q=0.1, application/docbook+xml, application/xhtml+xml, application/xml; q=0.5, image/svg+xml, text/html; q=0.9, text/xml; q=0.3\"","msgtype":"m.text"},"ts":1386582965000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1386582992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"make that */* at the beginning","msgtype":"m.text"},"ts":1386583034000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I think it might be better to send just, e.g., \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"","msgtype":"m.text"},"ts":1386583096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"one reason I suggest it is that currently tit can cause the validator to get sent an application/xhtml+xml version of document while browsers get sent a text/html version of that same document","msgtype":"m.text"},"ts":1386583234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have weird problem, I made emai lnewsletter, the newsletter has too much scrolling on mobiles, why?","msgtype":"m.text"},"ts":1386583881000,"senderName":"dekiss","senderId":"dekiss@irc"},
{"content":{"body":"I have viewprot meta tags, the email newsletter looks too much zoomed in iphone why?","msgtype":"m.text"},"ts":1386583887000,"senderName":"dekiss","senderId":"dekiss@irc"},
{"content":{"body":"I have this <meta content='width=device-width, target-densitydpi=device-dpi, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />","msgtype":"m.text"},"ts":1386583979000,"senderName":"dekiss","senderId":"dekiss@irc"},
{"content":{"body":"hsivonen: looking at the code it seems like the order the Accept header is being built in is good but it doesn't get preserved because it's going into a TreeSet. So I think I could keep the rest of that code as-is but just change it to use a LinkedHashSet","msgtype":"m.text"},"ts":1386584149000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dekiss: I don't think you can expect much help here with that question. Not sure where to suggest instead though","msgtype":"m.text"},"ts":1386584216000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1386584475000,"senderName":"dekiss","senderId":"dekiss@irc"},
{"content":{"body":"who said that public-html saw no useful discussion? I have proof to the contrary: http://lists.w3.org/Archives/Public/public-html/2013Dec/0003.html","msgtype":"m.text"},"ts":1386584851000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"MikeSmith: OK","msgtype":"m.text"},"ts":1386584878000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: especailly the html5 facet of the validator should use the same Accept header as browsers","msgtype":"m.text"},"ts":1386584938000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even the new validator is now old enough to be legacy code like this :-(","msgtype":"m.text"},"ts":1386584971000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1386585245000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"My eyes glazed over, but right before that I saw \"Deprecating tags such as <center> is a mistake.\"","msgtype":"m.text"},"ts":1386585296000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: so I'll change Accept and also add Access-Control-Allow-Headers for content-type for now","msgtype":"m.text"},"ts":1386585377000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1386585398000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: you're clearly not reading with the proper mindset","msgtype":"m.text"},"ts":1386585403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, quite likely","msgtype":"m.text"},"ts":1386585421000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, I did click on a link to a public-html email, so that already says a lot about the proper mindset","msgtype":"m.text"},"ts":1386585453000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1386585472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: you got public-html-rolled by darobin","msgtype":"m.text"},"ts":1386585505000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe it should be public-html-goatse'd","msgtype":"m.text"},"ts":1386585531000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1386585540000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"JakeA: Domenic's repo is the spec, Google is not following it afaict","msgtype":"m.text"},"ts":1386585881000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"annevk-cloud: \"Based on prototype at https://github.com/rossberg-chromium/js-promise which informed the latest spec draft version at https://github.com/domenic/promises-unwrapping/blob/master/README.md\" in his commit message","msgtype":"m.text"},"ts":1386586480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Andreas disagrees with some stuff so he implemented it differently","msgtype":"m.text"},"ts":1386586534000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"Not sure whether that's a good thing yet","msgtype":"m.text"},"ts":1386586567000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"explicitly basing the browser implementation on his own speculative JS prolyfill instead of a spec seems a bit odd","msgtype":"m.text"},"ts":1386586677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah is odd, just not sure if it is wrong","msgtype":"m.text"},"ts":1386586747000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"Promise.race vs Promise.one I don't care about. Not convinced it's useful. An opposite to Promise.all would be useful.","msgtype":"m.text"},"ts":1386589170000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Promise.resolved is only a better name if you don't pass in an arg. For most cases Promise.resolve is better","msgtype":"m.text"},"ts":1386589228000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, the bikeshedding seems wrong","msgtype":"m.text"},"ts":1386590182000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"More thinking about deferreds","msgtype":"m.text"},"ts":1386590217000,"senderName":"annevk-cloud","senderId":"annevk-cloud@irc"},
{"content":{"body":"hmm, it seems presto/blink/gecko actually use utf-8 query encoding when resolving <base href>","msgtype":"m.text"},"ts":1386596123000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"...or not, bogus test","msgtype":"m.text"},"ts":1386596409000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"data:text/html;charset=windows-1252,<!DOCTYPE%20html><script>document.write('<base%20href%3Dhttp%3A%2F%2Fexample.invalid%2F%3F%5Cu00e5><a%20href><%2Fa>')%3Balert(document.links%5B0%5D.href)%3B<%2Fscript> is a correct test","msgtype":"m.text"},"ts":1386596661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"note to self: about:blank uses utf-8","msgtype":"m.text"},"ts":1386596812000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"IE seems to drop the query","msgtype":"m.text"},"ts":1386597160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what's the expected way to run html5lib-python tests against a different source of tests than the submodule?","msgtype":"m.text"},"ts":1386598252000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: ^^","msgtype":"m.text"},"ts":1386598262000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"also, is there a way of running the tests against just a subset of the data?","msgtype":"m.text"},"ts":1386598389000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: You aren't really expected to do that :)","msgtype":"m.text"},"ts":1386598418000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: bah!","msgtype":"m.text"},"ts":1386598430000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"What's the use case?","msgtype":"m.text"},"ts":1386598436000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how can you try out something new then?","msgtype":"m.text"},"ts":1386598439000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Add it to the existing tests?","msgtype":"m.text"},"ts":1386598458000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, yeah, but I want to run my tests before pushing it to the repo","msgtype":"m.text"},"ts":1386598478000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: the situation is: I have new tests in my own fork of html5lib-tests and I'd like to run them before making a PR","msgtype":"m.text"},"ts":1386598501000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: That sould JustWork, no?","msgtype":"m.text"},"ts":1386598534000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*should","msgtype":"m.text"},"ts":1386598540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mmmm, I guess there's something I'm not understanding","msgtype":"m.text"},"ts":1386598551000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"should I just nuke the submodule in html5lib-python that brings in the tests and replace it with my own?","msgtype":"m.text"},"ts":1386598571000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I mean I can easily do that and ln -s instead — it just seems more brutal than what I'd expect :)","msgtype":"m.text"},"ts":1386598610000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Why wouldn't you jsut add your own tests to the submodule?","msgtype":"m.text"},"ts":1386598670000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the submodule is 1) not my repo so I can't initiate a PR from it; 2) normally submodules are stuck at a given revision","msgtype":"m.text"},"ts":1386598722000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but clearly that's not a problem you've had, I presume all the tests have been written by html5lib maintainers anyway :)","msgtype":"m.text"},"ts":1386598801000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'll resort to ln and leave you get back to whatever","msgtype":"m.text"},"ts":1386598810000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Well the submodule thing is new","msgtype":"m.text"},"ts":1386598811000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"what I was thinking of is some option to pass to nosetests so that it'd pick up the tests data from elsewhere; or some such","msgtype":"m.text"},"ts":1386598833000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"So I think that won't work because it will try to read the data files from the original location in any case. But I might be wrong","msgtype":"m.text"},"ts":1386598876000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm removing the original location and replacing it with a symbolic link","msgtype":"m.text"},"ts":1386599009000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1386599011000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"seems happy enough","msgtype":"m.text"},"ts":1386599065000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1386599078000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan++ if you're writing tests for that","msgtype":"m.text"},"ts":1386599082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: my URL tests don't cover those aspects","msgtype":"m.text"},"ts":1386599090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: and I'm guessing the answer to \"can I just run on a subset of the tests?\" is \"mmm, why would you want to do that?\" :)","msgtype":"m.text"},"ts":1386599103000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"whoa, lots of broken tests","msgtype":"m.text"},"ts":1386599133000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: you can commit and push from a submodule","msgtype":"m.text"},"ts":1386599188000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, but it's hardcoded to be https://github.com/html5lib/html5lib-tests.git whereas I'm using my own fork","msgtype":"m.text"},"ts":1386599218000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"you can still add a remote","msgtype":"m.text"},"ts":1386599230000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I typically have two remotes for github stuff: upstream and fork","msgtype":"m.text"},"ts":1386599245000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yeah, it's just a normal repo except that the metadata is kept somewhere strange","msgtype":"m.text"},"ts":1386599310000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: https://critic.hoppipolla.co.uk/r/437","msgtype":"m.text"},"ts":1386599749000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So http://online.wsj.com/news/articles/SB10001424052702304355104579236261045331876 is published in opinion, but who wrote it?","msgtype":"m.text"},"ts":1386601814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If there's no name, does it mean the WSJ team is behind it?","msgtype":"m.text"},"ts":1386601832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"YEs, I think that's how it works","msgtype":"m.text"},"ts":1386601911000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"image/svg+xml in an iframe shouldn't inherit the encoding, right? it should just use xml's encoding rules","msgtype":"m.text"},"ts":1386602384000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: \"Editorial board member Joe Rago\"","msgtype":"m.text"},"ts":1386602633000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(for the related video — which points to the same conclusion)","msgtype":"m.text"},"ts":1386602653000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: is there some reason for what tests are in what files?","msgtype":"m.text"},"ts":1386602847000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: It is a philosopical treatise on existential disorder","msgtype":"m.text"},"ts":1386602924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Either that or material for Dan Brown to use in his next \"novel\"","msgtype":"m.text"},"ts":1386602941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks, that's the impression it left me with","msgtype":"m.text"},"ts":1386602941000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I preferred the first one","msgtype":"m.text"},"ts":1386602949000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Well done","msgtype":"m.text"},"ts":1386602965000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You win a French citizenship","msgtype":"m.text"},"ts":1386602979000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(at least I imagine that's how it works)","msgtype":"m.text"},"ts":1386603009000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And an induction into Opus Dei","msgtype":"m.text"},"ts":1386603074000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"may I win anything I don't already have?","msgtype":"m.text"},"ts":1386603089000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"A sense of humour?","msgtype":"m.text"},"ts":1386603117000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"also, I presume that html5lib failing several tests currently in the suite is normal?","msgtype":"m.text"},"ts":1386603140000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1386603148000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But ask gsnedders","msgtype":"m.text"},"ts":1386603153000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which tests are they?","msgtype":"m.text"},"ts":1386603160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: don't worry, becoming more proficient with python is definitely giving me one","msgtype":"m.text"},"ts":1386603161000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: if I use the tests from the submodule (so at a given revision) all pass, but with the latest from the repo they don't","msgtype":"m.text"},"ts":1386603190000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"28 fail","msgtype":"m.text"},"ts":1386603200000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1386603207000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"most seem to do with <command>","msgtype":"m.text"},"ts":1386603208000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Sounds plausile","msgtype":"m.text"},"ts":1386603218000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and weird characters in doctype","msgtype":"m.text"},"ts":1386603219000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"*plausible","msgtype":"m.text"},"ts":1386603222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially if the spec also changed","msgtype":"m.text"},"ts":1386603228000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"okay, thanks!","msgtype":"m.text"},"ts":1386603269000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: that he wrote the piece?","msgtype":"m.text"},"ts":1386603689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that it comes from the WSJ as an entity — it's a practice that's not uncommon in certain parts of the press","msgtype":"m.text"},"ts":1386603754000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"editorial opinions are the opinion of the journal, not just some guy","msgtype":"m.text"},"ts":1386603804000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: ta","msgtype":"m.text"},"ts":1386603813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know how the WSJ operates, but e.g. in the Economist all the articles are unsigned (except the columns which are pseudonymous)","msgtype":"m.text"},"ts":1386603860000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: when I read the Economist there was no \"opinion\" thingie, but I guess a column counts as a similar thing","msgtype":"m.text"},"ts":1386603985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's the Economist, they are cocksure enough to any of their opinions facts ;-)","msgtype":"m.text"},"ts":1386604059000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"uhuh, whenever they wrote about the web though...","msgtype":"m.text"},"ts":1386604086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you know of a single newspaper that writes smart stuff when they're writing about a topic you really know, I'd be happy to hear about it","msgtype":"m.text"},"ts":1386604391000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Daring Fireball is pretty good, but not a newspaper","msgtype":"m.text"},"ts":1386604463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also have to read the bits about Google with care","msgtype":"m.text"},"ts":1386604485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and anything related to Apple being awesome","msgtype":"m.text"},"ts":1386604513000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I would really not cite Daring Fireball as a source of good journalism","msgtype":"m.text"},"ts":1386604777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is wondering if update_html5lib_tests.py really makes sense","msgtype":"m.emote"},"ts":1386604946000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"whoa, and it looks like we haven't updated WPT from it in a while","msgtype":"m.text"},"ts":1386605099000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: Makes sense in what way?","msgtype":"m.text"},"ts":1386605198000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk, are you ok with the current handling of blob: URLs, query, etc.? Not sure if your bug update to 23946 means you think more needs to be done, or if it can be closed.","msgtype":"m.text"},"ts":1386605218000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"jgraham: well, reading the source, there are two modes","msgtype":"m.text"},"ts":1386605298000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: the basic one is that you give no arguments and it uses the tests from inside the html5lib source — that part is okay","msgtype":"m.text"},"ts":1386605317000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: the other is that it checks if sys.argv is > 2 but then it only looks at sys.argv[2]","msgtype":"m.text"},"ts":1386605336000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and only takes one directory","msgtype":"m.text"},"ts":1386605357000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"so I'm calling it as python update_html5lib_tests.py xxx /path/to/tests","msgtype":"m.text"},"ts":1386605382000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"seems to work","msgtype":"m.text"},"ts":1386605385000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but nonsensical :)","msgtype":"m.text"},"ts":1386605390000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I think it used to take another argument. Probably got lost somewhere when I updated it :)","msgtype":"m.text"},"ts":1386605500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1386605555000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Anyway, fixes welcome I guess","msgtype":"m.text"},"ts":1386605571000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is anyone relying on this?","msgtype":"m.text"},"ts":1386605582000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(that we know of)","msgtype":"m.text"},"ts":1386605596000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Cyrillic is a real mess","msgtype":"m.text"},"ts":1386605601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: No, I think it's just used to import the tests","msgtype":"m.text"},"ts":1386605615000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Only encoding group with five entries in Firefox Nightly's new menu","msgtype":"m.text"},"ts":1386605621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I wonder if it would be possible to use a more readable format in the generated JS tests","msgtype":"m.text"},"ts":1386605632000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I mean, good luck reviewing that","msgtype":"m.text"},"ts":1386605636000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"arunranga: there's a lot of text currently and it's not clear to me when it applies","msgtype":"m.text"},"ts":1386605668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: You review the source and trust the generated output","msgtype":"m.text"},"ts":1386605691000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"arunranga: e.g. in the section \"A definition of blob URL Scheme\" (casing?) it says \"A query must be ignored.\" which does not seem very applicable","msgtype":"m.text"},"ts":1386605706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But sure, other methods of importing these tests are possible","msgtype":"m.text"},"ts":1386605718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The primary one being to use XHR and parse the raw files in js","msgtype":"m.text"},"ts":1386605739000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that might actually be a viable solution — tbh I'm not even sure what you're doing in there :)","msgtype":"m.text"},"ts":1386605768000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"It depends how much you trust XHR to deliver unchanged bytes","msgtype":"m.text"},"ts":1386605789000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I decided at the time that I didn't very much","msgtype":"m.text"},"ts":1386605800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: any resources on why WebIDL/etc. switched from stupid int constants to nice string constants for enums? Helping a coworker convince other coworkers that string enums are fine.","msgtype":"m.text"},"ts":1386605803000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1386605809000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"It might be worth revisting that assumption now","msgtype":"m.text"},"ts":1386605825000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm not annoyed enough to change it at this point, it's great that we have what we have","msgtype":"m.text"},"ts":1386605825000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but I might look into it at some point, it's a bit of a long ride to get something all the way in","msgtype":"m.text"},"ts":1386605839000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: Yep","msgtype":"m.text"},"ts":1386605846000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hopes no one comes back with a \"that's what she said\" joke here","msgtype":"m.emote"},"ts":1386605856000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"twss","msgtype":"m.text"},"ts":1386605862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Damn you!","msgtype":"m.text"},"ts":1386605873000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1386605879000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk, ok, that makes sense.","msgtype":"m.text"},"ts":1386605952000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1386605956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: hmm http://lists.w3.org/Archives/Public/public-script-coord/2010OctDec/0098.html and then https://www.w3.org/Bugs/Public/show_bug.cgi?id=11451","msgtype":"m.text"},"ts":1386605996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: perfect, thanks!","msgtype":"m.text"},"ts":1386606048000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"arunranga: I think I'd prefer moving to a place where we have createObjectURL() defined as creating the URL and then a separate place that does the lookup","msgtype":"m.text"},"ts":1386606184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: it's not clear we need anything else","msgtype":"m.text"},"ts":1386606190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: the lookup being the bit that gets passed a URL object whose scheme is \"blob\" and then uses the scheme data to find an entry in the table to locate the relevant resource","msgtype":"m.text"},"ts":1386606227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I think I agree, actually.","msgtype":"m.text"},"ts":1386606312000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"wanders off to reorganize the spec a bit","msgtype":"m.emote"},"ts":1386606352000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"<b><b><b><b>x</b></b></b></b>y — when </b> is passed to the AAA, what's on the list of active formatting elements?","msgtype":"m.text"},"ts":1386609809000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is pretty sure html5lib is wrong here","msgtype":"m.emote"},"ts":1386609920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"[b,b,b]","msgtype":"m.text"},"ts":1386610019000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1386610034000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Why only three?","msgtype":"m.text"},"ts":1386610054000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#push-onto-the-list-of-active-formatting-elements","msgtype":"m.text"},"ts":1386610065000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1386610085000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I should, like, follow xrefs and not assume simplicity.","msgtype":"m.text"},"ts":1386610096000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: This is needed solely to help avoid the O(n^2) case without breaking content, right?","msgtype":"m.text"},"ts":1386610117000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, something like that","msgtype":"m.text"},"ts":1386610143000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Thanks for pointing out my obvious wrongness. :)","msgtype":"m.text"},"ts":1386610218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No problem","msgtype":"m.text"},"ts":1386610231000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm sure you would do the same for me","msgtype":"m.text"},"ts":1386610241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But of course. :)","msgtype":"m.text"},"ts":1386610263000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<b><table><tr><td>a<foo>b</b>c — is \"c\" in foo?","msgtype":"m.text"},"ts":1386610742000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, it is, obviously.","msgtype":"m.text"},"ts":1386610858000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That was me just being totally stupid.","msgtype":"m.text"},"ts":1386610865000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: the noah's ark clause isn't to avoid O(N^2) complexity, it's to avoid O(N^2) memory usage","msgtype":"m.text"},"ts":1386611311000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I should stop asking questions and just send the damned email before more people say even more of what I wrote is wrong :)","msgtype":"m.text"},"ts":1386611508000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: But it works in tandem with the AAA loop limits, right?","msgtype":"m.text"},"ts":1386611576000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham, darobin (if you see this): yes, it's known html5lib-python doesn't pass tests at the top of master of html5lib-tests, thus why the submodule isn't at that revision.","msgtype":"m.text"},"ts":1386611713000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Because html5lib-python isn't up to date with the spec, but html5lib-tests is.)","msgtype":"m.text"},"ts":1386611749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: something like that","msgtype":"m.text"},"ts":1386613498000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: it's not necessary about the AAA","msgtype":"m.text"},"ts":1386613506000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: the AAA is more about how to handle misclosed tags","msgtype":"m.text"},"ts":1386613515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: noah's ark is more about how to handle deep pointless trees or trees that just never close","msgtype":"m.text"},"ts":1386613531000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=22646","msgtype":"m.text"},"ts":1386613756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The new W3C ruby stuff, are people implementing this?","msgtype":"m.text"},"ts":1386615427000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I hope not","msgtype":"m.text"},"ts":1386615582000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Then we reject darobin's pull requests?","msgtype":"m.text"},"ts":1386615596000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No, we accept the test cases and fix the expectations :)","msgtype":"m.text"},"ts":1386615628000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1386615637000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: if you have any idea for https://www.w3.org/Bugs/Public/show_bug.cgi?id=23659 please do bounce them around :-)","msgtype":"m.text"},"ts":1386622898000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sweet kittens the web's focus model is complicated when you get right down to it","msgtype":"m.text"},"ts":1386626210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and <dialog> is not going to help make it simpler","msgtype":"m.text"},"ts":1386626222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i need a word for \"object that manages clusters of focusable objects\"","msgtype":"m.text"},"ts":1386627094000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the best i've come up with so far is \"focusable liege\", so please feel free to bikeshed...","msgtype":"m.text"},"ts":1386627109000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh lordy","msgtype":"m.text"},"ts":1386627477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know where this is headed","msgtype":"m.text"},"ts":1386627481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm going to accidentally end up defining the web's key event routing algorithm","msgtype":"m.text"},"ts":1386627500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: define hit testing while at it :-)","msgtype":"m.text"},"ts":1386628613000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that's an entirely separate problem, luckily","msgtype":"m.text"},"ts":1386629701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Luckily for whom?","msgtype":"m.text"},"ts":1386630514000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"me","msgtype":"m.text"},"ts":1386630626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man, i had no idea keyboard focus was this complicated as it is","msgtype":"m.text"},"ts":1386630644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's not very community-spirited of you :p","msgtype":"m.text"},"ts":1386630663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1386630722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seriously, nobody has a better word than \"liege\" for the object that manages focusables?","msgtype":"m.text"},"ts":1386630790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Isn't an object that manages usually called a \"manager\"?","msgtype":"m.text"},"ts":1386630942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hm, i thought we already used that term","msgtype":"m.text"},"ts":1386630993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i guess not!","msgtype":"m.text"},"ts":1386630995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manager it is","msgtype":"m.text"},"ts":1386631003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wish english had a term for \"ancestor-or-self\"","msgtype":"m.text"},"ts":1386631127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well there's something you have in common with the xpath folks","msgtype":"m.text"},"ts":1386631201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and dom, yeah","msgtype":"m.text"},"ts":1386631215000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unlike both of those, however, i prefer to contort my english prose with redundancy rather than contort it with an invented term \"ancestor-or-self\" :-P","msgtype":"m.text"},"ts":1386631249000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do you think of tabindex=\"group 1\" as being a way to declare a tabindex scope? it wouldn't do anything except scope the tabindex of descendants","msgtype":"m.text"},"ts":1386631500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"context is https://www.w3.org/Bugs/Public/show_bug.cgi?id=23960","msgtype":"m.text"},"ts":1386631530000,"senderName":"Hixie","senderId":"Hixie@irc"}
]