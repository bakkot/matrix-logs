[
{"content":{"body":"hey, I'm working with html5lib in python and wondering if anyone has any advice on getting the lxml treebuilder working","msgtype":"m.text"},"ts":1200209340000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"there don't apear to be any exmples that use it","msgtype":"m.text"},"ts":1200209341000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"and when I do","msgtype":"m.text"},"ts":1200209342000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"parser = html5lib.HTMLParser(tree=treebuilders.getTreeBuilder('lxml'))","msgtype":"m.text"},"ts":1200209343000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"I get the following error","msgtype":"m.text"},"ts":1200209344000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"  File \"/Users/aconbere/Projects/python/html5lib/html5parser.py\", line 52, in __init__","msgtype":"m.text"},"ts":1200209400000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"    self.tree = tree()","msgtype":"m.text"},"ts":1200209401000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"TypeError: 'NoneType' object is not callable","msgtype":"m.text"},"ts":1200209402000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"This happens for me both in trunk and in .10","msgtype":"m.text"},"ts":1200209403000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"so I don't know if that's how you expected lxml to be implimented and there's a bug, or if there was some other expectation :-P","msgtype":"m.text"},"ts":1200209404000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"ahh, actually the trunks doc string helps clarify that","msgtype":"m.text"},"ts":1200209460000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"http://dpaste.com/30872/","msgtype":"m.text"},"ts":1200209760000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"is the new traceback","msgtype":"m.text"},"ts":1200209761000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"for the test file","msgtype":"m.text"},"ts":1200209762000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"http://dpaste.com/30873/","msgtype":"m.text"},"ts":1200209763000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1200210360000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"known bug","msgtype":"m.text"},"ts":1200210361000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"okay I'll be about my buisness then","msgtype":"m.text"},"ts":1200210362000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"kig: url of your rewrite page?","msgtype":"m.text"},"ts":1200213840000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"aconbere|mobile: Yeah, there have been problems with lxml since they started validating tag names. We need to come up with a long term solution better than the magic-name based hack we were previously using.","msgtype":"m.text"},"ts":1200221340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sadly, our design assumptions are not quit the same as those made in lxml so there's a bit of an impedance mismatch.","msgtype":"m.text"},"ts":1200221400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: understood","msgtype":"m.text"},"ts":1200222840000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"really I was looking for a way to make parsing microformats easier, which if all I was interested in was getting properly formed xml out html5lib would have been fine for (using one of the other Etree implimentations)","msgtype":"m.text"},"ts":1200222900000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"but I /really/ wanted to be able to apply xsl transforms to the xml","msgtype":"m.text"},"ts":1200222901000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"and lxml makes that so much easier :P","msgtype":"m.text"},"ts":1200222902000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"aconbere|mobile: Yeah, I rather like lxml myself, so there is an incentive there to find a fix :)","msgtype":"m.text"},"ts":1200223500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-D","msgtype":"m.text"},"ts":1200223620000,"senderName":"aconbere|mobile","senderId":"aconbere|mobile@irc"},
{"content":{"body":"Hixie: hmm.... i think the layout of acid3 probably isn't mobile friendly","msgtype":"m.text"},"ts":1200228060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Whoa!","msgtype":"m.text"},"ts":1200228660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the December content model change makes the real Web so much more valid","msgtype":"m.text"},"ts":1200228720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oops. my mistake...","msgtype":"m.text"},"ts":1200228721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: do you have any figures? :)","msgtype":"m.text"},"ts":1200228960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no. And I made a mistake with the start symbol in the schema, so things looked better than they were...","msgtype":"m.text"},"ts":1200229020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200229021000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Do you have any way to automatedly run the validator on lots of pages and see how frequent various errors are?","msgtype":"m.text"},"ts":1200229022000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I don't have that kind of test harness.","msgtype":"m.text"},"ts":1200229080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders whether it would be a useful thing to have","msgtype":"m.emote"},"ts":1200229140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Atom autodiscovery test suite is b0rked","msgtype":"m.text"},"ts":1200229141000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm... opera thinks that http://s.validator.nu/html5/html5full.rnc is text/plain and that http://s.validator.nu/html5/meta.rnc is text/html","msgtype":"m.text"},"ts":1200229260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(both are application/octet-stream)","msgtype":"m.text"},"ts":1200229261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm. I guess I should fix that...","msgtype":"m.text"},"ts":1200229320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: fixed","msgtype":"m.text"},"ts":1200229620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whether having a type like application/relax-ng-compact-syntax at all is between browsers, browser users and the IETF to debate...","msgtype":"m.text"},"ts":1200229680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: early on, Sean Fraser picked up the HTML WG task of testing top sites against the spec definition of validity","msgtype":"m.text"},"ts":1200229860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: I think that would be good to automate","msgtype":"m.text"},"ts":1200229861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: if you already have a framework that prepares an ErrorHandler and an InputSource at hand that would help","msgtype":"m.text"},"ts":1200229920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: alternatively, the Validator.nu Web service interface could be used for that kind of thing","msgtype":"m.text"},"ts":1200229980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: can you see which errors are most common by just people using the validator?","msgtype":"m.text"},"ts":1200230040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: I could add a parameter for putting the HTML parser into the survey mode (where legacy doctypes aren't errors)","msgtype":"m.text"},"ts":1200230041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I think I have a log for that but have never analyzed it","msgtype":"m.text"},"ts":1200230042000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200230100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hmm. looks like I didn't enable the log in deployment after all","msgtype":"m.text"},"ts":1200230160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It might be a good idea to enable it after I land the new content model changes","msgtype":"m.text"},"ts":1200230220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess I should adjust the privacy policy accodingly before I do.","msgtype":"m.text"},"ts":1200230221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MacDomeSleep: url> http://glimr.rubyforge.org/cake/redesign.html (just woke up myself)","msgtype":"m.text"},"ts":1200232740000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Lachy: seen the blog.whatwg.org moderation queue lately?","msgtype":"m.text"},"ts":1200234900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm going to zap the entries from the rapidshare and ringtones users","msgtype":"m.text"},"ts":1200234960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: also, a new version of WP is available","msgtype":"m.text"},"ts":1200235020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: there are two Polish translations of a post of yours in the moderation queue","msgtype":"m.text"},"ts":1200237300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. http://www.w3.org/TR/html/","msgtype":"m.text"},"ts":1200237840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"linked from http://www.w3.org/TR/html4/","msgtype":"m.text"},"ts":1200237841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, thanks for letting me know.","msgtype":"m.text"},"ts":1200240420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen: yeah, that should probably be changed to point to html4/","msgtype":"m.text"},"ts":1200241980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm... is this valid? <figure><legend></legend></figure>","msgtype":"m.text"},"ts":1200242940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: should be, since emptiness is valid prose","msgtype":"m.text"},"ts":1200243120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: however, RELAX NG is unable to make this invalid: <figure>foo<legend></legend>bar</figure>","msgtype":"m.text"},"ts":1200243121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I'm working on fixing that in Java","msgtype":"m.text"},"ts":1200243122000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok, so you're aware of v.nu not agreeing with the spec wrt figure... :)","msgtype":"m.text"},"ts":1200243180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it seems to do the right thing when you put elements in there, but not text or nothing","msgtype":"m.text"},"ts":1200243360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I wasn't aware that there was a problem with nothingness","msgtype":"m.text"},"ts":1200243720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Error: Required children missing from element figure.","msgtype":"m.text"},"ts":1200243900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I had accidentally made it require one prose element instead of prose content","msgtype":"m.text"},"ts":1200244020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i was about to send an email about empty <tbody>, but it turns out that i had already complained about that twice","msgtype":"m.text"},"ts":1200244140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1200244141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: fix for nothingness deployed. thanks","msgtype":"m.text"},"ts":1200244320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whoa. I was wrong about the expressiveness of RELAX NG in this case, apparently","msgtype":"m.text"},"ts":1200244380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which is nice","msgtype":"m.text"},"ts":1200244381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"notes that <map> now also has a friendlier content model","msgtype":"m.emote"},"ts":1200245040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I implemented that one correctly, didn't I?","msgtype":"m.text"},"ts":1200245160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes, afaict","msgtype":"m.text"},"ts":1200245161000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200245220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it was a note to self... :) i think i have sent email about that too, before","msgtype":"m.text"},"ts":1200245221000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"previously this was not allowed: <map><area ...></map>","msgtype":"m.text"},"ts":1200245222000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm positively puzzled and surprised to learn that RELAX NG can deal with <figure>a<legend/>b</figure>","msgtype":"m.text"},"ts":1200245340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is text different from elements in relax ng?","msgtype":"m.text"},"ts":1200245520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I had thought it was different with the comma combinator, but it seems that it isn't","msgtype":"m.text"},"ts":1200245640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200245641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: It seems I have fixed a noscript-in-head bug you reported. thanks","msgtype":"m.text"},"ts":1200246060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: cool. can't remember what it was i reported, though :)","msgtype":"m.text"},"ts":1200246120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why did html4 forbid IMG|OBJECT|BIG|SMALL|SUB|SUP from <pre>?","msgtype":"m.text"},"ts":1200246360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: presumably they don't fit the idea of having only monospace text","msgtype":"m.text"},"ts":1200246420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: you reported that <h1><noscript><p>... validates in HTML 4 in Validator.nu. I can't reproduce the problem.","msgtype":"m.text"},"ts":1200246480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aha. right","msgtype":"m.text"},"ts":1200246780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: yeah. if that's a good reason then perhaps html5 should ban it as well","msgtype":"m.text"},"ts":1200246900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"The DTD fragment above indicates which elements may not appear within a PRE declaration. This is the same as in HTML 3.2, and is intended to preserve constant line spacing and column alignment for text rendered in a fixed pitch font. Authors are discouraged from altering this behavior through style sheets.\"","msgtype":"m.text"},"ts":1200246960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can <dl> be within <p>?","msgtype":"m.text"},"ts":1200249300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(in the text/html serialisation)","msgtype":"m.text"},"ts":1200249301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1200249360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no.","msgtype":"m.text"},"ts":1200249361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: this one is still wrong:","msgtype":"m.text"},"ts":1200250020000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"      style.appendChild(doc.createTextNode('@media not all and (bogus) { #f { text-transform: uppercase; } }'));","msgtype":"m.text"},"ts":1200250021000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: that should match (as it does in Safari)","msgtype":"m.text"},"ts":1200250022000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"at least according to my reading of the spec","msgtype":"m.text"},"ts":1200250023000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"the logic reads !(true and false) -> !(false) -> true","msgtype":"m.text"},"ts":1200250080000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: matches in Opera as well","msgtype":"m.text"},"ts":1200251160000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"(and I'm reading the spec the same way as you, the not negates the entire expression","msgtype":"m.text"},"ts":1200251340000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: which honestly I find kinda odd","msgtype":"m.text"},"ts":1200251460000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but it does make the grammar simpler","msgtype":"m.text"},"ts":1200251461000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: indeed","msgtype":"m.text"},"ts":1200251520000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"(or rather, it isn't odd when you are aware that 'not' except at the start of a query is invalid)","msgtype":"m.text"},"ts":1200251521000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"MacDome: surely that reads as !(true and NaN) -> !(NaN) -> NaN ?","msgtype":"m.text"},"ts":1200252120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I wonder if it shouldn't throw an exception","msgtype":"m.text"},"ts":1200261660000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I'm not sure <value> is defiene","msgtype":"m.text"},"ts":1200261661000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: searching media queries for \"nan\" was no hits","msgtype":"m.text"},"ts":1200261662000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"reads http://www.w3.org/TR/css3-values/","msgtype":"m.emote"},"ts":1200261720000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: test 23 is fixed, right?  I see the \"code\" thing got fixed, and the last createElementNS's arguments are now reversed correctly","msgtype":"m.text"},"ts":1200261721000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: I believe hixie fixed it","msgtype":"m.text"},"ts":1200261780000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"or at least fixed as far as you'd been asking","msgtype":"m.text"},"ts":1200261781000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: I didn't reply to all his emails yet","msgtype":"m.text"},"ts":1200261782000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"wonders why \"true and NaN\" would be \"NaN\"","msgtype":"m.emote"},"ts":1200261783000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"that's \"true and number\"","msgtype":"m.text"},"ts":1200261840000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which is \"true and ToBoolean(number)\"","msgtype":"m.text"},"ts":1200261841000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ToBoolean(NaN) is false","msgtype":"m.text"},"ts":1200261842000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"at least talking about ecmascript, which really has no bearing on CSS3 media queries :)","msgtype":"m.text"},"ts":1200261843000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"&& and || in ecmascript return one of their arguments, not booleans","msgtype":"m.text"},"ts":1200261844000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"it's true, media queries do talk in terms of \"1\" and \"0\" instead of \"true\" and \"false\"","msgtype":"m.text"},"ts":1200261900000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"\"A Media Query is a logical expression that is either true or false. A Media Query is true if the media type of the Media Query matches the media type of the device where the user agent is running, and all expressions in the Media Query are true. Also, a Media Query which is otherwise false becomes true if the \"not\" keyword is present.\"","msgtype":"m.text"},"ts":1200261960000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: I think it actually should be a CSS3 parse error","msgtype":"m.text"},"ts":1200261961000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Hixie: since @media specifies a grammar, and (bogus) does not conform to that grammar","msgtype":"m.text"},"ts":1200262020000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: media queries that include an invalid keyword should fail to parse","msgtype":"m.text"},"ts":1200262021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"whether or not there's a \"not\"","msgtype":"m.text"},"ts":1200262022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so the @media rule is discarded","msgtype":"m.text"},"ts":1200262023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"since that's how CSS error handling works","msgtype":"m.text"},"ts":1200262024000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think the NaN was meant to be an analogy","msgtype":"m.text"},"ts":1200262025000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: incidentally, it looks like the algorithm I have for determining which exception to throw is (component-)start(s)-with-colon, ends-with-colon, multiple-colons-in-createElementNS, and start-with-non-ASCII-non-starting-valid-character cause NAMESPACE_ERR with createElementNS, all others are INVALID_CHARACTER_ERR","msgtype":"m.text"},"ts":1200262026000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"othermaciej: ok, well, that would support hixie's test then","msgtype":"m.text"},"ts":1200262080000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"the entire rule can be thrown out","msgtype":"m.text"},"ts":1200262081000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"and a CSS parse error raised","msgtype":"m.text"},"ts":1200262082000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"so \"a::\", \"a::b\", \":foo\", \"a:b:c\", and <something that matches the start-with-non-ASCII possibility> are examples of all the possible namespace errors","msgtype":"m.text"},"ts":1200262140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"DOM2 and DOM3 are actually inconsistent about when NAMESPACE_ERR or INVALID_CHARACTER_ERR should be thrown","msgtype":"m.text"},"ts":1200262200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ha ha ha","msgtype":"m.text"},"ts":1200262260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: a test case would demonstrate this better for me","msgtype":"m.text"},"ts":1200262261000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I should read 3, then -- think I've been using 2","msgtype":"m.text"},"ts":1200262262000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"DOM2 Core generally says this:","msgtype":"m.text"},"ts":1200262320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"INVALID_CHARACTER_ERR: Raised if the specified qualified name contains an illegal character.","msgtype":"m.text"},"ts":1200262321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is different from \"http://www.w3.org/XML/1998/namespace\" [Namespaces].","msgtype":"m.text"},"ts":1200262322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually, no, I've been using 3","msgtype":"m.text"},"ts":1200262323000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"but DOM3 Core says this:","msgtype":"m.text"},"ts":1200262324000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"INVALID_CHARACTER_ERR: Raised if the specified qualified name is not an XML name according to [XML 1.0].","msgtype":"m.text"},"ts":1200262325000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"NAMESPACE_ERR: Raised if the qualifiedName is malformed, if the qualifiedName has a prefix and the namespaceURI is null, or if the qualifiedName is null and the namespaceURI is different from null, or if the qualifiedName has a prefix that is \"xml\" and the namespaceURI is different from \"http://www.w3.org/XML/1998/namespace\" [XML Namespaces], or if the DOM implementation does not support the \"XML\" feature but a non-null namespace UR","msgtype":"m.text"},"ts":1200262326000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I was fixing parsing code as opposed to namespace code, which the changes didn't affect","msgtype":"m.text"},"ts":1200262380000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and there are strings which are not \"an XML name\", but for reasons other than containing an illegal character","msgtype":"m.text"},"ts":1200262381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I can't imagine this really affects real web sites","msgtype":"m.text"},"ts":1200262440000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"in DOM2Core, that's a NAMESPACE_ERR (\"qualifiedName is malformed\"), but in DOM3Core, that's an INVALID_CHARACTER_ERR (\"the specified qualified name is not an XML name\")","msgtype":"m.text"},"ts":1200262441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't think it does","msgtype":"m.text"},"ts":1200262442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jwalden: I'm most interested in us just agreeing","msgtype":"m.text"},"ts":1200262443000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1200262444000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"but, oddly, the DOM2 Core test suite from the w3c tests for the DOM3 Core behavior","msgtype":"m.text"},"ts":1200262445000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jwalden: if we have a nice set of tests, we'll do that.  there are some attached to the bug i posted","msgtype":"m.text"},"ts":1200262446000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"we could really use a DOM5 Core","msgtype":"m.text"},"ts":1200262447000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: URL again?","msgtype":"m.text"},"ts":1200262448000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"othermaciej: like HTML5?","msgtype":"m.text"},"ts":1200262449000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"yes, exactly","msgtype":"m.text"},"ts":1200262450000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"rewrite the spec to make sense","msgtype":"m.text"},"ts":1200262451000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ambiguity die die die","msgtype":"m.text"},"ts":1200262452000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"one which actually tries to describe behavior instead of make a fairytale?","msgtype":"m.text"},"ts":1200262500000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ooo! I like fairytales!","msgtype":"m.text"},"ts":1200262501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"goes to read the DOM specs","msgtype":"m.emote"},"ts":1200262502000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I always got the impression when reading sections of specs which say \"left to the implementor\" that the authors were thinking they were doing us a favor by leaving us \"freedom\"","msgtype":"m.text"},"ts":1200262560000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"they sorta are,since some specs are crazy","msgtype":"m.text"},"ts":1200262561000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but often it just seems lazy to me","msgtype":"m.text"},"ts":1200262562000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"or that they didn't sit down to think out what would make sense.","msgtype":"m.text"},"ts":1200262563000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"well, some things that were left up to the implementation are cases where, if we'd locked in the first guess at the right behavior, we'd be stuck with bad performance","msgtype":"m.text"},"ts":1200262564000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is making poor generalizations about spec authors","msgtype":"m.emote"},"ts":1200262565000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"like how exactly the prototype / method structure of JS DOM bindings should work","msgtype":"m.text"},"ts":1200262620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"speaking of specs and poor performance","msgtype":"m.text"},"ts":1200262621000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"spec authoring is kinda a thankless job","msgtype":"m.text"},"ts":1200262622000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"but yeah, in most cases, interoperability is worth more than implementation freedom","msgtype":"m.text"},"ts":1200262623000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"do DOM specs require support for \"attribute nodes\" and other such nonsense?","msgtype":"m.text"},"ts":1200262624000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"or is that part optional?","msgtype":"m.text"},"ts":1200262625000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"they do require it, but it's possible to avoid ever making them for normal cases","msgtype":"m.text"},"ts":1200262626000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: sometimes I do wonder why I try, knowing I'll be ridiculed whatever I write in the spec.","msgtype":"m.text"},"ts":1200262627000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(where the spec = any spec I write)","msgtype":"m.text"},"ts":1200262680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"WebKit makes real attribute nodes only on demand","msgtype":"m.text"},"ts":1200262681000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I think your @media tests could be made more clear by indicating // silently fails to parse","msgtype":"m.text"},"ts":1200262682000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"(afaik the only demand comes from the DOM test suite)","msgtype":"m.text"},"ts":1200262683000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gsnedders: well, IMO Hixie (and the other whatwg participants) have done a huge service to web authors","msgtype":"m.text"},"ts":1200262684000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I think WebKit passes pretty much all of the DOM1 Core and DOM2 Core w3c test suites, except for the tests that are contrary to compatibility requirements, and the tests where DOM2 and DOM3 have contradictory requirements","msgtype":"m.text"},"ts":1200262740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but the DOM working group refused to fix those things in the spec","msgtype":"m.text"},"ts":1200262741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MacDome: but still, ridiculed for trying to specify exact behaviour, and leaving nothing able to be added to the parser (like namespaces, if it is possible)","msgtype":"m.text"},"ts":1200262742000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"othermaciej: I wonder if a public page of \"we intentionally disagree\" would aid in convincing them.  it probably wouldnt' be worth the time","msgtype":"m.text"},"ts":1200262800000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: the DOM Working Group no longer exists","msgtype":"m.text"},"ts":1200262801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is against making work for arguing with folks","msgtype":"m.emote"},"ts":1200262802000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"i see.","msgtype":"m.text"},"ts":1200262803000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"That does complicate matters, then.","msgtype":"m.text"},"ts":1200262860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"othermaciej: nothing more exciting to do with the DOM?","msgtype":"m.text"},"ts":1200262861000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I think the Web API Working Group would be willing to host work for a realistic DOM spec","msgtype":"m.text"},"ts":1200262862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but no one has time","msgtype":"m.text"},"ts":1200262863000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Some of the specs already in the Web API WG have died off for lack of time.","msgtype":"m.text"},"ts":1200262864000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"web browsers (And more importantly web apps) have hit a layer of complexity where things like HTML5 become essential","msgtype":"m.text"},"ts":1200262865000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: the DOM working group towards the end was seemingly more focused on server-side Java than browser-hosted implementations","msgtype":"m.text"},"ts":1200262866000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"browsers are coming to another level of refinement","msgtype":"m.text"},"ts":1200262867000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"(I am, FWIW, working on a spec of dealing with HTTP data)","msgtype":"m.text"},"ts":1200262920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"someone should propose that HTTP headers should use XML-like namespaces defined by URIs","msgtype":"m.text"},"ts":1200263040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"just to watch the fireworks","msgtype":"m.text"},"ts":1200263041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Already been proposed.","msgtype":"m.text"},"ts":1200263100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and hey, why only headers, maybe methods too)","msgtype":"m.text"},"ts":1200263101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I probably can't find a link to a discussion, but it's happened.","msgtype":"m.text"},"ts":1200263102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I underestimated the power of human stupidity","msgtype":"m.text"},"ts":1200263103000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, I totally want to namespace my headers!","msgtype":"m.text"},"ts":1200263104000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"xmlns:FooBar=\"http://www.foobar.com/2007/FooBar\"","msgtype":"m.text"},"ts":1200263160000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Get rid of all this X-* nonsense!","msgtype":"m.text"},"ts":1200263161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"FooBar:ContentType = FooDelicious","msgtype":"m.text"},"ts":1200263162000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"sniffs the delicious foo","msgtype":"m.emote"},"ts":1200263163000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: most interesting would be someone making a locally-runable HTTP test suite","msgtype":"m.text"},"ts":1200263220000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"with all sorts of header parsing tests","msgtype":"m.text"},"ts":1200263221000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"MacDome: I've made a start, but the biggest issue is testing how things like dates are parsed","msgtype":"m.text"},"ts":1200263280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: the fact that CF network still has cookie parsing errors is an indication to me of the lack of a good test suite","msgtype":"m.text"},"ts":1200263281000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"or just a big test","msgtype":"m.text"},"ts":1200263340000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"like Acid3","msgtype":"m.text"},"ts":1200263341000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"which when you pass you can claim compliance","msgtype":"m.text"},"ts":1200263342000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"something that tested for pipelining support would be preferred :)","msgtype":"m.text"},"ts":1200263343000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"A lot of behaviour is undefined anyway","msgtype":"m.text"},"ts":1200263344000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MacDome: cookies don't even have a proper spec defining them","msgtype":"m.text"},"ts":1200263345000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gsnedders: well I'm totally looking forward to Base1 :)","msgtype":"m.text"},"ts":1200263346000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"wonders where Base1 came from :)","msgtype":"m.emote"},"ts":1200263400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"there's the \"HTTP State Management\" spec which defines cookie headers that no one uses","msgtype":"m.text"},"ts":1200263401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Acid2 :)","msgtype":"m.text"},"ts":1200263402000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1200263403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: if you have an acid test, why not a base test?","msgtype":"m.text"},"ts":1200263404000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"bets gsnedders can mke the connection :)","msgtype":"m.emote"},"ts":1200263405000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"hasn't done chemistry is a couple of years :P","msgtype":"m.emote"},"ts":1200263406000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: you could be our hero!","msgtype":"m.text"},"ts":1200263407000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"fix damn networking issues for good","msgtype":"m.text"},"ts":1200263460000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"<super:gsnedders>?","msgtype":"m.text"},"ts":1200263461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"require support for some sort of sane multi-part/mixed thing as well :","msgtype":"m.text"},"ts":1200263462000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1200263463000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"Maybe I'll make Base1 when I'm finished with everything else :)","msgtype":"m.text"},"ts":1200263464000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wishes the W3c would do more test suite development *alongside* their spec work","msgtype":"m.emote"},"ts":1200263520000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"hopes Hixie hasn't trademarked Acid*, Alkaline*, Base*","msgtype":"m.emote"},"ts":1200263521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"things like SVG should have had 10000 tests","msgtype":"m.text"},"ts":1200263522000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"some people are questioning the need for tests for HTML 5, sadly.","msgtype":"m.text"},"ts":1200263523000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the original acid test was the CSS box model acid test","msgtype":"m.text"},"ts":1200263524000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"was IE5/Mac not the first to pass acid?","msgtype":"m.text"},"ts":1200263580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's a bit annoying to write tests while the spec is still being developed, because any spec change could potentially invalidate anything in the test suite and you have to carefully check every one to see if it should change","msgtype":"m.text"},"ts":1200263640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In the case of HTML 5, I've found some bugs in some algorithms doing so though, that weren't obvious just looking at them.","msgtype":"m.text"},"ts":1200263641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MacDome: if you have any suggestions of actually finding parsed values of headers it'd be welcome","msgtype":"m.text"},"ts":1200263700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"finds undefined behaviour in XMLHttpRequest","msgtype":"m.emote"},"ts":1200263701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: I think that could be mitigated by using some sort of assert() scheme where you swapped out assert during development, and had it only print the current result, instead of actually checking","msgtype":"m.text"},"ts":1200263702000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"then you coudl go back and fix the \"expected\" side of the assertr","msgtype":"m.text"},"ts":1200263703000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"shouldBeEqual(foo, bar);","msgtype":"m.text"},"ts":1200263704000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"develpoment : print whatever foo actually is","msgtype":"m.text"},"ts":1200263760000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"production : check against bar","msgtype":"m.text"},"ts":1200263761000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"I guess you can always check","msgtype":"m.text"},"ts":1200263762000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"you just would ignore FAIL","msgtype":"m.text"},"ts":1200263763000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"didn't actually have a very useful proposal just then","msgtype":"m.emote"},"ts":1200263820000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"mostly lots of hot air","msgtype":"m.text"},"ts":1200263821000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"goes back to coding","msgtype":"m.emote"},"ts":1200263822000,"senderName":"MacDome","senderId":"MacDome@irc"},
{"content":{"body":"unfortunately, serializing spec development and test suite development is also a bad thing","msgtype":"m.text"},"ts":1200263823000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because applying the test suite to implementations may find bugs in the spec","msgtype":"m.text"},"ts":1200263824000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's more of an argument for interleaving spec development with implementation","msgtype":"m.text"},"ts":1200263940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"randomized testing is also good at finding bugs in specs, but you need an implementation","msgtype":"m.text"},"ts":1200264000000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"MacDome, othermaciej: what would be the best way to contact the CF Network guys?","msgtype":"m.text"},"ts":1200264060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"you need multiple implementations","msgtype":"m.text"},"ts":1200264061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that too","msgtype":"m.text"},"ts":1200264120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but then you need thorough testing, not just spot tests, to make them interoperable","msgtype":"m.text"},"ts":1200264121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"gsnedders: contact about what?","msgtype":"m.text"},"ts":1200264122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I've been slightly surprised when writing tests to find bits of the spec that are undefined or ambiguous, but have been implemented multiple times and no implementor commented on them","msgtype":"m.text"},"ts":1200264123000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in super-high-integerity software development, there's this idea called \"traceability\", which is that you maintain a database tracking all dependencies between code, specs and testcases","msgtype":"m.text"},"ts":1200264124000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"othermaciej: Impl. of HTTP","msgtype":"m.text"},"ts":1200264125000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: what I'm getting at is, would this be a bug report?","msgtype":"m.text"},"ts":1200264180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if so, bugreport.apple.com is the right way","msgtype":"m.text"},"ts":1200264181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if not, I'm not sure","msgtype":"m.text"},"ts":1200264182000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: well, judging by the fact that I don't really know what yet… :D","msgtype":"m.text"},"ts":1200264183000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"unfortunately that is incredibly expensive and slow","msgtype":"m.text"},"ts":1200264184000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"othermaciej: you need to be 18 to join the ADC, so can't really use bugreport.apple.com","msgtype":"m.text"},"ts":1200264185000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: You could lie like everyone else does :-p","msgtype":"m.text"},"ts":1200264240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: already done that :P","msgtype":"m.text"},"ts":1200264241000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: \"can't *really*\"","msgtype":"m.text"},"ts":1200264242000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: well, many times I've implemented something where the spec is just plain *wrong* yet other implementations claim to have implemented it correctly :-)","msgtype":"m.text"},"ts":1200264243000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"gsnedders: even for the student membership?","msgtype":"m.text"},"ts":1200264300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah","msgtype":"m.text"},"ts":1200264301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"go figure","msgtype":"m.text"},"ts":1200264302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sues Apple under agism laws :P","msgtype":"m.emote"},"ts":1200264303000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's probably because of all the porn","msgtype":"m.text"},"ts":1200264360000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"gsnedders: it's probably because contracts with a minor are not enforceable, and access to ADC provides access to some info that is technically under NDA","msgtype":"m.text"},"ts":1200264361000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`: most implementors are not overly concerned with ambiguities or even outright wrongness in the spec","msgtype":"m.text"},"ts":1200264362000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"What do really old people do when they go to a website with over-18-only content that requires them to select their year of birth from a drop-down list that starts at 1901?","msgtype":"m.text"},"ts":1200264363000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: what if they're female, and seeming you're not meant to ask old women for their age…","msgtype":"m.text"},"ts":1200264420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Hmm, that wouldn't work very well if it's only for old women, because that would mean if you didn't ask someone their age then you would be implying they are old","msgtype":"m.text"},"ts":1200264421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"they append the required year to the combobox by handwriting a javascript: URL","msgtype":"m.text"},"ts":1200264480000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Ah, cunning","msgtype":"m.text"},"ts":1200264540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or just use telnet to submit a request to the server with the correct year, and hope the server just uses inequality year less than, and copy the cookie to the browser","msgtype":"m.text"},"ts":1200264600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"someone could write a pointy-clicky Firefox extension for this","msgtype":"m.text"},"ts":1200264660000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"thus locking up Firefox share in the 108+ demographic","msgtype":"m.text"},"ts":1200264661000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Nice, my… would be thankful.","msgtype":"m.text"},"ts":1200264720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wait, I don't have any relatives over >108.","msgtype":"m.text"},"ts":1200264721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: if you want a really evil testcase for createElementNS, createElementNS(\"http://example.com/\", \"a:\\u0BC6\") should throw with e.code == 14 (the Unicode char is a CombiningChar, which is NCNameChar but not Letter | \"_\")","msgtype":"m.text"},"ts":1200267600000,"senderName":"jwalden","senderId":"jwalden@irc"}
]