[
{"content":{"body":"TabAtkins, sorry I'm affraid I'm a little bit stuck here","msgtype":"m.text"},"ts":1393286671000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"could you help me drafting the algorithm?","msgtype":"m.text"},"ts":1393286719000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"i'm back with http://dpaste.com/1655272/","msgtype":"m.text"},"ts":1393286766000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"Not really; I don't code against vanilla lxml if I can help it, because the API is terrible.","msgtype":"m.text"},"ts":1393286948000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, what would you use instead?","msgtype":"m.text"},"ts":1393286972000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"My custom DOM-like API on top of it, and tears when I have to use it directly. ^_^","msgtype":"m.text"},"ts":1393286998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"on top of what? lxml.etree?","msgtype":"m.text"},"ts":1393287034000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"or something else?","msgtype":"m.text"},"ts":1393287042000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"What I'm suggesting is that you make your algorithm able to take a sequence of elements (like all the children of <body>), and find the subset of them that belong to a given implicit section.  Use that to wrap them into a <section>, then re-run it on the children of the <section>.","msgtype":"m.text"},"ts":1393287175000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, ok I give another try","msgtype":"m.text"},"ts":1393287291000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"(I assume that you're running this against a relatively \"flat\" document, where all the headings are siblings.  More complicated structures can't be automatically wrapped in <section>s, because the outline algorithm doesn't necessary correspond to a reasonable nesting structure.)","msgtype":"m.text"},"ts":1393287481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I have this now: http://dpaste.com/1655376/","msgtype":"m.text"},"ts":1393289059000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"Hixie, I'm back","msgtype":"m.text"},"ts":1393289493000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"is scrolling backwards","msgtype":"m.emote"},"ts":1393289627000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie, ok I'm collecting your questions as issues with proposed answers.","msgtype":"m.text"},"ts":1393289983000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"re:  there's been feature requests for tabindex scoping in HTML - URLs?","msgtype":"m.text"},"ts":1393289987000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"well really my question is what's your roadmap. are we talking 2 weeks? 2 months? 2 years?","msgtype":"m.text"},"ts":1393290012000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not a high enough priority for me to put on an explicit roadmap - hence the request for URLs to the requests","msgtype":"m.text"},"ts":1393290101000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"regardless, I'm collecting questions/ thoughts / issues here: http://wiki.csswg.org/ideas/nav-index","msgtype":"m.text"},"ts":1393290114000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"k. what i propose to do then is spec up what html needs just so we can define the status quo, probably this week or so, and then whenever is convenient for you, if you conclude that it should all be defined in CSS instead, just let me know and we can rip it out of HTML then","msgtype":"m.text"},"ts":1393290173000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't have any real questions / thoughts / issues other than what i mentioned above -- just a matter of speccing the status quo, for now, and in the future, that issue of the scoping thing.","msgtype":"m.text"},"ts":1393290205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(this only became relevant recently because i just revamped how focus is specced, so there's a lot of loose ends now that i'd like to tie up sooner rather than later)","msgtype":"m.text"},"ts":1393290237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie we have to define the status quo of tabindex *anyway*","msgtype":"m.text"},"ts":1393290253000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so nothing should block you from doing that","msgtype":"m.text"},"ts":1393290261000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"well the only part of tabindex that isn't specced is the sequential navigation algorithm at this point","msgtype":"m.text"},"ts":1393290278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm happy to wait to see what you do there before doing anything further with nav-indesx","msgtype":"m.text"},"ts":1393290286000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"which presumably is the same algorithm that would take into accound nav-index","msgtype":"m.text"},"ts":1393290288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roger","msgtype":"m.text"},"ts":1393290291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well there's the absence of spec, and then there's the issues that have been reported","msgtype":"m.text"},"ts":1393290312000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"are there issues other than the above? i looked at the urls you pasted but they didn't have much in the way of anything else","msgtype":"m.text"},"ts":1393290345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least, not that i saw","msgtype":"m.text"},"ts":1393290351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, these were enough of a pain that I gave up for now: http://wiki.csswg.org/ideas/nav-index#external-issues-to-be-incorporated","msgtype":"m.text"},"ts":1393290481000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"if you want to tackle all those, be my guest","msgtype":"m.text"},"ts":1393290490000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that seems to boil down to \"status quo\" + \"scoping\"","msgtype":"m.text"},"ts":1393290528000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you could at least drop in a few URLs to your resolutions to that wiki page that would be great. or ping me here and I'll edit the page - either way I do want to shadow this work","msgtype":"m.text"},"ts":1393290531000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=24719 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=23960 are the two things on my radar (status quo and scoping respectively)","msgtype":"m.text"},"ts":1393290594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not planning on doing the scoping thing soon","msgtype":"m.text"},"ts":1393290610000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the only decision is \"should we match the status quo\" which i'm answering \"yes\" to. :-)","msgtype":"m.text"},"ts":1393290635000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, that's an excellent start and scoping of work ;)","msgtype":"m.text"},"ts":1393290787000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and thanks for the URLs, incorporated as references: http://wiki.csswg.org/ideas/nav-index#within-a-dialog-and-browsing-context","msgtype":"m.text"},"ts":1393290966000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: haven't looked in a while...anyone doing focus on <summary> correctly yet?","msgtype":"m.text"},"ts":1393291146000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"define \"correctly\"? :-)","msgtype":"m.text"},"ts":1393291159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and <summary> containing a link","msgtype":"m.text"},"ts":1393291163000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"not sure.","msgtype":"m.text"},"ts":1393291192000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gotta go, though. bbl.","msgtype":"m.text"},"ts":1393291197000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, I'm getting there it seems, but I'm having troubles with recursion: http://dpaste.com/1655487/","msgtype":"m.text"},"ts":1393291274000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"TabAtkins, kind of there, seems to make the deal: http://dpaste.com/1655573/","msgtype":"m.text"},"ts":1393293186000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"thanks a lot for helping out$","msgtype":"m.text"},"ts":1393293190000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"Anybody with a corpus want to grep for -moz-grid?","msgtype":"m.text"},"ts":1393313653000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: why do css specs have the \"default stylesheet\" thing still? isn't that a waste of time given html's rendering section?","msgtype":"m.text"},"ts":1393318341000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html should embeded content be part of the edits page?","msgtype":"m.text"},"ts":1393323664000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: i think the splits are a bit arbitrary, based on Philip`_'s size of the scrollbar thumb of each page when he implemented the splitter a few years ago, plus a few tweaks since","msgtype":"m.text"},"ts":1393323946000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ahh ok, gotcha. Didn't realise it was automated like that","msgtype":"m.text"},"ts":1393324017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"karlcow, :)","msgtype":"m.text"},"ts":1393325298000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: it's always possible to tweak the splits if they're suboptimal, though i'm not sure who maintains it now","msgtype":"m.text"},"ts":1393325346000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, does anybody spec things like UIEvent.layerX?","msgtype":"m.text"},"ts":1393326721000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: don't see it in dom3events or uievents","msgtype":"m.text"},"ts":1393326799000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: what does it do?","msgtype":"m.text"},"ts":1393326808000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No idea, I noticed it in IDL that Servo copied from Gecko","msgtype":"m.text"},"ts":1393326837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i sense that goto fail; is the new meme","msgtype":"m.text"},"ts":1393328438000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1393328472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The DOMContentLoaded event bubbles, anyone know why?","msgtype":"m.text"},"ts":1393329785000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: probably because that's what gecko (or whoever was first) implemented","msgtype":"m.text"},"ts":1393330799000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh yeah, it does bubble window, didn't realise that","msgtype":"m.text"},"ts":1393331261000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so, who is the Custom Elements guru here?","msgtype":"m.text"},"ts":1393333699000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"why is there the \"is\" attribute for custom elements that use the \"extends\" clause?","msgtype":"m.text"},"ts":1393333716000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Been playing around with the idea of pseudo-classes to hide content that hasn't fully parsed/loaded https://docs.google.com/document/d/1qUAI7BGEAMYh6aNq3NGW2BlI6hNhg4_tKLhL_VsiRqU/edit","msgtype":"m.text"},"ts":1393341063000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hoping it'll be an alternative to html imports render-blocking by default","msgtype":"m.text"},"ts":1393341091000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hi, I just posted a mail on keygen, if anyone has any questions on it","msgtype":"m.text"},"ts":1393341393000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"\"RDF 1.1 is a W3C Recommendation\"","msgtype":"m.text"},"ts":1393341407000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"WHAT YEAR IS IT?!","msgtype":"m.text"},"ts":1393341412000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well application/pkix-cert does not seem to work on Chrome for the returned X509 certificate","msgtype":"m.text"},"ts":1393341599000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: saw your message but haven't read it yet. I think you'll have a serious uphill battle trying to convince people we should use keygen for anything new","msgtype":"m.text"},"ts":1393341836000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"keygen works very well","msgtype":"m.text"},"ts":1393341841000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"ok I guess I'll just wish you luck then","msgtype":"m.text"},"ts":1393341854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And Client Side Certificates can be very useful for helping us leave the space of centralised services https://dvcs.w3.org/hg/WebID/raw-file/tip/spec/index.html","msgtype":"m.text"},"ts":1393341861000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"It's just not widely known how to use them to avoid CAs","msgtype":"m.text"},"ts":1393341866000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"anyway, all that's missing in the spec is the specification of the mime type  application/x-x509-user-cert since I did not find that in IANA, and that seems to be used in each browser","msgtype":"m.text"},"ts":1393342030000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"ericc: g'morning!","msgtype":"m.text"},"ts":1393346025000,"senderName":"jernoble|laptop","senderId":"jernoble|laptop@irc"},
{"content":{"body":"good morning dglazkov !","msgtype":"m.text"},"ts":1393350663000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1393350665000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"whoa","msgtype":"m.text"},"ts":1393350674000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"0/","msgtype":"m.emote"},"ts":1393350683000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"if i do a bing search for [hixie tests adhoc html frames iframes], the first hit is:","msgtype":"m.text"},"ts":1393350857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML Frames: absolute parent.frames['top'].location.href","msgtype":"m.text"},"ts":1393350860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"www.hixie.ch/tests/adhoc/html/frames/004.html","msgtype":"m.text"},"ts":1393350862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pass.","msgtype":"m.text"},"ts":1393350865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i can tell, http://hixie.ch/tests/adhoc/html/frames/iframes/004.html doesn't contain the word \"pass\"","msgtype":"m.text"},"ts":1393350873000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so where the heck are they getting the word \"pass\" from???","msgtype":"m.text"},"ts":1393350880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if (site.host == \"hixie.ch\" && site.path.indexOf(\"/tests/\") > -1) {site.summary = \"pass\"}, perhaps?","msgtype":"m.text"},"ts":1393351005000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: (those are different URLs FWIW)","msgtype":"m.text"},"ts":1393351150000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh hey, so they are","msgtype":"m.text"},"ts":1393351185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how did i miss that those urls were different","msgtype":"m.text"},"ts":1393351197000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gives Hixie a cup of coffee","msgtype":"m.emote"},"ts":1393351258000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"doesn't think that will help","msgtype":"m.emote"},"ts":1393351297000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"should `element.id = null` result in `id=\"null\"` or remove the `id` attribute? Safari removes, Chrome and Firefox set \"null\" as the attribute value","msgtype":"m.text"},"ts":1393351308000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"(he will jsut give it back to you)","msgtype":"m.text"},"ts":1393351311000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"did this change recently?","msgtype":"m.text"},"ts":1393351320000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"data:text/html,<p id=x></p><script>var el = x; el.id = null; console.log(el.outerHTML)</script>","msgtype":"m.text"},"ts":1393351369000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: looks to me like it should set it to \"null\".","msgtype":"m.text"},"ts":1393351389000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"per spec, anyway","msgtype":"m.text"},"ts":1393351391000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"null coerces to \"null\" in WebIDL","msgtype":"m.text"},"ts":1393351404000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":".id is defined as reflecting","msgtype":"m.text"},"ts":1393351411000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and reflecting is defined as follows: On setting, set an attribute for the context object using the name of the attribute and the given value","msgtype":"m.text"},"ts":1393351422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks for confirming","msgtype":"m.text"},"ts":1393351445000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"files WebKit bug","msgtype":"m.emote"},"ts":1393351445000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"\"MikeSmith: You don't need to do anything! I need to get off my ass and do something.\"","msgtype":"m.text"},"ts":1393351722000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"haha wilhelm actually scribed that","msgtype":"m.text"},"ts":1393352098000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: Possibly, yeah.","msgtype":"m.text"},"ts":1393352576000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: have you or the CSS WG overall considered putting \"Don't use this\" warnings on CSS TR drafts?","msgtype":"m.text"},"ts":1393352831000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yes we have, but I haven't cared enough to overcome the inertia against making changes like that.","msgtype":"m.text"},"ts":1393352863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I ask because I just noticed an implementor somebody in the WebDriver f2f citing TR versions of CSSOM and CSSOM View","msgtype":"m.text"},"ts":1393352883000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: ok","msgtype":"m.text"},"ts":1393352888000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I figured that was why","msgtype":"m.text"},"ts":1393352903000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"FWIW, https://github.com/mozilla/servo/wiki/Relevant-spec-links may be useful outside of Servo","msgtype":"m.text"},"ts":1393352940000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Inertia at the CSSWG?","msgtype":"m.text"},"ts":1393352948000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Who'd have thought","msgtype":"m.text"},"ts":1393352953000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: inertia for for making changes to anything on /TR","msgtype":"m.text"},"ts":1393352984000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"It's almost like we're a mature W3C group, and filled with a decent number of people who are scared of living standards.","msgtype":"m.text"},"ts":1393352988000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: btw for some reason I thought you were co-editing CSSOM","msgtype":"m.text"},"ts":1393353002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: Specifically, making *negative-sounding* changes to anything on /TR.","msgtype":"m.text"},"ts":1393353007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Heh, mature","msgtype":"m.text"},"ts":1393353015000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I like how you put the implied scare quotes around the word mature there","msgtype":"m.text"},"ts":1393353036000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I’m not, though I did make an edit once after zcorpan’s +1","msgtype":"m.text"},"ts":1393353087000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"Mature\" meaning \"crotchety\", in my case.","msgtype":"m.text"},"ts":1393353088000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: you editing something though I thought","msgtype":"m.text"},"ts":1393353211000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Syntax ?","msgtype":"m.text"},"ts":1393353222000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ah yeah that","msgtype":"m.text"},"ts":1393353230000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and Paged Media, though not really since I left Kozea","msgtype":"m.text"},"ts":1393353259000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1393353301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: that servo page is amazing.","msgtype":"m.text"},"ts":1393353332000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"man I need HTML Imports and friends so that I can create a Fugly Warning component and easilty add it to tons of documents in TR","msgtype":"m.text"},"ts":1393353349000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: Those people are just the ones who need to see that real downstream users of CSS are having to route around the damage the WG is causing","msgtype":"m.text"},"ts":1393353399000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"maybe we should just get the IP ranges for all browser vendors and just block all those from access to /TR","msgtype":"m.text"},"ts":1393353422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: It's been stated.  Some of them *cough*Bert*cough* don't care.","msgtype":"m.text"},"ts":1393353423000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So those people should be ignored","msgtype":"m.text"},"ts":1393353435000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: That would be a pretty wonderful idea.","msgtype":"m.text"},"ts":1393353437000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, sounds difficult for Mozilla","msgtype":"m.text"},"ts":1393353455000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: Yeah, so let's go back to the \"mature W3C group\" part, and how it's hard to deal with politics.","msgtype":"m.text"},"ts":1393353459000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, why not block access to TR for everyone except Sofia-Antipolis?","msgtype":"m.text"},"ts":1393353492000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well if their response is \"fuck you\" it's not politics, it's childishness","msgtype":"m.text"},"ts":1393353498000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1393353518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But hey, they're employees.","msgtype":"m.text"},"ts":1393353530000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And we're back to my scare quotes","msgtype":"m.text"},"ts":1393353537000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Why not just take down TR and then tell anyone who complains to get over themselves","msgtype":"m.text"},"ts":1393353537000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I added fugly to the WebDriver spec at least, just now http://www.w3.org/TR/webdriver/","msgtype":"m.text"},"ts":1393353562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"There's the ongoing effort (that's getting close to completion, I think?) to make /TR show the ED if the editors opt into it.","msgtype":"m.text"},"ts":1393353566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Har har har","msgtype":"m.text"},"ts":1393353576000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's nice to have some WGs where I can just do stuff without anybody complaining","msgtype":"m.text"},"ts":1393353649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like the WebDriver WG aka Browser Tools and Testing","msgtype":"m.text"},"ts":1393353673000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: Opt-in sounds awful. It just makes the problem inconsistent so that people don't learn there's an issue and then trip up","msgtype":"m.text"},"ts":1393353684000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"because everybody in that WG is basically sane and focused on actually working on stuff","msgtype":"m.text"},"ts":1393353706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, I guess it must be an \"immature\" group","msgtype":"m.text"},"ts":1393353728000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"disputes \"sane\"","msgtype":"m.emote"},"ts":1393353729000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"On the other hand, it's a good way to sneak that shit in without people blowing up, and then once it's established, you can make it mandatory.","msgtype":"m.text"},"ts":1393353731000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham, well, let's just ignore AutomatedTester :)","msgtype":"m.text"},"ts":1393353746000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Like we did with making groups public.  Optional, but gradually nearly everyone become open.  I think maybe all groups are open now?  (Or maybe there's still a few a11y cobwebs that are closed.)","msgtype":"m.text"},"ts":1393353785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Making groups open didn't really have any potential for hidden traps though","msgtype":"m.text"},"ts":1393353879000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Either a group was open or it was closed","msgtype":"m.text"},"ts":1393353889000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"CSS WG needs a crazy staff contact who people are afraid of, afraid to cross. who just does the right thing and then goes on vacation and nobody can figure out how to unwind the stuff he did (like add a Fugly Component to all CSS WG TRs in some obfuscated way)","msgtype":"m.text"},"ts":1393353898000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm I have a feature request for dglazkov","msgtype":"m.text"},"ts":1393353910000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Be our father figure, please?","msgtype":"m.text"},"ts":1393353911000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or dglazkov, yeah.","msgtype":"m.text"},"ts":1393353918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm too chummy to do it.","msgtype":"m.text"},"ts":1393353922000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, Bert?","msgtype":"m.text"},"ts":1393353943000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You forgot \"does the right thing\"","msgtype":"m.text"},"ts":1393353953000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no comment","msgtype":"m.text"},"ts":1393353960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Maybe he thinks he does the right thing?","msgtype":"m.text"},"ts":1393353965000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not here","msgtype":"m.text"},"ts":1393353966000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, he definitely *thinks* he does.","msgtype":"m.text"},"ts":1393353975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, rather I moved the conversation to #testing?","msgtype":"m.text"},"ts":1393353981000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm only here to get dglazkov to spec my mechanism for Secret HTML Imports for adding components to documents in such a way that when you go on vacation nobody else can figure out how to remove them","msgtype":"m.text"},"ts":1393354063000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: we're going through a open bug list here","msgtype":"m.text"},"ts":1393354078000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hack into apache","msgtype":"m.text"},"ts":1393354087000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"which is like listening to nails on the chalkboard","msgtype":"m.text"},"ts":1393354091000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Or better","msgtype":"m.text"},"ts":1393354100000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Install wptserve on w3.org and pass everything except TR/css-* requests to apache","msgtype":"m.text"},"ts":1393354120000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that'd be good","msgtype":"m.text"},"ts":1393354168000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good way for us to test how wptserve works under load at least","msgtype":"m.text"},"ts":1393354187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"14:08 < ondras> so, who is the Custom Elements guru here?","msgtype":"m.text"},"ts":1393354224000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"14:08 < ondras> why is there the \"is\" attribute for custom elements that use the \"extends\" clause?","msgtype":"m.text"},"ts":1393354224000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"MikeSmith: \"works\"","msgtype":"m.text"},"ts":1393354279000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1393354286000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ondras: you need to get some attention from dglazkov","msgtype":"m.text"},"ts":1393354343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok thanks","msgtype":"m.text"},"ts":1393354458000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"dglazkov: ? :)","msgtype":"m.text"},"ts":1393354461000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"dglazkov: why <button is=\"my-button\"> instead of just <my-button>? is there some advantage in the former?","msgtype":"m.text"},"ts":1393354516000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Fallback","msgtype":"m.text"},"ts":1393354610000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Accessibility","msgtype":"m.text"},"ts":1393354613000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Semantics","msgtype":"m.text"},"ts":1393354618000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I do not see any of those. :-)","msgtype":"m.text"},"ts":1393354642000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"<my-button> is also available, right?","msgtype":"m.text"},"ts":1393354650000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Maybe","msgtype":"m.text"},"ts":1393354661000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"why shall I prefer the \"is\" version then?","msgtype":"m.text"},"ts":1393354664000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"It shouldn't be","msgtype":"m.text"},"ts":1393354665000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<Ms2ger> Fallback","msgtype":"m.text"},"ts":1393354669000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<Ms2ger> Accessibility","msgtype":"m.text"},"ts":1393354670000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<Ms2ger> Semantics","msgtype":"m.text"},"ts":1393354670000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so if I do registerElement(\"my-button-1\"), I can do <my-button-1>; when I registerElement(\"my-button-2\", {extend:Button}), I am limited to <button is=\"my-button-2\">","msgtype":"m.text"},"ts":1393354724000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"looks highly illogical to me.","msgtype":"m.text"},"ts":1393354731000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Why would you want to make a button that a non-web-components UA, or an AT, treats like a plain <div> rather than like a <button>?","msgtype":"m.text"},"ts":1393354823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: because I find it straightforward that registerElement(\"x\") implies <x>","msgtype":"m.text"},"ts":1393354886000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"which is true","msgtype":"m.text"},"ts":1393354900000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"in *some* cases","msgtype":"m.text"},"ts":1393354902000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but when I pass one very special additional argument to registerElement","msgtype":"m.text"},"ts":1393354922000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I suddenly cannot do <x>","msgtype":"m.text"},"ts":1393354927000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"from a purely API view, this looks truly strange.","msgtype":"m.text"},"ts":1393354946000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: what do you think a UA will do with a <my-button> element?","msgtype":"m.text"},"ts":1393354954000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I have no idea. Shall I be interested in that?","msgtype":"m.text"},"ts":1393354980000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"my aim is to create a custom element that does some stuff","msgtype":"m.text"},"ts":1393354989000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I am not sure what it does right now","msgtype":"m.text"},"ts":1393354994000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but one day, someone will require some functionality","msgtype":"m.text"},"ts":1393355004000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Presumably your aim is to deliver some content to web users","msgtype":"m.text"},"ts":1393355006000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"preferrably.","msgtype":"m.text"},"ts":1393355010000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"In which case it makes sense to worry about how their UA will treat your content","msgtype":"m.text"},"ts":1393355029000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"probably according to the spec?","msgtype":"m.text"},"ts":1393355038000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"tbh, I understand the background for the is=\"foo\" notation, but my first reaction to this was WTF.","msgtype":"m.text"},"ts":1393355071000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hmh.","msgtype":"m.text"},"ts":1393355077000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"well I probably need some time to understand the reasons","msgtype":"m.text"},"ts":1393355086000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"tobie, that's my first reaction to most of the web","msgtype":"m.text"},"ts":1393355096000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what if I want to extend my-button that already extends button?","msgtype":"m.text"},"ts":1393355099000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1393355101000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hixie: the 'compound microtask' concept seems to be unnecessary","msgtype":"m.text"},"ts":1393355116000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"<button is=\"my-button-2\"> or <my-button is=\"my-button-2\"> ?","msgtype":"m.text"},"ts":1393355120000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: In a UA that doesn't support web-components, what will happen if you write <my-button>?","msgtype":"m.text"},"ts":1393355122000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it will be treated as <div>, I guess","msgtype":"m.text"},"ts":1393355136000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"jgraham: that's implementation specific","msgtype":"m.text"},"ts":1393355141000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie, wat","msgtype":"m.text"},"ts":1393355147000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jamesr__: only in a UA that doesn't support showModalDialog(). While I'm all for that, so far we haven't proved it's possible to drop it, and other UAs have indicated that they want to support it, including in microtasks.","msgtype":"m.text"},"ts":1393355155000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tobie, you're aware we're in the standardization business here?","msgtype":"m.text"},"ts":1393355166000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tobie: No it isn't","msgtype":"m.text"},"ts":1393355171000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1393355174000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Pretty much, yeah","msgtype":"m.text"},"ts":1393355178000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"old IE won't let you style the element at all, afaik","msgtype":"m.text"},"ts":1393355190000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: the same applies to <my-calendar> that does not extend anything","msgtype":"m.text"},"ts":1393355192000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(more like <span>, actually)","msgtype":"m.text"},"ts":1393355194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: even in a UA that supports showModalDialog","msgtype":"m.text"},"ts":1393355215000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"ondras: Well ideally that could extend input type=datetime","msgtype":"m.text"},"ts":1393355216000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not sure if that's possible or not though","msgtype":"m.text"},"ts":1393355225000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there are surely cases where I do not extend. or is that not desirable at all?","msgtype":"m.text"},"ts":1393355233000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"a better spin-the-event-loop definition would fix it too","msgtype":"m.text"},"ts":1393355233000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"jgraham: if the non-extend variant was banished, *that* would make sense to me.","msgtype":"m.text"},"ts":1393355255000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: If you are creating a better version of a control that has native HTML sematics it's always better to extend","msgtype":"m.text"},"ts":1393355271000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but having and not having <x> based on whether it extends something... weird.","msgtype":"m.text"},"ts":1393355271000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"That would make a lot of sense to me too","msgtype":"m.text"},"ts":1393355274000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jamesr__: please file a bug with a concrete proposal. i don't see any other way to do it that satisfies all the constraints, but i'm happy to consider one if one exists.","msgtype":"m.text"},"ts":1393355276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It makes it much more likely that your page will work in down-rev browsers, in assistive technologies and so on","msgtype":"m.text"},"ts":1393355313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"always having to extend would make sense to me too, but extending <span> is kinda pointless, and that's what a lot of components would end up having to do, in practice","msgtype":"m.text"},"ts":1393355343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: : I'm not suggesting this is intentionally left to be impl. specific--just that older IE won't even treat is as a regular div unless you use the document.createElement('foo') trick.","msgtype":"m.text"},"ts":1393355372000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Isn't that quite old IE now?","msgtype":"m.text"},"ts":1393355403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fair enough.","msgtype":"m.text"},"ts":1393355413000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"IE8?","msgtype":"m.text"},"ts":1393355459000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it is old","msgtype":"m.text"},"ts":1393355461000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but still about 20% here in .cz.","msgtype":"m.text"},"ts":1393355468000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I see that extending <span> is pointless, but the complete API divergence re. <x> vs. <stuff is=\"x\"> is so strikingly strange","msgtype":"m.text"},"ts":1393355501000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"either the goal *is* to introduce custom elements, or it is not","msgtype":"m.text"},"ts":1393355525000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(is there really much divergence? i would expect the former to basically just be syntactic sugar for <span is=\"x\">)","msgtype":"m.text"},"ts":1393355564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"perhaps the goal is to confuse developers by introducing a puzzling api? :)","msgtype":"m.text"},"ts":1393355564000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: *if* <my-button> was allowed (and recommended) as well","msgtype":"m.text"},"ts":1393355591000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: so these two variants were freely interchangeable","msgtype":"m.text"},"ts":1393355599000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and one would pick the one that fits his compatibility needs","msgtype":"m.text"},"ts":1393355608000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"The goal was to make the right thing easy and all things possible. The API ended up making the right thing hard :(","msgtype":"m.text"},"ts":1393355610000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"to me, this looks like a clear message \"do not try to make custom elements; extend instead\"","msgtype":"m.text"},"ts":1393355664000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"jgraham and ondras seem to be saying opposite things","msgtype":"m.text"},"ts":1393355677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which can be also read as \"the burden of backward compatibility will haunt you, the developer, forever)","msgtype":"m.text"},"ts":1393355697000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but i'm confused as to why there's much difference at all","msgtype":"m.text"},"ts":1393355701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"extending is definitely better, if there's an appropriate element","msgtype":"m.text"},"ts":1393355717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah. I'm not sure why you think that <x-foo> is harder than <span is=\"x-foo\">","msgtype":"m.text"},"ts":1393355737000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"better w.r.t. non-customelement UAs?","msgtype":"m.text"},"ts":1393355745000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"better with respect to any UA. e.g. a web-componenents UA, when the web component files start 404ing.","msgtype":"m.text"},"ts":1393355782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"better w.r.t. search engines","msgtype":"m.text"},"ts":1393355795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"better w.r.t. downlevel clients","msgtype":"m.text"},"ts":1393355801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"better w.r.t. authors new to the widget library","msgtype":"m.text"},"ts":1393355819000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"okay. so when extending is better, I see no point in <x-foo>","msgtype":"m.text"},"ts":1393355827000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"irc the JS API kind of make <x-foo> the expected markup, rather than <div is=x-foo>","msgtype":"m.text"},"ts":1393355962000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ondras: sometimes, there's nothing appropriate to extend.","msgtype":"m.text"},"ts":1393355985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ondras: e.g. what would you extend if you wanted to make a chess board container?","msgtype":"m.text"},"ts":1393355998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<x-foo> looks way better in the markup than <div is=x-foo>, and is easier to construct in JS.  Has a lot of benefits.","msgtype":"m.text"},"ts":1393356028000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ondras: or a chess piece?","msgtype":"m.text"},"ts":1393356028000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thought it was basically that people didn't like the extra keystrokes and (probably) planned to sell out all the cases where extending is better to make their code a bit prettier","msgtype":"m.text"},"ts":1393356029000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes, the real reason people are pushing non-extended elements is that they think it's prettier and they don't care about all the things i said above","msgtype":"m.text"},"ts":1393356071000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How do selectors handle these?","msgtype":"m.text"},"ts":1393356073000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"which is lame","msgtype":"m.text"},"ts":1393356074000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but my point above is just that even if the main people pushing this have lame reasons, there are also good reasons)","msgtype":"m.text"},"ts":1393356099000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so the lame reasons are moot)","msgtype":"m.text"},"ts":1393356108000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"E.g. when you do doc.querySelectorAll(\"x-foo\"), does it also return <div is=x-foo>?","msgtype":"m.text"},"ts":1393356153000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hixie: for something completely new, I would expect an <element is=\"chess-piece\"> or something","msgtype":"m.text"},"ts":1393356404000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"for the sake of consistency with <button is=\"my-button\">","msgtype":"m.text"},"ts":1393356417000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"why is that better than <chess-piece> ?","msgtype":"m.text"},"ts":1393356418000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for consistency with <button> ?","msgtype":"m.text"},"ts":1393356426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I thought you already outlined the reasons","msgtype":"m.text"},"ts":1393356434000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"20:16 < Hixie> better w.r.t. search engines","msgtype":"m.text"},"ts":1393356440000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"20:16 < Hixie> better w.r.t. downlevel clients","msgtype":"m.text"},"ts":1393356441000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"20:17 < Hixie> better w.r.t. authors new to the widget library","msgtype":"m.text"},"ts":1393356441000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the reasons i gave don't apply here","msgtype":"m.text"},"ts":1393356442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<element is=\"chess-piece\"> and <chess-piece> are identical in all ways except syntax, as far as search engines, down-level clients, unfamiliar authors, etc, go.","msgtype":"m.text"},"ts":1393356485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also, how does the \"extends\" and \"prototype\" mix together? is it not sufficient to use only \"prototype\" ?","msgtype":"m.text"},"ts":1393356488000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: right. but <button is=\"my-button\"> and <my-button> are not, right?","msgtype":"m.text"},"ts":1393356517000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(can anyone test IE for me on http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2845 ? what does the log say?)","msgtype":"m.text"},"ts":1393356523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ondras: right","msgtype":"m.text"},"ts":1393356526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that puzzles me.","msgtype":"m.text"},"ts":1393356534000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"because you offer two ways of doing the same stuff (<e is=\"chess\">, <chess>)","msgtype":"m.text"},"ts":1393356561000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"which is okay","msgtype":"m.text"},"ts":1393356563000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"a better way to put it is <button is=\"zzz-zzz\"> and <zzz-zzz> are different, but <zzz is=\"zzz-zzz\"> and <zzz-zzz> are the same.","msgtype":"m.text"},"ts":1393356565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you forbid one of them in a different context","msgtype":"m.text"},"ts":1393356570000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the difference is that the first (<button is=\"zzz-zzz\">) has a well-understood value, plus the custom value.","msgtype":"m.text"},"ts":1393356593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whereas the second has nothing well-understood.","msgtype":"m.text"},"ts":1393356602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(nor the third, nor the fourth)","msgtype":"m.text"},"ts":1393356623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my interest, as a web developer (and teacher), is what version shall I ideally use","msgtype":"m.text"},"ts":1393356666000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"if you are extending an existing element, is=\"\". otherwise, not is=\"\".","msgtype":"m.text"},"ts":1393356695000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the recommendation of using <my-chessboard> along with <button is=\"my-chess-clock-button\"> simply looks inconsistent","msgtype":"m.text"},"ts":1393356715000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"that's all.","msgtype":"m.text"},"ts":1393356718000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"20:28 < ondras> also, how does the \"extends\" and \"prototype\" mix together? is it not sufficient to use only \"prototype\" ?","msgtype":"m.text"},"ts":1393356739000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"i.e. registerElement(\"my-button\", {prototype:Object.create(Button.prototype)})","msgtype":"m.text"},"ts":1393356767000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"somehow implies that I am extending the HTMLButtonElement","msgtype":"m.text"},"ts":1393356783000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"or how the hell is it called.","msgtype":"m.text"},"ts":1393356788000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it is extending it.","msgtype":"m.text"},"ts":1393357004000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: ?","msgtype":"m.text"},"ts":1393358122000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"tobie: I am not sure I understood","msgtype":"m.text"},"ts":1393358127000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Well, as far as I understand, registerElement(\"my-button\", {prototype:Object.create(Button.prototype)}) makes <my-button> and <button is=my-button> strictly identical in all but old browsers.","msgtype":"m.text"},"ts":1393358277000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: right. so why use registerElement(\"my-button\", {extends:HTMLButtonElement}) ?","msgtype":"m.text"},"ts":1393358353000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"does that exist too?","msgtype":"m.text"},"ts":1393358380000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yes; when you extend stuff, you have to specify the \"extends\" clause in the registerElement descriptor.","msgtype":"m.text"},"ts":1393358543000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1393358598000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which reminds me... what if the prototype/extends does not strictly match the localName of the \"is\" element?","msgtype":"m.text"},"ts":1393358654000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"as in","msgtype":"m.text"},"ts":1393358657000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"<button is=\"my-button\">, registerElement(\"my-button\", {prototype/extends: span})","msgtype":"m.text"},"ts":1393358673000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"just syntax?","msgtype":"m.text"},"ts":1393358737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"conve","msgtype":"m.text"},"ts":1393358737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(that was in reply to earlier comment)","msgtype":"m.text"},"ts":1393358812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"conve\" was?","msgtype":"m.text"},"ts":1393358823000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"convenience","msgtype":"m.text"},"ts":1393358829000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I meant","msgtype":"m.text"},"ts":1393358836000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wifi here at Mozilla office seems not terrifically stable","msgtype":"m.text"},"ts":1393358858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: which office?","msgtype":"m.text"},"ts":1393358878000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"and I'm on IRC in a persistent screen session so I drop off and some text may be buffered (or something)","msgtype":"m.text"},"ts":1393358895000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Are you at the Testing F2F?","msgtype":"m.text"},"ts":1393358901000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie:yeah","msgtype":"m.text"},"ts":1393358904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SF","msgtype":"m.text"},"ts":1393358912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Say hi to all these nice folks.","msgtype":"m.text"},"ts":1393358916000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"the office by the Bay Bridge","msgtype":"m.text"},"ts":1393358919000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"certainly will","msgtype":"m.text"},"ts":1393358922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1393358926000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"waves to tobie","msgtype":"m.emote"},"ts":1393358946000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1393358950000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith, on the guest wifi? :)","msgtype":"m.text"},"ts":1393359054000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah","msgtype":"m.text"},"ts":1393359235000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which by \"guest\" I guess it means it makes it de-guests you now and then so you can then enjoy the hospitality of getting re-guested anew often","msgtype":"m.text"},"ts":1393359312000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Haven't you been on our couch for long enough now?\"","msgtype":"m.text"},"ts":1393359377000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1393359512000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a-ha","msgtype":"m.text"},"ts":1393359752000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it looks like extends:\"button\" is the *only* way to enable <button is=\"my-button\">","msgtype":"m.text"},"ts":1393359770000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"otherwise I would be limited to the (not recommended) <my-button> syntax","msgtype":"m.text"},"ts":1393359785000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"although my-button inherits (prototype-wise) from HTMLButtonElement","msgtype":"m.text"},"ts":1393359798000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"http://www.polymer-project.org/platform/custom-elements.html","msgtype":"m.text"},"ts":1393359811000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: oh so there is a difference","msgtype":"m.text"},"ts":1393361009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: apparently. this stuff is rather complicated, I would say.","msgtype":"m.text"},"ts":1393361013000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Yeah. The cognitive burden is huge. But that's OK because the rest of the platform is super consistant.","msgtype":"m.text"},"ts":1393361024000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"</sarcasm>","msgtype":"m.text"},"ts":1393361058000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":".)","msgtype":"m.text"},"ts":1393361061000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"dglazkov: yeah, I should get back to that bug, but there were other event propagation changes too, IIRC","msgtype":"m.text"},"ts":1393362106000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"something to do with multiple shadow roots","msgtype":"m.text"},"ts":1393362115000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"tries to find that","msgtype":"m.emote"},"ts":1393362123000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: one problem is that I haven't see any real world case needing the current behavior","msgtype":"m.text"},"ts":1393362292000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps I'm missing something","msgtype":"m.text"},"ts":1393362296000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but unless there isn't any real world case, we shouldn't complicate event propagation","msgtype":"m.text"},"ts":1393362318000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I anticipate nobody using is=\"\" because it's too ugly and inconvenient.","msgtype":"m.text"},"ts":1393363709000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"If possible I would make <my-button> via document.registerElement(\"my-button\", { prototype: HTMLButtonElement.prototype }) have the same UA benefits as <button is=\"my-button\"> via document.registerElement(\"my-button\", { extends: \"button\" })","msgtype":"m.text"},"ts":1393363763000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"obviously not the same UA benefits for downlevel browsers","msgtype":"m.text"},"ts":1393363778000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but i think custom-element--using authors are not going to try very hard to make their stuff work there","msgtype":"m.text"},"ts":1393363793000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins: http://dev.w3.org/csswg/css-font-load-events/ 404s?","msgtype":"m.text"},"ts":1393363850000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"css-font-loading","msgtype":"m.text"},"ts":1393363857000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Moved as part of the FPWD.","msgtype":"m.text"},"ts":1393363866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't quite understand why people don't like .ready(); it seems pretty distinct from .load().","msgtype":"m.text"},"ts":1393363939000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"There's not really a need for .ready() separate from .load().","msgtype":"m.text"},"ts":1393363957000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it does give you new capabilities though, right? The ability to get notified upon loading, without actually doing the loading.","msgtype":"m.text"},"ts":1393363980000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Either you just want to check on the font, in which case you use .status, or you want to make sure it's loaded, in which case you call .load() regardless.","msgtype":"m.text"},"ts":1393363983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, so the idea is that getting notified upon loading without initiating loading is not a useful use case.","msgtype":"m.text"},"ts":1393364007000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I think so, yeah.","msgtype":"m.text"},"ts":1393364023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"personally .load() + .loaded would make the most sense, but IIRC you can \"re-load\" or something so a property doesn't work...","msgtype":"m.text"},"ts":1393364032000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Nah, can't reload.","msgtype":"m.text"},"ts":1393364041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wilhelm: are you using the Guest wifi in the f2f?","msgtype":"m.text"},"ts":1393364051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, then why is .ready() currently a property?","msgtype":"m.text"},"ts":1393364072000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"MikeSmith: Yes.","msgtype":"m.text"},"ts":1393364073000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Domenic_: ?_?","msgtype":"m.text"},"ts":1393364087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: err sorry, currently a method I meant","msgtype":"m.text"},"ts":1393364099000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"MikeSmith: \"Mozilla Guest\".","msgtype":"m.text"},"ts":1393364109000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Because that's usually how it works?","msgtype":"m.text"},"ts":1393364113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I dunno, [citation needed]? maybe in jQuery, but they never use properties for anything. Getter or data property makes most sense to me.","msgtype":"m.text"},"ts":1393364180000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Sigh, we need data properties.","msgtype":"m.text"},"ts":1393364186000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"data properties?","msgtype":"m.text"},"ts":1393364203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"non-accessors in WebIDL","msgtype":"m.text"},"ts":1393364210000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Still not understanding.","msgtype":"m.text"},"ts":1393364229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wilhelm: yeah I get dropped pretty often for some reason","msgtype":"m.text"},"ts":1393364256000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am going off the rails, sorry. But: I am saying that IMO the most reasonable thing for .loaded would be as a data property. Whereas WebIDL would force it to be a getter.","msgtype":"m.text"},"ts":1393364257000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Still dont' know what \"data property\" means, so I cant' comment.","msgtype":"m.text"},"ts":1393364278000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"defineProperty(FontFaceSet.prototype, { value: readyPromise }) vs. defineProperty(FontFaceSet.prototype, { get() { return readyPromise; } })","msgtype":"m.text"},"ts":1393364299000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1393364323000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"you wouldn't put it on the prototype. nevermind, ignore me.","msgtype":"m.text"},"ts":1393364339000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Okay. ^_^","msgtype":"m.text"},"ts":1393364359000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]