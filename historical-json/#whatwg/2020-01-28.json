[
{"content":{"body":"annevk: In that case this problem is not specific to cross-origin, not specific to navigation and not specific to \"manual\" redirect mode.","msgtype":"m.text"},"ts":1580187649000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"annevk: const res = fetch(url, {mode: 'same-origin', redirect: 'follow'})","msgtype":"m.text"},"ts":1580187791000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: I'm not sure I follow, but yeah, maybe, really depends on how redirects work which may well vary across engines","msgtype":"m.text"},"ts":1580187793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if the fetch is initiated on a COEP enabled environment and experienced redirects, having the redirect information in the dom process would be problematic from your POV, right?","msgtype":"m.text"},"ts":1580187935000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: in general I'd consider it problematic, but yes","msgtype":"m.text"},"ts":1580188030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, I commented at the bug.","msgtype":"m.text"},"ts":1580189872000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: somewhat surprised you handle redirects in that process","msgtype":"m.text"},"ts":1580195005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: we might have something similar atm though due to extensions and maybe CSP","msgtype":"m.text"},"ts":1580195055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for subresources we do that (and that was why we could implement CORS in the renderer processes)","msgtype":"m.text"},"ts":1580195089000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: you mean out of?","msgtype":"m.text"},"ts":1580195144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: redirect is partially handled in the network process, but the network process ask the renderer process if it would follow the redirect. The legacy CORS implementation lives in the renderer process and cancels the redirect if the CORS check fails. The new CORS implementation is implemented in the network process. Is that clear?","msgtype":"m.text"},"ts":1580195346000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: yeah, thanks; I think that does mean that long term it's not that infeasible for redirects to be handled completely in the networking process","msgtype":"m.text"},"ts":1580195802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: and maybe that also means there's nothing much to do for COEP","msgtype":"m.text"},"ts":1580195821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What is uncustomized in https://html.spec.whatwg.org/#upgrades about?","msgtype":"m.text"},"ts":1580200993000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I can't see that elsewhere in the spec","msgtype":"m.text"},"ts":1580200998000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: looks like Domenic added that a few weeks ago in https://github.com/whatwg/html/commit/2793ee4a461c6c39896395f1a45c269ea820c47e","msgtype":"m.text"},"ts":1580204711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and background is at https://github.com/whatwg/html/pull/5126 and at https://github.com/whatwg/html/issues/5118","msgtype":"m.text"},"ts":1580204738000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk yhirano: Chromium currently does more checks in the renderer process than I think we want to do. It hasn't yet been worth the trouble to move, for example, CSP and MIX redirect checks out of the renderer and into the browser process. Ideally, we'd be verifying all of that the way that it's specified (e.g. the innards of Fetch => browser process).","msgtype":"m.text"},"ts":1580205930000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"At the moment, we have been focusing on the bigger problems (e.g. CORS),  but I imagine we will get to the rest of the checks over time.","msgtype":"m.text"},"ts":1580205965000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"As annevk notes, I don't think the COEP spec would need to change for us to do that.","msgtype":"m.text"},"ts":1580205992000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: the main impact on COEP is whether people should be able to hold an opaque-redirect response","msgtype":"m.text"},"ts":1580210524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: for opaque responses we've made some adjustments to the cache API and such, but these don't directly apply to opaque-redirect responses as those can be same-origin as well","msgtype":"m.text"},"ts":1580210553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I guess they do apply to cross-origin redirects at least, but that doesn't address all vectors)","msgtype":"m.text"},"ts":1580210579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do opaque-redirect responses come up anywhere other than navigation?","msgtype":"m.text"},"ts":1580210620000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: you can get one via fetch()","msgtype":"m.text"},"ts":1580210652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: iirc","msgtype":"m.text"},"ts":1580210660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and definitely with fetch() in a service worker","msgtype":"m.text"},"ts":1580210670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hrm. Maybe we could not do that instead of doing it?","msgtype":"m.text"},"ts":1580210685000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I thought that was just an internal bit of the navigation algorithm. It surprises me a little that we expose it via `fetch()`.","msgtype":"m.text"},"ts":1580210721000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: well, we need to support navigation from service workers","msgtype":"m.text"},"ts":1580210735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: including their redirect handling","msgtype":"m.text"},"ts":1580210746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I'm less clear on the remainder","msgtype":"m.text"},"ts":1580210803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes. It makes sense that it could be visible to SW, I just didn't think about it that way. In my head we gave the SW a crack at the initial request, and somehow magically jumped back to the HTML algorithm for the rest.","msgtype":"m.text"},"ts":1580210918000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'm still not sure what part of the problem is navigation specific (or, opaque-redirect specific).","msgtype":"m.text"},"ts":1580210941000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano, annevk: Yeah, it doesn't initially seem to me that there's much difference between an opaque-redirect response and an opaque response more generally.","msgtype":"m.text"},"ts":1580210980000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yhirano: an opaque response is always cross-origin from you","msgtype":"m.text"},"ts":1580212141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: yhirano: an opaque-redirect response is not and therefore might not have CORP","msgtype":"m.text"},"ts":1580212167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: yhirano: does that help?","msgtype":"m.text"},"ts":1580212177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mkwst: how about followed same-origin redirect?","msgtype":"m.text"},"ts":1580212293000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: what do you mean?","msgtype":"m.text"},"ts":1580214530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/html/issues/5223#issuecomment-579087618","msgtype":"m.text"},"ts":1580214659000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"about the CSS Shepherd tool, does anybody know what the set of specs is that the indexes?","msgtype":"m.text"},"ts":1580214758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yhirano: that doesn't yield an opaque-redirect response though","msgtype":"m.text"},"ts":1580214781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yhirano: if it's followed it doesn't really matter as it doesn't have to be observable (assuming a better architecture will eventually be in place as per earlier comments)","msgtype":"m.text"},"ts":1580214819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm... with that assumption forbidding redirect: 'manual' for non-navigation requests may help future implementers.","msgtype":"m.text"},"ts":1580215831000,"senderName":"yhirano","senderId":"yhirano@irc"},
{"content":{"body":"yhirano: yeah, or only inside COEP as a start (though it seems hard to restrict in that way)","msgtype":"m.text"},"ts":1580216203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: https://dom.spec.whatwg.org/#concept-element-custom-element-state","msgtype":"m.text"},"ts":1580224036000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, DOM","msgtype":"m.text"},"ts":1580224070000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1580224071000,"senderName":"smaug____","senderId":"smaug____@irc"}
]