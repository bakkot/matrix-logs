[
{"content":{"body":"JakeA: so what do about canceling promises now?","msgtype":"m.text"},"ts":1481874771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: seems Domenic had to abandon given some Google-internal struggles, but fetch() is still without termination","msgtype":"m.text"},"ts":1481874819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"felixjet: legend means definition","msgtype":"m.text"},"ts":1481874971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think we should leave the dust to settle on this (until Jan?), but I guess we provide a method to reject with an AbortError :(","msgtype":"m.text"},"ts":1481874985000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I need to catch up a bit and see if tokens are similarly doomed","msgtype":"m.text"},"ts":1481875012000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"felixjet: using data-* instead of class is fine","msgtype":"m.text"},"ts":1481875036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if this is on Request objects we will need to redesign how they work","msgtype":"m.text"},"ts":1481875108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we already pass the stream from object to object, wouldn't we just pass a token along as well?","msgtype":"m.text"},"ts":1481875204000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah I guess","msgtype":"m.text"},"ts":1481875349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: along with the mechanism, need to figure out \"does [solution] error the request only, or the response too?\"","msgtype":"m.text"},"ts":1481875350000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I posted on the centithread btw","msgtype":"m.text"},"ts":1481875362000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think I'd still like to figure out if we can prevent copying Request sometimes","msgtype":"m.text"},"ts":1481875366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: oh my","msgtype":"m.text"},"ts":1481875374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can somebody remind me: custom elements can only be used in text/html, right?","msgtype":"m.text"},"ts":1481878469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I thought they'd work in XML too","msgtype":"m.text"},"ts":1481878655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I don't remember a lot of text/html special casing, but I'm not entirely sure","msgtype":"m.text"},"ts":1481878673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1481878842000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/notifications/pull/89/files - Bikeshed turns Note: into <p class=note> automatically, or are you wanting to be explicit about it?","msgtype":"m.text"},"ts":1481882787000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: also, not sure I understand the indenting stuff - it isn't indented on master https://github.com/whatwg/notifications/blob/master/notifications.bs#L382","msgtype":"m.text"},"ts":1481882858000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, it seems it's all inconsistent :/","msgtype":"m.text"},"ts":1481882976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but the stuff in the PR is how you'd like it from now on?","msgtype":"m.text"},"ts":1481882999000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: i think they should work in XML too but it's limited to HTML elements","msgtype":"m.text"},"ts":1481884217000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: I'll fix the remaining nit in that PR with respect to indenting","msgtype":"m.text"},"ts":1481885928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: oh, you fixed some of that","msgtype":"m.text"},"ts":1481885961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lmk if it's wrong (for my own learnings)","msgtype":"m.text"},"ts":1481885993000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that resource is super inconsistent; my usual style is one-space indentation","msgtype":"m.text"},"ts":1481886021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and you missed the first <li>, but I'll do a pass","msgtype":"m.text"},"ts":1481886039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, balls","msgtype":"m.text"},"ts":1481886059000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: http://editorconfig.org/ is kinda useful when it comes to indenting & wrapping","msgtype":"m.text"},"ts":1481886073000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: why go headers use byte sequences? Because they're not unicode?","msgtype":"m.text"},"ts":1481886877000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: basically","msgtype":"m.text"},"ts":1481886900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1481886907000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: various programming languages represent them in different ways, but they're effectively bytes","msgtype":"m.text"},"ts":1481886933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: although I suppose we could use the ASCII string abstraction we use for URLs too","msgtype":"m.text"},"ts":1481886963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: any rejiggering of that though will have to wait until the HTTP community decides what they want them to be","msgtype":"m.text"},"ts":1481887020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: question to the url spec","msgtype":"m.text"},"ts":1481887022000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"before i open an issue / invetsigate further","msgtype":"m.text"},"ts":1481887035000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"new URL('https://rocko:pass#word⊙ec/blerg')","msgtype":"m.text"},"ts":1481887090000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"throws because of the hash","msgtype":"m.text"},"ts":1481887098000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"i haven't found a section regarding passwords and special / reserved chars. is this a bug in the spec? it limits the amount possible passwords a lot","msgtype":"m.text"},"ts":1481887169000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"robertkowalski: It should be encoded.","msgtype":"m.text"},"ts":1481887204000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah, you can encode it","msgtype":"m.text"},"ts":1481887222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: the specification basically doesn't want you to use URLs to encode username/password","msgtype":"m.text"},"ts":1481887275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: https://url.spec.whatwg.org/#url-syntax doesn't allow them","msgtype":"m.text"},"ts":1481887288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: (see note at the end of that section)","msgtype":"m.text"},"ts":1481887305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: the reason that throws though I think is because # is seen as the start of the path and then a host cannot contain :","msgtype":"m.text"},"ts":1481887358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: well, because :pass is not a valid port","msgtype":"m.text"},"ts":1481887370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: for that, see how https://url.spec.whatwg.org/#authority-state and also the host state will treat # as the end of that","msgtype":"m.text"},"ts":1481887433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: and https://url.spec.whatwg.org/#port-state for how port will return failure for non-digits","msgtype":"m.text"},"ts":1481887464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thank you","msgtype":"m.text"},"ts":1481887635000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"the replciator in couchdb accepts urls with hash as part of the password","msgtype":"m.text"},"ts":1481887665000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"and when we pull them out and want to use them in the browser","msgtype":"m.text"},"ts":1481887676000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"it explodes","msgtype":"m.text"},"ts":1481887678000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"robertkowalski: new URL('https://rocko:pass%23word⊙ec/blerg')","msgtype":"m.text"},"ts":1481887813000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"ty nox - we run into a chicken egg problem here. as we use `new URL` to parse the URL ^^","msgtype":"m.text"},"ts":1481887877000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"so we probably have to fix that in the couch api, not in the frontend","msgtype":"m.text"},"ts":1481887890000,"senderName":"robertkowalski","senderId":"robertkowalski@irc"},
{"content":{"body":"robertkowalski: yeah, it sounds like the Couch DB API parses URLs differently from browsers","msgtype":"m.text"},"ts":1481888174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: that will cause subtle bugs","msgtype":"m.text"},"ts":1481888202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: hmm https://travis-ci.org/w3c/web-platform-tests/jobs/184507619","msgtype":"m.text"},"ts":1481890836000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: a timeout, or what is one to make of that?","msgtype":"m.text"},"ts":1481890877000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: not a testharness.js-level timeout","msgtype":"m.text"},"ts":1481890907000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"flaky infra? can one poke travis to try again?","msgtype":"m.text"},"ts":1481890923000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"If you're happy with the nit, I can just rebae or something to tickle it","msgtype":"m.text"},"ts":1481890945000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"i can try restarting the build","msgtype":"m.text"},"ts":1481890949000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"restarted","msgtype":"m.text"},"ts":1481890981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: seems to have worked?","msgtype":"m.text"},"ts":1481891527000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: ya","msgtype":"m.text"},"ts":1481891924000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: in https://fetch.spec.whatwg.org/#concept-request-destination wasn't \"track\" its own destination, rather than \"media\"? If it changed, why did it change?","msgtype":"m.text"},"ts":1481892118000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I'm not sure","msgtype":"m.text"},"ts":1481892247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"git blame points to the bikeshed conversion :/","msgtype":"m.text"},"ts":1481892266000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I think when we changed how this worked we grouped them because CSP did?","msgtype":"m.text"},"ts":1481892287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: the commit prior to Bikeshed just renames the files, should be doable to trace from there?","msgtype":"m.text"},"ts":1481892338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that makes sense from a CSP perspective, but doesn't correspond to how preload is implemented","msgtype":"m.text"},"ts":1481892339000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yeah, I'll blame it to track the change","msgtype":"m.text"},"ts":1481892366000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"but currently hitting issues in Chrome's implementation of `type` for `as=media`","msgtype":"m.text"},"ts":1481892403000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"vtt is not a valid type","msgtype":"m.text"},"ts":1481892415000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"for media files","msgtype":"m.text"},"ts":1481892433000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1481892454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why can audio and video be grouped then?","msgtype":"m.text"},"ts":1481892473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"both considered \"media\" internally","msgtype":"m.text"},"ts":1481892626000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess you could argue that they shouldn't be","msgtype":"m.text"},"ts":1481892638000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://github.com/whatwg/fetch/commit/6b9cdaa9","msgtype":"m.text"},"ts":1481892640000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"the media resource for audio/video elements is treated the same internally, quite differently from the vtt resources for track elements, so grouing audio/video but not track makes sense to me","msgtype":"m.text"},"ts":1481892694000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: from an implementation perspective or from a spec perspective?","msgtype":"m.text"},"ts":1481892790000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"So, I implemented as={video/audio/track}, then spec changed, but I failed to change impl for track (only changed it for video/audio)","msgtype":"m.text"},"ts":1481892840000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: both, https://html.spec.whatwg.org/multipage/embedded-content.html#concept-media-load-resource is shared for audio/video, and is different from https://html.spec.whatwg.org/multipage/embedded-content.html#concept-media-load-resource","msgtype":"m.text"},"ts":1481892862000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: same link twice, so I'm guessing the second was pointing at VTT loading","msgtype":"m.text"},"ts":1481892900000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"That being said, ungrouping into three categories would be fine two, but I guess that's not what you're discussing","msgtype":"m.text"},"ts":1481892903000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yoav: https://html.spec.whatwg.org/multipage/embedded-content.html#start-the-track-processing-model","msgtype":"m.text"},"ts":1481892916000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yoav: yes :)","msgtype":"m.text"},"ts":1481892924000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I'm fine with leaving audio and video grouped, if it makes sense for non-Blink/Chromium implementations","msgtype":"m.text"},"ts":1481892960000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"but I'd like to split track into it's own destination (that maps to media-src in terms of CSP)","msgtype":"m.text"},"ts":1481892993000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: Thoughts? If OK by you, I'll spin up a PR","msgtype":"m.text"},"ts":1481893049000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: seems we agreed in https://github.com/whatwg/fetch/pull/211 to merge all","msgtype":"m.text"},"ts":1481893320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah... not liking past me for https://github.com/whatwg/fetch/pull/211#issuecomment-181813238","msgtype":"m.text"},"ts":1481893639000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"\"probably also possible\"","msgtype":"m.text"},"ts":1481893664000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I think if we degroup we should also split audio/video","msgtype":"m.text"},"ts":1481893709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: e.g., one thing we could do then is define an Accept header for those","msgtype":"m.text"},"ts":1481893745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1481893789000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"foolip: so I thought we uncovered quite a few problems last we looked at the animation frame task stuff","msgtype":"m.text"},"ts":1481893844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28876 is one","msgtype":"m.text"},"ts":1481893881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: Thoughts on changing `as` values? I'm guessing we'd need UMA to see usage under \"media\" (or continue to support \"media\" after adding \"video\" and \"audio\")","msgtype":"m.text"},"ts":1481893903000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"foolip: and https://www.w3.org/Bugs/Public/show_bug.cgi?id=28001 in particular","msgtype":"m.text"},"ts":1481893913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: the problem is that these values are also exposed to service workers","msgtype":"m.text"},"ts":1481893943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so exposed in two places? :|","msgtype":"m.text"},"ts":1481893974000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I'm not really familiar with this stuff, but having media as a group for audio+video as well as them individually seems fine, if that's what you mean","msgtype":"m.text"},"ts":1481893993000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: Yeah, that's what I meant","msgtype":"m.text"},"ts":1481894022000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"to avoid potentially breaking content with `as=media` out there","msgtype":"m.text"},"ts":1481894050000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"drive-by fixes, knowing when to stop :-D https://github.com/w3c/web-platform-tests/pull/4353","msgtype":"m.text"},"ts":1481894171000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: which bits of #28001 in particular? I think that Fullscreen could work without a queue of its own, and the timing of \"enqueue animation frame task\" would be right before the requestAnimationFrame callbacks for that same window, not a top-level thing","msgtype":"m.text"},"ts":1481894172000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: which makes things interesting for Fullscreen because we have to pick which document to use, and I think the one the request was on makes sense","msgtype":"m.text"},"ts":1481894203000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: unfortunately, if one wanted to use one task per document affected, then events would always fire in frame tree order, which isn't what we currently want for fullscreenchange events when exiting","msgtype":"m.text"},"ts":1481894252000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yoav: https://fetch.spec.whatwg.org/#dom-request-destination","msgtype":"m.text"},"ts":1481894464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I don't know which of HTML or Fullscreen is wrong, but HTML is currently running the hook per-document","msgtype":"m.text"},"ts":1481894590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: the event loop is I guess per unit of browsing contexts that can touch each other, though OOP <iframe> is making that much more complicated...","msgtype":"m.text"},"ts":1481894627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: around? Do you have a hunch on how many SW code relies on request.destination?","msgtype":"m.text"},"ts":1481894655000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"s/many/much/","msgtype":"m.text"},"ts":1481894672000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: yes, cross-origin is still a bit of a mystery for fullscreen","msgtype":"m.text"},"ts":1481894709000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: currently Blink tries to do make the observable behavior the same as if everything was in the same process, but things can go wrong in funny ways","msgtype":"m.text"},"ts":1481894743000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: anyway, I guess what I meant was that figuring out what HTML should do there seems important","msgtype":"m.text"},"ts":1481894835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: FWIW, I think one could make it all work with each document running their steps fullscreen individually and sacrificing event order on exit, but it'd all look quite different from now","msgtype":"m.text"},"ts":1481894859000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"the unpleasant part is what happens with fullscreen requests that then come in between those small chunks of applying a single requestFullscreen call","msgtype":"m.text"},"ts":1481894903000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(with OOP <iframe> it becomes unfeasible to say that there can only be a single pending request globally)","msgtype":"m.text"},"ts":1481894929000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"If I had better imagination, maybe I could see how Fullscreen would have worked if designed with multi-process in mind.","msgtype":"m.text"},"ts":1481894961000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: okay with you if I merge the two if statements in https://github.com/whatwg/fullscreen/pull/68 into a single step?","msgtype":"m.text"},"ts":1481895290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: since the consequences are the same we might as well OR it","msgtype":"m.text"},"ts":1481895302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, I kept them separate because I wanted to change on of them to resolve, but I can unmerge later if so :)","msgtype":"m.text"},"ts":1481895321000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: ooh, hmm, I guess unmerge later is better in case that doesn't end up happening","msgtype":"m.text"},"ts":1481895361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep!","msgtype":"m.text"},"ts":1481895378000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I think I finally completed my GitHub backlog","msgtype":"m.text"},"ts":1481895891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If anyone is waiting on me, let me know, since I missed it","msgtype":"m.text"},"ts":1481895901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I don't think we support it in stable, so not a lot","msgtype":"m.text"},"ts":1481896073000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that's great news!","msgtype":"m.text"},"ts":1481896086000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Sounds like the exact right time to break it :)","msgtype":"m.text"},"ts":1481896102000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"JakeA: What do you think of breaking up the `media` destination into \"audio\", \"video\" and \"track\"?","msgtype":"m.text"},"ts":1481896171000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I think \"type\" already takes care of that","msgtype":"m.text"},"ts":1481896575000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yoav: https://fetch.spec.whatwg.org/#concept-request-type","msgtype":"m.text"},"ts":1481896608000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: So, the issue is that <link preload as=media> as currently defined can mean video, audio or track","msgtype":"m.text"},"ts":1481896653000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"which now I realized is: a) not how I actually implemented b) causes impl problems in terms of internal resource type and \"type\" attribute support","msgtype":"m.text"},"ts":1481896737000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so it'd make me happy if we could split the destination up (preload is using the destination values for `as` values)","msgtype":"m.text"},"ts":1481896811000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: preload should be using \"type\" I think","msgtype":"m.text"},"ts":1481896895000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"type doesn't cleanly map to CSP directives","msgtype":"m.text"},"ts":1481896927000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"hmm fair point","msgtype":"m.text"},"ts":1481896954000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yoav: I'm struggling to work out the distinction between type/destination now","msgtype":"m.text"},"ts":1481897370000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Dunno, seems to be related to content sniffing & mime type blocking","msgtype":"m.text"},"ts":1481897500000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"so, iiuc (and annevk will probably correct me) type is related to the expected resource type while destination is related to where that resource will be used","msgtype":"m.text"},"ts":1481897582000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah, roughly","msgtype":"m.text"},"ts":1481897709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: it's clearest with script","msgtype":"m.text"},"ts":1481897722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's the only point I see where there a clear 1 type => many destinations","msgtype":"m.text"},"ts":1481897747000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I could see something similar happening for \"image\", but I think we care less about the destinations","msgtype":"m.text"},"ts":1481897951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk & JakeA: I think I'll send a PR changing all \"media\" to their relative types and we can further discuss it over there","msgtype":"m.text"},"ts":1481898482000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"tries to formulate Client questions for Jake earlier in the day...","msgtype":"m.emote"},"ts":1481899958000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: so... I'm trying to understand the case of the reserved Client during a navigation that is redirected","msgtype":"m.text"},"ts":1481900210000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"looking at the html spec it seems we create a single reserved Client at step 7 of https://html.spec.whatwg.org/#process-a-navigate-fetch","msgtype":"m.text"},"ts":1481900246000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and then just keep that reserved client through the redirects at step 9","msgtype":"m.text"},"ts":1481900266000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but we never update the URL on the reserved client","msgtype":"m.text"},"ts":1481900300000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so those FetchEvents for the redirected URLs will see the wrong URL on clients.get(evt.reservedClientId).then(client => client.url)","msgtype":"m.text"},"ts":1481900341000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1481900343000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: is that what we intend? ^^^","msgtype":"m.text"},"ts":1481900354000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it would seem to me we should either create a new reserved client for each redirect step or update the url on the client","msgtype":"m.text"},"ts":1481900370000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"although I guess we allow Client.url to be different in the cases where history.pushState() has changed the location","msgtype":"m.text"},"ts":1481900508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think that has to be same-origin, though","msgtype":"m.text"},"ts":1481900515000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in this case we may get a reserved Client with a cross-origin creation URL","msgtype":"m.text"},"ts":1481900531000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe thats ok since the FetchEvent.request.url will have the current URL","msgtype":"m.text"},"ts":1481900565000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway, just trying to clarify intent","msgtype":"m.text"},"ts":1481900570000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: huh, good catch. We don't want to create a new client, else you can't postMessage to it","msgtype":"m.text"},"ts":1481901556000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I guess we should update the URL","msgtype":"m.text"},"ts":1481901566000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: but if it goes cross origin we need to make sure postMessage doesn't get delivered to it","msgtype":"m.text"},"ts":1481901595000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I mean... do we want people to be able to observe the original URL that started the navigation?","msgtype":"m.text"},"ts":1481901598000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"started the redirect chain","msgtype":"m.text"},"ts":1481901603000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: what is the use case for postMessage() to the reserved client across redirects?","msgtype":"m.text"},"ts":1481901647000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"feels to my like it would be cleanest to not propagate postMessage() there","msgtype":"m.text"},"ts":1481901658000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: not updating the url would also mean that Client.ancestorOrigins[0] could be different from the origin of Client.url... I think that would be a bit unexpected","msgtype":"m.text"},"ts":1481902328000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: did Client.ancestorOrigins land already? With bz objecting to its sibling feature elsewhere, it would be somewhat weird for us to ship that","msgtype":"m.text"},"ts":1481902400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: its in the spec AFAICT... https://w3c.github.io/ServiceWorker/#client-ancestororigins","msgtype":"m.text"},"ts":1481902430000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: which builds on https://html.spec.whatwg.org/multipage/browsers.html#concept-location-ancestor-origins-array","msgtype":"m.text"},"ts":1481902445000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: understood, but https://github.com/whatwg/html/issues/1918 (and prior issues)","msgtype":"m.text"},"ts":1481902479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: hence me wondering if we ship it one place and not another and bypassed bz somehow","msgtype":"m.text"},"ts":1481902503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: which would argue for using \"Intent to ship\" for more minor things I think","msgtype":"m.text"},"ts":1481902515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we ship Location.ancestorOrigins in Firefox, but not Client.ancestorOrigins yet","msgtype":"m.text"},"ts":1481902550000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: oh, we don't ship it","msgtype":"m.text"},"ts":1481902582000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"its just in some tests","msgtype":"m.text"},"ts":1481902586000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Okay, all good then","msgtype":"m.text"},"ts":1481902600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"miketaylr: we forgot to actually discuss https://github.com/whatwg/dom/issues/334","msgtype":"m.text"},"ts":1481902647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I wrote it up in an issue: https://github.com/w3c/ServiceWorker/issues/1031","msgtype":"m.text"},"ts":1481903390000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1481904217000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: https://github.com/w3c/web-platform-tests/pull/4299 has some tests","msgtype":"m.text"},"ts":1481918256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah excellent","msgtype":"m.text"},"ts":1481919272000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Dangit, https://github.com/whatwg/fetch/issues/332 bites again","msgtype":"m.text"},"ts":1481927681000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Well, that or my inability to see the \"The definition of value needs serious work.\" warning. :P","msgtype":"m.text"},"ts":1481927750000,"senderName":"jsbell","senderId":"jsbell@irc"}
]