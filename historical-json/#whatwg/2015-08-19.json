[
{"content":{"body":"Domenic: I don't have perms to update /TR shortname (undated) URLs. Nor does plh. They're basically just symlinks set up by the publication manager (aka webmaster)","msgtype":"m.text"},"ts":1439950020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but what I can do is, I can add a bold disclaimer that will show up there","msgtype":"m.text"},"ts":1439950084000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do that right now","msgtype":"m.text"},"ts":1439950088000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: btw sad to hear \"they don't want to sponsor working from home or remote work, which has lost a couple candidates already\". I had thought that in the past at least they'd taken more of an enlightend view of things","msgtype":"m.text"},"ts":1439950288000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess the claims at various places of attracting/having the \"best and brightest\" needs to be qualified with \"The best and the brightest people who already live near one of the few places where we have engineering offices or are willing uproot your entire lives to relocate to one of the few places where we think they should leve.\"","msgtype":"m.text"},"ts":1439950516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw while working right now on adding the disclaimer to the https://www.w3.org/TR/url/ document, it seems very appropriate that I have to use cvs to do it","msgtype":"m.text"},"ts":1439950840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: annevk https://www.w3.org/TR/url/ now has a fugly non-dismissable fixed-position warning","msgtype":"m.text"},"ts":1439951394000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's the best I can do for now","msgtype":"m.text"},"ts":1439951404000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: annevk fwiw I also went ahead just now and added the fugly non-dismissable fixed-position warning to the https://dvcs.w3.org/hg/streams-api/raw-file/tip/Overview.htm and https://www.w3.org/TR/streams-api/ documents","msgtype":"m.text"},"ts":1439955914000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: who's \"they\"?","msgtype":"m.text"},"ts":1439956204000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hi roc","msgtype":"m.text"},"ts":1439956289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"roc: http://krijnhoetmer.nl/irc-logs/whatwg/20150818#l-602","msgtype":"m.text"},"ts":1439956294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is the context","msgtype":"m.text"},"ts":1439956299000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1439956376000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: btw as a parent 8with a lot of what you wrote about the rw","msgtype":"m.text"},"ts":1439956559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1439956562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"roc: btw as a parent 8with a lot of what you wrote about the rw","msgtype":"m.text"},"ts":1439956566000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"straightens out his fingers","msgtype":"m.emote"},"ts":1439956588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"roc: as a parent (with another new one on the way soon), lot of what you wrote about the unexpected rewards of being a parent in http://robert.ocallahan.org/2015/08/parenting.html really spoke to me and my own experiences","msgtype":"m.text"},"ts":1439956662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, thanks for taking time to write it","msgtype":"m.text"},"ts":1439956671000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool!","msgtype":"m.text"},"ts":1439956672000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I wish more tech people in our world would take time to write a bit now and then about their non-tech lives","msgtype":"m.text"},"ts":1439956758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I should more myself, I guess","msgtype":"m.text"},"ts":1439956777000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"birtles: thanks for the https://platform.html5.org/ PR (just now merged it)","msgtype":"m.text"},"ts":1439958176000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1439959055000,"senderName":"birtles","senderId":"birtles@irc"},
{"content":{"body":"oh awesome, thanks MikeSmith!","msgtype":"m.text"},"ts":1439959137000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith++","msgtype":"m.text"},"ts":1439963819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see anything related to U+0000 NULL in https://html.spec.whatwg.org/multipage/syntax.html#cdata-section-state, is that intended?","msgtype":"m.text"},"ts":1439969602000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"html5lib-tests seem to include tests for NULL replacement by U+FFFD, but I can't find that in the spec.","msgtype":"m.text"},"ts":1439969630000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think there's supposed to be some kind of preprocessing step","msgtype":"m.text"},"ts":1439969924000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or not","msgtype":"m.text"},"ts":1439969990000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The handling of U+0000 NULL characters varies based on where the characters are found. In general, they are ignored except where doing so could plausibly introduce an attack vector. This handling is, by necessity, spread across both the tokenization stage and the tree construction stage.","msgtype":"m.text"},"ts":1439969991000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I think the rationale was avoiding NULL everywhere, because of legacy things where it could be a security issue. The weird thing is these tests checking for replacement.","msgtype":"m.text"},"ts":1439970334000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: see 12.2.5.5","msgtype":"m.text"},"ts":1439971057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: CDATA only occurs in foreign content, where a null is replaced with U+FFFD looks like","msgtype":"m.text"},"ts":1439971088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, thanks.","msgtype":"m.text"},"ts":1439971189000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zewt: https://github.com/whatwg/url/issues/62#issuecomment-132488127","msgtype":"m.text"},"ts":1439972396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, subscribed. :)","msgtype":"m.text"},"ts":1439972520000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"There are tests for <rb> in <ruby> in html5lib-tests, but no mention of <rb> at all in the HTML spec. Is that intended too?","msgtype":"m.text"},"ts":1439973431000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Don't ask","msgtype":"m.text"},"ts":1439973600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah ah.","msgtype":"m.text"},"ts":1439973613000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think the tests are wrong, according to https://github.com/html5lib/html5lib-tests/issues/54.","msgtype":"m.text"},"ts":1439973635000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there's an open bug on <rb> iirc","msgtype":"m.text"},"ts":1439973692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/html5lib/html5lib-tests/issues/51?","msgtype":"m.text"},"ts":1439973720000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I meant against the HTML Standard","msgtype":"m.text"},"ts":1439973735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, sorry.","msgtype":"m.text"},"ts":1439973742000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=26189","msgtype":"m.text"},"ts":1439973772000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah, I wonder how much scrutiny the addition in \"W3C HTML\" got","msgtype":"m.text"},"ts":1439973835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The last time the W3C supplied a patch (for <template>) it was quite bad","msgtype":"m.text"},"ts":1439973865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah.","msgtype":"m.text"},"ts":1439973875000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: The current consensus is that <rb> and <rtc> should be implicitly closed, right?","msgtype":"m.text"},"ts":1439973911000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I don't know","msgtype":"m.text"},"ts":1439974099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Calling hsivonen","msgtype":"m.text"},"ts":1439974329000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was called","msgtype":"m.text"},"ts":1439974477000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"nox, annevk, Ms2ger: I've noticed that we fail the html5lib Ruby tests, but I haven't had the time to look into whether to blame the code, the tests or the spec","msgtype":"m.text"},"ts":1439974554000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: In doubt, blame everything.","msgtype":"m.text"},"ts":1439974574000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Or just Obama.","msgtype":"m.text"},"ts":1439974579000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Or Canada","msgtype":"m.text"},"ts":1439974598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1178484 makes me sad, but I guess I should r+ it and not fight it","msgtype":"m.text"},"ts":1439974615000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Facebook won this one long ago :-(","msgtype":"m.text"},"ts":1439974626000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Canada will at least apologise","msgtype":"m.text"},"ts":1439974969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Ah ah.","msgtype":"m.text"},"ts":1439975290000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: that idea still seems terrible though","msgtype":"m.text"},"ts":1439975480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: note also that folks objected when this was raised on dev.platform","msgtype":"m.text"},"ts":1439975515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mutters something about tests where the title doesn't match the actual test behaviour","msgtype":"m.emote"},"ts":1439976434000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For the record, it's quit possible that I wrote the test in question :)","msgtype":"m.text"},"ts":1439976451000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*quite","msgtype":"m.text"},"ts":1439976455000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although history — at least outside Opera — doesn't record that","msgtype":"m.text"},"ts":1439976475000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyone want to guess what https://github.com/w3c/web-platform-tests/blob/master/old-tests/submission/Opera/script_scheduling/112.html is supposed to be testing?","msgtype":"m.text"},"ts":1439976538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"testing that a script with both async and defer runs before the load event seems rather pointless since either attribute could have that effect","msgtype":"m.text"},"ts":1439976665000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and timing alone should usually cause it to run after DOMContentLoaded even if it's async","msgtype":"m.text"},"ts":1439976726000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I wonder if that used to be a more elaborate external dependency before, with \"pipe=trickle(d1)\"","msgtype":"m.text"},"ts":1439978733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: causing it to hang for a second or so","msgtype":"m.text"},"ts":1439978749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: why is there both a ref and xref folder in https://github.com/whatwg/xref/?","msgtype":"m.text"},"ts":1439980245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ref is for the References section?","msgtype":"m.text"},"ts":1439980486000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not sure if there's still much of a point to that","msgtype":"m.text"},"ts":1439980503000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, I didn't know about that feature","msgtype":"m.text"},"ts":1439980728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems weird","msgtype":"m.text"},"ts":1439980731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what's the two favicon files in https://github.com/whatwg/platform.html5.org?","msgtype":"m.text"},"ts":1439981203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: also, maybe remove whatwg.png in favor of just referencing resources.whatwg.org?","msgtype":"m.text"},"ts":1439981228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have trouble following the spec as to why \"<!doctype html><p><math><mn><span></p>a\" should end up with a p inside a span inside an mn inside a math inside another p.","msgtype":"m.text"},"ts":1439982670000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you hit the 'Otherwise, process the token according to the rules given in the section corresponding to the current insertion mode in HTML content.' in the foreign content insertion mode","msgtype":"m.text"},"ts":1439984414000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"then you go back to the in body mode and you hit \"If the stack of open elements does not have a p element in button scope, then this is a parse error; insert an HTML element for a \"p\" start tag token with no attributes.","msgtype":"m.text"},"ts":1439984444000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and because \"mn\" creates a scope you don't have a p element in scope","msgtype":"m.text"},"ts":1439984484000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Thanks.","msgtype":"m.text"},"ts":1439984570000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: But that \"Otherwise\" is hit 'If the adjusted current node is a MathML text integration point and the token is a start tag whose tag name is neither \"mglyph\" nor \"malignmark\"', isn't the token here <span>?","msgtype":"m.text"},"ts":1439984624000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jgraham, wait, why does https://github.com/w3c/web-platform-tests/blob/master/old-tests/submission/Opera/script_scheduling/112.html call t.done() twice?","msgtype":"m.text"},"ts":1439984632000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: oh, sorry. yes, the span is parsed in the current insertion mode (in-body)","msgtype":"m.text"},"ts":1439984759000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is utterly lost. :)","msgtype":"m.emote"},"ts":1439984776000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Shouldn't the span be parsed through \"Otherwise process the token according to the rules given in the section for parsing tokens in foreign content.\"?","msgtype":"m.text"},"ts":1439984855000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: OK, so when you've parsed \"<!doctype html><p><math><mn>\", you have a span start tag token to parse","msgtype":"m.text"},"ts":1439984888000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1439984896000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: the adjusted current node is a mn element in the MathML namespace, which is a MathML text integration point","msgtype":"m.text"},"ts":1439984912000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so we \"Process the token according to the rules given in the section corresponding to the current insertion mode in HTML content.","msgtype":"m.text"},"ts":1439984918000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1439984922000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/syntax.html#tree-construction-dispatcher","msgtype":"m.text"},"ts":1439984932000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"If the adjusted current node is a MathML text integration point and the token is a start tag whose tag name is neither \"mglyph\" nor \"malignmark\"","msgtype":"m.text"},"ts":1439984938000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If the adjusted current node is a MathML text integration point and the token is a character token\"","msgtype":"m.text"},"ts":1439984938000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"AFAICT, the adjusted current node is indeed a MathML text integration point, but the token isn't a start tag whose tag name is neither \"mglyph\" nor \"malignmark\".","msgtype":"m.text"},"ts":1439984983000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"so the adjusted current node is a mn element in the MathML namespace, right?","msgtype":"m.text"},"ts":1439984984000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the token is a start tag whose tag name is neither \"mglyph\" nor \"malignmark\", because it's a start tag whose tag name is \"span\"","msgtype":"m.text"},"ts":1439985008000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh god, I can't read.","msgtype":"m.text"},"ts":1439985021000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and \"span\" is neither \"mglyph\" nor \"malignmark\"","msgtype":"m.text"},"ts":1439985022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1439985025000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"eh, it happens to us all. especially when implementing something that's quite repetitive.","msgtype":"m.text"},"ts":1439985048000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ms2ger: Good point!","msgtype":"m.text"},"ts":1439985331000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: it just occurred to me that https://github.com/whatwg/encoding/issues/5 is a problem for several encodings","msgtype":"m.text"},"ts":1439987524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: you implementing foreign content support in html5ever, or?","msgtype":"m.text"},"ts":1439992686000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm making failing tests pass. That was one of them yes.","msgtype":"m.text"},"ts":1439992716000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: so yeah, I /believe/ we should have the right number of errors for all the tests, but I can't guarantee it.","msgtype":"m.text"},"ts":1439992798000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I kinda want to add tests for the parse errors too.","msgtype":"m.text"},"ts":1439993061000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: what do you mean?","msgtype":"m.text"},"ts":1439993095000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I mean in html5ever. The #error part isn't tested.","msgtype":"m.text"},"ts":1439993129000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: right","msgtype":"m.text"},"ts":1439993138000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: so yeah, I can't guarantee the #error section is right, but it probably is?","msgtype":"m.text"},"ts":1439993159000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: I can give far stronger guarantees about everything else!","msgtype":"m.text"},"ts":1439993167000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well, even all the more reason to implement them, that way we will be able to give strong guarantees about everything.","msgtype":"m.text"},"ts":1439993230000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"There's still the question of collapsing multiple parse errors into one","msgtype":"m.text"},"ts":1439993577000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the /number/ of parse errors should be constant, IIRC","msgtype":"m.text"},"ts":1439993676000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's just /what/ parse errors you get is undefined","msgtype":"m.text"},"ts":1439993683000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I know of at least one FIXME in html5ever where it wonders if some error machinery should stop at first erroneous tag. I'm not currently at home so can't say more about it.","msgtype":"m.text"},"ts":1439993793000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'm less sure that the error part is right :)","msgtype":"m.text"},"ts":1439993826000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/issues/112","msgtype":"m.text"},"ts":1439995408000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ah, it's so nice having more implementers in the channel, spicing things up with crazy parser talk. <3 nox","msgtype":"m.text"},"ts":1439995458000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: thank you","msgtype":"m.text"},"ts":1439996769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Heh. :)","msgtype":"m.text"},"ts":1439998057000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I'm going to write my wpt test to the gecko behavior for now on the assumption that spec issue is real","msgtype":"m.text"},"ts":1439998927000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sounds good","msgtype":"m.text"},"ts":1439998998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I can try to fix it tomorrow if that helps","msgtype":"m.text"},"ts":1439999009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1439999124000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I'll probably be working on this for at least a few more days... so any time in there","msgtype":"m.text"},"ts":1439999138000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Good morning WHATWG crew o/","msgtype":"m.text"},"ts":1440000647000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"has been tidying up URL and Encoding","msgtype":"m.emote"},"ts":1440002779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I still have to do some Encoding and URL stuff, but fixing a few Fetch things shouldn't take long","msgtype":"m.text"},"ts":1440002835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I think there are no tests for parsing fragments into templates.","msgtype":"m.text"},"ts":1440003022000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Nor tests for parsing fragments into annotate-xml elements.","msgtype":"m.text"},"ts":1440003142000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: entirely plausible","msgtype":"m.text"},"ts":1440003345000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: in general fragment parsing is somewhat undertested","msgtype":"m.text"},"ts":1440003379000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: feel free to contribute tests (or at least file bugs on what needs tests)!","msgtype":"m.text"},"ts":1440003400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: does Response tainting effect anything other than the type of Response returned from fetch()?","msgtype":"m.text"},"ts":1440004179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean, do we expect other specs like html to look at the type of the Response returned from the fetch algorithm?","msgtype":"m.text"},"ts":1440004236000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk, un-owner-ed myself","msgtype":"m.text"},"ts":1440005218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"gsnedders: Filed some.","msgtype":"m.text"},"ts":1440008894000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: Any idea when you will look at the Ruby in HTML tests/spec btw? Last failing tests I can't do much about. :)","msgtype":"m.text"},"ts":1440009109000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"OH: \"HTML is fairly easy to parse, I wrote an HTML parser once just with a loop and state variable\"","msgtype":"m.text"},"ts":1440014098000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hahahahahaha","msgtype":"m.text"},"ts":1440014664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does anyone in here use textual irc client for mac ?","msgtype":"m.text"},"ts":1440017716000,"senderName":"Matt5ander5","senderId":"Matt5ander5@irc"},
{"content":{"body":"#data","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"<table><colgroup> foo</colgroup></table>","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"#errors","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(1,7): expected-doctype-but-got-start-tag","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(1,32): foster-parenting-character-in-table","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(1,32): foster-parenting-character-in-table","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(1,32): foster-parenting-character-in-table","msgtype":"m.text"},"ts":1440018519000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(1,32): unexpected-end-tag","msgtype":"m.text"},"ts":1440018520000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"#document","msgtype":"m.text"},"ts":1440018520000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"| <html>","msgtype":"m.text"},"ts":1440018521000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"|   <head>","msgtype":"m.text"},"ts":1440018521000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"|   <body>","msgtype":"m.text"},"ts":1440018522000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Anyway, yay, gsnedders, the errors look funky in many places, from a quick first glance.","msgtype":"m.text"},"ts":1440018556000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"In the case I mistakenly pasted just now, the foster-parenting errors are I think for the \"foo\" text, one per character, and is reported at the end of </colgroup> for a reason I ignore. A mistake, probably?","msgtype":"m.text"},"ts":1440018610000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I also don't know how they are related to foster parenting, too.","msgtype":"m.text"},"ts":1440018717000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: and the locations seem off, bah","msgtype":"m.text"},"ts":1440021006000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: basically nolanw based them off his Obj-C implementation a while ago because it was the first time in ages anyone had tried to make sure an implementation was up to date with the spec wrt parse errors. at some point html5lib-python should be updated so we can see how that compares.","msgtype":"m.text"},"ts":1440021102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I'm currently comparing them to the results of html5ever,","msgtype":"m.text"},"ts":1440021780000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: looked at 4 mismatches, all 4 seem to be problems in the tests.","msgtype":"m.text"},"ts":1440021796000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Entirely plausible. :)","msgtype":"m.text"},"ts":1440021841000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"59 failing tests when checking errors.","msgtype":"m.text"},"ts":1440021867000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Feel free to open a PR. That one might take longer to review, though. :)","msgtype":"m.text"},"ts":1440021877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Many of them are just foster-parenting-character-in-table.","msgtype":"m.text"},"ts":1440021884000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Will do, with the most obvious commits first.","msgtype":"m.text"},"ts":1440021892000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"For example, &#1111111FOO in the tests only report an error for the illegal code point, and not the missing semicolon.","msgtype":"m.text"},"ts":1440021922000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Just understood why the location are off. And it seems on purpose.","msgtype":"m.text"},"ts":1440024831000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: Error happens in \"Anything else\" in https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intabletext, so you could argue it is reported at the end of the \"anything else\" thing, in that case </colgroup>.","msgtype":"m.text"},"ts":1440024881000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Having the error three times is wrong though.","msgtype":"m.text"},"ts":1440024891000,"senderName":"nox","senderId":"nox@irc"}
]