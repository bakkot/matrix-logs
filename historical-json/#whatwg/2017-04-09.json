[
{"content":{"body":"annevk: Domenic so for HTML checking of WHATWG specs with Travis I‚Äôd like to use a common script, and put it under version control somewhere in github/whatwg","msgtype":"m.text"},"ts":1491717474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess one way would be a create a new ‚Äútools‚Äù or ‚Äúcommon-tools‚Äù (or whatever) repo, and put it in there","msgtype":"m.text"},"ts":1491717574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that seems like overkill unless we anticipate we might need to add other common tools later","msgtype":"m.text"},"ts":1491717635000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so alternative is, I could just drop it in whatwg/infra","msgtype":"m.text"},"ts":1491717789000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which yeah, it‚Äôs a spec repo of its own„Éºnot a repo for common build infrastructure„Éºbut seems like there‚Äôs nothing wrong with giving it the additional purpose of storing common build infrastructure/tooling","msgtype":"m.text"},"ts":1491717923000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to be clear, wherever we put it, the idea would be that I just update the various spec .travis.yml files to do ‚Äúcurl https://github.com/whatwg/infra/blob/master/html-check.sh && bash html-check.sh‚Äù","msgtype":"m.text"},"ts":1491718038000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so rather than repeating in N different repo .travis.yml files the same set of commands to call the HTML checker over the network API, I just move the commands into that script","msgtype":"m.text"},"ts":1491718159000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so then of course if we end up needing to make any changes/refinements to how the HTML checker gets called, we need to make the updates in only one places instead of in N different places","msgtype":"m.text"},"ts":1491718232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"* ‚Äúcurl -O https://github.com/whatwg/infra/blob/master/html-check.sh && bash html-check.sh‚Äù","msgtype":"m.text"},"ts":1491718284000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: resources.whatwg.org has tools/","msgtype":"m.text"},"ts":1491718881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: already used for a shared build script","msgtype":"m.text"},"ts":1491718899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1491719047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonder how I forgot that","msgtype":"m.text"},"ts":1491719062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1491719127000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: no github repo backing that, right?","msgtype":"m.text"},"ts":1491719146000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dmarr: it should get set dynamically by default","msgtype":"m.text"},"ts":1491719188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1491719194000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: there is whatwg/resources.whatwg.org","msgtype":"m.text"},"ts":1491719198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"found it nm","msgtype":"m.text"},"ts":1491719201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1491719204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Zoo time, ttyl","msgtype":"m.text"},"ts":1491719211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: enjoy","msgtype":"m.text"},"ts":1491719292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: if you want to make transfering signals work you need some kind of private MessageChannel","msgtype":"m.text"},"ts":1491742162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe Domenic is doing the same for transferring streams","msgtype":"m.text"},"ts":1491742197000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: or you need to keep a link back to the controller and fiddle with things there I suppose, but that seems weirder","msgtype":"m.text"},"ts":1491742202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: although, personally, I'd rather we explained message ports on top of streams :D","msgtype":"m.text"},"ts":1491742213000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, streams and promises would need the same kind of feature","msgtype":"m.text"},"ts":1491742216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I don't see how streams have any ability to cross threads","msgtype":"m.text"},"ts":1491742240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: data must already get from the network to the main thread somehow","msgtype":"m.text"},"ts":1491742307000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sure, we queue tasks with the data","msgtype":"m.text"},"ts":1491742337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't that how message ports work?","msgtype":"m.text"},"ts":1491742398000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think it's just because I find message ports more confusing than streams, so I'm leaning to the thing I understand most. Ignore me.","msgtype":"m.text"},"ts":1491742499000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yup, tasks can cross threads","msgtype":"m.text"},"ts":1491742532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: btw, the reason we cannot do \"cancellation\" is because of Event.prototype.cancelable","msgtype":"m.text"},"ts":1491752236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: mkwst: other terms we could consider \"halt\" / \"stop\"","msgtype":"m.text"},"ts":1491752347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, understand the legacy. I can put up with .cancel, but why not .abort?","msgtype":"m.text"},"ts":1491753336000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: naming them all after abort is fine with me","msgtype":"m.text"},"ts":1491753494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so with this new system we don't even have a revealing constructor for the object with abort() anymore","msgtype":"m.text"},"ts":1491753634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you just pass in a signal object","msgtype":"m.text"},"ts":1491753647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess that's fine","msgtype":"m.text"},"ts":1491753652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: oh, I forgot to mention in the Fetch PR, we'll need an example","msgtype":"m.text"},"ts":1491753668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I wanted to start with the bits I was unsure of so I could get feedback. I can easily example the hell out of it later","msgtype":"m.text"},"ts":1491753925000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Also why are we all working on a Sunday?","msgtype":"m.text"},"ts":1491753936000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, I worked less during the week since the kid couldn't go to daycare fulltime, but I also enjoy this topic üòä","msgtype":"m.text"},"ts":1491757648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: as a heads up, used Hangouts on you","msgtype":"m.text"},"ts":1491757700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think we need a revealing constructor, especially as one signal can feed many fetches","msgtype":"m.text"},"ts":1491759037000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: the observer would be in a revealing constructor though","msgtype":"m.text"},"ts":1491759067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So controller/signal/observer","msgtype":"m.text"},"ts":1491759094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for the HTML checker I was working today on adding a mechanism to allow filtering out particular errors/warnings based on regex match","msgtype":"m.text"},"ts":1491761334000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"motivated by trying to deal with the ‚ÄúText run is not in Unicode Normalization Form C‚Äù noise for the Encoding spec output files","msgtype":"m.text"},"ts":1491761390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I actually have it working now locally","msgtype":"m.text"},"ts":1491761455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and can push it to the checker tomorrow for testing","msgtype":"m.text"},"ts":1491761472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Cool","msgtype":"m.text"},"ts":1491761498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so for deploy.sh we might want to provide a way to set ignore patterns per-spec","msgtype":"m.text"},"ts":1491761567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there some way now alreay for deploy.sh to set per-spec environment variables?","msgtype":"m.text"},"ts":1491761623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess not yet, from looking at the sources","msgtype":"m.text"},"ts":1491761711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah but I see it can just pick up environment variables from .travis.yml","msgtype":"m.text"},"ts":1491761889000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK so yeah I think I can make this work","msgtype":"m.text"},"ts":1491761912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tomorrow","msgtype":"m.text"},"ts":1491761914000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: it does seem to when i make a normal request in the console, but for some reason when calling from a bundled file, its not. maybe something with babel or webpack that is using a polyfilled fetch? im at a loss","msgtype":"m.text"},"ts":1491763019000,"senderName":"dmarr","senderId":"dmarr@irc"},
{"content":{"body":"dmarr: I have no experience with those","msgtype":"m.text"},"ts":1491764832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: yeah, we use that file for config; sounds nice!","msgtype":"m.text"},"ts":1491764855000,"senderName":"annevk","senderId":"annevk@irc"}
]