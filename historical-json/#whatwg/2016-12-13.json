[
{"content":{"body":"does `bikeshed watch` watch more than one file at a time? or just the first .bs file it finds?","msgtype":"m.text"},"ts":1481588232000,"senderName":"apowers313","senderId":"apowers313@irc"},
{"content":{"body":"TabAtkins: ⬆","msgtype":"m.text"},"ts":1481592762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, setting an enum attribute to a non-valid value doesn't throw?","msgtype":"m.text"},"ts":1481621542000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"had very much forgotten that","msgtype":"m.text"},"ts":1481621876000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"annevk, Domenic: I remeber reading a quite detailed proposal of internal slots somewhere. Can't seem to find it. Either of you have a pointer? I'd like to tackle that soonish.","msgtype":"m.text"},"ts":1481622846000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I know there's this: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27354 but there was some more recent thinking somehwere","msgtype":"m.text"},"ts":1481622915000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I don't remember any proposal. I do think this is an area where it'd be good to write up and debate something before starting on the work.","msgtype":"m.text"},"ts":1481632967000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: absolutely","msgtype":"m.text"},"ts":1481633562000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"One issue I wonder about is whether internal slots should have types","msgtype":"m.text"},"ts":1481633635000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, definitely","msgtype":"m.text"},"ts":1481633641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sometimes it's useful, but sometimes you want to store something conceptual in them","msgtype":"m.text"},"ts":1481633661000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And since Web IDL types are \"really\" type conversions, it's not clear it makes sense to convert twice","msgtype":"m.text"},"ts":1481633690000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so for example a URL record https://url.spec.whatwg.org/#concept-url is not a Web IDL type","msgtype":"m.text"},"ts":1481633791000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So https://html.spec.whatwg.org/#concept-hyperlink-url would not be representable as a slot if we said slots must have types","msgtype":"m.text"},"ts":1481633820000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Similarly https://drafts.csswg.org/cssom/#associated-css-style-sheet","msgtype":"m.text"},"ts":1481633878000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe just a strong convention of `// a <a href=\"...\">CSS style sheet</a>` would make sense","msgtype":"m.text"},"ts":1481633932000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: same kinds of questions here. I was wondering if it would also make sense to allow infra data structures in there.","msgtype":"m.text"},"ts":1481634024000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah that's another common case","msgtype":"m.text"},"ts":1481634117000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"My intuition is that typing them in any formal way would not work out","msgtype":"m.text"},"ts":1481634130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or at least would make them less useful/used. And thus be confusing: \"oh, no, you meant the informal concept of internal slot, not the formal one which is only used sometimes because of these restrictions.\"","msgtype":"m.text"},"ts":1481634176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess maybe if everything converted to infra it might work","msgtype":"m.text"},"ts":1481634205000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. URL and CSS style sheet would become whatever we name https://github.com/whatwg/infra/issues/21","msgtype":"m.text"},"ts":1481634230000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, there a cases where you want to hold on to a webidl type, though.","msgtype":"m.text"},"ts":1481634261000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Eg a promise, an instance of something related, etc.","msgtype":"m.text"},"ts":1481634291000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I posted concerns at https://github.com/eslint/eslint/pull/7563#issuecomment-266733140","msgtype":"m.text"},"ts":1481634348000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: yes, but there's no single type system that encompasses Web IDL types + vague spec types. So I think `// a <a href=\"...\"><code>Document</code></a>` would suffice for the Web IDL cases","msgtype":"m.text"},"ts":1481634585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You can always hold Web IDL type instances without a formal type declaration documenting it. Use actual comments for documentation.","msgtype":"m.text"},"ts":1481634615000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah. This was to your point really.","msgtype":"m.text"},"ts":1481634634000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: I thought it was opt-in already","msgtype":"m.text"},"ts":1481634648000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: huh, http://eslint.org/docs/rules/no-await-in-loop#when-not-to-use-it makes it sound opt-out. Investigating…","msgtype":"m.text"},"ts":1481634766000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: http://eslint.org/docs/rules/","msgtype":"m.text"},"ts":1481634801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, you're right","msgtype":"m.text"},"ts":1481634804000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: not sure if my use case is uncommon, but I'd also need the equivalent of class-level slots (static slots?)","msgtype":"m.text"},"ts":1481637793000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: that seems bad; just put them on Window then","msgtype":"m.text"},"ts":1481637808000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, they're *really* class-level. E.g.: different instances of the Gyroscope class have a different frequency requirements at which to poll the underlying HW sensor.","msgtype":"m.text"},"ts":1481637958000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm confused, instance-level or class-level?","msgtype":"m.text"},"ts":1481637976000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Every class exists exactly once per Window instance so tying to Window makes more sense.","msgtype":"m.text"},"ts":1481637988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That doesn't sound like a slot though, more like a constant","msgtype":"m.text"},"ts":1481638008000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: at the class level, we look at all of the requested frequencies, pick the largest one, and use that one to determine at what freq to poll the sensor","msgtype":"m.text"},"ts":1481638023000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: that value is revisited every time a new Gyro instance starts or stops listening to the sensor","msgtype":"m.text"},"ts":1481638064000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: this sounds really confusing to me, so maybe needs to be part of the writeup. I maintain that anything class/static should go on Window instead, but it sounds like this has something to do with instances instead, so I am just confused.","msgtype":"m.text"},"ts":1481638123000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah--the sensor model is quite complex because there are multiple layers in between the JS and the underlying HW which are different per OS and HW.","msgtype":"m.text"},"ts":1481638419000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I also did a poor job of explaining it above.","msgtype":"m.text"},"ts":1481638445000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"would wait to see finger print scanning, biometrics, SMS and contacts access from web","msgtype":"m.emote"},"ts":1481638548000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Domenic: Basically you have one HW sensor (e.g. a gyroscope), but you can create lots of instances of the gyroscope class which can all require a different polling frequency of the HW sensor. The HW sensor is then polled at the highest one of those.","msgtype":"m.text"},"ts":1481638573000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: whenever you start or stop one of those gyroscope instance, you change the underlying HW polling frequency accordingly.","msgtype":"m.text"},"ts":1481638626000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"OK. So you need some kind of map stored on Window, of which one entry is Gyroscope -> highest polling frequency?","msgtype":"m.text"},"ts":1481638627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: basically, yes. I hold on to all created instances.","msgtype":"m.text"},"ts":1481638652000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Seems like a GC nightmare, but I'm probably not understanding fully :)","msgtype":"m.text"},"ts":1481638675000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hopefully the latter.","msgtype":"m.text"},"ts":1481638696000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1481638699000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: regardless of these potential GC issues, I could just store the HW polling frequency value instead, but that would still a class-level slot.","msgtype":"m.text"},"ts":1481639193000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: you'd just stick those on window?","msgtype":"m.text"},"ts":1481639212000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1481639215000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What about the naming collision?","msgtype":"m.text"},"ts":1481639224000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Add a prefix if you're worried about it","msgtype":"m.text"},"ts":1481639241000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Seems better than inventing a new parallel concept with different semantics","msgtype":"m.text"},"ts":1481639260000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, don't we already have static attributes and constants?","msgtype":"m.text"},"ts":1481639294000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yep, which are paralllel concepts with different semantics from instance attributes","msgtype":"m.text"},"ts":1481639320000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(or rather, prototype attributes)","msgtype":"m.text"},"ts":1481639346000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: to be clear, I have no idea whether my particular use case is common or not. If it isn't, there no point in working out a dedicated solution for it.","msgtype":"m.text"},"ts":1481639559000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: how would you handle flags? Turn them into booleans?","msgtype":"m.text"},"ts":1481639869000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Leaving them as flags seems fine?","msgtype":"m.text"},"ts":1481639935000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":" Domenic: if instance.[[flag]] is set, then ... ?","msgtype":"m.text"},"ts":1481640027000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah seems fine","msgtype":"m.text"},"ts":1481640066000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: k","msgtype":"m.text"},"ts":1481640273000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic, you asked whether they should have types, not WebIDL types","msgtype":"m.text"},"ts":1481645200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I was kind of assuming inventing a new type system was not a project anyone wanted to take on","msgtype":"m.text"},"ts":1481645224000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You'd be surprised...","msgtype":"m.text"},"ts":1481645246000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"However, I'm not sure if we'd be inventing a new type system; all we need is a link to a BS definition, really","msgtype":"m.text"},"ts":1481645322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hi all!","msgtype":"m.text"},"ts":1481650023000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"I've been working on a few ideas related to CSS that I think would help with writing HTML and building websites - is this the right spot to get feedback and discuss ideas?","msgtype":"m.text"},"ts":1481650131000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"tobie: Re \"why are non-exported DFNs still displayed in the Terms defined by this specification section?\", because they're still terms defined by the specification, just ones intended for internal use. Still useful to have them in the index.","msgtype":"m.text"},"ts":1481651266000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"apowers313: Re \"does `bikeshed watch` watch more than one file at a time? or just the first .bs file it finds?\" The documentation should be clear on this <https://tabatkins.github.io/bikeshed/#cli-watch>","msgtype":"m.text"},"ts":1481651311000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: We're not currently tracking all *links* in Shepherd, tho that's possible (and desired by me).","msgtype":"m.text"},"ts":1481651446000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: good to know!","msgtype":"m.text"},"ts":1481651596000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: I was sorta hoping for consolidated types across IDL and Infra, but a good first step might be to start defining slots without being explicit about that","msgtype":"m.text"},"ts":1481651682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: or only being explicit about that part in prose","msgtype":"m.text"},"ts":1481651693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"innovati: probably better to start at https://discourse.wicg.io/ - see if anyone's working on something similar, first","msgtype":"m.text"},"ts":1481654346000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"I'm on there, and one of the ideas seems to have fizzled out, the other has some activity but I'm not sure how to keep the ball rolling!","msgtype":"m.text"},"ts":1481654502000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"annevk: I'm not seeing the OWFa licensing text in some recent WHATWG spec updates - did those get removed?","msgtype":"m.text"},"ts":1481667729000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"e.g. I know https://dom.spec.whatwg.org/ used to have it at the top - where did it go?","msgtype":"m.text"},"ts":1481667741000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"also I'm getting a cert error on https://domparsing.spec.whatwg.org/","msgtype":"m.text"},"ts":1481667768000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yes, at some point OWFa got dropped from all of these specs: https://wiki.mozilla.org/Standards/license#WHATWG","msgtype":"m.text"},"ts":1481667834000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that seems like a pretty major regression","msgtype":"m.text"},"ts":1481667842000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"CC0 is still there at the bottom of the document, but that's not enough","msgtype":"m.text"},"ts":1481667870000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I remember we discussed that when it was done","msgtype":"m.text"},"ts":1481667884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have no memory of any discussion of dropping OWFa","msgtype":"m.text"},"ts":1481667899000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I would have strongly objected","msgtype":"m.text"},"ts":1481667907000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: the problem with OWFa is that we didn't actually have signed forms","msgtype":"m.text"},"ts":1481667926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"after we had Mozilla's lawyers even provide/approve specific language to dual license CC0 OWFa","msgtype":"m.text"},"ts":1481667931000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I see, file an issue? I can look at that when I'm back","msgtype":"m.text"},"ts":1481667962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that wording was done in such a way not to need separate signatures. that with every commit it was re-acknowledged","msgtype":"m.text"},"ts":1481667978000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1481667986000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"on any particular spec?","msgtype":"m.text"},"ts":1481667992000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"because it looks like a spec-wide issue","msgtype":"m.text"},"ts":1481668002000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the desired language (and markup) is here: https://wiki.mozilla.org/Standards/license#Markup (has been stable for years)","msgtype":"m.text"},"ts":1481668041000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"TabAtkins: re: ECMAScript throw, it turns out that non \"ES throw\" has a for=\"exception\" attribute.","msgtype":"m.text"},"ts":1481668261000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: today it seems you can omit it, as it's the only dfn called \"throw\" in the whole spec.","msgtype":"m.text"},"ts":1481668301000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: if I move [=es throw|throw=] to  [=ECMAScript/throw=], will folks referencing [=exception/throw=] need to move from [=throw=] to [=exception/throw=]?","msgtype":"m.text"},"ts":1481668383000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: or does what you explained in PR#250 work for that case too?","msgtype":"m.text"},"ts":1481668414000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That's exactly the case I described in #250, I think.","msgtype":"m.text"},"ts":1481668435000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, that's sort of the conclusion I came to as I was writing the last sentence down.","msgtype":"m.text"},"ts":1481668583000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1481668589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wish the mental model I have of DFNs actually matched the one you've implemented.","msgtype":"m.text"},"ts":1481668630000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It's the same model, basically, as @font-face vs 'font-family'.  Which is to say, slightly confusing for people until they finally \"get\" it.","msgtype":"m.text"},"ts":1481668661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah--\"finally'\"s been taking a while, here.","msgtype":"m.text"},"ts":1481668702000,"senderName":"tobie","senderId":"tobie@irc"}
]