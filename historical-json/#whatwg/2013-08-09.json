[
{"content":{"body":"Domenic_: that's a pretty go","msgtype":"m.text"},"ts":1376039395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: oops, compelling reply","msgtype":"m.text"},"ts":1376039401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: thanks!","msgtype":"m.text"},"ts":1376039420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Woohoo, found more browser differences...","msgtype":"m.text"},"ts":1376044686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"baseURI is apparently cloned in Gecko, not in Chrome.","msgtype":"m.text"},"ts":1376044699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whoa, IE doesn't even support baseURI","msgtype":"m.text"},"ts":1376044759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if IE supports xml:base...","msgtype":"m.text"},"ts":1376044892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, none of Chrome/Safari/IE support xml:base!","msgtype":"m.text"},"ts":1376045562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: crazy","msgtype":"m.text"},"ts":1376046856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Since xml:base is kinda crazy, I'd like to call this one an opportunity.","msgtype":"m.text"},"ts":1376046926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently my fingers think that </var> is an appropriate way to close any element","msgtype":"m.text"},"ts":1376046934000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess killing xml:base also means complexity is reduced quite a bit","msgtype":"m.text"},"ts":1376047012000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So can we just remove that last test and move on? http://test.csswg.org/suites/css-style-attr/nightly-unstable/report/results.html","msgtype":"m.text"},"ts":1376047088000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ok i've defined how declaration blocks are serialized, with shorthands. anyone want to review the diff before i commit?","msgtype":"m.text"},"ts":1376047205000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Filed https://bugzilla.mozilla.org/show_bug.cgi?id=903372 on removing xml:base from Gecko","msgtype":"m.text"},"ts":1376047433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://pastebin.com/3LRZVbLP","msgtype":"m.text"},"ts":1376047450000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't think it make sense to talk about syntax","msgtype":"m.text"},"ts":1376047498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"If a property is specified more than once\" is a syntax thing, it's not a model thing","msgtype":"m.text"},"ts":1376047513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, i should probably hook into the cascade there in some way","msgtype":"m.text"},"ts":1376047572000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: some complexity can be removed I suppose, but <base> is still there","msgtype":"m.text"},"ts":1376047641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: FWIW, xml:base is required in stuff like RSS/Atom","msgtype":"m.text"},"ts":1376049132000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it could be made an RSS/Atom-specific attribute","msgtype":"m.text"},"ts":1376050502000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: is there something in css-cascade that i can hook into for the purpose of saying which declarations go in to the CSSOM? it seems to talk about the processing going from an element and matching against it, but for CSSOM that's not what i need","msgtype":"m.text"},"ts":1376050769000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: see the top of http://pastebin.com/3LRZVbLP for context","msgtype":"m.text"},"ts":1376051290000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: could care less","msgtype":"m.text"},"ts":1376052612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean couldn't?","msgtype":"m.text"},"ts":1376052718000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oops","msgtype":"m.text"},"ts":1376052774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Does Firefox, at least on Android, not inc. a feed reader?","msgtype":"m.text"},"ts":1376052915000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: support for xml:base we need there is way different and less complex","msgtype":"m.text"},"ts":1376052993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: can just be done at the application layer","msgtype":"m.text"},"ts":1376053002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"win 17","msgtype":"m.text"},"ts":1376063144000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Has someone been crazy enough to polyfill CSS exclusions? :)","msgtype":"m.text"},"ts":1376063556000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"assumes not","msgtype":"m.emote"},"ts":1376063570000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"So I wanted to put URL tests into some kind of universal format. But JSON doesn't allow comments. Suggestions?","msgtype":"m.text"},"ts":1376064710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for CSS parsing tests I went with JSON + a readme","msgtype":"m.text"},"ts":1376064947000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: compelling reply to what?","msgtype":"m.text"},"ts":1376066229000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zcorpan: Actually, that's a lack in Syntax - I'm adding a paragraph now stating that style rules need to ignore duplicate declarations.","msgtype":"m.text"},"ts":1376069942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Do you need a more abstract hook?","msgtype":"m.text"},"ts":1376069956000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, though, you *do* need something more abstract I think, because Syntax probably doesn't want to do shorthand expansion.","msgtype":"m.text"},"ts":1376070017000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Since the actual list of properties that CSSOM will see should include shorthands (so it can serialize).","msgtype":"m.text"},"ts":1376070059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: Just let me know what you need and I can hook you up.","msgtype":"m.text"},"ts":1376070156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"did we decide we were going to use IDL for deciding what was visible in workers?","msgtype":"m.text"},"ts":1376081351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam|away: any opinions on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22646 ?","msgtype":"m.text"},"ts":1376084429000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"fyi, whatwg.org will probably be offline for an hour around 11am-1pm August 14th, PST","msgtype":"m.text"},"ts":1376087191000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i doubt we'll be able to distinguish this from the times it's offline just randomly, but that's another story","msgtype":"m.text"},"ts":1376087203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi! I'm working on a web app that plays multiple <audio> elements in sync. I can do all sorts of operations (play, pause, stop, seek) and they will stay in sync. However, when I add another <audio> element with a local resource as its source, it does stay in sync with the others if I play them from the beginning, but when I seek (change .currentTime) the \"local\" <audio> element breaks the sync.","msgtype":"m.text"},"ts":1376088295000,"senderName":"eXhumed_","senderId":"eXhumed_@irc"},
{"content":{"body":"(and by \"local\" I mean having an array with samples, encoding them into a wav file and setting it as the element's .src)","msgtype":"m.text"},"ts":1376088414000,"senderName":"eXhumed_","senderId":"eXhumed_@irc"}
]