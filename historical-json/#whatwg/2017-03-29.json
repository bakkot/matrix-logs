[
{"content":{"body":"zcorpan: that'd work for me","msgtype":"m.text"},"ts":1490747106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: are you interested in designing a successor of HTML Imports?","msgtype":"m.text"},"ts":1490763440000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: uh... I'm really just interested in trying to understand the benefits of html imports compared to es modules... I know slightlyoff doesn't think es modules is a replacement","msgtype":"m.text"},"ts":1490763486000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"kochi: which led me to reading the html imports spec and then wondering how it works with service workers, etc","msgtype":"m.text"},"ts":1490763502000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess technically ES modules can polyfill what HTML Imports can do, by embedding HTML and style in JS string :)","msgtype":"m.text"},"ts":1490763579000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: right, but from what I have read it seems html imports supports progressive loading while es modules will require all dependencies to be loaded in strict sequence before evaluation","msgtype":"m.text"},"ts":1490763627000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Using native HTML parser can have benefit over converting string to HTML via .innerHTML or DOMParser API, though.","msgtype":"m.text"},"ts":1490763656000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1490763665000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"kochi: it would be nice to see data showing perf benefits of html imports compared to a js polyfill...","msgtype":"m.text"},"ts":1490763710000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and yeah, ES modules starts evaluation of the whole script once all the dependency graph is resolved and loaded, while in HTML Imports script inside an HTML Import can be run while loading other dependency branch.","msgtype":"m.text"},"ts":1490763725000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: I guess I should be clear these questions are just coming from personal interest and don't really reflect any change in position from mozilla","msgtype":"m.text"},"ts":1490763810000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, I also would like to have concrete data :) Alex Russel might have some, will ask him.  He mentioned such benefit in his talks.","msgtype":"m.text"},"ts":1490763865000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"wanderview: ok, I won't take it as mozilla's action, but I'd more than welcome your personal interests :)","msgtype":"m.text"},"ts":1490763926000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"happy to answer any questions","msgtype":"m.text"},"ts":1490763940000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: I asked about data again on twitter last night :-) https://twitter.com/wanderview/status/846687836615028741","msgtype":"m.text"},"ts":1490763941000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"good :)","msgtype":"m.text"},"ts":1490763965000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: I'm going to see him at the SW spec meeting next week, so I'll ask him there as well","msgtype":"m.text"},"ts":1490764018000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, are you here in Tokyo?","msgtype":"m.text"},"ts":1490764033000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I'm in Taipei at the moment... I arrive in Tokyo Saturday","msgtype":"m.text"},"ts":1490764045000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"okay, that's why your response is so quick :)","msgtype":"m.text"},"ts":1490764075000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yes, I'm awake! :-)","msgtype":"m.text"},"ts":1490764084000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Practically html loading network round-trip time >>>> time required to parse HTML, I guess, so the benefit of parallelizing HTML import and HTML parsing is marginal, but in the age of H2 when the server side is more optimized to fill the loading pipeline, that optimization can be useful.","msgtype":"m.text"},"ts":1490764251000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"so the es modules approach would parallelize all the network loads, but would delay the evaluation until all loads have completed?","msgtype":"m.text"},"ts":1490764380000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, es modules resolve all imports/exports before evaluation.","msgtype":"m.text"},"ts":1490764561000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"but does the network loading happen in parallel?  I guess I wasn't clear on that point","msgtype":"m.text"},"ts":1490764591000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I should read up on how es modules does that","msgtype":"m.text"},"ts":1490764734000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"one of the merits of es module is that import dependency can be analyzed statically by parsing module script, no need to evaluate the code.","msgtype":"m.text"},"ts":1490764739000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1490764773000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and that's why dynamic import() is not there in the first implementation of ES modules.","msgtype":"m.text"},"ts":1490764825000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I guess the question then is how much benefit is there to being able to run html/style parsers while other dependents are loading from network","msgtype":"m.text"},"ts":1490764915000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"So if an ES module A imports B, C, D, then loading B,C, D can be in parallel.","msgtype":"m.text"},"ts":1490764926000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"and modules approach requires double parsing html/style resources... first as js and then as final html/css after dynamically inserted","msgtype":"m.text"},"ts":1490764995000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and html/css strings must be kept in memory due to js .source requirements","msgtype":"m.text"},"ts":1490765009000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"true.","msgtype":"m.text"},"ts":1490765018000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"(^ all this seems accurate)","msgtype":"m.text"},"ts":1490765028000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Alex Russel mentioned some issue about css-in-js causing cache problems... thats the one I don't understand","msgtype":"m.text"},"ts":1490765036000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess maybe separate html/css resources can be cached separately giving a finer grained cache... but not sure if that is what he meant","msgtype":"m.text"},"ts":1490765102000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, I want to know what he exactly said, but one reason I can think of is,","msgtype":"m.text"},"ts":1490765102000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: I saw it here: https://twitter.com/slightlylate/status/845435543647248384","msgtype":"m.text"},"ts":1490765181000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"when Shadow DOM is used for a component, each shadow has its own style. Many of the same components are used in one document, there are multiple of copies of these styles.","msgtype":"m.text"},"ts":1490765183000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"does that shadow DOM issue become worse with es module approach?  can it share a stylesheet in memory, but not dynamically inserted style?","msgtype":"m.text"},"ts":1490765266000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if such style is static (e.g. <style>...</style> in <template>), Blink does optimization of sharing the stylesheet resource memory.  So if JS generates style for each shadow, they can't be shared.","msgtype":"m.text"},"ts":1490765294000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1490765366000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we do that within a window as well I believe","msgtype":"m.text"},"ts":1490765394000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not sure if our shadow dom work takes advantage of it, though","msgtype":"m.text"},"ts":1490765409000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"If JS generates inline styles, I think caching is never expected for CSS?","msgtype":"m.text"},"ts":1490765499000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Shadow DOM work in Gecko has not started yet I think, though there might be old patches","msgtype":"m.text"},"ts":1490765568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Custom elements is nearly there though","msgtype":"m.text"},"ts":1490765589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good to hear!","msgtype":"m.text"},"ts":1490765600000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Oh, I wasn't aware custom elements was happening","msgtype":"m.text"},"ts":1490765671000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"btw, \"CSS in JS\" Alex is talking about is probably https://speakerdeck.com/vjeux/react-css-in-js ?","msgtype":"m.text"},"ts":1490765690000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"and CE is https://bugzilla.mozilla.org/show_bug.cgi?id=889230 ?","msgtype":"m.text"},"ts":1490765783000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Domenic: I'm guessing you are not in NYC right now?","msgtype":"m.text"},"ts":1490765789000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in Tokyo :)","msgtype":"m.text"},"ts":1490765795000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that's why Edgar files issues now and then 😊","msgtype":"m.text"},"ts":1490765812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: that looks like the right bug","msgtype":"m.text"},"ts":1490765822000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1490765826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still a long ways to go I guess https://bugzilla.mozilla.org/showdependencytree.cgi?id=889230&hide_resolved=1","msgtype":"m.text"},"ts":1490765855000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: are you going to be around the SW spec meeting next week?","msgtype":"m.text"},"ts":1490765857000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep!","msgtype":"m.text"},"ts":1490765862000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1490765867000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"kochi: btw, I filed an issue with some questions I had around html imports and service workers: https://github.com/w3c/ServiceWorker/issues/1095","msgtype":"m.text"},"ts":1490768017000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just FYI in case you aren't watching that repo","msgtype":"m.text"},"ts":1490768026000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"domfarolino: https://medium.com/dev-channel/pretty-printing-d80639fb8881 is probably of interest","msgtype":"m.text"},"ts":1490768056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks a lot","msgtype":"m.text"},"ts":1490768263000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"wanderview: thanks for raising the question!","msgtype":"m.text"},"ts":1490768564000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Usually I'm only watching github.com/w3c/webcomponents/","msgtype":"m.text"},"ts":1490768601000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: are link.import documents considered an \"active document\"?","msgtype":"m.text"},"ts":1490779622000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"for example, I think you can reference an iframe.contentWindow.document after doing iframe.remove()... but the document is not considered active any more","msgtype":"m.text"},"ts":1490779655000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the imported documents seem kind of like that because they are not rendered... but on the other hand they are associated with an environment settings object through the master document global","msgtype":"m.text"},"ts":1490779689000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Does Gecko has the same notion as blink about \"document is active\"?","msgtype":"m.text"},"ts":1490779778000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: hmm... I have no idea what blink does there :-)","msgtype":"m.text"},"ts":1490779808000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in gecko we can check to see if the document is associated with an environment settings object (gecko inner window) and a browsing context (gecko outer window + docshell)","msgtype":"m.text"},"ts":1490779867000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think iframe.remove() just tears down the browsing context for the frame... but not 100% sure","msgtype":"m.text"},"ts":1490779919000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I know for bfcache we keep the environment settings object alive, but it doesn't have the browsing context associated","msgtype":"m.text"},"ts":1490779941000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: okay, I assume we have similar notion - Blink  defines several lifecycle states of Document and e.g. if the document is being shutdown, it's inactive.","msgtype":"m.text"},"ts":1490780034000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"So as long as <link rel=\"import\"> element is connected to the master document (directly or indirectly) the `link.import` is active.","msgtype":"m.text"},"ts":1490780171000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1490780182000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess it was kind of theoretical spec question","msgtype":"m.text"},"ts":1490780196000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I mean, currently an environment settings object has a single document in html spec","msgtype":"m.text"},"ts":1490780224000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but with html imports it kind of has a secondary list of documents in addition to its master document","msgtype":"m.text"},"ts":1490780243000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"okay, so an import can be in a state that can't happen for a  document created using DOMImplementation.creatHTMLDocument().","msgtype":"m.text"},"ts":1490780603000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I guess the assumption is that anything that uses spec language like \"get the document for the given environment settings object\" will be working with the master document... all the imported documents are invisible to these specs","msgtype":"m.text"},"ts":1490780722000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, \"active document\" should be https://html.spec.whatwg.org/multipage/browsers.html#active-document in the spec world","msgtype":"m.text"},"ts":1490780832000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1490780894000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I was meaning different \"active\", then.","msgtype":"m.text"},"ts":1490780901000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"The HTML spec says one browsing context has one active document.","msgtype":"m.text"},"ts":1490780947000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I guess conceptually the imported documents hang more off the master document and the environment settings/browsing context doesn't really know about them at all","msgtype":"m.text"},"ts":1490780978000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sorry, just thinking it through","msgtype":"m.text"},"ts":1490780985000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"no worries. in HTML imports world, wherever script runs, `window.document` is the master document.","msgtype":"m.text"},"ts":1490781064000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"To get a reference of imported document is to use `link.import` property, or (in script running inside import) `document.currentScript.ownerDocument` (or any node in the import as context object).","msgtype":"m.text"},"ts":1490781180000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Domenic: so for HTML you pretty much s/character/code point/, or something else?","msgtype":"m.text"},"ts":1490783841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's currently 1849 matches for \"character\"","msgtype":"m.text"},"ts":1490783889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm mostly, although I would focus on the instances where we're actually manipulating strings, not e.g. talking about the user typing.","msgtype":"m.text"},"ts":1490783962000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It sounds pretty thankless though","msgtype":"m.text"},"ts":1490783969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe not worth it","msgtype":"m.text"},"ts":1490783979000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe we should do it as some kind of ongoing effort whenever we refactor algorithms, just like we do with other Infra things","msgtype":"m.text"},"ts":1490784090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it was pretty easy to avoid labels in the IPv6 parser btw, so I'm hopeful that we might not need them","msgtype":"m.text"},"ts":1490784163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ongoing effort sounds like a good idea, yeah.","msgtype":"m.text"},"ts":1490784213000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Labels does sound good. I want to implement that change in whatwg-url to check no test results change but yeah it was pretty reasonable.","msgtype":"m.text"},"ts":1490784246000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I implemented it in whatwg-url as well to make sure, hopefully you'll find the same","msgtype":"m.text"},"ts":1490784313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: GitHub can no longer display the fingerprint resource, claims it's invalid","msgtype":"m.text"},"ts":1490788014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fixing. damned namespaces","msgtype":"m.text"},"ts":1490788036000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: amateur hour","msgtype":"m.text"},"ts":1490788072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(not that I spotted that, was looking for a well-formedness error)","msgtype":"m.text"},"ts":1490788090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: seems better to not have width=\"46\" height=\"64\" inside the SVG","msgtype":"m.text"},"ts":1490788185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: viewBox should be enough","msgtype":"m.text"},"ts":1490788191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: no other comments from though, thanks for taking it on","msgtype":"m.text"},"ts":1490788229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i figured this would be inlined and then it should have width/height there","msgtype":"m.text"},"ts":1490788258000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: the aria attributes are also only necessary when inline","msgtype":"m.text"},"ts":1490788289000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I see, makes sense","msgtype":"m.text"},"ts":1490788298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I thought we'd keep using <img>","msgtype":"m.text"},"ts":1490792379000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: both solutions are fine with me, but it sounded like at least TabAtkins also wanted an inline solution","msgtype":"m.text"},"ts":1490792557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, yeah, but we don't have to host one","msgtype":"m.text"},"ts":1490792568000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Alright","msgtype":"m.text"},"ts":1490792610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: does that work for you?","msgtype":"m.text"},"ts":1490792616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: annevk: yeah sure. TabAtkins just needs to add width/height/role/aria-label in bikeshed","msgtype":"m.text"},"ts":1490792696000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: what other places can we reach out to about mutable strings?","msgtype":"m.text"},"ts":1490793881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: or should we just go ahead and start patching IDL?","msgtype":"m.text"},"ts":1490793906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I just realized I completely forgot about the distinguishable algorithm which might also be affected. Did you consider it?","msgtype":"m.text"},"ts":1490798278000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: updated the review with that comment.","msgtype":"m.text"},"ts":1490799566000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"kochi/wanderview: Note that ES \"evaluation\" actually happens in ~4 steps (per adamk), and IIRC 2 of them can happen before the full dependency graph is downloaded.","msgtype":"m.text"},"ts":1490802558000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"s/adamk/aklein/","msgtype":"m.text"},"ts":1490802590000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah, load, instantiate, link, evaluate, iirc.","msgtype":"m.text"},"ts":1490802960000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"ah, maybe no? is \"evaluate\" further sub-divided?","msgtype":"m.text"},"ts":1490803094000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Your stages sound like what I was thinking about.","msgtype":"m.text"},"ts":1490803118000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Sorry for the noise then; you were already ahead of me. :)","msgtype":"m.text"},"ts":1490803146000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Domenic: regarding the WPT to ensure the non-existence of timeline() and timelineEnd() in console, is there a reason to go with an html test rather than js? I ask bc you mentioned the suffix `-historical.html`","msgtype":"m.text"},"ts":1490803311000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: suspect Domenic is asleep, but -historical.any.js or some such should be fine too","msgtype":"m.text"},"ts":1490804661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I suspect)","msgtype":"m.text"},"ts":1490804674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll go with that for now thanks","msgtype":"m.text"},"ts":1490805618000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: what does the `.any.` denote anyways?","msgtype":"m.text"},"ts":1490807634000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: dedicated worker and window","msgtype":"m.text"},"ts":1490807810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1490807828000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: http://web-platform-tests.org/writing-tests/testharness.html has documentation on it","msgtype":"m.text"},"ts":1490807830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: you need some kind of prefix otherwise you won't get the boilerplate","msgtype":"m.text"},"ts":1490807860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: jgraham has a patch for .window.js but I'm not sure if that has landed","msgtype":"m.text"},"ts":1490807875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah thank you!","msgtype":"m.text"},"ts":1490808029000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: I think it did, bt I haven't checked","msgtype":"m.text"},"ts":1490810975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Got a question about https://html.spec.whatwg.org/multipage/embedded-content.html#iframe-load-event-steps","msgtype":"m.text"},"ts":1490814378000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"in particular \"When the iframe's browsing context's active document is not ready for post-load tasks, and when anything in the iframe is delaying the load event of the iframe's browsing context's active document, and when the iframe's browsing context is in the delaying load events mode, the iframe must delay the load event of its document.\"","msgtype":"m.text"},"ts":1490814406000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"and how to interpret \"anything in the iframe\".","msgtype":"m.text"},"ts":1490814438000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"If there's a child iframe, and its currently active document contains a grandchild iframe,","msgtype":"m.text"},"ts":1490814477000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"do all the documents in the iframe's session history count?","msgtype":"m.text"},"ts":1490814506000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"or only the currently active document?","msgtype":"m.text"},"ts":1490814518000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: they wouldn't delay the active document's load event, would they?","msgtype":"m.text"},"ts":1490814540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: that's what I'm trying to work out :)","msgtype":"m.text"},"ts":1490814566000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"wonders if the hotel wifi can cope with the HTML spec","msgtype":"m.emote"},"ts":1490814615000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the nasty case is something like if the grandchild loads a document A, then while it is still delaying the load, it navigates to B.","msgtype":"m.text"},"ts":1490814665000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"delaying the load event is linked to a document, AIUI","msgtype":"m.text"},"ts":1490814812000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: indeed, so what does \"anything in the iframe\" mean?","msgtype":"m.text"},"ts":1490814851000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1490814857000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1490814858000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"just the currently active docs?","msgtype":"m.text"},"ts":1490814866000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"(which means that traversing the history can change \"delaying the load event\" non-monotonically)","msgtype":"m.text"},"ts":1490814920000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"or all docs?","msgtype":"m.text"},"ts":1490814938000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"(which means we care about whether inactive docs are delaying the load event)","msgtype":"m.text"},"ts":1490814970000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"neither of these seem great.","msgtype":"m.text"},"ts":1490814986000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"does chrome have something like about:memory (in FF)","msgtype":"m.text"},"ts":1490816493000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: chrome://system/ I think is the most granuality you get","msgtype":"m.text"},"ts":1490816706000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there any semi-standard set of github labels that folks are using? We're thinking of setting up a triage process of sorts for spec issues, and it'd be good to match other folks' labels.","msgtype":"m.text"},"ts":1490822739000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: Check the CSSWG repo?","msgtype":"m.text"},"ts":1490823465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/w3c/csswg-drafts/labels","msgtype":"m.text"},"ts":1490823489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In particular the \"Needs X\" set of labels","msgtype":"m.text"},"ts":1490823501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Thanks. I also have https://github.com/w3c/webauthn/labels with some priority ones.","msgtype":"m.text"},"ts":1490823650000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: plh (from w3c) has been working on the following list: https://w3c.github.io/spec-labels.html","msgtype":"m.text"},"ts":1490825931000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: fwiw","msgtype":"m.text"},"ts":1490826109000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: That is exactly what I was looking for. Thank you!","msgtype":"m.text"},"ts":1490826895000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: np","msgtype":"m.text"},"ts":1490826958000,"senderName":"tobie","senderId":"tobie@irc"}
]