[
{"content":{"body":"mathiasbynens: www.w3c-test.org:82/html/infrastructure/urls/resolving-urls/query-encoding/","msgtype":"m.text"},"ts":1409025466000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#resolve-a-url","msgtype":"m.text"},"ts":1409025475000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mathiasbynens: https://www.w3.org/Bugs/Public/show_bug.cgi?id=23822","msgtype":"m.text"},"ts":1409025799000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"working with foolip is the best <3","msgtype":"m.text"},"ts":1409045612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Can you remind me of there's a reason were sticking with the old version of jetty we're using for the validator","msgtype":"m.text"},"ts":1409046310000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I love you dearly too, taking a look at the changes now :)","msgtype":"m.text"},"ts":1409046375000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hsivonen: I ask because, I think the version were using is not even getting security updates any longer","msgtype":"m.text"},"ts":1409046394000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or after lunch, *poof*","msgtype":"m.text"},"ts":1409046398000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"i wonder what the state of <legend> is these days","msgtype":"m.text"},"ts":1409048532000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks like display:block doesn't work in blink at least","msgtype":"m.text"},"ts":1409048677000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"     <li><p>The <code>figure</code> element now uses a new element","msgtype":"m.text"},"ts":1409048712000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"     <code>figcaption</code> rather than <code>legend</code> because people","msgtype":"m.text"},"ts":1409048713000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"     want to use HTML long before it reaches W3C Recommendation.</li>","msgtype":"m.text"},"ts":1409048713000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: what is expected to ever change with the state of legend?","msgtype":"m.text"},"ts":1409049319000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: to be stylable like a normal element","msgtype":"m.text"},"ts":1409050127000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: at least when not in a fieldset","msgtype":"m.text"},"ts":1409050147000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: and follow http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#the-fieldset-and-legend-elements when it is","msgtype":"m.text"},"ts":1409050226000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ah ok","msgtype":"m.text"},"ts":1409050273000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it seems we still can't reuse <legend> for a new element","msgtype":"m.text"},"ts":1409050340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and it will probably continue to be P5 because nobody cares about future elements not being able to reuse <legend>","msgtype":"m.text"},"ts":1409050409000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: i've updated http://platform.html5.org/history/","msgtype":"m.text"},"ts":1409057901000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1409058066000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"excellemente","msgtype":"m.text"},"ts":1409058155000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan_: nice updates","msgtype":"m.text"},"ts":1409058225000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm the e.g., http://html5.org/r/1115-1153 stuff doesn't work any more","msgtype":"m.text"},"ts":1409058268000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thx. i didn't include new copies of the spec though","msgtype":"m.text"},"ts":1409058268000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409058282000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah I don't think we need new copies","msgtype":"m.text"},"ts":1409058293000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: sorry, didn't realize anyone was using those links","msgtype":"m.text"},"ts":1409058749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no worries, not sure we really needed them","msgtype":"m.text"},"ts":1409058771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: any updates on the IPv4 stuff?","msgtype":"m.text"},"ts":1409058821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not really","msgtype":"m.text"},"ts":1409058971000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: is Rust attempting to solve this somehow?","msgtype":"m.text"},"ts":1409059022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: when you open a socket with a string for the host Rust’s standard library parses IPv4 and IPv6 addresses, and for things that it considers neither uses the system’s thing for resolving names, which in turn also attempts to parse IPv4 and IPv6 addresses but depending on the system may or may not support exotic v4 formats","msgtype":"m.text"},"ts":1409059199000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1409059230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I looked into various POSIX APIs, it seems hard to force a DNS query and bypass the address parsing","msgtype":"m.text"},"ts":1409059253000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"unless you’re willing to implement DNS yourself, I guess","msgtype":"m.text"},"ts":1409059261000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: not sure if I stumbled onto a bigger problem in https://www.w3.org/Bugs/Public/show_bug.cgi?id=26673","msgtype":"m.text"},"ts":1409059274000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: not really sure how to solve it yet","msgtype":"m.text"},"ts":1409059362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: sigh","msgtype":"m.text"},"ts":1409059365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think the bigger risk is getting some detached documents with non-empty fullscreen elements stacks, more than spurious fullscreenchange","msgtype":"m.text"},"ts":1409059491000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: in any case, I don’t know what’s the right thing to do. There’s a couple of 6 years-old Mozilla bugs about this where people disagree with each other","msgtype":"m.text"},"ts":1409059493000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: pointers?","msgtype":"m.text"},"ts":1409059504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/issues/1104#issuecomment-48917917","msgtype":"m.text"},"ts":1409059559000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk fug, why you break links :(","msgtype":"m.text"},"ts":1409059651000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"._.","msgtype":"m.text"},"ts":1409059659000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i certainly used one revision link in a blog post","msgtype":"m.text"},"ts":1409059673000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i don't remember which one","msgtype":"m.text"},"ts":1409059684000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i should make a private wayback machine","msgtype":"m.text"},"ts":1409059688000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"link rot is becoming too much","msgtype":"m.text"},"ts":1409059695000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: I need some context","msgtype":"m.text"},"ts":1409059721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<MikeSmith> hmm the e.g., http://html5.org/r/1115-1153 stuff doesn't work any more","msgtype":"m.text"},"ts":1409059737000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"<annevk> MikeSmith: sorry, didn't realize anyone was using those links","msgtype":"m.text"},"ts":1409059740000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1409059747000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: ah, right","msgtype":"m.text"},"ts":1409059753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk i assumed you broke it.","msgtype":"m.text"},"ts":1409059754000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"was it someone else?","msgtype":"m.text"},"ts":1409059758000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i need to fight link rot. hmm.","msgtype":"m.text"},"ts":1409059779000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: you don't need a private one, there's \"Save Page Now\" on http://archive.org/web/","msgtype":"m.text"},"ts":1409059782000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"erlehmann: all that broke was a sequence of revisions as the tool no longer supports that","msgtype":"m.text"},"ts":1409059800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk so links to revisions still work?","msgtype":"m.text"},"ts":1409059812000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: yes","msgtype":"m.text"},"ts":1409059816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think i linked to revisions.","msgtype":"m.text"},"ts":1409059818000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i am relieved","msgtype":"m.text"},"ts":1409059824000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: e.g. http://html5.org/r/1115","msgtype":"m.text"},"ts":1409059829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"☺","msgtype":"m.text"},"ts":1409059841000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"linking to a range of revisions doesn't seem useful unless Hixie happened to work on exactly one thing for a long time","msgtype":"m.text"},"ts":1409059845000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"erlehmann: the hyphen thing was a special feature, not really recommended","msgtype":"m.text"},"ts":1409059847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it conflated items into a collection","msgtype":"m.text"},"ts":1409059860000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1409059861000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"foolip: yup","msgtype":"m.text"},"ts":1409059867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does any one of you have a plain text blogging system and can link me to it? i want to add multimedia to http://news.dieweltistgarnichtso.net and have no idea about file structure","msgtype":"m.text"},"ts":1409059917000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":".plan? heh","msgtype":"m.text"},"ts":1409059928000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"s/plain text/filesystem backed/g","msgtype":"m.text"},"ts":1409059931000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"zewt i use single level git repositories with html files in it. hipster news 2 generates feed and overview.","msgtype":"m.text"},"ts":1409060009000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"grr, now firefox is randomly (Not Responding) and i can't tell why","msgtype":"m.text"},"ts":1409060046000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"foolip: so for fullscreen.spec.whatwg.org/#dom-document-exitfullscreen you basically want that during the iteration to dispatch the events we check if the situation with regards to the amount of elements on the fullscreen element stack has changed?","msgtype":"m.text"},"ts":1409060099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: and if it has changed, we fully exit fullscreen?","msgtype":"m.text"},"ts":1409060116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: liking to a range of revisions is probably also useful if you're trying to document what things changed during a certain period of time -- which is exactly what http://platform.html5.org/history/ is for. But I guess that's a corner case that not many other people would want to do","msgtype":"m.text"},"ts":1409061546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"regardless, I think we could reconstruct it with links to the github html-mirror change history instead","msgtype":"m.text"},"ts":1409061590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if we really wanted to","msgtype":"m.text"},"ts":1409061605000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(that is, construct alternative links to replace the ones we had in http://platform.html5.org/history/ to the html5.org generated changelogs that we removed after they broke)","msgtype":"m.text"},"ts":1409061692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: might be more useful to have individual links to commits instead of month or year-long range of commits","msgtype":"m.text"},"ts":1409061920000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"JakeA: do you have a sense of how close we are to updating the spec language for the expected Cache/CacheStorage changes?","msgtype":"m.text"},"ts":1409062010000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan_: yeah that would definitely be a lot more useful","msgtype":"m.text"},"ts":1409062120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: We're unblocked on streams stuff, just need to get consensus on the API. I'm getting a talk together for jsconf so that's got my focus. I'll see if slightlyoff is free to take over dragging that to consensus for the next couple of weeks.","msgtype":"m.text"},"ts":1409062159000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Don't want to hold up the process, it's been held up enough","msgtype":"m.text"},"ts":1409062176000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, ok...  thanks for the update... I think I will implement mostly whats currently spec'd with an eye towards the expected changes then","msgtype":"m.text"},"ts":1409062235000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't expect the querying stuff to change, just .add vs .addAll, .delete vs .deleteAll","msgtype":"m.text"},"ts":1409062281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess i thought there was more consensus on the rest of the spec changes, but I probably skimmed some bits in the thread","msgtype":"m.text"},"ts":1409062306000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: great, thanks... good luck with the jsconf talk!","msgtype":"m.text"},"ts":1409062320000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: wanderview: I thought we had consensus on the API?","msgtype":"m.text"},"ts":1409064611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: wanderview: short method names directly on Response/Request, plus a bodyUsed property","msgtype":"m.text"},"ts":1409064637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Talking about the cache API","msgtype":"m.text"},"ts":1409064649000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: wanderview: I guess my plan was to make that change today, might have to wait a bit","msgtype":"m.text"},"ts":1409064662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think JakeA was saying other cache API questions beyond the streams issue","msgtype":"m.text"},"ts":1409064678000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I'm happy with the Request/Response stuff","msgtype":"m.text"},"ts":1409064684000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok, that's what I get for only reading part of your exchange","msgtype":"m.text"},"ts":1409064702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: What's the story around debugging serviceworker in Firefox?","msgtype":"m.text"},"ts":1409065812000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: currently not great as far as I know... I believe work is in progress to allow debugging workers at all :-\\","msgtype":"m.text"},"ts":1409065870000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"let me see if I can find the bug number","msgtype":"m.text"},"ts":1409065875000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1003097","msgtype":"m.text"},"ts":1409065901000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: and here is our bug to support ServiceWorkers in devtools:  https://bugzilla.mozilla.org/show_bug.cgi?id=943220","msgtype":"m.text"},"ts":1409065970000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: asking what the plans/timeline for that work is... we definitely want to support it","msgtype":"m.text"},"ts":1409066084000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Cool! Making sure I represent the state-of-things correctly in this jsconf talk. Is there any way to get console logs out of a SW in the interim?","msgtype":"m.text"},"ts":1409066104000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: console.log is supported in gecko workers, yes","msgtype":"m.text"},"ts":1409066131000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Where is it exposed?","msgtype":"m.text"},"ts":1409066148000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: uh... I think self... let me check","msgtype":"m.text"},"ts":1409066164000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: type console.log(123) to the first textarea. http://mozilla.pettay.fi/workerconsole/","msgtype":"m.text"},"ts":1409066430000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the code will be executed in a worker","msgtype":"m.text"},"ts":1409066440000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and log goes to browser console","msgtype":"m.text"},"ts":1409066457000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(ctrl+shift+k)","msgtype":"m.text"},"ts":1409066474000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/browser/web/","msgtype":"m.text"},"ts":1409066489000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: thanks!  I was trying to verify in my mochitest, but I guess we suppress console.log there","msgtype":"m.text"},"ts":1409066548000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bookmarks smaug's workerconsole...","msgtype":"m.emote"},"ts":1409066582000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Wonder if that works for serviceworker (since they don't have an owner window)","msgtype":"m.text"},"ts":1409066609000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah, no idea","msgtype":"m.text"},"ts":1409066627000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"knows next to nothing about service workers","msgtype":"m.emote"},"ts":1409066637000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, Blink has odd console object","msgtype":"m.text"},"ts":1409066660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"[object WorkerConsole]","msgtype":"m.text"},"ts":1409066671000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: hmm, thats a good point... I was actually assuming it would work since SW's extend workers","msgtype":"m.text"},"ts":1409066733000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: yea, baku confirms that console.log() won't work from a SW because of the missing window...  sorry for my confusion","msgtype":"m.text"},"ts":1409066861000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: want to file a bug on that?","msgtype":"m.text"},"ts":1409066882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: no debugging would be a major pita","msgtype":"m.text"},"ts":1409066890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: baku is doing that now","msgtype":"m.text"},"ts":1409066891000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1409066894000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1409066897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: No worries! Is there any way to get those logs in the meantime, even if they go down to the command line?","msgtype":"m.text"},"ts":1409066911000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"dump()?","msgtype":"m.text"},"ts":1409067007000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Probably not","msgtype":"m.text"},"ts":1409067011000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: can I get back to you tomorrow?  I feel like we need to get our plan straight on this... when is your talk?","msgtype":"m.text"},"ts":1409067173000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in two week, so no major rush. Want to get as many demos working in Firefox as possible though","msgtype":"m.text"},"ts":1409067230000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"could you proxy through a shared worker as a workaround?","msgtype":"m.text"},"ts":1409067240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JakeA: ok, thanks!","msgtype":"m.text"},"ts":1409067245000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zewt: I think shared workers have the same issue. Could send stuff back to the page via a message port, I think that's landing soon in Firefox","msgtype":"m.text"},"ts":1409067384000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right, you'd have to open the shared worker from a real document to receive them","msgtype":"m.text"},"ts":1409067401000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wanderview: will update https://jakearchibald.github.io/isserviceworkerready/ in time for the talk too","msgtype":"m.text"},"ts":1409067410000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks... we have an internal meeting tomorrow morning... going to discuss it there","msgtype":"m.text"},"ts":1409067549000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zewt: good idea","msgtype":"m.text"},"ts":1409067778000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"i'd think that \"service workers\" would just be a type of shared worker, so you could connect to them like any shared worker","msgtype":"m.text"},"ts":1409067968000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"like a shared worker url that the browser also knows how to start up on its own","msgtype":"m.text"},"ts":1409068046000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hello! Is there anybody, who could I speak to?","msgtype":"m.text"},"ts":1409069439000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"Could I ask about my new meta extension?","msgtype":"m.text"},"ts":1409069533000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"You can","msgtype":"m.text"},"ts":1409069578000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I want to propose meta extension with keyword `version`","msgtype":"m.text"},"ts":1409069646000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"Specification: https://github.com/dvorapa/meta-version","msgtype":"m.text"},"ts":1409069653000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"dvorapa: if you're asking for a wiki account I need your desired username and email","msgtype":"m.text"},"ts":1409069883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay,username: dvorapa","msgtype":"m.text"},"ts":1409069923000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"email: dvorapa⊙sc","msgtype":"m.text"},"ts":1409069932000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"dvorapa: \"A randomly generated password for Dvorapa has been sent to dvorapa⊙sc It can be changed on the change password page upon logging in.\"","msgtype":"m.text"},"ts":1409069990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thank you.","msgtype":"m.text"},"ts":1409070110000,"senderName":"dvorapa","senderId":"dvorapa@irc"},
{"content":{"body":"marcosc_: why does everyone want these separate WakeLock objects... why do we need to be more programmer-footgun-protective than native platforms are.","msgtype":"m.text"},"ts":1409074633000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"People have different expectations from browsing to a website vs running a native app?","msgtype":"m.text"},"ts":1409074714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this isn't even on that level","msgtype":"m.text"},"ts":1409074757000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's \"what if multiple pieces of code within the same website want a wake lock\"","msgtype":"m.text"},"ts":1409074766000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in native apps they all coordinate to share a per-app lock; if different parts of the code need to coordinate, then they write code to do so","msgtype":"m.text"},"ts":1409074793000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"whereas sicking and others think it's important that different parts of the code each get their own lock","msgtype":"m.text"},"ts":1409074819000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i don't feel strongly. But the editors claim that they care about that use case, but the proposed API doesn't support it","msgtype":"m.text"},"ts":1409074937000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh, did not realize...","msgtype":"m.text"},"ts":1409074955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but it does seem like unless we specify a standard for how to do this coordination, then the JS world will have to come up with their own standard for it. And not just one standard per library, but rather one \"the\" standard","msgtype":"m.text"},"ts":1409075052000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"mmmm..","msgtype":"m.text"},"ts":1409075096000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"maybe it could work for everyone to do their own solution, if that solution is based on callbacks to the embedder","msgtype":"m.text"},"ts":1409075114000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"either way, it's a relatively small difference in API complexity","msgtype":"m.text"},"ts":1409075156000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"either \"screen wakelock\" is a property on the document, or you can instantiate it using \"new\"","msgtype":"m.text"},"ts":1409075197000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"in both solutions the actual API on the lock will be the same","msgtype":"m.text"},"ts":1409075222000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"can someone work out what Axel means in https://www.w3.org/Bugs/Public/show_bug.cgi?id=26669 and add a clarifying comment on the bug?","msgtype":"m.text"},"ts":1409075676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not \"the\" standard, just, if you want to use libraries that use wakelocks, they have to communicate that somehow","msgtype":"m.text"},"ts":1409076575000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"anyone have a better term for \"media source object\" that has neither the words \"media source\", \"media stream\", \"file\", \"media resource\", \"media data\", or \"blob\" in it?","msgtype":"m.text"},"ts":1409076660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(meaning something that is either a MediaSource, MediaStream, File, or Blob)","msgtype":"m.text"},"ts":1409076674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe \"media provider object\"","msgtype":"m.text"},"ts":1409076715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"too bad interfaces aren't a thing","msgtype":"m.text"},"ts":1409076812000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"even if it was an interface it'd still need a name :-)","msgtype":"m.text"},"ts":1409076831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or I guess those don't actually all implement the same interface anyway","msgtype":"m.text"},"ts":1409076833000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"Hixie: I guess he's saying something like <form autofocus=\"foo\"><input id=\"foo\"> would have been a better model","msgtype":"m.text"},"ts":1409076874000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that's a guess","msgtype":"m.text"},"ts":1409076882000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: certainly less questions about how to resolve conflicts than with autofocus=yes on individual elements","msgtype":"m.text"},"ts":1409076932000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"SamB__: Arguably an equivalent number of questions <form autofocus=foo><input id=foo><input id=foo>","msgtype":"m.text"},"ts":1409077000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"not to mention <form autofocus=foo></form><form autofocus=bar></form><input id=foo><input id=bar>","msgtype":"m.text"},"ts":1409077031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: thanks. commented on the bug.","msgtype":"m.text"},"ts":1409077043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: That question is nothing new, though","msgtype":"m.text"},"ts":1409077064000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"Hixie: hmm, okay, that's a better example ;-)","msgtype":"m.text"},"ts":1409077093000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"(\"not to mention\" is such a dumb phrase)","msgtype":"m.text"},"ts":1409077415000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not to mention \"to be honest\"","msgtype":"m.text"},"ts":1409077608000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"MikeSmith: the reason to use an old version of Jetty is that I haven't had the time to update Jetty","msgtype":"m.text"},"ts":1409078234000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: we should keep updating Jetty","msgtype":"m.text"},"ts":1409078242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: fortunately, the security bugs *usually* don't affect the way we use Jetty","msgtype":"m.text"},"ts":1409078264000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tantek: \"to be honest\" is slightly better in that it implies that one might have tried to conceal or sugar coat the statement but has decided not to","msgtype":"m.text"},"ts":1409079087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, good point. I often hear \"not to mention\" abbreviated these days in speech as \"Sooooo… \" preceding a statement.","msgtype":"m.text"},"ts":1409079134000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1409079140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess \"not to mention\" only makes sense when followed by one or more classes of things that you aren't listing individually","msgtype":"m.text"},"ts":1409079239000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"Hey https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/07v_yMErc_A/WcyKGN1A2y0J","msgtype":"m.text"},"ts":1409089726000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Nice!","msgtype":"m.text"},"ts":1409089727000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"eh, wouldn't get your hopes up","msgtype":"m.text"},"ts":1409089773000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the two replies so far seem pretty conservative about adding it to the platform as a native feature, and probably not even blink-in-js. But, it would be fun to work on, so here's hopin :3","msgtype":"m.text"},"ts":1409089858000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: If you're thinking blink-in-js, then start with a polyfill.","msgtype":"m.text"},"ts":1409089922000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"blink in js?","msgtype":"m.text"},"ts":1409089933000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: Implementing bits of blink in JS.","msgtype":"m.text"},"ts":1409089968000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"it might come to that, but the features I've implemented so far have been smaller in C++ than the mix of C++ boilerplate + private scripts","msgtype":"m.text"},"ts":1409090020000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"e.g. lets say we didn't have 'window.atob()'; take a polyfill, ship it with the browser, but with appropriate security sprinkles.","msgtype":"m.text"},"ts":1409090022000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"oh you mean like a browser extension?","msgtype":"m.text"},"ts":1409090071000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: \"like\" as in: same security concerns for JS code needing to run in what we call isolated worlds. But from a browser user's perspective it's a feature that ships with the browser and happens to be implemented in C++ rather than JS","msgtype":"m.text"},"ts":1409090141000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"https://docs.google.com/presentation/d/1XvZdAF29Fgn19GCjDhHhlsECJAfOR49tpUFWrbtQAwU/edit#slide=id.g3840fe06e_00","msgtype":"m.text"},"ts":1409090160000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I think, if we do end up getting it to support custom data and custom sort predicates, then a Blink-in-JS implementation is essentially impossible :(","msgtype":"m.text"},"ts":1409090184000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"because of those security concerns","msgtype":"m.text"},"ts":1409090191000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"custom sort predicates?","msgtype":"m.text"},"ts":1409090282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(custom data is already in the spec)","msgtype":"m.text"},"ts":1409090287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal how is your polyfill going? :)","msgtype":"m.text"},"ts":1409090296000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: Further than when last I talked about it in here. When I have free time next, I would like to start adding the more complex sorting algorithms.","msgtype":"m.text"},"ts":1409090388000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"erlehmann: http://sandbox.thewikies.com/table-sorting/ is up to date","msgtype":"m.text"},"ts":1409090401000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: similar to Array.prototype.sort","msgtype":"m.text"},"ts":1409090502000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"letting the script assign a callback to the column header telling it how to sort its keys","msgtype":"m.text"},"ts":1409090519000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"er, sort its data","msgtype":"m.text"},"ts":1409090523000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i don't see how that could work. see the e-mails i sent at the time for a discussion of why.","msgtype":"m.text"},"ts":1409090541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JonathanNeal date sorting could be interesting","msgtype":"m.text"},"ts":1409090548000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"(but basically, it's because the first callback could cause a navigation, move the table to another document, put each <td> in a different iframe, and who the heck knows what else)","msgtype":"m.text"},"ts":1409090579000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure it could, but who cares","msgtype":"m.text"},"ts":1409090618000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if a user wants to break their own site, what of it :p","msgtype":"m.text"},"ts":1409090627000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not about breaking the site","msgtype":"m.text"},"ts":1409090638000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's about breaking the browser","msgtype":"m.text"},"ts":1409090644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also I'm not sure the <data value=\"someString\"> really counts as custom data, it's a custom string","msgtype":"m.text"},"ts":1409090761000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not as flexible as say, a JSObject","msgtype":"m.text"},"ts":1409090782000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"how would you sort a JS Object?","msgtype":"m.text"},"ts":1409090802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with a custom predicate!","msgtype":"m.text"},"ts":1409090807000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"And before someone suggests it: evaluating a short snippet of script in a completely isolated execution context turns out to be something browsers are inefficient at, at the moment","msgtype":"m.text"},"ts":1409090812000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"then it's a custom predicate, not custom data.","msgtype":"m.text"},"ts":1409090816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well I mean to do anything meaningful with it you'd need both","msgtype":"m.text"},"ts":1409090835000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jsbell: it also doesn't work when what you have to pass the isolated script is a pair of DOM nodes. :-)","msgtype":"m.text"},"ts":1409090836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jsbell: that's no surprise","msgtype":"m.text"},"ts":1409090848000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"caitp: you can already assign whatever you want to an element","msgtype":"m.text"},"ts":1409090856000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jsbell: building those contexts tends to be expensive","msgtype":"m.text"},"ts":1409090860000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"caitp: myElement._myCustomData = {}","msgtype":"m.text"},"ts":1409090862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or whateer","msgtype":"m.text"},"ts":1409090868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure, but the sorting algorithm won't consider it when sorting","msgtype":"m.text"},"ts":1409090881000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: Yep. (But someone will suggest passing a serialization or something, which doesn't help)","msgtype":"m.text"},"ts":1409090905000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"caitp: you already said you need a custom predicate","msgtype":"m.text"},"ts":1409090911000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB__: Yep. We'd like that for e.g. custom indexers in Indexed DB, but the engines aren't optimized for it (yet)","msgtype":"m.text"},"ts":1409090933000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I'm saying, without a custom predicate, \"custom data\" eg attached to a node, wouldn't be much good","msgtype":"m.text"},"ts":1409090943000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"because it wouldn't be used","msgtype":"m.text"},"ts":1409090946000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"processes, threads, JS sandboxes ...","msgtype":"m.text"},"ts":1409090953000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"And then there's pulling in libraries to do anything useful... anyway, non-starter right now","msgtype":"m.text"},"ts":1409090955000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"not sure about lua though","msgtype":"m.text"},"ts":1409090959000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"yeah, the performance and security concerns of a custom predicate are valid concerns","msgtype":"m.text"},"ts":1409091010000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jsbell: I wonder if it would be potentially faster to recycle an existing context than to make a whole new one?","msgtype":"m.text"},"ts":1409091013000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"caitp: that's what i said before","msgtype":"m.text"},"ts":1409091023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am agreeing with you","msgtype":"m.text"},"ts":1409091030000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok good. so why are we still talking about custom data","msgtype":"m.text"},"ts":1409091051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but at the same time, without the ability to do that, people might very well not find it worth using the feature","msgtype":"m.text"},"ts":1409091063000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and would resort to using jQuery-plugin-foo instead","msgtype":"m.text"},"ts":1409091074000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the spec allows for a custom sorter for exactly this reason","msgtype":"m.text"},"ts":1409091104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hey, good news everyone! I've figured out a way to bypass the spec's pop-up blocker... and chrome implements the spec","msgtype":"m.text"},"ts":1409091113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where exactly does the spec allow for a custom sorter? it must not be in the tables document of the multipage spec","msgtype":"m.text"},"ts":1409091189000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"SamB__: Dunno. I suspect competition on speed and power vs. things like ES6 modules (and blink in JS...) will drive down the cost of contexts","msgtype":"m.text"},"ts":1409091240000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"<table onsort=\"...run whatever algorithm you want to sort the table here...\">","msgtype":"m.text"},"ts":1409091252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, I see.","msgtype":"m.text"},"ts":1409091262000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it lets the browser handle all the \"table changed\" logic, \"this is the sorted column\" logic, etc","msgtype":"m.text"},"ts":1409091289000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and just fires the event when the table needs sorting","msgtype":"m.text"},"ts":1409091297000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's two ways to use it, basically","msgtype":"m.text"},"ts":1409091319000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you're saying they would sort the table manually and then prevent default to stop the default logic","msgtype":"m.text"},"ts":1409091319000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you can either just actually sort the table, then return false","msgtype":"m.text"},"ts":1409091325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or you can set the custom sort data to the rows in the order you want, then return true","msgtype":"m.text"},"ts":1409091341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean that could work, but that's a lot more complicated than a predicate","msgtype":"m.text"},"ts":1409091411000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so it seems unlikely most people would use it","msgtype":"m.text"},"ts":1409091426000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's actually only a very few lines more complicated","msgtype":"m.text"},"ts":1409091432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably just a matter of putting the rows in an array, sorting the array using a custom predicate, and then reappending the rows in the order you care about","msgtype":"m.text"},"ts":1409091474000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when you have your own function you don't have to worry about all the edge cases the algorithm normally worries about","msgtype":"m.text"},"ts":1409091488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like multiple <tbody>s, or row-spanning cells, or all that nonsense","msgtype":"m.text"},"ts":1409091505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some ability to run pure JS functions cheaply would be useful in various places in the platform","msgtype":"m.text"},"ts":1409091989000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"vertex shaders for CSS filters","msgtype":"m.text"},"ts":1409092016000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"various extensible layout things","msgtype":"m.text"},"ts":1409092031000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"audio processing","msgtype":"m.text"},"ts":1409092050000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I think people will demand the ability to sort tables by their own method.","msgtype":"m.text"},"ts":1409093133000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"they certainly will","msgtype":"m.text"},"ts":1409093445000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyway JonathanNeal I'm probably not going to get a green light on that intent-to-implement thread, but I'm happy to help work on the polyfill if you want some assistance with it","msgtype":"m.text"},"ts":1409094159000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: yes, once it’s in slightly better shape I need to put it on GitHub.","msgtype":"m.text"},"ts":1409096688000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"}
]