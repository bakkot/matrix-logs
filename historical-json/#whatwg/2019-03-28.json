[
{"content":{"body":"devsnek: the \"forgiving\" algorithms are essentially atob() and btoa(). Because there are packages that implement those things, I'd assume Node.js is diff","msgtype":"m.text"},"ts":1553732100000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: to be fair https://git.coolaj86.com/coolaj86/atob.js/src/branch/master/node-atob.js","msgtype":"m.text"},"ts":1553732249000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"this is the most popular polyfill","msgtype":"m.text"},"ts":1553732262000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"so i'm thinking its probably safe","msgtype":"m.text"},"ts":1553732304000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: hah","msgtype":"m.text"},"ts":1553732307000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"a little unicode never hurt anyone","msgtype":"m.text"},"ts":1553732324000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Why does <script> require contenteditable for `display: block` to work? Hrm.","msgtype":"m.text"},"ts":1553788004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It doesn't? I just loaded up a `<body><script style=\"display: block\">foo bar</script>` test page and it showed the script just fine.","msgtype":"m.text"},"ts":1553788684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you're right, I must have been doing something else wrong","msgtype":"m.text"},"ts":1553788728000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Possibly you didn't have a body-forcer in your test, so the <script> was in <head>, which is still display:none?","msgtype":"m.text"},"ts":1553788763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah yeah probably that","msgtype":"m.text"},"ts":1553788981000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I dont recall conversations but I am relatively sure they exist and I can't find anything on this so will try asking for any pointers to get me started here... We have elements which have, basically, native shadow roots which then can't have user defined ones and so we have basically a list of tags that will not throw if you try to add a shadow root on them and then say 'mostly anything that looks like a custom element too'","msgtype":"m.text"},"ts":1553798523000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I guess that prolly runs the script Domenic if you paste it? Sounds like fun","msgtype":"m.text"},"ts":1553798551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nah child text content change doesn't re-execute script I am pretty sure. Only on first being-connected.","msgtype":"m.text"},"ts":1553798583000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bkardell: what is the question?","msgtype":"m.text"},"ts":1553798591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, sorry I am getting to it :)","msgtype":"m.text"},"ts":1553798599000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Domenic: it does in Fx if it’s empty","msgtype":"m.text"},"ts":1553798609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm yeah I do kinda remember something about a transition from empty string to not","msgtype":"m.text"},"ts":1553798626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so, mathml elements are basically unspecified and we have a lot of things to work out there but... should some of them maybe allow shadowroots and wind up in our whitelist or... that list is pretty short, idk","msgtype":"m.text"},"ts":1553798652000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"and then, these again wind up in a weird place in histrory because it's possible the native implementation might want a shadow root for some of them, but maybe we need to polyfill it too :(","msgtype":"m.text"},"ts":1553798724000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: I think for MathML we mostly want to work towards less maintenance, so no…","msgtype":"m.text"},"ts":1553798731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: esp as long as it’s unclear what the primitives are","msgtype":"m.text"},"ts":1553798766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is what we are working on","msgtype":"m.text"},"ts":1553798788000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: this is also why most HTML elements do not work","msgtype":"m.text"},"ts":1553798795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like... my first instinct, still knowing very little, is that if I was implementing natively one of these elements I think I would give it a shadow dom because currently they basically replace one set of elements with another in the polyflls, but they are both math ones - one is just a shorthand","msgtype":"m.text"},"ts":1553798873000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: if something really boils down to span/div with a different style, then maybe, but even then it’s work to make it work","msgtype":"m.text"},"ts":1553798905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you explain with a few more words? sorry I didn't follow","msgtype":"m.text"},"ts":1553798955000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"If a math element has a CSS-only implementation in all engines, then maybe, but even that would come at a cost that doesn’t feel clearly justified","msgtype":"m.text"},"ts":1553799031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: got it, thanks","msgtype":"m.text"},"ts":1553799778000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"annevk: do you want review on https://github.com/whatwg/html/pull/4437 or are you still noodling over whether it's safe? (remove compound microtasks)","msgtype":"m.text"},"ts":1553807616000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: pretty sure that is safe and good to go","msgtype":"m.text"},"ts":1553808045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: esp with nobody saying it is impl","msgtype":"m.text"},"ts":1553808065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the main question is really about the remainder, post removal of that","msgtype":"m.text"},"ts":1553808102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotcha","msgtype":"m.text"},"ts":1553808110000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: also, that default value paragraph is in a w-nodev block","msgtype":"m.text"},"ts":1553808387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: iirc","msgtype":"m.text"},"ts":1553808392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep, I'm saying that's surprising, and we should consider either deleting it (since I think it is not very valuable for implementers or tools) or moving it and fixing it","msgtype":"m.text"},"ts":1553808427000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"K","msgtype":"m.text"},"ts":1553808483000,"senderName":"annevk","senderId":"annevk@irc"}
]