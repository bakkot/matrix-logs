[
{"content":{"body":"Hixie - this kind of problem has made me consider using CSS for such things, such that the user could always override such dumb behavior with their user style sheet.","msgtype":"m.text"},"ts":1328918640000,"senderName":"tantek_","senderId":"tantek_@irc"},
{"content":{"body":"(zewt's autocomplete=off frustrations)","msgtype":"m.text"},"ts":1328918700000,"senderName":"tantek_","senderId":"tantek_@irc"},
{"content":{"body":"Sorry for being OT, is there a channel for WebSockets?","msgtype":"m.text"},"ts":1328919120000,"senderName":"astro73","senderId":"astro73@irc"},
{"content":{"body":"astro73: this is on-topic if you don't mind people being snarky about it at the same time :-)","msgtype":"m.text"},"ts":1328919180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"astro73: #html5 might be better if you have authoring help (as opposed to wanting to discuss the spec itself, where this channel is very much the right one)","msgtype":"m.text"},"ts":1328919181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm actually looking for software supporting it","msgtype":"m.text"},"ts":1328919240000,"senderName":"astro73","senderId":"astro73@irc"},
{"content":{"body":"client or server?","msgtype":"m.text"},"ts":1328919241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a reverse proxy capable of: SSL unwrapping, dispatch by URL, and can handle WebSockets","msgtype":"m.text"},"ts":1328919300000,"senderName":"astro73","senderId":"astro73@irc"},
{"content":{"body":"ah, dunno then","msgtype":"m.text"},"ts":1328919301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I know that nginx and haproxy can't do dispatch and websocket at the same time. mod_proxy and apsis's pound can't handle ws (although there was an article once that said pound could)","msgtype":"m.text"},"ts":1328919540000,"senderName":"astro73","senderId":"astro73@irc"},
{"content":{"body":"but https://github.com/nodejitsu/node-http-proxy looks promising","msgtype":"m.text"},"ts":1328919900000,"senderName":"astro73","senderId":"astro73@irc"},
{"content":{"body":"in indexedDB, everything is even driven, so, var request = window.indxedDB.open('foo') ; request.onsuccess = function(){alert('do stuff')}.  One thing I've never understood is what the timing is like of calling open(), which just returns a 'request' and then setting the onsuccess handler afterwards.  at no point do I see where the opening of the DB is triggered.  i think i'm missing something fundamental about how indxedDB events are ","msgtype":"m.text"},"ts":1328919901000,"senderName":"crankharder","senderId":"crankharder@irc"},
{"content":{"body":"example: https://developer.mozilla.org/en/IndexedDB/IDBFactory#Example","msgtype":"m.text"},"ts":1328919902000,"senderName":"crankharder","senderId":"crankharder@irc"},
{"content":{"body":"Events can't fire while your code is running - they need to wait for you to yield back to the event loop.  So, as long as you don't put the \"request.onsuccess = ...\" line in a setTimeout or something, you'll be fine.","msgtype":"m.text"},"ts":1328920080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The listeners will be wired up before any events fire, and the events will go off automatically sometime after you yield to the event loop.","msgtype":"m.text"},"ts":1328920081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so the event wont fire till after i set onsuccess then?","msgtype":"m.text"},"ts":1328920140000,"senderName":"crankharder","senderId":"crankharder@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1328920141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It won't fire until your currently-executing function is completely done, actually.","msgtype":"m.text"},"ts":1328920142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok that makes sense","msgtype":"m.text"},"ts":1328920200000,"senderName":"crankharder","senderId":"crankharder@irc"},
{"content":{"body":"http://arstechnica.com/microsoft/news/2012/02/no-third-party-code-on-the-windows-on-arm-desktop-means-no-plugins-for-internet-explorer.ars <-- No Flash on Windows on ARM, period. YES!","msgtype":"m.text"},"ts":1328935020000,"senderName":"llrcombs","senderId":"llrcombs@irc"},
{"content":{"body":"So, at risk of causing alarm and confusion, I made a html5lib release","msgtype":"m.text"},"ts":1328953560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I even fixed a bug!","msgtype":"m.text"},"ts":1328953561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are a couple of remaining issues in the tests though, so I didn't call it 1.0","msgtype":"m.text"},"ts":1328953562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I am quite tempted to swicth the repo to git so that the whole thing can be mirrored on github since people seem to assume that anything that's not on github doesn't exist these days","msgtype":"m.text"},"ts":1328953680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Google code still has better tools e.g. side-by-side diff views, which might be important if we ever used them)","msgtype":"m.text"},"ts":1328953800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(It's odd that a decentralised VCS has by far the most centralised community of any VCS)","msgtype":"m.text"},"ts":1328956860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'm not sure it's really the VCSs that have a community though)","msgtype":"m.text"},"ts":1328957460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if we have </li</ul>, we start from http://www.w3.org/TR/html5/tokenization.html#end-tag-open-state , 'l' is a latin small letter, so we move on to \"tag name state\", we follow that and consume the  i and the < as part of the tag name, but then there's a /, and that apparently means \"Switch to the self-closing start tag state.\"","msgtype":"m.text"},"ts":1328959320000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"isn't this wrong considering that </li is already an end tag?","msgtype":"m.text"},"ts":1328959380000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I think it's just the state name that's misleading","msgtype":"m.text"},"ts":1328959620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Maybe \"self-closing tag state\" would be clearer)","msgtype":"m.text"},"ts":1328959680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so in this case if I go to the \"self-closing start tag state\" I see 3 options, if there's a > I will emit what I got so far (as an end tag), if not I keep moving on","msgtype":"m.text"},"ts":1328959740000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"so in this case I should go back and keep consuming till ul, and then emit 'li</ul', right?","msgtype":"m.text"},"ts":1328959800000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"\"self-closing tag state\" is a bit better but afaiu there's nothing self-closing here","msgtype":"m.text"},"ts":1328959801000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"\"self-closing start tag or bogus end tag that looks quite like a self-closing start tag state\"","msgtype":"m.text"},"ts":1328959860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where \"here\" would be e.g. </li/> or </li</>ul>","msgtype":"m.text"},"ts":1328959861000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"From self-closing start tag state, it says to reconsume the \"/\" in before attribute name state","msgtype":"m.text"},"ts":1328959920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"if it's not followed by >","msgtype":"m.text"},"ts":1328959921000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Oops, not \"/\"","msgtype":"m.text"},"ts":1328959980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In self-closing start tag state it will see the \"u\" next, and reconsume that in before attribute name state","msgtype":"m.text"},"ts":1328959981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which will make it create an attribute named \"ul\"","msgtype":"m.text"},"ts":1328960040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so with </li</ul> I should emit a closing 'li</' and discard an 'ul' attribute, right?","msgtype":"m.text"},"ts":1328960100000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"The tag name will be \"li<\", because the tag name state does not append the \"/\" to the tag name","msgtype":"m.text"},"ts":1328960101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1328960160000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"(\"l\" appends, \"i\" appends, \"<\" appends, \"/\" causes switch to self-closing state, \"u\" gets reconsumed in before attribute name state, \"u\" starts attribute name, \"l\" appends, \">\" ends tag, I think)","msgtype":"m.text"},"ts":1328960220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1328960280000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Really? Something must be wrong","msgtype":"m.text"},"ts":1328960281000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"HTML should never make sense :-p","msgtype":"m.text"},"ts":1328960282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/makes sense/sounds like a correct interpretation of the standard/","msgtype":"m.text"},"ts":1328960283000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Matches the output of http://livedom.validator.nu/?%3C!DOCTYPE%20html%3E%0D%0A%3Cli%3C%2Ful%3E too","msgtype":"m.text"},"ts":1328960340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what's \"LIU00003C\" ?","msgtype":"m.text"},"ts":1328960341000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"U00003C == <?","msgtype":"m.text"},"ts":1328960400000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1328960401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why that weird notation?","msgtype":"m.text"},"ts":1328960402000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"document.createElement(\"li<\") is not allowed","msgtype":"m.text"},"ts":1328960403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and that DOM viewer uses createElement)","msgtype":"m.text"},"ts":1328960460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why not LI\\x3C or LI\\u003c?","msgtype":"m.text"},"ts":1328960461000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"You probably can't have \"\\\" either","msgtype":"m.text"},"ts":1328960462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does createElement even recognize U00003C as <?","msgtype":"m.text"},"ts":1328960463000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"actually \"LI\\x3C\" should be exactly the same as \"LI<\"","msgtype":"m.text"},"ts":1328960520000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"No, it's just a relatively unambiguous way to represent the name without making createElement throw exceptions","msgtype":"m.text"},"ts":1328960580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Also it matches http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#coercing-an-html-dom-into-an-infoset )","msgtype":"m.text"},"ts":1328960581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's the first time I see this notation","msgtype":"m.text"},"ts":1328960700000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I don't know if anyone in the world other than hsivonen uses that notation","msgtype":"m.text"},"ts":1328960820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Five years, wow","msgtype":"m.text"},"ts":1328962380000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"People, I might have to stop the IRC logging thingy","msgtype":"m.text"},"ts":1328962440000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"no no","msgtype":"m.text"},"ts":1328962441000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"We're moving away from this office, and I don't know if I can hook up my silly server somewhere else","msgtype":"m.text"},"ts":1328962500000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"I'll buy you a beer if you keep logging IRC.","msgtype":"m.text"},"ts":1328962501000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Beer won't pay the rent here, unfortunately :)","msgtype":"m.text"},"ts":1328962502000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"How about buying a server? :-)","msgtype":"m.text"},"ts":1328962560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"are you sure? Just make the landlord to drink it  (and perhaps few other beers)","msgtype":"m.text"},"ts":1328962561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'll probably move my domain to a static place, so the urls will just keep on working","msgtype":"m.text"},"ts":1328962562000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: what is the schedule for the move?","msgtype":"m.text"},"ts":1328962563000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Somewhere between April and July","msgtype":"m.text"},"ts":1328962620000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"would be great to get replacement for your logging before that","msgtype":"m.text"},"ts":1328962621000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1328962622000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, perhaps Mozilla could do the logging","msgtype":"m.text"},"ts":1328962623000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Perhaps we can transfer the internet account as well, then it's not a problem and I'll just hook it up in the new place","msgtype":"m.text"},"ts":1328962624000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"But at least that will take some days off :)","msgtype":"m.text"},"ts":1328962680000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"</dramaqueen>","msgtype":"m.text"},"ts":1328962740000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"krijn: If you're unable to keep running it on your server, would it be feasible to move the data and code to someone else's server?","msgtype":"m.text"},"ts":1328962920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Of course","msgtype":"m.text"},"ts":1328962921000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"I'll do that anyway","msgtype":"m.text"},"ts":1328962980000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"So the data won't be lost","msgtype":"m.text"},"ts":1328962981000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"But the logging itself, don't know","msgtype":"m.text"},"ts":1328962982000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"(Can't run IRC software on my normal server, that's why I'm running kh.nl on my home machine)","msgtype":"m.text"},"ts":1328963220000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"How flexible is the display software? Can it easily be changed to parse logs in a slightly different format? Cause then you could run an existing irc bot, and use its logs as input","msgtype":"m.text"},"ts":1328963400000,"senderName":"svl","senderId":"svl@irc"},
{"content":{"body":"It only requires some naming conventions now","msgtype":"m.text"},"ts":1328963460000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"A log file for each channel for each day, only requiring line endings in the file itself","msgtype":"m.text"},"ts":1328963520000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Sounds like that should be a workable solution, then. Or is the limitation to running IRC software on your normal server not technical, but rather that your hosting provider doesn't allow it?","msgtype":"m.text"},"ts":1328963640000,"senderName":"svl","senderId":"svl@irc"},
{"content":{"body":"Both, I think, plus my brain doesn't get how that would work","msgtype":"m.text"},"ts":1328963700000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"This Windows + mIRC configuration, I get how that works :)","msgtype":"m.text"},"ts":1328963701000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"Anyways, I'll make sure the URLs will just keep on working. Worst case scenario is I won't flood the interwebs with new ones starting somewhere between April and July.","msgtype":"m.text"},"ts":1328964120000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"You say \"flood the interwebs\", I say \"bless the world with our pearls of wisdom\"","msgtype":"m.text"},"ts":1328964240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"About 300MB of it, yeah","msgtype":"m.text"},"ts":1328964300000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"We offer very many pearls","msgtype":"m.text"},"ts":1328964360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1328964361000,"senderName":"krijn","senderId":"krijn@irc"},
{"content":{"body":"We need to the logger….","msgtype":"m.text"},"ts":1328965380000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"hmm yeah we should sort something out","msgtype":"m.text"},"ts":1328968020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe the W3C can help out, I heard shepazu was looking into better loggging","msgtype":"m.text"},"ts":1328968080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, in case you want to take a look, this is the result: http://bugs.python.org/review/13993/patch/4169/14344?context=10&column_width=80","msgtype":"m.text"},"ts":1328968260000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I didn't implement the full attribute parsing for the closing tag","msgtype":"m.text"},"ts":1328968320000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Taggnostr: How does <img src=\"URL><//img></html</html> produce a comment \"/img\" (if I'm reading the test correctly)? The src attribute value ought to continue until EOF","msgtype":"m.text"},"ts":1328969520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Taggnostr: You should never get \\r in the element name, because http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream converts any CR or CRLF into LF before the tokeniser sees it","msgtype":"m.text"},"ts":1328969880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which is why the tokeniser algorithm doesn't bother saying to treat CR like any other whitespace character)","msgtype":"m.text"},"ts":1328969881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If you don't do that input stream preprocessing, and don't handle \\r in an intentionally spec-violating way, then you won't be tokenising input like \"</li\\r\\n>\" in a sensible way","msgtype":"m.text"},"ts":1328970000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, indeed","msgtype":"m.text"},"ts":1328970180000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"and I don't know about the first question (yet)","msgtype":"m.text"},"ts":1328970300000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"python…. why doesn't Python just switch to html5lib ?","msgtype":"m.text"},"ts":1328970301000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"for the reasons I said yesterday","msgtype":"m.text"},"ts":1328970302000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"it might actually happen at some point in the future","msgtype":"m.text"},"ts":1328970303000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"is reading logs. So apparently the log is very useful.","msgtype":"m.emote"},"ts":1328970360000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"wonders whether general Python people agree that they should be parsing HTML compatibly with the HTML5 parsing algorithm, and the question is just how to best implement that (e.g. adopting html5lib vs evolving HTMLParser), or whether the concept of HTML5 isn't accepted yet","msgtype":"m.emote"},"ts":1328970480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"html5lib is presumably too slow?","msgtype":"m.text"},"ts":1328970600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we don't have any \"html expert\" except me and a couple of other devs that more or less care about html5, but moving toward HTML5 is fine","msgtype":"m.text"},"ts":1328970601000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"and right now it's \"easier\" to fix the existing parser rather than adding a new one","msgtype":"m.text"},"ts":1328970660000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"even if we add html5lib, that will happen for 3.3/3.4, and what I'm fixing also goes to 2.7/3.2","msgtype":"m.text"},"ts":1328970661000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"yay for you then :)","msgtype":"m.text"},"ts":1328970720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll go for porting html5lib to C if we really want to make it fast.","msgtype":"m.text"},"ts":1328970780000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"annevk: html5lib isn't that much slower than HTMLParser, IIRC","msgtype":"m.text"},"ts":1328970781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And html5lib needs a fair bit of work to get it fully working under Py3.","msgtype":"m.text"},"ts":1328970840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I was thinking about writing a lightweight version of html5lib without error reporting, but that's just a thought, I haven't checked if html5lib is really slower and if removing the error reporting will make it faster","msgtype":"m.text"},"ts":1328970841000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1328970900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That makes sense. I don't think general users of this library care about error reporting. They just want a data mining tool compatible with the browsers.","msgtype":"m.text"},"ts":1328971020000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"If I remember correctly, what made it slow was scanning through every character in the string (either in a loop or with regexps)","msgtype":"m.text"},"ts":1328971021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the idea is to use an approach similar to HTMLParser, so having a regex that matches everything that is valid, rather than going through several states and different functions every time","msgtype":"m.text"},"ts":1328971022000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"which is unavoidable when you're parsing a string","msgtype":"m.text"},"ts":1328971023000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"All the actual token generation and error detection and tree construction etc was a minor part of the total cost","msgtype":"m.text"},"ts":1328971024000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but what seems problematic to me is all the functions calls involved with the state changes","msgtype":"m.text"},"ts":1328971080000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"(I might be completely wrong though)","msgtype":"m.text"},"ts":1328971081000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Philip`, I fixed the \\r now, thanks for spotting it!","msgtype":"m.text"},"ts":1328971320000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I think the actual number of states has little effect on performance, so the best way to test performance is probably by using a trivial subset of the syntax (I just did characters and tag names (no attributes, no error handling, etc) when experimenting ages ago) and then measure what's the fastest way of generating tokens","msgtype":"m.text"},"ts":1328971440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and then all the real states can be added on afterwards in the same style","msgtype":"m.text"},"ts":1328971441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, usually function calls are expensive, and for something as simple as <foo attr=\"value\"> there are like a dozen of states","msgtype":"m.text"},"ts":1328971442000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"so a dozen function calls, and a single regex should be much faster than that","msgtype":"m.text"},"ts":1328971500000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"unless you keep all in a huge loop with a switch inside","msgtype":"m.text"},"ts":1328971560000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"s/all/everything/","msgtype":"m.text"},"ts":1328971561000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Taggnostr: Nowadays there's no real bottleneck in html5lib under CPython, AFAIK","msgtype":"m.text"},"ts":1328971680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, I haven't really looked at the performances","msgtype":"m.text"},"ts":1328971860000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"gsnedders, what is missing to html5lib in order to work under py3?","msgtype":"m.text"},"ts":1328971920000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I think the main thing that's been missing is a reason to care about Python 3","msgtype":"m.text"},"ts":1328971921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but does it need to be ported? is it ported already but not up to date? or the port is more or less working but still incomplete?","msgtype":"m.text"},"ts":1328971980000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"(or to care enough to sort out the byte/character-related issues that 2to3 can't handle, or something like that)","msgtype":"m.text"},"ts":1328971981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"on py3 html.parser only works with unicode","msgtype":"m.text"},"ts":1328972040000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"If I remember correctly (which I probably don't), it was ported partly with 2to3 and partly by hand, several years ago, and probably never worked properly, and then was not maintained","msgtype":"m.text"},"ts":1328972041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"2to3 usually don't touch bytes/string because on py2 they were used for both","msgtype":"m.text"},"ts":1328972100000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"it might be an interesting gsoc project","msgtype":"m.text"},"ts":1328972101000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I imagine it's important to have a strategy for maintaining both branches in parallel, else one of them will quickly fall behind again","msgtype":"m.text"},"ts":1328972160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how active is html5lib?","msgtype":"m.text"},"ts":1328972161000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"http://code.google.com/p/html5lib/updates/list says not very","msgtype":"m.text"},"ts":1328972220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I guess that if I get involved in this I will end up maintaining the py3 port","msgtype":"m.text"},"ts":1328972221000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"I suppose it's easy for spec-related changes, since they will add tests and it's easy to verify that both versions pass all the tests","msgtype":"m.text"},"ts":1328972280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Taggnostr: 2to3 creates something that fails more TCs than under Python2.","msgtype":"m.text"},"ts":1328972281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if it also gets included in the stdlib things will be a bit different, because the version included in the stdlib will become the main one, and possibly things will be backported to an external py2 version","msgtype":"m.text"},"ts":1328972282000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"gsnedders, that's normal, 2to3 leaves many ambiguos things (like str/unicode) untouched","msgtype":"m.text"},"ts":1328972340000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"why am I continually surprised by the stupid things people do on the web?","msgtype":"m.text"},"ts":1328972460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"this utility autopay setup form first prevents me from pasting my routing/account number, then makes me enter it twice (since hey, you can't paste it, so you're likely to make an error!)","msgtype":"m.text"},"ts":1328972520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's just saving you from computer-made copy errors and/or buggy clipboards","msgtype":"m.text"},"ts":1328972940000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"Taggnostr: I don't think porting html5lib to Python 3 would be that much work, but there are a few non-trivial issues","msgtype":"m.text"},"ts":1328973540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mostly related to encoding ofc","msgtype":"m.text"},"ts":1328973541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"When I write pixels to a <canvas>' imageData, they display as expected.  When I try to read them back, the whole buffer is 0.  Am I missing something?  Do I need to write the imageData to the context then make a new one, or something?","msgtype":"m.text"},"ts":1328974320000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"StoneCypher: How are you trying to read them back?","msgtype":"m.text"},"ts":1328974380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"      var r1 = imageData.data[index+0];    // etc","msgtype":"m.text"},"ts":1328974381000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Where are you getting that imageData object from?","msgtype":"m.text"},"ts":1328974382000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"      imageData             = tgtContext.createImageData(uWidth, uHeight);","msgtype":"m.text"},"ts":1328974383000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"      tgtContext            = tgtCanvas.getContext('2d');","msgtype":"m.text"},"ts":1328974384000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"those are out of order","msgtype":"m.text"},"ts":1328974385000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"the imageData.data buffer is the right size","msgtype":"m.text"},"ts":1328974440000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"it's just all zeroes, instead of the stuff that's actually on screen","msgtype":"m.text"},"ts":1328974441000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"createImageData is for creating an empty ImageData object (so you can fill in its content then putImageData it)","msgtype":"m.text"},"ts":1328974442000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1328974443000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"If you want to initialise it with the current canvas content, you have to use getImageData","msgtype":"m.text"},"ts":1328974444000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh :)","msgtype":"m.text"},"ts":1328974445000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"(and it makes a copy of the data, it's not a live view)","msgtype":"m.text"},"ts":1328974500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(so do getImageData after all your drawing)","msgtype":"m.text"},"ts":1328974501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1328974502000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"had tried that, but with create, as a possibility already, so","msgtype":"m.emote"},"ts":1328974503000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"that should be straightforward, sec","msgtype":"m.text"},"ts":1328974504000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"hooray!","msgtype":"m.text"},"ts":1328974680000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"thank you :)","msgtype":"m.text"},"ts":1328974681000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"and now on to fixing bugs i understand.","msgtype":"m.text"},"ts":1328974740000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"Philip`: do you know a way to get .getImageData to include the color of the tag's background, or do i need to switch to setting that in the pixel data instead","msgtype":"m.text"},"ts":1328976420000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"oh, maybe context.globalCompositeOperation = \"destination-over\";","msgtype":"m.text"},"ts":1328976480000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"nope.","msgtype":"m.text"},"ts":1328976600000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"hell with it, i'll just set it in the pixel data","msgtype":"m.text"},"ts":1328976660000,"senderName":"StoneCypher","senderId":"StoneCypher@irc"},
{"content":{"body":"StoneCypher: By \"the tag's background\", do you mean the colour that shows through when the image data in the canvas is transparent?","msgtype":"m.text"},"ts":1328977680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham, do you think a gsoc project is too much for that?","msgtype":"m.text"},"ts":1328979600000,"senderName":"Taggnostr","senderId":"Taggnostr@irc"},
{"content":{"body":"hmm. what's the general opinion on a new kind-of standard, a \"navigational API\". it should allow to unify site links. it could allow to format each entry (i.e. apply CSS) in PCs/laptops, but it could also be used to create custom context menus (i.e. next to Firefox button, a Wikipedia button) and also, for mobile phones, create websites which can make use of the \"navigation\" button (the...","msgtype":"m.text"},"ts":1328980560000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"...usual interface to get to different options)","msgtype":"m.text"},"ts":1328980561000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"joancreus: Not sure I get it. What user problem are you trying to solve? Does @rel not solve it?","msgtype":"m.text"},"ts":1328981040000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: navigation in mobile phones , basically","msgtype":"m.text"},"ts":1328981100000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"it's a mess. in a PC, you got it at the top, or in the sides","msgtype":"m.text"},"ts":1328981101000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"with mobile phones, you got it either on top, or on bottom","msgtype":"m.text"},"ts":1328981102000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"what i suggest is that mobile phones should implement","msgtype":"m.text"},"ts":1328981103000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"that when clicking the nav button on the phone, the links appear","msgtype":"m.text"},"ts":1328981104000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"pc browsers could implement similar things, or keep nav links as they are, or adding a menu item for the website","msgtype":"m.text"},"ts":1328981160000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"joancreus: sounds like a problem that can be solved by mobile ua's using <nav> to identity navigation links and putting them wherever they want","msgtype":"m.text"},"ts":1328981161000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"joancreus: in practice the current trend seems to be for mobile UAs to mimic the presentation familiar to users from desktop UAs so they may not be inc;ined to use <nav> that way tho","msgtype":"m.text"},"ts":1328981220000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"hmm but do mobile browsers implement such a thing? it'd be great","msgtype":"m.text"},"ts":1328981221000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"webben: regarding what i said, imagine the wikipedia homepage","msgtype":"m.text"},"ts":1328981222000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"there are a ton of links on the sidebar","msgtype":"m.text"},"ts":1328981223000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"which could be grouped semantically (even inside nav); mobile browsers could implement what i was saying","msgtype":"m.text"},"ts":1328981280000,"senderName":"joancreus","senderId":"joancreus@irc"},
{"content":{"body":"anyway, never mind, just random thoughts","msgtype":"m.text"},"ts":1328981281000,"senderName":"joancreus","senderId":"joancreus@irc"}
]