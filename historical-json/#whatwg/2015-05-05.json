[
{"content":{"body":"Mark: The IETF is generally enthusiastic about Opportunistic Security","msgtype":"m.text"},"ts":1430804708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mark: The W3C is much less excited about Opportunistic Security","msgtype":"m.text"},"ts":1430804709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is reading https://github.com/w3ctag/meetings/blob/gh-pages/2015/04-sfo/04-21-minutes.md","msgtype":"m.emote"},"ts":1430804715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gets to the part where slightlyoff is upset with sortable tables","msgtype":"m.emote"},"ts":1430806142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wouldn't really consider that representative of anything","msgtype":"m.emote"},"ts":1430806158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"If your website is a bank, and you see a wildcard CORS header, it's probably really bad.\"","msgtype":"m.text"},"ts":1430808399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not true :-(","msgtype":"m.text"},"ts":1430808409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is w3.org down","msgtype":"m.text"},"ts":1430808689000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://downforeveryoneorjustme.com/w3.org","msgtype":"m.text"},"ts":1430808934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can't access it either though","msgtype":"m.text"},"ts":1430808941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry we having haproxy problems I think","msgtype":"m.text"},"ts":1430809987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it may be while","msgtype":"m.text"},"ts":1430809991000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh maybe it's back already now","msgtype":"m.text"},"ts":1430810021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: where was that new URL implementation located again?","msgtype":"m.text"},"ts":1430810061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds https://www.npmjs.com/package/url-standard and https://www.npmjs.com/package/urlsearchparams but they are different","msgtype":"m.emote"},"ts":1430810077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://www.npmjs.com/search?q=whatwg is pretty cool","msgtype":"m.text"},"ts":1430810122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/cofounders/urlutils ?","msgtype":"m.text"},"ts":1430810156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm that is a year old","msgtype":"m.text"},"ts":1430810169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sebmaster: ?","msgtype":"m.text"},"ts":1430810173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1430810574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/jsdom/whatwg-url","msgtype":"m.text"},"ts":1430810574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whenever I search for jsdom I end up at https://github.com/tmpvar/jsdom so I didn't realize it was also an organization","msgtype":"m.text"},"ts":1430810608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah maybe we should move it","msgtype":"m.text"},"ts":1430812512000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: when I regen URL it now points to #utf_8-decoder rather than #utf-8-decoder due to a change in linking practices?","msgtype":"m.text"},"ts":1430813391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I'm not sure how I can prevent that from happening","msgtype":"m.text"},"ts":1430813413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whoever wants underscores?!","msgtype":"m.text"},"ts":1430813731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I found a workaround, but this makes things way more verbose...","msgtype":"m.text"},"ts":1430813744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk_: explain no longer defaulting to about:blank?","msgtype":"m.text"},"ts":1430815465000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: apparently #foo against about:blank will at some point yield about:blank#foo","msgtype":"m.text"},"ts":1430815494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: or might already in UAs","msgtype":"m.text"},"ts":1430815498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure. Why is that a problem?","msgtype":"m.text"},"ts":1430815511000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: because the intention was that the default was equivalent to no base URL","msgtype":"m.text"},"ts":1430815524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is about new URL() only, or...?","msgtype":"m.text"},"ts":1430815534000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1430815539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1430815542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah other specs still need to use about:blank","msgtype":"m.text"},"ts":1430815557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. new Document()","msgtype":"m.text"},"ts":1430815563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so given an arbitrary string with no context, \"parse this as a URL\" i.e. \"parse this as an absolute URL\" should still be done relative to about:blank","msgtype":"m.text"},"ts":1430815575000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1430815576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"document.URL seems fine for new URL I guess","msgtype":"m.text"},"ts":1430815601000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"#foo\" should only work if \"../../foo.html\" works IMO","msgtype":"m.text"},"ts":1430815633000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I want new URL to be able to fail on non-absolute URLs","msgtype":"m.text"},"ts":1430815633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1430815638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe new URL() accepts relative and URL.absolute() fails on relative","msgtype":"m.text"},"ts":1430815684000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":".fromAbsolute? I dunno.","msgtype":"m.text"},"ts":1430815697000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it seems new URL() should support all forms and .statics should support subsets","msgtype":"m.text"},"ts":1430815723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a null base URL is more low-level","msgtype":"m.text"},"ts":1430815749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that agrees with what I said :)","msgtype":"m.text"},"ts":1430815752000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it might :-)","msgtype":"m.text"},"ts":1430815771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: do we still use tenXer?","msgtype":"m.text"},"ts":1430815922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for whatwg/url it is triggering failures","msgtype":"m.text"},"ts":1430815931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no :( it's some kind of viral thing that spread to all my repos, I have since revoked it","msgtype":"m.text"},"ts":1430815945000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay, deleted","msgtype":"m.text"},"ts":1430815971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<script defer>, that means wait for DOMContentLoaded, right?","msgtype":"m.text"},"ts":1430816210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also something about ordering","msgtype":"m.text"},"ts":1430816541000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I kind of was under the impression <script defer async> was optimal but I dunno it's a mess out there","msgtype":"m.text"},"ts":1430816555000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah I was wondering whether I could move the dfn.js scripts to be earlier in the source if I added defer","msgtype":"m.text"},"ts":1430816647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"defer async just means \"async\", but \"defer\" if that isn't supported","msgtype":"m.text"},"ts":1430816660000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(dfn.js requires the DOM to be complete-ish)","msgtype":"m.text"},"ts":1430816675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"defer would work for that","msgtype":"m.text"},"ts":1430816688000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"@defer means after DOMContentLoaded you execute script elements in document order","msgtype":"m.text"},"ts":1430816689000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"except in IE<10 when it doesn't have the ordering semantic","msgtype":"m.text"},"ts":1430816749000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sounds like defer async has additional semantics on top of just async then?","msgtype":"m.text"},"ts":1430816847000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I can't remember how they combine","msgtype":"m.text"},"ts":1430816932000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because they have contradictory semantics then","msgtype":"m.text"},"ts":1430816946000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also I'm on a slow café wifi connection that doesn't help loading the spec","msgtype":"m.text"},"ts":1430816965000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: \"async defer\" is equiv. to \"async\"","msgtype":"m.text"},"ts":1430817084000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"as Ms2ger said","msgtype":"m.text"},"ts":1430817090000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1430817103000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So it just ignores the defer part of the semantics","msgtype":"m.text"},"ts":1430817109000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://www.levelofindirection.com/journal/2015/5/1/naming-is-hard-or-is-it.html the \"Why?\" section here has an interesting insight on naming that I hadn't considered","msgtype":"m.text"},"ts":1430817133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Except in browsers that don't support async","msgtype":"m.text"},"ts":1430817136000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah but who cares about those while writing specs","msgtype":"m.text"},"ts":1430817152000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Shorter names is about readability, not typing speed","msgtype":"m.text"},"ts":1430817153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html","msgtype":"m.text"},"ts":1430817189000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"seems like maybe we should be using <script defer> instead of <script async> for specs","msgtype":"m.text"},"ts":1430817203000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm never entirely sure about async from a perf view; they delay the HTML being parser and then surely have a bigger effect on when the complete document is rendered first","msgtype":"m.text"},"ts":1430817215000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah blocking the parser seems like a sin","msgtype":"m.text"},"ts":1430817249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, perhaps <script> at top, and use defer=\"\" since complete document/render is more important than the script","msgtype":"m.text"},"ts":1430817276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And for the common scripts we don't care about ordering...","msgtype":"m.text"},"ts":1430817304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So IE9 is not really a concern either way","msgtype":"m.text"},"ts":1430817315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what we really want is something which delays execution until DOMContentLoaded but doesn't care about ordering, surely?","msgtype":"m.text"},"ts":1430817375000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, I guess we want better dependency management in general","msgtype":"m.text"},"ts":1430817443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"See Hixie's efforts in that area","msgtype":"m.text"},"ts":1430817461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do i put query params in fetch(), and why is it not in the docs anywhere?","msgtype":"m.text"},"ts":1430819796000,"senderName":"greves","senderId":"greves@irc"},
{"content":{"body":"greves: which docs?","msgtype":"m.text"},"ts":1430820156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"greves: and if you want to manipulate the URL, just manipulate the URL?","msgtype":"m.text"},"ts":1430820175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/fetch","msgtype":"m.text"},"ts":1430820185000,"senderName":"greves","senderId":"greves@irc"},
{"content":{"body":"annevk, yeah but its quite messy doing all of the ?a=foo&b=bar stuff on my urls manually... would be much nicer to do {a: foo, b: bar} and pass that in some how","msgtype":"m.text"},"ts":1430820222000,"senderName":"greves","senderId":"greves@irc"},
{"content":{"body":"greves: use https://url.spec.whatwg.org/#urlsearchparams","msgtype":"m.text"},"ts":1430820240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do i pass that into my call to fetch then?","msgtype":"m.text"},"ts":1430820298000,"senderName":"greves","senderId":"greves@irc"},
{"content":{"body":"fetch(url, {headers: headers, body: body})","msgtype":"m.text"},"ts":1430820319000,"senderName":"greves","senderId":"greves@irc"},
{"content":{"body":"url.toString()","msgtype":"m.text"},"ts":1430822387000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No need to invoke toString() explicitly...","msgtype":"m.text"},"ts":1430827957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's surprising how much <form> has confused the thinking about query params","msgtype":"m.text"},"ts":1430827982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk_: why'd you need the repo?","msgtype":"m.text"},"ts":1430829594000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"*why did","msgtype":"m.text"},"ts":1430829612000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: wanted to point to it from an email to whatwg⊙wo","msgtype":"m.text"},"ts":1430829803000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"Sebmaster: https://lists.w3.org/Archives/Public/public-whatwg-archive/2015May/0007.html","msgtype":"m.text"},"ts":1430829815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: header of https://html-differences.whatwg.org/ could do with some spring cleaning","msgtype":"m.text"},"ts":1430829832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, i see, thanks","msgtype":"m.text"},"ts":1430829843000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"annevk: i didnt mind the state based implementation too much, although i've no idea how a function based one would look, so i guess i cant really compare them","msgtype":"m.text"},"ts":1430829941000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: https://github.com/servo/rust-url/blob/master/src/parser.rs#L94 and onwards, basically, but that's in Rust, not JavaScript","msgtype":"m.text"},"ts":1430830004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, i was thinking that'd be much better at first because due to JITs not optimizing big functions","msgtype":"m.text"},"ts":1430830150000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"I had a big switch statement in the beginning like here: https://github.com/jsdom/whatwg-url/blob/a7cfb037e36c6b07f884b25d59737d3d9b05986e/lib/url.js","msgtype":"m.text"},"ts":1430830167000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"but with the class which saves the state and methods for each state it's not a big deal now I think","msgtype":"m.text"},"ts":1430830199000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: see also https://github.com/annevk/url/ for such an implementation (though out of date)","msgtype":"m.text"},"ts":1430830378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i got a few tips where i missed stuff from the spec from there :p","msgtype":"m.text"},"ts":1430830400000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: anyway, I don't have time for big rewrites at the moment","msgtype":"m.text"},"ts":1430830416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: it seems https://critic.hoppipolla.co.uk/r/4825 is already being acted on by wanderview and jsbell?","msgtype":"m.text"},"ts":1430832216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah. If you feel happy r-ing the fixup there then that saves a few hours of waiting for jsbell to wake up","msgtype":"m.text"},"ts":1430832264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: done","msgtype":"m.text"},"ts":1430832439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks!","msgtype":"m.text"},"ts":1430832516000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1430833178000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: what is w3c-test-mirror?","msgtype":"m.text"},"ts":1430833183000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: It gets the thing mirrored on w3c-test.org","msgtype":"m.text"},"ts":1430833220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://w3c-test.org/submissions/1782/service-workers/cache-storage/window/cache-put.https.html","msgtype":"m.text"},"ts":1430833222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since you weren't 100% sure it worked I thought I should check","msgtype":"m.text"},"ts":1430833236000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(only project members can request mirroring, for obvious reasons)","msgtype":"m.text"},"ts":1430833261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nice!  looks like it passed","msgtype":"m.text"},"ts":1430833262000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I just started an update into the gecko tree","msgtype":"m.text"},"ts":1430833287000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, does the mirroring work again?","msgtype":"m.text"},"ts":1430833304000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: ok... I'm still trying to fix the intermittents in the wpt tests on windows","msgtype":"m.text"},"ts":1430833314000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: Everything works again!","msgtype":"m.text"},"ts":1430833365000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(perhaps)","msgtype":"m.text"},"ts":1430833369000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: did you merge that last PR?  I didn't get email about it","msgtype":"m.text"},"ts":1430833420000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"looks like it still needs to be merged","msgtype":"m.text"},"ts":1430833440000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Wow, that's quite some fail","msgtype":"m.text"},"ts":1430833508000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyone want to check what IE does on https://w3c-test.org/submissions/1763/workers/baseurl/alpha/?","msgtype":"m.text"},"ts":1430833693000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: gives a directory listing","msgtype":"m.text"},"ts":1430833744000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1430833750000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There's four tests in there","msgtype":"m.text"},"ts":1430833758000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"importScripts: TypeError: Unable to get property 'split' of undefined or null reference","msgtype":"m.text"},"ts":1430833778000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"shared worker: TypeError: Unable to get property 'split' of undefined or null reference","msgtype":"m.text"},"ts":1430833790000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"blinks","msgtype":"m.emote"},"ts":1430833798000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"they all hit that error","msgtype":"m.text"},"ts":1430833803000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Oh, gah","msgtype":"m.text"},"ts":1430833821000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Have we not merged IE's stack PR?","msgtype":"m.text"},"ts":1430833830000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://pastebin.mozilla.org/8832473","msgtype":"m.text"},"ts":1430833833000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview, want to try again?","msgtype":"m.text"},"ts":1430834075000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"importScripts: https://pastebin.mozilla.org/8832475","msgtype":"m.text"},"ts":1430834118000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"shared worker: assert_unreached: Got error event Reached unreachable code","msgtype":"m.text"},"ts":1430834131000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"base url in worker got the same error as importScripts","msgtype":"m.text"},"ts":1430834150000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"xhr got slight variant on that error: assert_equals: expected \"gamma\\n\" but got \"beta\\n\"","msgtype":"m.text"},"ts":1430834168000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: ^^^","msgtype":"m.text"},"ts":1430834179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Dammit","msgtype":"m.text"},"ts":1430834199000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: were you able to fix the path encoding issue I ran into on windows?  just wondering since you're running a gecko update","msgtype":"m.text"},"ts":1430835703000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Uh, yes, I have a patch for that somewhere :)","msgtype":"m.text"},"ts":1430835966000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp-: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25684","msgtype":"m.text"},"ts":1430836150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp-: interesting, so Chrome just does it for POST/PUT/HEAD","msgtype":"m.text"},"ts":1430836877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp-: that seems rather arbitrary","msgtype":"m.text"},"ts":1430836888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is, but the reasoning makes sense","msgtype":"m.text"},"ts":1430836947000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: so I thought that was going to be an easy fix, but turns out I haven't really sorted the whole uploading part yet","msgtype":"m.text"},"ts":1430841841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: and streams are going to change this too...","msgtype":"m.text"},"ts":1430841848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: shit, forgot to add you to the ack section, how would you like to appear there?","msgtype":"m.text"},"ts":1430842946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds name in /whois","msgtype":"m.emote"},"ts":1430843010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for fetch? sure","msgtype":"m.text"},"ts":1430843675000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: https://t.co/mXRm2wbp8T","msgtype":"m.text"},"ts":1430843712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"everyone, we're now maintaining https://resources.whatwg.org/biblio.json","msgtype":"m.text"},"ts":1430844579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: you might want to use that to generate spec.whatwg.org from at some point, we could add summaries and such","msgtype":"m.text"},"ts":1430844602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Håkon?","msgtype":"m.text"},"ts":1430844849000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm, need to force utf-8","msgtype":"m.text"},"ts":1430844980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AddDefaultCharset failed bah","msgtype":"m.text"},"ts":1430845144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1430845335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also added DOMPARSING to the list","msgtype":"m.text"},"ts":1430845649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk_: You can manually set your id, and Bikeshed won't autogen one.  It intentionally downcases a hyphen into an underscore, so you don't get \"duplicate ID\" warnings when you define two terms that are identical save for their hyphenation.  (It came up in one of mikewest's specs.)","msgtype":"m.text"},"ts":1430846972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it regressed a bunch of my stuff","msgtype":"m.text"},"ts":1430847073000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"What changed, and what should it have been?","msgtype":"m.text"},"ts":1430847100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: what is biblio.json for?  Can you just put those in SpecRef?  It's silly, if those are useful references, for them to be used only by one group, rather than shared by everyone using a preprocessor.","msgtype":"m.text"},"ts":1430847164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: tobie will import them automatically","msgtype":"m.text"},"ts":1430847180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, ok.","msgtype":"m.text"},"ts":1430847187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's WHATWG's version of what the W3C publishes as RDF...","msgtype":"m.text"},"ts":1430847200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool.","msgtype":"m.text"},"ts":1430847219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why not microdata?","msgtype":"m.text"},"ts":1430847225000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Don't troll. ^_^","msgtype":"m.text"},"ts":1430847237000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in URL a bunch of utf-8 links were made utf_8","msgtype":"m.text"},"ts":1430847244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that's due to what I indicated above.","msgtype":"m.text"},"ts":1430847257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I solved  it by adding explicit url entries next to text, but it was cumbersome","msgtype":"m.text"},"ts":1430847257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: and unless I'm mistaken in some specifications the IDs regressed","msgtype":"m.text"},"ts":1430847280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wait, I don't understand what you mean by \"adding explicit url entries next to text\".","msgtype":"m.text"},"ts":1430847302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I might be wrong about that part","msgtype":"m.text"},"ts":1430847303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: https://github.com/whatwg/url/commit/c2980ee398de9621b0c313e5cc522895227db24c#diff-03b21320f26423640f89c447968191e5L2921","msgtype":"m.text"},"ts":1430847346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's possible that Bikeshed ID-autogen is different from Anolis auto-gen, yes.  That's why I did a big s/title=/id=/ in DOM, to keep the IDs stable.","msgtype":"m.text"},"ts":1430847366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, I see.  Yeah, Bikeshed uses its own ID-autogen rules to figure out the anchor, if you don't specify one yourself in the anchor data.  Obviously, if a spec uses an ID that doesn't match Bikeshed's autogen rules, you'll have to specify the anchor yourself.","msgtype":"m.text"},"ts":1430847478000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(This can gradually be fixed by moving more specs into Shepherd's database, so you don't need to put them in an anchors block at all.)","msgtype":"m.text"},"ts":1430847508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, I might have a look at Shepherd tomorrow","msgtype":"m.text"},"ts":1430847560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This whole anchor business is driving me nuts","msgtype":"m.text"},"ts":1430847568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, partially because your Anolis specs all had the terrible title practice.","msgtype":"m.text"},"ts":1430847592000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Excellent practice*","msgtype":"m.text"},"ts":1430847604000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So you're actively fighting Bikeshed right now.","msgtype":"m.text"},"ts":1430847606000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: It was a hack around not having types attached to your definitions. ^_^","msgtype":"m.text"},"ts":1430847625000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: You're currently in the same position as when Hixie was trying to learn Git, and trying desperately to just push a file to the repo. ^_^","msgtype":"m.text"},"ts":1430847699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The difference here being, breaking external links is bad?","msgtype":"m.text"},"ts":1430848649000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's nothing wrong with links.  Where you previously specified title=\"concept-foo\", you switch to id=\"concept-foo\" (and let Bikeshed detect the linking text itself, unless you actually do need to override it).","msgtype":"m.text"},"ts":1430848705000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This works for all Anolis-based <dfn>s.","msgtype":"m.text"},"ts":1430848729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then you can, almost all of the time, delete title entirely from the links, and let the autolinking process hook things up automatically.","msgtype":"m.text"},"ts":1430848761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I removed at least 99% of the title attributes in DOM's source.","msgtype":"m.text"},"ts":1430848781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The Anolis practice was just to use title='' on <dfn> as a replacement for id='', and then use title='' on <a> as a replacement for href='' (that would cross-link if the ID was in the Anolis db).","msgtype":"m.text"},"ts":1430849020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1130533#c14","msgtype":"m.text"},"ts":1430852683000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: sigh","msgtype":"m.text"},"ts":1430852728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: tomorrow","msgtype":"m.text"},"ts":1430852732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: why does script run when adding a node, but not when removing or changing the type...","msgtype":"m.text"},"ts":1430862650000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"that seems super weird, you have to change the type and then append a whitespace node to run your script","msgtype":"m.text"},"ts":1430862670000,"senderName":"esprehn","senderId":"esprehn@irc"}
]