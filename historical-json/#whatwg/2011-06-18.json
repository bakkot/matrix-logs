[
{"content":{"body":"mpilgrim, ok, looks like throwing on too few arguments and ignoring extra arguments is the way to go, then","msgtype":"m.text"},"ts":1308355500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wonders if there's a bot in here that you can use to leave messages for people","msgtype":"m.emote"},"ts":1308355560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: None that I've ever seen, though you can just write your message and hope the recipient reads the IRC logs assiduously","msgtype":"m.text"},"ts":1308355680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"any decent irc client highlights messages addressed to you","msgtype":"m.text"},"ts":1308355860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"most don't do so if you weren't in the channel at the time someone wishes to leave you a message, though :)","msgtype":"m.text"},"ts":1308355920000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so don't not be in the channel :P","msgtype":"m.text"},"ts":1308355921000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1308355980000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: http://freenode.net/faq.shtml#memoserv","msgtype":"m.text"},"ts":1308356040000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"nimbu, oh, interesting, I'll try it","msgtype":"m.text"},"ts":1308356041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh no, that's four people in #whatwg on a Saturday morning","msgtype":"m.text"},"ts":1308356220000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Is there really a thread going \"longdesc does not have backwards compatibility because many platforms and tools don't support it at all\" \"but it WILL HAVE backwards compatibility in the future when they add support for longdesc\"?","msgtype":"m.text"},"ts":1308356820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Yes.  Yes there is.","msgtype":"m.text"},"ts":1308356880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm going to need a bigger palm","msgtype":"m.text"},"ts":1308357060000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"AryehGregor:  I was told you could help me with FX's RTE https://developer.mozilla.org/en/rich-text_editing_in_mozilla","msgtype":"m.text"},"ts":1308361080000,"senderName":"CrossX","senderId":"CrossX@irc"},
{"content":{"body":"When a user uses the RTE the HTML created appears on a single line instead of formated with \\n's and \\t's.  Is there any way to get the HTML created in the RTE to appear 'beautyfied'.","msgtype":"m.text"},"ts":1308361140000,"senderName":"CrossX","senderId":"CrossX@irc"},
{"content":{"body":"heycam: ping","msgtype":"m.text"},"ts":1308366360000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"mpilgrim, pong","msgtype":"m.text"},"ts":1308366480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so i'm tightening up webkit's IDL implementation","msgtype":"m.text"},"ts":1308366540000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"and aligning it with WebIDL","msgtype":"m.text"},"ts":1308366541000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"slowly","msgtype":"m.text"},"ts":1308366542000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"cool!","msgtype":"m.text"},"ts":1308366543000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"are the V8 bindings still different from WebKit's?","msgtype":"m.text"},"ts":1308366544000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1308366545000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"but both webkit and v8 are getting the new strictness","msgtype":"m.text"},"ts":1308366600000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"is there a prescribed exception we should throw on missing required arguments?","msgtype":"m.text"},"ts":1308366601000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"yes, TypeError","msgtype":"m.text"},"ts":1308366602000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok, we don't do that","msgtype":"m.text"},"ts":1308366603000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"yet","msgtype":"m.text"},"ts":1308366660000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1308366661000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well we don't do anything different yet","msgtype":"m.text"},"ts":1308366662000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"the new strictness is still theoretical","msgtype":"m.text"},"ts":1308366663000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"i'm migrating IndexedDB first","msgtype":"m.text"},"ts":1308366664000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"if you get on to migrating old apis, and find some that break compatibility when enforcing the strictness, it'd be good to turn those into spec bug reports","msgtype":"m.text"},"ts":1308366840000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"to make arguments optional","msgtype":"m.text"},"ts":1308366841000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"we will be tackling APIs in this order:","msgtype":"m.text"},"ts":1308366842000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"1. IndexedDB","msgtype":"m.text"},"ts":1308366843000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"2. other new-ish APIs (web audio, File API)","msgtype":"m.text"},"ts":1308366900000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"3. older APIs that are known to have stricter implementations in other browsers (addEventListener)","msgtype":"m.text"},"ts":1308366901000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"4. older APIs that have poor or no x-browser interop (WebSQLDatabase)","msgtype":"m.text"},"ts":1308366960000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"5. older APIs that have unknown interop issues","msgtype":"m.text"},"ts":1308366961000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"6. SVG","msgtype":"m.text"},"ts":1308366962000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"ok, i've changed our IDL code generator (A 3356-LINE PERL SCRIPT WITH VIRTUALLY NO UNIT TESTS) to throw TypeError instead of SyntaxError","msgtype":"m.text"},"ts":1308367080000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"on missing required arguments","msgtype":"m.text"},"ts":1308367081000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"(I did some minor amount of hacking on that file in the past :( )","msgtype":"m.text"},"ts":1308367082000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i added 3 lines and introduced 2 new bugs","msgtype":"m.text"},"ts":1308367140000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"Perl is not my drug of choice","msgtype":"m.text"},"ts":1308367141000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"enjoys it, but really should learn python some day","msgtype":"m.emote"},"ts":1308367200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i have another (unrelated) WebIDL question","msgtype":"m.text"},"ts":1308367260000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"on nulls","msgtype":"m.text"},"ts":1308367261000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1308367262000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(I have to head out in a couple of mins tho)","msgtype":"m.text"},"ts":1308367263000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I've read http://dev.w3.org/2006/webapi/WebIDL/#TreatNullAs","msgtype":"m.text"},"ts":1308367264000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"it seems the only two choices are \"\" and \"null\"","msgtype":"m.text"},"ts":1308367320000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1308367321000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"WebKit has this flag which I don't fully understand called ConvertNullToNullString","msgtype":"m.text"},"ts":1308367322000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"which, in C++ land, makes the null JS argument an actual null value in C++","msgtype":"m.text"},"ts":1308367323000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"I in the past wondered about that flag, too -- I never fully understood the distinction between null and a \"null string\"","msgtype":"m.text"},"ts":1308367324000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1308367325000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well, it's poorly named, but that's what it does","msgtype":"m.text"},"ts":1308367326000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"is there a WebIDL equivalent to that?","msgtype":"m.text"},"ts":1308367380000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"so the DOMString type only has values that are strings","msgtype":"m.text"},"ts":1308367440000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you want null in that type too, you can write \"DOMString?\"","msgtype":"m.text"},"ts":1308367441000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you can't use [TreatNullAs] on \"DOMString?\" typed arguments","msgtype":"m.text"},"ts":1308367442000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since null is a valid value of the type","msgtype":"m.text"},"ts":1308367443000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the null string is the empty string, synonymous","msgtype":"m.text"},"ts":1308367444000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, I think it really depends on the context","msgtype":"m.text"},"ts":1308367500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"can't think of any context where it means something else","msgtype":"m.text"},"ts":1308367501000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, i.e. people use the term \"null string\" differently","msgtype":"m.text"},"ts":1308367502000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it could mean a null object reference","msgtype":"m.text"},"ts":1308367503000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'd say they're using it incorrectly, then","msgtype":"m.text"},"ts":1308367504000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's not the null string, that's just null","msgtype":"m.text"},"ts":1308367560000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yes, that's what it really is -- it takes the JavaScript value null and converts it to a null object reference in C++","msgtype":"m.text"},"ts":1308367561000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"zewt, I think it's fair to stick to one particular definition of \"null string\", yes. :)","msgtype":"m.text"},"ts":1308367562000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm not sure we've implemented support for \"?\"","msgtype":"m.text"},"ts":1308367563000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"ie \"DOMString?\"","msgtype":"m.text"},"ts":1308367564000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"but i'll check","msgtype":"m.text"},"ts":1308367565000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"mpilgrim, ok sounds like \"DOMString?\" is what you want though","msgtype":"m.text"},"ts":1308367566000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1308367567000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"the \"?\" has only been in Web IDL for maybe 6 months","msgtype":"m.text"},"ts":1308367620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but specs are just now starting to use it","msgtype":"m.text"},"ts":1308367621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok gotta go, back in an hour or something","msgtype":"m.text"},"ts":1308367622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"mpilgrim: if \"ConvertNullToNullString\" means \"convert javascript null to ((std::string *) NULL)\" or similar, it seems confusingly named at beset","msgtype":"m.text"},"ts":1308367623000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1308367624000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1308367625000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zewt: yeah, well, i'm looking to do away with the flag altogether and align with WebIDL instead","msgtype":"m.text"},"ts":1308367860000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"man, the downside of hacking on the IDL code generator is it has to reprocess 500+ IDL files and then recompile every time i change one line of perl","msgtype":"m.text"},"ts":1308368040000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"also, having to change lines of perl","msgtype":"m.text"},"ts":1308368160000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yes, another major downside","msgtype":"m.text"},"ts":1308368280000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"I reckon that thing you pinged me about on IRC when I was away was http://www.w3.org/Bugs/Public/show_bug.cgi?id=12212","msgtype":"m.text"},"ts":1308369720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the JS problem with the feedback form","msgtype":"m.text"},"ts":1308369780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, yeah, it's fixed now","msgtype":"m.text"},"ts":1308369781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam: so it turns out throwing TypeError is a bit more complicated than i'd hoped","msgtype":"m.text"},"ts":1308371220000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"webkit currently throws SyntaxError when there aren't enough arguments","msgtype":"m.text"},"ts":1308371221000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"every function that currently specifies [RequiresAllArguments=raise] (many in SVG, a few in canvas, one in XMLHttpRequest) is potentially affected","msgtype":"m.text"},"ts":1308371340000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"that means i might be breaking the web","msgtype":"m.text"},"ts":1308371341000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"which means i need some thorough review and buy-in first","msgtype":"m.text"},"ts":1308371342000,"senderName":"mpilgrim","senderId":"mpilgrim@irc"},
{"content":{"body":"Hixie: what I meant was that MediaStream could be made constructible with tracks as arguments (stop() doesn't make sense if the stream is composed of tracks from other streams)","msgtype":"m.text"},"ts":1308383940000,"senderName":"pererik","senderId":"pererik@irc"},
{"content":{"body":"Hixie: what could be problematic is that the availability of each track would have to be tracked and maybe exposed as a readyState or as a boolean property","msgtype":"m.text"},"ts":1308384000000,"senderName":"pererik","senderId":"pererik@irc"},
{"content":{"body":"Hixie: a boolean property makes sense if there are only two states","msgtype":"m.text"},"ts":1308384001000,"senderName":"pererik","senderId":"pererik@irc"},
{"content":{"body":"Hixie: also if the enabled/selected state ends up on the track objects they would have to be copied into the new stream so that they can be independently controlled","msgtype":"m.text"},"ts":1308384060000,"senderName":"pererik","senderId":"pererik@irc"},
{"content":{"body":"http://dev.w3.org/2009/dap/system-info/battery-status.html is anyone planning on implementing this?","msgtype":"m.text"},"ts":1308389460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"/dap/? I assume not","msgtype":"m.text"},"ts":1308389461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Also, http://groups.google.com/group/mozilla.dev.platform/browse_thread/thread/764c9bbee7e22a52","msgtype":"m.text"},"ts":1308389640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: https://lists.webkit.org/pipermail/webkit-dev/2011-June/017120.html","msgtype":"m.text"},"ts":1308390360000,"senderName":"pererik","senderId":"pererik@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1308391080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I think MS is quite interested in DAP work","msgtype":"m.text"},"ts":1308391980000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"at least some parts of it","msgtype":"m.text"},"ts":1308391981000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't know why","msgtype":"m.text"},"ts":1308391982000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"They do lots of weird stuff","msgtype":"m.text"},"ts":1308392460000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: actually, it sounded like they would like to use DAP's capturing API","msgtype":"m.text"},"ts":1308392640000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I assume that is because W3C HTML5 doesn't have capturing API, IIRC","msgtype":"m.text"},"ts":1308392641000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MS should just join whatwg","msgtype":"m.text"},"ts":1308392642000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Now that's something we can agree on :)","msgtype":"m.text"},"ts":1308392700000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<input type=file> is a capturing API","msgtype":"m.text"},"ts":1308392820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Isn't the only thing holding MS' joining back the lack of a patent policy?","msgtype":"m.text"},"ts":1308393360000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"Well, the largest reason","msgtype":"m.text"},"ts":1308393361000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"seemed to be no problem for schema.org","msgtype":"m.text"},"ts":1308393480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"quake","msgtype":"m.text"},"ts":1308394440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I thought that too","msgtype":"m.text"},"ts":1308394500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but schema.org does actually have a patent policy","msgtype":"m.text"},"ts":1308394501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"read the \"Terms and conditions\" page","msgtype":"m.text"},"ts":1308394502000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1308394920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, I guess if Microsoft made an effort to join the WHATWG such a policy could be created for it too","msgtype":"m.text"},"ts":1308394980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any progress on Gecko removing mutation events as trial for a future Firefox release?","msgtype":"m.text"},"ts":1308397380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1308397620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____, ^^","msgtype":"m.text"},"ts":1308397740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apparently I'm using a nightly of Firefox 7, you'd expect some progress by now :p","msgtype":"m.text"},"ts":1308397800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You know what's weird? We'll release Fx7 final this year :)","msgtype":"m.text"},"ts":1308397801000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: sorry","msgtype":"m.text"},"ts":1308397860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I should write the replacement implementation first","msgtype":"m.text"},"ts":1308397861000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"reviews a patch first and start implementing it","msgtype":"m.emote"},"ts":1308397920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: just curious, what do you think about FunctionOnly? Since I'm having hard time to understand why it would be used ever (except perhaps for legacy API)","msgtype":"m.text"},"ts":1308399480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It makes the API surface simpler","msgtype":"m.text"},"ts":1308399481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1308399540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"how","msgtype":"m.text"},"ts":1308399541000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but it would also be simpler if we supported the same pattern everywhere","msgtype":"m.text"},"ts":1308399542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, since you cannot do both function() {} and {handler:function(){}}","msgtype":"m.text"},"ts":1308399543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but just function(){}","msgtype":"m.text"},"ts":1308399544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it is simpler for who?","msgtype":"m.text"},"ts":1308399545000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but supporting function and {} everywhere would be fine with me too","msgtype":"m.text"},"ts":1308399600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"authors","msgtype":"m.text"},"ts":1308399601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if some author doesn't care about { foo: function()}, there is no need to use it","msgtype":"m.text"},"ts":1308399602000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"'this' handling with { foo: function() {}} makes it just very handy","msgtype":"m.text"},"ts":1308399660000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that doesn't make it simpler :) he still needs to chose","msgtype":"m.text"},"ts":1308399661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or she","msgtype":"m.text"},"ts":1308399662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, so maybe we should support the {handler} thing everywhere?","msgtype":"m.text"},"ts":1308399663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, IMO, we should support {} everywhere","msgtype":"m.text"},"ts":1308400260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"onfoo listeners could be, in theory, special case, because of how they have traditionally worked in browsers","msgtype":"m.text"},"ts":1308400320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and I'm not sure about setTimeout/Interval","msgtype":"m.text"},"ts":1308400321000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"now that Opera has a dev channel equivalent, how long until Opera gets rid of minor version numbers","msgtype":"m.text"},"ts":1308400920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: when I have a minute I wanted to get your feedback on an idea about how to better handle the validator spec advice in error messages for input elements that have attributes that aren't allowed for their type","msgtype":"m.text"},"ts":1308402480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what's the idea?","msgtype":"m.text"},"ts":1308402660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: or did you mean you don't have the minute now?","msgtype":"m.text"},"ts":1308402661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: anyway, the input element autoextracted advice is confusing enough that it might be worthwhile to special-case the input element and even emit hand-crafted advice","msgtype":"m.text"},"ts":1308402720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"bing","msgtype":"m.text"},"ts":1308402721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*bingo","msgtype":"m.text"},"ts":1308402722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's what I was going to ask you about","msgtype":"m.text"},"ts":1308402723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"was thinking, basically, could add a hashmap in the message-emitter code","msgtype":"m.text"},"ts":1308402780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with a string to hold the name of each input type, and an array of strings to hold the allowed attributes for that type","msgtype":"m.text"},"ts":1308402840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: makes sense","msgtype":"m.text"},"ts":1308402841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1308402900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will try to get a patch written up for it this weekend","msgtype":"m.text"},"ts":1308402901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cool","msgtype":"m.text"},"ts":1308402960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, http://www.koderapp.com/","msgtype":"m.text"},"ts":1308403140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"after a few weeks of using an ipad, I have a hard time imaging to try to spend any significant time trying to write or edit code using it","msgtype":"m.text"},"ts":1308403200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or generally, any touchscreen device without a real keyboard","msgtype":"m.text"},"ts":1308403260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"doesn't remember if ipad gives tactile feedback when typing","msgtype":"m.emote"},"ts":1308403380000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm. should http://code.google.com/apis/webmastertools/docs/1.0/reference.html really count as a spec for \"verify-v1\" as a meta keyword?","msgtype":"m.text"},"ts":1308404220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.google.com/support/webmasters/bin/answer.py?answer=35638#3 suggests a different keyword","msgtype":"m.text"},"ts":1308404280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.google.com/support/forum/p/Webmasters/thread?tid=548b74c4eb6c44bf&hl=en suggests the old syntax still works","msgtype":"m.text"},"ts":1308404340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith, i cannot even grok how people using a smartphone without a proper keyboard can type on it. my thumb ached after i tried it for like a week.","msgtype":"m.text"},"ts":1308405600000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"also, it's slooooooow","msgtype":"m.text"},"ts":1308405601000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: yeah, though tablets have faster CPUs at least","msgtype":"m.text"},"ts":1308405840000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"faster than smartphones","msgtype":"m.text"},"ts":1308405841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: no tactile feedback on ipad","msgtype":"m.text"},"ts":1308405900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just clicking sound","msgtype":"m.text"},"ts":1308405901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, implying that would matter with editors. i use NANO(1) on my g1.","msgtype":"m.text"},"ts":1308405902000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"what's a g1?","msgtype":"m.text"},"ts":1308405960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: tactile feedback might help with typing","msgtype":"m.text"},"ts":1308405961000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith, htc dream.","msgtype":"m.text"},"ts":1308406020000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"t-mobile branded name for it, in … europe? at least germany.","msgtype":"m.text"},"ts":1308406021000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: ah","msgtype":"m.text"},"ts":1308406022000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smaug____: yeah, definitely. haptics I guess they call it","msgtype":"m.text"},"ts":1308406080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"funny enough, it's “old”, but i have not found a smartphone with a decent keyboard yet.","msgtype":"m.text"},"ts":1308406081000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1308406082000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"also, the never ones do not have cheap plastic cases, so no monster batteries that make it look like a brick :B","msgtype":"m.text"},"ts":1308406140000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"the latest spec fur Dublin Core is awfully vague","msgtype":"m.text"},"ts":1308406860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how can anyone implement software that does something useful with DC?","msgtype":"m.text"},"ts":1308406861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"do they just reverse engineer what others do?","msgtype":"m.text"},"ts":1308406862000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or does no one actually implement useful software that uses DC?","msgtype":"m.text"},"ts":1308406920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sigh. validator.nu deployment broken again. html5.validator.nu works","msgtype":"m.text"},"ts":1308407220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there any software that actually does anything useful with DC?","msgtype":"m.text"},"ts":1308407221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: what broke?","msgtype":"m.text"},"ts":1308407280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it doesn't pick up the changes when I try to deploy","msgtype":"m.text"},"ts":1308407281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1308407282000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm not aware of such software (Re: DC)","msgtype":"m.text"},"ts":1308407340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, geez","msgtype":"m.text"},"ts":1308407400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that says something, really","msgtype":"m.text"},"ts":1308407401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, if there are no widely-used apps that actually consumed that data","msgtype":"m.text"},"ts":1308407402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that I'm unaware doesn't mean they don't exist","msgtype":"m.text"},"ts":1308407460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it would make it seem like a fairly massive waste of time for people to actually be adding it","msgtype":"m.text"},"ts":1308407461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, certainly seems like there's nothing very widely-known that does anything with it","msgtype":"m.text"},"ts":1308407462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: btw, in walking through the message-emitter code, I now see that for the case of the input element, there does not seem to be any way to determine in that part of the code what its type value is","msgtype":"m.text"},"ts":1308407580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because the exceptions the jing generates don't have any methods for getting at the attribute information","msgtype":"m.text"},"ts":1308407640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"those exceptions only have methods for getting the element name and name of its parent","msgtype":"m.text"},"ts":1308407700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess I'm going to have to think about this a bit more","msgtype":"m.text"},"ts":1308407820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: :-(","msgtype":"m.text"},"ts":1308408060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"indeed :(","msgtype":"m.text"},"ts":1308408120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"may have to resort to scraping the extract","msgtype":"m.text"},"ts":1308408121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'd rather punch some abstraction holes elsewhere than scrape the extract","msgtype":"m.text"},"ts":1308408300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://dublincore.org/resources/faq/#whatsearchenginessupport","msgtype":"m.text"},"ts":1308408480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"chuckle","msgtype":"m.text"},"ts":1308408660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Blue Angel Technologies MetaStar\"","msgtype":"m.text"},"ts":1308408661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and \"Verity Search 97 Information Server\"","msgtype":"m.text"},"ts":1308408662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1308408663000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll add a method to the jing abstract exception do get all the attributes","msgtype":"m.text"},"ts":1308408780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"James would probably love that","msgtype":"m.text"},"ts":1308408781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: RSS consumors often use dc:date","msgtype":"m.text"},"ts":1308408900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: with what meaning and what value formats?","msgtype":"m.text"},"ts":1308409260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Publication date (in place of the very badly implemented pubDate). Normally supporting W3CDTF.","msgtype":"m.text"},"ts":1308409320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ok","msgtype":"m.text"},"ts":1308409380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders what software uses \"coverage\" and for what","msgtype":"m.emote"},"ts":1308409381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"Incorporated Rhino CLI\" https://github.com/stubbornella/csslint/blob/master/CHANGELOG","msgtype":"m.text"},"ts":1308421860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonder what that means","msgtype":"m.text"},"ts":1308421861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's possible to run in Rhino, I believe, looking through the commits","msgtype":"m.text"},"ts":1308421980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1308422040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"run _in_ rhino?","msgtype":"m.text"},"ts":1308422100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is what it means\"?","msgtype":"m.text"},"ts":1308422101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah.","msgtype":"m.text"},"ts":1308422102000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1308422160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"recompiling, and then first test with the mutation event replament.","msgtype":"m.text"},"ts":1308425040000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"replacement","msgtype":"m.text"},"ts":1308425041000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"<Ms2ger> We should replace it with something purty and neat, all from scratch","msgtype":"m.text"},"ts":1308426780000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Personally if I was there in 2004 I would have suggested a new version of XHTML that is tag level compatible with HTML4 and XHTML1.","msgtype":"m.text"},"ts":1308426840000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"As opposed to XHTML2 which was not.","msgtype":"m.text"},"ts":1308426841000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Unread 2345","msgtype":"m.text"},"ts":1308432180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"making progress","msgtype":"m.text"},"ts":1308432181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder when I reach 1337","msgtype":"m.text"},"ts":1308432182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Down from?","msgtype":"m.text"},"ts":1308432240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"19k","msgtype":"m.text"},"ts":1308432241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then I suspect soon :)","msgtype":"m.text"},"ts":1308432300000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the first 10k was the easiest :)","msgtype":"m.text"},"ts":1308432360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, I was happy to see you agreed with this editor :)","msgtype":"m.text"},"ts":1308432420000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://tools.ietf.org/html/draft-melnikov-mime-default-charset whoa","msgtype":"m.text"},"ts":1308432720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jreschke aligning some outdated spec with implementations rather than claiming the implementations are broken","msgtype":"m.text"},"ts":1308432780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes a note for WHATWG Weekly","msgtype":"m.emote"},"ts":1308432840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you hadn't seen it yet, https://github.com/andreasgal/dom.js","msgtype":"m.text"},"ts":1308433020000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1308433080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is this sponsored by Mozilla now he figured out just selling books does not work? :)","msgtype":"m.text"},"ts":1308433140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, David Flanagan was just the last to make a checkin","msgtype":"m.text"},"ts":1308433141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, I believe so","msgtype":"m.text"},"ts":1308433380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"very cool","msgtype":"m.text"},"ts":1308433500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, we're doing something new for once ;)","msgtype":"m.text"},"ts":1308433560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I saw in the logs experiments with removing mutation events are starting too","msgtype":"m.text"},"ts":1308433561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if the replacement needs to be part of DOM Core","msgtype":"m.text"},"ts":1308433620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Probably","msgtype":"m.text"},"ts":1308433621000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, I found and replied to the email where bz rightly claims DOM Core would not be a proper specification without mutation events","msgtype":"m.text"},"ts":1308434040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: by the way, recent discussion in here raised the question of how dom core should deal with those weird events where dispatching them causes default behavior (onclick in particular, onsubmit in everything but WebKit) ... not urgent, just mentioning it while I'm remembering it since it was off-list","msgtype":"m.text"},"ts":1308434160000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk, what do you think about document.ownerDocument, while you're in that thread?","msgtype":"m.text"},"ts":1308434220000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh yeah, I agree with Ian that submit is bug","msgtype":"m.text"},"ts":1308434221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, if we can change browsers, works for me","msgtype":"m.text"},"ts":1308434280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, that a Document owns itself makes sense to me :)","msgtype":"m.text"},"ts":1308434340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"adds a note","msgtype":"m.emote"},"ts":1308434341000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt, and I think I agree with you that we should just treat them as distinct concepts","msgtype":"m.text"},"ts":1308434342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt, dispatching and whatever you do if the event was not canceled","msgtype":"m.text"},"ts":1308434343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mpilgrim: BTW I would love for the final argument to addEventListener to be optional, so let's try to fix the platform :)","msgtype":"m.text"},"ts":1308434580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, commiserations on the perl","msgtype":"m.text"},"ts":1308434581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zewt, Ms2ger, also, I think using the empty string rather than a hidden flag is the way to go for uninitialized events","msgtype":"m.text"},"ts":1308434640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(re: long time ago)","msgtype":"m.text"},"ts":1308434641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Tell smaug that :)","msgtype":"m.text"},"ts":1308434642000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"knows no perl and was trying to add features to a largish, test-free, perl codebase the other day","msgtype":"m.emote"},"ts":1308434643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i agree, figured I'd wait until you were back to grumble further about that","msgtype":"m.text"},"ts":1308434644000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: my condolensces","msgtype":"m.text"},"ts":1308434645000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham, it's already optional","msgtype":"m.text"},"ts":1308434700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, see DOM Core","msgtype":"m.text"},"ts":1308434701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: It does have tests. About four.","msgtype":"m.text"},"ts":1308434702000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham, been hacking on WebKit's IDL parser?","msgtype":"m.text"},"ts":1308434703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Right. So let's not let mpilgrim make it non-optional in WebKit :)","msgtype":"m.text"},"ts":1308434704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Not covering the bit I was modifying though","msgtype":"m.text"},"ts":1308434760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I was *so* tempted to rewrite that bit in python  and work out how to call perl from python...","msgtype":"m.text"},"ts":1308434761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh, i rewrote all of my old perl stuff in python long ago, fortunately I've never written anything *big* in Perl","msgtype":"m.text"},"ts":1308434820000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what's the TR in many spec URLs stand for?  Technical Recommendation?","msgtype":"m.text"},"ts":1308440520000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1308440521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1308440880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Technical Report","msgtype":"m.text"},"ts":1308440881000,"senderName":"annevk","senderId":"annevk@irc"}
]