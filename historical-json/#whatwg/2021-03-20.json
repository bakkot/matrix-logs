[
{"content":{"body":"The Document type in this library https://github.com/fgnass/domino and jsdom both have a .serialize() method, but I can't seem to find where that's documented in the standards. jsdom links to a general serialization algorithm, but there's no mention that I see of the \"serialize\" method being added to Document.","msgtype":"m.text"},"ts":1616204659000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"The issue I'm running into is that the TypeScript declaration for Document, which I'm assuming is based on the standards, doesn't seem to contain \"serialize\"","msgtype":"m.text"},"ts":1616204686000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"So it's flagging it as ill-typed when I try to call serialize() on the object (even though that property definitely does exist)","msgtype":"m.text"},"ts":1616204718000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"wroathe: how does document.serialize() differ from document.documentElement.innerHTML","msgtype":"m.text"},"ts":1616205693000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it's actually similar to .outerHTML","msgtype":"m.text"},"ts":1616205816000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"I'm not clear on the distinction","msgtype":"m.text"},"ts":1616205821000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"https://github.com/jsdom/jsdom#serializing-the-document-with-serialize","msgtype":"m.text"},"ts":1616205855000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"They show it as correctly including the doctype","msgtype":"m.text"},"ts":1616205873000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"https://html.spec.whatwg.org/#serialising-html-fragments and this is the standard they reference","msgtype":"m.text"},"ts":1616205933000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"right yeah there is no standard document.serialize() method","msgtype":"m.text"},"ts":1616206179000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, that's what I was thinking","msgtype":"m.text"},"ts":1616206201000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"How odd for them to include it and not mention that it's non-standard anywhere","msgtype":"m.text"},"ts":1616206215000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"I dunno maybe I guess since the serializtion algorithm is standard, and they cite that, they figure they’re just providing a method that implements that standard algorithm","msgtype":"m.text"},"ts":1616206326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the behavior is standard at least (I guess)","msgtype":"m.text"},"ts":1616206343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yup. That seems to be the case.","msgtype":"m.text"},"ts":1616206344000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1616206348000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That domino library follows the same precedent","msgtype":"m.text"},"ts":1616206372000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"So it seems to be \"standard\" between pure-javascript implementations of the DOM standard, at least","msgtype":"m.text"},"ts":1616206396000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"right, de facto standard in that context","msgtype":"m.text"},"ts":1616206419000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just not in browsers","msgtype":"m.text"},"ts":1616206439000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Well, thanks! :)","msgtype":"m.text"},"ts":1616206505000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"I don’t know anything about domino but if a goal of domino is interoperability with code that people wrote for jsdom use, then it’d seem to make sense to add that","msgtype":"m.text"},"ts":1616206516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wroathe: cheers","msgtype":"m.text"},"ts":1616206522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know if that's their high-level goal or not. Domino doesn't claim to be fully standards-compliant anyway","msgtype":"m.text"},"ts":1616206557000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"But their lack of standards compliance is more about what they omit because it doesn't fit their stated use-case","msgtype":"m.text"},"ts":1616206574000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"And not about adding extra things like this","msgtype":"m.text"},"ts":1616206582000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Either way, I'm happy it exists. Just a little annoyed I ran into this first thing while trying out Typescript on a node.js project","msgtype":"m.text"},"ts":1616206615000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"> Domino sticks to DOM level 4, which means that Attributes do not inherit the Node interface.","msgtype":"m.text"},"ts":1616206692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1616206696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah wait I misread taht","msgtype":"m.text"},"ts":1616206716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that’s good anyway","msgtype":"m.text"},"ts":1616206741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"was just reading from https://www.npmjs.com/package/domino","msgtype":"m.text"},"ts":1616206771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yup","msgtype":"m.text"},"ts":1616206789000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"I'm playing around with the idea of creating an \"isomorphic\" app using just the DOM APIs instead of enthralling myself to the React gods.","msgtype":"m.text"},"ts":1616206841000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"using ther term “DOM level 4” is confusing","msgtype":"m.text"},"ts":1616206847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wish they would not do that","msgtype":"m.text"},"ts":1616206852000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there is no such thing as “DOM level 4”","msgtype":"m.text"},"ts":1616206866000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s just current standard DOM","msgtype":"m.text"},"ts":1616206886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm, I seem to recall something about DOM levels from back in the day though","msgtype":"m.text"},"ts":1616206904000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Maybe I'm wrong about that","msgtype":"m.text"},"ts":1616206945000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"I don't know what the current state of the world is standards-wise. I took a break from web programming in the middle of 2018, and since then it seems to me that everyone is abandoning w3c","msgtype":"m.text"},"ts":1616206978000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"nah","msgtype":"m.text"},"ts":1616207006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, I see. https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/","msgtype":"m.text"},"ts":1616207035000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"So \"level 3\" must have been the last one, and they're calling the current whatwg standard \"level 4\" for some reason","msgtype":"m.text"},"ts":1616207052000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"MikeSmith: Care to elaborate on that \"nah\"? I'm guessing you know what the politics are much better than I do.","msgtype":"m.text"},"ts":1616207095000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"yeah it was not called \"level 4\" even in the bad W3C DOM fork","msgtype":"m.text"},"ts":1616207096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I meant that DOM and HTML technical work has actually not been happening at the W3C for a quite a long time now","msgtype":"m.text"},"ts":1616207123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suppose yeah. I seem to recall the W3C hosting the HTML5 standard for a long time though","msgtype":"m.text"},"ts":1616207171000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"it has instead always been happening at the WHATWG — the actual technical work","msgtype":"m.text"},"ts":1616207173000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"There was the current HTML5 \"recommendation\" spec on the w3c site, and then another more current HTML5 spec on the whatwg site, from what I remember","msgtype":"m.text"},"ts":1616207204000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1616207211000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"W3C HTML started out in 2007 as a friendly joint effort with the WHATWG","msgtype":"m.text"},"ts":1616207259000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I started web programming around that time","msgtype":"m.text"},"ts":1616207273000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"yeah it was a long time ago now","msgtype":"m.text"},"ts":1616207292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway, after 2012 it basically became a hostile fork of the actual HTML standard at WHATWG","msgtype":"m.text"},"ts":1616207327000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and it took us a lot of years to get that situation corrected","msgtype":"m.text"},"ts":1616207349000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it’s now corrected","msgtype":"m.text"},"ts":1616207361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"basically","msgtype":"m.text"},"ts":1616207363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and some thing for the DOM spec","msgtype":"m.text"},"ts":1616207371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but anyway, meanwhile at W3C, the CSS work just continued on successfully, unaffected by the HTML/DOM drama","msgtype":"m.text"},"ts":1616207423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well they have enough drama of their own","msgtype":"m.text"},"ts":1616207438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Haha. I can only imagine.","msgtype":"m.text"},"ts":1616207451000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"from recent years, the specs in the W3C WebAppSec working group are another W3C success story","msgtype":"m.text"},"ts":1616207512000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mostly","msgtype":"m.text"},"ts":1616207520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I noticed recently that service workers seem to be reinventing the wheel of HTTP caching. It's made me start thinking that what JS programmers really want is for every detail of programming for a browser to be subsumed into JS (including HTML and CSS)","msgtype":"m.text"},"ts":1616207527000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Content Security Policy for one","msgtype":"m.text"},"ts":1616207530000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well there is a good reason for service workers that make it much more than just HTTP caching","msgtype":"m.text"},"ts":1616207574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh? This was just my first impression. I'm definitely still looking into what they offer beyond the simple caching examples I saw.","msgtype":"m.text"},"ts":1616207602000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"yeah I recommend reading up on it more","msgtype":"m.text"},"ts":1616207641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it solves a lot of problems and pain for developers","msgtype":"m.text"},"ts":1616207657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: If they're more powerful than HTTP caching wouldn't that just indicate that HTTP caching needs to evolve?","msgtype":"m.text"},"ts":1616207691000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"MikeSmith: It seems like it should be a protocol concern, and not a concern of a scripting language","msgtype":"m.text"},"ts":1616207708000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"they are two different things","msgtype":"m.text"},"ts":1616207717000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"service workers is not a replacemen for HTTP caching","msgtype":"m.text"},"ts":1616207738000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wroathe: One of the ways they're more powerful is that you can generate responses on the fly. That's not a caching concern","msgtype":"m.text"},"ts":1616207741000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"The examples I've seen this far all revolve around building offline-able apps by caching assets on the client","msgtype":"m.text"},"ts":1616207744000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"andreubotella: Oh, I see","msgtype":"m.text"},"ts":1616207753000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"andreubotella: That is interesting... Lots of implications there.","msgtype":"m.text"},"ts":1616207786000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Take this, for example: https://developers.google.com/web/tools/workbox. I haven't looked too far into the details of what they mean by \"background sync\", but the examples they give all revolve around caching","msgtype":"m.text"},"ts":1616207868000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"wroathe: and as far as subsuming every detail of programming for a browser into JS, the work is more about not having a bunch of secret magic happening in browsers that developers can’t hook into when they want — it’s about identifying set of primitives that developers can innovate on top of, and exposing those to JS","msgtype":"m.text"},"ts":1616207873000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: But to some degree we hook into the behavior of browsers through the protocols themselves, don't we? For example, sending a Cache-Control header in a response","msgtype":"m.text"},"ts":1616207955000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"MikeSmith: It seems inelegant to me to have two models for asset caching, instead of just blessing one and making it as powerful as it needs to be.","msgtype":"m.text"},"ts":1616207989000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"wroathe: as far as service workers go, I guess the thing is, if in your app development you don’t suffer from the pain and problems that service workers solve, then you can count yourself lucky and just safely ignore service workes","msgtype":"m.text"},"ts":1616207992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah, inelegant","msgtype":"m.text"},"ts":1616208010000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah well with the web platform we are already way past being elegant","msgtype":"m.text"},"ts":1616208040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"LOL :)","msgtype":"m.text"},"ts":1616208047000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Fair enough. Still felt worth saying out loud.","msgtype":"m.text"},"ts":1616208057000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"yeah we have holes punched in abstractions all over the place","msgtype":"m.text"},"ts":1616208075000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"new stuff less so","msgtype":"m.text"},"ts":1616208087000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the problem with building the new stuff is that we have to build it all on top of this creaky foundation that we cannot replace","msgtype":"m.text"},"ts":1616208123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What I'm wondering is if it makes sense to use HTTP caching if your service-worker enabled application already goes through and caches everything of interest anyway","msgtype":"m.text"},"ts":1616208133000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Cache on cache on cache on cache","msgtype":"m.text"},"ts":1616208156000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"well HTTP caching is something that most developers don’t need to spend much time worrying abou","msgtype":"m.text"},"ts":1616208172000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ideally it just all gets handled automatically by the browser","msgtype":"m.text"},"ts":1616208187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, and on the workbox thing... AFAiK the \"prefetching\" thing they're showing can also be implemented via rel=\"prefetch\" <links> and HTTP caching","msgtype":"m.text"},"ts":1616208228000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"wroathe: https://www.w3.org/TR/html-design-principles/ is something worth reading through, to understand some of the high-level principles that have guided the work","msgtype":"m.text"},"ts":1616208320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for example, https://www.w3.org/TR/html-design-principles/#solve-real-problems","msgtype":"m.text"},"ts":1616208329000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Cool. I'll give it a look.","msgtype":"m.text"},"ts":1616208340000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"> Abstract architectures that don't address an existing need are less favored than pragmatic solutions to problems that web content faces today.","msgtype":"m.text"},"ts":1616208344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/TR/html-design-principles/#priority-of-constituencies","msgtype":"m.text"},"ts":1616208363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> In case of conflict, consider users over authors over implementors over specifiers over theoretical purity.","msgtype":"m.text"},"ts":1616208373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Also, on the subsuming thing... A recent development I noticed is that people have started using CSS \"modules\", whereby importing a CSS file creates an object that lets a web component reference classes. It's starting to feel like what we really want is a way to define a DSL for CSS within Javascript","msgtype":"m.text"},"ts":1616208409000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"MikeSmith: I'll definitely read this, but is there something I should be taking away from those two passages you just shared?","msgtype":"m.text"},"ts":1616208498000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"MikeSmith: I'm not naive enough to think that all of this will always be perfect, if that's what you're getting at :P","msgtype":"m.text"},"ts":1616208518000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"Nor am I criticizing the work of anyone here. I'm just thinking out loud about some of my recent observations of the web programming world lately.","msgtype":"m.text"},"ts":1616208569000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"elegance gets sacrificed making things work well for users — prioritizing users first — and then secondarily, making things work well for developers (since they are they ones who actually use the stuff we make, to solve problems for their users)","msgtype":"m.text"},"ts":1616208623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and concerns of everybody other than users and developers are a distant third place","msgtype":"m.text"},"ts":1616208654000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well, I'm a user and a developer :P","msgtype":"m.text"},"ts":1616208680000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"with theoretical purity hardly even in the running","msgtype":"m.text"},"ts":1616208683000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah we are all users of course","msgtype":"m.text"},"ts":1616208703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well, there's a difference between theoretical purity and just pointing out potential architectural shortcomings","msgtype":"m.text"},"ts":1616208712000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1616208718000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Anyway, I appreciate the work you do, and also thanks for the help on tracking down that serialization thing.","msgtype":"m.text"},"ts":1616208796000,"senderName":"wroathe","senderId":"wroathe@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1616209013000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wroathe: the JSDOM library's serialize() method is on the non-standard container JSDOM class, not on the standard Document class.","msgtype":"m.text"},"ts":1616250577000,"senderName":"Domenic","senderId":"Domenic@irc"}
]