[
{"content":{"body":"JakeA: looks like Edge 16 shipped abortable fetch() first... sadly the glitch demo doesn't work since they don't support TextDecoder()","msgtype":"m.text"},"ts":1508332894000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I remixed it to work... https://fetch-abort-demo-edge.glitch.me/","msgtype":"m.text"},"ts":1508334442000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I also had to drop the pre.append() stuff","msgtype":"m.text"},"ts":1508334450000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"did someone not have a semi-maintained fork of Anolis somehwere?","msgtype":"m.text"},"ts":1508335874000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah, Ms2ger, at https://bitbucket.org/ms2ger/anolis","msgtype":"m.text"},"ts":1508335954000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wanderview: ohhh cheers! Will tweet that when I'm back from holidays","msgtype":"m.text"},"ts":1508339237000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, right... enjoy your family not-chrome-dev-summit event!","msgtype":"m.text"},"ts":1508339472000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and safar TP 42 seems to have initial bits landing for fetch() abort as well","msgtype":"m.text"},"ts":1508347954000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"safari","msgtype":"m.text"},"ts":1508347956000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Many docs in MDN lists type as DOMString where the specs says USVString. Are they interchangeable since they both indicate a JavaScript String?","msgtype":"m.text"},"ts":1508351034000,"senderName":"jsx","senderId":"jsx@irc"},
{"content":{"body":"jsx: Technically a USVString doesn't allow unpaired surrogate codepoints, so it's not the full value space of DOMString.","msgtype":"m.text"},"ts":1508351451000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But for all strings you're ever going to construct for actual text, yeah, they're equivalent. (Only when you're using JS strings as a byte-storage type, or have some weirdness like a text stream that got interrupted partway thru, will you see an unpaired surrogate show up.)","msgtype":"m.text"},"ts":1508351500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Hmm, ok. So I'll leave it be.","msgtype":"m.text"},"ts":1508351729000,"senderName":"jsx","senderId":"jsx@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1508351732000,"senderName":"jsx","senderId":"jsx@irc"},
{"content":{"body":"(CSSOM is currently using CSSOMString, which is defined as `(DOMString or USVString)`, because we want to use USVString for all \"real text\", but some engines currently don't have good optimizations for applying that restriction (while others do).)","msgtype":"m.text"},"ts":1508351798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jsx: also USVString is a relatively new thing","msgtype":"m.text"},"ts":1508351868000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Excuse the noob question: So is USVString a subset of DOMString?","msgtype":"m.text"},"ts":1508351888000,"senderName":"jsx","senderId":"jsx@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1508351895000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like I said, it's a DOMString that just doesn't allow unpaired surrogates in itself.","msgtype":"m.text"},"ts":1508351913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok..","msgtype":"m.text"},"ts":1508351937000,"senderName":"jsx","senderId":"jsx@irc"},
{"content":{"body":"(Aka only allows actual unicode codepoints, not arbitrary bytes.)","msgtype":"m.text"},"ts":1508351938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not sure \"allow\" is the right word. You can still pass strings with unpaired surrogates to methods accepting USVStrings for example, they just get removed before the underlying algorithms handle the strings","msgtype":"m.text"},"ts":1508351948000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Ah, I couldn't remember if violating the restriction threw an error or just converted.","msgtype":"m.text"},"ts":1508351998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://heycam.github.io/webidl/#dfn-obtain-unicode is how a DOMString is converted to a USVString, no throwing in there","msgtype":"m.text"},"ts":1508352036000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"+1 Mek","msgtype":"m.text"},"ts":1508354766000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I found https://infra.spec.whatwg.org/#strings but to be fair I did have a large hand in helping write it","msgtype":"m.text"},"ts":1508354803000,"senderName":"Domenic","senderId":"Domenic@irc"}
]