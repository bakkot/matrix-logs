[
{"content":{"body":"A localName of an element is its tag name, right?","msgtype":"m.text"},"ts":1525416154000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Specifically, HTMLTrackElement's local name is not `texttrack`, right?","msgtype":"m.text"},"ts":1525416176000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Chromium's resource timing initiatorType implementation says it is, and I want to make sure before changing","msgtype":"m.text"},"ts":1525416227000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it's \"track\"","msgtype":"m.text"},"ts":1525416449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I wouldn't say tag name though, since that's rather ambiguous and incorrect depending on context)","msgtype":"m.text"},"ts":1525416476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: having said that, resource timing shouldn't have access to element names","msgtype":"m.text"},"ts":1525416506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: that's a pretty big layering violation","msgtype":"m.text"},"ts":1525416512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's also useless, but this is what current implementations do...","msgtype":"m.text"},"ts":1525416537000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I think that basically means we have to pass that information to Fetch too...","msgtype":"m.text"},"ts":1525416587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty gross","msgtype":"m.text"},"ts":1525416590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we can try to deprecate it, but it's being used and currently there's no alternative","msgtype":"m.text"},"ts":1525416854000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"What the use case really needs is destination + some form of Fetch ID to point at an initiator resource","msgtype":"m.text"},"ts":1525416891000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"the tag name helps no one, other than being a heuristic for the destination","msgtype":"m.text"},"ts":1525416928000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: I wonder if we could have a simple mapping of destination to some element name that will be compliant enough for this to work without referring to the local name","msgtype":"m.text"},"ts":1525417003000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"s/compliant/compatible/","msgtype":"m.text"},"ts":1525417011000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"tbh, this is what I'm currently doing in the implementation to support the \"audio\" and \"video\" initiators (instead of piping the local name through half a dozen abstraction layers)","msgtype":"m.text"},"ts":1525417152000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: that would be nice","msgtype":"m.text"},"ts":1525417340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: could maybe use initiator for the remainder","msgtype":"m.text"},"ts":1525417348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1525417364000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"images would be tricky, as currently they report differently if they were triggered by HTMLImageElement, HTMLInputElement or as CSS background images :/","msgtype":"m.text"},"ts":1525417431000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Right, so you'd need initiator for that","msgtype":"m.text"},"ts":1525417468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still doable. Most tricky thing with all of that is that image loading isn't properly abstracted yet and CSS doesn't define fetching in any kind of detail...","msgtype":"m.text"},"ts":1525417502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We could start tackling some of that though, at least reverse the initators we know we need, add them to the spec, change resource timing around a bit to say what it actually exposes","msgtype":"m.text"},"ts":1525417585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah...","msgtype":"m.text"},"ts":1525417621000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'd be happier if we could avoid all that busy work and just remove initiatorType altogether","msgtype":"m.text"},"ts":1525417655000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Maybe I'll add a use counter to see how feasible this pipe dream is","msgtype":"m.text"},"ts":1525417686000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"sg","msgtype":"m.text"},"ts":1525418106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a bit annoying the style to put scripts to separate file even in some very small wpt tests","msgtype":"m.text"},"ts":1525435895000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: for view source?","msgtype":"m.text"},"ts":1525436252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I've been wondering if we should improve that for any.js and window.js; it seems that sometimes we could just inline the script instead of referencing it","msgtype":"m.text"},"ts":1525436277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, for view-source, for debugging","msgtype":"m.text"},"ts":1525436587000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wanderview: ah, thanks for catching that","msgtype":"m.text"},"ts":1525443596000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: np... I only mentioned it since I think you said you didn't like the cleanup handler stuff since it doesn't wait for async functions right now... so I wanted to give you a chance to r- it","msgtype":"m.text"},"ts":1525443686000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"personally I'm happy to use the cleanup handler stuff even without async waiting as long as there is a unique scope","msgtype":"m.text"},"ts":1525443713000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think it pushes the need for async cleanup support","msgtype":"m.text"},"ts":1525443718000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but yeah, if it works, fiiiine :D","msgtype":"m.text"},"ts":1525443725000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe if you need a break from google io...","msgtype":"m.text"},"ts":1525443758000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1525444645000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/blob/master/dom/events/relatedTarget.window.js#L47 why is that right?","msgtype":"m.text"},"ts":1525444680000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"event is dispatched to body and listener is in shadowchild","msgtype":"m.text"},"ts":1525444696000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"am I missing something","msgtype":"m.text"},"ts":1525444699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: looks wrong indeed","msgtype":"m.text"},"ts":1525445572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I could fix it while looking this stuff on gecko side","msgtype":"m.text"},"ts":1525445617000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just wondering how...","msgtype":"m.text"},"ts":1525445625000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"add another shadowchild","msgtype":"m.text"},"ts":1525445637000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"add listener there","msgtype":"m.text"},"ts":1525445642000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and dispatch event to that","msgtype":"m.text"},"ts":1525445648000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: add listener on body instead?","msgtype":"m.text"},"ts":1525445650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something like that","msgtype":"m.text"},"ts":1525445650000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or that","msgtype":"m.text"},"ts":1525445667000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"with {once: true}","msgtype":"m.text"},"ts":1525445673000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: also did we resolve all open questions here? Is only window.event unclear still?","msgtype":"m.text"},"ts":1525445692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, gecko doesn't have that yet","msgtype":"m.text"},"ts":1525445706000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and touch.target handling is still ongoing in impl  (and there are spec issues on touch stuff)","msgtype":"m.text"},"ts":1525445728000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, but it seems there's no issues left in DOM","msgtype":"m.text"},"ts":1525445907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, there's event issues, just not related to dispatch","msgtype":"m.text"},"ts":1525445919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: if you want I can fix these tests too, but would appreciate an issue somewhere","msgtype":"m.text"},"ts":1525445950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, perhaps easier if I just fix this minor issue while fixing gecko impl to follow the spec","msgtype":"m.text"},"ts":1525445984000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1525445993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I can file a testing issue if that is needed for some tracking","msgtype":"m.text"},"ts":1525446006000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's not","msgtype":"m.text"},"ts":1525446016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: kochi: if you're fixing event dispatch in Blink see above and let smaug____ know please","msgtype":"m.text"},"ts":1525446052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, that activation behavior is tricky to fix in gecko","msgtype":"m.text"},"ts":1525446270000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"clearing targets before activation behavior","msgtype":"m.text"},"ts":1525446282000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I’m glad I put effort into writing that test 😊","msgtype":"m.text"},"ts":1525446380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, another issue with that test with event listener on wrong target","msgtype":"m.text"},"ts":1525448296000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"relatedTarget is retargeted to host","msgtype":"m.text"},"ts":1525448309000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"which is not in shadow dom","msgtype":"m.text"},"ts":1525448315000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess I need to keep the event shadow dom","msgtype":"m.text"},"ts":1525448340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but then the test doesn't test what it is supposed to test","msgtype":"m.text"},"ts":1525448528000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but don't know anything better now","msgtype":"m.text"},"ts":1525448654000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Issue? I also vaguely recall wondering if not clearing when not composed would be better","msgtype":"m.text"},"ts":1525448791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just seen <!--FETCH--> in the media elements section of the HTML spec. Does this have any kind of special meaning?","msgtype":"m.text"},"ts":1525470359000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that looks like one of the topic markers that Hixie added years ago to enable people to get notified when he made changes to particular part of the spec","msgtype":"m.text"},"ts":1525473310000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he set up some related tooling back then","msgtype":"m.text"},"ts":1525473323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Gotcha, cheers!","msgtype":"m.text"},"ts":1525473354000,"senderName":"JakeA","senderId":"JakeA@irc"}
]