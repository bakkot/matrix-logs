[
{"content":{"body":"Hmm, git rebase has always worked for me, but I just rebased something and I noticed it reintroduced text I had removed, prolly due to reindenting :/","msgtype":"m.text"},"ts":1613031180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there an issue anywhere for defining a concept that maps to 'browser tab' even when the underlying context changes (e.g. due to cross-site navigation)?","msgtype":"m.text"},"ts":1613037595000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah, JakeA","msgtype":"m.text"},"ts":1613037633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: more seriously, \"browsing session\" is what HTML calls this at the moment (and does not yet define)","msgtype":"m.text"},"ts":1613037670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: https://github.com/whatwg/html/issues/5767","msgtype":"m.text"},"ts":1613037736000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: and my current noodlings https://github.com/whatwg/html/pull/6315. I'm going to make a little presentations to better communicate what I'm trying to do, which hopefully I'll have ready in the next day or do. Depends how long the diagrams take.","msgtype":"m.text"},"ts":1613037794000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Cool. I'm excited about living in a world where a non-zero number of people actually understand how this stuff works ;)","msgtype":"m.text"},"ts":1613038043000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham + annevk: My current plan is to call the tab/window a \"top-level navigable\". A browsing context will have an associated session, but multiple browsing contexts may share the same session. A tab/window may span multiple sessions due to https://github.com/whatwg/html/issues/6356#issuecomment-772392373","msgtype":"m.text"},"ts":1613038090000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: though FWIW, your specific example would not actually cross the browsing context boundary (you need COOP or the user doing a navigation for that)","msgtype":"m.text"},"ts":1613038110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd say I count as 0.2 people who understand this stuff","msgtype":"m.text"},"ts":1613038112000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And for context, my immediate need here is something that maps onto WebDriver's \"switch to window\" concept, which currently pretends there's a 1:1 mapping between top-level navigables and top-level browsing contexts","msgtype":"m.text"},"ts":1613038235000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also 0.2 > 0","msgtype":"m.text"},"ts":1613038273000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe get that on a shirt ;p","msgtype":"m.text"},"ts":1613038284000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: I guess that's reasonable, though a little weird to have a concept that can only be observed through UI","msgtype":"m.text"},"ts":1613038303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want to spec that it'd be non-compliant if the browser deviated from joint session history in a way that'd be observable from the page. I don't want to create a situation where the UA can roll the dice when it comes to navigating iframes just because the back button was used","msgtype":"m.text"},"ts":1613038436000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But it might also be weird (if not weirder) to not have that concept and constantly have to explain the difference","msgtype":"m.text"},"ts":1613038441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I want to make it clear which set of rules the UI should bypass and which it should not","msgtype":"m.text"},"ts":1613038497000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Like, allowing the back button to cross a session boundary is ok, but allowing the back button to put navigables in a state that violates joint session history is bad","msgtype":"m.text"},"ts":1613038544000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It seems helpful to me if the specs cover the behaviour of the UI here, even if the behaviour of DOM APIs is different. I totally foresee a future where people are filing bugs on browser automation tools asking why the back() method doesn't work like the browser UI (currently that's specified to basically call history.back())","msgtype":"m.text"},"ts":1613038687000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think Domenic would like a way to make iframes get out of sync with joint session history (as part of making a better history API), but it isn't yet clear to me how that would work alongside other things that _do_ follow joint session history. Maybe a better model would be an attribute on iframes that excludes them from joint session history, and a meta tag that makes all iframes on the page behave like that by default.","msgtype":"m.text"},"ts":1613038687000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we need that for shadow trees, if we can still do it retroactively","msgtype":"m.text"},"ts":1613038746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohhh interesting!!","msgtype":"m.text"},"ts":1613038764000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's kind of a bad encapsulation leak currently","msgtype":"m.text"},"ts":1613038767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/html/issues/763","msgtype":"m.text"},"ts":1613038829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I guess that talks about some other issues as well, but the biggest is session history)","msgtype":"m.text"},"ts":1613038855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"the biggest issue is session history\" is now tattoo'd across my belly","msgtype":"m.text"},"ts":1613038999000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I've seen a lot of browser developers dashed on the rocks of session history, so good luck ;)","msgtype":"m.text"},"ts":1613039646000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: wanderview: https://github.com/whatwg/fetch/issues/505#issuecomment-777409833","msgtype":"m.text"},"ts":1613045724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: HTML's navigate algorithm would only ever invoke Fetch's redirect algorithm while in parallel, right? If I make that algorithm return a response HTML won't have to pass any additional parameters at all and we'd fix the bug where Fetch's redirect algorithm can return a network error","msgtype":"m.text"},"ts":1613060390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes to the first part, certainly...","msgtype":"m.text"},"ts":1613060439000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"HTML also waits for the response (from a task source though which makes no sense) while in parallel so as far as I can tell it's a no-op change that is more correct","msgtype":"m.text"},"ts":1613060512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wanted to get to looking at HTML fetch invocations today, but the day wasn't long enough and also URL fragments in Fetch took longer than anticipated","msgtype":"m.text"},"ts":1613060583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, I see, yeah, cleaning up those two steps would be nice","msgtype":"m.text"},"ts":1613060586000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hopefully tomorrow, but I will ready the Fetch side for this redirect thing now","msgtype":"m.text"},"ts":1613060623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so what I meant is that even if you fetch things from in parallel, you don't need the awkward waiting thing with the new callbacks since you can just do your thing from the parallel queue callbacks directly","msgtype":"m.text"},"ts":1613061517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh... I don't really understand the parallel queue stuff, I was hoping we could continue just waiting","msgtype":"m.text"},"ts":1613061541000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if you want to wait you'd have to do something like XHR does, but I'm not sure why you would, but if HTML doesn't have any such callers maybe it doesn't matter","msgtype":"m.text"},"ts":1613061637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought it was just going to return us a response, so we didn't even have to wait","msgtype":"m.text"},"ts":1613061655000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for navigate-redirect, yes","msgtype":"m.text"},"ts":1613061682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1613061691000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, it sounds like we won't need the parallel-queue stuff very much, is my takeaway","msgtype":"m.text"},"ts":1613061715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that's a very special entry point ðŸ™‚","msgtype":"m.text"},"ts":1613061721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only case where we fetch in parallel, at least that Ctrl+F \"Fetch request\" can find, is from within navigate","msgtype":"m.text"},"ts":1613061733000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe it's just background fetch","msgtype":"m.text"},"ts":1613061741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I needed it for WebSockets","msgtype":"m.text"},"ts":1613061761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: hmm, if I search for synchronous flag in HTML there's a fair number of hits","msgtype":"m.text"},"ts":1613061809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, that's a better search term...","msgtype":"m.text"},"ts":1613061826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, \"fetching request\"","msgtype":"m.text"},"ts":1613061849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"A lot can be restructured though I think","msgtype":"m.text"},"ts":1613061868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But they seem mostly easy to refactor and will improve as a result","msgtype":"m.text"},"ts":1613061870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. <link> and <a download>","msgtype":"m.text"},"ts":1613061872000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1613061877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm really glad that thanks to JakeA I found a way to solve that issue as I haven't found a case yet that isn't improved with this new setup","msgtype":"m.text"},"ts":1613061934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then what remains is better terminate / better body read / better documentation, which all seem within reach","msgtype":"m.text"},"ts":1613061972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1613061973000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm really really looking forward to better body read","msgtype":"m.text"},"ts":1613062111000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's basically the last set of steps of https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send, right? With some hand-waving about the realms of promises and whether there's even JavaScript on the thread...","msgtype":"m.text"},"ts":1613062333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(better body should shorten xhr and ideally remove all stream incantations from it, but maybe that's not feasible for some of it)","msgtype":"m.text"},"ts":1613062393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You mean the sync version? Well, that's a bit un-good for cases like fetching scripts...","msgtype":"m.text"},"ts":1613062458000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What I'd like for fetching scripts is something like my end-of-body callback just having access to a byte sequence with a single sync call, somehow","msgtype":"m.text"},"ts":1613062501000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, I just mean as the low-level stuff around which we'd wrap a sync version for in parallel and a callback that we hand the bytes + networking task source","msgtype":"m.text"},"ts":1613063127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps we should even get rid of response end-of-body if we have that...","msgtype":"m.text"},"ts":1613063170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if I don't see any major problems with HTML tomorrow, is it fine if I merge the Fetch stuff? I worry about bitrot a bit","msgtype":"m.text"},"ts":1613067122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, Fetch is looking good to me, and I'm pretty reassured on HTML integration being reasonable.","msgtype":"m.text"},"ts":1613067343000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ooh, maybe if you pass in end-of-body weâ€™ll call it with a response and bytes; will sleep on this","msgtype":"m.text"},"ts":1613072215000,"senderName":"annevk","senderId":"annevk@irc"}
]