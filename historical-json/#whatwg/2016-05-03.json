[
{"content":{"body":"do any UAs support the as= attribute in e.g. <link rel=preload as=video href=...> ?","msgtype":"m.text"},"ts":1462241730000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and does anybody know the point of that attribute?","msgtype":"m.text"},"ts":1462241759000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it basically just seems to repeat the element name","msgtype":"m.text"},"ts":1462241783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<link rel=preload as=script href=...>, <link rel=preload as=style href=...> etc","msgtype":"m.text"},"ts":1462241811000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://w3c.github.io/preload/#attributes","msgtype":"m.text"},"ts":1462241816000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"igrigorik_:","msgtype":"m.text"},"ts":1462241865000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"igrigorik_: ⬆","msgtype":"m.text"},"ts":1462241879000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am trying to decide whether to add support for as= to the HTML checker","msgtype":"m.text"},"ts":1462241918000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/validator/validator/issues/276#issuecomment-216287257","msgtype":"m.text"},"ts":1462241948000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Chrome supports that to some extent. yoav will have details.","msgtype":"m.text"},"ts":1462260683000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"MikeSmith: Yeah, Chrome supports it and the point is to start a Fetch for that resource with the proper destination so that it could be matched when later requested by an element uses that resource, fetched while taking the proper CSP directives into account, and with the right request headers (e.g. Accept)","msgtype":"m.text"},"ts":1462260932000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"`as` is the main difference between preload and its (not-very-useful) predecessor subresource","msgtype":"m.text"},"ts":1462260982000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"what happend to the whole \"browsers try not to break pages\" thing","msgtype":"m.text"},"ts":1462261273000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(re: Object.observe suddenly going away in a chrome update and now android systrace is broken, and now I get to do the extra hazardous thing of updating Android tools near the end of a project and hoping everything doesn't explode)","msgtype":"m.text"},"ts":1462261436000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: they try, but not always succeed?","msgtype":"m.text"},"ts":1462261689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: I think Object.observe() had a deprecation period of several releases","msgtype":"m.text"},"ts":1462261714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: and it was never implemented by more than one browser, another sign it was rather unstable","msgtype":"m.text"},"ts":1462261728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all I care about at the moment is that a tool I was using regularly just stopped working, and as far as I can tell I'm just screwed","msgtype":"m.text"},"ts":1462261752000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: spam at https://www.w3.org/Bugs/Public/show_bug.cgi?id=12845#c39","msgtype":"m.text"},"ts":1462262661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"google sure is going to a lot of effort to make sure I can't do my job","msgtype":"m.text"},"ts":1462263141000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"whats wrong zewt?","msgtype":"m.text"},"ts":1462263504000,"senderName":"Cablegunmaster","senderId":"Cablegunmaster@irc"},
{"content":{"body":"annevk, yt?","msgtype":"m.text"},"ts":1462266902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what's up?","msgtype":"m.text"},"ts":1462268903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was stupid enough to look into about:blank","msgtype":"m.text"},"ts":1462268934000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do you think it would make sense to defined Document's \"ready for post-load tasks\" and \"completely loaded\" flag in DOM? Then we could set then explicitly for createDocument/createHTMLDocument/new Document()","msgtype":"m.text"},"ts":1462269056000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"HTML seems to miss new Document() right now","msgtype":"m.text"},"ts":1462269066000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: a) it's a W3C WG for better or worse","msgtype":"m.text"},"ts":1462269504000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"w3c specs can reference whatwg specs","msgtype":"m.text"},"ts":1462269528000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: and b) I think documenting all the places where the W3C html spec doesn't even satisfy the requirements of other W3C specs is a worthwhile execise","msgtype":"m.text"},"ts":1462269530000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"it's problematic once you want to move beyond WD","msgtype":"m.text"},"ts":1462269553000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Ms2ger: sounds reasonable","msgtype":"m.text"},"ts":1462269557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see the SRI stuff currently going on","msgtype":"m.text"},"ts":1462269563000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-webappsec/2016May/0002.html","msgtype":"m.text"},"ts":1462269597000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Seems like it's not problematic?","msgtype":"m.text"},"ts":1462269630000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyway","msgtype":"m.text"},"ts":1462269647000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i'm not saying you're wrong","msgtype":"m.text"},"ts":1462269765000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'm saying you're having the discussion with the wrong person","msgtype":"m.text"},"ts":1462269771000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"you should totally bring this up on the mailing list","msgtype":"m.text"},"ts":1462269792000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I don't have time for that","msgtype":"m.text"},"ts":1462269999000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Also, the mailing list post you linked seemed to completely disprove your point","msgtype":"m.text"},"ts":1462270021000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"whaat, browsers supporting focusin/out seem to dispatch them at really odd time","msgtype":"m.text"},"ts":1462276638000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"totally against the spec","msgtype":"m.text"},"ts":1462276646000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Is that the kind of specification where you have to read between the lines? Because last I checked they were not really defined... There's an open issue against HTML for them.","msgtype":"m.text"},"ts":1462276830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is defined","msgtype":"m.text"},"ts":1462276946000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I'm seeing focusin dispatched after focus","msgtype":"m.text"},"ts":1462277005000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"am I on crack here","msgtype":"m.text"},"ts":1462277033000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://mozilla.pettay.fi/moztests/focusin_focusout.html is my testcase","msgtype":"m.text"},"ts":1462277041000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Defined where?","msgtype":"m.text"},"ts":1462277123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That resource doesn't load for me by the way","msgtype":"m.text"},"ts":1462277156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: defined in UI events spec","msgtype":"m.text"},"ts":1462277207000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, what happened to pettay.fi","msgtype":"m.text"},"ts":1462277214000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that is rather hand wavy, e.g., it doesn't define the interaction with focus()/blur(), presumably not with autofocus=\"\" either, or click(), etc.","msgtype":"m.text"},"ts":1462277261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, sure, but at least it defines whether focusin should happen before focus etc","msgtype":"m.text"},"ts":1462277280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess that is something...","msgtype":"m.text"},"ts":1462277301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: any ideas for an alternative name for rootNode? Are you fine with the suggested alternatives? E.g., treeTop?","msgtype":"m.text"},"ts":1462278185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"treeTop would be ok","msgtype":"m.text"},"ts":1462278233000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not very great, but I don't think we can really find anything much better","msgtype":"m.text"},"ts":1462278271000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders what's wrong with rootNode","msgtype":"m.emote"},"ts":1462278496000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(treeTop sounds very strange to me)","msgtype":"m.text"},"ts":1462278506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"isn't following wherever this discussion is happening","msgtype":"m.emote"},"ts":1462278530000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: rootNode isn't compatible with the web","msgtype":"m.text"},"ts":1462278576000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is being used by script libraries, apparently","msgtype":"m.text"},"ts":1462278591000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: it's rather sad, https://github.com/whatwg/dom/issues/241","msgtype":"m.text"},"ts":1462278634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Doh","msgtype":"m.text"},"ts":1462278644000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"when did the prescan move to being 1024? I remember it being 512, and that's what html5lib implements.","msgtype":"m.text"},"ts":1462278851000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"FWIW I think the reason that treeTop doesn't match is because it's a screwy mental model were the top of the tree and the root of the tree are the same point","msgtype":"m.text"},"ts":1462278853000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: interesting, why is that the wrong model?","msgtype":"m.text"},"ts":1462279037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: note that furthestAncestor doesn't work for the root itself","msgtype":"m.text"},"ts":1462279068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Why doesn't it work for the root iself?","msgtype":"m.text"},"ts":1462279086000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you want root.rootNode === root","msgtype":"m.text"},"ts":1462279110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm comfortable with the root being its own furtestAncestor","msgtype":"m.text"},"ts":1462279132000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hmm, the spec calls those inclusive ancestors","msgtype":"m.text"},"ts":1462279147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"More comfortable than I am with the top and the bottom of the tree being the same point","msgtype":"m.text"},"ts":1462279155000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: Well no one reads the spec (apart from like a dozen implementors and language lawyers), so that doesn't seem like a very strong argument ;)","msgtype":"m.text"},"ts":1462279185000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I suppose, but if ancestor is used elsewhere and means something different it'll be confusing","msgtype":"m.text"},"ts":1462279257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it used elsewhere?","msgtype":"m.text"},"ts":1462279274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(apart from XPath)","msgtype":"m.text"},"ts":1462279318000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't know","msgtype":"m.text"},"ts":1462279452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anybody got an opinion about disallowing alert and friends in microtasks?","msgtype":"m.text"},"ts":1462279690000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: How about disallowing them in macrotasks too?","msgtype":"m.text"},"ts":1462279704000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"the reasoning is that while an alert is displayed, if you e.g. resize the browser windows, all browser dispatch events at the web page","msgtype":"m.text"},"ts":1462279714000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"which kinda violates the idea of microtasks being ran outside of the main message loop","msgtype":"m.text"},"ts":1462279728000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"mkwst: working on that :)","msgtype":"m.text"},"ts":1462279732000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: what kind of events?","msgtype":"m.text"},"ts":1462279763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: oh, I see what you mean","msgtype":"m.text"},"ts":1462279794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"resize for example","msgtype":"m.text"},"ts":1462279845000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"or whatever happens to come in on the message loop","msgtype":"m.text"},"ts":1462279852000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'm toying with the idea of blanked disallowing those apis: https://codereview.chromium.org/1940253002","msgtype":"m.text"},"ts":1462279883000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"can't imagine much opposition to that","msgtype":"m.emote"},"ts":1462280040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well unless it's already a compat issue","msgtype":"m.text"},"ts":1462280049000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Of course it is","msgtype":"m.text"},"ts":1462280091000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: In microtasks?","msgtype":"m.text"},"ts":1462280121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean removing alert entirely is a huge compat issue ofc","msgtype":"m.text"},"ts":1462280133000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"points at the topic","msgtype":"m.emote"},"ts":1462280134000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"To answer my own question: https://github.com/whatwg/html/commit/51babfe760a1dbe28c4521b2070e692ac872550a","msgtype":"m.text"},"ts":1462280928000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: thanks, banned that bugzilla spammer","msgtype":"m.text"},"ts":1462281475000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yoav, mkwst thanks I guess I’ll go ahead and add as= support to the HTML checker","msgtype":"m.text"},"ts":1462281523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Sorry. I told yoav  to stop being awesome and implementing new things, but he never listens to me. :(","msgtype":"m.text"},"ts":1462281559000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1462281611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you two are keeping the W3C in business","msgtype":"m.text"},"ts":1462281633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not sure that's a good thing?","msgtype":"m.text"},"ts":1462281690000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I’ll leave that up to you to decide for yourself :)","msgtype":"m.text"},"ts":1462283443000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mkwst: by the way, have y’all moved to autopublishing for your specs yet?","msgtype":"m.text"},"ts":1462283474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"CSP, tc.","msgtype":"m.text"},"ts":1462283479000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Hey! Is there a particular reason that \"Accept-Encoding\" is in the forbidden headers list in Fetch?","msgtype":"m.text"},"ts":1462287945000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Are there security risks involved with SW changing it to add support to new codecs, etc?","msgtype":"m.text"},"ts":1462287970000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I think one of the problems is that the browser handles that entire layer in principle","msgtype":"m.text"},"ts":1462288067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, so content encoding gets decoded before the bytes get to SW?","msgtype":"m.text"},"ts":1462288095000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: we don't expose the content before content codings have been handled, and there's a number of schemes for which that would not even make sense, as I understand it","msgtype":"m.text"},"ts":1462288098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: yes","msgtype":"m.text"},"ts":1462288101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got it! Thanks! :)","msgtype":"m.text"},"ts":1462288115000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: see \"handle content codings\"","msgtype":"m.text"},"ts":1462288129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"invoked as \"handling content codings\" (though you can also click the definition to find where it's invoked)","msgtype":"m.text"},"ts":1462288184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://w3c.github.io/unicode-xml/#Bidi recommends browsers ignore Bidi Embedding control characters (since users are supposed to use markup instead), but they apparently don’t: data:text/html,&%23x202e;Test renders as tseT in both Firefox and Chromium","msgtype":"m.text"},"ts":1462290558000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so there’s probably content out there that rely on these code points","msgtype":"m.text"},"ts":1462290649000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: (and others) Do we seriously really want to have the HTML checker emit a warning for every single document that’s missing a lang attribute on the HTML element?","msgtype":"m.text"},"ts":1462291054000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because once I add that is it going to instantly become the #1 most common error","msgtype":"m.text"},"ts":1462291079000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I think some authors/developers are going to see it as noise","msgtype":"m.text"},"ts":1462291116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"on the other hand, if we think it is that important that every single document on the Web really should have a lang attribute on the html element, then I guess this would be a good way to help make that happen","msgtype":"m.text"},"ts":1462291169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so maybe my question is, just how important is this to us?","msgtype":"m.text"},"ts":1462291187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or how important is it for the Web","msgtype":"m.text"},"ts":1462291200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what real problems does it solve for users in practice","msgtype":"m.text"},"ts":1462291220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"context is https://github.com/validator/validator/issues/284","msgtype":"m.text"},"ts":1462291236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it affects users of AT primarily, when reading content that is in a different language than their system language","msgtype":"m.text"},"ts":1462291240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and https://www.w3.org/Bugs/Public/show_bug.cgi?id=26942#c13","msgtype":"m.text"},"ts":1462291255000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: OK","msgtype":"m.text"},"ts":1462291263000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i suppose that may be a smaller set of people than the people who will be annoyed about validator errors, i dunno","msgtype":"m.text"},"ts":1462291269000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"reads recent comments at https://www.w3.org/Bugs/Public/show_bug.cgi?id=26942","msgtype":"m.emote"},"ts":1462291285000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I hope this is just not another table@summary","msgtype":"m.text"},"ts":1462291301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i think what would be best for users is probably for ATs to do language analysis themselves, but that's not the situation today","msgtype":"m.text"},"ts":1462291391000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, doing language analysis over an entire doc when you load it is a pretty big deal","msgtype":"m.text"},"ts":1462291499000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or even trying to programatically determine some subset to analyze","msgtype":"m.text"},"ts":1462291534000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"don't need to run it over the whole document, just a few words is typically enough to get a confident answer","msgtype":"m.text"},"ts":1462291549000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1462291556000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah but which words do you choose?","msgtype":"m.text"},"ts":1462291564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the words you're about to read next? :-)","msgtype":"m.text"},"ts":1462291594000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"imho this should also work if the user types into a textarea","msgtype":"m.text"},"ts":1462291644000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MS Word deals with it","msgtype":"m.text"},"ts":1462291656000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"for spell checking, i mean","msgtype":"m.text"},"ts":1462291691000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OS X has language detection for spell checking in general also","msgtype":"m.text"},"ts":1462291744000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Chrome already detects languages to see if it should show the Translate prompt, and it has an extension API to do it (https://developer.chrome.com/extensions/tabs#method-detectLanguage). I wonder if we should synthesize lang attributes, or an equivalent aria attribute...","msgtype":"m.text"},"ts":1462291937000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"zcorpan: it is a lot easier to do in that case than in the case of trying to analyze text nodes in document order in real time as I parse a document","msgtype":"m.text"},"ts":1462291983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"do I just check the first text node? or the first 10 text nodes? or what","msgtype":"m.text"},"ts":1462292009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I feel like this should be a separate tool","msgtype":"m.text"},"ts":1462292604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It totally seems like the AT should try to do the linguistic analysis here","msgtype":"m.text"},"ts":1462292631000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that users could opt into","msgtype":"m.text"},"ts":1462292633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: yeah well as we know the vendor of the most widely used AT is not going to add it","msgtype":"m.text"},"ts":1462292671000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I now am wondering if Richard Ishida has not already implemented a tool for doing this","msgtype":"m.text"},"ts":1462292705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Would be nice if eventually the most widely used AT wasn't any more due to others implementing better features","msgtype":"m.text"},"ts":1462292713000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"NVDA devs are trying","msgtype":"m.text"},"ts":1462293333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jyasskin: do you have any idea how much of the text of a document Chrome checks before showing the Translate prompt?","msgtype":"m.text"},"ts":1462294660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or what it checks?","msgtype":"m.text"},"ts":1462294670000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I am wondering if there is some existing literature on how best to do this for HTML documents","msgtype":"m.text"},"ts":1462294695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I haven't worked on the system, but it is open source. ;)","msgtype":"m.text"},"ts":1462294845000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1462294856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will look at the sources","msgtype":"m.text"},"ts":1462294871000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"language detection of single-language strings is pretty much solved by now, and it's certainly practical to run over the entire doc, cost isn't that high","msgtype":"m.text"},"ts":1462295134000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the problem is you can't guarantee a single HTML page is a single language","msgtype":"m.text"},"ts":1462295227000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"https://sites.google.com/a/chromium.org/dev/developers/design-documents/translate doesn't seem to have been updated since it's initial version, so no idea if that still bears any resemblance to the implementation","msgtype":"m.text"},"ts":1462295376000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"gsnedders: it is not practical for me if I am not building a DOM or any other in-memory representation","msgtype":"m.text"},"ts":1462295431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the checker only does anything with text nodes at all just for particular elements that the spec puts requirements on the text content of","msgtype":"m.text"},"ts":1462295542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and the checker is currently extremely fast and it is hard to see how doing this is any form is not going to add a measurable performance cost","msgtype":"m.text"},"ts":1462295624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Mek: thanks will look at it anyway","msgtype":"m.text"},"ts":1462295648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, “The renderer already extracts the text from each loaded page for indexing purpose”","msgtype":"m.text"},"ts":1462295684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: there's some silly fast and accurate langid tools out there, but maybe not practical","msgtype":"m.text"},"ts":1462295765000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yoav: up for reviewing https://github.com/whatwg/html/pull/1141? :)","msgtype":"m.text"},"ts":1462297776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: will review later tonight. Seems like the email fell through my mail filters... :/","msgtype":"m.text"},"ts":1462298347000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1462298481000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder why IDL has so many special cases for RegExp objects","msgtype":"m.text"},"ts":1462302377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you mean like `If V is a native RegExp object, then throw a TypeError.`","msgtype":"m.text"},"ts":1462303101000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1462303102000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: which SVG spec should I look at for a new implementation?","msgtype":"m.text"},"ts":1462303167000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"or, is the SVG 2 draft mostly additive or does it rewrite the basic stuff?","msgtype":"m.text"},"ts":1462303237000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: it drops some of the stuff nobody really supports and makes optional stuff that people want to get rid of, mostly","msgtype":"m.text"},"ts":1462303386000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SimonSapin: I /think/ it's probably the best reference","msgtype":"m.text"},"ts":1462303392000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I’m thinking of making a toy implementation to play/experiment with some stuff. Nothing that’s gonna ship :))","msgtype":"m.text"},"ts":1462303496000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"MikeSmith: I'd read your initial discussion as wanting to decide whether your checker should check for a lang= attribute, and was arguing for not-checking because browsers can fairly straightforwardly infer the language without that attribute. Later it looks like you're trying to make the checker infer the lang= attribute, which my and Mek's comments don't","msgtype":"m.text"},"ts":1462304578000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"help as much with.","msgtype":"m.text"},"ts":1462304578000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: URL spec doesn't allow fatal handling of errors? :(","msgtype":"m.text"},"ts":1462305424000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"caitp: yeah, it's everywhere. Any object is allowed to be treated as an implementation of a callback interface.... except RegExps.","msgtype":"m.text"},"ts":1462305500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"webidl seems to distinguish between \"a native RegExp\" and a RegExp type","msgtype":"m.text"},"ts":1462306040000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"for some reason","msgtype":"m.text"},"ts":1462306052000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I dunno, interesting","msgtype":"m.text"},"ts":1462306062000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think one is the Web IDL type corresponding to the JS type","msgtype":"m.text"},"ts":1462307806000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just like there is a Web IDL boolean type with two possible values, true and false","msgtype":"m.text"},"ts":1462307815000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Guess how you convert a Web IDL boolean to a JavaScript value","msgtype":"m.text"},"ts":1462307821000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Guess","msgtype":"m.text"},"ts":1462307823000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I bet you can't guess","msgtype":"m.text"},"ts":1462307828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(sorry, I am being weird)","msgtype":"m.text"},"ts":1462307847000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is it not the ToBoolean internal op because webidl thinks it has to be able to support non-JS languages too?","msgtype":"m.text"},"ts":1462308542000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it is: if the value is the IDL boolean value true, return the JavaScript value true. If the value is the IDL boolean value false, return the JavaScript value false.","msgtype":"m.text"},"ts":1462308755000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ToBoolean is for the other direction, JS values -> IDL boolean values.","msgtype":"m.text"},"ts":1462308777000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1462308806000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Basically, the separate type system seems pretty silly sometimes. But I am not sure I have a principled alternative.","msgtype":"m.text"},"ts":1462308832000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Something about it all being JavaScript values and just doing conversions between them (like ToBoolean) when necessary","msgtype":"m.text"},"ts":1462308860000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1462309387000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Do we have any patterns yet for events that you might want to register for from the foreground but receive in a designated Worker? I see http://w3c.github.io/push-api/#the-push-event, which is done with a dedicated manager on ServiceWorkerRegistration, but that doesn't give the page much flexibility.","msgtype":"m.text"},"ts":1462311253000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I don't think we have any patterns that have received wide review and approval. The service worker specs and maybe some houdini specs are probably leading the way here. A survey of what all they're doing would be nice.","msgtype":"m.text"},"ts":1462314585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"uhhhh","msgtype":"m.text"},"ts":1462316941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so it turns out that reparsing to change the encoding never actually worked in html5lib","msgtype":"m.text"},"ts":1462316950000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1462316953000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]