[
{"content":{"body":"I wonder if Chrome's latest block-small-flash thing blocks it","msgtype":"m.text"},"ts":1478736494000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is there an adjective or word used to describe a URL intended to be navigated to vs. loaded?","msgtype":"m.text"},"ts":1478737572000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"e.g. /foo.css isn't usually intended to be navigated to, and /my-app/#home-page isn't intended to be loaded, per se.","msgtype":"m.text"},"ts":1478737606000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"I don't know if there is existing or better terminology for this.","msgtype":"m.text"},"ts":1478737621000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Maybe URL vs. href?","msgtype":"m.text"},"ts":1478737800000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I suppose, yeah.","msgtype":"m.text"},"ts":1478737824000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"Domenic: generically, to try and find spec bugs; in this case, to see if we can get anything useful","msgtype":"m.text"},"ts":1478737833000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"There are other ways to navigate but I won't be that pedantic.","msgtype":"m.text"},"ts":1478737836000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"I was wondering if there was any distinction between these \"classes of resources\", or, at the very least, classes of actions.","msgtype":"m.text"},"ts":1478737856000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"There are distinct navigate and fetch algorithms (with navigate depending on fetch)","msgtype":"m.text"},"ts":1478739136000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"URL paths starting with TR should not be referenced correct? What is the justification behind that?","msgtype":"m.text"},"ts":1478744496000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"sounds like an FAQ. likely reason: by the time something makes it to TR, there are already bug fixes in the living spec and/or editor's draft, and those should be referenced instead (since they're more up to date)","msgtype":"m.text"},"ts":1478744668000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1478744965000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"tobie: I can't run bikeshed on IDL anymore","msgtype":"m.text"},"ts":1478783687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that sounds bad.","msgtype":"m.text"},"ts":1478783707000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: do you have a dump you can share?","msgtype":"m.text"},"ts":1478783755000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: filed https://github.com/heycam/webidl/issues/233","msgtype":"m.text"},"ts":1478783841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: doesn't fail on other specs, with fresh bikeshed","msgtype":"m.text"},"ts":1478783852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wfm right now, but haven't upgraded bikeshed in a week","msgtype":"m.text"},"ts":1478783918000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: doing so right now","msgtype":"m.text"},"ts":1478783988000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think it has to do with an update from last night, where the IDL parser got an update","msgtype":"m.text"},"ts":1478783996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I guess it triggers on something in the IDL specification","msgtype":"m.text"},"ts":1478784007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh","msgtype":"m.text"},"ts":1478784008000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"sounds fun","msgtype":"m.text"},"ts":1478784017000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Someone contributed a patch to Fetch to make use of the new record type","msgtype":"m.text"},"ts":1478784040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That triggered an issue against the IDL parser, then Bikeshed, and now IDL itself","msgtype":"m.text"},"ts":1478784053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Early adopter pain","msgtype":"m.text"},"ts":1478784076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah--","msgtype":"m.text"},"ts":1478784085000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"One thing I notice is that we haven't really embraced the importance of <dfn> yet and how it sets up a framework","msgtype":"m.text"},"ts":1478784132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We often skim over it in reviews while it's quite an important aspect","msgtype":"m.text"},"ts":1478784144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. There a pretty big lack of consistency around this.","msgtype":"m.text"},"ts":1478784216000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: we should probably agree on some guidelines around this, which should probably be written somewhere","msgtype":"m.text"},"ts":1478784306000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: see https://github.com/tabatkins/bikeshed/issues/867","msgtype":"m.text"},"ts":1478784770000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"good times","msgtype":"m.text"},"ts":1478784802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if zcorpan is interested in converting html-differences away from Anolis","msgtype":"m.emote"},"ts":1478785225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At this point, we have encoding/html-differences/mimesniff/xhr","msgtype":"m.text"},"ts":1478785245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: jyasskin's on paternity leave.","msgtype":"m.text"},"ts":1478786774000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: oh, I guess then we should assume copypasta","msgtype":"m.text"},"ts":1478786799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: since it doesn't make much sense","msgtype":"m.text"},"ts":1478786809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah--this needs cleanup","msgtype":"m.text"},"ts":1478786829000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: async function x() { w(2) }; w(1); x(); w(3)","msgtype":"m.text"},"ts":1478792307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: any idea why the order is 123?","msgtype":"m.text"},"ts":1478792313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: async is sync unless you have await?","msgtype":"m.text"},"ts":1478792375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kind of...","msgtype":"m.text"},"ts":1478794153000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"async functions still run their steps synchronously","msgtype":"m.text"},"ts":1478794163000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"they just return a promise","msgtype":"m.text"},"ts":1478794167000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and if you put an await inside them then any steps after that await run after the promise settles","msgtype":"m.text"},"ts":1478794179000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: same as the function you pass into the promise constructor","msgtype":"m.text"},"ts":1478794302000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Runs sync","msgtype":"m.text"},"ts":1478794326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"okay, so you could kinda use them for event listeners, just invoke preventDefault before you go async","msgtype":"m.text"},"ts":1478794361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, huh, there was a thread on mozilla.dev.platform about that just earlier today","msgtype":"m.text"},"ts":1478795252000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tobie: Ugh, sorry, fixed.  Would have fixed last night (I learned about it just after I left work), but my laptop's not in a working state at the moment.  Sorry again.","msgtype":"m.text"},"ts":1478798248000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: np. shit happens. especially these days.","msgtype":"m.text"},"ts":1478798299000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: I think annevk lost more time over it than I did. :)","msgtype":"m.text"},"ts":1478798349000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"My fault for not having adequate test coverage. Definitely mea culpa.","msgtype":"m.text"},"ts":1478798367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fixing that now, obvs. ^_^","msgtype":"m.text"},"ts":1478798373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: CI was red though","msgtype":"m.text"},"ts":1478798525000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: on master","msgtype":"m.text"},"ts":1478798538000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Because I pushed several commits at once, it \"broke\" on a nonsensical commit, so I figured it was something minor to do with output formatting. I didn't check on it immediately, and then forgot to follow up before I left. :/","msgtype":"m.text"},"ts":1478798619000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, that explains why I was seeing the issue on head, but had to checkout head^^^ to get it working again","msgtype":"m.text"},"ts":1478798862000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yup ;_;","msgtype":"m.text"},"ts":1478798873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Need to push every time, I guess. Was just doing some repo cleanup.","msgtype":"m.text"},"ts":1478798889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I did test that commit, but not with the testsuite - I ran it on DOM, which uses syntax highlighting but not any *WebIDL* syntax highlighting, which is the part that broke.)","msgtype":"m.text"},"ts":1478798928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, why doesn't DOM use IDL syntax highlighting?","msgtype":"m.text"},"ts":1478800899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It has all real IDL, which is highlighted directly; it doesn't invoke the highlighting code to color any example WebIDL. ^_^","msgtype":"m.text"},"ts":1478800933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's the \"example WebIDL\" part that I moved into the new file without moving all of its dependencies.","msgtype":"m.text"},"ts":1478800949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I was just shifting some code to separate files to reduce the \"everything is in __init__\" problem a little bit.)","msgtype":"m.text"},"ts":1478800979000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah okay","msgtype":"m.text"},"ts":1478801004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: btw, given your comments I think I can merge https://github.com/whatwg/encoding/pull/79 right?","msgtype":"m.text"},"ts":1478801016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: and just hope the LINK ERROR will disappear","msgtype":"m.text"},"ts":1478801026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, go for it.","msgtype":"m.text"},"ts":1478801032000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Doing some fiddling right now to make it go away.","msgtype":"m.text"},"ts":1478801047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1478801397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"3 more Anolis documents to go","msgtype":"m.text"},"ts":1478801408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"html-differences, which I hope zcorpan will do","msgtype":"m.text"},"ts":1478801421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and xhr / mimesniff","msgtype":"m.text"},"ts":1478801424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I plan on doing mimesniff tomorrow","msgtype":"m.text"},"ts":1478801432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"xhr is mostly done, but overloads :/","msgtype":"m.text"},"ts":1478801443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22859 got me to dig into the WebIDL number types (I misunderstood the issue and new little about how the different number types worked and, tbh, not much more about how numbers are stored). Ended up at https://github.com/heycam/webidl/issues/33, which now makes a lot of sense.","msgtype":"m.text"},"ts":1478804221000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I could refactor all of those number bindings to something like:","msgtype":"m.text"},"ts":1478804272000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/4doiIQ8y/","msgtype":"m.text"},"ts":1478804379000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: It would make things shorter and clearer and help prepare for something like what you describe in #33","msgtype":"m.text"},"ts":1478804439000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I'm not entirely convinced it's useful, though.","msgtype":"m.text"},"ts":1478804506000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: thoughts?","msgtype":"m.text"},"ts":1478804515000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I think there's value in re-doing the number types to have less repetitive boilerplate","msgtype":"m.text"},"ts":1478804980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: I'm not sure about that exact formulation but maybe that's the way to go","msgtype":"m.text"},"ts":1478804990000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It simply would make it easier to read and understand what is going on","msgtype":"m.text"},"ts":1478805003000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, it took me a long time to figure out what was going on","msgtype":"m.text"},"ts":1478805022000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: and that all that repetition was actually repetition","msgtype":"m.text"},"ts":1478805036000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"E.g. maybe you don't use the ES operations like bug 22859 says, and just say \"return the result of performing a numeric conversion with 2^8 as the upper bound\"","msgtype":"m.text"},"ts":1478805038000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, not using the ES operations makes it easier","msgtype":"m.text"},"ts":1478805065000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: you may enjoy https://github.com/jsdom/webidl-conversions/blob/master/lib/index.js#L6-L118","msgtype":"m.text"},"ts":1478805084000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess the integer types are where the repetition really happens","msgtype":"m.text"},"ts":1478805126000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh, that is really cool","msgtype":"m.text"},"ts":1478805127000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: yes, and well, given how many they are, that's a lot of repetition","msgtype":"m.text"},"ts":1478805162000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"*there","msgtype":"m.text"},"ts":1478805177000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"rniwa, at 2016-11-09 17:28 UTC, annevk said: if there are any missing custom element or shadow tree tests?","msgtype":"m.text"},"ts":1478809151000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Domenic: your long long implementation doesn't seem to match the spec (at https://github.com/jsdom/webidl-conversions/blob/master/lib/index.js#L93-L94). It might be right, but if so, I don't understand why.","msgtype":"m.text"},"ts":1478810433000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: hmm yeah it seems like 32 should be 53 right?","msgtype":"m.text"},"ts":1478810498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yes","msgtype":"m.text"},"ts":1478810507000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Filed, thanks","msgtype":"m.text"},"ts":1478810562000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Any pointers on how a long long work?","msgtype":"m.text"},"ts":1478810569000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: is it storing an exponent?","msgtype":"m.text"},"ts":1478810578000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: what do you mean how it works?","msgtype":"m.text"},"ts":1478810587000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: like what it's using its bits for.","msgtype":"m.text"},"ts":1478810659000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: what bits? Do you mean in browser implementations? They probably just use int64.","msgtype":"m.text"},"ts":1478810682000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: does int64 also loose precision above a certain threshold?","msgtype":"m.text"},"ts":1478810735000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: above 2^63  it starts wrapping around to -2^64 + 1 or something similar","msgtype":"m.text"},"ts":1478810784000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'm just trying to understand why we have this weird 2^53 threshold in long long","msgtype":"m.text"},"ts":1478810860000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"above 2^53, n + 1 stops making giving integer values","msgtype":"m.text"},"ts":1478810866000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"sorry...","msgtype":"m.text"},"ts":1478810870000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"above 2^53, n + 1 stops making sense (i.e. n + 1 === n in some cases)","msgtype":"m.text"},"ts":1478810887000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"tobie: oh, that's because *in JS* everything is represented with 64-bit float (double), which acts as jsbell says","msgtype":"m.text"},"ts":1478810892000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so we're just making sure that the number can be represented in JS","msgtype":"m.text"},"ts":1478811101000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: represented as an unambiguous integer, but yeah","msgtype":"m.text"},"ts":1478811141000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jsbell: thanks","msgtype":"m.text"},"ts":1478811142000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The last unambiguous integer is 2^53-1, mind you.  2^53 is ambiguous, because 2^53+1 is the first \"lost\" integer, that rounds down to 2^53.","msgtype":"m.text"},"ts":1478811623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Reading up on the number type in ES6.","msgtype":"m.text"},"ts":1478811885000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Poor tobie","msgtype":"m.text"},"ts":1478811920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, I think I deserve hugs","msgtype":"m.text"},"ts":1478811935000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Meh, it's a 64-bit float. Been used for decades. Nothing too fancy.","msgtype":"m.text"},"ts":1478812922000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"did you ever have to sit through multiple lectures in college about ieee754 floats and their format in school?","msgtype":"m.text"},"ts":1478813264000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyone who does that deserves hugs","msgtype":"m.text"},"ts":1478813273000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I took philosophy and English literature in college, with a minor in fine arts.","msgtype":"m.text"},"ts":1478814107000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I mean, we def discussed it in Computer Architecture, yeah. Kinda important to know the bit patterns when you're gonna be twiddling them.","msgtype":"m.text"},"ts":1478814136000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes. Hence reading up.","msgtype":"m.text"},"ts":1478814164000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1478814169000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah, didn't realize you were totally new to them. They're fun, then!","msgtype":"m.text"},"ts":1478814183000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"1 sign bit, 11 exponent bits, 52 value bits (really 53, due to the \"hidden bit\")","msgtype":"m.text"},"ts":1478814224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"last unambiguous integer\" is my favorite phrase of the day","msgtype":"m.text"},"ts":1478814312000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"makes me think of computers just counting up to \"lots and lots\" and giving up after that","msgtype":"m.text"},"ts":1478814341000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"I mean, that's how computers work, yeah.","msgtype":"m.text"},"ts":1478814364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For interesting definitions of \"giving up\".","msgtype":"m.text"},"ts":1478814379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The hidden bit?","msgtype":"m.text"},"ts":1478815792000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh boy. That looks complicated.","msgtype":"m.text"},"ts":1478815898000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"the week of that class devoted to this probably gave the coffeeshop an extra 1200$ in revenue","msgtype":"m.text"},"ts":1478816139000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1478816170000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: The value is always encoded in proper normalized sci-not, where there's only a single, non-zero, digit on the left side of the decimal (like \"1.something\"). Since this is binary, that digit is guaranteed to be a 1, so there's no need to encode it; we can throw it away and just encode the fractional part instead. Thus we actually have 53 bits of","msgtype":"m.text"},"ts":1478816351000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"value\", but only encode 52 of them - there's a \"hidden bit\".","msgtype":"m.text"},"ts":1478816351000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh. That's it?","msgtype":"m.text"},"ts":1478816394000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yup, that's it.","msgtype":"m.text"},"ts":1478816398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Have you considered teaching?","msgtype":"m.text"},"ts":1478816406000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1478816410000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"When I'm done needing money, that's my plan.","msgtype":"m.text"},"ts":1478816419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah. I was going to say something about the pay.","msgtype":"m.text"},"ts":1478816441000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tenured positions pay reasonably well, especially if you rise up the foodchain and become a department head or registrar or something","msgtype":"m.text"},"ts":1478816465000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"My partner chose a low-paying career, so one of us has to stay in a money-making industry. :/","msgtype":"m.text"},"ts":1478816471000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: That's a lot of work, and a lot of time.","msgtype":"m.text"},"ts":1478816491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that is true","msgtype":"m.text"},"ts":1478816501000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah. Academia is a long winding road. Wouldn't recommend it as a money making strategy.","msgtype":"m.text"},"ts":1478816689000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"*cough* denormalized numbers *cough*","msgtype":"m.text"},"ts":1478816806000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: that sounds funny but I'm not sure why.","msgtype":"m.text"},"ts":1478816884000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jsbell: Denormalized numbers are an error case you don't need to worry about.","msgtype":"m.text"},"ts":1478816934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Added to https://wiki.whatwg.org/wiki/Band_names","msgtype":"m.text"},"ts":1478816951000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1478816971000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: disagree; they show up in JS","msgtype":"m.text"},"ts":1478816972000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Yeah, they *show up*, but the only consequence is that you end up with less than 53 bits of precision. Not important for learning about doubles.","msgtype":"m.text"},"ts":1478816999000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just a case where \"ays encoded in proper normalized sci-not, where there's only a single, non-zero, digit on the left side of the decimal\" stops being true","msgtype":"m.text"},"ts":1478817067000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Oh, and *hugs* all around","msgtype":"m.text"},"ts":1478817075000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"tobie: For reference, if your exponent is at max-negative, representing a very tiny number very close to zero, the number denormalizes; the hidden bit switches to zero, so you can represent numbers *even smaller* than the exponent suggests.","msgtype":"m.text"},"ts":1478817096000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins is indeed good at teaching :)","msgtype":"m.text"},"ts":1478817128000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"surely your new president elect will support education reforms backed by grants to support higher salaries for new high performing educators, to compete with work in industry, and then you guys can start taking full advantage of that","msgtype":"m.text"},"ts":1478817256000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: ok, I guess I see how that makes sense. I also understand why folks would want other number options in JS.","msgtype":"m.text"},"ts":1478817637000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"can't actually remember that much detail about floats off-hand, ever","msgtype":"m.emote"},"ts":1478819027000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I always have to look it up, always","msgtype":"m.text"},"ts":1478819033000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: The ability to write {{record}} was intentional, for use in <code>{{record}}&lt;key, value></code>, but being intentional doesn't make it right. ;)","msgtype":"m.text"},"ts":1478819146000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: leaving \"mappings\" unexported was unintentional.","msgtype":"m.text"},"ts":1478819213000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Floats are just like fixed-point numbers but more buoyant","msgtype":"m.text"},"ts":1478819240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I like whenever Philip` appears to make useful comments.","msgtype":"m.text"},"ts":1478819959000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic, annevk: do you recall what particular concern caused Location to override [[SetPrototypeOf]] in https://github.com/whatwg/html/pull/638?","msgtype":"m.text"},"ts":1478820195000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: location can be accessed cross origin so we don't want you to be able to set another origin's location's __proto__","msgtype":"m.text"},"ts":1478820305000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is location still relied upon by some plugins to determine origin?","msgtype":"m.text"},"ts":1478820331000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: ah, this just increases the restriction such that you can't even make that modification on the same origin","msgtype":"m.text"},"ts":1478820512000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Domenic: sound right?","msgtype":"m.text"},"ts":1478820518000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"littledan__: ^^^","msgtype":"m.text"},"ts":1478820525000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yeah sounds right, annevk or bholley may be able to confirm more.","msgtype":"m.text"},"ts":1478820584000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"location properties are hoisted onto the instance and frozen because of the plugin issue","msgtype":"m.text"},"ts":1478820626000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"the cross-origin issue is orthogonal, I think","msgtype":"m.text"},"ts":1478820649000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: do you have a link for this \"plugin issue\"?","msgtype":"m.text"},"ts":1478820693000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: not offhand, but you can grep the mailing lists for when it was discussed","msgtype":"m.text"},"ts":1478820712000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"aklein: https://lists.w3.org/Archives/Public/public-script-coord/2012JulSep/0144.html","msgtype":"m.text"},"ts":1478820775000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ah, this must be what gsnedders was referring to above...","msgtype":"m.text"},"ts":1478820808000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yes","msgtype":"m.text"},"ts":1478820859000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bholley: that explains why toString and href have to be non-configurable non-writable own properties, but it doesn't explain why the prototype has to be frozen...","msgtype":"m.text"},"ts":1478820867000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"rather its [[Prototype]]","msgtype":"m.text"},"ts":1478820890000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: oh true","msgtype":"m.text"},"ts":1478820931000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"aklein: it might be the cross-origin thing then. I don't remember","msgtype":"m.text"},"ts":1478820940000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Where's that cross origin objects repo with all the history hete","msgtype":"m.text"},"ts":1478820968000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/annevk/html-cross-origin-objects/blob/master/lore.txt","msgtype":"m.text"},"ts":1478821009000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it totally makes sense that for a _cross-origin_ access [[SetPrototypeOf]] throws","msgtype":"m.text"},"ts":1478821141000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"but it seems that HTML just specifies Location in such a way that [[SetPrototypeOf]] always fails, even from the same origin","msgtype":"m.text"},"ts":1478821241000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: it may be a holdover from how things were done previously, or there may be a reason i'm not remembering - would require some careful considering if there were a reason to change it","msgtype":"m.text"},"ts":1478821786000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"aklein: note that window has a frozen prototype for other reasons","msgtype":"m.text"},"ts":1478821804000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"aklein: I don't have the cycles to page it all in right now though :-(","msgtype":"m.text"},"ts":1478821830000,"senderName":"bholley","senderId":"bholley@irc"}
]