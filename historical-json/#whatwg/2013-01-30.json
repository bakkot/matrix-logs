[
{"content":{"body":"Hixie or others: If task A is queued to Source A, and then task B is queued to Source B, we're guaranteed that A will pop before B, right?  That is, temporal ordering of tasks is preserved across task sources?","msgtype":"m.text"},"ts":1359507295000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is implicit if a browser ignores the task sources and just puts everything in a big queue, and seems like it would be easy to rely on, as the precise task source an event is queued into feels like an implementation detail to an author, and so I presume it's actually required.","msgtype":"m.text"},"ts":1359507530000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: afaik, the whole point of different task sources is that ordering is *not* preserved across them--ordering is only preserved within the same task source","msgtype":"m.text"},"ts":1359508273000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(well, there's also some stuff that says \"delete all tasks in task source xxx\", i think)","msgtype":"m.text"},"ts":1359508330000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, task *queues*--not completely sure what the distinction is between task queues and task sources, off-hand","msgtype":"m.text"},"ts":1359508419000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Problem there is that a worker can be using a proxy canvas, call commit(), and then postMessage to the main thread, but have no guarantee that when the message arrives the new data will have been pushed to the main-thread canvas.","msgtype":"m.text"},"ts":1359508990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: could we expose an oncommit event on canvas?","msgtype":"m.text"},"ts":1359509114000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"seems like something you'd want","msgtype":"m.text"},"ts":1359509130000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Yes, sounds useful.","msgtype":"m.text"},"ts":1359509145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, it sounds equivalent to sending messages over two MessagePorts (each with their own task source) to the same place--the order is undefined","msgtype":"m.text"},"ts":1359509362000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if the order of two message ports can't be defined, committing a canvas would seem to have the same basic problem","msgtype":"m.text"},"ts":1359509423000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"In that case, there's a bit of a usability problem, and we need an event on the canvas like esprehn_ says.","msgtype":"m.text"},"ts":1359509454000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think the event is nice as well since you don't need adhoc postMessage","msgtype":"m.text"},"ts":1359509499000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"it would seem fairly common to want your background image processor to tell the UI thread it's done drawing","msgtype":"m.text"},"ts":1359509515000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"ex. your game engine is drawing in the worker","msgtype":"m.text"},"ts":1359509686000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"TabAtkins: no, the whole point of task sources is that they identify tasks that are not ordered relative to eacho ther","msgtype":"m.text"},"ts":1359513645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (thus most things should use the DOM manipulation task source)","msgtype":"m.text"},"ts":1359513701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Kk, in that case see the discussion immediately above, where we probably need an \"oncommit\" event fired at the main-thread canvas.","msgtype":"m.text"},"ts":1359513936000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So you can coordinate.","msgtype":"m.text"},"ts":1359513941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you need to coordinate, just send the bitmap across instead of using the proxies","msgtype":"m.text"},"ts":1359513955000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(it's no less performant)","msgtype":"m.text"},"ts":1359513968000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(in fact it's probably essentially the same code in the backend)","msgtype":"m.text"},"ts":1359513988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You mean as an ImageBitmap?","msgtype":"m.text"},"ts":1359514008000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1359514015000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'll check and see if that's acceptable, or if there are hidden impl things that make it less performant.","msgtype":"m.text"},"ts":1359514141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should be almost identical, but if it's not please do let me know!","msgtype":"m.text"},"ts":1359514232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the event would still be nice :)","msgtype":"m.text"},"ts":1359515159000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: when would the event fire? 60 times a second shortly after the bitmap was updated?","msgtype":"m.text"},"ts":1359515680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is it really specced to swap buffers 60 times a second? I thought there was an explicit commit() from the worker","msgtype":"m.text"},"ts":1359515730000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"i'm assuming the commit() will be called at the end of the requestAnimationFrame() callback","msgtype":"m.text"},"ts":1359515749000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"inside the worker?","msgtype":"m.text"},"ts":1359515761000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1359515788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then yes, it'd fire that many times a second","msgtype":"m.text"},"ts":1359515850000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"just like if you did a postMessage() back at the page inside rAf","msgtype":"m.text"},"ts":1359515860000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"why would that be useful?","msgtype":"m.text"},"ts":1359515895000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't really understand the use case here","msgtype":"m.text"},"ts":1359515914000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not saying there isn't one -- i don't disagree, just don't understand","msgtype":"m.text"},"ts":1359515921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1359515922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: because I want to setup things inside the <canvas>, for example putting DOM nodes down inside since they can receive focus and events, but are not drawn","msgtype":"m.text"},"ts":1359515936000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Hixie: in my game engine the drawing/physics are happening in the worker, but I don't want the focusable things in the canvas tree to appear until the user can actually see them","msgtype":"m.text"},"ts":1359515960000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"ah, then an event that fires sometime after the bitmap is synced is no good","msgtype":"m.text"},"ts":1359515981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'd want either a synchronous event, or to do the painting yourself","msgtype":"m.text"},"ts":1359515996000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, and with that scenario, \"pass the ImageBitmap in your postMessage\" is the right answer.","msgtype":"m.text"},"ts":1359516014000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then do drawImage(bitmap) and hope the implementation is smart about it?","msgtype":"m.text"},"ts":1359516053000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"we could have a synchronous event, but it would preclude implementations doing the painting without going via the main thread, which i don't think is a good idea","msgtype":"m.text"},"ts":1359516054000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: nice slides","msgtype":"m.text"},"ts":1359516158000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://mcc.id.au/2013/lca-webidl/","msgtype":"m.text"},"ts":1359516165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: if the worker is not committing in every rAf, how does the page know when it's safe to call toDataURL() and not get a blank visual?","msgtype":"m.text"},"ts":1359516178000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"MikeSmith, thanks; Chris Heilmann is responsible for the nice styling","msgtype":"m.text"},"ts":1359516188000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"esprehn_: The *page* (main thread) never has a blank visual, once a single frame has come in.","msgtype":"m.text"},"ts":1359516205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"esprehn_: you mean, how do you know when at least one commit has been done?","msgtype":"m.text"},"ts":1359516208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes","msgtype":"m.text"},"ts":1359516219000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: you don't","msgtype":"m.text"},"ts":1359516223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Something like Google Feedback wants to know without polling the page constantly","msgtype":"m.text"},"ts":1359516241000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"google feedback just wants to get what's actually rendering","msgtype":"m.text"},"ts":1359516256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, modulo rendering delay. So if Google Maps is still drawing and nothing has painted yet, we might wait for a single frame to appear before taking a screenshot","msgtype":"m.text"},"ts":1359516301000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"heycam: ah I was going to ask about the styling. I should have figured Chris had a hand in it. I like the fact that the presentation starts with an thumbnail view of all the slides, instead of with the first slide. Seeing that, I think all slide tools should do it that way. Or provide it as an option at least.","msgtype":"m.text"},"ts":1359516317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: I guess that's somewhat specific, but it would be nice to know if the buffer in the canvas is \"fresh\"","msgtype":"m.text"},"ts":1359516339000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: if google maps is still drawing and nothing has painted yet, that's probably what the user is bitching about, and thus probably a good thing to have in the screenshot :-)","msgtype":"m.text"},"ts":1359516344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith, yeah that is unconvential. I think you put \"?full\" at the end to begin with the first slide.","msgtype":"m.text"},"ts":1359516377000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"MikeSmith, (the presentation toolkit is Shower)","msgtype":"m.text"},"ts":1359516390000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"esprehn_: you cannot know if it's fresh, by design. There's no locking and no shared state, it's a purely asychronous message-passing system.","msgtype":"m.text"},"ts":1359516423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn_: the worker could send two commit() messages back to back, and the main thread might get them two weeks apart.","msgtype":"m.text"},"ts":1359516440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hello, #whatwg","msgtype":"m.text"},"ts":1359516456000,"senderName":"kochi_","senderId":"kochi_@irc"},
{"content":{"body":"\bHixie: you're misunderstanding","msgtype":"m.text"},"ts":1359516461000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"hello kochi_","msgtype":"m.text"},"ts":1359516467000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn_: that's quite possible :-)","msgtype":"m.text"},"ts":1359516473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: there's no message passing system inside the <canvas>","msgtype":"m.text"},"ts":1359516476000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: the entirety of canvas is one big message passing system","msgtype":"m.text"},"ts":1359516501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn_: (to the GPU)","msgtype":"m.text"},"ts":1359516504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you should be able to ask the <canvas> if it's ever had any drawing commands or commit() executed on it","msgtype":"m.text"},"ts":1359516505000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"ah, from proper client again: hello!","msgtype":"m.text"},"ts":1359516513000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"(without underscore)","msgtype":"m.text"},"ts":1359516530000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hixie: that's trivial to detect, since the swap() for the draw under the hood is known. Or in some implementations they may not even allocate the output surface until some drawing command has been executed","msgtype":"m.text"},"ts":1359516553000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"hey kochi","msgtype":"m.text"},"ts":1359516559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"esprehn_: if the commit() happened on a different thread, it's not at all necessarily trivial.","msgtype":"m.text"},"ts":1359516574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: hi!","msgtype":"m.text"},"ts":1359516577000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"esprehn_: we could provide an async api that reports back \"at some point in the past, i knew that we had/had not seen a commit()\"","msgtype":"m.text"},"ts":1359516615000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn_: but that doesn't seem hugely useful","msgtype":"m.text"},"ts":1359516625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't understand why that needs to be async","msgtype":"m.text"},"ts":1359516635000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: because there's no locking and the commit() could be happening on another thread","msgtype":"m.text"},"ts":1359516660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: when does the context in the main thread get data so it's visible to getImageData() ?","msgtype":"m.text"},"ts":1359516698000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"esprehn_: getImageData() is a bad API. It should have been async. It blocks on the GPU.","msgtype":"m.text"},"ts":1359516721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn_: the main thread has to ask the GPU for the data.","msgtype":"m.text"},"ts":1359516727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: i am still sorting it out from internal reviews for ime api spec, and trying to get it out until the end of the next week.","msgtype":"m.text"},"ts":1359516860000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: sounds good. If you need any feedback or help from me, just let me know.","msgtype":"m.text"},"ts":1359516900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1359516983000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hixie: so then the answer is never? or the answer is getImageData() should block on the commit?","msgtype":"m.text"},"ts":1359517029000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"a minor issue I would like to bring here is how assigning a property of an object with side effect allowed.","msgtype":"m.text"},"ts":1359517092000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"esprehn_: the answer is that in principle the main thread gets the data either at some arbitrary point after the UI is updated, or it has to request it from the GPU","msgtype":"m.text"},"ts":1359517125000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. we have ime_context.enabled as readonly + ime_context.setEnabled(true or false) vs ime_context.enabled as read/write","msgtype":"m.text"},"ts":1359517151000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hixie: okay","msgtype":"m.text"},"ts":1359517181000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Hixie: I wonder what the implications of this on out of process workers are","msgtype":"m.text"},"ts":1359517198000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Hixie: You can't talk directly to the GPU from inside the other process, so commit() has to send the buffer/shm across to the painting thread in another process","msgtype":"m.text"},"ts":1359517248000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"kochi: the latter is *much* better.","msgtype":"m.text"},"ts":1359517271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hi!","msgtype":"m.text"},"ts":1359517299000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yo. ^_^","msgtype":"m.text"},"ts":1359517329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: could you explain why? I got used to C++ programming and modifying a property without setter/getter makes me feel uneasy :)","msgtype":"m.text"},"ts":1359517368000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Because it's a C++ pattern, and that's now idiomatic JS. ^_^","msgtype":"m.text"},"ts":1359517412000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Most of the DOM's sins can be traced to C++ programmers trying to apply C++ idioms to JS.  (Or Java programmers doing the same.)","msgtype":"m.text"},"ts":1359517442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no, the idea is sane :)","msgtype":"m.text"},"ts":1359517450000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"JS just provides property getters and setters so there's no issue in the future","msgtype":"m.text"},"ts":1359517467000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Sorry, I was referring specifically to the syntax that kochi was suggesting, where the setter was an expliclitly-named \"setFoo\" method.","msgtype":"m.text"},"ts":1359517511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm, but what if assigning .enable = true is a heavy operation? in that case, should we have an asynchronous method with callback?","msgtype":"m.text"},"ts":1359517525000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yeah, setters will hopefully be a thing of the past soon","msgtype":"m.text"},"ts":1359517528000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"Yes, the .enabled property might be a JS getter/setter under the hood.","msgtype":"m.text"},"ts":1359517529000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even ObjC added properties","msgtype":"m.text"},"ts":1359517536000,"senderName":"esprehn_","senderId":"esprehn_@irc"},
{"content":{"body":"kochi: It depends on the specifics.","msgtype":"m.text"},"ts":1359517538000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kochi: If setting it would do enough work to jank the thread, or for some other reason takes a non-trivial amount of time, then yes, you probably want it to be asynchronous.","msgtype":"m.text"},"ts":1359517580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And thus a method with callbacks or events.","msgtype":"m.text"},"ts":1359517590000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"esprehn_: that depends on the architecture. There's nothing in principle about computer science that says that the rendering can't happen off the main thread without main thread involvement.","msgtype":"m.text"},"ts":1359517593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: I see, probably people agree if the synchronous assignment blocks, having async method would be preferred.","msgtype":"m.text"},"ts":1359517623000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1359517729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kochi: Like if it has to communicate cross-process, for example.","msgtype":"m.text"},"ts":1359517751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks for the advice.","msgtype":"m.text"},"ts":1359517798000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"TabAtkins: so .setFoo() or .isFoo() is generally not a preferred naming?","msgtype":"m.text"},"ts":1359517876000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: In general, yes.  isFoo(), sometimes, depending on the API.  If it's just to check on a boolean, then it's frowned upon.","msgtype":"m.text"},"ts":1359517905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But if it's something like \"isArray(object-that-might-be-an-array)\", it's okay.","msgtype":"m.text"},"ts":1359517931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i see.","msgtype":"m.text"},"ts":1359517941000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Hixie: but real software is bound by the graphics systems of the OS they run on, and Microsoft isn't going to reengineer Direct3D to allow cross-process rendering to allow Firefox to implement it, so in reality they'd have to do something else","msgtype":"m.text"},"ts":1359518753000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"in reality i'd expect dedicated (not shared) workers to run in the same process as the thread that created them, and for most threaded rendering to use dedicated workers, so if they only have to fall back to something slow for shared workers, that's probably OK","msgtype":"m.text"},"ts":1359518935000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: sure, and the spec allows that. But the spec has to be written for next decade's architectures as well as this decade's, so its constraints are sometimes narrower (or its requirements wider) than today's tech would imply.","msgtype":"m.text"},"ts":1359519032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i don't think that applies here; if it was unreasonable to implement (which it probably isn't), the spec could forbid it today and relax the restriction when tech catches up","msgtype":"m.text"},"ts":1359519168000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"D3D allows for cross-process rendering just fine if you can assume D3D9Ex or up","msgtype":"m.text"},"ts":1359520339000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"so win xp is a bit screwed, but the drivers are so bad there you probably don't want to attempt to use the GPU for canvas anyway","msgtype":"m.text"},"ts":1359520363000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1359521157000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"zewt: not sure exactly what you're referring to","msgtype":"m.text"},"ts":1359522175000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I prefer the Mark Watson messages that he sends from his iPhone","msgtype":"m.text"},"ts":1359530591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they are much easiser to read -- much easier to distinguish what's him from what who he's quoting","msgtype":"m.text"},"ts":1359530648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam|away, http://mcc.id.au/2013/lca-webidl/?full#Enumerations is wrong","msgtype":"m.text"},"ts":1359532423000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ctx.fillRule = \"something\";  // throws TypeError","msgtype":"m.text"},"ts":1359532429000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Actually, for attributes, it's ignored silently","msgtype":"m.text"},"ts":1359532443000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: on mac do you know is there a target name I can give to mach to get it to build a *.dmg?","msgtype":"m.text"},"ts":1359533927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, package","msgtype":"m.text"},"ts":1359535176000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Can someone review http://wiki.whatwg.org/wiki/Why_not_conneg#Server-side_choice_is_worse_for_intermediate_caches_than_browser-side_choice for technical accuracy, please?","msgtype":"m.text"},"ts":1359535194000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: super thanks","msgtype":"m.text"},"ts":1359535389000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Np :)","msgtype":"m.text"},"ts":1359535402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: Oh, interesting point. But I don't think I know better than you how HTTP caching works, so I don't think the fact that I don't see an error (without reading the spec) means that there are no errors","msgtype":"m.text"},"ts":1359535419000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: sounds about right","msgtype":"m.text"},"ts":1359536158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: HTTP caching combined with content negotiation is pain","msgtype":"m.text"},"ts":1359536179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: might want to ask mnot / jreschke I suppose","msgtype":"m.text"},"ts":1359536204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: kinda weird that the Notifications WG was extended without anyone asking me about it...","msgtype":"m.text"},"ts":1359547023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I guess that's pretty much par for the course.","msgtype":"m.text"},"ts":1359547086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder where http://www.w3.org/TR/its20/ is used to the extent of its-storage-size=25","msgtype":"m.text"},"ts":1359548944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, for HTML's hyphenless design there's quite a few hyphens there","msgtype":"m.text"},"ts":1359548992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: about Notifications WG, I should have given you a heads-up about it","msgtype":"m.text"},"ts":1359549115000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you knew I had asked if anybody else would be willing to chair the group, right?","msgtype":"m.text"},"ts":1359549155000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Btw, participating in the TAG as a non-Member is difficult as it requires Member access to e.g. dial into the teleconference","msgtype":"m.text"},"ts":1359549166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think I was just confused about the meaning of \"very soon\" in http://lists.w3.org/Archives/Public/public-web-notification/2012Nov/0008.html","msgtype":"m.text"},"ts":1359549199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(The TAG problem is largely theoretical for me btw starting Monday next week, but still.)","msgtype":"m.text"},"ts":1359549255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice way to leave us hanging :)","msgtype":"m.text"},"ts":1359549318000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: if unlike me you can access https://lists.w3.org/Archives/Member/tag/latest you might be able to find out more","msgtype":"m.text"},"ts":1359549460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: still if there's no requirement for TAG members to be from W3C member orgs or to sign up for \"invited expert\" member access, then dialing in should not require Member access so I will ask that be changed","msgtype":"m.text"},"ts":1359549470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think the Invited Expert thing is required, not sure if that has happened yet","msgtype":"m.text"},"ts":1359549508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I see, that also answers my next question :)","msgtype":"m.text"},"ts":1359549523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Was hoping to write a blog post, maybe this weekend","msgtype":"m.text"},"ts":1359549524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there are lot of assumptions been made in the way that the TAG currently aoperates that are maybe going to ned to be changed or at least considered more carefully","msgtype":"m.text"},"ts":1359549547000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like I also had my own assumptions about the communication about the Notifications WG but I can see I should have handled that differently","msgtype":"m.text"},"ts":1359549638000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the reason  for the delay between Noveember and now in me saying anything else about it was it took that long to get confirmed agreement about getting a new chair, and then for me to go back to the W3C management and get it all approved","msgtype":"m.text"},"ts":1359549762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and just delays from me personally in not getting around to it faster","msgtype":"m.text"},"ts":1359549776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sounds like you're having a lot of fun with the bureaucracy :)","msgtype":"m.text"},"ts":1359549818000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well handling this kind of stuff is not on my list of favorite things to do","msgtype":"m.text"},"ts":1359549865000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe I should have stepped back and asked somebody else on the team to handle ti","msgtype":"m.text"},"ts":1359549890000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Wouldn't fit in with the beer and other booze on that list? ;)","msgtype":"m.text"},"ts":1359549902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"shochu","msgtype":"m.text"},"ts":1359549933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but yeah","msgtype":"m.text"},"ts":1359549935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"assumes that on Monday annevk will ascend to demigod status like Wesley Crusher did in a notably cringeworthy episode of Star Trek:TNG","msgtype":"m.emote"},"ts":1359550260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sounds about right","msgtype":"m.text"},"ts":1359550417000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"all right shit","msgtype":"m.text"},"ts":1359550735000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you guys guessed it","msgtype":"m.text"},"ts":1359550744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I might as well say","msgtype":"m.text"},"ts":1359550750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we're appointing annevk to be Director","msgtype":"m.text"},"ts":1359550772000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Programmable state-machines in CSS proposal\"","msgtype":"m.text"},"ts":1359550909000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I'm going to skip this","msgtype":"m.text"},"ts":1359550915000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I totally want it to be possible to build a turing machine in CSS. That actually renders the tape.","msgtype":"m.text"},"ts":1359551071000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Pure CSS of course","msgtype":"m.text"},"ts":1359551083000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.bbc.co.uk/news/business-21258205 omg","msgtype":"m.text"},"ts":1359562587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do those people get a job?","msgtype":"m.text"},"ts":1359562688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Would *you* admit to taking anything from Apple?","msgtype":"m.text"},"ts":1359562877000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wow, that's really hard to listen to","msgtype":"m.text"},"ts":1359562892000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"cringes for everyone","msgtype":"m.emote"},"ts":1359562898000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Although when they get onto \"why would you buy a blackberry\" he is pure fail","msgtype":"m.text"},"ts":1359562963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe he could have said \"you wouldn't\" and stopped. That's would have been shorter and contained the same essential message.","msgtype":"m.text"},"ts":1359563026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1359563053000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"(note: I have no idea if BB actually has redeeming features, but \"this product sucks\" is the message I got from that interview)","msgtype":"m.text"},"ts":1359563075000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not acknowledging the question at all was just such a fail. Way to go for the BBC to not let them walk and call the guy out on his marketing speak.","msgtype":"m.text"},"ts":1359563137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but it's a bit unfortunate that question could be interpreted as \"what would you like to be sued for?\"","msgtype":"m.text"},"ts":1359563300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Round corners","msgtype":"m.text"},"ts":1359563349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: ping","msgtype":"m.text"},"ts":1359563679000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1359567657000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"heyo","msgtype":"m.text"},"ts":1359567916000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"jgraham: You don't mind if I add an optional dependency on a couple of C tries for html5lib?","msgtype":"m.text"},"ts":1359570774000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ugh, C","msgtype":"m.text"},"ts":1359570808000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: necolas wants to talk to you","msgtype":"m.text"},"ts":1359571246000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"divya: I'm connected on and off as I hop from meeting to meeting, so the simplest might be email","msgtype":"m.text"},"ts":1359571302000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"with which I'll lag until next week, but at least it won't get lost","msgtype":"m.text"},"ts":1359571313000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: it's ok, there's no rush. i was interested in finding out who to talk to about some things we're encountering while developing our (twitter) widgets.","msgtype":"m.text"},"ts":1359571407000,"senderName":"necolas","senderId":"necolas@irc"},
{"content":{"body":"necolas: sure thing!","msgtype":"m.text"},"ts":1359571434000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'm leaving here in 5 minutes, so either some time later, or robin⊙wo as you prefer","msgtype":"m.text"},"ts":1359571461000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: thanks, sounds good.","msgtype":"m.text"},"ts":1359571474000,"senderName":"necolas","senderId":"necolas@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1359571496000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Ms2ger: The tests you added to html5lib are wrong in their expectation","msgtype":"m.text"},"ts":1359571534000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You need more whitespace. Will fix.","msgtype":"m.text"},"ts":1359571587000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, I'm afraid I have to admit I never got around to actually running them :)","msgtype":"m.text"},"ts":1359572444000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Not full state machines, but the ability to design multi-step animations between states, seems useful.","msgtype":"m.text"},"ts":1359572677000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: Have you checked the implementation for badness? e.g. istr that trie-based implementations of entity parsing can use rather a large amount of memory if not done carefully","msgtype":"m.text"},"ts":1359580275000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yes.","msgtype":"m.text"},"ts":1359584091000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This drag and drop polyfill should be working in IE8&9 http://jonathantneal.github.com/dropfile/","msgtype":"m.text"},"ts":1359584869000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"that's an impressive accomplishment","msgtype":"m.text"},"ts":1359584885000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: Section 4.6.14 (samp element), \"Nested samp and kbd elements...\"","msgtype":"m.text"},"ts":1359585164000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Shouldn't it be \"Nested *span* and kbd elements...\"?","msgtype":"m.text"},"ts":1359585187000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"no?","msgtype":"m.text"},"ts":1359585198000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would it be span?","msgtype":"m.text"},"ts":1359585201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That seems to be what the accompanying example is showing.","msgtype":"m.text"},"ts":1359585215000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"<span class=\"prompt\">","msgtype":"m.text"},"ts":1359585227000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Or is the example wrong?","msgtype":"m.text"},"ts":1359585257000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Or am I wrong?","msgtype":"m.text"},"ts":1359585262000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"look closer :-)","msgtype":"m.text"},"ts":1359585572000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there are spans there, it's true","msgtype":"m.text"},"ts":1359585575000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but they're just for styling","msgtype":"m.text"},"ts":1359585579000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, but that's what the sentence says -- that samp and kbd are there for \"styling of specific elements of the samp output\"","msgtype":"m.text"},"ts":1359585722000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"But then spans are used for styling!","msgtype":"m.text"},"ts":1359585738000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"yroc: yeah, i can add a comment about the span too.","msgtype":"m.text"},"ts":1359586640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK great. Not to belabor the point, but when the sentence introducing the example says, \"Nested samp and kbd elements allow for the styling of specific elements of the sample output...\", what is the 'specific element' that sample output that samp is styling in the example?","msgtype":"m.text"},"ts":1359587167000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Sorry: what is the 'specific element' that samp is styling in the example?","msgtype":"m.text"},"ts":1359587219000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Because samp is wrapping the entire block.","msgtype":"m.text"},"ts":1359587240000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"samp is styling the \"output\" of the computer, like, what would be on the screen","msgtype":"m.text"},"ts":1359587493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and \"kbd\" is styling the input; in the case of kbd-nested-in-samp, the part of the output that echoed the input","msgtype":"m.text"},"ts":1359587511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Under <kbd>'s definition, the spec says \"When the kbd element is nested inside a samp element, it represents the input as it was echoed by the system.\")","msgtype":"m.text"},"ts":1359587547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(reload for the latest update to that example btw)","msgtype":"m.text"},"ts":1359587569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: you around?","msgtype":"m.text"},"ts":1359587597000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: OK, it's clear. Thanks very much :)","msgtype":"m.text"},"ts":1359588013000,"senderName":"yroc","senderId":"yroc@irc"},
{"content":{"body":"Have you guys already addressed some of the keyboard issues talked about here? http://codeflow.org/entries/2013/jan/30/keyboard-events-in-javascript-are-broken/","msgtype":"m.text"},"ts":1359588270000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"not to my knowledge","msgtype":"m.text"},"ts":1359588282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a huge amount of work that nobody who's sane has been brave enough to attempt","msgtype":"m.text"},"ts":1359588300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17155 ping","msgtype":"m.text"},"ts":1359588355000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen, jgraham, gsnedders, abarth: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17924","msgtype":"m.text"},"ts":1359589448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well gee, what all needs to be done? Write a spec?","msgtype":"m.text"},"ts":1359589986000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: write a ton of test cases, figure out what the browsers are actually doing, figure out what a common ground is, convince all the browser vendors that converging on that common ground makes sense, and speccing it.","msgtype":"m.text"},"ts":1359590213000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then, maintaining the spec for several years as everyone finds errors in your work :-)","msgtype":"m.text"},"ts":1359590246000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just that?","msgtype":"m.text"},"ts":1359590256000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1359590260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"more or less","msgtype":"m.text"},"ts":1359590263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: any estimate of man hours for that? maybe 1000?","msgtype":"m.text"},"ts":1359590268000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1359590278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iirc keyboard stuff is hard because everyone's browser sniffing to work around the differences, which makes converging existing apis hard","msgtype":"m.text"},"ts":1359590318000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"maybe that's a bit high. 300-500 spaced out over a few years","msgtype":"m.text"},"ts":1359590321000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"We'll get fifty developers together and have it specced out over a weekend.","msgtype":"m.text"},"ts":1359590352000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"reverse engineering the browsers is probably a full-time job for a couple of months, if you're not used to doing it, plus a month or two getting up to speed; figuring out what they're doing and what the common ground is is probably another month or so full time, convincing the vendors i'll get back to, writing the spec if you're used to it is probably a couple of days, if you're not maybe a month, full time.","msgtype":"m.text"},"ts":1359590355000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maintaining it is probably a low-bandwidth job for 5 years, maybe a day a week at most","msgtype":"m.text"},"ts":1359590374000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"convincing the browser vendors to converge on one thing might be impossible, so i can't estimate how long it'd take","msgtype":"m.text"},"ts":1359590389000,"senderName":"Hixie","senderId":"Hixie@irc"}
]