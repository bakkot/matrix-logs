[
{"content":{"body":"JakeA: for no-cors range requests, did you look at CORB?","msgtype":"m.text"},"ts":1522845778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven't. Will catch up now.","msgtype":"m.text"},"ts":1522845841000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: looks sensible. Doesn't get in the way of the range stuff I'm looking at.","msgtype":"m.text"},"ts":1522848280000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"K","msgtype":"m.text"},"ts":1522848685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"With setTimeout(fn, 0) on a page in a parser-blocking script, should fn be invoked before the DOMContentLoaded event is fired?","msgtype":"m.text"},"ts":1522851345000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: timers are in a diff source, so donâ€™t think so","msgtype":"m.text"},"ts":1522851631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok, because FF and Chrome seem to handle this differently (FF will run the timeout before DOMContentLoaded, chrome after) would you expect they should behave the same?","msgtype":"m.text"},"ts":1522852137000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: not necessarily, since it's up to the browser to determine relative priorities","msgtype":"m.text"},"ts":1522852179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok that's what I thought","msgtype":"m.text"},"ts":1522852190000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I thought I remembered they could sort of do what they wanted wtih different sources","msgtype":"m.text"},"ts":1522852209000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"It's a little scary though since I'm not sure web developers take that kinda thing into account","msgtype":"m.text"},"ts":1522852232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How about https://gist.github.com/domfarolino/e0a19349f7134b9798e984c81138873c, would you expect the <link> load event fired to appear first in the console?","msgtype":"m.text"},"ts":1522852770000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I use async script here that runs before the parser-blocking script to ensure that the event listeners are setup before DOMContentLoaded event has a chance to fire","msgtype":"m.text"},"ts":1522852821000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Chrome won't show the <link> load event fired until after DOMContentLoaded, whereas FF is opposite","msgtype":"m.text"},"ts":1522852841000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"that one is tricky, it depends on whether the browser decides to wait for the stylesheet","msgtype":"m.text"},"ts":1522852906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gets tempted to try and write an extension to redirect people away from /TR/ again","msgtype":"m.emote"},"ts":1522852924000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think in theory it should, although I could also see a case that it doesn't, unless the script asks for layout","msgtype":"m.text"},"ts":1522852924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Wait for the stylesheet to load before executing async script?","msgtype":"m.text"},"ts":1522853027000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: before executing the sync script","msgtype":"m.text"},"ts":1522853087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe all browsers block parser-blocking scripts from running before previously discovered stylesheets are loaded right now, which should \"ensure\" that the async script will run.","msgtype":"m.text"},"ts":1522853159000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I can't see how, if both listeners got set before DOMContentLoaded, the DOMContentLoaded handler would be fired first","msgtype":"m.text"},"ts":1522853190000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Because the parser-blocking script can only start running after the <link> load is loaded (and its event fired), it *must* come first right?","msgtype":"m.text"},"ts":1522853213000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: well, loaded will queue a task to fire","msgtype":"m.text"},"ts":1522853232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: when that task runs depends on which source it's in","msgtype":"m.text"},"ts":1522853250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: and how much priority that has for the browser","msgtype":"m.text"},"ts":1522853258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Right, but won't DOMContentLoaded and `<link> load` events be queued to the same source?","msgtype":"m.text"},"ts":1522853290000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Or is that not mandated","msgtype":"m.text"},"ts":1522853294000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: maybe, some of this is a little vague","msgtype":"m.text"},"ts":1522853303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My assumption with this example was that they will be the same source, therefore should be well-ordered","msgtype":"m.text"},"ts":1522853314000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Ahh ok","msgtype":"m.text"},"ts":1522853316000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: I haven't checked; if they go to the same source you'd be correct","msgtype":"m.text"},"ts":1522853320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can dig around for it, I assume where we actually queue this task would be in HTML and not DOM right?","msgtype":"m.text"},"ts":1522853352000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yup","msgtype":"m.text"},"ts":1522853474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(both)","msgtype":"m.text"},"ts":1522853480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah so basically #queue-a-task says all tasks from a specific source must go to the same task queue, but nothing states that the DOMContentLoaded and other element `load` events originate from the same task source","msgtype":"m.text"},"ts":1522853847000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"And I guess there's not too much use in specifying that probably","msgtype":"m.text"},"ts":1522853868000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I guess I just assumed they *must* originate from same source :(","msgtype":"m.text"},"ts":1522853892000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: we totally should specify their sources","msgtype":"m.text"},"ts":1522854019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Precisely so you can answer whether the order is defined","msgtype":"m.text"},"ts":1522854041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok initially that's what I thought but didn't know if that would be too restricting","msgtype":"m.text"},"ts":1522854056000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Cool :) I can open an issue to discuss","msgtype":"m.text"},"ts":1522854067000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Maybe specifying like a few key sources that must always exist, and giving impls freedom to add their own would be nice","msgtype":"m.text"},"ts":1522854198000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Would allow us to fire these sorts of DOM events consistently from the same source to the same queue I guess","msgtype":"m.text"},"ts":1522854221000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"There is some of that already","msgtype":"m.text"},"ts":1522854524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: You can now send key events in WPT in firefox and chrome","msgtype":"m.text"},"ts":1522859783000,"senderName":"kereliuk","senderId":"kereliuk@irc"},
{"content":{"body":"Tab key should work... test_driver.send_keys(element, keys)","msgtype":"m.text"},"ts":1522859830000,"senderName":"kereliuk","senderId":"kereliuk@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1522860091000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oooh wow","msgtype":"m.text"},"ts":1522860334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Incrementally adding this stuff should be mcuh easier now, assuming features you want are exposed in WebDriver","msgtype":"m.text"},"ts":1522861032000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you want e.g. control over the GC or fake camera input, that's harder :)","msgtype":"m.text"},"ts":1522861059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is it keys = \"tab\" or keys = \"\\t\" or...?","msgtype":"m.text"},"ts":1522861145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hahaha","msgtype":"m.text"},"ts":1522861193000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions","msgtype":"m.text"},"ts":1522861195000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\\uE004","msgtype":"m.text"},"ts":1522861213000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: It seems at the end of these sections (https://html.spec.whatwg.org/multipage/semantics.html#obtaining-a-resource-from-a-link-element & https://html.spec.whatwg.org/multipage/parsing.html#the-end) the task source is specified as the DOM manipulation task source. So it appears this is specified, and Chrome doesn't follow it (a quick look of the source shows that the blink `LinkLoader` actually uses the networking","msgtype":"m.text"},"ts":1522861361000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"task source) so I'll refrain from filing a spec issue","msgtype":"m.text"},"ts":1522861361000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: what Chrome does seems a bit more reasonable though","msgtype":"m.text"},"ts":1522861596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I find it a little confusing personally. I would think the \"load\" event of a stylesheet that's blocking a script should be observable before the document is finished parsing. Because for the document to finish parsing, the stylesheet must be finished, we just can't tell from JS it seems","msgtype":"m.text"},"ts":1522861779000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: in this specific scenario it makes sense for them to use the same task source maybe, but generally network-driven events should use the networking task source","msgtype":"m.text"},"ts":1522861852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah that too makes sense. I wonder if we should change the spec to fire load/error events from the networking source","msgtype":"m.text"},"ts":1522862034000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: I think so; def worth filing an issue on","msgtype":"m.text"},"ts":1522862864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there a way to run a specific WPT on my browser?","msgtype":"m.text"},"ts":1522865121000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: http://w3c-test.org/?","msgtype":"m.text"},"ts":1522865197000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh nevermind, i found w3c-test.org","msgtype":"m.text"},"ts":1522865198000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"gsnedders: yeah, i knew of wpt.fyi and i just thought to look there","msgtype":"m.text"},"ts":1522865225000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"also, does anyone here maintain wpt.fyi?","msgtype":"m.text"},"ts":1522865403000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"the links to w3c-test.org doesn't quite work, because apparently w3c-test.org doesn't serve over SSL and all the links in wpt.fyi uses HTTPS","msgtype":"m.text"},"ts":1522865445000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"jugglinmike: ^","msgtype":"m.text"},"ts":1522865527000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"KiChjang: it should work over HTTPS? though it's frequently super-slow for some reason","msgtype":"m.text"},"ts":1522865599000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah I just loaded it over HTTPS","msgtype":"m.text"},"ts":1522865606000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but yeah, most of the links (i.e., all except tests that rely on HTTPS) should point at HTTP","msgtype":"m.text"},"ts":1522865625000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah, perhaps it was indeed super slow","msgtype":"m.text"},"ts":1522865628000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: https://github.com/w3c/wptdashboard/issues/532","msgtype":"m.text"},"ts":1522865710000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]