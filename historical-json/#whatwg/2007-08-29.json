[
{"content":{"body":"jgraham: you around?","msgtype":"m.text"},"ts":1188359820000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"or any other html5lib hackers?","msgtype":"m.text"},"ts":1188359821000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"is anyone going to be offended if I refer to the selectors API naming debate as a bikeshed problem?","msgtype":"m.text"},"ts":1188396840000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"not me","msgtype":"m.text"},"ts":1188397140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and i participated in it :(","msgtype":"m.text"},"ts":1188397141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"will stay away from naming debates in the future","msgtype":"m.emote"},"ts":1188397200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It was a bikeshed problem where all the colors were ugly shades of purple and beige","msgtype":"m.text"},"ts":1188397201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"fwiw, http://programming.reddit.com/info/2jrrg/comments ","msgtype":"m.text"},"ts":1188397320000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"accessing radiobuttons with the [[Get]] method is funny -- if there's only one control that matches, it returns it directly, but if there are more it returns a nodelist","msgtype":"m.text"},"ts":1188397620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.forms[0][\"foo\"]","msgtype":"m.text"},"ts":1188397621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and undefined if 0 match","msgtype":"m.text"},"ts":1188397680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Same with checkboxes","msgtype":"m.text"},"ts":1188398160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1188398220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"And we should do our best to prevent the same behavior from happening to responsebodies in multipart xhr responses :)","msgtype":"m.text"},"ts":1188398520000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"is there anyway to check WF2 support through JS?","msgtype":"m.text"},"ts":1188403140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"document.implementation.hasFeature('WebForms', '2.0')?","msgtype":"m.text"},"ts":1188403380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yeah, that returns true in Opera","msgtype":"m.text"},"ts":1188404160000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"gsnedders: it's probably safer to check specific methods etc before using them","msgtype":"m.text"},"ts":1188404280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: need some way to check if |input|@type=date has a native controller before falling back to a JavaScript one","msgtype":"m.text"},"ts":1188404281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(which will just be a text field on something with neither WF2 or JS)","msgtype":"m.text"},"ts":1188404340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":".type == \"date\" ?","msgtype":"m.text"},"ts":1188404341000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does that work?","msgtype":"m.text"},"ts":1188404342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"think so","msgtype":"m.text"},"ts":1188404343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does that set itself to \"text\" in browsers that don't support it?","msgtype":"m.text"},"ts":1188404344000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1188404400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so you know if it's not supported","msgtype":"m.text"},"ts":1188404401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if (input.type != \"date\") { // not supported","msgtype":"m.text"},"ts":1188404402000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"falls back in Saf at least","msgtype":"m.text"},"ts":1188404403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"falls back in ie and ff too","msgtype":"m.text"},"ts":1188404520000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"ff2, ie7","msgtype":"m.text"},"ts":1188404521000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"there you go","msgtype":"m.text"},"ts":1188404522000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1188404580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"welcome :)","msgtype":"m.text"},"ts":1188404581000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://ajaxian.com/archives/selectors-api-method-names-selectelement-and-selectallelements","msgtype":"m.text"},"ts":1188411240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://dean.edwards.name/weblog/2007/08/names/","msgtype":"m.text"},"ts":1188411241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://lachy.id.au/log/2007/06/naming-debate","msgtype":"m.text"},"ts":1188411242000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"oops, wrong link. http://lachy.id.au/log/2007/08/naming-debate-revisited","msgtype":"m.text"},"ts":1188411420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"kingryan: what did you do regarding text/plain sniffing?","msgtype":"m.text"},"ts":1188414300000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: what do you mean?","msgtype":"m.text"},"ts":1188414301000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"kingryan: in your implementation of feed/html, did you just count every text/plain document as such, and not do what browsers do, and sniff it?","msgtype":"m.text"},"ts":1188414360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the sniffing impl I've added to html5lib/ruby isn't actually integrated w/ the rest of the parser","msgtype":"m.text"},"ts":1188414361000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"in other words, I haven't implemented the part of the decision tree that switches on content-type","msgtype":"m.text"},"ts":1188414420000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"... if that answers your question, gsnedders ","msgtype":"m.text"},"ts":1188414480000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"ya","msgtype":"m.text"},"ts":1188414481000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I've also implemented it at technorati, where we don't really care about text/plain","msgtype":"m.text"},"ts":1188414482000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"we only really care wether something is a feed or html","msgtype":"m.text"},"ts":1188414483000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"or other","msgtype":"m.text"},"ts":1188414484000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"kingryan: but what if text/plain _is_ a feed or HTML?","msgtype":"m.text"},"ts":1188414540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I wasn't clear... we don't care if people *say* its text/plain","msgtype":"m.text"},"ts":1188414541000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"you just sniff it regardless of the claim?","msgtype":"m.text"},"ts":1188414542000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1188414600000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"but we're only indexing URLs that either 1) people pinged us with or 2) were discovered through link[@rel=~alternate]","msgtype":"m.text"},"ts":1188414660000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"so, it works well enough for us","msgtype":"m.text"},"ts":1188414780000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"the feed/html algorithm currently concludes \"otherwise return text/html\". How do you tell apart HTML from the rest?","msgtype":"m.text"},"ts":1188414781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"because of where it sits in the decision tree, it doesn't matter","msgtype":"m.text"},"ts":1188414840000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"goes off to start a text/plain blog","msgtype":"m.emote"},"ts":1188414841000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"if someone says \"this is a feed\", but its not, we give up on processing it","msgtype":"m.text"},"ts":1188414842000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"does that happen a lot?","msgtype":"m.text"},"ts":1188414843000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"the common case is an http 500 which has html","msgtype":"m.text"},"ts":1188414844000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1188414900000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"or 503","msgtype":"m.text"},"ts":1188414901000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"503?","msgtype":"m.text"},"ts":1188414902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"503 = \"temporarily unavailable\"","msgtype":"m.text"},"ts":1188414903000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"http error 503: my web hosting sucks","msgtype":"m.text"},"ts":1188414904000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"markp: I was wondering whether I'd get such a response from you :)","msgtype":"m.text"},"ts":1188414905000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the more common case is that someone says their feed is rss , but its really atom","msgtype":"m.text"},"ts":1188414906000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"I don't even differentiate between the two. Just check if we have a feed or not.","msgtype":"m.text"},"ts":1188414960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"kingryan: do you use feedparser to determine feed version?","msgtype":"m.text"},"ts":1188414961000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"just curious","msgtype":"m.text"},"ts":1188415020000,"senderName":"markp","senderId":"markp@irc"},
{"content":{"body":"markp: our old spider uses UFP, but is slowly being replaced by one written in ruby","msgtype":"m.text"},"ts":1188415140000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"for which the parsing is mostly based on html5lib","msgtype":"m.text"},"ts":1188415200000,"senderName":"kingryan","senderId":"kingryan@irc"},
{"content":{"body":"tries running the html5lib validator on his documentation examples","msgtype":"m.emote"},"ts":1188415980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=%3C%21DOCTYPE+HTML%3E%0D%0A%3Ctitle%3E%3Cb%3E+%26amp%3B+%3Ci%3E%3C%2Ftitle%3E - how come that's sensible there, but gives different results in SVN html5lib?","msgtype":"m.text"},"ts":1188416040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: what does the latter give?","msgtype":"m.text"},"ts":1188416400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"shouldn't the innerHTML view escape < and > in title, btw?","msgtype":"m.text"},"ts":1188416460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and &","msgtype":"m.text"},"ts":1188416461000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":">>> print p.parse('<!doctype html><title><b> &amp; <i></title>').printTree()","msgtype":"m.text"},"ts":1188416520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"#document","msgtype":"m.text"},"ts":1188416521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|  <!DOCTYPE html>","msgtype":"m.text"},"ts":1188416522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|  <html>","msgtype":"m.text"},"ts":1188416580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|    <head>","msgtype":"m.text"},"ts":1188416581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|      <title>","msgtype":"m.text"},"ts":1188416582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|        <body>","msgtype":"m.text"},"ts":1188416583000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|          <b>","msgtype":"m.text"},"ts":1188416584000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|            \" & \"","msgtype":"m.text"},"ts":1188416585000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"|            <i>","msgtype":"m.text"},"ts":1188416586000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"aha.","msgtype":"m.text"},"ts":1188416587000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"regression then","msgtype":"m.text"},"ts":1188416640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Looks like <title> is meant to be parsed as RCDATA","msgtype":"m.text"},"ts":1188416700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1188416760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh attribute values","msgtype":"m.text"},"ts":1188424200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I didn't do those","msgtype":"m.text"},"ts":1188424201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1188424202000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That looks a bit more promising","msgtype":"m.text"},"ts":1188424320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: <plaintext> is also a cdata element","msgtype":"m.text"},"ts":1188424440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"for this purpose anyway","msgtype":"m.text"},"ts":1188424441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"otherwise looks right","msgtype":"m.text"},"ts":1188424500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=%3Cnoscript%3E doesn't look like it's parsed correctly (or there's a bug in the spec)","msgtype":"m.text"},"ts":1188424560000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"markp: Oh, I'm happy to slack - I just wanted to see if it worked already, and only found that one problem, so I'm content to wait until it works even better in the future ;-)","msgtype":"m.text"},"ts":1188424561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"<noscript>\" is supposed to be parsed into <html><head><noscript></noscript></head><body></body></html> if i read the spec right","msgtype":"m.text"},"ts":1188424800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: That looks more plausible","msgtype":"m.text"},"ts":1188424860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is wondering why html5lib has constants named rcdataElements and cdataElements that seem to be almost exactly back to front","msgtype":"m.emote"},"ts":1188424920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Where should the </noscript> be generated in the spec?","msgtype":"m.text"},"ts":1188426660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: i don't understand the question","msgtype":"m.text"},"ts":1188426780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: you mean as an implied token in the tree construction?","msgtype":"m.text"},"ts":1188426840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1188426841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"they aren't","msgtype":"m.text"},"ts":1188426842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the cdata parsing algorithm just looks until it finds a token that's not a character token","msgtype":"m.text"},"ts":1188426900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if that's the end tag it's ignored","msgtype":"m.text"},"ts":1188426901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"otherwise you carry on","msgtype":"m.text"},"ts":1188426902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so say the tokens are: start tag \"noscript\", character \"X\", end-of-file","msgtype":"m.text"},"ts":1188426903000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, I see","msgtype":"m.text"},"ts":1188426960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We're mistakenly inserting the token for <noscript> into the stack of open elements","msgtype":"m.text"},"ts":1188426961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"when you get to the end-of-file it's a parse error and you get back to \"in head\"","msgtype":"m.text"},"ts":1188426962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems so","msgtype":"m.text"},"ts":1188427020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it should get the same treatment as <style> i think","msgtype":"m.text"},"ts":1188427140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"basically","msgtype":"m.text"},"ts":1188427141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or exactly :)","msgtype":"m.text"},"ts":1188427200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if scripting is enabled","msgtype":"m.text"},"ts":1188427260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think we get <style> wrong too","msgtype":"m.text"},"ts":1188427261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=%3Cstyle%3E","msgtype":"m.text"},"ts":1188427262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Eh, that doesn't look like it should work","msgtype":"m.text"},"ts":1188427263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: OK I have a fix but I think this code needs a little more love (tomorrow :) )","msgtype":"m.text"},"ts":1188427860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok :)","msgtype":"m.text"},"ts":1188428160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonder if looking at the links href=\"\" would yield better results than the image's src=\"\" for <a href=...><img src=...></a>","msgtype":"m.text"},"ts":1188429180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"perhaps href more often contains things like query strings","msgtype":"m.text"},"ts":1188429181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<a href=\"page18.html\"><img src=\"/images/next.gif\"></a> wouldn't do so well","msgtype":"m.text"},"ts":1188429240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1188429300000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]