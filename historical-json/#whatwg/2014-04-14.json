[
{"content":{"body":"Urgh, appcache examples are... lacking.","msgtype":"m.text"},"ts":1397441827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Say I want to cache a single-page app.  There's one data script I'd like to load fresh when online, but allow to draw from cache when offline.  How to write?","msgtype":"m.text"},"ts":1397441865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I kinda suspect it's \"CACHE: data-script.js SETTINGS: prefer-online NETWORK: data-script.js\"?","msgtype":"m.text"},"ts":1397441902000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The loading algo is too long and annoying to read to figure out what the actual behavior of this is.","msgtype":"m.text"},"ts":1397441932000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: yeah after ES6 ships we hope to move to something like that.","msgtype":"m.text"},"ts":1397444895000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: cool","msgtype":"m.text"},"ts":1397445697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: isn't this wrong for inlines? \"If the property does not apply to this element, then the element has no used value for that property.\" http://dev.w3.org/csswg/css-cascade/#used","msgtype":"m.text"},"ts":1397464216000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: (and the width/height properties)","msgtype":"m.text"},"ts":1397464229000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://telemetry.mozilla.org/#release/28/DECODER_INSTANTIATED_HZ/saved_session/Firefox is encouraging","msgtype":"m.text"},"ts":1397468529000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hi.","msgtype":"m.text"},"ts":1397468555000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"I have seen <html lang=\"en-US-x-hixie\"...> on developers.whatwg.org. What does it mean? Is it Hixie's dialect of US English? ;-)","msgtype":"m.text"},"ts":1397468625000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: yes","msgtype":"m.text"},"ts":1397468642000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"IZh: http://ian.hixie.ch/bible/english","msgtype":"m.text"},"ts":1397468689000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if changing it to en-GB-x-hixie would be a good way to annoy people who want to fork it into en-US","msgtype":"m.emote"},"ts":1397468703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What's the point of having own language? I don't see drastical difference to en-US.","msgtype":"m.text"},"ts":1397468948000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Welcome back hsivonen!","msgtype":"m.text"},"ts":1397471964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it'd be great if hz-gb-2312 could be nuked","msgtype":"m.text"},"ts":1397471983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm wondering if I should just nuke it without moving it to c-c myself and let Thunderbird devs know that it's up to them to add it to c-c","msgtype":"m.text"},"ts":1397473991000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"...or if I should move it to c-c","msgtype":"m.text"},"ts":1397473999000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: curiously, the supposedly unreachable IBM encodings have been reached in very small numbers *somehow*","msgtype":"m.text"},"ts":1397474035000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder what kind of bug is involved","msgtype":"m.text"},"ts":1397474046000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Could it be that custom builds of Firefox still report back?","msgtype":"m.text"},"ts":1397474092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno. could be a fringe extension doing something","msgtype":"m.text"},"ts":1397474114000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: makes sense I guess","msgtype":"m.text"},"ts":1397474186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can't even get c-c to build right now","msgtype":"m.text"},"ts":1397474207000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it would be easier to help TB devs if I could build their stuff","msgtype":"m.text"},"ts":1397474223000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I think letting Thunderbird know what's up is okay...","msgtype":"m.text"},"ts":1397474239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it's a bit unclear to me how alive that project still is","msgtype":"m.text"},"ts":1397474282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. I could do the initial \"removal\" the same way EUC-TW and the IBM encodings were removed","msgtype":"m.text"},"ts":1397474299000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: e.g. for Firefox OS we are building a new email client","msgtype":"m.text"},"ts":1397474300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i.e. remove it from the Encoding Standard alias table","msgtype":"m.text"},"ts":1397474314000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: You haven't used the FirefoxOS email client have you?","msgtype":"m.text"},"ts":1397474324000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't think that would clarify what I'm unclear about","msgtype":"m.text"},"ts":1397474367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Comparing it to Thunderbird isn't really talking about two similar products","msgtype":"m.text"},"ts":1397474376000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: yeah that makes sense","msgtype":"m.text"},"ts":1397474377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway the status of Thunderbird is that Mozilla keep the lights on but doesn't pay anyone to work on it","msgtype":"m.text"},"ts":1397474421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There does seem to be some sort of community around it","msgtype":"m.text"},"ts":1397474472000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: btw, I'm happy to rewrite the algorithms to use bit shifting and such, I just need to figure out how to do it; I'm not really familiar with that kind of math, I imagine an implementor would be though","msgtype":"m.text"},"ts":1397474516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see","msgtype":"m.text"},"ts":1397475155000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so SimonSapin explained how to fix utf-8","msgtype":"m.text"},"ts":1397480412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was going to say something else, but I updated the bug instead it seems","msgtype":"m.text"},"ts":1397483651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whoa","msgtype":"m.text"},"ts":1397483861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GitHub displaying .csv is sweet https://github.com/briandailey/pycon-2014-job-fair/blob/master/data.csv","msgtype":"m.text"},"ts":1397483873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that kind of stuff just makes you want to start using that format again","msgtype":"m.text"},"ts":1397483890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we should get things like <table src=.cvs> without loads of JavaScript","msgtype":"m.text"},"ts":1397483933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems like it would be pretty weird","msgtype":"m.text"},"ts":1397484025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would be kind of like a macro in the parser since it would presumably expand to a whole big DOM","msgtype":"m.text"},"ts":1397484057000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, I guess it could be a shadow DOM, but this is a case where encapsulation doesn't seem helpful","msgtype":"m.text"},"ts":1397484107000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Didn't tantek propose that eons ago?","msgtype":"m.text"},"ts":1397484129000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: I was thinking DOM manipulation","msgtype":"m.text"},"ts":1397484271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: there's remnants of it in HTML4","msgtype":"m.text"},"ts":1397484281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I think IE had something like it","msgtype":"m.text"},"ts":1397484287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In unrelated related news, Firefox OS isn't a company","msgtype":"m.text"},"ts":1397484326000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I assume","msgtype":"m.text"},"ts":1397484329000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1397484340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why isn't it a company?","msgtype":"m.text"},"ts":1397484356000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why is it news?","msgtype":"m.text"},"ts":1397484366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because that csv claims that a company called \"Firefox OS\" was at the jobs fair","msgtype":"m.text"},"ts":1397484393000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it seems that was fixed two hours ago","msgtype":"m.text"},"ts":1397484432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, well I got an old version then","msgtype":"m.text"},"ts":1397484460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"GitHub must not like you","msgtype":"m.text"},"ts":1397484471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Understandable","msgtype":"m.text"},"ts":1397484480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Quite","msgtype":"m.text"},"ts":1397484492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://tankredhase.wordpress.com/2014/04/13/heartbleed-and-javascript-crypto/ Hmm, \"One codebase means less room for error.\"... Heartbleed is the perfect example for why one codebase is a very bad idea...","msgtype":"m.text"},"ts":1397486652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"given the statements after the header","msgtype":"m.text"},"ts":1397486800000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"I suspect he means more that fewer lines of code are better","msgtype":"m.text"},"ts":1397486814000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Yeah, the worrying sentence there was \" If there’s anything we’ve learned from Heartbleed, it’s that no matter the choice of programming language, the biggest risk is human error.\"","msgtype":"m.text"},"ts":1397487021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you are only just now learning that human error is the cause of bugs in programs written by humans, I don't know what to say","msgtype":"m.text"},"ts":1397487061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"One kind of human error might be not correctly taking account of the tendency for humans to make errors and work with tools that make such errors especially troublesome","msgtype":"m.text"},"ts":1397487121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Let's just blame Ritchie","msgtype":"m.text"},"ts":1397487148000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger indeed (re table and csv), and I think TabAtkins prototyped it too.","msgtype":"m.text"},"ts":1397487214000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: ping","msgtype":"m.text"},"ts":1397487748000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: http://www.nohello.com/","msgtype":"m.text"},"ts":1397487760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any updates on the IDNA clusterfuck?","msgtype":"m.text"},"ts":1397487820000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: http://lists.w3.org/Archives/Public/www-archive/2014Apr/0018.html","msgtype":"m.text"},"ts":1397487848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: http://www.unicode.org/reports/tr46/proposed.html has my proposed changes, still no syntax definition of a domain though, not sure when we'll get that","msgtype":"m.text"},"ts":1397487876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: mostly, I'm trying to get a sense of what the URL statics will look like","msgtype":"m.text"},"ts":1397487921000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"so I can attempt to convince Firefox to implement them so I can use them","msgtype":"m.text"},"ts":1397487942000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"or at least polyfill them","msgtype":"m.text"},"ts":1397487949000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"I need it for https://github.com/mozilla-comm/jsmime/issues/6","msgtype":"m.text"},"ts":1397487970000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: I think the two methods provided still make sense; the only question is how we want to signify error","msgtype":"m.text"},"ts":1397488039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: return the original string or throw","msgtype":"m.text"},"ts":1397488045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, the other question is about resolving unicode homograph attacks","msgtype":"m.text"},"ts":1397488062000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"if they are allowed per IDNA #46 I'm not going to disallow them","msgtype":"m.text"},"ts":1397488092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"all browsers do that nowadays by displaying the domain name in punycode form if it would contain a homograph","msgtype":"m.text"},"ts":1397488095000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1397488103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so one thing I wanted to add was domainToUI","msgtype":"m.text"},"ts":1397488117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which would use the tricks from the UA to decide whether or not it would do toUnicode in the end","msgtype":"m.text"},"ts":1397488135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1397488144000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"as some browsers only display code points they think their users will understand (Chrome) whereas others follow other recommendations","msgtype":"m.text"},"ts":1397488182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: have you seen mathiasbynens's http://nodejs.org/api/punycode.html API?","msgtype":"m.text"},"ts":1397488236000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: Punycode != IDNA, but I have seen that and did discuss it with him","msgtype":"m.text"},"ts":1397488275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah right, yeah. i guess i was thinking of \"possible URL static functions\"","msgtype":"m.text"},"ts":1397488314000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I'm not sure Punycode can fail","msgtype":"m.text"},"ts":1397488317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: but IDNA ToASCII definitely can","msgtype":"m.text"},"ts":1397488331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: it lacks stringprep necessary for IDNA","msgtype":"m.text"},"ts":1397488335000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"And IDNA ToASCII is always used, even with eventual ToUnicode","msgtype":"m.text"},"ts":1397488348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: as I noted in my github issue, there is 0 pure-JS code that exists that can solve IDNA","msgtype":"m.text"},"ts":1397488365000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"I can kind of polyfill domainToUI today in Firefox, but only because Firefox is apparently violating the URL spec","msgtype":"m.text"},"ts":1397488389000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Firefox' mix of displaying the domain name in Unicode and the rest in ASCII is weird","msgtype":"m.text"},"ts":1397488443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although bz considers it a best effort","msgtype":"m.text"},"ts":1397488465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd argue that shoving things out in Unicode is better than always going to ASCII","msgtype":"m.text"},"ts":1397488491000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"So mathiasbynens' implementation does throw for ToASCII","msgtype":"m.text"},"ts":1397488572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: https://github.com/mathiasbynens/todo/issues/9","msgtype":"m.text"},"ts":1397488620000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: well you need ToASCII either way, and that's what will hit the DNS, it's the question of whether you go ToUnicode afterwards and then ToASCII again later on or just serialize","msgtype":"m.text"},"ts":1397488625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: true, but the more we can hide the punycode from end users, the better","msgtype":"m.text"},"ts":1397488685000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: for end users you will already have to transform the string somehow","msgtype":"m.text"},"ts":1397488715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: you don't want ASCII paths","msgtype":"m.text"},"ts":1397488720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At some point I'll define URL.urlToUI too I suppose","msgtype":"m.text"},"ts":1397488747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or maybe URL.prototype.toUIString()","msgtype":"m.text"},"ts":1397488769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(\"toascii\" sure seems to mean it loses any codepoints over U+7F or so)","msgtype":"m.text"},"ts":1397488775000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic_: does JavaScript have precedents for toUIString()?","msgtype":"m.text"},"ts":1397488783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and yeah I know, just hard to get keep some people from getting confused over what \"ASCII\" means for some reason, heh)","msgtype":"m.text"},"ts":1397488925000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: you mean in `ToASCII` → `encode`? it *should* never throw, the errors are there just in case (http://rawgit.com/bestiejs/punycode.js/master/coverage/punycode.js/punycode.js.html)","msgtype":"m.text"},"ts":1397488942000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: oh okay","msgtype":"m.text"},"ts":1397488976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think so...","msgtype":"m.text"},"ts":1397488998000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"mathiasbynens: so yeah, I dunno what's better","msgtype":"m.text"},"ts":1397489001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when I see JS code with var declarations at the top of functions, I smell old C programmer","msgtype":"m.text"},"ts":1397489034000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic_: is it better to have a static or a method for something like that?","msgtype":"m.text"},"ts":1397489035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah interesting. I feel like this is related to discussions around whether things belong on Math. or Number.prototype....","msgtype":"m.text"},"ts":1397489068000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: yeah I guess","msgtype":"m.text"},"ts":1397489081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably a method though","msgtype":"m.text"},"ts":1397489085000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"since toString() is already a method","msgtype":"m.text"},"ts":1397489089000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: toString() is rather magical","msgtype":"m.text"},"ts":1397489102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1397489110000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: for a long time I didn't even realize it was a thing; I thought objects just stringified","msgtype":"m.text"},"ts":1397489129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: as happens when you do + \"\" and such","msgtype":"m.text"},"ts":1397489142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like WebIDL-inspired thinking ;)","msgtype":"m.text"},"ts":1397489143000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: nah, this was way before IDL","msgtype":"m.text"},"ts":1397489154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't think toString should be a precedent for making other functions-that-convert-to-some-kind-of-string methods","msgtype":"m.text"},"ts":1397489164000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1397489164000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah toString() and valueOf() and then() and toJSON() are all methods used by various parts of the spec","msgtype":"m.text"},"ts":1397489188000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"well, .toString() invokes magic paths in js","msgtype":"m.text"},"ts":1397489191000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"where if you use x in a certain context it will invoke x.method()","msgtype":"m.text"},"ts":1397489220000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and all I want to do is just be able to implement EAI and IDN for email addresses","msgtype":"m.text"},"ts":1397489235000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: yeah sorry","msgtype":"m.text"},"ts":1397489263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: for domain names they'll have to be statics so the current API is roughly how it will be in the end","msgtype":"m.text"},"ts":1397489285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just need to build a FF polyfill so I can test it","msgtype":"m.text"},"ts":1397489308000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: I might change to throwing or maybe returning the empty string in case of bad input","msgtype":"m.text"},"ts":1397489314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Polyfill for what, jtcranmer?","msgtype":"m.text"},"ts":1397489319000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"jtcranmer: but other than that I think those two are stable","msgtype":"m.text"},"ts":1397489335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"except I'm likely to find a corner case I want to test that the current implementations can't handle","msgtype":"m.text"},"ts":1397489335000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"for all of Firefox","msgtype":"m.text"},"ts":1397489336000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JonathanNeal: URL.domainTo*","msgtype":"m.text"},"ts":1397489347000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"does gmail have some setting to logout automatically after closing it?","msgtype":"m.text"},"ts":1397489387000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jtcranmer: got documentation for it? I could add one to polyfill.io","msgtype":"m.text"},"ts":1397489404000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: http://url.spec.whatwg.org/#url-statics","msgtype":"m.text"},"ts":1397489424000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"wow, no idea what that is doing.","msgtype":"m.text"},"ts":1397489468000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yeah, it can't be polyfilled using existing techniques","msgtype":"m.text"},"ts":1397489506000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"which is the problem","msgtype":"m.text"},"ts":1397489509000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"smaug____: is there no box to say the computer is untrusted?","msgtype":"m.text"},"ts":1397489511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jtcranmer: they can, just requires a bunch of code","msgtype":"m.text"},"ts":1397489528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps a better way to put it","msgtype":"m.text"},"ts":1397489545000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"\"there is no extant code that can polyfill it\"","msgtype":"m.text"},"ts":1397489552000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"In dumb people terms, what does it do?","msgtype":"m.text"},"ts":1397489579000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"translates domain names between its different representations","msgtype":"m.text"},"ts":1397489614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/its/their/","msgtype":"m.text"},"ts":1397489619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it converts strings like ケツァルコアトル。tlalocan to xn--bckc7bj7f1a6vd.tlalocan and vice versa","msgtype":"m.text"},"ts":1397489633000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"losing the fancy dots unfortunately","msgtype":"m.text"},"ts":1397489660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"toUI might be able to do some extra tricky for those if people feel inclined","msgtype":"m.text"},"ts":1397489684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"consequence of me not hitting <Meta>-<Space> quickly enough","msgtype":"m.text"},"ts":1397489684000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"jtcranmer: thanks for the explanation, ah, translation","msgtype":"m.text"},"ts":1397489742000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"the part I just described is the easy part (Punycode), the hard part is the preprocessing necessary first (StringPrep/NamePrep)","msgtype":"m.text"},"ts":1397489790000,"senderName":"jtcranmer","senderId":"jtcranmer@irc"},
{"content":{"body":"Hi folks. Just following up on a question I had at a pretty inactive time in the channel about a week and a half ago, regarding the different notions of focus on a web page: http://krijnhoetmer.nl/irc-logs/whatwg/20140403#l-339","msgtype":"m.text"},"ts":1397495611000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"MikeSmith pointed me to SteveF, and jgraham pointed me to Hixie, but I'm not sure either of them got to see or respond to the issues","msgtype":"m.text"},"ts":1397495625000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"manus: Hixie","msgtype":"m.text"},"ts":1397495657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when he's around","msgtype":"m.text"},"ts":1397495660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if it's about focus","msgtype":"m.text"},"ts":1397495666000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i'm here, give me a minute, afk","msgtype":"m.text"},"ts":1397495668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1397495672000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"oh, sweet, ok","msgtype":"m.text"},"ts":1397495675000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"tantek: btw I think I misunderstood what you had said at the webapps wg f2f about the group being prevented from referencing whatwg specs","msgtype":"m.text"},"ts":1397495776000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tantek: and needing the AB to do.. something .. in order for the group to be able to reference whatwg specs instead of copying them","msgtype":"m.text"},"ts":1397495814000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"manus: ok, here now. what's up?","msgtype":"m.text"},"ts":1397495933000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hey Hixie. I just wanted to know if there's any defined/documented behavior for keyboard scrolling focus (as opposed to \"normal\" focus) for overflowed elements such as scrollable divs?","msgtype":"m.text"},"ts":1397496007000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"Hixie: I.e., how should should keyboard scrolling work in different cases such as those in this jsfiddle: http://jsbin.com/sizofuse/7/edit?html,output ?","msgtype":"m.text"},"ts":1397496021000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"Ah, yes","msgtype":"m.text"},"ts":1397496041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this was recently updated in the spec","msgtype":"m.text"},"ts":1397496045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: anyway maybe we should all take that discussion to public-webapps and continue it there rather than just letting it drop","msgtype":"m.text"},"ts":1397496051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the browsers aren't very interoperable in this rea, unfortunately","msgtype":"m.text"},"ts":1397496057000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: awesome that there's an update. are browsers hopelessly different, or would said spec update make it better?","msgtype":"m.text"},"ts":1397496102000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"tantek: anyway I'm off to sleep now but maybe we can chat about it more here later after I'm back","msgtype":"m.text"},"ts":1397496135000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"manus: hopefully the browsers will converge over time now that the spec is not completely out of touch with the reality","msgtype":"m.text"},"ts":1397496163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manus: but it'd probably happen faster if someone agreed that it needed to be fixed and wrote tests and filed bugs on the browsers :-)","msgtype":"m.text"},"ts":1397496183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: cool. I basically want a link to point to so I can file bugs with the concerned browsers","msgtype":"m.text"},"ts":1397496207000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1397496208000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":":]","msgtype":"m.text"},"ts":1397496213000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"manus: http://www.whatwg.org/specs/web-apps/current-work/#focus is where it all begins","msgtype":"m.text"},"ts":1397496299000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"manus: the term you're looking for is \"scrollable regions\"","msgtype":"m.text"},"ts":1397496324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks, I'll take a look. that helps a lot (terminology)","msgtype":"m.text"},"ts":1397496345000,"senderName":"manus","senderId":"manus@irc"},
{"content":{"body":"hober: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=25236","msgtype":"m.text"},"ts":1397496501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: What do you mean by \"wrong for inlines\"?","msgtype":"m.text"},"ts":1397498542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: getting timeouts from validator.nu when validating the HTML spec, fwiw","msgtype":"m.text"},"ts":1397498580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=25026 - any ideas?","msgtype":"m.text"},"ts":1397499622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's an interesting one","msgtype":"m.text"},"ts":1397500122000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hixie: None besides, like, a 'min-line-height' property.","msgtype":"m.text"},"ts":1397500180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should i just clamp it with prose for now?","msgtype":"m.text"},"ts":1397500204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1397500212000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1397500214000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1397500215000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith - I have no idea what the issue is or was, so I'm just going to keep pushing forward with the assumption that editors in the WebApps WG are free to reference WHATWG specs as they see fit.","msgtype":"m.text"},"ts":1397501214000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"If someone raises a specific issue, or says they're being blocked from doing that for some reason, we can respond as needed.","msgtype":"m.text"},"ts":1397501237000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: can I get an account on http://wiki.whatwg.org/ as jcgregorio?","msgtype":"m.text"},"ts":1397501474000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"I just found out that I cannot test my multiplayer netplay JavaScript game by opening multiple tabs in Firefox; only the one that is active seems to run any logic. So I opened two different instances (windows) of Firefox instead, and then it works. But then it lags so much that it becomes impossible to tell what the game is gonna be like when played on unique computers over the network. Dammit.","msgtype":"m.text"},"ts":1397501612000,"senderName":"eatsomeatso","senderId":"eatsomeatso@irc"},
{"content":{"body":"jcgregorio / Hixie: I can give you an account if you msg me your email","msgtype":"m.text"},"ts":1397502685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: if that's the case pushback to people who raise objections to that, such as Glenn Adams, might be in order","msgtype":"m.text"},"ts":1397502803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: jcgregorio⊙gc, thanks!","msgtype":"m.text"},"ts":1397502889000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1397502950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks!","msgtype":"m.text"},"ts":1397503143000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"annevk - oh yeah I certainly do :)","msgtype":"m.text"},"ts":1397503223000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"heycam|away, any idea when you’ll have something in place for https://www.w3.org/Bugs/Public/show_bug.cgi?id=23682, having to do with sequence<T> and friends?","msgtype":"m.text"},"ts":1397504970000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"TabAtkins: so consider <span>foo</span>, doesn't that have a used value for the 'width' property?","msgtype":"m.text"},"ts":1397509449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hmm?","msgtype":"m.text"},"ts":1397509498000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: http://dev.w3.org/csswg/css-cascade/#used  \"If the property does not apply to this element, then the element has no used value for that property.\"","msgtype":"m.text"},"ts":1397509535000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Are you talking about in practice, or observable effects via gCS(), or...","msgtype":"m.text"},"ts":1397509573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in this case the observable effect of gCS","msgtype":"m.text"},"ts":1397509615000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: but also interested in understanding how the model is intended to be","msgtype":"m.text"},"ts":1397509640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, given that gCS is defined in terms of used values, looks like we'd need to fix our definition.","msgtype":"m.text"},"ts":1397509641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The model is supposed to be what is said.  inlines *dont'* have used 'width' property values.","msgtype":"m.text"},"ts":1397509659000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because they don't use 'width' in their layout algorithms.","msgtype":"m.text"},"ts":1397509668000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. so gCS needs to say something else. and .usedStyle will be less useful?","msgtype":"m.text"},"ts":1397509699000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"depending on what we want .usedStyle to do i guess","msgtype":"m.text"},"ts":1397509741000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What could .usedStyle possibly give for it?","msgtype":"m.text"},"ts":1397509747000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The computed value, I guess.","msgtype":"m.text"},"ts":1397509751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"computed as in \"auto\"?","msgtype":"m.text"},"ts":1397509783000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Whatever the computed value is, yeah.","msgtype":"m.text"},"ts":1397509798000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders what it returns today.","msgtype":"m.emote"},"ts":1397509805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nobody implements .usedStyle i think","msgtype":"m.text"},"ts":1397509820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Right, I'm wondering about gcs.","msgtype":"m.text"},"ts":1397509829000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gCS returns the ... old ... used style","msgtype":"m.text"},"ts":1397509843000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so 123px","msgtype":"m.text"},"ts":1397509847000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I get \"auto\" in chrome.","msgtype":"m.text"},"ts":1397509861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah but everyone else uses the layouted width iirc","msgtype":"m.text"},"ts":1397509883000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Bleh.","msgtype":"m.text"},"ts":1397509889000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, at least we have an argument to the contrary. ^_^","msgtype":"m.text"},"ts":1397509903000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i thought gCS needed to return the layouted width for compat, but maybe webkit/blink not doing it means it can be changed?","msgtype":"m.text"},"ts":1397509970000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"width/height are a bit magical in that they can be argued to be meaningful for all boxes, even when they don't have an effect.","msgtype":"m.text"},"ts":1397509973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1397509976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"at least gCS was first implemented with the CSS2.0 semantics of computed style, which later changed but browsers didn't change what gCS returned","msgtype":"m.text"},"ts":1397510025000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, which is why we had to invent the \"resolved style\" term.","msgtype":"m.text"},"ts":1397510043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll compose a thread.","msgtype":"m.text"},"ts":1397510058000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. thakns!","msgtype":"m.text"},"ts":1397510073000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Hm, cssom already defines its way around this, doesn't it?  It says \"if the proeprty applies to the element... the resolved value is used value. Otherwise, the resolved value is the computed value.\"","msgtype":"m.text"},"ts":1397510407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hum, that would mean chrome is correct per spec","msgtype":"m.text"},"ts":1397510460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1397510467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but i thought the spec was intended to match the others","msgtype":"m.text"},"ts":1397510480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Shrug.","msgtype":"m.text"},"ts":1397510485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"relevant thing is what to do next :-)","msgtype":"m.text"},"ts":1397510506000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, we're consistent with all five of the special properties.","msgtype":"m.text"},"ts":1397510629000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]