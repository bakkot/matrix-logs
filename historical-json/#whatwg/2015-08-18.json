[
{"content":{"body":"it's actually great just to hear that you have wptrunner working at all already with Edge","msgtype":"m.text"},"ts":1439856367000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Seems like a bit of a bug that HTML's syntax section doesn't describe <template> as as special kind of element","msgtype":"m.text"},"ts":1439887442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which subsection? the writing HTML? or…?","msgtype":"m.text"},"ts":1439887707000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: because it's in the list of special elements","msgtype":"m.text"},"ts":1439887716000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah, writing talks about five different kinds of elements","msgtype":"m.text"},"ts":1439887736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: <template> ends up classified as Normal","msgtype":"m.text"},"ts":1439887748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe syntax-wise it is indeed normal, just seems a bit odd","msgtype":"m.text"},"ts":1439887807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think I saw somewhere template qualified as special.","msgtype":"m.text"},"ts":1439890738000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Weird that you would mention this, I just started implementing it in html5ever. :)","msgtype":"m.text"},"ts":1439890753000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: for the parser it's special","msgtype":"m.text"},"ts":1439890771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: for syntax it's not","msgtype":"m.text"},"ts":1439890775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which was the weird part for me :-)","msgtype":"m.text"},"ts":1439890790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where is the syntax part?","msgtype":"m.text"},"ts":1439890797000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's not it? https://html.spec.whatwg.org/multipage/syntax.html#the-stack-of-open-elements:stack-of-open-elements-4","msgtype":"m.text"},"ts":1439890806000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/syntax.html#elements-2","msgtype":"m.text"},"ts":1439890969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. I guess they aren't special from that POV, right?","msgtype":"m.text"},"ts":1439891158000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: did DOM promises use microtasks?","msgtype":"m.text"},"ts":1439891737000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: nope","msgtype":"m.text"},"ts":1439891748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I guess not","msgtype":"m.text"},"ts":1439891753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: tasks instead?","msgtype":"m.text"},"ts":1439891773000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, but nobody ever implemented from that specification","msgtype":"m.text"},"ts":1439891787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the problem is ES15","msgtype":"m.text"},"ts":1439891806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool, just getting an impression of the history. Microsoft have asked that I make it clear in my blogpost that they're not \"wrong\", because it isn't specced that promises should be microtasks","msgtype":"m.text"},"ts":1439891827000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ES15?","msgtype":"m.text"},"ts":1439891850000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Did I miss 9 revisions of it?","msgtype":"m.text"},"ts":1439891859000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: \"proper\" name for ES6","msgtype":"m.text"},"ts":1439891860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: well they have a point in that the specifications are unclear, but they also never asked so they're wrong as far as being engaged goes","msgtype":"m.text"},"ts":1439891910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Your scare quotes are scary. ;)","msgtype":"m.text"},"ts":1439891911000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: heh, I just meant to indicate I think renaming ECMAScript 6 to ECMAScript 2015 was rather silly","msgtype":"m.text"},"ts":1439891948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So I missed 2006 revisions?!","msgtype":"m.text"},"ts":1439892003000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1439892006000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"2009*","msgtype":"m.text"},"ts":1439892075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1439892086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: on task queues… having different queues is mentioned in the spec, but when a task is queued it doesn't really say what queue it goes into. Is this a UA free-for-all?","msgtype":"m.text"},"ts":1439894566000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: often specifications have a default task queue","msgtype":"m.text"},"ts":1439894596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so it might be mentioned someplace else","msgtype":"m.text"},"ts":1439894611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: perhaps we should change that convention though, since it's rather vague","msgtype":"m.text"},"ts":1439894638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it might be better if we always had \"Queue a task on /task queue/ to do X\"","msgtype":"m.text"},"ts":1439894672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ahh I see, IDB specifies its own task source etc","msgtype":"m.text"},"ts":1439894673000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1439894679000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or at least, I'd have found that easier to follow","msgtype":"m.text"},"ts":1439894714000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, also, a lot of specification authors forget about task sources...","msgtype":"m.text"},"ts":1439894909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: btw, as for processes, it's basically a process per https://html.spec.whatwg.org/multipage/browsers.html#unit-of-related-similar-origin-browsing-contexts","msgtype":"m.text"},"ts":1439901256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: different tabs can be different processes, even with localStorage, but you'll get race conditions in implementations that don't do storage mutex (Chrome, and every other implementation that will get processes, since I don't think anyone wants to implement that mutex thing)","msgtype":"m.text"},"ts":1439901326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh gotcha, cheers!","msgtype":"m.text"},"ts":1439901367000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm, URLUtils is even more messed up than I thought :-(","msgtype":"m.text"},"ts":1439902137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hah.","msgtype":"m.text"},"ts":1439902223000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: What's the problem this time?","msgtype":"m.text"},"ts":1439902228000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think the parser overrides effectively have to go...","msgtype":"m.text"},"ts":1439902246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since modifying the underlying URL is not how this works at all...","msgtype":"m.text"},"ts":1439902278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The URL Standard has had that design since 2012 and nobody noticed...","msgtype":"m.text"},"ts":1439902332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finally figured out how to make a w3c account.","msgtype":"m.emote"},"ts":1439904535000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can probably get away by making some changes to the URL parser and keeping the modification of the underlying URL","msgtype":"m.text"},"ts":1439909965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone know a dictionary with a non-nullable interface member?","msgtype":"m.text"},"ts":1439911458000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: most of the dictionaries I design these days don't have one","msgtype":"m.text"},"ts":1439911589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://fetch.spec.whatwg.org/#requestinit","msgtype":"m.text"},"ts":1439911625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Shitting newlines and indents all over my *code* would be terrible.  I'd have to take tons of easy, simple appendChild() calls and sprinkle \"\\n\"s around, and let's not even talk about indentation.  It's absolutely not a simple thing to do, and it would massively reduce code readability in those parts.","msgtype":"m.text"},"ts":1439911918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But instead you're doing it for everyone else their code","msgtype":"m.text"},"ts":1439911966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I agree that the current HTML output isn't ideal; like I said, I have an issue to fix it up.  But that's an output file. ^_^","msgtype":"m.text"},"ts":1439911980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The output file is what gets rendered, so it's fairly important to review","msgtype":"m.text"},"ts":1439911999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I virtually never look at the actual raw HTML. When I review, I do it on the rendered output.","msgtype":"m.text"},"ts":1439912029000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess that's where we differ","msgtype":"m.text"},"ts":1439912052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure.  And like I said, I've no problem with fixing it.","msgtype":"m.text"},"ts":1439912087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: the username and password components of a URL are different from the Request.credentials attribute, right?","msgtype":"m.text"},"ts":1439912656000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes","msgtype":"m.text"},"ts":1439912772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: note that username/password are forbidden in fetch()","msgtype":"m.text"},"ts":1439912797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: at least when you pass in a URL","msgtype":"m.text"},"ts":1439912806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh?  I can't create a Request with them?","msgtype":"m.text"},"ts":1439912818000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: step 13, substep 3","msgtype":"m.text"},"ts":1439912833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"files a bug","msgtype":"m.emote"},"ts":1439912954000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"What should html5lib do with <template>, ideally? Provide separate subtrees?","msgtype":"m.text"},"ts":1439913000000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yes","msgtype":"m.text"},"ts":1439913100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so to test that we block username/password during interception with redirection and CORS mode... I need to use XHR or a navigation or something?","msgtype":"m.text"},"ts":1439913182000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess not a navigation","msgtype":"m.text"},"ts":1439913188000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"since thats manual","msgtype":"m.text"},"ts":1439913193000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: Thanks. A contributor is implementing it for html5ever :)","msgtype":"m.text"},"ts":1439913431000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wanderview: no, because it's about the contents of the Location header","msgtype":"m.text"},"ts":1439913435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: which are not constrained by the Request constructor","msgtype":"m.text"},"ts":1439913457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh hi nox","msgtype":"m.text"},"ts":1439913469000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wanderview: I should update that line though to use \"include credentials\"","msgtype":"m.text"},"ts":1439913471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, I see!","msgtype":"m.text"},"ts":1439913485000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"SimonSapin: Hello there.","msgtype":"m.text"},"ts":1439913489000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"is said contributor.","msgtype":"m.emote"},"ts":1439913514000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: the credentials in the location URL are ok for a manual redirect?  they will show in the opaqueredirect URL?","msgtype":"m.text"},"ts":1439913539000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"no... will still be opaqueredirect's Location header","msgtype":"m.text"},"ts":1439913577000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"which is filtered","msgtype":"m.text"},"ts":1439913579000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but the navigation will see it","msgtype":"m.text"},"ts":1439913584000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1439913591000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the navigate algorithm will see it","msgtype":"m.text"},"ts":1439913616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I suppose it might allow them, too","msgtype":"m.text"},"ts":1439913624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: regarding https://github.com/whatwg/url/issues/62#issuecomment-132202394 I don't have any concrete suggestions, but are you sure that you're not just irrationally attached to the \"internal URL\" concept, even though it might not work that well?","msgtype":"m.text"},"ts":1439913654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g., have you checked what browsers do? It sounds like they are significantly more lazy, with less internal fields","msgtype":"m.text"},"ts":1439913675000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks... this stuff is confusing","msgtype":"m.text"},"ts":1439913681000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I think it makes sense to keep it for URL/Location/WorkerLocation","msgtype":"m.text"},"ts":1439913713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: as per the next comment","msgtype":"m.text"},"ts":1439913719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh OK, I think I see. Processing...","msgtype":"m.text"},"ts":1439913742000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and I think we might need to keep it for <a> if we really wanted blob URLs to work nicely and somewhat deterministically","msgtype":"m.text"},"ts":1439913763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is it important for Location? Location seems very similar to <a> to me.","msgtype":"m.text"},"ts":1439913781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Location is very different from <a>","msgtype":"m.text"},"ts":1439913797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm in jsdom we implement them the same (and I am pretty sure we follow the spec)","msgtype":"m.text"},"ts":1439913822000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Let me dig up the code and explain that a bit more","msgtype":"m.text"},"ts":1439913831000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the spec is wrong, which is why it needs a new design","msgtype":"m.text"},"ts":1439913835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, we follow browsers, is what i meant","msgtype":"m.text"},"ts":1439913845000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so when you set .pathname on Location you don't change the pathname of Location?","msgtype":"m.text"},"ts":1439913866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, nope, that we don't do :-/","msgtype":"m.text"},"ts":1439913882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and getting pathname keeps returning the old value?","msgtype":"m.text"},"ts":1439913883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like you could have used some test cases ;-)","msgtype":"m.text"},"ts":1439913896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, i guess i'll try to re-read your comments again...","msgtype":"m.text"},"ts":1439913898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, we mostly don't support navigation, so it's all a little bonkers anyway :P","msgtype":"m.text"},"ts":1439913908000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"re-reading the comment... the setters only do side-effects, and do not do any actual setting?","msgtype":"m.text"},"ts":1439913940000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that's almost certainly not true for the hash setter... /me tests","msgtype":"m.text"},"ts":1439913987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah hash might be a special case, interesting point","msgtype":"m.text"},"ts":1439914011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah it is","msgtype":"m.text"},"ts":1439914046000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm how does .contentWindow.location behave, I wonder","msgtype":"m.text"},"ts":1439914059000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think bholley is writing a spec for that when it's cross-origin","msgtype":"m.text"},"ts":1439914118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Stuff gets rather involved :-/","msgtype":"m.text"},"ts":1439914134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jeez","msgtype":"m.text"},"ts":1439914159000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it errors in firefox, works in chrome (for hash)","msgtype":"m.text"},"ts":1439914170000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"time to test somtehing more interesting than hash","msgtype":"m.text"},"ts":1439914176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Chrome appears to censor iframe locations (even same-origin ones)??","msgtype":"m.text"},"ts":1439914276000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://jsbin.com/kewuv/1/edit?html,console,output","msgtype":"m.text"},"ts":1439914306000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: because the URL you use redirects","msgtype":"m.text"},"ts":1439914481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still, the reason .hash does change is because navigate in that case is synchronous","msgtype":"m.text"},"ts":1439914541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not because it has anything to do with the Location object, which just observes the document's url","msgtype":"m.text"},"ts":1439914556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: does internet explorer 10 really have the new streams API?  I think someone is confused (usually me) https://dev.modern.ie/platform/status/streamsapi/","msgtype":"m.text"},"ts":1439914565000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it points to http://www.w3.org/TR/streams-api/ which is not at all what streams ended up being","msgtype":"m.text"},"ts":1439914611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it also says chrome is implementing it","msgtype":"m.text"},"ts":1439914634000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"seems a bit confusing to people looking at it","msgtype":"m.text"},"ts":1439914648000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I suspect whoever wrote that is confused","msgtype":"m.text"},"ts":1439914655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but the Location object retains identity even during navigation, when changing hash","msgtype":"m.text"},"ts":1439914681000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: yeah I tried ot correct them about this, let me find the bug...","msgtype":"m.text"},"ts":1439914691000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I could write a pull request against their status page... but I'm lazy","msgtype":"m.text"},"ts":1439914706000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: only because navigate doesn't create a new document when you change the hash","msgtype":"m.text"},"ts":1439914706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1439914712000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/MicrosoftEdge/Status/issues/108","msgtype":"m.text"},"ts":1439914751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Note that the document URL can also change through pushState()","msgtype":"m.text"},"ts":1439914806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is reflected by Location","msgtype":"m.text"},"ts":1439914813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, thnaks","msgtype":"m.text"},"ts":1439914813000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it's just that any change to Location triggers navigate instead","msgtype":"m.text"},"ts":1439914835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1439914840000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so Location having no internal URL, but instead using the document's URL, makes more sense to me","msgtype":"m.text"},"ts":1439914863000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: wouldn't hurt for you to ping them on https://github.com/MicrosoftEdge/Status/issues/108 :)","msgtype":"m.text"},"ts":1439915699000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"apply the URL parser algorithm to the absolute URL of the new resource\"","msgtype":"m.text"},"ts":1439915796000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1439915797000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: if you could fix the output of Bikeshed that'd be great","msgtype":"m.text"},"ts":1439915843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like how status.modern.ie just randomly chooses W3C statuses to apply to WHATWG specs","msgtype":"m.text"},"ts":1439915845000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: that would also make it significantly easier to rewrite existing specifications and compare the output","msgtype":"m.text"},"ts":1439915860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Tempted to poke them to add an actual living standard status but that would probably be counterproductive","msgtype":"m.text"},"ts":1439915874000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: they have to pretend we don't exist presumably","msgtype":"m.text"},"ts":1439915888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I always have to use htmldiff to compare bikeshed spec outputs","msgtype":"m.text"},"ts":1439915889000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: nah check this out: https://dev.modern.ie/platform/status/fetchapi/","msgtype":"m.text"},"ts":1439915899000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: this one is my favorite: https://dev.modern.ie/platform/status/fullscreenapi/","msgtype":"m.text"},"ts":1439915915000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: but yeah along hte lines of picking random statuses, https://dev.modern.ie/platform/status/urlapi/","msgtype":"m.text"},"ts":1439915955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1439916043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm surprised that last one doesn't point to http://www.w3.org/TR/url/","msgtype":"m.text"},"ts":1439916057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe it did earlier","msgtype":"m.text"},"ts":1439916060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That they point to whatwg.org is actually news to me","msgtype":"m.text"},"ts":1439916073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oooh another one https://dev.modern.ie/platform/status/mutationobservers/","msgtype":"m.text"},"ts":1439916135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"Established standard\"? What does that even mean?","msgtype":"m.text"},"ts":1439916168000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1439916190000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: MikeSmith: can we get /TR/url to redirect to https://url.spec.whatwg.org/ yet? The out-of-dateness is strong.","msgtype":"m.text"},"ts":1439916388000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: You reviewing my stuff? I feel your pain.","msgtype":"m.text"},"ts":1439917971000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: I doubt the W3C would be interested in that","msgtype":"m.text"},"ts":1439919076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: besides, they put out this new charter of some mega group that's supposedly going to work on it...","msgtype":"m.text"},"ts":1439919096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: http://www.w3.org/2015/07/web-platform-wg.html \"The Group MAY provide a specification defining the syntax, process and error handling for resolving URL, along with its API.\"","msgtype":"m.text"},"ts":1439919163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Grammar is not a thing they care about it seems...","msgtype":"m.text"},"ts":1439919176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, why does the charter uppercase MAY while not referencing RFC2119?","msgtype":"m.text"},"ts":1439919204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Meh","msgtype":"m.text"},"ts":1439919230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, that group is supposedly going to work on a lot of things","msgtype":"m.text"},"ts":1439919238000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Doesn't mean they have an editor for them","msgtype":"m.text"},"ts":1439919247000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"They don't","msgtype":"m.text"},"ts":1439919290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's only a couple of folks interested in editing in the first place. The number of folks interested in maintaining infrastructure is a fraction of that. So...","msgtype":"m.text"},"ts":1439919345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think \"interested\" is not always the limiting factor","msgtype":"m.text"},"ts":1439919793000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"competent, and able to make a living\"","msgtype":"m.text"},"ts":1439919805000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fair, but if competent, we should be able to find a sponsor...","msgtype":"m.text"},"ts":1439919862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well it's ahrd to prove you're competent if you don't spend any time doing it","msgtype":"m.text"},"ts":1439919978000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are exceptions ofc","msgtype":"m.text"},"ts":1439919983000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, this is a problem for open source software too","msgtype":"m.text"},"ts":1439920129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am annoyed at trying to get Google to sponsor this kind of work ... they don't want to sponsor working from home or remote work, which has lost a couple candidates already.","msgtype":"m.text"},"ts":1439921086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1439922209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Boo","msgtype":"m.text"},"ts":1439922835000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, re: your tweet: \"zit nog altijd vast\" means \"is still in jail\"","msgtype":"m.text"},"ts":1439923433000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: do we no longer require a scope to be at or below the location of a service worker?  I can't find it in the spec any more","msgtype":"m.text"},"ts":1439927308000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe I'm blind","msgtype":"m.text"},"ts":1439927310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah, its in the update algorithm... never mind","msgtype":"m.text"},"ts":1439927429000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: another question... can I have SWs registered at both scope /a/b and scope /a/b/c?","msgtype":"m.text"},"ts":1439927670000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: given that the \"Match Service Worker Registration\" explicitly tries to find the longest matching scope, I'm pretty sure the answer is yes","msgtype":"m.text"},"ts":1439927847000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: I'm wondering if that is intended to match /some/scopeislong against /some/scope","msgtype":"m.text"},"ts":1439928073000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"where there is no path separator... matching within path elements","msgtype":"m.text"},"ts":1439928088000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: what is Shepherd?","msgtype":"m.text"},"ts":1439928127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it is indeded to just find the longest scope that matches the clientURLString, although the text does indeed seem a bit oddly phrased...","msgtype":"m.text"},"ts":1439928196000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"*intended","msgtype":"m.text"},"ts":1439928201000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"I think its very surprising that it searches within the final token in the patch","msgtype":"m.text"},"ts":1439928243000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"means I can't have separate service workers for peers in my directory tree structure if they have similar names","msgtype":"m.text"},"ts":1439928272000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you can have a service worker for a file, so yes, they are different","msgtype":"m.text"},"ts":1439928293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... I'm writing a spec bug","msgtype":"m.text"},"ts":1439928318000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(I think you just agreed with me)","msgtype":"m.text"},"ts":1439928323000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no I didn't?","msgtype":"m.text"},"ts":1439928334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: /x/ and /x are different","msgtype":"m.text"},"ts":1439928343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the wording for this matching does not distinguish for trailing slash at all","msgtype":"m.text"},"ts":1439928367000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: and I believe those would probably get normalized to the same URL string by parsing the URL?","msgtype":"m.text"},"ts":1439928386000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, the wording for the matching just compares string serializations of URLs","msgtype":"m.text"},"ts":1439928400000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"except that the \"the longest key [...] starting with the value of clientURLString\" seems to imply the key(scope) should start with the client URL instead of the other way around...","msgtype":"m.text"},"ts":1439928496000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"I think the spec language is crazy... I'm writing an issue","msgtype":"m.text"},"ts":1439928518000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no they wouldn't","msgtype":"m.text"},"ts":1439928536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the spec should probably talk about this in terms of the URL Standard","msgtype":"m.text"},"ts":1439928558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... but thats still not the case I was talking about... I'm talking about /some/scope and /some/scopeislong","msgtype":"m.text"},"ts":1439928559000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sure, those are different","msgtype":"m.text"},"ts":1439928595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Shepherd is the separate tool that plinss runs that parses specs periodically and extracts all their anchors for me.","msgtype":"m.text"},"ts":1439928606000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://github.com/slightlyoff/ServiceWorker/issues/734","msgtype":"m.text"},"ts":1439928631000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: so based on that list of specs, that's only done for a set of specs?","msgtype":"m.text"},"ts":1439928633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: and that's what causing the mismatch in references for selectors4 vs selectors-4, dom vs dom-ls, etc.","msgtype":"m.text"},"ts":1439928651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but it's not based on that list.  There's another list managed through the Shepherd UI.","msgtype":"m.text"},"ts":1439928659000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1439928673000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess I need to study that","msgtype":"m.text"},"ts":1439928680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That latter issue is actually Bikeshed.  It's fixable with some more hacks by me.","msgtype":"m.text"},"ts":1439928682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I'm fine with those hacks.","msgtype":"m.text"},"ts":1439928685000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: It's not accessible to people in general. I have admin to it, tho.","msgtype":"m.text"},"ts":1439928697000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1439929315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so the cross-specification cross-reference database is not publicly available? Are the tools?","msgtype":"m.text"},"ts":1439929447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: does Bikeshed have any other non-public dependencies?","msgtype":"m.text"},"ts":1439929461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As far as I know, Shepherd's source isn't publicly available.","msgtype":"m.text"},"ts":1439929524000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Other than the dependencies in Bikeshed's install, it only additionally depends on SpecRef (on GH) and Shepherd (not).","msgtype":"m.text"},"ts":1439929560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Guess I should ask plinss if he can fix that somehow","msgtype":"m.text"},"ts":1439929583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so SpecRef is exclusively for the references section?","msgtype":"m.text"},"ts":1439929656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1439929665000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SpecRef provides biblio data, Shepherd provides anchor/spec/testsuite data.","msgtype":"m.text"},"ts":1439929687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Both have been behaving badly :-/","msgtype":"m.text"},"ts":1439929711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The DOM https issue is my fault - I put it into Shepherd as http. Trying to change it now.","msgtype":"m.text"},"ts":1439929741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wanderview: /x/ and /x are different scopes if you want them to be","msgtype":"m.text"},"ts":1439930458000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If you want to restrict to a path, end the scope in /","msgtype":"m.text"},"ts":1439930479000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm not interested in the case... I'm interested in /some/scopeislong and /some/scope being separate","msgtype":"m.text"},"ts":1439930487000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I think I'm convinced my actual problem is a gecko issue somewhere","msgtype":"m.text"},"ts":1439930527000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: they should be able to be separate scopes yeah","msgtype":"m.text"},"ts":1439930669000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Got dom changed to https. Give it a few minutes and then `bikeshed update` to get things fixed.","msgtype":"m.text"},"ts":1439932165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In <https://html.spec.whatwg.org/multipage/syntax.html#markup-declaration-open-state>, in which case can there be no adjusted current node, and in which case can that node not be an element at all?","msgtype":"m.text"},"ts":1439936130000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: the start of parsing a document","msgtype":"m.text"},"ts":1439936495000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: it's always an element","msgtype":"m.text"},"ts":1439936503000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(or null)","msgtype":"m.text"},"ts":1439936510000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: <!dcotype><html>foo, for example, hits that case","msgtype":"m.text"},"ts":1439936558000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"or <!kjdfg> etc.","msgtype":"m.text"},"ts":1439936567000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Thanks.","msgtype":"m.text"},"ts":1439936572000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I /think/ that's the only case where that's true","msgtype":"m.text"},"ts":1439936591000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(I don't really have the parsed in my head at the moment)","msgtype":"m.text"},"ts":1439936607000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*parser","msgtype":"m.text"},"ts":1439936610000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In <https://html.spec.whatwg.org/multipage/syntax.html#cdata-section-state>, shouldn't the switch be the second step?","msgtype":"m.text"},"ts":1439938135000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Cf. https://html.spec.whatwg.org/multipage/syntax.html#bogus-comment-state","msgtype":"m.text"},"ts":1439938151000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: the positioning of the switch is irrelevant, unless there's an explicit \"stop executing these steps\"","msgtype":"m.text"},"ts":1439941050000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: note in most of the states you have the matching of the consumed character, then for each character the first thing done is changing the state","msgtype":"m.text"},"ts":1439941082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Still looks inconsistent with bogus comment though.","msgtype":"m.text"},"ts":1439941105000,"senderName":"nox","senderId":"nox@irc"}
]