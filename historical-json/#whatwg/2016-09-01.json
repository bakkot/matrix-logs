[
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1472708873000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yt?","msgtype":"m.text"},"ts":1472709200000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: yeah","msgtype":"m.text"},"ts":1472709205000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so there's some confusion about brand check in https://dom.spec.whatwg.org/#concept-create-element","msgtype":"m.text"},"ts":1472709215000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: I think the intent is to check it against any HTMLElement interface, not just the one in the same global","msgtype":"m.text"},"ts":1472709241000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Can I try custom elements in WebKit Nightly? I ran your LayoutTests in Chrome yesterday, they were very informative, found a few good bugs. I also found some things which, if WebKit is passing the tests, might be contrary to the spec. I made a detailed list I can share with you if you're interested.","msgtype":"m.text"},"ts":1472709283000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: great :)","msgtype":"m.text"},"ts":1472709340000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: that would be graet","msgtype":"m.text"},"ts":1472709341000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"great*","msgtype":"m.text"},"ts":1472709341000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: unfortunately, there is not a good way to enable a runtime flag at the moment :(","msgtype":"m.text"},"ts":1472709341000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I have a link, one second...","msgtype":"m.text"},"ts":1472709341000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: you basically have to modify the code :(","msgtype":"m.text"},"ts":1472709341000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I tried building WebKit but I think I need a newer framework; I have 10.10. Guess that is old. Got some macro failure spew about CF_AVAILABLE.","msgtype":"m.text"},"ts":1472709350000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: hm...","msgtype":"m.text"},"ts":1472709374000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so I'm going to try enabling it in STP soon-ish","msgtype":"m.text"},"ts":1472709381000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: my goal is to finish implementing as much as I can before TPAC","msgtype":"m.text"},"ts":1472709390000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so that we can just sit down & compare impls","msgtype":"m.text"},"ts":1472709396000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Here's my notes:  http://goo.gl/yli9Ao","msgtype":"m.text"},"ts":1472709406000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"Great! I plan to be at TPAC every day.","msgtype":"m.text"},"ts":1472709460000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"re: confusion about the brand check, I guess it takes digging throw WebIDL to find out what \"implements\" means, but I could imagine that means any HTMLElement interface. What do you think?","msgtype":"m.text"},"ts":1472709549000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"rniwa: I assume you mean in step 6.1.3?","msgtype":"m.text"},"ts":1472709581000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: yeah","msgtype":"m.text"},"ts":1472709588000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: There's a webidl issue linked in the note, it seems that any HTMLElement is certainly the intent.","msgtype":"m.text"},"ts":1472709635000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: yeah","msgtype":"m.text"},"ts":1472709662000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: cool. thanks for the notes","msgtype":"m.text"},"ts":1472709778000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: they were written way back in April or something when I first implemented the new spec","msgtype":"m.text"},"ts":1472709795000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so all these things are fallouts from the spec changes that have happened since then","msgtype":"m.text"},"ts":1472709811000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: e.g. we don't implement any of sanity checks in 6.1.: https://dom.spec.whatwg.org/#concept-create-element","msgtype":"m.text"},"ts":1472709884000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"although I'm fixing that right now. sort of.","msgtype":"m.text"},"ts":1472709900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: around a bit, lack of branding is a known issue with IDL and DOM","msgtype":"m.text"},"ts":1472710602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, dominicc: for now, WebKit & Chrome implementations both do \"the right thing\".","msgtype":"m.text"},"ts":1472710634000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but this is a compat risk.","msgtype":"m.text"},"ts":1472710640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I guess we could clarify the issue and planned fix more, file an issue?","msgtype":"m.text"},"ts":1472710899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was about to but it seems like your issue is still open","msgtype":"m.text"},"ts":1472710900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: so i figured i don't need another one","msgtype":"m.text"},"ts":1472710900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I'll just wait 'til the definition is added and then we can argue whether we need to fix it or not","msgtype":"m.text"},"ts":1472710900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: IDL is on track to get maintained a bit more, but it'll take a while still I suspect","msgtype":"m.text"},"ts":1472710900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: if Apple could find an editor somewhereâ€¦","msgtype":"m.text"},"ts":1472710900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, we need to first implement all these specs people have produced","msgtype":"m.text"},"ts":1472710900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: but yeah, i wish we had more man power to contribute there.","msgtype":"m.text"},"ts":1472710900000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: if only Apple had the money","msgtype":"m.text"},"ts":1472710905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the money isn't usually issue though. finding a candidate is insanely hard :(","msgtype":"m.text"},"ts":1472710934000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: we've had a position open for more than 12 months in our team for example","msgtype":"m.text"},"ts":1472710950000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1472710972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the requirement that one has to work in Cupertino isn't helping there :(","msgtype":"m.text"},"ts":1472711076000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"why does the location matter?","msgtype":"m.text"},"ts":1472711116000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"annevk: so we can't tap on those good european software engineers who aren't willing to relocate, etc... :(","msgtype":"m.text"},"ts":1472711121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"boogyman: i don't know.","msgtype":"m.text"},"ts":1472711127000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"maybe the fact that the position has been unoccupied for so long would spur the recruiters to consider other candidates","msgtype":"m.text"},"ts":1472711180000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"annevk: are we supposed to be creating Element in a XML document when the custom element interface isn't defined and its name is a valid custom element name?","msgtype":"m.text"},"ts":1472711504000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: or are we still supposed to create HTMLElement","msgtype":"m.text"},"ts":1472711512000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: ^","msgtype":"m.text"},"ts":1472711835000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think the current spec indicates that it should be Element.","msgtype":"m.text"},"ts":1472711843000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"implies*","msgtype":"m.text"},"ts":1472711851000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: What does the HTML spec say about XML documents having browsing contexts? I think if you found a definition you'd create a HTML element; what do you think about the possibility of finding a definition?","msgtype":"m.text"},"ts":1472711898000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: I'm not following.","msgtype":"m.text"},"ts":1472711934000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: not sure","msgtype":"m.text"},"ts":1472711946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dominicc: the existence of browsing context is independent of whether it's a XML document or a HTML docuemnt.","msgtype":"m.text"},"ts":1472711961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"To create a custom element you have to find a definition; to find a definition, you have to be creating an element in the HTML namespace.","msgtype":"m.text"},"ts":1472711962000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"rniwa: forgot whether XML parser is patched","msgtype":"m.text"},"ts":1472711965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dominicc: that's not entirely true.","msgtype":"m.text"},"ts":1472711981000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"That is https://html.spec.whatwg.org/multipage/scripting.html#look-up-a-custom-element-definition step 1?","msgtype":"m.text"},"ts":1472711986000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: you can create an element inside a XML document, which uses the same global object as the one that as a browsing context","msgtype":"m.text"},"ts":1472712006000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: and then adopt that element into the document with a browsing context","msgtype":"m.text"},"ts":1472712017000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Are you referring to create an element step 6.2.1?","msgtype":"m.text"},"ts":1472712018000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: not sure","msgtype":"m.text"},"ts":1472712030000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: not quite*","msgtype":"m.text"},"ts":1472712034000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: I'm trying to create an element in a detached XML document. e.g. one created by DOMImplementation","msgtype":"m.text"},"ts":1472712054000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: then adopt it back into a HTML document with a browsing context both of which shares a single global object","msgtype":"m.text"},"ts":1472712082000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"this is getting complicated","msgtype":"m.emote"},"ts":1472712093000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: OK. I'm with you so far. You do those things.","msgtype":"m.text"},"ts":1472712119000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: so in this case, the element we're creating isn't necessary in HTML namespace.","msgtype":"m.text"},"ts":1472712121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so I think it should be using Element interface","msgtype":"m.text"},"ts":1472712142000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: and upgrade should subsequently fail because it doesn't match the namespace","msgtype":"m.text"},"ts":1472712157000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"more precisely, looking up a custom element definition step should not find any interface","msgtype":"m.text"},"ts":1472712186000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Right. I think every algorithm checks the namespace is HTML and bails out/no ops if it isn't HTML.","msgtype":"m.text"},"ts":1472712193000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: something like that","msgtype":"m.text"},"ts":1472712199000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Right. That is look-up-a-custom-element-definition step 1 I linked to ^^^","msgtype":"m.text"},"ts":1472712211000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: ah, okay. now I follow what you were saying earlier","msgtype":"m.text"},"ts":1472712315000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Sorry for the bit about browsing contexts, you're right it's not a browsing context thing.","msgtype":"m.text"},"ts":1472712339000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: oh, np.","msgtype":"m.text"},"ts":1472712529000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: i forgot to reply but i'll be at TPAC for five days so hopefully we'll have a plenty of time to sort out details of custom elements","msgtype":"m.text"},"ts":1472714334000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: splendid, look forward to it!","msgtype":"m.text"},"ts":1472714351000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"rniwa: domenic is coming too.","msgtype":"m.text"},"ts":1472714364000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: cool","msgtype":"m.text"},"ts":1472714369000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: luckily, custom elements have fewer contentious points than shadow DOM still","msgtype":"m.text"},"ts":1472714408000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: except is=","msgtype":"m.text"},"ts":1472714441000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: so hopefully it'd be straight forward to sort out the remaining issues at TPAC at least for autonomous custom elements","msgtype":"m.text"},"ts":1472714465000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Yep!","msgtype":"m.text"},"ts":1472714472000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"rniwa: We're working hard to get our tests in shape by that time. We need to do some updates for recent spec changes.","msgtype":"m.text"},"ts":1472714529000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: yeah, i'm doing the same for webkit tests as fast as I can","msgtype":"m.text"},"ts":1472714556000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: it looks like you haven't added \"element definition is running flag\"?","msgtype":"m.text"},"ts":1472714722000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: not yet. We still have the older check where reentrancy is allowed, as long as it is a different name.","msgtype":"m.text"},"ts":1472714754000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: I see.","msgtype":"m.text"},"ts":1472714765000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: This will change next week.","msgtype":"m.text"},"ts":1472714766000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: here's a way to enable custom elements on STP.","msgtype":"m.text"},"ts":1472714968000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ooh goody, what?","msgtype":"m.text"},"ts":1472714981000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: on macOS Sierra, there's a submenu in \"Develop\" menu","msgtype":"m.text"},"ts":1472714982000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: interesting. I will have to set up Sierra... I'm travelling next week :/","msgtype":"m.text"},"ts":1472715022000,"senderName":"dominicc","senderId":"dominicc@irc"},
{"content":{"body":"dominicc: yeah, probably not a good idea :(","msgtype":"m.text"},"ts":1472715034000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dominicc: but going forward, you should be able to toggle experimental features on that submenu.","msgtype":"m.text"},"ts":1472715172000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so hopefully this pain of not being able to toggle features without having to build webkit will go away soon","msgtype":"m.text"},"ts":1472715197000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I wonder if we can start checking the MIME type for (classic) Worker()/SharedWorker() and importScripts()","msgtype":"m.text"},"ts":1472716215000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"although maybe that doesn't help anything if <script> still has a lax check","msgtype":"m.text"},"ts":1472716304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, <script> is the main problem","msgtype":"m.text"},"ts":1472717481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"apart from <script>, which requests send Accept:*/* in chrome?","msgtype":"m.text"},"ts":1472720447000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: is https://bugzilla.mozilla.org/show_bug.cgi?id=1299373 on your list?","msgtype":"m.text"},"ts":1472720677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: XHR and fetch() should, iirc","msgtype":"m.text"},"ts":1472720688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the not-execute part is \"If src is the empty string, queue a task to fire a simple event named error at the element, and abort these steps.\" https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model:attr-script-src-5","msgtype":"m.text"},"ts":1472720894000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: as for reflect, <script src> indeed falls under that case and should return \"\" per spec","msgtype":"m.text"},"ts":1472721019000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it can't find any browser now that returns empty string for .src for http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4429 though.","msgtype":"m.text"},"ts":1472721285000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the spec issue was https://github.com/whatwg/html/issues/859","msgtype":"m.text"},"ts":1472721412000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/pull/2663 .... looks like I've missed to follow up on this","msgtype":"m.text"},"ts":1472721593000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: r? https://github.com/whatwg/html-build/pull/93","msgtype":"m.text"},"ts":1472724896000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so yeah maybe I will just drop the IE-conditional-comment warning","msgtype":"m.text"},"ts":1472725443000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok. I made a PR for that :-)","msgtype":"m.text"},"ts":1472725750000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: FYI https://discuss.httparchive.org/t/which-mime-types-are-used-for-accept-requests/821","msgtype":"m.text"},"ts":1472725819000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: if you mean comment-before-doctype warning","msgtype":"m.text"},"ts":1472725877000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Thanks for looking into this. :)","msgtype":"m.text"},"ts":1472726464000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"`*/*` is used for just about everything, though; I think it's going to be tough to isolate `<script>` responses just from the network-level data.","msgtype":"m.text"},"ts":1472726495000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah :-( why is favicon */* and not together with IMAGE though?","msgtype":"m.text"},"ts":1472726533000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Oversight, probably.","msgtype":"m.text"},"ts":1472726544000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"zcorpan: yeah thatâ€™s what I meant","msgtype":"m.text"},"ts":1472726676000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/validator/htmlparser/pull/2 is the pr","msgtype":"m.text"},"ts":1472726707000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: OK if I go ahead and merge https://github.com/whatwg/html/pull/1732 and the lint check?","msgtype":"m.text"},"ts":1472726834000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, thanks for working on it","msgtype":"m.text"},"ts":1472726907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I'm somewhat on-off for two weeks and then TPAC, after all which I hope to get back to the WHATWG style guide stuff","msgtype":"m.text"},"ts":1472726938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok cool","msgtype":"m.text"},"ts":1472727752000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mounir: re-ping","msgtype":"m.text"},"ts":1472728733000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or perhaps he is on vacation","msgtype":"m.text"},"ts":1472728739000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what is wrong with w3 drafts","msgtype":"m.text"},"ts":1472729865000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"some server down so that css files aren't loaded?","msgtype":"m.text"},"ts":1472729878000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or bug in https://www.w3.org/Tools/respec/respec-w3c-common","msgtype":"m.text"},"ts":1472729921000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith: do you happen to know if this is a known issue, or where should I report this?","msgtype":"m.text"},"ts":1472730057000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://w3c.github.io/preload/ for example looks bad, so does http://w3c.github.io/presentation-api/","msgtype":"m.text"},"ts":1472730089000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Uncaught ReferenceError: PARAMS_CONTAINS is not defined","msgtype":"m.text"},"ts":1472730953000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe a bug in the minifier? https://github.com/w3c/respec/blob/e384535ab86bd0511c96e88b24902889e8a1eb07/js/deps/highlight.js#L990 doesn't have \"return\" there","msgtype":"m.text"},"ts":1472731242000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://codereview.chromium.org/2303443005","msgtype":"m.text"},"ts":1472731275000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: <3","msgtype":"m.text"},"ts":1472731310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____: https://github.com/w3c/respec/issues/928 was reported already","msgtype":"m.text"},"ts":1472731344000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: remind me, what is the current state of * settings object","msgtype":"m.text"},"ts":1472733411000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1472733411000,"senderName":"botie1","senderId":"botie1@irc"},
{"content":{"body":"which one should be used normally","msgtype":"m.text"},"ts":1472733417000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I assume incumbent","msgtype":"m.text"},"ts":1472733474000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or Domenic ^","msgtype":"m.text"},"ts":1472733532000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: no, use relevant, then current","msgtype":"m.text"},"ts":1472734065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, what is current","msgtype":"m.text"},"ts":1472734079000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"seems like we've got even more * settings object since I last time looked at this part of the spec","msgtype":"m.text"},"ts":1472734103000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"entry, incumbent, relevant, current, environment","msgtype":"m.text"},"ts":1472734142000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"are there more","msgtype":"m.text"},"ts":1472734156000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: matches JavaScript's current Realm","msgtype":"m.text"},"ts":1472734159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I need to understand what current is","msgtype":"m.text"},"ts":1472734180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and what is relevant","msgtype":"m.text"},"ts":1472734183000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and what is environment","msgtype":"m.text"},"ts":1472734189000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that's it; entry/incumbent are least interoperable","msgtype":"m.text"},"ts":1472734198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: relevant is the global object of a platform object","msgtype":"m.text"},"ts":1472734228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Gecko we don't have anything for relevant or current, I think","msgtype":"m.text"},"ts":1472734238000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: we do for sure","msgtype":"m.text"},"ts":1472734250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see, for relevant it is implicit","msgtype":"m.text"},"ts":1472734255000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: many features depend on those","msgtype":"m.text"},"ts":1472734270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, now I'm lost with current and incumbent","msgtype":"m.text"},"ts":1472734331000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and looks like there is a getter for current in Gecko","msgtype":"m.text"},"ts":1472734370000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: but ok, new specs should use entry settings, right?","msgtype":"m.text"},"ts":1472734500000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: no","msgtype":"m.text"},"ts":1472735045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: relevant, then current","msgtype":"m.text"},"ts":1472735064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: er, I said wrong. missed 'not'","msgtype":"m.text"},"ts":1472736482000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but ok, thanks","msgtype":"m.text"},"ts":1472736496000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1472736514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: filed a presentation API bug to switch using something else than entry settings","msgtype":"m.text"},"ts":1472736556000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1472736677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, others: is there a quick an easy way to include JS snippets in bikeshed source files without having to escape constructs that are mistaken for macros?","msgtype":"m.text"},"ts":1472737403000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"setInterval('{', 10)","msgtype":"m.text"},"ts":1472737523000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Should that hit window.onerror once or every ten ms?","msgtype":"m.text"},"ts":1472737536000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"would vote for every ten ms","msgtype":"m.emote"},"ts":1472738139000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yeah, every 10 it should be","msgtype":"m.text"},"ts":1472738353000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: per spec it's every 10 AFAICT. note there's also event handler content attributes, and i think tests for these in wpt","msgtype":"m.text"},"ts":1472739318000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1472739356000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in html/webappapis/scripting/processing-model-2/","msgtype":"m.text"},"ts":1472739415000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though maybe not checking if it's once or every time","msgtype":"m.text"},"ts":1472739459000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1472739497000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think there's one for that","msgtype":"m.text"},"ts":1472739502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"could change ran from a boolean to an int and increment it, then check the value being > 1 after a big enough timeout, or pass the test on the second onerror invocation...","msgtype":"m.text"},"ts":1472739609000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1472739719000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I tried that, but it was flaky in Servo","msgtype":"m.text"},"ts":1472739729000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"pass the test on the second onerror invocation\" shouldn't be flaky though?","msgtype":"m.text"},"ts":1472739821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1472739833000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyway, for another day","msgtype":"m.text"},"ts":1472739848000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tobie: Unfortunately no. The macro recognizer's regex should ignore *most* JS array access, but not all.  Specifically, it only recognizes macro names composed of uppercase characters, digits, and dashes (and excludes all-digit ones).","msgtype":"m.text"},"ts":1472750883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So common JS practice (using foo[0] or foo[var]) is perfectly safe.","msgtype":"m.text"},"ts":1472750917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, minified code (...[N]) along with /[A-Z]/ regex constructs in modernizr snippet.","msgtype":"m.text"},"ts":1472751015000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/cat/sed/ and was good to go","msgtype":"m.text"},"ts":1472751033000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah, kk.","msgtype":"m.text"},"ts":1472751039000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think I know how to make the text-fixer function not replace inside of opaque elements, tho.","msgtype":"m.text"},"ts":1472751061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I run block-Markdown parsing first, which *is* smart enough to avoid opaque elements. I think I can just litter the text with escape sequences, to make it trivial for the inline text-fixer to know whether it's in an opaque thing or not, without having to redo the parsing logic on its own.","msgtype":"m.text"},"ts":1472751149000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then remove them afterwards.","msgtype":"m.text"},"ts":1472751156000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, I can see that working.","msgtype":"m.text"},"ts":1472751219000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hi is there zcorpan?","msgtype":"m.text"},"ts":1472751255000,"senderName":"marti_","senderId":"marti_@irc"},
{"content":{"body":"TabAtkins: You might have backward compat issues though, if escaped stuff suddenly no longer needs escaping","msgtype":"m.text"},"ts":1472751268000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":" I would like to work in https://github.com/whatwg/html/issues/507","msgtype":"m.text"},"ts":1472751287000,"senderName":"marti_","senderId":"marti_@irc"},
{"content":{"body":"Why is the world pain?","msgtype":"m.text"},"ts":1472751287000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"marti_: how can we help you?","msgtype":"m.text"},"ts":1472751831000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"API design question: is the https://w3c.github.io/presentation-api/#dom-presentationrequest-getavailability pattern something we should emulate in other specs, specifically Web Bluetooth? Folks write \"new PresentationRequest(\"...\").getAvailability().then(avail => ...)\", and then avail.value holds whether the resource is available, and you do","msgtype":"m.text"},"ts":1472772044000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"avail.addEventListener(\"changed\") to check if availability changes.","msgtype":"m.text"},"ts":1472772045000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"s/changed/change/","msgtype":"m.text"},"ts":1472772064000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Exposing this through a non-Promise interface isn't ideal because it forces shipping the information to every renderer whether or not they want it, but the approach of creating a whole type for it is also ugly.","msgtype":"m.text"},"ts":1472772146000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]