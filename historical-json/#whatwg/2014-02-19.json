[
{"content":{"body":"Hixie: it doesn't seem we can convince each other","msgtype":"m.text"},"ts":1392768030000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: i'm open to suggestions (though again, in future, please send them when i ask for feedback, not after i've done all the work), but so far i haven't any idea what you're suggesting.","msgtype":"m.text"},"ts":1392768083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: i'm not trying to convince you, i'm trying to understand what you are proposing.","msgtype":"m.text"},"ts":1392768102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm proposing that you explain what <dialog> does in terms of APIs script can use","msgtype":"m.text"},"ts":1392768143000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i have no idea what that means.","msgtype":"m.text"},"ts":1392768159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you want _more_ APIs? in your blink e-mail you were saying there were too many (so i didn't end up including them).","msgtype":"m.text"},"ts":1392768176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why can't scripts use <dialog>?","msgtype":"m.text"},"ts":1392768190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is it that your scripts want to do? like, what are your concrete use cases?","msgtype":"m.text"},"ts":1392768220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"please file a bug with the answers to these questiosn so that i can track it: http://whatwg.org/newbug","msgtype":"m.text"},"ts":1392768236000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't understand how to explain this more clearly","msgtype":"m.text"},"ts":1392768301000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"well, let's start with: why can't scripts use <dialog>?","msgtype":"m.text"},"ts":1392768372000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because they want to use <jquery-dialog>, and they want the top layer behavior but not the focus behavior (or the opposite)","msgtype":"m.text"},"ts":1392768531000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i think i need a concrete use case to understand what you're proposing","msgtype":"m.text"},"ts":1392768580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does <jquery-dialog> do, exactly?","msgtype":"m.text"},"ts":1392768587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have a sample page i could look at that shows the kind of behaviour you want that isn't possible with <dialog>?","msgtype":"m.text"},"ts":1392768625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and for which <dialog> is relevant, obviously ;-) )","msgtype":"m.text"},"ts":1392768636000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this isn't a matter of what is/isn't possible with dialog","msgtype":"m.text"},"ts":1392768642000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"if you keep adding features to dialog you can make everything possible","msgtype":"m.text"},"ts":1392768663000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"right, then problem solved","msgtype":"m.text"},"ts":1392768685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't that what you wanted? an api to do something?","msgtype":"m.text"},"ts":1392768692000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, because we want the system to be build on small parts you can put together, not big parts full of lots of APIs and features","msgtype":"m.text"},"ts":1392768710000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"but you literally just said you wanted a new api","msgtype":"m.text"},"ts":1392768727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<dialog> is a \"small part you can put together\".","msgtype":"m.text"},"ts":1392768739000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's the whole point of <dialog>","msgtype":"m.text"},"ts":1392768756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to be the simplest thing we can provide that lets you do accessible dialogs","msgtype":"m.text"},"ts":1392768769000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dialog.prototype.show = () { document.toplayer.add(this); document.documentElement.inert = true; this.inert = false; }","msgtype":"m.text"},"ts":1392768791000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"you should be able to explain what's going on that way","msgtype":"m.text"},"ts":1392768802000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"we do (though we use english instead of pseudocode)","msgtype":"m.text"},"ts":1392768816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's not pseudo code, we want a toplayer API, and an inert API","msgtype":"m.text"},"ts":1392768837000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"???","msgtype":"m.text"},"ts":1392768848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wait, what?","msgtype":"m.text"},"ts":1392768852000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how is that simpler","msgtype":"m.text"},"ts":1392768866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, full screen and dialog use some magic system to put themselves on top","msgtype":"m.text"},"ts":1392768870000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"it's top layer, and we should just let you use it","msgtype":"m.text"},"ts":1392768878000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"it's not magic, it's carefully designed","msgtype":"m.text"},"ts":1392768881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's the core of the extensible web platform","msgtype":"m.text"},"ts":1392768896000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i think that's actively the opposite of what we should be aiming for.","msgtype":"m.text"},"ts":1392768912000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we should provide primitives that let you create web apps","msgtype":"m.text"},"ts":1392768926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not primitives that let you create web app platforms","msgtype":"m.text"},"ts":1392768932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we _are_ a platform","msgtype":"m.text"},"ts":1392768965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right, so you disagree with the extensible web concept","msgtype":"m.text"},"ts":1392769020000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i'm not sure what \"the extensible web concept\" is","msgtype":"m.text"},"ts":1392769059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the web is hugely extensible already","msgtype":"m.text"},"ts":1392769064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, it's the world's most successful platform","msgtype":"m.text"},"ts":1392769077000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you just said \"i think that's actively the opposite of what we should be aiming for.\"","msgtype":"m.text"},"ts":1392769077000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i think that having a dialog box should be as simple as just saying you want a dialog box, yes. i don't think everyone should need to say \"and i want my dialog on the top layer, and i want it to be focusable, and i want it to be accessible\", etc.","msgtype":"m.text"},"ts":1392769115000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously if there are concrete use cases for which we need other primitives, like the top layer, then we should study them and provide for them.","msgtype":"m.text"},"ts":1392769141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but we shouldn't just provide everything willy nilly; there's a huge cost to every feature and doign that harms both authors and users.","msgtype":"m.text"},"ts":1392769165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"authors because it makes everything way more complicated than necessary","msgtype":"m.text"},"ts":1392769174000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and users because if the platform is complicated, apps in the platform will be more buggy.","msgtype":"m.text"},"ts":1392769183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's fine, but you should be able to explain the dialog bits in terms of small APIs that a widget can cobble together without using <dialog>","msgtype":"m.text"},"ts":1392769190000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"just look at dialogs now, everyone does it there own way and it's all different and buggy.","msgtype":"m.text"},"ts":1392769196000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"their","msgtype":"m.text"},"ts":1392769199000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1392769205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand why \"you should be able to explain the dialog bits in terms of small APIs that a widget can cobble together without using <dialog>\"","msgtype":"m.text"},"ts":1392769216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should we be able to explain CSS 'color' and 'margin-top' and form submission and so on in the same way?","msgtype":"m.text"},"ts":1392769230000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, we plan to propose a form submission API","msgtype":"m.text"},"ts":1392769243000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"color and margin are sort of build on <canvas>, but there's more work to explain that","msgtype":"m.text"},"ts":1392769256000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"should we \"explain 'http'\"?","msgtype":"m.text"},"ts":1392769257000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and explain page navigation?","msgtype":"m.text"},"ts":1392769269000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and CSP?","msgtype":"m.text"},"ts":1392769275000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and iframs?","msgtype":"m.text"},"ts":1392769278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"iframes","msgtype":"m.text"},"ts":1392769282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and mouse events?","msgtype":"m.text"},"ts":1392769287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"slightlyoff plans to explain iframes too","msgtype":"m.text"},"ts":1392769288000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i don't even know what explaining half these things would mean","msgtype":"m.text"},"ts":1392769294000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, there's a lot of work to do","msgtype":"m.text"},"ts":1392769301000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"we already have a form submission API","msgtype":"m.text"},"ts":1392769307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have two, even","msgtype":"m.text"},"ts":1392769309000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is all make-work. it doesn't actually improve the platform at all.","msgtype":"m.text"},"ts":1392769322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just makes it more complicated and harder to optimise.","msgtype":"m.text"},"ts":1392769330000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure it does, it means <polymer-input> can add fields to the enclosing <form>","msgtype":"m.text"},"ts":1392769343000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"(and more complicated means it's harder to write web apps, and that means more buggy web apps)","msgtype":"m.text"},"ts":1392769350000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it means <tizen-dialog> can be in the top layer, but have totally different focusing behavior","msgtype":"m.text"},"ts":1392769360000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: but how do you explain <form>?","msgtype":"m.text"},"ts":1392769363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"totally different focusing behavior\" is a bug!","msgtype":"m.text"},"ts":1392769374000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the whole point of <dialog> is to _not_ have \"totally different focusing behavior\"","msgtype":"m.text"},"ts":1392769386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not though, why should a web app suck on Android because the focusing behavior doesn't follow the native one?","msgtype":"m.text"},"ts":1392769395000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"it _should_ follow the native one","msgtype":"m.text"},"ts":1392769406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"automatically","msgtype":"m.text"},"ts":1392769410000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it should also follow the iOS 9.1 focus model that the web author doesn't know about","msgtype":"m.text"},"ts":1392769424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the Windows 2103 focus model","msgtype":"m.text"},"ts":1392769432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the author shouldn't have to write one line of code for that to just work","msgtype":"m.text"},"ts":1392769441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what <dialog> does","msgtype":"m.text"},"ts":1392769454000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and <input>","msgtype":"m.text"},"ts":1392769460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the rest of HTML","msgtype":"m.text"},"ts":1392769463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're at odds with the extensible web idea, that you should be able to build up complex widgets from building blocks and explain how the existing widgets work","msgtype":"m.text"},"ts":1392769521000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: i'm all for being able to build up complex widgets from building blocks, and my job is to explain how the existing widgets work.","msgtype":"m.text"},"ts":1392769705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: those both seem orthogonal to the issue at hand, though.","msgtype":"m.text"},"ts":1392769717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You seem to be arguing \"why have contenteditable at all, just add a richtext attribute to <textarea> and <input>\"","msgtype":"m.text"},"ts":1392769737000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"\"keep expanding the API on <textarea> until it fits all the use cases\"","msgtype":"m.text"},"ts":1392769757000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i've argued that many times, yes. i think it's supported by how wacked contenteditable is.","msgtype":"m.text"},"ts":1392769857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"contenteditable doesn't fit HTML very well at all, and it's universally hated.","msgtype":"m.text"},"ts":1392769887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but even contenteditable doesn't \"explain the platform\"","msgtype":"m.text"},"ts":1392769914000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure, so add a sensible editing API with text measurement","msgtype":"m.text"},"ts":1392769919000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"and caret positions and such, and then let <textarea> use it","msgtype":"m.text"},"ts":1392769935000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"you need something for the use case of \"edit some rich text with a starting point of arbitrary html, then output html as your final product\"","msgtype":"m.text"},"ts":1392769957000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there are cases of rich text editing which are not that, but a comprehensive solution needs to hit that case","msgtype":"m.text"},"ts":1392769972000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"esprehn: i'm all for a better API than contenteditable, but I don't see how it helps. How do you explain the caret? it just becomes magic behind yet another API.","msgtype":"m.text"},"ts":1392769998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: at the end of the day, there's always some platform feature.","msgtype":"m.text"},"ts":1392770022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: how do you determine which is the \"most explained\" feature?","msgtype":"m.text"},"ts":1392770031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: and how do you know which features to expose in this editing API?","msgtype":"m.text"},"ts":1392770089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: it always comes back to concrete use cases, and APIs that address those use cases.","msgtype":"m.text"},"ts":1392770104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders who he should report firefox's treatment of \"Refresh: \" HTTP headers to: a working group (which?), or bugzilla.mozilla.org ...","msgtype":"m.emote"},"ts":1392770106000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: all the features necessary to build what contenteditable and <textarea> do today","msgtype":"m.text"},"ts":1392770110000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: <textarea> and contenteditable today already exist, so no new features are needed.","msgtype":"m.text"},"ts":1392770129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's where we disagree","msgtype":"m.text"},"ts":1392770143000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"you literally just said you just wanted the features necessary to build what they do. we can already do that, since they exist.","msgtype":"m.text"},"ts":1392770164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"<textarea></textarea>\" is an implementation of textarea.","msgtype":"m.text"},"ts":1392770180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"huh?","msgtype":"m.text"},"ts":1392770187000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"what was the problem with contenteditable? why not ... fix the problem?","msgtype":"m.text"},"ts":1392770189000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or did you want some kind of XBL successor","msgtype":"m.text"},"ts":1392770201000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: that doesn't follow","msgtype":"m.text"},"ts":1392770210000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: i don't understand what you mean by \"all the features necessary to build what contenteditable and <textarea> do today\" then","msgtype":"m.text"},"ts":1392770228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: he wants to NIH it for some reason","msgtype":"m.text"},"ts":1392770246000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"What if we wanted to ship a browser without <textarea>, that downloaded the implementation on first usage?","msgtype":"m.text"},"ts":1392770265000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"SamB: that seems unlikely, esprehn is not prone to such thinking","msgtype":"m.text"},"ts":1392770269000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't know why he's not happy to use browser-specific extensions in his browser-specific implementation of textarea","msgtype":"m.text"},"ts":1392770276000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"This isn't about NIH :)","msgtype":"m.text"},"ts":1392770293000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: that seems highly hypothetical, i don't know how to apply reasoning to such a situation.","msgtype":"m.text"},"ts":1392770306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to the extent I understand the \"explain\" idea, it seems to be about \"what if I wanted to do something almost like this, but different enough that I can't use the built-in extensibility hooks - are there primitives I could use to build it?\"","msgtype":"m.text"},"ts":1392770308000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: how would you implement <textarea> in script as a library","msgtype":"m.text"},"ts":1392770309000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"of course at some point you always come down to a primitive that's not explainable","msgtype":"m.text"},"ts":1392770333000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, \"what if I want something that acts *almost* like <textarea>\" is a much more interesting question","msgtype":"m.text"},"ts":1392770333000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"in terms of something else","msgtype":"m.text"},"ts":1392770347000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: the only way to make progress on such a line of reasoning that i can see is to have a concrete example to evaluate, because the entirety of the difficulty of answering that question lies in the specifics of \"almost\".","msgtype":"m.text"},"ts":1392770354000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, you have to come up with a specific difference","msgtype":"m.text"},"ts":1392770369000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"esprehn: i would do document.createElement('textarea') and be done, since hte browser has native support for it.","msgtype":"m.text"},"ts":1392770378000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but it doesn't!","msgtype":"m.text"},"ts":1392770387000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Hixie: I tend to agree with your point of view on this; but I think the Extensible Web Manifesto POV is that it's not necessary to specify the details of \"different in what way\" so as to provide for unexplained ways","msgtype":"m.text"},"ts":1392770393000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"esprehn: well it better, the web kinda relies on it.","msgtype":"m.text"},"ts":1392770399000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: your browser downloads a JS library that implements textarea the first time you visit a page with it","msgtype":"m.text"},"ts":1392770416000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Hixie: I feel like similar reasoning in the past has led to XML Namespaces so I am a bit wary of it","msgtype":"m.text"},"ts":1392770418000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: every time people have tried that, it's fallen flat on its face. q.v. XML, XHTML2, etc.","msgtype":"m.text"},"ts":1392770421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: is there some reason you can't do it with contenteditable and some XBL-successor?","msgtype":"m.text"},"ts":1392770423000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"esprehn: that sounds like a performance nightmare","msgtype":"m.text"},"ts":1392770440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: contentEditable doesn't have provisions for being plaintext only","msgtype":"m.text"},"ts":1392770448000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"esprehn: what's wrong with the built-in <textarea>?","msgtype":"m.text"},"ts":1392770449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what if it has a bug?","msgtype":"m.text"},"ts":1392770462000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Apple only ships Safari once a year, why can't a install the textarea.js with a patch?","msgtype":"m.text"},"ts":1392770480000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: if there's a bug you use a different browser.","msgtype":"m.text"},"ts":1392770488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can do that on Android, you can monkey patch the ObjC classes on OS X","msgtype":"m.text"},"ts":1392770491000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"or install a different build of WebKit maybe?","msgtype":"m.text"},"ts":1392770506000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"on Android you can include the java source with a patch if you want","msgtype":"m.text"},"ts":1392770507000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"because our implementation of lowlevel-primitives-that-textarea-uses won't ever have bugs","msgtype":"m.text"},"ts":1392770507000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: lol","msgtype":"m.text"},"ts":1392770522000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and it's easier to add that feature than to fix the bug it helps you workaround I guess?","msgtype":"m.text"},"ts":1392770533000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: sure, but your OS has bugs too, why not bake libxml into the kernel?","msgtype":"m.text"},"ts":1392770554000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"you can't just concede that","msgtype":"m.text"},"ts":1392770561000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: the whole point of the web is that there's multiple implementations that compete on quality, it's the one huge difference between the web and every other platform, and is one of its biggest strengths. One big implication of this is that when there's a platform implementation bug, as an author, it's not your problem.","msgtype":"m.text"},"ts":1392770595000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously we'll have bugs, but you should be able to patch the platform. People use custom ruby installs and custom rails installs all the time","msgtype":"m.text"},"ts":1392770596000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"libxml has approx the same update cycle as the kernel on our platform, though in fairness you can bring your own more easily than you can bring your own kernel","msgtype":"m.text"},"ts":1392770601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"esprehn: usually, textarea doesn't have any particularly grave flaws","msgtype":"m.text"},"ts":1392770665000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"a more on-point analogy is that OS X has both NSTextView and much lower-level text primitives that in theory you could use to build your own text editing and layout engine (of which WebKit is one)","msgtype":"m.text"},"ts":1392770673000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: that's my point, I can bring my own libxml in Foo.app if needed, you can't bring your XNU","msgtype":"m.text"},"ts":1392770675000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"in practice, btw, authors already commonly work around implementation bugs and it's not a huge deal. bugs in things like <textarea> exists, though, and nobody cares to work around it. I certainly trust Web authors a heck of a lot less than my browser vendor to ship a sane <textarea>.","msgtype":"m.text"},"ts":1392770676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but very few people do cause it's hard and tends to lack correct platform integration","msgtype":"m.text"},"ts":1392770686000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i mean, just compare the textarea that OSes ship, with teh text fields in video games.","msgtype":"m.text"},"ts":1392770691000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the custom-built video game text fields are a disaster.","msgtype":"m.text"},"ts":1392770702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're a poster-child for not having authors reinvent the wheel like this.","msgtype":"m.text"},"ts":1392770714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: so, where did you get stuck in your textarea.js anyway?","msgtype":"m.text"},"ts":1392770718000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, the main motivation *I've* seen for wanting to clone <textarea> in JavaScript is syntax highlighting","msgtype":"m.text"},"ts":1392770799000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: we should definitely provide an API for stuff like that, that's come up several times.","msgtype":"m.text"},"ts":1392770816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume you've seen https://www.mediawiki.org/wiki/User:Remember_the_dot/Syntax_highlighter then?","msgtype":"m.text"},"ts":1392770866000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I am sympathetic to the argument that sometimes people want to customize in ways that are hard to predict, or so niche that it would be weird to provide for them directly","msgtype":"m.text"},"ts":1392770872000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"SamB: but implementing syntax highlighting shouldn't require re-implementing bidi editing, text selection, mouse placement of the caret, text-search in textareas, spell-checking, copy-and-paste, scrolling, dragging of bidirectional text selections, ...","msgtype":"m.text"},"ts":1392770874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: quite so","msgtype":"m.text"},"ts":1392770884000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though I also feel it is a potentially dangerous argument that can be used to justify things with no real use case","msgtype":"m.text"},"ts":1392770898000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i'm totally on board with the idea that we should provide extension points for things like that, and indeed we do. for example, tabindex=\"\" lets you hook into the focus system. but it's impossible to design good APIs for such things without use cases, IMHO.","msgtype":"m.text"},"ts":1392770956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is why it would probably be best if you could implement it in terms of contentEditable, but still be compatible with a real textarea ...","msgtype":"m.text"},"ts":1392770957000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: on an unrelated note, the definition of :focus says that something matches :focus when it \"accepts ... mouse events\", which seems unlikely to be intended","msgtype":"m.text"},"ts":1392771050000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: Yes, which is why you should look at the places they've already run up against the boundaries. And, while you're at it, be amazed at what they've accomplished anyway (and how)","msgtype":"m.text"},"ts":1392771064000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: using the old understatement, are we?","msgtype":"m.text"},"ts":1392771102000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hixie: qq. for clients of \"await a stable state\", why not instead have them enqueue a microtask?","msgtype":"m.text"},"ts":1392771103000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: microtasks didn't exist at the time","msgtype":"m.text"},"ts":1392771120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: but more importantly, the idea is that all the \"await a stable state\" cases can run in parallel","msgtype":"m.text"},"ts":1392771140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: whereas microtasks are serialised","msgtype":"m.text"},"ts":1392771145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why is it important for those clients to run in parallel?","msgtype":"m.text"},"ts":1392771164000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"so, is dot's syntax highlighter something or what?","msgtype":"m.text"},"ts":1392771166000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"rafaelw: well, if we maintain that invariant it allows for a more optimal mutlithreaded implementation","msgtype":"m.text"},"ts":1392771210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"multithreaded","msgtype":"m.text"},"ts":1392771217000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you need magic dust to sleep in parallel now?","msgtype":"m.text"},"ts":1392771229000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"are there clients that do cpu-intensive algorithms?","msgtype":"m.text"},"ts":1392771240000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"SamB: not to sleep, to do the work","msgtype":"m.text"},"ts":1392771257000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: RE: custom textarea, I've had many others","msgtype":"m.text"},"ts":1392771272000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"oh, so you want them to wake up in parallel somehow?","msgtype":"m.text"},"ts":1392771275000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"rafaelw: media stuff, dunno how cpu-intensive it is. probably not much.","msgtype":"m.text"},"ts":1392771276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: for instance, I once implemented a shortcut-expansion system for doctors","msgtype":"m.text"},"ts":1392771288000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"seems like premature optimization.","msgtype":"m.text"},"ts":1392771297000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: it wasn't an optimisation at all, originally, microtasks didn't exist.","msgtype":"m.text"},"ts":1392771311000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they entered their content in their pidgen language and hit \"tab\" to expand or skip through the boilerplate","msgtype":"m.text"},"ts":1392771316000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"i'm not complaining about the past. i'm asking if we can unify now.","msgtype":"m.text"},"ts":1392771328000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"wouldn't it make more sense to have some kind of *abstraction* that allows some kind of potentially-parallel tasks to be enqueued?","msgtype":"m.text"},"ts":1392771347000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"rafaelw: ah, ok, i thought you were asking why they were like that before","msgtype":"m.text"},"ts":1392771349000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: and implementing it on top of textarea was downright painful. Would have been happier for lower-level control of the data and focus models","msgtype":"m.text"},"ts":1392771350000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"rafaelw: let's see...","msgtype":"m.text"},"ts":1392771351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: that neither you nor I thought of that ahead of time is the key reason that extensibility and layering matter. We won't think of everything","msgtype":"m.text"},"ts":1392771389000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"rafaelw: one case where stable states run but not microtasks is when you call alert(), that might be relevant...","msgtype":"m.text"},"ts":1392771394000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: other than that, doesn't look like there's much reason one way or the otehr","msgtype":"m.text"},"ts":1392771427000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i only see two clients of awaiting a stable state: img & media.","msgtype":"m.text"},"ts":1392771433000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"whenever I see something like \"wait for\" in these specs I'm never quite sure what is meant","msgtype":"m.text"},"ts":1392771445000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's a bit hard to tell, but it seems like the reason they are awaiting a stable state is basically \"wait until i'm done being configured\" (IOW, when script has exited).","msgtype":"m.text"},"ts":1392771461000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"am i misunderstanding?","msgtype":"m.text"},"ts":1392771466000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"rafaelw: microtasks are more heavyweight, and tend to be more author-visible (e.g. they involve DOM mutations or script callbacks), whereas stable states are just about async algorithms having step they want to run when the DOM is in a known stable state.","msgtype":"m.text"},"ts":1392771496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: it's more about getting a lock on the DOM than anything else","msgtype":"m.text"},"ts":1392771505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: read lock","msgtype":"m.text"},"ts":1392771509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(*having steps)","msgtype":"m.text"},"ts":1392771526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: changing some of these algorithms to use microtasks would be kinda awkward, but in principle i suppose it would be equivalent.","msgtype":"m.text"},"ts":1392771563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: i don't see much benefit to changing it though.","msgtype":"m.text"},"ts":1392771569000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in blink i'd prefer to have one mechanism for \"running soon when there's no script below me\", rather than two.","msgtype":"m.text"},"ts":1392771629000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"yeah i think it'd be quire reasonable to implement the stable state stuff as a microtask.","msgtype":"m.text"},"ts":1392771651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"quite","msgtype":"m.text"},"ts":1392771654000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip was working on the stable state stuff recently, fwiw","msgtype":"m.text"},"ts":1392771672000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok. shall i open a bug for that?","msgtype":"m.text"},"ts":1392771677000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(in blink)","msgtype":"m.text"},"ts":1392771677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"open a bug for what?","msgtype":"m.text"},"ts":1392771688000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's still the alert() difference","msgtype":"m.text"},"ts":1392771713000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aw. sorry. nm. you prefer to keep the notion of stable state in the spec.","msgtype":"m.text"},"ts":1392771723000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i mean i can make sure there's a note saying that they can be implemented as the same thing","msgtype":"m.text"},"ts":1392771738000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i would imagine it depends a lot on how it's implemented","msgtype":"m.text"},"ts":1392771748000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why does alert() provide a stable state?","msgtype":"m.text"},"ts":1392771749000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"because you don't want <script> new Audio('myradio').play(); alert('ok, listen up!'); </script> to not even start the download until you hit ok","msgtype":"m.text"},"ts":1392771790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you want it to just play","msgtype":"m.text"},"ts":1392771800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems like a misfeature.","msgtype":"m.text"},"ts":1392771825000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"the way the spec specs the stable states is more akin to joining the main thread than pushing a task on a queue, fwiw. so i think it is conceptually different, even though they can be implemented in terms of each other.","msgtype":"m.text"},"ts":1392771830000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's a misfeature?","msgtype":"m.text"},"ts":1392771834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alert() providing a stable state.","msgtype":"m.text"},"ts":1392771862000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1392771866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you think in that example the file shouldn't download until you hit ok?","msgtype":"m.text"},"ts":1392771874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that seems highly unintuitive and annoying for users","msgtype":"m.text"},"ts":1392771881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: stable state is \"hit the event loop\" for us, alert() spins a nested event loop so you get that behavior \"for free\" I think","msgtype":"m.text"},"ts":1392771934000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"alert blocks the thread. if i'm an app and I use alert, no code after the alert runs. it's super weird if audio starts playing.","msgtype":"m.text"},"ts":1392771948000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":" <script> var a = new Audio('hugefile.ogg'); alert('hit ok to start music'); a.play(); </script>","msgtype":"m.text"},"ts":1392771999000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't want the download to wait until you hit ok.","msgtype":"m.text"},"ts":1392772008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: you'd get the same thing on practically any toolkit","msgtype":"m.text"},"ts":1392772059000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"what part of this awaits a steady state? play() ?","msgtype":"m.text"},"ts":1392772063000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"the constructor calls load(), effectively, and load() waits","msgtype":"m.text"},"ts":1392772082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that it can read the src=\"\" or <source> without clashing with DOM manipulation code","msgtype":"m.text"},"ts":1392772098000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(since it's running async -- it basically joins the main thread to read the DOM)","msgtype":"m.text"},"ts":1392772109000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically, it's not worth it to me to weird-up a core notion of separation of concerns (microtasks/stable state/etc..) in order to accomodate alert","msgtype":"m.text"},"ts":1392772202000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"or showModalDialog for that matter.","msgtype":"m.text"},"ts":1392772208000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"showModalDialog should die in a fire.","msgtype":"m.text"},"ts":1392772213000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"well i think this is orthogonal to the discussion but i don't see any reason to await a steady state to read a dom attribute","msgtype":"m.text"},"ts":1392772217000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"alert should only be used for debugging.","msgtype":"m.text"},"ts":1392772224000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"jamesr__: well you need to join the main thread, right?","msgtype":"m.text"},"ts":1392772245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: i don't disagree with you in principle, but i also think it's critical that the download start before you hit ok in the case above. I think a simpler solution would just be to have alert() and friends do a microtask checkpoint, but then it would make debugging harder. so maybe it's just best to have some microtask checkpoints only do the stable state microtasks.","msgtype":"m.text"},"ts":1392772299000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: either way, it seems trivial to implement once you can do it anywhere else.","msgtype":"m.text"},"ts":1392772310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: i mean, it's just a flag \"only include these microtasks\", right","msgtype":"m.text"},"ts":1392772324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alert() cannot do a microtask checkpoint().","msgtype":"m.text"},"ts":1392772334000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"it violates the central invariant.","msgtype":"m.text"},"ts":1392772342000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"right, so like i just said, you'd just do a checkpoint that excludes the tasks that aren't currently \"stable state\" cases","msgtype":"m.text"},"ts":1392772368000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just like some algorithms spin the main event loop while having put a block on certain task sources.","msgtype":"m.text"},"ts":1392772402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why is it critical that the download start in that case?","msgtype":"m.text"},"ts":1392772459000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Hixie: var a = new Audio('data:...').play(); while(1) {} - why can't that play?","msgtype":"m.text"},"ts":1392772463000,"senderName":"jamesr__","senderId":"jamesr__@irc"},
{"content":{"body":"jamesr__: that case probably could, but consider the case of  var a = new Audio(); a.appendChild(document.createElement('source')); ...","msgtype":"m.text"},"ts":1392772523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: the constructor starts the load asynchronously.","msgtype":"m.text"},"ts":1392772532000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: that algorithm then starts running, but it's not on the main thread","msgtype":"m.text"},"ts":1392772542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: at some point that algorithm needs to inspect the <video> or <audio> element to figure out what attributes and children elements it has, so it can kick off loads of the media file, the text tracks, etc.","msgtype":"m.text"},"ts":1392772576000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: those loads are themselves async, and sometimes the loads fail, and then the algorithm needs to reinspect the media element to work out what next to try to load","msgtype":"m.text"},"ts":1392772617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: and so on","msgtype":"m.text"},"ts":1392772620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: this is especially relevant while parsing, since the parser itself is just doing one bit at a time as a task on the event loop","msgtype":"m.text"},"ts":1392772640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: so it might parse enough to add the media element, but not enough to get the first <source>","msgtype":"m.text"},"ts":1392772652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr__: <video> <!-- network delay... --> <source ...>","msgtype":"m.text"},"ts":1392772665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: so, i'm studying what it would take to hook into the focus model like you were saying. The main thing I specced that wasn't specced before, and for which there's no \"hook\", isn't actually related to dialogs, it's about things like the viewport and 'overflow:scroll' scroll regions.","msgtype":"m.text"},"ts":1392773416000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: is it ok that you can hook into the focus model with tabindex=\"\" at the element level, but not at the CSS box level?","msgtype":"m.text"},"ts":1392773432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: or, in the \"extensible Web\" model, should it also be possible to add focusable CSS boxes somehow?","msgtype":"m.text"},"ts":1392773463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you get a css box that doesn't have an associated element?","msgtype":"m.text"},"ts":1392773489000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"well e.g. the viewport doesn't have an associated element","msgtype":"m.text"},"ts":1392773515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also you could have multiple boxes for one element","msgtype":"m.text"},"ts":1392773522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. div::before { overflow: scroll }","msgtype":"m.text"},"ts":1392773528000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think all engines transfer focus to the \"nearest\" (there's a vague definition of this) element when you hit an anonymous thing","msgtype":"m.text"},"ts":1392773542000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"the viewport being focused is like the document being focused I suppose","msgtype":"m.text"},"ts":1392773554000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"what do you mean by \"transfer focus\"?","msgtype":"m.text"},"ts":1392773558000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you click a ::before {} thing, we make appear like you actually clicked the thing that owns the ::before","msgtype":"m.text"},"ts":1392773597000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"it's a sort of weird version of Shadow DOM retargeting","msgtype":"m.text"},"ts":1392773633000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"sure but for keyboard access we presumably still want them to _actually_ be individually focusable, right?","msgtype":"m.text"},"ts":1392773670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so my question is, how would you create one of these from script?","msgtype":"m.text"},"ts":1392773681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's an interesting question, I don't think a lot of thought has gone into focusing anonymous content","msgtype":"m.text"},"ts":1392773731000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"we do some strange things, I don't think browsers agree on where the caret goes if you click a ::before in a content editable","msgtype":"m.text"},"ts":1392773768000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"so is it ok if the API doesn't \"explain\" that ::before might be focusable?","msgtype":"m.text"},"ts":1392773789000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Gecko, Blink and Webkit all create a real Element for ::before/::after and ::backdrop","msgtype":"m.text"},"ts":1392773790000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"yeah, at some point we need to explain ::before, and we can deal with it being individually focusable at that point","msgtype":"m.text"},"ts":1392773820000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"I don't think any browser lets you individually focus anonymous content today","msgtype":"m.text"},"ts":1392773829000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"sure, but that's a bug, right?","msgtype":"m.text"},"ts":1392773842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, it's an accessibility and keyboard access problem that it's not possible today","msgtype":"m.text"},"ts":1392773854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about Document objects and browsing contexts?","msgtype":"m.text"},"ts":1392773915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, I think the idea was that someday you could do element.getPseudoElement(\"before\") and then add event listeners, tabindex, aria roles etc.","msgtype":"m.text"},"ts":1392773916000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"how do we \"explain\" those?","msgtype":"m.text"},"ts":1392773919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's harder, I think slightlyoff has some deeper insight into the innards of them. I couldn't give you a concrete set of primitives on the spot here.","msgtype":"m.text"},"ts":1392773956000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"k...","msgtype":"m.text"},"ts":1392773966000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a spec anywhere that i could look at that tries to explain these things?","msgtype":"m.text"},"ts":1392773975000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i can integrate with it?","msgtype":"m.text"},"ts":1392773978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pseudo elements are mostly BS. they should have DOM","msgtype":"m.text"},"ts":1392773981000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Shadow DOM actually helps you there","msgtype":"m.text"},"ts":1392773988000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: really?","msgtype":"m.text"},"ts":1392773995000,"senderName":"JosephSilber","senderId":"JosephSilber@irc"},
{"content":{"body":"you can explain that all elements have existing SD that isn't populated","msgtype":"m.text"},"ts":1392774005000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and that the pseudo elements populate it","msgtype":"m.text"},"ts":1392774016000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Hixie: that's a really good question, I don't think we have a good spec for the \"foundations of the web\" primordial goop. Perhaps we should have a long term plan.","msgtype":"m.text"},"ts":1392774023000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"maybe you don't make it available to scripting, but at least you're out of the conceptual woods","msgtype":"m.text"},"ts":1392774025000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"document objects and browsing contexts need more work. We haven't done the archeology yet","msgtype":"m.text"},"ts":1392774051000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"it's an important project","msgtype":"m.text"},"ts":1392774054000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Hixie: slightlyoff has written a bunch about it, but I don't think there's a doc that says \"Documents do X, we need to explain it\" with bugs to fill in the sections","msgtype":"m.text"},"ts":1392774056000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"one we should stop delaying","msgtype":"m.text"},"ts":1392774058000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"esprehn: fwiw, looking at the <dialog> stuff specifically, it's actually the least magical of all the stuff here. A straight <dialog open> where you haven't invoked showModal() is just basically a <div> that hooks into the focus model as an owner, just like a <div tabindex=\"\"> is a <div> that hooks into the focus model as an area. So in a way, <dialog> actually _is_ explaining the model.","msgtype":"m.text"},"ts":1392774105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"slightlyoff: fwiw, the HTML spec documents the status quo on those in more or less complete detail now (this focus stuff being the last big missing piece, i think)","msgtype":"m.text"},"ts":1392774146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm not sure I understand","msgtype":"m.text"},"ts":1392774154000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"slightlyoff: so feel free to use that as a resource","msgtype":"m.text"},"ts":1392774165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is <dialog> explaining?","msgtype":"m.text"},"ts":1392774169000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: it's basically the \"explained\" version of being a Document in the focus mdoel","msgtype":"m.text"},"ts":1392774185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mdoel","msgtype":"m.text"},"ts":1392774188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"m o d e l","msgtype":"m.text"},"ts":1392774189000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: its' really good that way. Thank you.","msgtype":"m.text"},"ts":1392774200000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Hixie: interesting.","msgtype":"m.text"},"ts":1392774243000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: there's two kinds of primitives in the focus model, basically. Areas (things you can focus), and owners (things that can group areas so you can tab between them). Before, there was just Documents in the second category. In the first category there's all kinds of magical stuff, plus anything on which you put tabindex=\"0\", which is basically the \"explain hook\" for focusable areas.","msgtype":"m.text"},"ts":1392774298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: so now, <dialog open> acts as the \"explain hook\" for owners","msgtype":"m.text"},"ts":1392774317000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: exactly, that's why I was saying you should add a tabgroup attribute that is the \"owners\" category","msgtype":"m.text"},"ts":1392774329000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: so to answer your earlier question about tab groups, i think the answer is you just use a <dialog open> as each tab group","msgtype":"m.text"},"ts":1392774337000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"spec that dialog's tabgroup attribute should compute to something like we do for tabindex on <input>","msgtype":"m.text"},"ts":1392774348000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: and you flip between them, making whichever one is active not inert, and all the others inert","msgtype":"m.text"},"ts":1392774357000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: is an attribute more \"explainy\" than an element?","msgtype":"m.text"},"ts":1392774373000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1392774383000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: the advantage of doing it on an element only is that it avoids tons of crazy complexity and edge cases that have little value","msgtype":"m.text"},"ts":1392774391000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I should be able to trap the tab index cycling inside an arbitrary area of the page without adding <dialog open> around it.","msgtype":"m.text"},"ts":1392774449000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"why? or rather, why should it be possible without adding <dialog open>, but not without adding <div tabgroup=\"\">?","msgtype":"m.text"},"ts":1392774486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand the difference","msgtype":"m.text"},"ts":1392774498000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: because the only part of dialog I care about is the focusing behavior. That's why tabgroup is a primitive. I only need to use the tabgroup if that's all I want","msgtype":"m.text"},"ts":1392774522000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"<dialog> has showModal(), but calling it on that part of the page is nonsense, it's not a modal dialog","msgtype":"m.text"},"ts":1392774543000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Hixie: XMLHttpRequest can decode JSON, but we still expose JSON.parse since creating an XHR object to decode JSON is silly. You don't need that whole thing just for the one part of it.","msgtype":"m.text"},"ts":1392774599000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"If you want to be in the top layer, use the top layer API. If you want to trap focus use tabgroup. If you want both, and center positioning and other API stuff use <dialog>.","msgtype":"m.text"},"ts":1392774661000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: but <div tabgroup> has forceSpellCheck(), which you don't care about either. Why is it ok for it to have that, but not ok for it to have showModal()?","msgtype":"m.text"},"ts":1392774720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"esprehn: JSON.parse() is different because it's simpler to use JSON.parse() than to cycle content through XHR. In this case, though, it's more or less the same, just syntactic sugar that's different.","msgtype":"m.text"},"ts":1392774783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div tabgroup> vs <dialog open>","msgtype":"m.text"},"ts":1392774791000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the dialog one is even shorter by one character :-)","msgtype":"m.text"},"ts":1392774808000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure any arbitrary element should support forceSpellCheck() either, does any browser implement that?","msgtype":"m.text"},"ts":1392774810000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"I guess it sort of lines up with contenteditable","msgtype":"m.text"},"ts":1392774849000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"yeah, it's for contenteditable.","msgtype":"m.text"},"ts":1392774863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: having forceSpellCheck on Element seems like a bug, you're missing a real editing API so you're adding API surface to Element","msgtype":"m.text"},"ts":1392774879000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"contenteditable is on HTMLElement also","msgtype":"m.text"},"ts":1392774896000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1392774901000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"click() is on every element also","msgtype":"m.text"},"ts":1392774919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't care for click() on the tabgroup element","msgtype":"m.text"},"ts":1392774926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can imagine that adding contenteditable does something like \"new Editor(this)\"","msgtype":"m.text"},"ts":1392774929000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"and that editor has spellchecking and such","msgtype":"m.text"},"ts":1392774942000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Hixie: why don't you? It's rendered if the things inside it are focusable.","msgtype":"m.text"},"ts":1392774962000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"perhaps the group has a border and background, why can't a simulate a click on it?","msgtype":"m.text"},"ts":1392774978000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"so? why would you ever want to fake a click to a non-interactive element?","msgtype":"m.text"},"ts":1392774981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1392775003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why is it not interactive? Maybe it's draggable.","msgtype":"m.text"},"ts":1392775005000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"click() wouldn't help you with that","msgtype":"m.text"},"ts":1392775014000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true, but it could have other behavior on click","msgtype":"m.text"},"ts":1392775023000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"my point is i don't understand why it's ok to have these APIs but not the five <dialog> APIs","msgtype":"m.text"},"ts":1392775041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heck, i would even argue that <dialog>'s form integration is something you _would_ want","msgtype":"m.text"},"ts":1392775055000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean the properties on Document? (the 5 APIs?)","msgtype":"m.text"},"ts":1392775084000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i mean <dialog>.open, .returnValue, .show(), .showModal(), and .close()","msgtype":"m.text"},"ts":1392775108000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't understand, I'm not arguing about the API surface on <dialog> itself","msgtype":"m.text"},"ts":1392775139000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"what did you mean when you said \"because the only part of dialog I care about is the focusing behavior\" then ?","msgtype":"m.text"},"ts":1392775168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you want to be a tabgroup so that going to the last control and hitting tab again goes back to the first","msgtype":"m.text"},"ts":1392775191000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"right, that's one of the main things <dialog> does.","msgtype":"m.text"},"ts":1392775205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so why is it not ok to use <dialog>, but it is ok to use <div tabgroup>?","msgtype":"m.text"},"ts":1392775238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my point is both <div> and <dialog> have other baggage, so why is one ok but not the other?","msgtype":"m.text"},"ts":1392775266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because we decided <div> is a building block, I think slightlyoff might argue that even that isn't enough, and we should provide a real FocusController API someday that <div> calls when you set tabgroup.","msgtype":"m.text"},"ts":1392775289000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"yep!","msgtype":"m.text"},"ts":1392775303000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"well we certainly shouldn't require that the author use script to do this","msgtype":"m.text"},"ts":1392775323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"today <div> is like NSView, it's pretty bare metal and way below <dialog>","msgtype":"m.text"},"ts":1392775324000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"<div> and <dialog> are almost identical.","msgtype":"m.text"},"ts":1392775337000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: don't confuse \"can\" with \"require\"","msgtype":"m.text"},"ts":1392775349000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Hixie: I only ask that <div> (et. al.) be explained, not that we stop adding high-level stuff","msgtype":"m.text"},"ts":1392775365000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Hixie: The spec says we should treat <input> as if it had a tabindex IIRC","msgtype":"m.text"},"ts":1392775384000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"\"Modulo platform conventions, it is suggested that for the following elements, the tabindex focus flag be set\"","msgtype":"m.text"},"ts":1392775406000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: right. i wouldn't have added tabindex=\"\" if i had anything to do with it, i think it's a poor way to solve the problem. :-)","msgtype":"m.text"},"ts":1392775408000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i really have to go. i'll look into this some more. it'd be easy to retrofit a tabgroup=\"\" attribute into this if for some reason <dialog open> isn't a good enough \"explanation\", anyway.","msgtype":"m.text"},"ts":1392775441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks for looking into it, lets continue this later.","msgtype":"m.text"},"ts":1392775459000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"maybe we can skip the attribute and explain it directly in terms of something slightlyoff would like, so we would have two layers instead of having three layers :-)","msgtype":"m.text"},"ts":1392775476000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ttyl","msgtype":"m.text"},"ts":1392775482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1392775498000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"hahaha http://lists.w3.org/Archives/Public/public-whatwg-archive/2014Feb/0086.html","msgtype":"m.text"},"ts":1392776321000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"my first thought was \"this is whatwg@whatwg, not public-html\"","msgtype":"m.text"},"ts":1392776331000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but then i saw he brought public-html into the conversation","msgtype":"m.text"},"ts":1392776341000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"reading http://www.whatwg.org/specs/web-apps/current-work/multipage/edits.html#attributes-common-to-ins-and-del-elements can anybody tell me if they see any UA requirements that actually testable there?","msgtype":"m.text"},"ts":1392796699000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see that the spec says \"User agents must parse the datetime attribute according to the parse a date or time string algorithm. If that doesn't return a date or a global date and time, then the modification has no associated timestamp\"","msgtype":"m.text"},"ts":1392796721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it never requires the UA to actually do anything with the parsed value","msgtype":"m.text"},"ts":1392796756000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it doesn't state any specific means for exposing the parsed value","msgtype":"m.text"},"ts":1392796786000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: do you know if table_inspector.py is around somewhere?","msgtype":"m.text"},"ts":1392798632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hi everybody. I'm new to all this things around IRC.","msgtype":"m.text"},"ts":1392802790000,"senderName":"vmatva","senderId":"vmatva@irc"},
{"content":{"body":"I'm about to post a bug about DOM3 Events spec. Is it right place to discuss it before to post to bugzilla?","msgtype":"m.text"},"ts":1392802837000,"senderName":"vmatva","senderId":"vmatva@irc"},
{"content":{"body":"vmatva_: it seems like an appropriate place, although i think the editors of that spec aren't regulars here. also some of that spec is obsoleted by http://dom.spec.whatwg.org/#events","msgtype":"m.text"},"ts":1392804790000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"foolip: Hixie: whether a load starts in the face of alert() seems not so relevant. in fact if alert() is used for debugging it seems like it would be better if it did not start to load stuff while the alert is showing","msgtype":"m.text"},"ts":1392805151000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: good point, that would be pretty confusing","msgtype":"m.text"},"ts":1392805400000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"zcorpan: here are three bugs you may want to follow:","msgtype":"m.text"},"ts":1392805441000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=24361","msgtype":"m.text"},"ts":1392805453000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=24707","msgtype":"m.text"},"ts":1392805453000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=24724","msgtype":"m.text"},"ts":1392805454000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"zcorpan: Thank you. I have already created a bug in the appropriate W3C bugzilla section. I read document 'DOM 3 Events' by W3C (https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3-Events.html) as it contains more details than one referenced by you.","msgtype":"m.text"},"ts":1392805486000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"vmatva_: it actually contains less details","msgtype":"m.text"},"ts":1392805606000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: this is URL of bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=24729","msgtype":"m.text"},"ts":1392805667000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"zcorpan: Ok. I look at section http://dom.spec.whatwg.org/#events And I do not see any description of MouseEvent of WheelEvent. But I see it in W3C document.","msgtype":"m.text"},"ts":1392805768000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"vmatva_: thx. ok yeah for WheelEvent, dom3events is the right spec, or possibly https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm","msgtype":"m.text"},"ts":1392805793000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yep. I looks at latest versions of both W3C specs (DOM3 Events and UI Events). But still see that inconsistence that I described in bug.","msgtype":"m.text"},"ts":1392805959000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"vmatva_: yeah","msgtype":"m.text"},"ts":1392805989000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"vmatva_: it also gets CustomEvent and CustomEventInit wrong","msgtype":"m.text"},"ts":1392806299000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"never got the point of CustomEvent","msgtype":"m.emote"},"ts":1392806376000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: \"This value may be shown to the user\"","msgtype":"m.text"},"ts":1392806482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: so a manual test, with the condition that the UA does show it to the user","msgtype":"m.text"},"ts":1392806558000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok","msgtype":"m.text"},"ts":1392806743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I think it was once on html5.org. But I'm not sure","msgtype":"m.text"},"ts":1392807571000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://james.html5.org/tables/table_inspector.py","msgtype":"m.text"},"ts":1392807632000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Interesting. Then \"i'm not sure\". I could have a dig around at home I guess","msgtype":"m.text"},"ts":1392807737000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok. i wanted to try it on hixie's focus table :-)","msgtype":"m.text"},"ts":1392807881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: should we ask youennf for an opinion on https://github.com/w3c/web-platform-tests/pull/556 or just merge?","msgtype":"m.text"},"ts":1392808512000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't see any mention of CustomEvent in UI Events at all.","msgtype":"m.text"},"ts":1392808832000,"senderName":"vmatva_","senderId":"vmatva_@irc"},
{"content":{"body":"vmatva_: i mean in dom3events","msgtype":"m.text"},"ts":1392809058000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: merged","msgtype":"m.text"},"ts":1392809090000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: yoav: can you have a look at https://github.com/ResponsiveImagesCG/picture-element/pull/103 please?","msgtype":"m.text"},"ts":1392810803000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: lgtm","msgtype":"m.text"},"ts":1392810993000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: thx. can you merge? :-)","msgtype":"m.text"},"ts":1392811046000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: done","msgtype":"m.text"},"ts":1392811068000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"neato","msgtype":"m.text"},"ts":1392811080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yoav will have to regenerate the spec tho. I don't know if I have what I need to regenerated the spec on this machine.","msgtype":"m.text"},"ts":1392811118000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1392811130000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Willdo","msgtype":"m.text"},"ts":1392811220000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"s/d/ d/","msgtype":"m.text"},"ts":1392811232000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"hmm. \"select an image source\" should work even when there's no <picture> parent","msgtype":"m.text"},"ts":1392813444000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is ARIA a part of ADA?","msgtype":"m.text"},"ts":1392834437000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"marcosc: There's a network version of Bikeshed, you know, linked in the docs. Just curl to it (or use the webform to do it manually).","msgtype":"m.text"},"ts":1392835482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"still trying to wean people off ReSpec? :P","msgtype":"m.text"},"ts":1392835548000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: Really I'm just trying to kill off the old CSSWG processor. ^_^","msgtype":"m.text"},"ts":1392835568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But the picture spec is bikeshedded.","msgtype":"m.text"},"ts":1392835575000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshedded already, I mean.","msgtype":"m.text"},"ts":1392835584000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i was considering bikeshed, but like anolis, it seems hard to install on Windows.","msgtype":"m.text"},"ts":1392835642000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Indeed it is.  Nobody's seriously tried it yet, so I dont' have install instructions, and it's probably difficult to do anyway.","msgtype":"m.text"},"ts":1392835672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fucking *everything* is hard to do on Windows.","msgtype":"m.text"},"ts":1392835679000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But that's why we have a network service for it.","msgtype":"m.text"},"ts":1392835693000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Though curling is *also* hard on Windows...)","msgtype":"m.text"},"ts":1392835699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyone around with Opera BTS access able to tell me what CARAKAN-871 is about?","msgtype":"m.text"},"ts":1392839348000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"units!","msgtype":"m.text"},"ts":1392839690000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i like that kind of thing","msgtype":"m.text"},"ts":1392839693000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"annevk-cloud: still around by any chance?","msgtype":"m.text"},"ts":1392839907000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"annevk-cloud: curious about what you had in mind with forcing <link rel=import> to have UTF-8 encoding","msgtype":"m.text"},"ts":1392839948000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"mathiasbynens: Why are Object.prototype.__defineGetter__ and __defineSetter__ defined to do stuff with black magic instead of creating a getter/setter property on the object? It leaves a lot undefined.","msgtype":"m.text"},"ts":1392841396000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mathiasbynens: Like, at step four you set [[Enumerable]] of the property to true… but it might not exist yet!","msgtype":"m.text"},"ts":1392841446000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: <ins>/<del> are mostly just legacy from HTML4, so yeah, there's not much for UAs to do with them unless they're conformance checkers or analysis tools of sorts","msgtype":"m.text"},"ts":1392841700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm I use <ins> and <del> a lot","msgtype":"m.text"},"ts":1392841942000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"What is preferred?","msgtype":"m.text"},"ts":1392841956000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: preferred for what?","msgtype":"m.text"},"ts":1392842311000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: marking up edits to a document or post, for example.","msgtype":"m.text"},"ts":1392842338000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"<ins> and <del> are the only dedicated way to do that in html as far as i know","msgtype":"m.text"},"ts":1392842358000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So in what sense do you mean they're legacy from HTML4?","msgtype":"m.text"},"ts":1392842401000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"they came from HTML4, we didn't invent them since","msgtype":"m.text"},"ts":1392842475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like <p> is legacy from the first draft of HTML","msgtype":"m.text"},"ts":1392842487000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah ok, so not \"bad\" legacy","msgtype":"m.text"},"ts":1392842491000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and <table> is legacy from like HTML2 or so","msgtype":"m.text"},"ts":1392842493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, i meant it in its sense of \"a thing handed down by a predecessor\"","msgtype":"m.text"},"ts":1392842520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not \"denoting software or hardware that has been superseded but is difficult to replace because of its wide use\"","msgtype":"m.text"},"ts":1392842528000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry for the confusion","msgtype":"m.text"},"ts":1392842533000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i use ins and del as well","msgtype":"m.text"},"ts":1392842593000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i even wrote stylesheets there!","msgtype":"m.text"},"ts":1392842597000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"http://daten.dieweltistgarnichtso.net/src/css-del-ins.html","msgtype":"m.text"},"ts":1392842630000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"mathiasbynens: https://github.com/whatwg/javascript/issues/18","msgtype":"m.text"},"ts":1392842986000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: zcorpan: looks like some version of the source is at http://html5.googlecode.com/svn/trunk/tables/web/cgi-bin/table_inspector.py","msgtype":"m.text"},"ts":1392843038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: nice, thanks. got a link to that bz mail?","msgtype":"m.text"},"ts":1392844263000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: Nah, it was somewhat tangential anyawy","msgtype":"m.text"},"ts":1392844284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mathiasbynens: (personal email, about stuff around opjsunit)","msgtype":"m.text"},"ts":1392844291000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Nothing that interesting in it)","msgtype":"m.text"},"ts":1392844297000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"things that strongly discourage me from bothering with html validation: pages of bogus warnings about custom ports, and equally bogus warnings about rel=noreferer","msgtype":"m.text"},"ts":1392845763000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"custom ports?","msgtype":"m.text"},"ts":1392846006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"local development server is on port 81; validators spew dozens of warnings about https://foo.com:81 links","msgtype":"m.text"},"ts":1392846379000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(internal, rather; not on the local network, not that it matters)","msgtype":"m.text"},"ts":1392846478000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is there a validator that'll let me shut up particular warnings that I'm not interested in \"fixing\"?","msgtype":"m.text"},"ts":1392846514000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"why would validators spew dozens of warnings about https://foo.com:81 links?","msgtype":"m.text"},"ts":1392846700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the warning?","msgtype":"m.text"},"ts":1392846714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"ports under 1024 should be accessed using the appropriate scheme name\"","msgtype":"m.text"},"ts":1392846727000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1392846756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't even think of a case where that warning makes sense","msgtype":"m.text"},"ts":1392846787000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"80 or 443?","msgtype":"m.text"},"ts":1392846826000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"especially since 81 is unassigned...","msgtype":"m.text"},"ts":1392846828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, 81 (some random arbitrary port; I think it used to be an alternate HTTP server dropped on 80+1, then later became https)","msgtype":"m.text"},"ts":1392846866000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"have you filed a bug with the validator in question?","msgtype":"m.text"},"ts":1392846917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, since it happened on two validators in a row (html5.validator.nu, validator.w3.org; based on the output I assume they're basically the same thing)","msgtype":"m.text"},"ts":1392846970000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you found the same bug on two instances of the same validator and so you didn't file a bug?","msgtype":"m.text"},"ts":1392846997000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"file a bug dude.","msgtype":"m.text"},"ts":1392847008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"file a bug where? likely not on those websites if there's some underlying codebase, and the usefulness I find in validators doesn't motivate me to figure that out, or to debate with whoever it goes to","msgtype":"m.text"},"ts":1392847172000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://bugzilla.validator.nu/enter_bug.cgi","msgtype":"m.text"},"ts":1392847230000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you can't be bothered to file a bug, please don't complain here :-)","msgtype":"m.text"},"ts":1392847245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"filing bugs risks a high time investment","msgtype":"m.text"},"ts":1392847287000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Wait, what, we can't bitch here about random shit? :(","msgtype":"m.text"},"ts":1392847322000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: you can, you file bugs when you bitch.","msgtype":"m.text"},"ts":1392847347000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pretty much everyone who bitches here files bugs as they're bitching, even when they are pretending to not care :-)","msgtype":"m.text"},"ts":1392847373000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but saying that validators are useless because they have a bug, passively aggressively \"threatening\" to not use them any more, and then saying that helping make validators better is a \"risky investment\", seems kinda ridiculous even for #whatwg.","msgtype":"m.text"},"ts":1392847466000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Bah! When I don't care I just prod people who will. :)","msgtype":"m.text"},"ts":1392847482000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"like i said :-)","msgtype":"m.text"},"ts":1392847491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And I dunno, doesn't seem that ridiculous. There again, my logic *is* all the way over by the door, so I might not be thinking rationally. :)","msgtype":"m.text"},"ts":1392847506000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"how the heck do you find the element that a touchmove event is over?","msgtype":"m.text"},"ts":1392848690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like, if i want to get the list of elements that a user swiped over","msgtype":"m.text"},"ts":1392848756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"elementFromPoint()?","msgtype":"m.text"},"ts":1392849338000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn't familiar with the touch* events, so can't tell if there's an easier way.","msgtype":"m.emote"},"ts":1392849360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, looks like elementFromPoint() is the only way","msgtype":"m.text"},"ts":1392849446000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would be good if those methods took a MouseEvent or TouchEvent","msgtype":"m.text"},"ts":1392849465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1392851288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"touch events are non-trivial to use","msgtype":"m.text"},"ts":1392851303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wish each touch would just be its own object with events firing on it","msgtype":"m.text"},"ts":1392851318000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"instead of having to track touch.identifier","msgtype":"m.text"},"ts":1392851335000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, got it working. http://damowmow.com/playground/demos/touch/001.html","msgtype":"m.text"},"ts":1392853857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: thanks, sorry I missed that in the docs","msgtype":"m.text"},"ts":1392854039000,"senderName":"marcosc","senderId":"marcosc@irc"}
]