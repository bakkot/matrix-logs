[
{"content":{"body":"jwalden: from what I can tell in the specs that'll make its way down through fetch with no modifications to the `text/html` content-type, so it'll just enter the HTML parser's usual unknown charset logic, and thus probably windows-1252 for en-US.","msgtype":"m.text"},"ts":1559630550000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe we should make that fixed somehow for data: URLs","msgtype":"m.text"},"ts":1559635491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, if we could patch that to utf-8 it would probably be fine?","msgtype":"m.text"},"ts":1559655309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suspect windows-1252 would be safer","msgtype":"m.text"},"ts":1559657292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Would it tho? HTML uses 1252 because of significant legacy content predating heavy utf-8 deployment. It's not immediately clear to me that data: urls would suffer from the same constraints. The 1252 default already breaks *modern* pages commonly, why wouldn't it break data: urls?","msgtype":"m.text"},"ts":1559657419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's fair, I don't know for sure and given how URLs are parsed UTF-8 would make sense; I guess it'd require some research","msgtype":"m.text"},"ts":1559657516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1559657560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also oh gosh, yes, i'm not even sure what it would mean for the url to be utf-8 encoded but contain html content that's 1252 encoded.","msgtype":"m.text"},"ts":1559657615000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"data:,å -> data:,%C3%A5 -> Ã¥","msgtype":"m.text"},"ts":1559658162000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"data: URLs have been around for quite a long time, so there has been plenty of time for them to develop a dependency on the current behavior.","msgtype":"m.text"},"ts":1559658459000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I mean an initial qusetion could be how many text/html data URLs contain non-ASCII","msgtype":"m.text"},"ts":1559658809000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm not necessarily opposed to making data: default to UTF-8 if Chrome experiments with the compat fallout. I don't really have apetite for risking making Gecko the first mover on this one.","msgtype":"m.text"},"ts":1559659484000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(OTOH, considering that HTML in data: is mainly for test cases, it's unclear that making it diverge from http: and https: serves the use case well.)","msgtype":"m.text"},"ts":1559659592000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's not clear to me what is actually being displayed when an \"inactive\" drop-down-style <select> element is rendered. Is it simply the `<select>` element? Or is the `<select>` element acting as a container for the selected `<option>` element?","msgtype":"m.text"},"ts":1559675068000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Undefined.","msgtype":"m.text"},"ts":1559675222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(intentionally, currently)","msgtype":"m.text"},"ts":1559675233000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Per CSS, <select> is a replaced element; it's a rectangle whose contents are completely opaque.","msgtype":"m.text"},"ts":1559675250000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins thought so. Does that mean that styling <optgroup> and <option> is also undefined?","msgtype":"m.text"},"ts":1559675294000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Definitely.","msgtype":"m.text"},"ts":1559675303000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, that's a relief","msgtype":"m.text"},"ts":1559675383000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"TabAtkins: think we can remove those from here: https://html.spec.whatwg.org/multipage/rendering.html#form-controls","msgtype":"m.text"},"ts":1559675408000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: it's indeed currently undefined. But the values there are needed for web compat, and more should be added per https://github.com/whatwg/html/issues/1046","msgtype":"m.text"},"ts":1559676155000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jugglinmike: also, we should make it well-defined at least for appearance: none","msgtype":"m.text"},"ts":1559676188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: How can we standardize styling for elements whose rendering we intentionally do not standardize","msgtype":"m.text"},"ts":1559676323000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"it's a bit messy to try to make incremental improvements without a solid foundation, but I think for example the text-transform fix is a clear improvement even if it's still undefined what the effect of text-transform on <select> is, since browsers do allow it to have an effect","msgtype":"m.text"},"ts":1559676361000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh, I'm not suggesting we remove text-indent for `select`","msgtype":"m.text"},"ts":1559676394000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I want to remove `option` and `optgroup`","msgtype":"m.text"},"ts":1559676427000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"since the effect of styling those is \"definitely\" undefined","msgtype":"m.text"},"ts":1559676537000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"<button> moved from intentionally undefined to intentionally defined in https://github.com/whatwg/html/pull/4143 :)","msgtype":"m.text"},"ts":1559676537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"A problem here is that what I just described is half-true. CSS officially is hands-off, but in practice some things *do* work in (most?) UAs. That's ocvered by that stylesheet.","msgtype":"m.text"},"ts":1559676543000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And we are *trying* to get to a point where CSS's interaction with form controls is well-defined. (Have been trying for at least twenty years.)","msgtype":"m.text"},"ts":1559676574000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(But actually maybe happening now.)","msgtype":"m.text"},"ts":1559676581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That'd be great, and congrats on <button>","msgtype":"m.text"},"ts":1559676679000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: \"option, optgroup\" should be removed because from the spec it doesn't match what what browsers have in their UA stylesheets","msgtype":"m.text"},"ts":1559676744000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Firefox does it","msgtype":"m.text"},"ts":1559676774000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"https://dxr.mozilla.org/mozilla-central/rev/c909c105f914f69054b9a7c6b189ee39fa1cad44/layout/style/res/forms.css#354","msgtype":"m.text"},"ts":1559676796000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"https://dxr.mozilla.org/mozilla-central/rev/c909c105f914f69054b9a7c6b189ee39fa1cad44/layout/style/res/forms.css#388","msgtype":"m.text"},"ts":1559676800000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Ah. I stand corrected. So that's different from webkit/chromium","msgtype":"m.text"},"ts":1559676848000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah...","msgtype":"m.text"},"ts":1559676858000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I can appreciate that we're trying to define form controls","msgtype":"m.text"},"ts":1559676876000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Especially in the presence of `appearance: none`","msgtype":"m.text"},"ts":1559676895000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but I also think consistency is important. The spec currently seems internally inconsistent because it leaves this area as implementation defined but also specifies parts of it","msgtype":"m.text"},"ts":1559676988000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Also, is there any text that explains the spec's contours around form controls?","msgtype":"m.text"},"ts":1559677135000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I'm going to close https://github.com/whatwg/html/issues/4675, and I'd like to cite something if possible","msgtype":"m.text"},"ts":1559677171000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"You're right that it's inconsistent, and this is not really explained in the spec I think. We could add a note about it.","msgtype":"m.text"},"ts":1559677238000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But technically, the rules in the rendering section are just expected to be in the UA stylesheet, and the effect should be as per CSS rules. If CSS rules says any CSS property's behavior is undefined for a particular element, then that just means that it's undefined","msgtype":"m.text"},"ts":1559677320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You can still check what is in the UA stylesheet with getComputedStyle","msgtype":"m.text"},"ts":1559677340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I could, but the value of doing so seems questionable","msgtype":"m.text"},"ts":1559677405000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Baby steps towards the end goal of having defined & interoperable form controls rendering :)","msgtype":"m.text"},"ts":1559677481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in particular, if something (like text-transform on select) is wasting web developers' time, and adding a property to the UA stylesheet in one browser fixes it, then we can specify and test that without waiting for rendering rules of <select> to be defined","msgtype":"m.text"},"ts":1559677575000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In the case of text-indent of option, I don't know if it's an important interop issue or not","msgtype":"m.text"},"ts":1559677618000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Agreed. And we have evidence (in the form of \"CSS normalizer\" projects) that text-transform on select is wasting web developers' time","msgtype":"m.text"},"ts":1559677641000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Removing option/optgroup and leaving a spec issue open to investigate seems reasonable","msgtype":"m.text"},"ts":1559677672000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"But leaving it as-is and having the issue also seems reasonable","msgtype":"m.text"},"ts":1559677690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'd be comfortable leaving it as-is if the new issue were referenced in the specification","msgtype":"m.text"},"ts":1559677776000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"It'd still be inconsistent, but at least the inconsistency would be obvious","msgtype":"m.text"},"ts":1559677804000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1559677847000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: still, I don't think I can report this issue","msgtype":"m.text"},"ts":1559678188000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"due to my unfamiliarity with the problem","msgtype":"m.text"},"ts":1559678217000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: OK, I can report it","msgtype":"m.text"},"ts":1559678251000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Even just limited to the <select> element, I can't say what we can/should standardize","msgtype":"m.text"},"ts":1559678252000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, I don't know that either. <select> is pretty complex though","msgtype":"m.text"},"ts":1559678319000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Things like buttons and checkboxes are simpler","msgtype":"m.text"},"ts":1559678338000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: doesn't match what webkit-derived browsers have in their stylesheets","msgtype":"m.text"},"ts":1559679560000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"oops, ignore that zcorpan","msgtype":"m.text"},"ts":1559679560000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: https://github.com/whatwg/html/issues/4676","msgtype":"m.text"},"ts":1559680435000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't know if this is relevant to what you're discussing, but I'm currently looking into letting option elements increment CSS counters in Chrome","msgtype":"m.text"},"ts":1559680760000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"oliverdunk: interesting! It's relevant for the discussion of what the effect of CSS is on form controls, though myself and jugglinmike haven't looked at counters","msgtype":"m.text"},"ts":1559680885000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oliverdunk: what's the motivation?","msgtype":"m.text"},"ts":1559680902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: My only association is that I wanted to make a contribution to Chromium, and found this bug as one to try: https://bugs.chromium.org/p/chromium/issues/detail?id=799465","msgtype":"m.text"},"ts":1559681090000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"The use case is letting a changed select input alter a counter value: https://codepen.io/kizu/pen/PEJgpr","msgtype":"m.text"},"ts":1559681106000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"I didn't know CSS counters existed","msgtype":"m.text"},"ts":1559681117000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"oliverdunk: I'm curious about the motivation too. ^_^ Blink implements CSS counters in a broken hacky way on the box tree; they're *specified* to work over the element tree (but pay attention to whether the element generates a box or not). That all said, since option/optgroup aren't rendered by CSS, it's not clear whether they \"generate a box\" or not, and thus whether they should increment counters or not.","msgtype":"m.text"},"ts":1559681133000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably if you do a strict reading, they don't generate boxes, and so shouldn't increment counters.","msgtype":"m.text"},"ts":1559681145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Interesting TabAtkins. I suspect you know a lot more than me, I just assumed from the bug that implementing them was right.","msgtype":"m.text"},"ts":1559681215000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"I wrote the spec for counters. ^_^","msgtype":"m.text"},"ts":1559681227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that case, you _definitely_ know a lot more than me!","msgtype":"m.text"},"ts":1559681248000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"Forgive my ignorance :P","msgtype":"m.text"},"ts":1559681263000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"But whether the spec is describing the ideal reality, compared with current browser impls, is unclear. And the ideal interaction of replaced-element descendants and counters definitely wasn't explicitly considered.","msgtype":"m.text"},"ts":1559681270000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I\"ll open an issue in csswg","msgtype":"m.text"},"ts":1559681322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oliverdunk: Does that code currently work in any browser?","msgtype":"m.text"},"ts":1559681457000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: definitely Firefox, and apparently the old Edge.","msgtype":"m.text"},"ts":1559681477000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"https://github.com/w3c/csswg-drafts/issues/4004","msgtype":"m.text"},"ts":1559681658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Thanks! Out of interest, when you say \"rendered by CSS\", does that just mean if CSS applies or not?","msgtype":"m.text"},"ts":1559681896000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"I mean \"rendering is fully explained by the CSS box model\".","msgtype":"m.text"},"ts":1559682449000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"option/optgroup aren't explained at all by CSS currently.","msgtype":"m.text"},"ts":1559682476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Gotcha. Once a decision is made on that bug, assuming the changes aren't too major, I'd love to try making them.","msgtype":"m.text"},"ts":1559682927000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"}
]