[
{"content":{"body":"Is the only place pointer-events is defined really only in the SVG spec?!","msgtype":"m.text"},"ts":1612181908000,"senderName":"jkt_","senderId":"jkt_@irc"},
{"content":{"body":"Is the only place SVG is defined really only in the SVG spec?! (Yes, unfortunately so.)","msgtype":"m.text"},"ts":1612182389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HAH but it applies to HTML too though","msgtype":"m.text"},"ts":1612182463000,"senderName":"jkt_","senderId":"jkt_@irc"},
{"content":{"body":"HTML gets some maintenance, which is nice","msgtype":"m.text"},"ts":1612182527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like also how the SVG draft doesn't have a security or privacy section :D","msgtype":"m.text"},"ts":1612182595000,"senderName":"jkt_","senderId":"jkt_@irc"},
{"content":{"body":"JakeA: hey I'm creating the \"create a Response object\" abstraction per your suggestion and am finding some difficulties with fetch()","msgtype":"m.text"},"ts":1612185360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in particular it creates a Response before having a response","msgtype":"m.text"},"ts":1612185429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I'm not even sure how that works in all cases","msgtype":"m.text"},"ts":1612185437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: remind me why I suggested that üòÄ","msgtype":"m.text"},"ts":1612185505000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I forgot the context","msgtype":"m.text"},"ts":1612185509000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think I found a way to make it work and clarify the situation","msgtype":"m.text"},"ts":1612185615000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you suggested it because creating Request/Response is quite boilerplate-heavy and prone to error","msgtype":"m.text"},"ts":1612185637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I also just filed an issue against Background Fetch on one such an error (forgetting about guard)","msgtype":"m.text"},"ts":1612185659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: PR up in a bit","msgtype":"m.text"},"ts":1612185670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohh cheers!","msgtype":"m.text"},"ts":1612185674000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(PR will be for Fetch, to be clear, but will make it easy to fix things downstream)","msgtype":"m.text"},"ts":1612185697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/fetch/pull/1157 (highlighted the problem I ran into)","msgtype":"m.text"},"ts":1612186432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you don't have concerns about the response","msgtype":"m.text"},"ts":1612187275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: responseObject variable in fetch()?","msgtype":"m.text"},"ts":1612187282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe I'm missing something? \"Abort Fetch\" already allows the responseObject to be null. I'd put a signal check in before responseObject is set to make it clear that an object shouldn't be created if it's been aborted","msgtype":"m.text"},"ts":1612187587000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: what I'm wondering is how variable binding works; that once you do \"add these steps to request's signal\" if that flattens responseObject to null, so those steps will never see a Response object","msgtype":"m.text"},"ts":1612187913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think that's what happens in JS unless you do a closure","msgtype":"m.text"},"ts":1612187939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I would expect responseObject to reference the variable in the parent scope, whatever it's set to at the time of those steps being called, not at the time of the steps being created. But yeah, I guess I'm treating it like a JS closure. But if it didn't have closure-like behaviour then the `Set locallyAborted to true.` line is wrong too, no?","msgtype":"m.text"},"ts":1612188163000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah good point, okay, let's assume this works until someone wants it rewritten","msgtype":"m.text"},"ts":1612188225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'll figure out the realm argument and I guess I'll add a standalone type for guard","msgtype":"m.text"},"ts":1612188250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"screams into the void: REALMS","msgtype":"m.emote"},"ts":1612189598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1612189641000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I tried to cheat a bit on background-fetch https://wicg.github.io/background-fetch/#realms","msgtype":"m.text"},"ts":1612189727000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: btw if you have further input on the media range WPT‚Ä¶ I think my next step there is generate one test file per scenario, but still no good ideas for pass/failure","msgtype":"m.text"},"ts":1612189738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that‚Äôs prolly mostly correct except that context object will disappear","msgtype":"m.text"},"ts":1612189805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I still had to pass it around algorithms. I tried to reduce typing a bit with stuff like https://wicg.github.io/background-fetch/#create-record-objects \"All platform objects must be created in realm.\"","msgtype":"m.text"},"ts":1612189859000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And then you need to ensure you always have a this (e.g., you don‚Äôt if you create in a task)","msgtype":"m.text"},"ts":1612189859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opens a tab to https://github.com/web-platform-tests/wpt/pull/27272 as a reminder","msgtype":"m.emote"},"ts":1612189928000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: have you actually declared GitHub notification bankruptcy? As I have some other PRs... https://github.com/whatwg/fetch/pull/1151 is very simple","msgtype":"m.text"},"ts":1612193189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for the status code tests, did you see Safari passing them? https://wpt.fyi/results/fetch/h1-parsing/status-code.window.html?diff&filter=ADC&run_id=5747393746173952&run_id=5657424113434624 indicates it fails all of them, but it's the same for all browsers...","msgtype":"m.text"},"ts":1612200299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Release 119 (Safari 14.1, WebKit 15611.1.10.1) passes all of them for me","msgtype":"m.text"},"ts":1612200338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fascinating","msgtype":"m.text"},"ts":1612200347000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Version 14.0.2 (15610.3.7.1.10, 15610) does as well","msgtype":"m.text"},"ts":1612200365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if it's an infra issue","msgtype":"m.text"},"ts":1612200367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Do Chrome and Firefox fail all of them for you, like CI says?","msgtype":"m.text"},"ts":1612200393000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no, I think it might be Python","msgtype":"m.text"},"ts":1612200431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, yeah, that makes sense then","msgtype":"m.text"},"ts":1612200444000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I didn't think about making the Python file Python 3 compatible","msgtype":"m.text"},"ts":1612200445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And that doesn't fail locally or any CI...","msgtype":"m.text"},"ts":1612200477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah... the WPT infra team seems pretty nice about proactively going around and fixing any Python2-isms for us, and they have a plan to go 3-by-default soon I guess, at which point it will be enforced I hope","msgtype":"m.text"},"ts":1612200524000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I might try to fix this for them","msgtype":"m.text"},"ts":1612200580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: This week I‚Äôm trying to find out what the level of implementor interest is for https://github.com/w3c/webcrypto/issues/73 (‚ÄúUsing the Subtle Crypto Interface with Streams‚Äù). Wondering if you have any thoughts.","msgtype":"m.text"},"ts":1612201920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thanks for all the reviews Domenic (there's a couple more in Fetch if you're interested and also another one in URL); I'm gonna take a break for a bit as it's been a long day (mostly fun triage stuff)","msgtype":"m.text"},"ts":1612201970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: Chrome seems pretty burned on touching WebCrypto again from what I can tell. But it might fit with projects like CompressionStream etc., from the streams folks. Maybe ping ricea@? I suspect the biggest determining factor though would be whether we have web developers telling us that it's critical for their applications.","msgtype":"m.text"},"ts":1612202002000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Same for Fx","msgtype":"m.text"},"ts":1612202019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, if there are editors available, WebAppSec has plenty of specs that could use some maintaining...","msgtype":"m.text"},"ts":1612202048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am working on WebAppSec too, actually. As of this month","msgtype":"m.text"},"ts":1612202076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1612202083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: annevk: about Web Crypto feedback, thanks. I‚Äôd like to get implementor comments on record in the issue tracker, so I reckon I‚Äôll @-mention some","msgtype":"m.text"},"ts":1612202190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: for Gecko, maybe Martin Thompson and Sylvestre Ledru","msgtype":"m.text"},"ts":1612202236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or lemme know if you have other suggestions","msgtype":"m.text"},"ts":1612202257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw, https://github.com/w3c/webcrypto/issues/73 has 56 thumbs ups, though no comments from anybody saying it rises to the level of being critical for their apps","msgtype":"m.text"},"ts":1612202411000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unless you count vague stuff like https://github.com/w3c/webcrypto/issues/73#issuecomment-290314738","msgtype":"m.text"},"ts":1612202438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> If streaming/progressive encryption isn't implemented, it's going to hugely limit the scope of usage of the API. I really need that kind of functionality for the software I work on.","msgtype":"m.text"},"ts":1612202445000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/webcrypto/issues/73#issuecomment-395968210","msgtype":"m.text"},"ts":1612202513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":">  You just can't upload 3GB files in memory to hash them in a single block. Right now if you have this use case you are forced to look into other library options.","msgtype":"m.text"},"ts":1612202525000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there do seem to be a lot of devs that need to do things with multi-gigabyte files","msgtype":"m.text"},"ts":1612202560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought wpt was already Python 3 by default","msgtype":"m.text"},"ts":1612203295000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"https://github.com/web-platform-tests/wpt/pull/27081","msgtype":"m.text"},"ts":1612203296000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith: mt seems fine","msgtype":"m.text"},"ts":1612203331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"andreubotella: curious, not sure what's going on then","msgtype":"m.text"},"ts":1612203427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm we should probably incorporate the monkeypatches in https://w3c.github.io/webappsec-mixed-content/#fetch","msgtype":"m.text"},"ts":1612210942000,"senderName":"Domenic","senderId":"Domenic@irc"}
]