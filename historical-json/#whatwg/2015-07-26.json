[
{"content":{"body":"nox: maybe you need to run bikeshed update?","msgtype":"m.text"},"ts":1437902782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I don't get fatal errors here","msgtype":"m.text"},"ts":1437902787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I do have two warnings I need to remove at some point","msgtype":"m.text"},"ts":1437902799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Still the same after bikeshed update.","msgtype":"m.text"},"ts":1437904082000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Maybe I need to run bikeshed update","msgtype":"m.text"},"ts":1437904128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah ah.","msgtype":"m.text"},"ts":1437904152000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Did you take a look at <https://github.com/whatwg/dom/issues/60>?","msgtype":"m.text"},"ts":1437904171000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it shouldn't matter","msgtype":"m.text"},"ts":1437904288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: it'll only matter if you implement synchronous notifications on top for internal usage","msgtype":"m.text"},"ts":1437904315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: e.g. to implement \"iframe removed from document\"","msgtype":"m.text"},"ts":1437904341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's what I gathered, but in Servo we strive to make the code look as the spec states and I do have to queue the mutation record after the mutation there (because the machinery is used for things that are not related to queuing of mutation records).","msgtype":"m.text"},"ts":1437904352000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So I was wary of inversing the steps.","msgtype":"m.text"},"ts":1437904385000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"What's the machinery used for?","msgtype":"m.text"},"ts":1437904416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Updating Node.childNodes.","msgtype":"m.text"},"ts":1437904435000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And other things, like updating Document.title","msgtype":"m.text"},"ts":1437904442000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I still don't get any errors","msgtype":"m.text"},"ts":1437904467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Weird.","msgtype":"m.text"},"ts":1437904472000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Updating document.title? That should be a lazy getter...","msgtype":"m.text"},"ts":1437904488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How do you update the window's title","msgtype":"m.text"},"ts":1437904535000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think for that kind of stuff you'd like to just observe the title element, but I'm not entirely sure what would be the best","msgtype":"m.text"},"ts":1437904607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, consider I'm observing it,","msgtype":"m.text"},"ts":1437904683000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I would have to allocate an actual mutation observer and whatnot, so instead I use the underlaying infrastructure for this,","msgtype":"m.text"},"ts":1437904717000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I wonder if TabAtkins could look into your bikeshed problem... I wonder what's different between our setups","msgtype":"m.text"},"ts":1437904734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but if the mutation didn't happen yet, that means I can't just get the text content of <title> and have to work with removedNodes and addedNodes.","msgtype":"m.text"},"ts":1437904749000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Mmmh, I don't have an error anymore, must have done something wrong.","msgtype":"m.text"},"ts":1437904766000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I still think this ordering inconsistency should not be there, if only just to be consistent.","msgtype":"m.text"},"ts":1437904825000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And it bothers me when propagating the mutation to Node.childNodes.","msgtype":"m.text"},"ts":1437904905000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: When making a PR, should I submit changes to the HTML file too?","msgtype":"m.text"},"ts":1437905060000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, if you can run bikeshed that'd make integration easier","msgtype":"m.text"},"ts":1437905100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I guess I should mention something like that in the README","msgtype":"m.text"},"ts":1437905109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok, it made a lot of changes, that's why I ask.","msgtype":"m.text"},"ts":1437905115000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Running bikeshed on master says:  1 file changed, 771 insertions(+), 773 deletions(-)","msgtype":"m.text"},"ts":1437905180000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: seems okay","msgtype":"m.text"},"ts":1437905272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Err, I think https://github.com/whatwg/dom/issues/59 is still not the right fix.","msgtype":"m.text"},"ts":1437905664000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: previousSibling will be wrong if node == child, AFAICT.","msgtype":"m.text"},"ts":1437905675000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"reopened","msgtype":"m.text"},"ts":1437905712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will look at it later","msgtype":"m.text"},"ts":1437905720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1437905807000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"wanderview: so respondWith() is kind of a racy way to get a Response to be read...","msgtype":"m.text"},"ts":1437920028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: e.g. if you pass a Response to both respondWith() and something else that takes a promise for a Response (do we have anything like that?) it's unclear which will win...","msgtype":"m.text"},"ts":1437920058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the point of having https://github.com/orgs/whatwg/teams/contributors ?","msgtype":"m.text"},"ts":1437929011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I enabled third-party restrictions for the WHATWG repo, let me know if I broke anything","msgtype":"m.text"},"ts":1437929766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that url is not public (inot sure if that's helpful feedback)","msgtype":"m.text"},"ts":1437929877000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: thanks, but doesn't matter","msgtype":"m.text"},"ts":1437929985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"botie: tell annevk I think contributors was designed so I could assign bikeshed-related issues to tabatkins","msgtype":"m.text"},"ts":1437933827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what?","msgtype":"m.text"},"ts":1437933827000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"annevk: There was a problem a day or two ago where the CSSWG specs had cascading failures; that's fixed now.","msgtype":"m.text"},"ts":1437934100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: That temporarily wiped out most of the definitions coming from CSS specs.","msgtype":"m.text"},"ts":1437934129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Also, now I track what version the repo's data files are, so if I update those and you haven't manually updated in a while, you'll pick up the updated files for free.)","msgtype":"m.text"},"ts":1437934486000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: as far as I know, there is nothing else that takes a Promise<Response> like respondWith()","msgtype":"m.text"},"ts":1437936453000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: and I think I confirmed with bz recently that .respondWith() and .waitUntil() are the first standard webidl we have that takes a promise as an argument (there may be a moz-specific API as well)","msgtype":"m.text"},"ts":1437936703000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah that seems correct","msgtype":"m.text"},"ts":1437936792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: The example code in 4.2.2 of the promises guide is actually super confusing.","msgtype":"m.text"},"ts":1437950638000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Run the following in parallel\" suggests that the two substeps are meant to race each other in parallel, when that's exactly opposite.","msgtype":"m.text"},"ts":1437950677000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought the suggestion was to put the async section at the end, with an explicit \"return foo, and continue the rest of this algorithm async\"","msgtype":"m.text"},"ts":1437950733000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]