[
{"content":{"body":"hello","msgtype":"m.text"},"ts":1257033660000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"i'm implementing a browser automation tool that has a quasi-DOM as part of its API","msgtype":"m.text"},"ts":1257033661000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"my idea is to generate that code from the XHTML and/or HTML5 spec, keeping it easy to maintain","msgtype":"m.text"},"ts":1257033662000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"at the minimum i'll just need a map of { «tag name»: [«attribute», ...], ... }, but also some type info would be nice (e.g. 'disabled' => boolean)","msgtype":"m.text"},"ts":1257033720000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"any tips on where to start or any code that does something similar already would be greatly appreciated","msgtype":"m.text"},"ts":1257033721000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"jptix: what happens if you need to automate something involving elements/attributes the browser supports that aren't conforming in HTML5?","msgtype":"m.text"},"ts":1257033780000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: probably add it manually or have the user do browser.attributeValue(\"some-attribute\")","msgtype":"m.text"},"ts":1257033840000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"s/browser/element","msgtype":"m.text"},"ts":1257033841000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"at the moment i'm just playing with the idea.. having at least some part of the code generated from the spec","msgtype":"m.text"},"ts":1257033900000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"am i heading down the wrong road here?","msgtype":"m.text"},"ts":1257033960000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"it's an interesting idea","msgtype":"m.text"},"ts":1257034020000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"not sure how good an idea it is ;)","msgtype":"m.text"},"ts":1257034021000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"if worst comes to worst you could extract that programmatically from the spec's source, I guess.","msgtype":"m.text"},"ts":1257034080000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"e.g. grab all dl.element instances","msgtype":"m.text"},"ts":1257034081000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"yes, that's the least appealing approach :)","msgtype":"m.text"},"ts":1257034200000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"i've been looking at the relaxng files in https://whattf.svn.cvsdude.com/syntax/trunk","msgtype":"m.text"},"ts":1257034320000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"but wanted to check if anyone here have an opinion","msgtype":"m.text"},"ts":1257034321000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"not sure if those are kept up to date","msgtype":"m.text"},"ts":1257034380000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"that looks better","msgtype":"m.text"},"ts":1257034381000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"they seem to be","msgtype":"m.text"},"ts":1257034382000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"jptix: I /think/ those are used by hsivonen's validator, in which case I would assume they're reasonably up-to-date","msgtype":"m.text"},"ts":1257034500000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"jptix: out of interest why a \"quasi-dom\" rather than a dom?","msgtype":"m.text"},"ts":1257034680000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: i'm re-implementing an existing API which has a quite large user base","msgtype":"m.text"},"ts":1257034740000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"so the \"quasi\" part is mostly about making it fit nicer to the language (ruby)","msgtype":"m.text"},"ts":1257034860000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"but hopefully it will be more accurate if my approach succeeds :)","msgtype":"m.text"},"ts":1257034861000,"senderName":"jptix","senderId":"jptix@irc"},
{"content":{"body":"Ugh, camelCase property values for image-rendering.  Can't we just systematically hyphenize, like CSS things are systematically camelCased when they need to be JS identifiers?","msgtype":"m.text"},"ts":1257037980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, I see, SVG is responsible for introducing zillions of camelCase values for CSS properties?  Great.","msgtype":"m.text"},"ts":1257038100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hi all!","msgtype":"m.text"},"ts":1257043560000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ah, hacking in HTML and CSS is so relaxing.","msgtype":"m.text"},"ts":1257045960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hacking in HTML, of course.","msgtype":"m.text"},"ts":1257046140000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Injecting <plaintext> tags into forums that allow html.","msgtype":"m.text"},"ts":1257046141000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"btw how does html serialization rutine deal with plaintext?","msgtype":"m.text"},"ts":1257046260000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"because \"<plaintext>data\" gets serialized as \"<plaintext>data</plaintext>\" ","msgtype":"m.text"},"ts":1257046680000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"hooray","msgtype":"m.text"},"ts":1257049440000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"my html5 parser is finally able to parse it's specification","msgtype":"m.text"},"ts":1257049441000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"I have an HTML5 markup-related question","msgtype":"m.text"},"ts":1257067440000,"senderName":"Mathias","senderId":"Mathias@irc"},
{"content":{"body":"If I was to use HTML5 for this page: http://optiekockerman.be/merken, what would be the best way to mark up the list of brands? (Which is basically the only \"content\" on that page)","msgtype":"m.text"},"ts":1257067500000,"senderName":"Mathias","senderId":"Mathias@irc"},
{"content":{"body":"Would it be okay to use a secondary <nav> element?","msgtype":"m.text"},"ts":1257067501000,"senderName":"Mathias","senderId":"Mathias@irc"},
{"content":{"body":"ment: It doesn't really cope with plaintext, but the current whacky behaviour is already done and avoids special casing it","msgtype":"m.text"},"ts":1257071220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What does \"'NoneType' object is unsubscriptable\" mean?","msgtype":"m.text"},"ts":1257075600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"x = None; y = x[0]","msgtype":"m.text"},"ts":1257075660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"When it's throwing on print repr(self.currentToken[\"name\"])?","msgtype":"m.text"},"ts":1257075720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"self.currentToken is None","msgtype":"m.text"},"ts":1257075721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, just realized that","msgtype":"m.text"},"ts":1257075722000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"facepalms","msgtype":"m.emote"},"ts":1257075723000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Don't worry, it's easy to miss when the error message tells you precisely what the error is :-p","msgtype":"m.text"},"ts":1257075724000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"finds a fairly major bug in his tokenizer","msgtype":"m.emote"},"ts":1257075900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: To be fair it would be nicer if it knew what the variable name was","msgtype":"m.text"},"ts":1257076020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where do end tags have their names lowercased?","msgtype":"m.text"},"ts":1257076380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(in the tokenizer)","msgtype":"m.text"},"ts":1257076381000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"finds a fairly major bug in the test runner","msgtype":"m.emote"},"ts":1257076440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(we only ever run one test of each test with multiple content model flags)","msgtype":"m.text"},"ts":1257076500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh well, that's not really relevant any more","msgtype":"m.text"},"ts":1257076501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Looks like emitCurrentToken lowercases all tag names","msgtype":"m.text"},"ts":1257076502000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So all tags should go through that? Or everything?","msgtype":"m.text"},"ts":1257076560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Currently most doesn't go through that","msgtype":"m.text"},"ts":1257076561000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Looks like all tokens except errors and characters go through that","msgtype":"m.text"},"ts":1257076620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Down to 12 test failures…","msgtype":"m.text"},"ts":1257076680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm, spec changed with expected result of <xmp>foo</xmp","msgtype":"m.text"},"ts":1257076860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nonXmlBMPRegexp = re.compile(u'[\\x00-,|/|:-@|\\\\\\\\[-\\\\\\\\^|`|\\\\\\\\{-\\xb6|\\xb8-\\xbf|\\xd7|\\xf7|...')","msgtype":"m.text"},"ts":1257076920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Am I mistaken, or is that completely bogus?","msgtype":"m.text"},"ts":1257076980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's matching characters which are in the range \\0 to ',', or '|', or '/', or '|', or ..., or '\\', or '\\', or in the range '[' to '\\', ...","msgtype":"m.text"},"ts":1257077040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Could be","msgtype":"m.text"},"ts":1257077041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For example, it doesn't match ']'","msgtype":"m.text"},"ts":1257077160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(whereas it does match '[')","msgtype":"m.text"},"ts":1257077220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders why spec editing stopped on the 27th","msgtype":"m.emote"},"ts":1257077340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there any way to get more on http://html5.org/tools/web-apps-tracker?","msgtype":"m.text"},"ts":1257077341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"guesses the answer is hack the code and ping annevk","msgtype":"m.emote"},"ts":1257077342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Because there were 0 bugs that weren't serious enough to be issues, and therefore the spec was perfect and needed no further editing","msgtype":"m.text"},"ts":1257077400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1257077401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Do feel free to fix it btw","msgtype":"m.text"},"ts":1257077460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since clearly I am a bozo","msgtype":"m.text"},"ts":1257077461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I hate how the Google Code issues list intercepts the '/' key to focus the search box","msgtype":"m.text"},"ts":1257077462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and therefore means I can't do find-in-page like I want to","msgtype":"m.text"},"ts":1257077463000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Issue 96 is irrelevant. The code is never run (it is used to build the incorrect regexp)","msgtype":"m.text"},"ts":1257077580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It shouldn't block 1.0","msgtype":"m.text"},"ts":1257077581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It wasn't going to block anyway :P","msgtype":"m.text"},"ts":1257077640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So RAWTEXT and RCDATA now don't have comments?","msgtype":"m.text"},"ts":1257077641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: That's not what you said in the issue tracker :p","msgtype":"m.text"},"ts":1257077700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Might try to fix it some time; just filed an issue for now","msgtype":"m.text"},"ts":1257077701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: I think that is correct","msgtype":"m.text"},"ts":1257077702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Priority-High was stuff I wanted to get in, but not block","msgtype":"m.text"},"ts":1257077760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It was maked Release-1.0","msgtype":"m.text"},"ts":1257077820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"[u'EndTag', u'xmp', False] — how come that has a False explicitly there?","msgtype":"m.text"},"ts":1257077821000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Your regexp doesn't work does it? You need to escape special characters like [ surely?","msgtype":"m.text"},"ts":1257077880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OK, so two of these test failures I'm pretty sure are spec bugs","msgtype":"m.text"},"ts":1257077881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The rest are tests needing updating","msgtype":"m.text"},"ts":1257077940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: You only need to escape ']', and '-' if it's not at the start/end of the regexp, and '^' if it's at the start","msgtype":"m.text"},"ts":1257078120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, and '\\' I guess","msgtype":"m.text"},"ts":1257078180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has a tokenizer that passes all the test cases now!","msgtype":"m.emote"},"ts":1257078720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed python/src/html5lib/html5parser.py","msgtype":"m.text"},"ts":1257078780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed python/src/html5lib/inputstream.py","msgtype":"m.text"},"ts":1257078781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed python/src/html5lib/tokenizer.py","msgtype":"m.text"},"ts":1257078782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed python/tests/test_tokenizer.py","msgtype":"m.text"},"ts":1257078783000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed testdata/tokenizer/contentModelFlags.test","msgtype":"m.text"},"ts":1257078784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed testdata/tokenizer/escapeFlag.test","msgtype":"m.text"},"ts":1257078785000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"HG: changed testdata/tokenizer/test3.test","msgtype":"m.text"},"ts":1257078786000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Small commit.","msgtype":"m.text"},"ts":1257078787000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(There are still two test failures, actually, but they're spec bug)","msgtype":"m.text"},"ts":1257078788000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, woops, html5parser shouldn't be in that commit","msgtype":"m.text"},"ts":1257079020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Does anyone have a favourite way to set the idness of the \"id\" attribute","msgtype":"m.text"},"ts":1257079200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DOCTYPEs!","msgtype":"m.text"},"ts":1257079201000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"thinks DOM3 Element.setIdAttribute might be the way forward","msgtype":"m.emote"},"ts":1257079202000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Yeah but injecting false doctypes is bad if we want to preserve the fact that documents with no doctype have no doctype","msgtype":"m.text"},"ts":1257079260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"notes that doesn't help minidom","msgtype":"m.emote"},"ts":1257079261000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I think it does","msgtype":"m.text"},"ts":1257079262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1257079320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It only works if the element already has an attribute with the name \"id\"","msgtype":"m.text"},"ts":1257079321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WHAT!?","msgtype":"m.text"},"ts":1257079380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well that is out then","msgtype":"m.text"},"ts":1257079381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DOM--","msgtype":"m.text"},"ts":1257079382000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/with the name id/with the name you are trying to set as the id attribute name/","msgtype":"m.text"},"ts":1257079383000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Well if sort of makes sense if you don;t think there should be hidden state","msgtype":"m.text"},"ts":1257079440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sadly, what we want right now is hidden state :(","msgtype":"m.text"},"ts":1257079441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where does setIdAttribute come from?","msgtype":"m.text"},"ts":1257079620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah, it is in core","msgtype":"m.text"},"ts":1257079621000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess all we can do is loop over all elements with @id and set setIdAttribute","msgtype":"m.text"},"ts":1257079680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or, more likely, do it when creating the element with attributes","msgtype":"m.text"},"ts":1257079681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: That is worse than the current behaviour","msgtype":"m.text"},"ts":1257079860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: How so?","msgtype":"m.text"},"ts":1257079861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because it leads to surprisin, hard to predict, bugs rather than obvious \"this doesn't work at all\" bugs","msgtype":"m.text"},"ts":1257079862000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Why?","msgtype":"m.text"},"ts":1257079863000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Speifically if someone adds a node to the document after thay have parsed it then it won't have the idness set right","msgtype":"m.text"},"ts":1257079920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or if they add an id attribute to an existing element","msgtype":"m.text"},"ts":1257079921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Gah. Yeah.","msgtype":"m.text"},"ts":1257079922000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"then dtd is the only option.","msgtype":"m.text"},"ts":1257079980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(w00t)","msgtype":"m.text"},"ts":1257079981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes but it will cause everything to get a DTD when serialized even if it didn't start with one","msgtype":"m.text"},"ts":1257079982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1257080040000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Can we parse with a DTD then replace the DTD via removeChild and document.implementation.createDocumentType and appendChild?","msgtype":"m.text"},"ts":1257080041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I previously thouht I couldn't dislike DOM more. Now I realise that that was a mee mild distate compared to my current loathing","msgtype":"m.text"},"ts":1257080100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*mere","msgtype":"m.text"},"ts":1257080101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*distaste","msgtype":"m.text"},"ts":1257080102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I have no idea if that will work or do something surprising","msgtype":"m.text"},"ts":1257080160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Nor do I","msgtype":"m.text"},"ts":1257080161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Can you think of any other fix?","msgtype":"m.text"},"ts":1257080162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I suspect any new elements created will not get the idness set","msgtype":"m.text"},"ts":1257080163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There is a fixed list of doctypes that trigger quirks mode, right?","msgtype":"m.text"},"ts":1257080280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1257080281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's a list of stuff that if it starts with x…","msgtype":"m.text"},"ts":1257080282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"RTFS :P","msgtype":"m.text"},"ts":1257080283000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I am but it's slow :(","msgtype":"m.text"},"ts":1257080340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And makes my computer very hot :(","msgtype":"m.text"},"ts":1257080520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Anyway we could invent a new quirks-mode doctype and teach our serializer to strip it out","msgtype":"m.text"},"ts":1257080640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems very ugly though :(","msgtype":"m.text"},"ts":1257080700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But then how do deal when there are DOCTYPEs in the document?","msgtype":"m.text"},"ts":1257080701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How do we get them to round trip?","msgtype":"m.text"},"ts":1257080702000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought we could edit them now?","msgtype":"m.text"},"ts":1257080703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1257080704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Erm.","msgtype":"m.text"},"ts":1257080705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can only have one DOCTYPE in a document.","msgtype":"m.text"},"ts":1257080706000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah I know","msgtype":"m.text"},"ts":1257080707000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess we could add in the internal subset idness","msgtype":"m.text"},"ts":1257080760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1257080761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The only quetion is what happens on serialization","msgtype":"m.text"},"ts":1257080762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh man, this is ugly.","msgtype":"m.text"},"ts":1257080763000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The seriailizer ignores any internal subset","msgtype":"m.text"},"ts":1257080764000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"our serializer would be fine","msgtype":"m.text"},"ts":1257080765000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: I suggest we try your approach for the no-doctype case first to see if it works","msgtype":"m.text"},"ts":1257080820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which? Adding doctype and removing it?","msgtype":"m.text"},"ts":1257080821000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah","msgtype":"m.text"},"ts":1257080822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'd try that for both cases.","msgtype":"m.text"},"ts":1257080823000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I doubt it will work but you never know","msgtype":"m.text"},"ts":1257080824000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(But I won't actually, so you do it)","msgtype":"m.text"},"ts":1257080825000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"impl dependant, I bet :P","msgtype":"m.text"},"ts":1257080880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Should I push the new tokenizer and break the parser as a whole or just wait for an even bigger push and merge?","msgtype":"m.text"},"ts":1257080881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"in what way break?","msgtype":"m.text"},"ts":1257081180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The parser changes content model flag, and that doesn't exist any more.","msgtype":"m.text"},"ts":1257081240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So loads parses wrong.","msgtype":"m.text"},"ts":1257081241000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also a fair amount of script related changeds","msgtype":"m.text"},"ts":1257081540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*changes","msgtype":"m.text"},"ts":1257081541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The simple stuff that can be fixed has got us down to 560 test failures","msgtype":"m.text"},"ts":1257081542000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(five tree builders)","msgtype":"m.text"},"ts":1257081600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So 56 test failures","msgtype":"m.text"},"ts":1257081601000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Quite a lot of broken tests due to no longer having comments","msgtype":"m.text"},"ts":1257081780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Don't push yet","msgtype":"m.text"},"ts":1257081840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What's expected of <script> <!-- </script> --> </script>x now?","msgtype":"m.text"},"ts":1257081900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"A script whose content is \" <!-- \" right?","msgtype":"m.text"},"ts":1257082020000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"notes buying stuff from a Swedish website when you can't understand the checkout system is hard","msgtype":"m.emote"},"ts":1257084360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, wait, I don't have a personnummer so I can't buy anything.","msgtype":"m.text"},"ts":1257084600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Actuallh, no.","msgtype":"m.text"},"ts":1257084601000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This is weird.","msgtype":"m.text"},"ts":1257084660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Huh.","msgtype":"m.text"},"ts":1257084720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Now it didn't ask me for my card details.","msgtype":"m.text"},"ts":1257084721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, now it asks for them after you have placed your order, and your order is on hold until you pay.","msgtype":"m.text"},"ts":1257084780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wow. wierd.","msgtype":"m.text"},"ts":1257084781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"And now my card is refused. Oh dear.","msgtype":"m.text"},"ts":1257084840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gives up","msgtype":"m.emote"},"ts":1257084900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Can anyone join the irc.w3.org:80 server?  I wanna know if it's just something to do with the airport wifi killing it, or if the server is having problems.","msgtype":"m.text"},"ts":1257090780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I appear to be connected to it","msgtype":"m.text"},"ts":1257090960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Thanks.  It's something on my end, then.","msgtype":"m.text"},"ts":1257090961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Maybe try the normal port, not :80 (since proxies might mangle that one)?","msgtype":"m.text"},"ts":1257091020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Nah, no-port just times out.","msgtype":"m.text"},"ts":1257091021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Eh, I'm stealing wifi anyway.  No biggie.  I'll just go play some Civ 4.","msgtype":"m.text"},"ts":1257091080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: Which website?","msgtype":"m.text"},"ts":1257091200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wonders if he has the bandwidth to manage to listen to spotify at the moment","msgtype":"m.emote"},"ts":1257094440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: dustinhome.se","msgtype":"m.text"},"ts":1257094441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"has dust in his home and never had to go through any online checkout service to get it","msgtype":"m.emote"},"ts":1257095880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"realizes he should be testing this in shipping browsers as he has Safari hang","msgtype":"m.emote"},"ts":1257096000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and I know Opera 10 hangs)","msgtype":"m.text"},"ts":1257096001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"now has a simple test suite harness that fails to work in all shipping browsers","msgtype":"m.emote"},"ts":1257096120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Though the reason why the test harness fails is the tests themselves)","msgtype":"m.text"},"ts":1257096121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, and crashes the copy of WebKit I have here.","msgtype":"m.text"},"ts":1257096180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This really does reinforce the idea of there being nowhere near enough DOM tests.","msgtype":"m.text"},"ts":1257096240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Web DOM Core test suite results: latest shipping Safari and Opera: crash; latest shipping Firefox: FAIL (but completely the test suite!); latest shipping IE: fails almost everything.","msgtype":"m.text"},"ts":1257096660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/ly/s/","msgtype":"m.text"},"ts":1257096720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"notes updating html5lib once it falls out of sync with the spec is a horrible task","msgtype":"m.emote"},"ts":1257107880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It would be better if you would note a way to make it easier","msgtype":"m.text"},"ts":1257107940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: keep it in sync with a specific revision of the spec","msgtype":"m.text"},"ts":1257107941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(fwiw I have found the same which is likely why I haven't worked too much on it)","msgtype":"m.text"},"ts":1257107942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: ?","msgtype":"m.text"},"ts":1257107943000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You mean jus never update it?","msgtype":"m.text"},"ts":1257107944000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"at the moment it's basically a copy of the June spec with random things updated from the spec since","msgtype":"m.text"},"ts":1257107945000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's the fact it doesn't match any revision of the spec at the moment that is annoying","msgtype":"m.text"},"ts":1257108000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I mean I should always be able to say that html5lib implements revision x of the spec.","msgtype":"m.text"},"ts":1257108001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Generally the best you can do is to say that it passes the tests","msgtype":"m.text"},"ts":1257108120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would be good if  tests were kept in lockstep with the spec","msgtype":"m.text"},"ts":1257108121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The problem is the tests often don't match a specific revision of the spec :P","msgtype":"m.text"},"ts":1257108122000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the problem with it not matching any version of the spec is having to go through the spec manually with the impl checking that it matches it","msgtype":"m.text"},"ts":1257108480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That I can agree with. But given that it is impossible to tell which tests need to be updated","msgtype":"m.text"},"ts":1257108481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Make separate branches for each rev :D","msgtype":"m.text"},"ts":1257108482000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"it is hard to see how you get the tests to match","msgtype":"m.text"},"ts":1257108540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Keep them up to date always?","msgtype":"m.text"},"ts":1257108600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, sure, you will probably end up with incorrect expectations at times, but once the impl catches up…","msgtype":"m.text"},"ts":1257108660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: How do you know which tests need to be updated when the spec changed?","msgtype":"m.text"},"ts":1257108780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, if each test has metadata saying which sections it applies to... and you go through each diff looking at which sections changed (and which were renumbered)...","msgtype":"m.text"},"ts":1257108900000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"jgraham: magic","msgtype":"m.text"},"ts":1257108960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: Each test could depend on dozens of sections. Annotating them all makes writing tests prohibitivly expensive","msgtype":"m.text"},"ts":1257108961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, if maintenance is too expensive, then consider tests to be throw-away","msgtype":"m.text"},"ts":1257109020000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Eh?","msgtype":"m.text"},"ts":1257109080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Mark each with \"was valid at rev x\" and if it starts failing, either discard it or update it","msgtype":"m.text"},"ts":1257109081000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"jgraham: Seriously though, it may be possible to use regex to find tests effected!","msgtype":"m.text"},"ts":1257109082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*affected(?)","msgtype":"m.text"},"ts":1257109083000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Seems like the easiest solution is to keep the implementation always up to date","msgtype":"m.text"},"ts":1257109200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and always passing all tests","msgtype":"m.text"},"ts":1257109201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"nominates jgraham to keep it up to date","msgtype":"m.emote"},"ts":1257109202000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: That doesn't seem to fix the underlying problem","msgtype":"m.text"},"ts":1257109260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You still need to dig through the spec to decide if the test is wrong or the implementation is wrong","msgtype":"m.text"},"ts":1257109261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's what the discard option is for. Then at a later point you can do bulk update/rewrite of related tests","msgtype":"m.text"},"ts":1257109380000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That sounds like a medicine that is worse than the disease. You fail a test you throw away the test rather tahn workin out if it is a real bug or not","msgtype":"m.text"},"ts":1257109440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems to defeat the point of having tests","msgtype":"m.text"},"ts":1257109441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You're the one saying updating them is prohitively expensive, though","msgtype":"m.text"},"ts":1257109442000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: I'm saying it's prohibitively expensive to create tests where you also have to work out all the section transitions","msgtype":"m.text"},"ts":1257109620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's already bad enough with the parse errors","msgtype":"m.text"},"ts":1257109621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have a question about forms","msgtype":"m.text"},"ts":1257114600000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"is this the best place to ask it?","msgtype":"m.text"},"ts":1257114601000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"let me blunder on ","msgtype":"m.text"},"ts":1257114602000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: depends what the question is i guess","msgtype":"m.text"},"ts":1257114603000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"what I want to know is whether there is any thinking about server side validation","msgtype":"m.text"},"ts":1257114660000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"the new forms stuff is great","msgtype":"m.text"},"ts":1257114661000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"extra declarative syntax for validation","msgtype":"m.text"},"ts":1257114662000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"but it only affords client side validation","msgtype":"m.text"},"ts":1257114663000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"the validation will have to be repeated on the server side","msgtype":"m.text"},"ts":1257114664000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"and I wondered if anyone was thinking about that","msgtype":"m.text"},"ts":1257114665000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"I hope so.  :)","msgtype":"m.text"},"ts":1257114666000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nicferrier: It will and they are.","msgtype":"m.text"},"ts":1257114720000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"HTML5 only specifies a syntax, it doesn't provide an implementation.  If you use any client-side validation, obviously you need server-side validation too.","msgtype":"m.text"},"ts":1257114721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nicferrier: HTML5 can't make the need for serverside validation disappear.","msgtype":"m.text"},"ts":1257114722000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"How this actually works in practice is up to you.","msgtype":"m.text"},"ts":1257114723000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yup, I appreciate it's not *exactly* in the bounds of html 5","msgtype":"m.text"},"ts":1257114780000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"webben, yes it can, just mandate that all clients use down-to-the-metal DRM, require servers to reject connections from inappropriately authenticated clients, and only sign the binaries of clients that are written personally by Ian Hickson.  Duh.","msgtype":"m.text"},"ts":1257114781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1257114840000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"if only some people weren't actually doing that kind of thing","msgtype":"m.text"},"ts":1257114841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however, we're getting to a point where the rendered form is almost good enough to use as the DRY for an app","msgtype":"m.text"},"ts":1257114842000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"and I've been thinking about that and wondered if anyone else was.","msgtype":"m.text"},"ts":1257114843000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"What's a DRY?","msgtype":"m.text"},"ts":1257114900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"dont repeat yourself.","msgtype":"m.text"},"ts":1257114901000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"The rendered form of what, then?","msgtype":"m.text"},"ts":1257114902000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nicferrier: well, you /could/ preprocess the form and derive serverside validation rules from the html, I guess, but that would be kinda weird.","msgtype":"m.text"},"ts":1257114960000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"nicferrier: i don't think anyone has formally looked at taking html5 client-side markup and using it literally on the server side","msgtype":"m.text"},"ts":1257114961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's always a pain in web stuff that you're more or less forced to have different code doing server-side and client-side validation.","msgtype":"m.text"},"ts":1257114962000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean that an html 5 form can potentially exist as a single statement of the form, instead of their being another version inside a framework","msgtype":"m.text"},"ts":1257114963000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: xforms has been used in this way","msgtype":"m.text"},"ts":1257114964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So you're saying like feed the actual HTML of the form into your abstraction framework, instead of specifying it in some other way?","msgtype":"m.text"},"ts":1257114965000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"only really works for very very simple forms","msgtype":"m.text"},"ts":1257114966000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"That would work if you had an HTML5 parser handy on the server side . . .","msgtype":"m.text"},"ts":1257114967000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: exactly","msgtype":"m.text"},"ts":1257114968000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"webben, well, presumably you'd have the ability to add extra validation (on client and/or server side) in whatever framework we're talking about.","msgtype":"m.text"},"ts":1257115020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I am saying the frameworks model could be generated from the html 5 syntax, yes.","msgtype":"m.text"},"ts":1257115021000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"AryehGregor: well, yes, but then you're repeating yourself.","msgtype":"m.text"},"ts":1257115080000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"no, I'm not","msgtype":"m.text"},"ts":1257115081000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"it's just a representation","msgtype":"m.text"},"ts":1257115082000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"anyway, even if I am I don't have to type it again","msgtype":"m.text"},"ts":1257115083000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"webben, not if the extra validation is beyond what HTML5 can represent.  Then you have each requirement stated only once.","msgtype":"m.text"},"ts":1257115084000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nicferrier, I think that's a great idea as soon as all major web programming languages get HTML5 parsing libraries.","msgtype":"m.text"},"ts":1257115085000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"isn't going to hold his breath for PHP on shared hosts","msgtype":"m.emote"},"ts":1257115140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Ah, if you generate the client and serverside validation from a single rule definition, yes.","msgtype":"m.text"},"ts":1257115141000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"but then you could just as well generate the HTML form from such rule definitions","msgtype":"m.text"},"ts":1257115142000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Yes, of course.","msgtype":"m.text"},"ts":1257115143000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's how MediaWiki does it, where it actually uses such abstractions.","msgtype":"m.text"},"ts":1257115144000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(i.e. virtually nowhere, yet)","msgtype":"m.text"},"ts":1257115200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but what I'm saying is, that other than the obvious \"this member must be in this set\" the html5 validation rules are plenty good enough","msgtype":"m.text"},"ts":1257115201000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"I'm not sure how having two types of inputs - rather than just a set of rules - helps.","msgtype":"m.text"},"ts":1257115202000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"for a base form definition.","msgtype":"m.text"},"ts":1257115203000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"the advantage being that forms are a lingua franca","msgtype":"m.text"},"ts":1257115204000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"designers and programmers speak forms.","msgtype":"m.text"},"ts":1257115260000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"yes, but both need to be driven by domain models","msgtype":"m.text"},"ts":1257115261000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"gets suspicious when he hears terms like \"domain models\"","msgtype":"m.emote"},"ts":1257115262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1257115320000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"my designers would disagree","msgtype":"m.text"},"ts":1257115321000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"but anyway, nobody is actively doing anything with this to anyone's knowledge.","msgtype":"m.text"},"ts":1257115380000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"that's cool. thanks people.","msgtype":"m.text"},"ts":1257115381000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: Not /quite/ what you're proposing, but close: http://simonwillison.net/2003/Jun/17/theHolyGrail/","msgtype":"m.text"},"ts":1257115560000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"yeah, writing the code to do it isn't hard","msgtype":"m.text"},"ts":1257115680000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"deciding on a usable model is a little harder","msgtype":"m.text"},"ts":1257115681000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: usable model in what sense?","msgtype":"m.text"},"ts":1257115682000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"should the form be kept as a separate entity?","msgtype":"m.text"},"ts":1257115740000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"should we talk about documents and xpaths to forms?","msgtype":"m.text"},"ts":1257115741000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"Let's just have every app reinvent the wheel and write its own form support badly.  That's always worked for me.","msgtype":"m.text"},"ts":1257115742000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"^this ;)","msgtype":"m.text"},"ts":1257115743000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"AryehGregor: :-D","msgtype":"m.text"},"ts":1257115744000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"wishes it weren't true","msgtype":"m.emote"},"ts":1257115745000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nicferrier: \"talk about documents and xpaths to forms\" ... what would that mean?","msgtype":"m.text"},"ts":1257115746000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"It's especially bad when you have to cater to shared hosts, in PHP, where lots of the useful libraries are written in C and only installable by root.","msgtype":"m.text"},"ts":1257115800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/ shared hosts, in//;s/PHP,.*$/PHP./","msgtype":"m.text"},"ts":1257115801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"webben: idk... just idle thoughts... maybe form = somedocument.forms[\"someform\"]","msgtype":"m.text"},"ts":1257115802000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"value = form.field.value","msgtype":"m.text"},"ts":1257115803000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"that short of thing","msgtype":"m.text"},"ts":1257115804000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"binding an html5 form into a pl","msgtype":"m.text"},"ts":1257115860000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: oh, you mean, would you keep all forms in an app in a single HTML document?","msgtype":"m.text"},"ts":1257115861000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"just thinking.","msgtype":"m.text"},"ts":1257115862000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"webben: well, I mean how would you keep them","msgtype":"m.text"},"ts":1257115863000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"if I want to pass the form through xslt","msgtype":"m.text"},"ts":1257115864000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"sorry, not expressing this very well","msgtype":"m.text"},"ts":1257115920000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"if the html5 form is authoritative ","msgtype":"m.text"},"ts":1257115921000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"then it has to be wholly a resource","msgtype":"m.text"},"ts":1257115922000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"rather than being put together with bits of information from different places","msgtype":"m.text"},"ts":1257115923000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"it has to be an entity of itself","msgtype":"m.text"},"ts":1257115924000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"how would the forms be made? hand edited? built with some sort of gui tool?","msgtype":"m.text"},"ts":1257115980000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"does it matter?","msgtype":"m.text"},"ts":1257115981000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"a bit","msgtype":"m.text"},"ts":1257115982000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"if I was going to hand edit such things, I'd prefer them kept in individual files.","msgtype":"m.text"},"ts":1257115983000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"an html5 form could be constructed by either hand or machine","msgtype":"m.text"},"ts":1257115984000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1257116040000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"(just as I split out individual models, or templates, or testcases or whatever into their own individual files","msgtype":"m.text"},"ts":1257116041000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"a dynamic form would require a dynamic validator","msgtype":"m.text"},"ts":1257116042000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"dynamic meaning it depends entirely on the resource","msgtype":"m.text"},"ts":1257116043000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"consider a ticket editor that lets you edit all the tickets of a particular query","msgtype":"m.text"},"ts":1257116100000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"the http resource is the query","msgtype":"m.text"},"ts":1257116101000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"the representation is an html 5 entity with a single form","msgtype":"m.text"},"ts":1257116102000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"with fieldsets for each ticket","msgtype":"m.text"},"ts":1257116103000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"we can change a bunch of tickets to closed and then press submit","msgtype":"m.text"},"ts":1257116104000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: hmm. in that scenario aren't you generating the form from a model, and if not that, how?","msgtype":"m.text"},"ts":1257116220000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: well, yes. tricky.","msgtype":"m.text"},"ts":1257116221000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"nicferrier: I guess you could build a two way system. That is, a system that can take a form as input and generate models and validation rules; or take a model as input and generate forms and validation rules?","msgtype":"m.text"},"ts":1257116340000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"that way, for example, the designers could hand you a form, you could express the form in HTML, the system would generate a model and validation rules.","msgtype":"m.text"},"ts":1257116400000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"is the only thing that would ever change for a dynamic form the number of fieldsets?","msgtype":"m.text"},"ts":1257116401000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"No?","msgtype":"m.text"},"ts":1257116460000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Even if you consider bugzilla tickets, the form varies depending on the lifecycle stage of the ticket.","msgtype":"m.text"},"ts":1257116461000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"e.g. if a ticket has been CLOSED you have to REOPEN it before you can ASSIGN it.","msgtype":"m.text"},"ts":1257116520000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"but those are different forms","msgtype":"m.text"},"ts":1257116521000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1257116522000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"depends what you mean by different form I guess.","msgtype":"m.text"},"ts":1257116523000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"they are a little bit different","msgtype":"m.text"},"ts":1257116524000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"not different resources tho, you are right","msgtype":"m.text"},"ts":1257116525000,"senderName":"nicferrier","senderId":"nicferrier@irc"},
{"content":{"body":"in a RESTfull sense, same resource","msgtype":"m.text"},"ts":1257116526000,"senderName":"nicferrier","senderId":"nicferrier@irc"}
]