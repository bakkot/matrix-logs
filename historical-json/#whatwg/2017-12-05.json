[
{"content":{"body":"Filed: https://github.com/whatwg/meta/issues/54","msgtype":"m.text"},"ts":1512432136000,"senderName":"hiroshige","senderId":"hiroshige@irc"},
{"content":{"body":"hsivonen, zcorpan : yes","msgtype":"m.text"},"ts":1512438866000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"one of the goals was minimalism","msgtype":"m.text"},"ts":1512438879000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"which means have as narrow a pattern as required for web compat","msgtype":"m.text"},"ts":1512438893000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"BOM + pattern isn't required for web compat","msgtype":"m.text"},"ts":1512438905000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"so isn't in the algorithm","msgtype":"m.text"},"ts":1512438909000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"hiroshige: thanks for reporting that ー will look into it (but it may need foolip to fix, once he gets on for the day)","msgtype":"m.text"},"ts":1512439367000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and thanks TabAtkins too 🐍","msgtype":"m.text"},"ts":1512439384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and thanks paul_irish for ops ☘️","msgtype":"m.text"},"ts":1512439419000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and oh hello abarth","msgtype":"m.text"},"ts":1512439466000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: can you please check what IP address html.spec.whatwg.org is resolving to for you?","msgtype":"m.text"},"ts":1512439510000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it should be 165.227.248.76","msgtype":"m.text"},"ts":1512439647000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if it’s instead 75.119.197.251 then that’s the problem","msgtype":"m.text"},"ts":1512439680000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we moved the DNS for it recently","msgtype":"m.text"},"ts":1512439702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so you must be hitting a problem with cached DNS somewhere not getting invalidated","msgtype":"m.text"},"ts":1512439778000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(assuming you don’t have it hardcoded to resolve to 75.119.197.251 in /etc/hosts or whatever)","msgtype":"m.text"},"ts":1512439821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the workaround for now is to hardcode it in an /etc/hosts or equivalent","msgtype":"m.text"},"ts":1512440837000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"add this line:","msgtype":"m.text"},"ts":1512440866000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"165.227.248.76 html.spec.whatwg.org","msgtype":"m.text"},"ts":1512440899000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's working for me here at home, but it was failing for me and fantasai at work, so yeah, probably a DNS cache problem.","msgtype":"m.text"},"ts":1512440931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1512440937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie says he only make the DNS change about 3 hours ago","msgtype":"m.text"},"ts":1512440950000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And yeah, ping shows the good IP address here.","msgtype":"m.text"},"ts":1512440952000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1512440955000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah, that would correspond pretty well to when I saw it.","msgtype":"m.text"},"ts":1512440962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hi MikeSmith","msgtype":"m.text"},"ts":1512448074000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Thanks paul_irish, and yeah, I think you did 😊","msgtype":"m.text"},"ts":1512450572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1512466201000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"what was the reason of removal of support for UTF-16 in TextEncoder?","msgtype":"m.text"},"ts":1512466231000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"TheWild: it was the only place in the web platform that exposed encoding UTF-16","msgtype":"m.text"},"ts":1512466424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: and we're not a big fan of UTF-16, so","msgtype":"m.text"},"ts":1512466437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so no support for UTF-16? What about those language where UTF-16 representation is more compact than UTF-8?","msgtype":"m.text"},"ts":1512466494000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"languages","msgtype":"m.text"},"ts":1512466545000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"TheWild: given that there's usually markup involved in transporting such language, even ignoring compression, that argument is flawed","msgtype":"m.text"},"ts":1512466591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: see also https://annevankesteren.nl/2009/09/utf-8-reasons and in particular https://lists.w3.org/Archives/Public/www-style/2009Feb/0087.html","msgtype":"m.text"},"ts":1512466624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"such a language*","msgtype":"m.text"},"ts":1512466633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: hope that helps","msgtype":"m.text"},"ts":1512466638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: oh, https://github.com/whatwg/encoding/issues/18 also has some relevant discussion and workarounds","msgtype":"m.text"},"ts":1512466655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, let it be. I'll read later. Thanks annewk.","msgtype":"m.text"},"ts":1512466702000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"thought my problem was to convert ArrayBuffer to string (so it can be used as a dictionary key) and back, without involving much conversion. Yeah, I can \"cast\" the ArrayBuffer to Uint16Array and use s += String.fromCharCode(x), but I thought there's faster, more \"internal\" way.","msgtype":"m.text"},"ts":1512467159000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"TheWild: use a Map?","msgtype":"m.text"},"ts":1512467233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: although I guess that depends what the dictionary is for","msgtype":"m.text"},"ts":1512467292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: but also, unless the ArrayBuffer contains valid UTF-16 you'd get data loss with such a conversion","msgtype":"m.text"},"ts":1512467335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a = new Uint8Array([2, 3]); b = new uint8Array([2, 3]);       in Map, a and b would be treated as different keys.","msgtype":"m.text"},"ts":1512467337000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"TheWild: ah yeah, doh","msgtype":"m.text"},"ts":1512467350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: I think what you want is something that isn't addressed by UTF-16 encoding, as you'd want to preserve lone surrogates","msgtype":"m.text"},"ts":1512467391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild: you need an Uint16Array -> String thing which indeed seems like something that could be really fast","msgtype":"m.text"},"ts":1512467422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since ArrayBuffer would hold just some binary data, correct UTF-16 codepoints aren't guaranted. (AFAIR 0xD800 - 0xDBFF and 0xDC00 - 0xDFFF were surrogates)","msgtype":"m.text"},"ts":1512467459000,"senderName":"TheWild","senderId":"TheWild@irc"},
{"content":{"body":"TheWild: indeed, encoding them would turn those into U+FFFD so you'd get data loss","msgtype":"m.text"},"ts":1512467496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abarth: OK. What's your opinion on using different patterns for file: URLs? that is, do you think it would be a) appropriate and b) worthwhile to sniff HTML with UTF-8 BOM but not .html in the file name as text/html when accessed using file: URL?","msgtype":"m.text"},"ts":1512469152000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"abarth: are there security considerations relevant to file: for not following the same sniffing as for network resources?","msgtype":"m.text"},"ts":1512469183000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: If I have an options dict, can I access its properties \"in parallel\" or do I need to create variables for all the properties before going parallel?","msgtype":"m.text"},"ts":1512469442000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I would argue that you can, unless you end up manipulating objects on the main thread that way","msgtype":"m.text"},"ts":1512469561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g., if they hold pointers","msgtype":"m.text"},"ts":1512469572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TheWild/annevk: at least in case of V8 there are C++ APIs provided for working with 16-bit data as strings conveniently","msgtype":"m.text"},"ts":1512469624000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"e.g. v8::String::NewFromTwoByte() which literally just wraps around the array (after copying)","msgtype":"m.text"},"ts":1512469671000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: do you know if this came up in TC39 before?","msgtype":"m.text"},"ts":1512469680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: seems such an obvious thing to offer","msgtype":"m.text"},"ts":1512469691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1512469700000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"annevk: cheers!","msgtype":"m.text"},"ts":1512469710000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess I'll ask over in #tc39","msgtype":"m.text"},"ts":1512469716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean there's String.fromCharCode(..array)","msgtype":"m.text"},"ts":1512469716000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1512469733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: one more question, is the best practice these days \"|options|.{{FooOptions/bar}}\" or \"|option|'s {{FooOptions/bar}} member\"?","msgtype":"m.text"},"ts":1512469852000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think the latter and maybe |options|[\"bar\"] works too these days if dictionaries are already defined in terms of ordered maps","msgtype":"m.text"},"ts":1512469906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we discussed this recently somewhere","msgtype":"m.text"},"ts":1512469928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ta!","msgtype":"m.text"},"ts":1512469979000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: per https://github.com/heycam/webidl/issues/453 dictionary[\"member\"] is defined already and the way to go","msgtype":"m.text"},"ts":1512469980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: given those questions I'm inclined not to reply to https://bugzilla.mozilla.org/show_bug.cgi?id=1422889 for now","msgtype":"m.text"},"ts":1512470732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I tend to think it's best to be conservative there too and rely on the OS mapping given the number of subtle exploits with getting the user to run local files in their browser","msgtype":"m.text"},"ts":1512470823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: it's rather unfortunate we still have to support that I think","msgtype":"m.text"},"ts":1512470834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: TheWild (who isn't here): it seems like this is a specific case of the fact that Maps don't have a good equality protocol besides === (well, actually SameValueZero).","msgtype":"m.text"},"ts":1512486565000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That would be the language-level change I would expect","msgtype":"m.text"},"ts":1512486577000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Reducing things to immutable values (whether they be strings or bigints) just so that they can serve as good map keys is a \"hack\" IMO. Although a very necessary one given the language as it is today.","msgtype":"m.text"},"ts":1512486619000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess that's fair, representing strings as bytes and bytes as strings is only ever done as a workaround for something that's lacking","msgtype":"m.text"},"ts":1512486786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://github.com/validator/validator/commit/d954e3c20f53a8015c4d2de06316c6b0fef23406 is nice :)","msgtype":"m.text"},"ts":1512487455000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is there a channel for css wg? looking to find fantasai on irc, about a possible hanging-punctuation issue","msgtype":"m.text"},"ts":1512488588000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"if not, can email i guess. no hurry or anything...very edge-case","msgtype":"m.text"},"ts":1512488706000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"#css on irc.w3.org","msgtype":"m.text"},"ts":1512488853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, tks...not on there unfortunately.  that's where i looked first before asking.","msgtype":"m.text"},"ts":1512489014000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"That doesn't mean it's not the channel you're looking for :)","msgtype":"m.text"},"ts":1512489064000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"true enough.  or looking for the wrong nick.","msgtype":"m.text"},"ts":1512489120000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"fantasai is in there, but you aren't?","msgtype":"m.text"},"ts":1512489200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, doh...looking on freenode.  tks","msgtype":"m.text"},"ts":1512489331000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"hsivonen: sounds like a tricky problem.  I haven't thought about it in enough detail recently to have an informed opinion.  Another thing to consider for file URLs is whether to use the file extension as input.  That's what other programs use on commonly used operating systems (although obviously not for all operating systems).","msgtype":"m.text"},"ts":1512490710000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I presume no browsers support xml:id for things like the id selector?","msgtype":"m.text"},"ts":1512490954000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: they must not","msgtype":"m.text"},"ts":1512491630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is that actually specified for Selectors?","msgtype":"m.text"},"ts":1512492246000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"somewhat suspects this is something that falls through the cracks with how Selectors is meant to be agnostic about what it's matching against","msgtype":"m.emote"},"ts":1512492305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: many things are not specified from that perspective","msgtype":"m.text"},"ts":1512492608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: as I’ve complained about in the past","msgtype":"m.text"},"ts":1512492626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: the way DOM deals with this is only giving id= power","msgtype":"m.text"},"ts":1512492827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Selectors is indeed agnostic about this, intentionally. The host language defines (or *should* define) what concepts map to what in the Selectors data model.  The DOM mapping is fairly intuitive, but if nothing in HTML specifies how xml:id works, it should.","msgtype":"m.text"},"ts":1512502898000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: HTML just defers to DOM on what's an id","msgtype":"m.text"},"ts":1512503120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: (it doesn't define how xml:id in the same way it doesn't define how thisisbogus works)","msgtype":"m.text"},"ts":1512503140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: so DOM should define how the DOM tree maps to the Selectors data model, in your view?","msgtype":"m.text"},"ts":1512503171000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's been the stated intention for well over a decade, yes.","msgtype":"m.text"},"ts":1512503192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"files an issue and runs away","msgtype":"m.emote"},"ts":1512503410000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(https://github.com/whatwg/dom/issues/542)","msgtype":"m.text"},"ts":1512503417000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]