[
{"content":{"body":"https://twitter.com/maxogden/status/592883522932756481","msgtype":"m.text"},"ts":1430189482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Sure. I think we can get benefits from these terms.  >>>  for parent/child across boundaries I suggest we introduce \"composed parent/child\", \"deep parent/child\",","msgtype":"m.text"},"ts":1430198948000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"http://www.webkit.org/status.html seems to have magically appeared in the last day or so","msgtype":"m.text"},"ts":1430213414000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or maybe I just missed the news","msgtype":"m.text"},"ts":1430213420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks webkit-dev","msgtype":"m.emote"},"ts":1430213427000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the ambigous ampersand stuff would be easier to review if Hixie had written the spec as a genuine state machine instead of having the character reference part of the spec unconsume input","msgtype":"m.text"},"ts":1430219999000,"senderName":"hsivonen_","senderId":"hsivonen_@irc"},
{"content":{"body":"need to mentally page in stuff","msgtype":"m.text"},"ts":1430220023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: unfortunately it's also been so long since I first wrote that patch that I need to go back and retrace what I was thinking myself and compare it to the spec","msgtype":"m.text"},"ts":1430222482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: it appears streams API is on http://www.webkit.org/status.html","msgtype":"m.text"},"ts":1430228016000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: indeed :D","msgtype":"m.text"},"ts":1430228241000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I guess if they don't have fetch or serviceworkers, then it must just be a js-only thing to start","msgtype":"m.text"},"ts":1430228314000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, that's what the code looks like; new ReadableStream() is the focus.","msgtype":"m.text"},"ts":1430228342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: I am implementing that this week actually... in Munich working with the V8 team to make self-hosting in Blink better.","msgtype":"m.text"},"ts":1430228365000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: cool!","msgtype":"m.text"},"ts":1430228375000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"webkit having removed SharedWorker seems to not bode well for ServiceWorkers there","msgtype":"m.text"},"ts":1430228423000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah... their reasoning especially...","msgtype":"m.text"},"ts":1430228440000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still I can't imagine they're going to be OK missing out on the service worker revolution.","msgtype":"m.text"},"ts":1430228452000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Array.prototype.includes is also nice haha, got my feature","msgtype":"m.text"},"ts":1430228505000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"implementing Force Click... wonder how that plays with pointer events, etc","msgtype":"m.text"},"ts":1430228555000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"heh yeah... that's one of those apple \"spring new prefixed features on everyone!\" fun times","msgtype":"m.text"},"ts":1430228581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: btw, I hope to do some kind of system test for async read vs sync read this week... I will probably just build on top of released chrome fetch body stream... I'll make a pure js transform stream that does some parsing... it will then expose either does the Promise-for-every-read or a ready-promise-with-sync-read... then measure differences","msgtype":"m.text"},"ts":1430228781000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't feel I have time to prototype something in the gecko platform in time","msgtype":"m.text"},"ts":1430228797000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: awesome, will be good to have. We're looking into optimizing our promise impl so that this is a non-issue... the overhead is hurting lots of APIs that want to use promises, e.g. some CSS custom layout stuff.","msgtype":"m.text"},"ts":1430228826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do those other APIs encourage relatively tight async loops?  that seems somewhat unique to Streams as far as I know","msgtype":"m.text"},"ts":1430228885000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, they deal with many promises per frame","msgtype":"m.text"},"ts":1430228908000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, its a Promise thing for animations or something?  not familiar with that API","msgtype":"m.text"},"ts":1430228940000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah it's new, Houdini stuff if you're familiar with that term","msgtype":"m.text"},"ts":1430228959000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh, the display worker or whatever?","msgtype":"m.text"},"ts":1430228974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The idea is to allow customization of layout by JS code, but they want to make all access to layout properties async","msgtype":"m.text"},"ts":1430228980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I updated this last week with new data, btw: https://docs.google.com/spreadsheets/d/1rl6mbD2z1x1bgJLD6y9KJLYWjppB7BujfiWvUMjYTVs/edit?usp=sharing","msgtype":"m.text"},"ts":1430228987000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"after we removed the setTimeout from benchmark.js","msgtype":"m.text"},"ts":1430228996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Still weirded out by Bluebird's poor performance","msgtype":"m.text"},"ts":1430229558000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Should be using MutationObserver","msgtype":"m.text"},"ts":1430229590000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what do you mean by poor performance there?  bluebird is better than Chrome and Firefox native promises","msgtype":"m.text"},"ts":1430229625000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"are you looking at the \"new data\" tab?","msgtype":"m.text"},"ts":1430229636000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Nope!","msgtype":"m.text"},"ts":1430229647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the degradation is still surprising to me though","msgtype":"m.text"},"ts":1430229703000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"microtask hits should in theory be one-time","msgtype":"m.text"},"ts":1430229707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"then you get into a fast loop","msgtype":"m.text"},"ts":1430229712000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think I'm convinced its more GC costs now","msgtype":"m.text"},"ts":1430229735000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I haven't profiled","msgtype":"m.text"},"ts":1430229743000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah maybe, although my recent experiments made it seem like chrome wasn't GCing at all while the loop was ongoing","msgtype":"m.text"},"ts":1430229763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the slowdown could be at the end of the loop, but would still reduce overall ops/sec measurements","msgtype":"m.text"},"ts":1430229788000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and in an \"infinite\" loop, it would have to GC at some point","msgtype":"m.text"},"ts":1430229811000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess that would be on I/O","msgtype":"m.text"},"ts":1430229829000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you don't have results for nightly/desktop ?","msgtype":"m.text"},"ts":1430229907000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(though, I guess nightly has those few regressions atm)","msgtype":"m.text"},"ts":1430229950000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I didn't measure nightly, but I could... things are worse there, though, because of the async stacks","msgtype":"m.text"},"ts":1430229952000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1430229990000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jsbell: do you follow your github/critic email?  you do you want me to paste the new review links to you here or in a separate email?","msgtype":"m.text"},"ts":1430241510000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I have them all, just need to find time to get to them :(","msgtype":"m.text"},"ts":1430241769000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Domenic: strange thing. using \"this.constructor\" in a class constructor makes V8 barf on performance: https://gist.github.com/trevnorris/0b7b208e420a4d8f7fc2","msgtype":"m.text"},"ts":1430242214000,"senderName":"trevnorris","senderId":"trevnorris@irc"},
{"content":{"body":"(done using latest 4.4 release)","msgtype":"m.text"},"ts":1430242222000,"senderName":"trevnorris","senderId":"trevnorris@irc"},
{"content":{"body":"jsbell: cool... didn't want to spam you here if you checked that mail (seems like a lot of people mute github mail)... no rush on the review, just didn't want them to get lost","msgtype":"m.text"},"ts":1430242383000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1430242391000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and I have two more PRs to write","msgtype":"m.text"},"ts":1430242421000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: https://critic.hoppipolla.co.uk/r/4798 plz","msgtype":"m.text"},"ts":1430245786000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jsbell: does blink still need the MessageChannel thing for the SW tests?  or do you support the Client postMessage() now?","msgtype":"m.text"},"ts":1430246587000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sorry, was afk. We support postMessage now, not sure if it where the message is delivered is in sync w/ the latest spec though...","msgtype":"m.text"},"ts":1430252684000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: the comment in the code indicates its actually a problem with MessageEvent.source not being set when doing ServiceWorker.postMessage()","msgtype":"m.text"},"ts":1430252715000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that too...","msgtype":"m.text"},"ts":1430252747000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I tried to make it favor MessageChannel for now, but fallback to ServiceWorker.postMessage()... just let me know in the review if thats not needed","msgtype":"m.text"},"ts":1430252753000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: noted","msgtype":"m.text"},"ts":1430252767000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1430252771000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm... or the MessageChannel code I was just looking at doesn't even exist in wpt upstream :-\\","msgtype":"m.text"},"ts":1430253107000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh... its in the testharness.js submodule... oops","msgtype":"m.text"},"ts":1430253626000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"An extensive test suite for this specification <http://w3c-test.org/dom/> is available\"","msgtype":"m.text"},"ts":1430256007000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"cackles maniacally","msgtype":"m.emote"},"ts":1430256013000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where does it say that?","msgtype":"m.text"},"ts":1430256266000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And can we make it instead say \"a somewhat lacking testsuite, that you should certainly contribute to, covers several of the features in this specification\"","msgtype":"m.text"},"ts":1430256336000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Review done","msgtype":"m.text"},"ts":1430256365000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tr/dom/","msgtype":"m.text"},"ts":1430256551000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Quoted by ArtB","msgtype":"m.text"},"ts":1430256560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: we're caring about performance of rarely run bits of test harness code now?","msgtype":"m.text"},"ts":1430257027000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Well really I care about removing one easy-to-understand line and replacing it with regexps + an implementation of UTF16 decoding","msgtype":"m.text"},"ts":1430257094000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I also think it will be slower :p","msgtype":"m.text"},"ts":1430257102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm just as worried about it also converting things like \\xff and \\0","msgtype":"m.text"},"ts":1430257131000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Don't we control the data format here?","msgtype":"m.text"},"ts":1430257163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, I know","msgtype":"m.text"},"ts":1430257190000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'd just rather follow the shared definition of the format instead of not","msgtype":"m.text"},"ts":1430257218000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well whatever, I guess, but I think that implementing that ourselves when there's a library that does basically the right thing is crazy","msgtype":"m.text"},"ts":1430257281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ohhhh","msgtype":"m.text"},"ts":1430257346000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"now I rememeber reading the docs","msgtype":"m.text"},"ts":1430257351000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Decodes from Latin-1 source code. Beware that Python source code actually uses UTF-8 by default.\"","msgtype":"m.text"},"ts":1430257358000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: that's why we can't","msgtype":"m.text"},"ts":1430257384000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well comment then","msgtype":"m.text"},"ts":1430257424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that would be a good idea given I'd entirely forgotten :P","msgtype":"m.text"},"ts":1430257450000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i'll buy someone a beer if they can explain to me how to read the mozilla telemetry dashboard's graphs","msgtype":"m.text"},"ts":1430258706000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: first you drink that beer, then another, and maybe one more.","msgtype":"m.text"},"ts":1430258738000,"senderName":"trevnorris","senderId":"trevnorris@irc"},
{"content":{"body":"i'm not really a beer person, but if you can explain the graphs, you can have your choice of whatever brew you like","msgtype":"m.text"},"ts":1430258767000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: what graph are you looking at, and what's not clear?","msgtype":"m.text"},"ts":1430258803000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham:","msgtype":"m.text"},"ts":1430258841000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Merge 7e4dc99a adds merged-in commits.  Please push the merge manually","msgtype":"m.text"},"ts":1430258843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"someone asked how much of the web was using http2, and chromestatus doesn't have a metric for it, so I was looking at mozilla's spdy telemetry (spdy_chunk_received should be a reasonably good measure?)","msgtype":"m.text"},"ts":1430258855000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"grumbles at Critic","msgtype":"m.emote"},"ts":1430258858000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i'm not sure how you'd draw a \"% of the web\" conclusion from it, although some people apparently have","msgtype":"m.text"},"ts":1430258896000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: HTTP_RESPONSE_VERSION seems better","msgtype":"m.text"},"ts":1430258962000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Don't push merge commits?","msgtype":"m.text"},"ts":1430258996000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if you change it to be a table, and cross-ref with nsHttp.h, you'll find \"9\" refers to HTTP/0.9, \"10\" HTTP/1.0, \"11\" HTTP/1.1, \"20\" HTTP/2.0","msgtype":"m.text"},"ts":1430259008000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: so never merge in master?","msgtype":"m.text"},"ts":1430259022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is used to Critic coping fine with merges from master…","msgtype":"m.emote"},"ts":1430259052000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah I see","msgtype":"m.text"},"ts":1430259071000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: using the latest released version will probably give you better data","msgtype":"m.text"},"ts":1430259078000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Merging in master doesn't really help anyone","msgtype":"m.text"},"ts":1430259082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah i'm looking at rel39","msgtype":"m.text"},"ts":1430259092000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: it gets rid of merge conflicts sooner rather than later","msgtype":"m.text"},"ts":1430259095000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: If you need to do that for some reason, push new commits and then make a move-type rebase","msgtype":"m.text"},"ts":1430259110000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: your review tools are too fussy nowadays!","msgtype":"m.text"},"ts":1430259134000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Otherwise you end up with an even more confuisng history than normal","msgtype":"m.text"},"ts":1430259135000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well yes, it is a bit fussy, but in this case it's right","msgtype":"m.text"},"ts":1430259155000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(it would be better if you could rebase and push new commits at the same time)","msgtype":"m.text"},"ts":1430259172000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Soz, I'm still not used to Critic coping with rebases.","msgtype":"m.text"},"ts":1430259189000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"caitp: really the trick most of the time is to guess probable strings related to what you want, then check in the code to make sure it's getting the data you want :P","msgtype":"m.text"},"ts":1430259299000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(in my experience)","msgtype":"m.text"},"ts":1430259305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well, using that table it came out to about 18% of submissions","msgtype":"m.text"},"ts":1430259352000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"offset that by the number of people only browsing facebook, and it seems not inaccurate","msgtype":"m.text"},"ts":1430259373000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"*taken with grain of salt","msgtype":"m.text"},"ts":1430259400000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: huh, for me on rel37 it's 10%","msgtype":"m.text"},"ts":1430259406000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh. i mathed wrong","msgtype":"m.text"},"ts":1430259450000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1430259456000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"didn't add the 20* items to the total before calculating","msgtype":"m.text"},"ts":1430259473000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"SimonSapin: hah, I just have an odd habit of maintaining stuff in languages I don't use much :)","msgtype":"m.text"},"ts":1430260404000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: oh yeah, I’m still maintaining some python libraries","msgtype":"m.text"},"ts":1430260552000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"kind of","msgtype":"m.text"},"ts":1430260553000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"}
]