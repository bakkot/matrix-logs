[
{"content":{"body":"Domenic: why CustomElements take reference  to the lifecycle callbacks? Couldn't it just call the relevant methods in the prototype?","msgtype":"m.text"},"ts":1467332183000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(in other words I think https://github.com/heycam/webidl/issues/101 needs to be fixed somehow. The current specs using ctor as a callback are hard to follow and error prone to maintain )","msgtype":"m.text"},"ts":1467332239000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(but still no idea how, since I don't know what has lead to the way ctors and classes are being used right now)","msgtype":"m.text"},"ts":1467332368000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"botie, inform zcorpan I wonder if you could run a query for me and find out how widely used lang=zh-Hans* and lang=zh-Hant* are on the Web relative to lang=zh-cn* and lang=zh-tw*","msgtype":"m.text"},"ts":1467350822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467350823000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"botie, inform zcorpan I suspect lang=zh-Hans* and lang=zh-Hant* are used almost not at all in practice yet (and maybe never really will be)","msgtype":"m.text"},"ts":1467350883000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467350883000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"botie, inform zcorpan this is related to implementation of https://github.com/validator/validator/issues/284 “Check for missing lang and mislabeled lang”","msgtype":"m.text"},"ts":1467350977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467350977000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"TabAtkins: supported the cause","msgtype":"m.text"},"ts":1467351833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I suspect the other commentors there did not realize a new camelcase element would require a parser change","msgtype":"m.text"},"ts":1467352924000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but now I wonder who will be the first purpose to comment to say, Well, if you’re already special-casing others, than it can’t really be much trouble to just add this one to the existing special-case list","msgtype":"m.text"},"ts":1467352984000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or something like that","msgtype":"m.text"},"ts":1467352991000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because consistency","msgtype":"m.text"},"ts":1467352996000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Then my next question will be about how many HTML parser implementers vouched for this","msgtype":"m.text"},"ts":1467353077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I think they generally want to do the right thing these days, they just might not know as you say","msgtype":"m.text"},"ts":1467353099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467353423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan, at 2016-07-01 05:27 UTC, MikeSmith said: I wonder if you could run a query for me and find out how widely used lang=zh-Hans* and lang=zh-Hant* are on the Web relative to lang=zh-cn* and lang=zh-tw* and at 2016-07-01 05:28 UTC, MikeSmith said: I suspect lang=zh-Hans* and lang=zh-Hant* are used almost","msgtype":"m.text"},"ts":1467357462000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"not at all in practice yet (and maybe never really will be) and at 2016-07-01 05:29 UTC, MikeSmith said: this is related to implementation of https://github.com/validator/validator/issues/284 “Check for missing lang and mislabeled lang”","msgtype":"m.text"},"ts":1467357462000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"zcorpan: thanks!","msgtype":"m.text"},"ts":1467361244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"welcome","msgtype":"m.text"},"ts":1467361307000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"y'all should sign up for a bigquery account","msgtype":"m.text"},"ts":1467361326000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"think I did at one point","msgtype":"m.text"},"ts":1467361782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"guess I should actually use it :)","msgtype":"m.text"},"ts":1467361800000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: so there is some non-insignificant performance impact from implementing language detection in the checker","msgtype":"m.text"},"ts":1467361928000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan, hi, I'm alastor0325, I would like to ask a question about webvtt rendering. If we modify the value of attributes of cues (eg. line, position), should we update the rendering immediately? If so, did we mention that in the spec? Thanks!","msgtype":"m.text"},"ts":1467361968000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: good question :-)","msgtype":"m.text"},"ts":1467362189000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"When a WebVTT cue whose active flag is set has its writing direction, snap-to-lines flag, line, position, size, text alignment, region, or text change value, then the user agent must empty the text track cue display state, and then immediately run the text track’s rules for updating the display of WebVTT text tracks.\"","msgtype":"m.text"},"ts":1467362199000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i suppose that should be updated to also cover position alignment etc","msgtype":"m.text"},"ts":1467362250000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"got it, thanks :)","msgtype":"m.text"},"ts":1467362446000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: also see https://w3c.github.io/webvtt/#css-extensions","msgtype":"m.text"},"ts":1467362562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok!","msgtype":"m.text"},"ts":1467362729000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"Manishearth, complain at zcorpan? :)","msgtype":"m.text"},"ts":1467363349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"woot?","msgtype":"m.text"},"ts":1467363377000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Btw, Servo has a technical demo out: https://blog.servo.org/2016/06/30/servo-nightlies/","msgtype":"m.text"},"ts":1467363446000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Don't use it for your bank","msgtype":"m.text"},"ts":1467363451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: why should html/semantics/embedded-content/the-img-element/update-the-image-data/fail-to-resolve.html pass?","msgtype":"m.text"},"ts":1467363483000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"zcorpan: if the URL fails to parse, the spec says to abort the steps before the request (which updates the current source) is initiated","msgtype":"m.text"},"ts":1467363523000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"> ⌛ Parse selected source, relative to the element's node document, and let urlString be the resulting URL string. If that is not successful, abort these steps.","msgtype":"m.text"},"ts":1467363560000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: that is the algorithm to run when the *environment changes*","msgtype":"m.text"},"ts":1467363725000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Manishearth: that is not the case in this test","msgtype":"m.text"},"ts":1467363735000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Manishearth: you want to look at https://html.spec.whatwg.org/multipage/embedded-content.html#update-the-image-data","msgtype":"m.text"},"ts":1467363748000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"step 11","msgtype":"m.text"},"ts":1467363780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: are you analyzing the entire doc? can it be limited?","msgtype":"m.text"},"ts":1467363996000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I limited it","msgtype":"m.text"},"ts":1467364028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1467364064000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but the size of the text that the language detection gets run on does not seem to be the biggest factor","msgtype":"m.text"},"ts":1467364089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right now I am limiting it to the first 3OK characters","msgtype":"m.text"},"ts":1467364104000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which seems to take no more measurable time than if I limited it to only 2K","msgtype":"m.text"},"ts":1467364136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but as far as the rest of the implementation goes, it is affected by the size of the doc","msgtype":"m.text"},"ts":1467364167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is the cost initializing the analyzer? (can it be done once and re-used?)","msgtype":"m.text"},"ts":1467364178000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does anyone know if \"filesystem\" is a scheme that's a thing in one or more browsers?","msgtype":"m.text"},"ts":1467364239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At some point I added it to a few places, but I think it's mostly gone nowhere","msgtype":"m.text"},"ts":1467364258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: well the way the checker is architected, I cannot do implement it using a singleton instance the way the microsyntax/datatype checkers are done","msgtype":"m.text"},"ts":1467364343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it doesn’t matter, because the cost is not bound by that","msgtype":"m.text"},"ts":1467364363000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems to bound by the document size (though the call to the 3rd-party language-detection library code itself is not)","msgtype":"m.text"},"ts":1467364416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so when test it locally I ran into OOM errors from the Java GC when I tested with the HTML spec, which is now 8.2MB","msgtype":"m.text"},"ts":1467364461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that was running with the default Java heap size restricted to just 128MB, which I think nowadays is just way too low for the checker anyway","msgtype":"m.text"},"ts":1467364518000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, I upped it to 256MB and no more OOM errors","msgtype":"m.text"},"ts":1467364542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though it still ran slightly more slowly than it does without the language-detection enabled","msgtype":"m.text"},"ts":1467364582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: https://cs.chromium.org/search/?q=\"filesystem:http\"&sq=package:chromium&type=cs","msgtype":"m.text"},"ts":1467364649000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so I upped the Java heap size to 512MB and now it seems to run at much closer to the same speed","msgtype":"m.text"},"ts":1467364659000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: does the language checker use a lot of memory?","msgtype":"m.text"},"ts":1467364720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no, the language-detection library itself does not, as far as I can see","msgtype":"m.text"},"ts":1467364751000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but my code seems to","msgtype":"m.text"},"ts":1467364763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1467364768000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I am not sure why","msgtype":"m.text"},"ts":1467364769000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"can you upload a diff?","msgtype":"m.text"},"ts":1467364823000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the fact that the OOM message was about Java GC seems to indicate it is creating a lot of objects quickly but they are not getting freed quickly","msgtype":"m.text"},"ts":1467364824000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: yeah I will, and I am going to push it to https://checker.html5.org/ shortly","msgtype":"m.text"},"ts":1467364877000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1467364885000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: why do we queue a task to change the current url?","msgtype":"m.text"},"ts":1467364993000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Ms2ger: does Servo have its updating story figured out already?","msgtype":"m.text"},"ts":1467365001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should the error event get the old URL?","msgtype":"m.text"},"ts":1467365003000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk, no","msgtype":"m.text"},"ts":1467365008000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: also, is it better than FirefoxNightly?","msgtype":"m.text"},"ts":1467365012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I see","msgtype":"m.text"},"ts":1467365015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: the idea is to change the url and fire the event in the same task","msgtype":"m.text"},"ts":1467365034000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I would not recommend trying to use it as a browser","msgtype":"m.text"},"ts":1467365035000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: hm","msgtype":"m.text"},"ts":1467365052000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Ms2ger: it's crap at my blog","msgtype":"m.text"},"ts":1467365061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like how it presents the selection cursor, but then fails at selection","msgtype":"m.text"},"ts":1467365102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: UX is pretty good though","msgtype":"m.text"},"ts":1467365176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1467365182000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: fails at security a bit, but probably fixable","msgtype":"m.text"},"ts":1467365193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think \"fails at security a bit\" is expected","msgtype":"m.text"},"ts":1467365222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it's a little weird how they decided to not show the domain anywhere","msgtype":"m.text"},"ts":1467365243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: present a lock icon plus the title of the page is... I dunno","msgtype":"m.text"},"ts":1467365257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, in the UI?","msgtype":"m.text"},"ts":1467365309000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I didn't try that","msgtype":"m.text"},"ts":1467365315000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Speak to fabrice I guess","msgtype":"m.text"},"ts":1467365343000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I should not have loaded the HTML Standard","msgtype":"m.text"},"ts":1467365357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I crashed it","msgtype":"m.text"},"ts":1467365374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well that didn't last long 😊","msgtype":"m.text"},"ts":1467365409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it gets the mobile view for w3.org","msgtype":"m.text"},"ts":1467365982000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I got a FOUC on duckduckgo :-)","msgtype":"m.text"},"ts":1467366034000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/validator/validator/commit/d1ee5cdb941051625e29ce4ac6ca44b2f2a4b38a","msgtype":"m.text"},"ts":1467367157000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and pushed to https://checker.html5.org/","msgtype":"m.text"},"ts":1467367177000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: is the garbage in elementContent, maybe? wild guess :-)","msgtype":"m.text"},"ts":1467368004000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan : it seems that the spec didn't mention about how to parse the \"cue identifier\"? because I only found one place to set it to empty string, and didn't see other place to modify it. do I miss something?","msgtype":"m.text"},"ts":1467368121000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"zcorpan: yeah though that would be the likely culprit, it does not seem to actually be. In debugging, I basically eliminated the text collection altogether and still ran in that GC OOM error. I think it could just be that since we are already running all these other filters of the parser for various other checks, it may not actually be anything particular in this new code itself, but instead it is just","msgtype":"m.text"},"ts":1467368346000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that the additional memory hit of adding any new filter at all just pushed it to the tipping point.","msgtype":"m.text"},"ts":1467368352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*still ran into that GC OOM error","msgtype":"m.text"},"ts":1467368370000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"alwu: hmmmm. seems like i made a mistake in converting https://github.com/w3c/webvtt/issues/222#issuecomment-151361368 to spec text.","msgtype":"m.text"},"ts":1467368793000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"alwu: fix is to set cue identifier to buffer on cue creation, right?","msgtype":"m.text"},"ts":1467369131000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1467369289000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan : seem yes :) ! but maybe we also need to check the content of the buffer? because the syntax rule mentions that the cue identifier can't contain the string \"-->\".","msgtype":"m.text"},"ts":1467369536000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: if the first line of a block has -->, buffer will be empty on cue creation, i believe","msgtype":"m.text"},"ts":1467369615000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so no need to check","msgtype":"m.text"},"ts":1467369624000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that means the cue identifier is empty?","msgtype":"m.text"},"ts":1467369652000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"like this file http://w3c-test.org/webvtt/webvtt-file-format-parsing/webvtt-file-parsing/support/arrows.vtt","msgtype":"m.text"},"ts":1467369662000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1467369673000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"do you want to submit a PR for the spec?","msgtype":"m.text"},"ts":1467369701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan : ok, let me check how to modify it because I never send PR for the spec :)","msgtype":"m.text"},"ts":1467369817000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"i figured this could be a \"good first bug\" :-)","msgtype":"m.text"},"ts":1467369889000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: sorry to ask about another thing here: https://html.spec.whatwg.org/multipage/forms.html#dom-input-valueasnumber","msgtype":"m.text"},"ts":1467369990000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I still can't parse that, how it returns number of months for type=month","msgtype":"m.text"},"ts":1467370004000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: ooh, is that what Chrome does?","msgtype":"m.text"},"ts":1467370047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: based on the test jessica linked","msgtype":"m.text"},"ts":1467370064000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and yes, tested locally","msgtype":"m.text"},"ts":1467370153000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MikeSmith: https://www.ingdirect.es/ - mislabeled only for legacy IE :-D","msgtype":"m.text"},"ts":1467370155000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____: I see, then Chrome is indeed wrong per spec :-/","msgtype":"m.text"},"ts":1467370328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, need to then test other browsers","msgtype":"m.text"},"ts":1467370364000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sounds like we'll need a spec change","msgtype":"m.text"},"ts":1467370371000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: should probably ask https://github.com/tkent-google about this","msgtype":"m.text"},"ts":1467370435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: / tkent@","msgtype":"m.text"},"ts":1467370444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1467370473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hey! I'm having trouble finding the definition Window's onload event and when and how it should fire","msgtype":"m.text"},"ts":1467371013000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Looking at https://html.spec.whatwg.org/multipage/browsers.html#the-window-object I only see it defined for about:blank","msgtype":"m.text"},"ts":1467371027000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(at least when CMD-Fing through the page)","msgtype":"m.text"},"ts":1467371062000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"any pointers would be appreciated! :) Specifically, I want to see if it should fire as part of a queued task or synchronously","msgtype":"m.text"},"ts":1467371106000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: https://html.spec.whatwg.org/multipage/syntax.html#stop-parsing","msgtype":"m.text"},"ts":1467371147000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"step 6 and 7","msgtype":"m.text"},"ts":1467371161000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK, so it should fire after a task","msgtype":"m.text"},"ts":1467371228000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Thanks! :)","msgtype":"m.text"},"ts":1467371232000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: Do you know if there are any tests that verify that this is what happens? I suspect that's not the case in WebKit (from inspecting the code), but want to make sure","msgtype":"m.text"},"ts":1467371287000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"MikeSmith: look great! https://github.com/validator/validator/issues/284#issuecomment-229920015","msgtype":"m.text"},"ts":1467371305000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: hope it has the impact we're looking for. can check httparchive somehow in a year or so and see if the amount of mislabeled pages has gone down","msgtype":"m.text"},"ts":1467371382000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: i see a simple test at http://w3c-test.org/html/syntax/parsing/the-end.html but it doesn't check if load is queued or sync","msgtype":"m.text"},"ts":1467371500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what I'm seeing in WebKit is that for <link rel=preload onload>, unless I sync them, they fire after Window.onload","msgtype":"m.text"},"ts":1467371560000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"how would you test it? setTimeout in DOMContentLoaded?","msgtype":"m.text"},"ts":1467371564000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I don't know. That's why I'm asking :)","msgtype":"m.text"},"ts":1467371590000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: \"The preload link element must not delay the load event of the element's node document.\"","msgtype":"m.text"},"ts":1467371628000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"unless it was discovered","msgtype":"m.text"},"ts":1467371644000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: yeah seems certain it can help significantly over the long run. Will push it to https://validator.w3.org/nu/ maybe later today, and hopefully nothing blows up under load. The instances behind that are each processing at least 2.5 validation requests every second.","msgtype":"m.text"},"ts":1467371701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: Thanks for pushing for that featureーif you hadn’t taken time to raise that request I think it’s not something I would embarked on on my own","msgtype":"m.text"},"ts":1467371846000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: so if I have preload link for a resource which is later also part of the HTML, the load of that resource blocks the document's load event","msgtype":"m.text"},"ts":1467371861000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: will send out some kind of announcement once I have it pushed to https://validator.w3.org/nu/","msgtype":"m.text"},"ts":1467371875000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1467371882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"meant that for zcorpan 😊 :)","msgtype":"m.text"},"ts":1467371912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1467371929000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: i suppose so. but it doesn't say what the relative ordering should be for <link onload> vs window.onload in that case, does it?","msgtype":"m.text"},"ts":1467371983000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not really, no","msgtype":"m.text"},"ts":1467372005000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"nor, for that matter, <link> vs <img> that are loading the same url","msgtype":"m.text"},"ts":1467372015000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"should that be defined as part of the preload spec?","msgtype":"m.text"},"ts":1467372043000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"MikeSmith: sounds good. something for the whatwg blog, maybe? :-)","msgtype":"m.text"},"ts":1467372052000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: yeah i think so","msgtype":"m.text"},"ts":1467372126000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK, I'll file an issue","msgtype":"m.text"},"ts":1467372153000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: do you agree that logically, the resource's onload should fire before the document's onload? (like it does today for other resources)","msgtype":"m.text"},"ts":1467372189000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"if something was found that reuses the same load, and it delays the load event, then yes","msgtype":"m.text"},"ts":1467372260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no opinion on <link> vs <img>, but maybe <link> should be queued first?","msgtype":"m.text"},"ts":1467372293000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"no strong opinion...","msgtype":"m.text"},"ts":1467372310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, I don't have strong opinions on <link> vs <img> either (maybe discovery order, which would put <link> first in most normal cases)","msgtype":"m.text"},"ts":1467372376000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"filed https://github.com/w3c/preload/issues/69","msgtype":"m.text"},"ts":1467374804000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"zcorpan: update on the language-detection: I pushed it to https://validator.w3.org/nu/ but it is only working as expected there maybe 50% of the time :(","msgtype":"m.text"},"ts":1467375881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from teh logs I can see the reason is that the initialization of the language identifier is failing very often","msgtype":"m.text"},"ts":1467375937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok :-|","msgtype":"m.text"},"ts":1467375955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"a language-identifier object is getting created once for every document, and it reads some profile files each time it is created, so maybe not so surprising to have it failing a lot when that is happening 2.5 times a second","msgtype":"m.text"},"ts":1467376088000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I need to figure out how to create it just once and re-use it, but in the current structure of the rest of the checker code, it is not very clear how I can do that or if it is even possible with the current code","msgtype":"m.text"},"ts":1467376166000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"create a factory which has a LRU cache?","msgtype":"m.text"},"ts":1467376237000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"OH GOD I'M GOING FULL JAVA.","msgtype":"m.text"},"ts":1467376245000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: actually I do have a specific idea and will try it","msgtype":"m.text"},"ts":1467376493000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: maybe need a factory factory?","msgtype":"m.text"},"ts":1467376538000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1467376567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: html5lib has one of those *IN PYTHON*.","msgtype":"m.text"},"ts":1467376600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wishes he was joking, but it's seriously the most sensible approach","msgtype":"m.emote"},"ts":1467376618000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"actually for this case, I can write (another) wrapper around the SAX reader, which is how I implemented the outline feature","msgtype":"m.text"},"ts":1467376651000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just creates another filter off the SAX events from the parser","msgtype":"m.text"},"ts":1467376677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"similar to how I already implemented it except that if I do it this way I can pass objects to it","msgtype":"m.text"},"ts":1467376732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: you probably could not fail at Java worse than me :) and I been writing in Java relatively often for the last 5 years or so for the validator stuff","msgtype":"m.text"},"ts":1467376771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't know, I've scarcely written much outside of uni, and I get the impression that there's actually much nicer ways to do many things now with some of the more recent changes","msgtype":"m.text"},"ts":1467376849000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, though I don’t know most of the more recent features well until I see code that somebody else has written up that uses them (like the Salvation CSP library the validator uses now, which relies on some Java8 features)","msgtype":"m.text"},"ts":1467376960000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway in general I am basically just semi-randomly pulling levers and pushing buttons and banging on the side of it until something works","msgtype":"m.text"},"ts":1467376973000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: vague comment on streams API: I'm looking at making Handlebars work with streams. In their templates they have stuff like {{#if val}} - I want this conditional to be true if val is a stream that yields at least one value (since an empty array is false in Handlebars). This is tricky as the conditional is fed into a helper, but teeing will lock val. I","msgtype":"m.text"},"ts":1467377551000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"want to read the first val but without consuming it.","msgtype":"m.text"},"ts":1467377551000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess I want .clone rather than .tee","msgtype":"m.text"},"ts":1467377573000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The helper is in the shape of function ifHelper(val), which should return true/false depending on val","msgtype":"m.text"},"ts":1467377699000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: isn't there an optional bool to clone chunks in the .tee?","msgtype":"m.text"},"ts":1467384305000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: also, isn't what you are trying to do a bit racy?  what if there will be a value in the stream, but it just hasn't arrived yet?  you want the to be a false?","msgtype":"m.text"},"ts":1467384363000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think so, but that's not the problem here.","msgtype":"m.text"},"ts":1467384376000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I'm happy to wait, so there's no race","msgtype":"m.text"},"ts":1467384389000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it waits until either a value appears or the stream is closed?","msgtype":"m.text"},"ts":1467384430000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: imagine streamEmitsAtLeastOneValue(stream).then(answer => …)","msgtype":"m.text"},"ts":1467384438000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But then I want to get that value from stream.getReader().read()","msgtype":"m.text"},"ts":1467384465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think I would do this with a wrapper stream... new ReadableStream() where the underlying source contains the ReadableStream you want to observe and buffers a single value... you can then provide a promise hanging off this wrapper underlying source","msgtype":"m.text"},"ts":1467384526000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and pas the wrapper ReadableStream on to the next person in the chain","msgtype":"m.text"},"ts":1467384538000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"pass","msgtype":"m.text"},"ts":1467384541000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I could tee the stream, pass one part to streamEmitsAtLeastOneValue, then continue using the other half of the tee","msgtype":"m.text"},"ts":1467384575000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But in this case I don't control the outside, I just receive a stream into a function","msgtype":"m.text"},"ts":1467384595000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah, yea... in that case you do have tee","msgtype":"m.text"},"ts":1467384647000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: assuming you have to have this as a separate function that takes a REadableStream arg","msgtype":"m.text"},"ts":1467384715000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: but if I tee, the original stream is locked","msgtype":"m.text"},"ts":1467384754000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  the person calling your function has to tee","msgtype":"m.text"},"ts":1467384766000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: your function is just a consuming function... so the caller has to deal with that","msgtype":"m.text"},"ts":1467384782000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I guess I just have to put up with that. Means it doesn't work in a simple {{#if val}} template","msgtype":"m.text"},"ts":1467384824000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: can you make a HandleBarsReadableStream that gets created from the start that does the wrapping I talked about above?  It could then expose its own stuff like \"ever got a value promise\"","msgtype":"m.text"},"ts":1467384874000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I don't know enough about Handlebars","msgtype":"m.text"},"ts":1467384898000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I could probably do it if I pull apart the guts of Handlebars. Wouldn't need to if it was like response.clone() :D","msgtype":"m.text"},"ts":1467384968000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but you can't response.clone if anything else has touched the stream yet... seems a similar problem","msgtype":"m.text"},"ts":1467384998000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: happy to make \"untouched\" stream a requirement in this case","msgtype":"m.text"},"ts":1467385027000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: what are you using in handlebars?  registerHelper()?","msgtype":"m.text"},"ts":1467385120000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah","msgtype":"m.text"},"ts":1467385128000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger: did you look at https://github.com/whatwg/url/issues/53 already?","msgtype":"m.text"},"ts":1467385170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: seems like another issue with IDNA :/","msgtype":"m.text"},"ts":1467385182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: they really didn't do their homework and just went with what made sense it seems like","msgtype":"m.text"},"ts":1467385195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: this is similar to the crypto folks at Mozilla implementing their own domain name parser and not caring about compat or consistency","msgtype":"m.text"},"ts":1467385222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it seems the value is passed in to the helper on the `this`, right?  can you just overwrite it with the new stream out from the tee?","msgtype":"m.text"},"ts":1467385233000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk, no, I just wanted you to be aware of the servo change","msgtype":"m.text"},"ts":1467385244000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looking at the examples on handlebars.js.com","msgtype":"m.text"},"ts":1467385252000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nah, `this` is the context. The conditional is passed in as the first arg","msgtype":"m.text"},"ts":1467385267000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger: I see, it makes me all rather sad","msgtype":"m.text"},"ts":1467385272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, that we can all agree ob","msgtype":"m.text"},"ts":1467385292000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"on","msgtype":"m.text"},"ts":1467385293000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: probably worth a streams issue to capture the use case","msgtype":"m.text"},"ts":1467385361000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: its kind of a common problem, though, even in c++ land I had to make our \"clone a stream\" possibly give back a stream to replace the argument","msgtype":"m.text"},"ts":1467385385000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sometimes you just can't clone/tee a stream without draining the original","msgtype":"m.text"},"ts":1467385650000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, I think that's the conclusion I'm coming to","msgtype":"m.text"},"ts":1467385714000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"having an object the stream sits on (like Response) lets you hide this by replacing the original stream","msgtype":"m.text"},"ts":1467385785000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan: reimplemented the language-detection feature as a SAX reader wrapper and that appears to have solved the problem and it now should work again 100% as expected even at https://validator.w3.org/nu/","msgtype":"m.text"},"ts":1467400061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and pushed it to https://checker.html5.org/ too","msgtype":"m.text"},"ts":1467400161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so... for helping me understand more, can someone point me to discussions around inert?  I've searched both irc logs and mailing lists and I can't find more than a handful of references and most of those are initial comments by hixie saying 'I added this thing'.","msgtype":"m.text"},"ts":1467400201000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: https://github.com/whatwg/html/issues/897 is possibly helpful","msgtype":"m.text"},"ts":1467400311000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, yeah not really - I'm aware of that one too","msgtype":"m.text"},"ts":1467400348000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"isn't really aware of anywhere better that links to stuff, and expects others can summarise better than he","msgtype":"m.emote"},"ts":1467400389000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: you around?","msgtype":"m.text"},"ts":1467400437000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ish!","msgtype":"m.text"},"ts":1467400450000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"not the attribute so much even - but there is a concept in the spec called 'inert' and, for example, it would seem that disabled elements are inert.  inert is part of the magic of the platform, yet I'm not entirely sure how it works even","msgtype":"m.text"},"ts":1467400489000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"JakeA: what would you expect this to do?  let swc = frame.contentWindow.navigator.serviceWorker; frame.remove(); console.log(swc.controller);","msgtype":"m.text"},"ts":1467400520000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: throw or just return undefined for controller?","msgtype":"m.text"},"ts":1467400540000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: let's go for undefined","msgtype":"m.text"},"ts":1467400643000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"sounds good","msgtype":"m.text"},"ts":1467400676000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1467400676000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I'm adding a WPT test for this corner case","msgtype":"m.text"},"ts":1467400707000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Cheers!","msgtype":"m.text"},"ts":1467400996000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Good catch","msgtype":"m.text"},"ts":1467400999000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: or not... I'm not sure the case I'm trying to test is actually triggered by frame.remove()...","msgtype":"m.text"},"ts":1467401081000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, it is... just bugs :-\\","msgtype":"m.text"},"ts":1467401210000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ugh, scratch my misread about disabled elements are inert above :(","msgtype":"m.text"},"ts":1467404771000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"is there any tool to go through all the known specs to check whether they refer to some terminology defined in HTML (or other) spec?","msgtype":"m.text"},"ts":1467405289000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"bkardell: at the moment inert is just for dialog","msgtype":"m.text"},"ts":1467406332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: No, there's no spiders yet that track cross-linking.","msgtype":"m.text"},"ts":1467406550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've been thinking of writing a spider anyway (and switching Bikeshed to it, rather than relying on Shepherd), and this might be a good intro.","msgtype":"m.text"},"ts":1467406762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oooooh, I was wanting a learner project for Rust smaller than \"rewrite Bikeshed\", and I bet this would work great.","msgtype":"m.text"},"ts":1467406782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"some kind of cross-linking tracker would be really nice for cases link in-document handling, where introducing shadow DOM changes lots of things","msgtype":"m.text"},"ts":1467408498000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and if we had cross-linking tracker, perhaps then HTML spec could be split to smaller, more manageable pieces. maybe. not sure it is a good idea. maybe it is.","msgtype":"m.text"},"ts":1467408557000,"senderName":"smaug____","senderId":"smaug____@irc"}
]