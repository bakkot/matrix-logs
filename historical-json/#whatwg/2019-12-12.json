[
{"content":{"body":"yoav: re https://groups.google.com/a/chromium.org/d/msg/blink-dev/zlLSxQ9BA8Y/0L7gimc3DwAJ - maybe the situation for tests would be clearer if the intent to ship template asked for a testing plan?","msgtype":"m.text"},"ts":1576144318000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: changes to the same-origin policy are always scary","msgtype":"m.text"},"ts":1576144754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I strongly suspect that downplaying the significance of such changes has led to quite a number of exploits in the past we're still coping with today","msgtype":"m.text"},"ts":1576144831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it currently asks if the feature is fully tested, which should cover it, but maybe we can do better","msgtype":"m.text"},"ts":1576144933000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: right. i think often people claim \"Yes\" when tests exist, but it's not actually fully tested. Reviewing a testing plan is easier than reviewing tests, so makes it easier for others to poke holes in the testing plan or note that the plan says to test something but no test exist for it","msgtype":"m.text"},"ts":1576145739000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: where is the right place to send feedback about the intent to X process?","msgtype":"m.text"},"ts":1576145925000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The blink-api-owners mailing list would be the best venue","msgtype":"m.text"},"ts":1576146786000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://groups.google.com/a/chromium.org/forum/m/#!forum/blink-api-owners-discuss","msgtype":"m.text"},"ts":1576146847000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"https://groups.google.com/a/chromium.org/forum/m/#!topic/blink-api-owners-discuss/S2cZGThNPlY","msgtype":"m.text"},"ts":1576149014000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: How is it pure fiction? This check is the first quick check V8 makes.","msgtype":"m.text"},"ts":1576161527000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: at a conceptual level","msgtype":"m.text"},"ts":1576161888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Two agents that are cross domain should just fail on the check right away. So it is an early out. Yes it is true that it could be an assert after the same-domain check today.","msgtype":"m.text"},"ts":1576161974000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: the thing is that per JavaScript two objects that are in different agents shouldn't be able to reach each other","msgtype":"m.text"},"ts":1576162015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: an agent is kinda like a process boundary (although implementation-wise the process boundary is more at the agent cluster level)","msgtype":"m.text"},"ts":1576162047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: so if you're talking to an object from another agent, you're really talking to some kind of \"remote object\" in your agent that messages things across the boundary","msgtype":"m.text"},"ts":1576162087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WindowProxy is a PaltformObject","msgtype":"m.text"},"ts":1576162092000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/window-object.html#windowproxy-getprototypeof","msgtype":"m.text"},"ts":1576162114000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"(again, this is how it's supposed to be, the spec quite freely lets objects cross this boundary, but that's not necessarily great)","msgtype":"m.text"},"ts":1576162127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(as in, HTML steps a bit all over ECMAScript and ECMAScript doesn't really give great tools for working with agents)","msgtype":"m.text"},"ts":1576162167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In V8 I'd consider an Agent mapping to an Isolate.","msgtype":"m.text"},"ts":1576162211000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"And an Isolate can't access memory that it doesn't have mapped into it.","msgtype":"m.text"},"ts":1576162236000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"I'm not really familiar with V8 internals","msgtype":"m.text"},"ts":1576162280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ya.. I understand that. I just want to be sure that you are aware there can be multiple Agents in a given standard operating system process.","msgtype":"m.text"},"ts":1576162346000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"Sure, that's clear to me, that's why I said conceptual","msgtype":"m.text"},"ts":1576162505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(agent ~ thread, agent cluster ~ process)","msgtype":"m.text"},"ts":1576162539000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In Firefox agents are also a number","msgtype":"m.text"},"ts":1576162546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: in impl yes, conceptually agents are closer to processes imo","msgtype":"m.text"},"ts":1576162561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, conceptually they are threads, since they can share memory amongst each other","msgtype":"m.text"},"ts":1576162576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But they cannot share anything else, which threads typically can","msgtype":"m.text"},"ts":1576162588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only in languages which choose to make that possible","msgtype":"m.text"},"ts":1576162608000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And there's cross-process shared memory as well on some architectures","msgtype":"m.text"},"ts":1576162610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So meh","msgtype":"m.text"},"ts":1576162614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, actually, memory is the only thing that is shareable in other languages too, they just hide it behind different language constructs","msgtype":"m.text"},"ts":1576162627000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So you are saying that we probably really need to define Location and WindowProxy having the Agent check then?","msgtype":"m.text"},"ts":1576162922000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/zcSyTABj/","msgtype":"m.text"},"ts":1576163017000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"err sorry... ie; cause on a Remote WindowProxy..","msgtype":"m.text"},"ts":1576163050000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"1. Let W be the value of the [[Window]] internal slot of this.  <--- This doesn't really exist if they are different Agents...","msgtype":"m.text"},"ts":1576163050000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"2. If ! IsPlatformObjectSameOrigin(W) is true, then return ! OrdinaryGetPrototypeOf(W).","msgtype":"m.text"},"ts":1576163050000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"3. Return null.","msgtype":"m.text"},"ts":1576163050000,"senderName":"dtapuska","senderId":"dtapuska@irc"},
{"content":{"body":"dtapuska: ideally we'd have \"remote WindowProxy\" and \"remote Location\" objects for WindowProxy and Location others in other agents and those would message to their local counterparts in those agents","msgtype":"m.text"},"ts":1576165211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: what's the current state of 5107 and 5109 according to you? I believe I replied to all feedback in the PRs and tests","msgtype":"m.text"},"ts":1576165531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dtapuska: anyway, I was wrong about saying we can use asserts, as clearly we don't have remote/local objects and happily compare objects across agents. But I think continuing to build on the current setup with ECMAScript clearly having a different idea about this isn't great","msgtype":"m.text"},"ts":1576165646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in both cases I don't believe the current tests are sufficient. In 5107 you've stated they are, and vaguely gestured toward why, so when I have several hours I can try to sit down and figure out what you mean. In 5109 you stated that only one of the two scenarios I outlined was tested so there the ball is in your court I believe?","msgtype":"m.text"},"ts":1576165763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I suspect the second test would require browsers to expose document.domain in SVG documents, I'm not sure all of them do","msgtype":"m.text"},"ts":1576166069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm that would be an interesting divergence from the spec","msgtype":"m.text"},"ts":1576166106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Though I guess it should work, so why not","msgtype":"m.text"},"ts":1576166107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure I was that vague btw","msgtype":"m.text"},"ts":1576166245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you navigate from A1 to A2 and that's same origin and same origin-domain","msgtype":"m.text"},"ts":1576166269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I feel that in 5107 you've been repeatedly brief and unclear, which is not helpful when trying to evaluate this very complex space.","msgtype":"m.text"},"ts":1576166278000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you do the same but A1 has set document.domain, it's still same origin, but not same origin-domain","msgtype":"m.text"},"ts":1576166282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A2 can never set document.domain","msgtype":"m.text"},"ts":1576166289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So same origin-domain is a stricter check and more secure","msgtype":"m.text"},"ts":1576166301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've tried to express in great detail scenarios that I think are being changed by the PR and that would be important to test, and you have given short not-very-clear answers as to why they're not important to test.","msgtype":"m.text"},"ts":1576166313000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"GTG to a meeting for a bit","msgtype":"m.text"},"ts":1576166317000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, I've said why they would be redundant with existing tests or cannot be tested and you have not provided an example why that's untrue...","msgtype":"m.text"},"ts":1576166362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't understood your \"why's because they are very short and cryptic","msgtype":"m.text"},"ts":1576168335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Fundamentally I find it impossible to understand how a spec change that preserves Window object identity doesn't end up testing Window object identity by checking if globals stay the same","msgtype":"m.text"},"ts":1576168361000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I understand that the ball is in my court to respond but it would take me a lot less time to respond if you were more clear","msgtype":"m.text"},"ts":1576168390000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Again, as I wrote above it doesn't, it preserves it in fewer cases","msgtype":"m.text"},"ts":1576168392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK, then checks that the global variables disappear, either way","msgtype":"m.text"},"ts":1576168406000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The whole bug is that it was preserved","msgtype":"m.text"},"ts":1576168413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Those would security error as is already checked?","msgtype":"m.text"},"ts":1576168431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That isn't clear to me, so I'll spend some time when I can trying to make it clearer","msgtype":"m.text"},"ts":1576168456000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1576168487000,"senderName":"annevk","senderId":"annevk@irc"}
]