[
{"content":{"body":"hi annevk_, I just saw your email","msgtype":"m.text"},"ts":1445561699000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: ah hey!","msgtype":"m.text"},"ts":1445561716000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"nikkibee: email is still better, not the most reliable connection on the train here","msgtype":"m.text"},"ts":1445561742000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"nikkibee: and I have to transfer soonish","msgtype":"m.text"},"ts":1445561748000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"vakila messaged me after they saw my message on issue 265 and we chatted about that","msgtype":"m.text"},"ts":1445561758000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"gotcha!","msgtype":"m.text"},"ts":1445561760000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"ah okay, vakila helped you out?","msgtype":"m.text"},"ts":1445561779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was actually in the process of forking the repo when they saw my message on github saying I wanted to do it","msgtype":"m.text"},"ts":1445561804000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"so no problem there","msgtype":"m.text"},"ts":1445561811000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"so if I'm reading you right, working on most of the good first bugs means updating documentation as described, without changing the code. but I need to look at the relevant code to make sure the documentation matches?","msgtype":"m.text"},"ts":1445561869000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: I'll be around and can help answer questions when needed (I won't be at the TPAC conference myself)","msgtype":"m.text"},"ts":1445561874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks MikeSmith!","msgtype":"m.text"},"ts":1445561881000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: nothing requires changes to html-build afaik","msgtype":"m.text"},"ts":1445561904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: you only need to change \"source\", which is HTML","msgtype":"m.text"},"ts":1445561913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1445561923000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: but that HTML does describe algorithms and such, which you sometimes will need to understand in order to make a change","msgtype":"m.text"},"ts":1445561945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: but you can't really run it, since it's English","msgtype":"m.text"},"ts":1445561960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohh. I get it. these are the html standards","msgtype":"m.text"},"ts":1445561982000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: so it's a slightly different exercise from writing code in general","msgtype":"m.text"},"ts":1445561986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"implementations are up to vendors... so there's no code for me to look at to compare documentation to really","msgtype":"m.text"},"ts":1445562000000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: yeah \"source\" is basically the HTML standard, and html-build makes it a bit prettier","msgtype":"m.text"},"ts":1445562006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: yeah, well, you can of course look at the source code of various browsers","msgtype":"m.text"},"ts":1445562050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: or write a testcase/demo to find out what a browser does and whether that matches the standard","msgtype":"m.text"},"ts":1445562071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhm. but I can't take how one browser does it as necessarily definitive","msgtype":"m.text"},"ts":1445562079000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: unfortunately not","msgtype":"m.text"},"ts":1445562093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: you have to test all the browsers and then make a decision of sorts as to what is best, but we can help you with that once you get there","msgtype":"m.text"},"ts":1445562121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1445562134000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: most of the good first bugs shouldn't require that much research though","msgtype":"m.text"},"ts":1445562135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just looking at the \"source\" file?","msgtype":"m.text"},"ts":1445562152000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"yeah, just looking at that and changing some things around","msgtype":"m.text"},"ts":1445562170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I get it a lot better now, thanks","msgtype":"m.text"},"ts":1445562181000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'll start with https://github.com/whatwg/html/issues/179 like you mentioned in the email","msgtype":"m.text"},"ts":1445562223000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: improving the documentation is very much welcome though, although not always the most rewarding","msgtype":"m.text"},"ts":1445562227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been meaning to do that, but got distracted","msgtype":"m.text"},"ts":1445562251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"back later","msgtype":"m.text"},"ts":1445562261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's alright, right now I'm looking to test the waters in general and get something in on time for my outreachy application","msgtype":"m.text"},"ts":1445562262000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://github.com/whatwg/html#pull-requests I don't understand the 100 characters convention","msgtype":"m.text"},"ts":1445564848000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"does this only apply to the text that will be shown? because a lot of lines go beyond 100 characters","msgtype":"m.text"},"ts":1445564877000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://github.com/whatwg/html-build#prerequisites is it possible to follow this on windows? like using cygwin or something","msgtype":"m.text"},"ts":1445566872000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: it applies to the length of lines in the source file","msgtype":"m.text"},"ts":1445567423000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nikkibee: cygwin might work; I have not tried it. I use a Linux machine and most people seem to use Macs.","msgtype":"m.text"},"ts":1445567451000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I thought it meant line length. but a lot of lines don't follow it","msgtype":"m.text"},"ts":1445567468000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"should I fix up lines in the same section that I'm working on rn?","msgtype":"m.text"},"ts":1445567481000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I got a linux vm which I'm competent with, I just find it easier and faster to edit files on the host os","msgtype":"m.text"},"ts":1445567512000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: generally we only fix up the smallest number of lines possible, to avoid generating diffs that are just moving whitespace around.","msgtype":"m.text"},"ts":1445567563000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that makes sense","msgtype":"m.text"},"ts":1445567571000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'll try out cygwin later, right now I just want to get my first PR in :)","msgtype":"m.text"},"ts":1445567580000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1445567586000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for the line length, is it okay to split a <> block in half or so?","msgtype":"m.text"},"ts":1445567993000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"like I have a part where \"<code data-x=\"dom-windowtimers-setTimeout\">\"  is at the end of a line and half-way through it hits the 100 character limit","msgtype":"m.text"},"ts":1445568029000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"should I put a line-break there, or right before the whole block?","msgtype":"m.text"},"ts":1445568048000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: it is OK to split that after \"<code\" but not anywhere else","msgtype":"m.text"},"ts":1445568233000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gotcha! thanks","msgtype":"m.text"},"ts":1445568257000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'd rather split it at the start cause it's only a 5 character difference, and it's more readable that way imo. that's OK too, right?","msgtype":"m.text"},"ts":1445568294000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"sure, np","msgtype":"m.text"},"ts":1445568391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1445568402000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/179 I'm working on this issue, and I noticed near the start of the timers section, right above the big note block giving an overview of the functions, is the html comment <!-- in practice clearInterval() and clearTimeout() are synonyms, but we don't mention this here -->","msgtype":"m.text"},"ts":1445568544000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"since I'm now clarifying that this is the case, should I remove that comment, since it's contradictory to the section?","msgtype":"m.text"},"ts":1445568566000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"yes, that seems like a good idea","msgtype":"m.text"},"ts":1445568726000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1445568798000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://github.com/whatwg/html/pull/282 PR made! @ Domenic","msgtype":"m.text"},"ts":1445570195000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"hey Domenic, I'm having a hard time with squashing","msgtype":"m.text"},"ts":1445571713000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html I've been shown to follow this which I can do fine","msgtype":"m.text"},"ts":1445571723000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"but after squashing the commits I'm not sure what to do next","msgtype":"m.text"},"ts":1445571730000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I did some history digging with somebody else and last time I did `git push origin master -f`, but they I was talking to about it said I should check with you about running that","msgtype":"m.text"},"ts":1445571772000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: git push origin master -f is fine in this case","msgtype":"m.text"},"ts":1445572092000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1445572104000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"oof I must've done something wrong cause there's four commits now :S","msgtype":"m.text"},"ts":1445572374000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"uh oh","msgtype":"m.text"},"ts":1445572404000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I tried to rebase again to change the syntaxt of the commit message to follow this better https://github.com/erlang/otp/wiki/Writing-good-commit-messages","msgtype":"m.text"},"ts":1445572435000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"if you do `git rebase -i HEAD~4` and replace `pick` with `s` in the text editor, and then force push, you should be okay","msgtype":"m.text"},"ts":1445572516000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Also when editing the commit message be sure to remove the previous ones instead of leaving them there","msgtype":"m.text"},"ts":1445572556000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"er, except for the first commit, leave that one as pick --- and uh, make sure they're all your commits","msgtype":"m.text"},"ts":1445572558000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"alright, I've done all of those now","msgtype":"m.text"},"ts":1445572665000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"argh that didn't turn out right","msgtype":"m.text"},"ts":1445572715000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"it has the changes from at least 3 of the commits, the diff looks pretty close to how it did before","msgtype":"m.text"},"ts":1445572744000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but the commit title isn't what I left behind, and the full message has all the stuff from before for some reason","msgtype":"m.text"},"ts":1445572785000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"easy fix: git commit --amend","msgtype":"m.text"},"ts":1445572804000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and force push again","msgtype":"m.text"},"ts":1445572809000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"thanks :)","msgtype":"m.text"},"ts":1445572824000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"how do I delete a line in VIM? I seem unable to","msgtype":"m.text"},"ts":1445572851000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I've deleted like. all the text except the commit message I want","msgtype":"m.text"},"ts":1445572863000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"but I have a bunch of blank lines before and after I can't seem to remove","msgtype":"m.text"},"ts":1445572872000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"in the not-insertion-mode, press `d` twice to delete a single line that you're on","msgtype":"m.text"},"ts":1445572881000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1445572904000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I just realized I can do it in insert mode, I just accidentally left it","msgtype":"m.text"},"ts":1445572928000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"there we go","msgtype":"m.text"},"ts":1445572956000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"Domenic: how does it look now? https://github.com/whatwg/html/pull/282","msgtype":"m.text"},"ts":1445573062000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: almost right. Go with \"Fixes #179: Add note about clearing timers\" (titles don't consist of two sentences, and you want to use present tense consistently)","msgtype":"m.text"},"ts":1445573414000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that makes more sense","msgtype":"m.text"},"ts":1445573443000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"done and pushed @ Domenic","msgtype":"m.text"},"ts":1445573510000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: perfect! Now I just need to dig out my Linux machine to verify and merge... might take ~15 minutes, I'm in the middle of some packing for a trip.","msgtype":"m.text"},"ts":1445573564000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"alright, sounds good","msgtype":"m.text"},"ts":1445573698000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"urk I think I hit a weird key combo in vim by mistake","msgtype":"m.text"},"ts":1445575774000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"it took me back to the git prompt but I can't do anything, anything I type just makes \"More?\" appear on the input line","msgtype":"m.text"},"ts":1445575820000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: there are ways to set the git editor to something less crazy than vim...","msgtype":"m.text"},"ts":1445575861000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nikkibee: probably to get out of your current state, Ctrl+C?","msgtype":"m.text"},"ts":1445575869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ctrl+c just makes the git prompt line appear again","msgtype":"m.text"},"ts":1445575891000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'm still stuck in this","msgtype":"m.text"},"ts":1445575895000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"can I make the git editor default to like, sublime text?","msgtype":"m.text"},"ts":1445575905000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I don't want to close the terminal cause I'm in the middle of rebasing","msgtype":"m.text"},"ts":1445575921000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"yeah you can, there's a slight trick to it, let me find that","msgtype":"m.text"},"ts":1445575965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i would close the terminal then reopen it and do \"git rebase --abort\" so you can get into a fresh state","msgtype":"m.text"},"ts":1445575980000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"okay, that sounds fine then","msgtype":"m.text"},"ts":1445576024000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://stackoverflow.com/questions/8951275/how-can-i-make-sublime-text-the-default-editor-for-git/9408117#9408117","msgtype":"m.text"},"ts":1445576039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that's rad, thanks","msgtype":"m.text"},"ts":1445576072000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I miss the handy text colouring to let me know what I'm doing right, but this is much less stressful","msgtype":"m.text"},"ts":1445576142000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"theres probably a git syntax highlighter for sublime, isnt there?","msgtype":"m.text"},"ts":1445576247000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not by default it doesn't look like","msgtype":"m.text"},"ts":1445576267000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"these files don't have an extension so I'm not sure how sublime would pick up on it","msgtype":"m.text"},"ts":1445576290000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"looks like there are lots of git plugins for it","msgtype":"m.text"},"ts":1445576371000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that would be handy! I'm sure if there's plugins they know how to get sublime to recognize it","msgtype":"m.text"},"ts":1445576389000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I've squashed and pushed the commits again @ Domenic","msgtype":"m.text"},"ts":1445576451000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: great, re-building now!","msgtype":"m.text"},"ts":1445576855000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1445576948000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"Yay, merged!! Thank you so much!","msgtype":"m.text"},"ts":1445577067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":D thank you too for all the help!","msgtype":"m.text"},"ts":1445577103000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'm excited to be part of this","msgtype":"m.text"},"ts":1445577108000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1445577249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins, where does bikeshed get its [[REFS]]?","msgtype":"m.text"},"ts":1445610408000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Mostly SpecRef, but also Bikeshed's linking database (if [[ref]] is the shortname of a spec indexed by Shepherd/Bikeshed, it'll link).","msgtype":"m.text"},"ts":1445612335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Pointer? It's missing OMGIDL","msgtype":"m.text"},"ts":1445612828000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"are iterable<> interfaces with an integer length property necessarily supposed to use %ArrayProto_values% as their iterator, or does that only apply to interfaces with the integer-typed length attr, indexed element getter, and no other form of iterable<> declaration","msgtype":"m.text"},"ts":1445615522000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hello!","msgtype":"m.text"},"ts":1445623229000,"senderName":"hatmaker","senderId":"hatmaker@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1445623249000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"privet, nikkibee","msgtype":"m.text"},"ts":1445623249000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"anyone here know Alystair?","msgtype":"m.text"},"ts":1445623266000,"senderName":"hatmaker","senderId":"hatmaker@irc"},
{"content":{"body":"http://testthewebforward.org/docs/configuration.html#branch I'm following these steps for https://github.com/w3c/web-platform-tests/issues/2277","msgtype":"m.text"},"ts":1445625066000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'm trying to think of a good name for the branch","msgtype":"m.text"},"ts":1445625084000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"\"timers-cleartimeout-clearinterval\"?","msgtype":"m.text"},"ts":1445625112000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://reviewable.io/reviews/servo/servo/8114#-K1BFtVuDw8ymsMAeG5Q Apparently, dataset is badly specified, could someone clarify whether this is intended or not?","msgtype":"m.text"},"ts":1445625572000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/dom.html#custom-data-attribute 'name starts with the string \"data-\", has at least one character after the hyphen'","msgtype":"m.text"},"ts":1445625592000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/dom.html#dom-dataset 'For each content attribute on the element whose first five characters are the string \"data-\" and whose remaining characters (if any)'","msgtype":"m.text"},"ts":1445625633000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That 'if any' contradicts the first HTML spec link I pasted.","msgtype":"m.text"},"ts":1445625649000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nikkibee: The branch name doesn't matter at all, but that sounds fine","msgtype":"m.text"},"ts":1445626498000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1445626505000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I mean having something somewhat descriptive helps, but it's shortlived anyway","msgtype":"m.text"},"ts":1445626516000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nox: Without reading the spec that sounds like UA requirements vs author requirements","msgtype":"m.text"},"ts":1445626550000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/nikkisquared/web-platform-tests#running-the-tests I'm trying to follow this and I get an error from a python file after running ./serve","msgtype":"m.text"},"ts":1445626667000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"note that I'm on windows","msgtype":"m.text"},"ts":1445626672000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I followed the windows notes","msgtype":"m.text"},"ts":1445626678000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"https://gist.github.com/nikkisquared/5217fb6847348e149107 this is the error","msgtype":"m.text"},"ts":1445626735000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I tried following the note at the end about `openssl` not working on the commandline but I don't think I'm doing it right","msgtype":"m.text"},"ts":1445626780000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"it doesn't work on the command line for me, even though I put it in the path","msgtype":"m.text"},"ts":1445626793000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"oh what the! the path didn't save my changes","msgtype":"m.text"},"ts":1445626816000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I can run `openssl` now but I still get that error","msgtype":"m.text"},"ts":1445626908000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'd like knowing I can run the tests myself","msgtype":"m.text"},"ts":1445627014000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"jgraham: Oh I see.","msgtype":"m.text"},"ts":1445628465000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Wasn't there some attempt at making inputEl.files assignable? sicking might remember?","msgtype":"m.text"},"ts":1445628706000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah. Mainly we need the .item() problem solved","msgtype":"m.text"},"ts":1445628745000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but couldn't we allow inputEl.files = any sequence and then convert it to a FileList? Separately from fixing FileList vs. array","msgtype":"m.text"},"ts":1445628781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i think that's the only remaining blocker","msgtype":"m.text"},"ts":1445628782000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Domenic: true, we could. You couldn't express that in WebIDL, though that's a relatively small hurdle","msgtype":"m.text"},"ts":1445628823000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hmm I see.","msgtype":"m.text"},"ts":1445628833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sicking: Use a getter/setter pair and some prose.","msgtype":"m.text"},"ts":1445637205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that doesn't let us use the .files syntax, does it?","msgtype":"m.text"},"ts":1445637233000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ms2ger: https://github.com/tobie/specref","msgtype":"m.text"},"ts":1445637242000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: Of course it does.","msgtype":"m.text"},"ts":1445637253000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"getter/setter pairs looks like an attributde","msgtype":"m.text"},"ts":1445637283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's webidl syntax i don't know if on that case","msgtype":"m.text"},"ts":1445637286000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh, i don't think we'd want the overhead of turning HTMLInputElement into a proxy, if that's what you're referring to?","msgtype":"m.text"},"ts":1445637360000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Domenic: i would be a very happy camper if we got sequence_with_item<> in WebIDL. Or if ES Arrays grew a .item() function. Though the latter is probably not web compatible given that even adding .contains() wasn't possible.","msgtype":"m.text"},"ts":1445638003000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Domenic: hmm... we probably need FrozenArrrayWithItem actually","msgtype":"m.text"},"ts":1445638054000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: It's just getter/setter pairs in JS. WebIDL supports it.  All \"attributes\" in WebIDL are actually getter/setter pairs when translated to JS, too.","msgtype":"m.text"},"ts":1445639130000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok, this is some WebIDL feature I don't know about then","msgtype":"m.text"},"ts":1445639156000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Again, this isn't WebIDL. It's JS. WebIDL just supports it.","msgtype":"m.text"},"ts":1445639172000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't know what you mean by \"WebIDL just supports it\"","msgtype":"m.text"},"ts":1445639192000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i know JS has getters and setters. That doesn't mean that webidl can do what Dominic is asking for","msgtype":"m.text"},"ts":1445639213000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"WebIDL has syntax to express it.","msgtype":"m.text"},"ts":1445639219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if that's the case, then that's some WebIDL feature that I don't know about","msgtype":"m.text"},"ts":1445639236000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I'm still confused. There's nothing to \"know about\". If you know about JS getters and setters, then you know about WebIDL ones.  The only detail is the precise way to write one in an interface.","msgtype":"m.text"},"ts":1445639283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i just know about \"[readonly] attribute <type> <name>\"","msgtype":"m.text"},"ts":1445639318000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"which is not enough here","msgtype":"m.text"},"ts":1445639324000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"since Dominic was asking for different types for the getter and setter","msgtype":"m.text"},"ts":1445639339000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I'm not convinced you know about JS getters and setters here. ^_^","msgtype":"m.text"},"ts":1445639347000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1445639355000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1445639360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You just have a getter that takes a sequence, converts it to a FileList, and assigns that to the internal [[files]] slot. Then a setter that returns the [[files]] slot.","msgtype":"m.text"},"ts":1445639367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"show me the WebIDL syntax","msgtype":"m.text"},"ts":1445639377000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i know perfectly well that JS suppots this","msgtype":"m.text"},"ts":1445639401000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i haven't claimed otherwise","msgtype":"m.text"},"ts":1445639404000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Okay, I'm the stupid one here.  I'm recalling a WebIDL bug that heycam hasn't fixed yet. IDL getter/setter is for proxies. Ugh.","msgtype":"m.text"},"ts":1445639503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1445639545000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Sorry about that.","msgtype":"m.text"},"ts":1445639560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no worries, glad we came to clarity :)","msgtype":"m.text"},"ts":1445639577000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"tuning in late, but sicking: stats show it'll be difficult to remove .items() on the DSL from Location.ancestorOrigins and .contains() on the DSLs from IndexedDB :(","msgtype":"m.text"},"ts":1445644101000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"(i.e. yeah, sequence_with_XXX<> looks necessary)","msgtype":"m.text"},"ts":1445644160000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I'll mail webapps when I have cycles to care","msgtype":"m.text"},"ts":1445644173000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: yup. That was my expectation","msgtype":"m.text"},"ts":1445644176000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: heh","msgtype":"m.text"},"ts":1445644184000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: Gecko is blocked by still not supporting subclassing Array as I understand it","msgtype":"m.text"},"ts":1445644200000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"once that is possible I'd like to simply switch a few classes over rather than waiting for WebIDL to catch up","msgtype":"m.text"},"ts":1445644254000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"We welcome your implementation feedback. ;-)","msgtype":"m.text"},"ts":1445644287000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"cool :)","msgtype":"m.text"},"ts":1445644308000,"senderName":"sicking","senderId":"sicking@irc"}
]