[
{"content":{"body":"browsers very challenging to use when they don't show a busy pointer","msgtype":"m.text"},"ts":1397608421000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"click link, nothing happens, wonder","msgtype":"m.text"},"ts":1397608433000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: not sure if relevant but http://krijnhoetmer.nl/irc-logs/whatwg/20140412#l-231","msgtype":"m.text"},"ts":1397608520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: how does that work when there is no pointer to start with","msgtype":"m.text"},"ts":1397608598000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I bet mobile users hate imagemaps even more than desktop users do ;-)","msgtype":"m.text"},"ts":1397608621000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's a problem for those platforms, if I'm on a platform with a mouse (or equivalent), it needs to show that it heard my click","msgtype":"m.text"},"ts":1397608642000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(was looking for that link above, and getting irritated at clicking links on that page, and not being able to tell naturally whether it was network lag or just me fatfingering the touchpad)","msgtype":"m.text"},"ts":1397608700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm, don't they usually replace the favicon with a throbber too?","msgtype":"m.text"},"ts":1397608703000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's not an alternative--that's not where I'm looking when I click","msgtype":"m.text"},"ts":1397608715000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":".","msgtype":"m.text"},"ts":1397610649000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":".","msgtype":"m.text"},"ts":1397610691000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1397610733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"slightlyoff: can you let Takuya know I'm downstairs?","msgtype":"m.text"},"ts":1397614981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: Did you see I reviewed your worker changes?","msgtype":"m.text"},"ts":1397654066000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: nope. lost focus of critic","msgtype":"m.text"},"ts":1397654097000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: thanks","msgtype":"m.text"},"ts":1397654100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: For the record, I am still seeing some instability in /html/infrastructure/urls/resolving-urls/query-encoding/* and /websockets/unload-a-document/[005|003].html","msgtype":"m.text"},"ts":1397654804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: do you have more details for query-encoding?","msgtype":"m.text"},"ts":1397654844000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"n.onshow = () => setTimeout(() => n.close(), 7000) <- this syntax is not even remotely okay","msgtype":"m.text"},"ts":1397655218000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"stop taking one of the syntactically cleaner languages and making it gross","msgtype":"m.text"},"ts":1397655243000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gets off zewt's lawn","msgtype":"m.emote"},"ts":1397655264000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: TEST-UNEXPECTED-FAIL | /html/infrastructure/urls/resolving-urls/query-encoding/utf-16be.html | loading image <video poster> | expected PASS | assert_equals: expected substring %C3%A5 got undefined expected 2 but got 24","msgtype":"m.text"},"ts":1397655663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TEST-UNEXPECTED-FAIL | /html/infrastructure/urls/resolving-urls/query-encoding/utf-16le.html | loading image <video poster> | expected PASS | assert_equals: expected substring %C3%A5 got undefined expected 2 but got 24","msgtype":"m.text"},"ts":1397655667000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TEST-UNEXPECTED-FAIL | /html/infrastructure/urls/resolving-urls/query-encoding/utf-8.html | loading image <video poster> | expected PASS | assert_equals: expected substring %C3%A5 got undefined expected 2 but got 24","msgtype":"m.text"},"ts":1397655671000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TEST-UNEXPECTED-FAIL | /html/infrastructure/urls/resolving-urls/query-encoding/windows-1252.html | hyperlink auditing <area ping> | expected TIMEOUT | assert_unreached: Reached poll timeout Reached unreachable code","msgtype":"m.text"},"ts":1397655694000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TEST-UNEXPECTED-FAIL | /html/infrastructure/urls/resolving-urls/query-encoding/utf-16be.html | CSS <link> (utf-8) #<id>::before { content:<url> } | expected PASS | assert_unreached: Reached poll timeout Reached unreachable code","msgtype":"m.text"},"ts":1397655714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: webvtt in http://platform.html5.org should have the link updated","msgtype":"m.text"},"ts":1397655763000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That's from 3 runs, so it isn't really telling you much about low-frequency failures","msgtype":"m.text"},"ts":1397655777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: for <area ping> do you think there's a race between the test timing out and the xhr interval timing out? (maybe it can set the result to TIMEOUT instead?)","msgtype":"m.text"},"ts":1397655906000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: that test would reliably FAIL if gecko didn't lie about supporting it","msgtype":"m.text"},"ts":1397655929000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, that's a plausible race","msgtype":"m.text"},"ts":1397655948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess it's *possible* to set the status to timeout, but it's not really supported","msgtype":"m.text"},"ts":1397656077000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: fixed","msgtype":"m.text"},"ts":1397656378000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"“consensus is the lack of leadership”","msgtype":"m.text"},"ts":1397656519000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from http://gigaom.com/2014/04/12/why-i-quit-writing-internet-standards/","msgtype":"m.text"},"ts":1397656532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"attributed to Margaret Thatcher","msgtype":"m.text"},"ts":1397656544000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: ↑","msgtype":"m.text"},"ts":1397656575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well","msgtype":"m.text"},"ts":1397656584000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"My seven years on the Internet Engineering Task Force (IETF), ...\"","msgtype":"m.text"},"ts":1397656593000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"was that Maggie channelling Hixie? :)","msgtype":"m.text"},"ts":1397656640000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Who's the best person to bug about fonts, their dimensions, \"ex\" and \"ch\" units and media queries?","msgtype":"m.text"},"ts":1397656680000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Let's just say TabAtkins","msgtype":"m.text"},"ts":1397656740000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yoav: I agree with Ms2ger","msgtype":"m.text"},"ts":1397656878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I smell a consensus emerging","msgtype":"m.text"},"ts":1397656894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"consensus is good. Is there a use case as well?","msgtype":"m.text"},"ts":1397656916000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: Does this help? http://dev.w3.org/csswg/mediaqueries/#units second paragraph","msgtype":"m.text"},"ts":1397656920000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yoav, no, consensus is the lack of leadership ;)","msgtype":"m.text"},"ts":1397656966000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yoav: a use case for TabAtkins?","msgtype":"m.text"},"ts":1397656977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: I'm not sure I understand what does it mean for 'ex' and 'ch'. Is there a default value for them? (like the default font size is for 'em')","msgtype":"m.text"},"ts":1397657031000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"well, let’s look at their definition","msgtype":"m.text"},"ts":1397657096000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"http://dev.w3.org/csswg/css-values/#font-relative-lengths \"ch unit: Equal to the used advance measure of the \"0\" (ZERO, U+0030) glyph found in the font used to render it.\"","msgtype":"m.text"},"ts":1397657122000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"so you do that with the initial value of font-family, font-size, font-weight, etc","msgtype":"m.text"},"ts":1397657159000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"in other words, as in a document with no style (including UA) applied","msgtype":"m.text"},"ts":1397657224000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"'ex' has a default value if there's no font around - it's .5em.","msgtype":"m.text"},"ts":1397657227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"'ch' doens't have a value without a font, and that's a bug.","msgtype":"m.text"},"ts":1397657238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I’m not the .5em thing applies to MQs","msgtype":"m.text"},"ts":1397657287000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I’m not convinced*","msgtype":"m.text"},"ts":1397657291000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Why wouldn't it? It's for when the font doesn't tell you an 'ex' size.","msgtype":"m.text"},"ts":1397657312000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which I suspect would include when there's no font at all.","msgtype":"m.text"},"ts":1397657323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin & TabAtkins: So, in the context of Media queries, I'd need to get the default browser font, and get the metrics from it?","msgtype":"m.text"},"ts":1397657337000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"there is a font, the initial value of font-family","msgtype":"m.text"},"ts":1397657338000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"yoav: I think so, but TabAtkins seems to disagree","msgtype":"m.text"},"ts":1397657358000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Ugh, I guess so, but that's ugly and not very useful.","msgtype":"m.text"},"ts":1397657361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ex is ugly in any case, but meh","msgtype":"m.text"},"ts":1397657398000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ex is a useful unit; you hush your mouth.","msgtype":"m.text"},"ts":1397657428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Impl wise, if I have to take a shortcut around their calculation for MQs","msgtype":"m.text"},"ts":1397657438000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: 1ex = 0.5em is valid per spec if you don’t want to bother doing all this","msgtype":"m.text"},"ts":1397657443000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"impractical\"","msgtype":"m.text"},"ts":1397657449000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"What do I do as a default value for 'ch'?","msgtype":"m.text"},"ts":1397657465000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'll bring it up in the call this morning and edit the spec.","msgtype":"m.text"},"ts":1397657481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It'll probably be .5em as well.","msgtype":"m.text"},"ts":1397657488000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what do implementations do?","msgtype":"m.text"},"ts":1397657509000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: Sounds great!","msgtype":"m.text"},"ts":1397657511000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"SimonSapin: No clue. Not sure who implements 'ch' yet.","msgtype":"m.text"},"ts":1397657532000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I’ll try and make a test case for ex in MQs","msgtype":"m.text"},"ts":1397657565000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Well, Blink implements it.  Let's see...","msgtype":"m.text"},"ts":1397657578000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Blink has a zeroWidth() on the platform's fontMetrics","msgtype":"m.text"},"ts":1397657604000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"But calling it triggers some weird witchcraft, which makes it impossible for me the cache it just before starting a new thread and passing the value to that thread","msgtype":"m.text"},"ts":1397657642000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Looks like this zeroWidth is set by looking at the actual glyphs","msgtype":"m.text"},"ts":1397657779000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"TabAtkins: I think I'd be able to get these values into where I need them at some point, but I'd love a reasonable default I can use to substitute them in the mean time","msgtype":"m.text"},"ts":1397657852000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":".5em is definitely a reasonable default for both of them, even if it's just a temporary value that you'll fix later.","msgtype":"m.text"},"ts":1397657882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(min-width: 100ex) and (min-width: 50em) switch at different points on Gecko and Blink on my system http://result.dabblet.com/gist/10883309/fc063ef48196cedcbd457f1609de1e4041e9d5d9","msgtype":"m.text"},"ts":1397658060000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: I’m fine with allowing 1ch = .5em \"where it is impossible or impractical to determine\" like ex, but not with \"it must be .5em in MQs\"","msgtype":"m.text"},"ts":1397658194000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm okay with that.","msgtype":"m.text"},"ts":1397658227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Based on initial testing, Blink uses the real value of 'ex' in MQs, but doesn't support 'ch' at all yet.","msgtype":"m.text"},"ts":1397658712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i find not supporting 'ch' at all bettre than 0.5em","msgtype":"m.text"},"ts":1397658952000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: the Writing section of the URL spec doesn't specify what code points are valid in a schem","msgtype":"m.text"},"ts":1397658970000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at least in the preloader context","msgtype":"m.text"},"ts":1397658974000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e","msgtype":"m.text"},"ts":1397658975000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: At least in Chrome's default serif font, 1ch exactly equals .5em.","msgtype":"m.text"},"ts":1397659052000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: \"A scheme must be one ASCII alpha, followed by zero or more of ASCII alphanumeric, \"+\", \"-\", and \".\". A scheme must be registered ....\"","msgtype":"m.text"},"ts":1397659123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah but what if it isn't and you have breakpoints where you care about 'ch' specifically, it would be bad if the preloader thinks one thing and later evaluations think another","msgtype":"m.text"},"ts":1397659236000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Right, if you have sufficient knowledge to do better, you should do better.","msgtype":"m.text"},"ts":1397659258000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gotta go","msgtype":"m.text"},"ts":1397659352000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: oh I missed that somehow","msgtype":"m.text"},"ts":1397659441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Is there anything aside from AppCache that can be used to determine if a cross-origin url looks like a 200?","msgtype":"m.text"},"ts":1397662571000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I have no idea about context, but do you mean \"in the absence of CORS\"?","msgtype":"m.text"},"ts":1397662712000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah","msgtype":"m.text"},"ts":1397662725000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: aah, cross-origin...","msgtype":"m.text"},"ts":1397662766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure about arbitary urls but <img> and <script> could be used for resources with known behaviour","msgtype":"m.text"},"ts":1397662806000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Trying to work out what to do for serviceworker caches. Either follow AppCache and consider 4xx 5xx a failure, or consider that AppCache feature an error that shouldn't be repeated","msgtype":"m.text"},"ts":1397662825000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: Good point, CSS too.","msgtype":"m.text"},"ts":1397662859000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'll be working with Moz on their SW implementation. Essentially on the testing part + API feedback","msgtype":"m.text"},"ts":1397663405000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"Oh cool!","msgtype":"m.text"},"ts":1397663426000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we should sync on the testing front to make sure we don't dup the effort.","msgtype":"m.text"},"ts":1397663453000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"tobie_: Agreed. I'm not at that stage yet (still sorting out the algorithms), don't suppose you're posting to a mailing list?","msgtype":"m.text"},"ts":1397663539000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie_: We're starting a collection of testharness.js tests for SW as we move into end-to-end testable territory.","msgtype":"m.text"},"ts":1397663558000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: are you writing those locally or directly against the W3C repo?","msgtype":"m.text"},"ts":1397663597000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"tobie_, jsbell: \\o/","msgtype":"m.text"},"ts":1397663617000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tobie_: Locally for now due to churn, but we'll move them to W3C eventually","msgtype":"m.text"},"ts":1397663634000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I am avaliable for all your test automation / infrastructure needs","msgtype":"m.text"},"ts":1397663662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ericc: so i have a text track question for you.","msgtype":"m.text"},"ts":1397663678000,"senderName":"jernoble|laptop","senderId":"jernoble|laptop@irc"},
{"content":{"body":"For now just in https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/LayoutTests/http/tests/serviceworker/","msgtype":"m.text"},"ts":1397663680000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jgraham: awesome. SW lifecycle makes testing a tad challenging","msgtype":"m.text"},"ts":1397663762000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"Will have to dig more before I can meaningfully ask for help.","msgtype":"m.text"},"ts":1397663801000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"speaking of testharness.js - step_func doesn't propagate the return value through so you can't use it in a Promise chain. Should we fix?","msgtype":"m.text"},"ts":1397663812000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"tobie_: Yep, I expect there could be some challenges","msgtype":"m.text"},"ts":1397663824000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jsbell: Fixes to make testharness.js better for promise APIs would be awesome","msgtype":"m.text"},"ts":1397663844000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jsbell: thanks for the link.","msgtype":"m.text"},"ts":1397663862000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"I notice that zcorpan reviewed https://critic.hoppipolla.co.uk/r/1151 so I will fix that up. Might make writing some tests a little bit easier.","msgtype":"m.text"},"ts":1397663899000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: what's the preferred place to discuss Sw?","msgtype":"m.text"},"ts":1397663902000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"jgraham: I'll see if it's as simple as I think, then make a PR","msgtype":"m.text"},"ts":1397663905000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"tobie_: If it's an isuse, https://github.com/slightlyoff/ServiceWorker/issues/. For general stuff, public-webapps I guess","msgtype":"m.text"},"ts":1397663975000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1397663988000,"senderName":"tobie_","senderId":"tobie_@irc"},
{"content":{"body":"JakeA: SW's Unregister rejects if the registration is not found. That makes it non-idempotent, and unlike e.g. Indexed DB. Is there a strong reason for that?","msgtype":"m.text"},"ts":1397669025000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: No strong opinion on that one. Means you won't be able to tell the difference between a successful unregistration & a typo in the scope, but consistency sounds better","msgtype":"m.text"},"ts":1397669251000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll file a bug.","msgtype":"m.text"},"ts":1397669273000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Cheers, if there's no complaints I'll fix that tomorrow (going to get rid of algorithms.md and just add them to the spec)","msgtype":"m.text"},"ts":1397669340000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(still can't spell algorithms without a spellcheck)","msgtype":"m.text"},"ts":1397669356000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/233 - thanks.","msgtype":"m.text"},"ts":1397669544000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"annevk, do you still think that maintaning a check for Blob closure in the read operation for Blob objects is wrong? That is http://dev.w3.org/2006/webapi/FileAPI/#readOperationSection","msgtype":"m.text"},"ts":1397671477000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"tobie_: So, this ServiceWorker thing is pretty new and big. Thinking about what we can do for user-support & want it to be a cross-browser effort","msgtype":"m.text"},"ts":1397671481000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie_: Any objections to an IRC room, mailing list & StackOverflow attack?","msgtype":"m.text"},"ts":1397671523000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"arunranga: what is it going to do? return the empty byte sequence?","msgtype":"m.text"},"ts":1397671562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, no; it should return failure along with a termination reason.","msgtype":"m.text"},"ts":1397671598000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, I don’t think returning the emtpy byte sequence was the right choice.","msgtype":"m.text"},"ts":1397671615000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"could you use that in other places, including parse/fetch and formdata?","msgtype":"m.text"},"ts":1397671646000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"JakeA: mailing list vs. stackoverflow has historically been a tricky balance","msgtype":"m.text"},"ts":1397671719000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk, basically we’re fleshing out the model in https://www.w3.org/Bugs/Public/show_bug.cgi?id=25302#c9","msgtype":"m.text"},"ts":1397671767000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"arunranga: I don't understand that model, you have a function that's supposedly async, but sometimes synchronously returns?","msgtype":"m.text"},"ts":1397671775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: how does that make sense?","msgtype":"m.text"},"ts":1397671779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: I know. Just been thinking about that. Maybe take mailing list threads and turn them into SO q&a, but maybe they consider that an abuse of SO.","msgtype":"m.text"},"ts":1397671793000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk, you proposed a wrapper for closure check within that function.","msgtype":"m.text"},"ts":1397671805000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, unless you want closure checks within individual APIs, and not on the read operation","msgtype":"m.text"},"ts":1397671822000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, I guess the real question is where the closure check should happen.","msgtype":"m.text"},"ts":1397671972000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"arunranga: if you sometimes sync return, all callers will need to check anyway, so I'm not sure how you're helping by making it weird","msgtype":"m.text"},"ts":1397671973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: you'll need to through the various scenarios, and figure out what the best model would be for the programmer","msgtype":"m.text"},"ts":1397672291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: as long as it's a well-defined Q&A then you can definitely do that. Answering your own questions is a good thing. People in #promises do that sometimes when we see a FAQ","msgtype":"m.text"},"ts":1397672298000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"arunranga: e.g. should closed blobs fail silently generally or fail hard","msgtype":"m.text"},"ts":1397672307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: once you've sorted that out you can figure out a set of concepts for APIs that take blobs to use","msgtype":"m.text"},"ts":1397672337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: btw, one thing I was wondering about is whether we could expose .status even for OpaqueResponse","msgtype":"m.text"},"ts":1397672377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that way you'd know something is being redirected or some such","msgtype":"m.text"},"ts":1397672403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and you could implement AppCache as polyfill?","msgtype":"m.text"},"ts":1397672414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The more info like that we can expose, the better. Ran that past any security people?","msgtype":"m.text"},"ts":1397672509000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: given that it's already exposed...","msgtype":"m.text"},"ts":1397672596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and the bit of the redirect we'd expose is not the thing that's vulnerable","msgtype":"m.text"},"ts":1397672613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Wellllll, appcache gives you \"it worked\" or \"it didn't work\", where \"it didn't work\" could be 4xx, 5xx. But it doesn't tell you which","msgtype":"m.text"},"ts":1397672657000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It might be useful to expose the strings \"4xx\" or \"5xx\" even","msgtype":"m.text"},"ts":1397672695000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: fair, and I guess we rather not expose it at all","msgtype":"m.text"},"ts":1397672698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".status is a number","msgtype":"m.text"},"ts":1397672710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as if JavaScript cares ;)","msgtype":"m.text"},"ts":1397672721000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"given that people do comparison with < and >, I do","msgtype":"m.text"},"ts":1397672739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still works with strings!","msgtype":"m.text"},"ts":1397672748000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(well, not very well)","msgtype":"m.text"},"ts":1397672799000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Having cache.add reject if things are 4xx, 5xx, or cross-origin redirect is enough for most things","msgtype":"m.text"},"ts":1397672838000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"An option-bag on new Cache() could be used to change those behaviours","msgtype":"m.text"},"ts":1397672868000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk, there are actually standard synchronous checks for files on disk that won’t be accounted for in the read operation then.","msgtype":"m.text"},"ts":1397672919000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, this also includes snapshot state and other things.","msgtype":"m.text"},"ts":1397672927000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, individual methods will have to do those. The idea of a ‘reusable’ read operation won’t be that useful then. Or, individual checks will be done for files on disk but not within the read operation.","msgtype":"m.text"},"ts":1397672989000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"I have no idea what you're talking about arunranga|afk :/","msgtype":"m.text"},"ts":1397673085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga|afk: the whole point is that read runs in the background, just like fetch... you'll need to elaborate","msgtype":"m.text"},"ts":1397673127000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, a read operation should “fail hard” for a closed blob. That check is synchronous, but clearly can’t be done within the read operation itself. Also, a read operation should fail if the file has changed on disk.","msgtype":"m.text"},"ts":1397673263000,"senderName":"arunranga|afk","senderId":"arunranga|afk@irc"},
{"content":{"body":"annevk, that’s what I mean. It’s clear these checks can’t be spec’d in a read operation, so APIs have to individually run these checks. I’m happy with that; I tried to see if we could put it in one place place","msgtype":"m.text"},"ts":1397673321000,"senderName":"arunranga|afk","senderId":"arunranga|afk@irc"},
{"content":{"body":"arunranga|afk: I think you need to do some more archeology of how file read actually works","msgtype":"m.text"},"ts":1397673374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: the whole operation should be async","msgtype":"m.text"},"ts":1397673381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: presumably there's bits where it can fail, e.g. if the file was moved","msgtype":"m.text"},"ts":1397673392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: that could happen while reading as well","msgtype":"m.text"},"ts":1397673408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: so you'll have to explain what happens to the bytes that have already been read, and whether anything is signified at that point, etc.","msgtype":"m.text"},"ts":1397673429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like streeeeeams","msgtype":"m.text"},"ts":1397673503000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"uhuh","msgtype":"m.text"},"ts":1397673513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like Domenic_ found his hammer","msgtype":"m.text"},"ts":1397673523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahaha","msgtype":"m.text"},"ts":1397673527000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"*new* hammer","msgtype":"m.text"},"ts":1397673532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so true","msgtype":"m.text"},"ts":1397673533000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah i needed a new hammer","msgtype":"m.text"},"ts":1397673541000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk, sure, but if there’s a hard fail on closure, and that check is synchronous, it can’t be done within the read operation.","msgtype":"m.text"},"ts":1397673545000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"And Fx currently proposes a snapshot state check that isn’t asynchronous.","msgtype":"m.text"},"ts":1397673563000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"I think my archaeology is probably ok.","msgtype":"m.text"},"ts":1397673584000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"I think your insistence on a read operation that’s reusable is good. I’m not sure how some checks can be included within it. That’s fine; FileReader will have to have its own API level checks.","msgtype":"m.text"},"ts":1397673614000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"Or maybe a task can determine this fail.","msgtype":"m.text"},"ts":1397673683000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"Domenic_ it does sound like streams","msgtype":"m.text"},"ts":1397673692000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"(screams/streams)","msgtype":"m.text"},"ts":1397673701000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"arunranga: I am not sure streams can help, since this is largely an existing API/paradigm but ... maybe you could conceptualize how it would work if that existing API was built on top of a stream instance?","msgtype":"m.text"},"ts":1397673728000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(I don't really understand the problem being talked about, but people started talking about sync vs. async I/O and bits that could fail and what happens to the bytes that have already been read, which are all questions we answered for streams)","msgtype":"m.text"},"ts":1397673808000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: the problem is basically reading from disk","msgtype":"m.text"},"ts":1397673862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: how to define that","msgtype":"m.text"},"ts":1397673868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: it seems like nonsense that FileReader would have different failures from other APIs, that should all be part of the read concept","msgtype":"m.text"},"ts":1397673901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... in a cross-platform way","msgtype":"m.text"},"ts":1397673902000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"uhuh","msgtype":"m.text"},"ts":1397673914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hammertime answer: with a ReadableStream!","msgtype":"m.text"},"ts":1397673923000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yeah, I don't really understand the difficulty, it seems like you keep consuming bytes, something may fail so you need to deal with that, and you need to present that somehow to your caller","msgtype":"m.text"},"ts":1397674007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Tasks would be the right answer.","msgtype":"m.text"},"ts":1397674023000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"what is the API under discussion? I thought it was blobs and close()","msgtype":"m.text"},"ts":1397674058000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It is! It’s blobs, close() and closure checks within a read operation.","msgtype":"m.text"},"ts":1397674085000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"what's the API for a read operation","msgtype":"m.text"},"ts":1397674098000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"FileReader, xhr.send(FormData / Blob)","msgtype":"m.text"},"ts":1397674118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't xhr.send a write?","msgtype":"m.text"},"ts":1397674134000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, FileReader is a caller for a read operation","msgtype":"m.text"},"ts":1397674142000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"So’s FormData","msgtype":"m.text"},"ts":1397674151000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"Domenic_: it's a pipe I guess","msgtype":"m.text"},"ts":1397674156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"read operation uses a Blob and reads it into memory asynchronously or synchronously","msgtype":"m.text"},"ts":1397674182000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1397674236000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk, I am probably not using tasks aggressively enough. I’ll rethink this a bit.","msgtype":"m.text"},"ts":1397674268000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk, thanks.","msgtype":"m.text"},"ts":1397674282000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"annevk is always on peoples' case about not using tasks enough ;)","msgtype":"m.text"},"ts":1397674286000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"thanks arunranga annevk for patiently explaining to me","msgtype":"m.text"},"ts":1397674296000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_, annevk is always on my case period.","msgtype":"m.text"},"ts":1397674304000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"aww","msgtype":"m.text"},"ts":1397674308000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1397674339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: FYI, for the extended appcache errors I wedged in, status = 0 for any off-origin failure (4xx, 5xx, or network error)","msgtype":"m.text"},"ts":1397674508000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"which at least garnered no objections","msgtype":"m.text"},"ts":1397674534000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"which may say more about how much everyone loves appcache than the proposal...","msgtype":"m.text"},"ts":1397674557000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: that's fair. All we need for SW is fulfill/reject and some vague ability to control what should be considered a failure","msgtype":"m.text"},"ts":1397674956000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jsbell: URL objects should just be stringified","msgtype":"m.text"},"ts":1397674967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: http://url.spec.whatwg.org/#url-apis-elsewhere re: IDBv2","msgtype":"m.text"},"ts":1397674984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not storing URLs; allowing URLs into DB. e.g. <img src=\"indexeddb:///music/album-covers/1ab2c3df\">","msgtype":"m.text"},"ts":1397675056000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1397675063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"confusing","msgtype":"m.text"},"ts":1397675069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(totally made up scheme, don't quote it)","msgtype":"m.text"},"ts":1397675070000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Sorry. Mail was unclear. Wiki link is better: http://www.w3.org/2008/webapps/wiki/IndexedDatabaseFeatures","msgtype":"m.text"},"ts":1397675113000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell, annevk, scheme proliferation continues :) there’s also a filesystem: scheme to get into the filesystem.","msgtype":"m.text"},"ts":1397675643000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"back in my day we just called that C:!!","msgtype":"m.text"},"ts":1397675708000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"arunranga: jsbell: one filesystem: scheme might be good, if we need to support relative references and such","msgtype":"m.text"},"ts":1397675851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arunranga: the less URL parser hacks the better","msgtype":"m.text"},"ts":1397675860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, you mean one scheme to rule both the indexeddb use case, and the filesystem use case?","msgtype":"m.text"},"ts":1397675920000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1397675925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, it could work.","msgtype":"m.text"},"ts":1397675962000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"Call it blobl:","msgtype":"m.text"},"ts":1397675963000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"blob:*","msgtype":"m.text"},"ts":1397675966000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"fs:/dev/idb/...","msgtype":"m.text"},"ts":1397675991000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: don't you mean \\\\lolwindows\\file","msgtype":"m.text"},"ts":1397676025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1397676038000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"all i'm sayin is that my surface pro 2 was way prettier than all those macbooks at the tag meeting","msgtype":"m.text"},"ts":1397676062000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ms2ger, I wondered about reusing blob: even for filesystem URL (which by the way is in Chrome for the old filesystem API: http://www.html5rocks.com/en/tutorials/file/filesystem/).","msgtype":"m.text"},"ts":1397676085000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"But I’m not sure now","msgtype":"m.text"},"ts":1397676118000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"I think you want some kind of URL scheme that supports relative URLs","msgtype":"m.text"},"ts":1397676180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"blob is not that","msgtype":"m.text"},"ts":1397676187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yep. I’ll bet naming is one of the few following hard problems","msgtype":"m.text"},"ts":1397676884000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"using blob urls for blobs coming from a fs API makes sense, connecting them to fs paths wouldn't","msgtype":"m.text"},"ts":1397677266000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that depends on what you want to do","msgtype":"m.text"},"ts":1397677845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt, the use case is the feature that’s already in Chrome.","msgtype":"m.text"},"ts":1397677893000,"senderName":"arunranga","senderId":"arunranga@irc"},
{"content":{"body":"zewt: but ... plan9!","msgtype":"m.text"},"ts":1397678179000,"senderName":"SamB_","senderId":"SamB_@irc"},
{"content":{"body":"Hmm, you guys know MS icon files can have more than one image in, right?  Seems like that's not very well supported on the web ...","msgtype":"m.text"},"ts":1397679299000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nothing to do with use cases, blob urls have nothing whatsoever to do with paths","msgtype":"m.text"},"ts":1397680651000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"urls for referring to paths inside a filesystem API need a different scheme","msgtype":"m.text"},"ts":1397680711000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I guess you missed the joke","msgtype":"m.text"},"ts":1397680767000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"arun was telling a joke?","msgtype":"m.text"},"ts":1397680962000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"no I was","msgtype":"m.text"},"ts":1397680996000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, okay, I follow you now","msgtype":"m.text"},"ts":1397681020000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I take it there's a problem with file:/// ?","msgtype":"m.text"},"ts":1397681110000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"paul_irish: pretty one-sided poll ;)","msgtype":"m.text"},"ts":1397681197000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i haven't followed the fs stuff, but i assume it supports sandboxed filesystems","msgtype":"m.text"},"ts":1397681246000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which wouldn't be file:","msgtype":"m.text"},"ts":1397681252000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic_: https://plus.google.com/+PaulIrish/posts/QchucJRH7BX is great","msgtype":"m.text"},"ts":1397681369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1397681388000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"ah, yes, so I see looking at the html5rocks thing","msgtype":"m.text"},"ts":1397681479000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"ponders cross-origin file access ;-P","msgtype":"m.emote"},"ts":1397681692000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, how many OSes even provide for asynchronous directory creation ...","msgtype":"m.text"},"ts":1397681904000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and ... huh ... I'm not aware of any OSes that have handles for directory entries","msgtype":"m.text"},"ts":1397682145000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and, hmm, why am I thinking that the biggest risk connected with the ability to write malicious files to disk is that a script could write a file to disk for the express purpose of triggering a warning from an antivirus program?","msgtype":"m.text"},"ts":1397682551000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, um, it could cause searches in explorer on XP to pop up that annoying dialog box it pops up for multi-volume zips ...","msgtype":"m.text"},"ts":1397682686000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"lol @ <http://www.w3.org/respec/>: \"sadly it cannot replace RFC 2119 with the more accurate RFC 6919\".","msgtype":"m.text"},"ts":1397682867000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"has anyone put forward a spec for supporting pen pressure and sub-pixel positioning?","msgtype":"m.text"},"ts":1397682936000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"tiglionabbit: are you looking to write some kind of painting/drawing program?","msgtype":"m.text"},"ts":1397682992000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that would be nice","msgtype":"m.text"},"ts":1397683003000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"currently the only way I know of to get at this information is through CelloSoft JTablet, which is a Java applet plugin","msgtype":"m.text"},"ts":1397683041000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"and nobody wants to use Java applets anymore","msgtype":"m.text"},"ts":1397683054000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"I don't imagine Android can run those?","msgtype":"m.text"},"ts":1397683072000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"chrome for mac can’t even run them","msgtype":"m.text"},"ts":1397683132000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"nor can chrome for chromebooks","msgtype":"m.text"},"ts":1397683146000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1397683205000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"... isn't there a standard API for JVM plugins?","msgtype":"m.text"},"ts":1397683232000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"sure, but chrome only distributes a 32-bit version, and java only distributes 64-bit","msgtype":"m.text"},"ts":1397683265000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"by which I mean \"whatever Mozilla has been using\"","msgtype":"m.text"},"ts":1397683267000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"ah!","msgtype":"m.text"},"ts":1397683270000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1397683273000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway, has anyone made a spec for this?","msgtype":"m.text"},"ts":1397683326000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"that actually rings a bell for some reason; can't think why as I haven't even messed with any x86 macs that much","msgtype":"m.text"},"ts":1397683328000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"can I get involved with this somehow?","msgtype":"m.text"},"ts":1397683378000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"sorry, was talking about the mac java thing ...","msgtype":"m.text"},"ts":1397683417000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"pointer events?","msgtype":"m.text"},"ts":1397683610000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"tiglionabbit: you could start with hit testing","msgtype":"m.text"},"ts":1397683808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what’s that?","msgtype":"m.text"},"ts":1397683817000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"tiglionabbit: http://lists.w3.org/Archives/Public/www-style/2010Aug/0407.html","msgtype":"m.text"},"ts":1397683819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tiglionabbit: it's kind of critical for any kind of cursor input, except we've no idea how it works on the web","msgtype":"m.text"},"ts":1397683854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eh?","msgtype":"m.text"},"ts":1397683869000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"I’ve never noticed a problem with this","msgtype":"m.text"},"ts":1397683937000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"I’d be much more interested in getting tablet pen events","msgtype":"m.text"},"ts":1397683952000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"or, extending the existing events with the tablet pen properties of pressure and sub-pixel position","msgtype":"m.text"},"ts":1397683978000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"i think pointer events have this","msgtype":"m.text"},"ts":1397684090000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1397684098000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"pretty sure, but you should check the spec","msgtype":"m.text"},"ts":1397684111000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: really? no idea?","msgtype":"m.text"},"ts":1397684127000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1397684162000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"unfortunately only supported by IE11 apparently","msgtype":"m.text"},"ts":1397684197000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"well at least there’s hope","msgtype":"m.text"},"ts":1397684214000,"senderName":"tiglionabbit","senderId":"tiglionabbit@irc"},
{"content":{"body":"my good deed for the day https://github.com/webcomponents/webcomponents.github.io/issues/96","msgtype":"m.text"},"ts":1397684311000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"SamB: see the email, I'm making it worse than it sounds, but there's no standard, which is pretty bad","msgtype":"m.text"},"ts":1397684460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: CSS box tree not being defined in detail contributes to this of course","msgtype":"m.text"},"ts":1397684481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: maybe you want to start there if you are doing it from first principles...","msgtype":"m.text"},"ts":1397684500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hear TabAtkins is on it ^_^","msgtype":"m.text"},"ts":1397684522000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"tiglionabbit: pointer events are being implemented in other engines","msgtype":"m.text"},"ts":1397685340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, I think not webkit, but elsewhere","msgtype":"m.text"},"ts":1397685349000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"SamB: all OS's support async directory creation; you just do it in a thread","msgtype":"m.text"},"ts":1397685619000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh. right.","msgtype":"m.text"},"ts":1397685638000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(i think windows does support doing every FS operation async with the \"overlapped\" API)","msgtype":"m.text"},"ts":1397685640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"cwilso_____: see also http://lists.w3.org/Archives/Public/public-webapps/2012OctDec/thread.html#msg543 and such","msgtype":"m.text"},"ts":1397685643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: yes I did get that impression when I looked at their APIs last","msgtype":"m.text"},"ts":1397685670000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(it may just create a thread behind the scenes)","msgtype":"m.text"},"ts":1397685677000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or heck it could just not do it asynchronously","msgtype":"m.text"},"ts":1397685705000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"doubt that","msgtype":"m.text"},"ts":1397685726000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it'd become really obvious as soon as you do something on a dirty CD","msgtype":"m.text"},"ts":1397685743000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the overlapped API is nasty enough that i'd just do it myself with a thread, though","msgtype":"m.text"},"ts":1397685765000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: yep, I'd say abarth and I do not completely agree there.","msgtype":"m.text"},"ts":1397686127000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"I do agree it should be clear where any spec text came from","msgtype":"m.text"},"ts":1397686140000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"(and whose work it is)","msgtype":"m.text"},"ts":1397686148000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"yeah, everyone says that","msgtype":"m.text"},"ts":1397686159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"canonicality is a tough one.","msgtype":"m.text"},"ts":1397686161000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"lots of nice talk","msgtype":"m.text"},"ts":1397686166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"little walk","msgtype":"m.text"},"ts":1397686169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1397686171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because.... coming back to what I said like 9 years ago when Hixie et al asked me to join the whatwg effort... there's no IP fence of any kind around the WHATWG spec.","msgtype":"m.text"},"ts":1397686211000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"because no one adds that text, you mean?","msgtype":"m.text"},"ts":1397686222000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"If so, that's messed up.","msgtype":"m.text"},"ts":1397686234000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"(And I do agree with abarth quite strongly that \" the document should clearly state that it is based in part (or in whole) on the WHATWG version. \"","msgtype":"m.text"},"ts":1397686279000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"\"the WHATWG spec\"?","msgtype":"m.text"},"ts":1397686288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/WHATWG spec/WHATWG work.","msgtype":"m.text"},"ts":1397686320000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"annevk: you want it under a license that requires attribution, instead of a PD declaration?","msgtype":"m.text"},"ts":1397686333000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, er, cwilso","msgtype":"m.text"},"ts":1397686340000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"because the W3C likes to pretend the WHATWG doesn't really exist","msgtype":"m.text"},"ts":1397686341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, the work mode of the W3C engenders some kind of shared IP promise.","msgtype":"m.text"},"ts":1397686341000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"sometimes confuses people whose nicks have the same length and capitalization pattern, especially if they get colored similarly in his client ...","msgtype":"m.emote"},"ts":1397686373000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1397686384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was confused","msgtype":"m.emote"},"ts":1397686386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thinks that's the first time annevk and he have been confused, and think he's probably more offended than me.","msgtype":"m.emote"},"ts":1397686406000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"hmm, now what's a license that requires attribution but isn't too long? expat license looks a bit long to include on spec pages ...","msgtype":"m.text"},"ts":1397686645000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"samb: was the question to me \"do you want it under a license that requires attribution, instead of a PD declaration?\"  if so, what's \"it\"?","msgtype":"m.text"},"ts":1397686741000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"the WHATWG stuff","msgtype":"m.text"},"ts":1397686757000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, GNU has a nice short one in (info \"(maintain)License Notices for Other Files\")","msgtype":"m.text"},"ts":1397686910000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Copying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved.  This file is offered as-is, without any warranty.","msgtype":"m.text"},"ts":1397687000000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"except maybe that's actually a copyleft by accident?","msgtype":"m.text"},"ts":1397687010000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: cwilso is not concerned with the license","msgtype":"m.text"},"ts":1397687068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't need anything to change.  :P","msgtype":"m.text"},"ts":1397687079000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"was just thinking some kind of license requirement would be a reasonable way of ensuring that the W3C don't \"forget\" to attribute something ...","msgtype":"m.emote"},"ts":1397687160000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"!schools","msgtype":"m.text"},"ts":1397687215000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"SamB: requiring something from the W3C would also require something from others, the latter would be bad","msgtype":"m.text"},"ts":1397687216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: I think the main problem with UI events, btw, is the interaction between them","msgtype":"m.text"},"ts":1397687499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: e.g. in one task you hit test, dispatch mouseX, check for cancelled, then what? what about focus? what about :hover at this point? etc.","msgtype":"m.text"},"ts":1397687540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, okay, probably that's not the right form of attribution; maybe something that could be satisfied by simply saying \"From WHATWG html:\"","msgtype":"m.text"},"ts":1397687575000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic_: and now it's not just mouse and focus, but also pointer, and \"indie UI\", and if you're unlucky, touch","msgtype":"m.text"},"ts":1397687588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: I don't think the W3C should copy in the first place","msgtype":"m.text"},"ts":1397687655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: if they want to make lawyer snapshots so they get IP protection fine, but they're not doing that","msgtype":"m.text"},"ts":1397687670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what exactly ARE they doing besides cutting features they think are unstable or something like that?","msgtype":"m.text"},"ts":1397687733000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: they're causing confusion and wasting resources","msgtype":"m.text"},"ts":1397687836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SamB: HTML and 2D <canvas> are probably worst","msgtype":"m.text"},"ts":1397687894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, they're copying others?","msgtype":"m.text"},"ts":1397687918000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Yes, most of http://www.whatwg.org/specs/ is copied in one way or another","msgtype":"m.text"},"ts":1397687959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"info Domenic_","msgtype":"m.text"},"ts":1397688364000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"whoops, sorry","msgtype":"m.text"},"ts":1397688370000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"Domenic_: I would like more info from you, though :P, if you can respond to http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2014-April/254147.html","msgtype":"m.text"},"ts":1397688416000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"full disclosure, I'm implementing this in blink -- https://chromiumcodereview.appspot.com/228783007/","msgtype":"m.text"},"ts":1397688451000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"annevk: \"make the lawyer snapshots so they get IP protection\" is a horribly, dangerously naive view of IP.","msgtype":"m.text"},"ts":1397688820000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"if the W3C group truly only C&P'ed WHATWG specs, no one would be in the WGs.  And there would be no IP commitments.","msgtype":"m.text"},"ts":1397688873000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"Domenic_: crazy results on that poll, yeah.","msgtype":"m.text"},"ts":1397688894000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"cwilso: the dog & pony show they put up now is a horrible waste of resources","msgtype":"m.text"},"ts":1397688910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish it wasn't so damn uneven. I'm sure that with less experienced developers it'd flop the more to seconds, though. :/","msgtype":"m.text"},"ts":1397688922000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: is it actually s instead of ms? (assuming you're talking about that animation poll)","msgtype":"m.text"},"ts":1397688924000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"danbeam: yes elem.animate() from web animations API defines duration in seconds, yah","msgtype":"m.text"},"ts":1397688947000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"Domenic_: paul_irish: note that media elements use seconds (iirc)","msgtype":"m.text"},"ts":1397688956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: paul_irish: I think based on feedback from Apple","msgtype":"m.text"},"ts":1397688977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"paul_irish: considering there's probably not an animation in all of chrome (native or web) that's over 1s, I do find that kind of odd","msgtype":"m.text"},"ts":1397688984000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"yeah, media apis and web audio.","msgtype":"m.text"},"ts":1397689006000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"yeah I'd imagine 80% of all css animations are <1s.","msgtype":"m.text"},"ts":1397689042000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"annevk: not really a dog and pony show, more of a \"maimed and angry cat parade\"","msgtype":"m.text"},"ts":1397689060000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"paul_irish: I'd say that's because most animations in CSS are transitions which are inherently short","msgtype":"m.text"},"ts":1397689066000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"paul_irish: that, in itself, should probably enough to make the default unit milliseconds instead of seconds, audio/media should be much longer so seconds makes more sense there","msgtype":"m.text"},"ts":1397689101000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"aye. so likely avg duration in keyframe animations is longer. seems legit.","msgtype":"m.text"},"ts":1397689122000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"but obviously it's not the end of the world if I have to do .2 instead of 200","msgtype":"m.text"},"ts":1397689123000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"paul_irish: but the use-case for @keyframes was more about longer-run effects, I think. in practice it's been rare thus far because transition effects was really the one everybody wanted","msgtype":"m.text"},"ts":1397689143000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"paul_irish: then there's also the spinner/throbber type @keyframes that may last 1s *per cycle* but are meant to go for as long as it takes....","msgtype":"m.text"},"ts":1397689213000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"danbeam: sgalineau: actually in Web Audio many durations are short (most are \"transitions\" (i.e. scheduled ramps)).  But WA units are definitively floating point, and use of ms was heavily ingrained due to \"usable precision in an integer unit\".","msgtype":"m.text"},"ts":1397689278000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"cwilso: yeah, something like audio strikes me as implying units more precise than seconds","msgtype":"m.text"},"ts":1397689322000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"cwilso: or at a minimum support for fractional values","msgtype":"m.text"},"ts":1397689345000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"audio time should just be 64-bit seconds","msgtype":"m.text"},"ts":1397689346000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: hope you mean 64-bit FLOAT seconds","msgtype":"m.text"},"ts":1397689392000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"it's particularly silly to use ms if you still have to use floats, and integer milliseconds aren't precise enough for some audio use cases","msgtype":"m.text"},"ts":1397689406000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"cwilso: yep","msgtype":"m.text"},"ts":1397689411000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I suppose 64-bit milliseconds might be OK....","msgtype":"m.text"},"ts":1397689435000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"zewt: that's precisely why they ended up that way across the WA API.","msgtype":"m.text"},"ts":1397689439000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"sgalineau: WHY use milliseconds, though?","msgtype":"m.text"},"ts":1397689450000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"what kind of use-cases need sub-millisecond in audio?","msgtype":"m.text"},"ts":1397689453000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"sgalineau: getting samples to precisely align on a beat.","msgtype":"m.text"},"ts":1397689470000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"rhythm games","msgtype":"m.text"},"ts":1397689473000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"getting buffers to play contiguously.","msgtype":"m.text"},"ts":1397689478000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"ok, cool.","msgtype":"m.text"},"ts":1397689480000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"you could use CSS seconds; they're about 0.96 normal seconds when you hold them at arm's length","msgtype":"m.text"},"ts":1397689513000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"cannot tire of CSS unit jokes","msgtype":"m.emote"},"ts":1397689532000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"tmux attach-session -d -t ssb","msgtype":"m.text"},"ts":1397689591000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: the w3c html spec is pretty clear in regards to attribution http://www.w3.org/html/wg/drafts/html/master/ if anybody thinks otherwise all they have to do is speak up","msgtype":"m.text"},"ts":1397691274000,"senderName":"SteveF","senderId":"SteveF@irc"}
]