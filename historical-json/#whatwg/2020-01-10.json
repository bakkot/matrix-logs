[
{"content":{"body":"still not poossible to build Firefox on macOS 10.15?","msgtype":"m.text"},"ts":1578623414000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://w3c.github.io/media-playback-quality/#dom-videoplaybackquality-corruptedvideoframes doesn’t seems like a good way to indicate something is deprecated","msgtype":"m.text"},"ts":1578625839000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> [DEPRECATED] The corruptedVideoFrames attribute MUST return the total number of corrupted frames that have been detected.","msgtype":"m.text"},"ts":1578625850000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specifically, marked as [DEPRECATED] but still has language with a normative MUST","msgtype":"m.text"},"ts":1578625892000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm OK now I see https://github.com/w3c/media-playback-quality/pull/21","msgtype":"m.text"},"ts":1578625986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> This is reverts the full removal of corruptedVideoframes (#20) in favor of a softer deprecation.","msgtype":"m.text"},"ts":1578626008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: the coep sandbox.https.html test is a bit confusing","msgtype":"m.text"},"ts":1578653996000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what part?","msgtype":"m.text"},"ts":1578654103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think it'd be clearer if record() stored \"accepted\" if the promise was accepted, and \"rejected\" if it was rejected, and then the asserts check those values","msgtype":"m.text"},"ts":1578654156000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: maybe, though I think there's a possibility of combining this code with some other code that does a similar thing so maybe that could be done together","msgtype":"m.text"},"ts":1578654240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that is, ideally it uses resources/script-factory.js I think","msgtype":"m.text"},"ts":1578654274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: aha, that uses this pattern as well. hmm. I guess I'll file an issue to discuss this","msgtype":"m.text"},"ts":1578654360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://github.com/web-platform-tests/wpt/issues/21129","msgtype":"m.text"},"ts":1578656075000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: see https://github.com/whatwg/html/issues/4921 in particular for the remaining CSP comment","msgtype":"m.text"},"ts":1578665237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: will you file a Firefox bug on the CORP thing?","msgtype":"m.text"},"ts":1578665267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm quite surprised with the direction in https://lists.w3.org/Archives/Public/public-webappsec/2020Jan/0004.html . Personally I find all these webappssec and webperfwg specs that fetch calls out to to be really hard to follow and keep track of, and keeping them maintained in fetch would have been way nicer.","msgtype":"m.text"},"ts":1578675880000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://invented-adapter.glitch.me/ <-- anybody know which if either of these is correct? or if it’s specified? (SVGScriptElement type=module)","msgtype":"m.text"},"ts":1578676448000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"Chrome looks \"correct\" but I imagine the spec for SVG is not updated to handle modules yet so it's possible Firefox is correct-per-spec.","msgtype":"m.text"},"ts":1578676993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://svgwg.org/svg2-draft/interact.html#ScriptElement so I guess it depends on how you interpret \"A ‘script’ element is equivalent to the ‘script’ element in HTML\"","msgtype":"m.text"},"ts":1578677046000,"senderName":"Domenic","senderId":"Domenic@irc"}
]