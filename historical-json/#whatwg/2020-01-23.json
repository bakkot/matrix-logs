[
{"content":{"body":"littledan: we've always felt that putting a service worker install step ahead of navigation is something we want to avoid","msgtype":"m.text"},"ts":1579765158000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It could easily put a few 100k ahead of the first html response byte","msgtype":"m.text"},"ts":1579765183000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"well, request byte","msgtype":"m.text"},"ts":1579765192000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Does this extend to running other kinds of setup scripts at the beginning of page load, as indicated by, e.g., a Response header?","msgtype":"m.text"},"ts":1579775877000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"JakeA: Is there a written explanation of this somewhere? Or would you maybe be available to get in touch with someone who does have a proposal of this type, with the motivation that putting in a response header is easier in practice to deploy than adding a prefix to the html (apparently, people get the ordering wrong in practice)","msgtype":"m.text"},"ts":1579775973000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"This is for https://github.com/privacycg/proposals/issues/3","msgtype":"m.text"},"ts":1579776047000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: <script> is blocking by default, and it feels like it's been the source of web performance issues for decades since. https://github.com/WICG/import-maps#installation for instance recommends against external import-maps, but there are also lots of articles against blocking scripts, like http://www.stevesouders.com/blog/2009/04/27/loading-scripts-without-blocking/","msgtype":"m.text"},"ts":1579776161000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll take a look at the issue","msgtype":"m.text"},"ts":1579776165000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Part of the problem is we never really figured out how to make H/2 push work","msgtype":"m.text"},"ts":1579776199000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1579776214000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"specifically I'm referring to Trust-Label-Script:","msgtype":"m.text"},"ts":1579776217000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I was wondering if Origin Policy could help, since you then could move that fetch a bit earlier","msgtype":"m.text"},"ts":1579776239000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"there's also the possibility of some built-in policies. But it looks like Trusted Types started with this and then moved away from it.","msgtype":"m.text"},"ts":1579776258000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"it seems like this script would have to run before other scripts do, but it wouldn't have to block parsing the HTML document or fetching and parsing the scripts, just executing them","msgtype":"m.text"},"ts":1579776302000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"When is the origin policy fetched?","msgtype":"m.text"},"ts":1579776362000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ahh I see, it gets it if the response has a particular header","msgtype":"m.text"},"ts":1579776416000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"littledan: I've just skim-read this, so I might be wrong, but it seems like this thing only impacts other script execution, right? That means the Trust-Label-Script would need to be executed before other script, but it doesn't need to block html & css rendering","msgtype":"m.text"},"ts":1579776669000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: That's my understanding as well","msgtype":"m.text"},"ts":1579776714000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: That seems less bad. It blocks the execution of script, but not the loading of script (you'd still be able to fetch a whole module graph right? That doesn't count as execution)","msgtype":"m.text"},"ts":1579776797000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Right, though I wonder if it might be a little more linearizing in current implementations, unless there's a big refactoring","msgtype":"m.text"},"ts":1579776865000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I've just seen a spec using https://heycam.github.io/webidl/#this rather than https://dom.spec.whatwg.org/#context-object. Are they equivalent? Should 'context object' be considered deprecated in specs?","msgtype":"m.text"},"ts":1579788133000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes and yes. It'd be nice if we could update DOM and kill context object...","msgtype":"m.text"},"ts":1579789001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: mind if I make a PR to the DOM spec that replaces internal usage, and adds a note to the [=context object=] definition to suggest it's deprecated?","msgtype":"m.text"},"ts":1579789108000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sounds great to me, although I'd kind of prefer removing the dfn entirely and then causing all the consumers to update.","msgtype":"m.text"},"ts":1579789130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'll do that. I just figured that, given how much it's used, it might be 'cruel' to just get rid of it. I'll get rid of it and we can discuss in the PR","msgtype":"m.text"},"ts":1579789187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Perfect, yeah","msgtype":"m.text"},"ts":1579789200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Will be good to get annevk's opinion too, as DOM editor.","msgtype":"m.text"},"ts":1579789220000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm supportive of moving away from it, I'm not sure how much downstream usage there still is though, would be good to find out before removing completely","msgtype":"m.text"},"ts":1579789309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know some refactoring work I was doing in Encoding got blocked on an IDL style question that still isn't resolved","msgtype":"m.text"},"ts":1579789330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's used loads in service worker and background fetch, that much I know ðŸ˜€","msgtype":"m.text"},"ts":1579789359000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I really need to dust off and finish the backref-tracking code...","msgtype":"m.text"},"ts":1579789531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh weird, looks like the set of specs I'm relying on currently is \"what's in Bikeshed's testsuite\". I know that's not a super-informed choice, but I wonder if it is good enough.","msgtype":"m.text"},"ts":1579789621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Another request to drop manual text wrapping from specs","msgtype":"m.text"},"ts":1579791979000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, it's quite a drain on productivity, we really ought to automate it or change the rules","msgtype":"m.text"},"ts":1579792122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or switch to the Morally Correct semantic linewrapping.","msgtype":"m.text"},"ts":1579792125000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(i'm fine with either in the specs i edit, just so long as it's not an XXchar limit)","msgtype":"m.text"},"ts":1579792149000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"retreats ","msgtype":"m.emote"},"ts":1579792162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Is there a way to mark a definition as deprecated, so bikeshed will warn if it's used but not fail?","msgtype":"m.text"},"ts":1579792632000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hm, not really. You can mark it not exported, but that'll make it fail.","msgtype":"m.text"},"ts":1579792653000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's definitely something I'd be happy to add tho.","msgtype":"m.text"},"ts":1579792663000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll file it","msgtype":"m.text"},"ts":1579792670000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"danke","msgtype":"m.text"},"ts":1579792675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: if you could find some time to chat about https://github.com/whatwg/html/pull/5112#discussion_r370326608, clearly I... need help","msgtype":"m.text"},"ts":1579809741000,"senderName":"eeeps","senderId":"eeeps@irc"},
{"content":{"body":"eeeps: European office hours would be ideal","msgtype":"m.text"},"ts":1579814118000,"senderName":"annevk","senderId":"annevk@irc"}
]