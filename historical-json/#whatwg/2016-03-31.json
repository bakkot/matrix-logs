[
{"content":{"body":"Domenic: > Otherwise a network attacker could trick browser vendors into implementing CORS wrong","msgtype":"m.text"},"ts":1459391242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"isn’t that what we /TR is for?","msgtype":"m.text"},"ts":1459391264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(rimshot)","msgtype":"m.text"},"ts":1459391271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"littledan__: Looks like Yang already answered while I was asleep. The TL;DR is https://mathiasbynens.be/notes/es6-unicode-regex#impact-i which is admittedly very subtle in the spec","msgtype":"m.text"},"ts":1459407133000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"littledan__: Thanks for the heads-up! Don’t hesitate to CC me on bugs like this.","msgtype":"m.text"},"ts":1459407207000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk, hey","msgtype":"m.text"},"ts":1459413652000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: SW kinda depends on Fetch and HTML though, which is why it often comes up here, not too standalone I'd say","msgtype":"m.text"},"ts":1459413658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it safe to pass a DOMString to https://encoding.spec.whatwg.org/#utf-8-encode ?","msgtype":"m.text"},"ts":1459413668000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I meant standalone in terms of having started from slightlyoff’s own github account rather than a particular org","msgtype":"m.text"},"ts":1459413730000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: no","msgtype":"m.text"},"ts":1459413790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: encoding library is expects scalar values","msgtype":"m.text"},"ts":1459413821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/is//","msgtype":"m.text"},"ts":1459413826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: oh","msgtype":"m.text"},"ts":1459413842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: had it been available at the time, we'd have used WICG instead of my private github repo","msgtype":"m.text"},"ts":1459413845000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and we are using the W3C process","msgtype":"m.text"},"ts":1459413850000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1459413856000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suspected as much","msgtype":"m.text"},"ts":1459413932000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/970","msgtype":"m.text"},"ts":1459413933000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mounir: any plans to update the Permissions API?","msgtype":"m.text"},"ts":1459425463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: and maybe provide a PR for Notifications API so they're actually linked and use the same permission store?","msgtype":"m.text"},"ts":1459425481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: none of the issues I raised a year ago have moved much it seems, that's not very encouraging","msgtype":"m.text"},"ts":1459425505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: I'm now trying to fix some outstanding issues with Storage, and the Permissions API spec is still in a broken state","msgtype":"m.text"},"ts":1459425527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Shepherd should start indexing https://w3c.github.io/permissions/","msgtype":"m.text"},"ts":1459425894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess storage also includes the service worker registration?","msgtype":"m.text"},"ts":1459427557000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: jyasskin has been helping recently, I think he might have a few PR you would be interested in","msgtype":"m.text"},"ts":1459428437000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"annevk: sorry for the slow progress, it's a side project","msgtype":"m.text"},"ts":1459428464000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"JakeA: yeah it must","msgtype":"m.text"},"ts":1459429151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we need to make sure all storage stuff like that is layered on top of this, so that box operations affect all of them at once","msgtype":"m.text"},"ts":1459429189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and we need to also make it clear which things are distinct","msgtype":"m.text"},"ts":1459429204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g., permissions and credentials are clearly stored separately","msgtype":"m.text"},"ts":1459429217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hadn't considered that about permissions, but yeah, makes sense","msgtype":"m.text"},"ts":1459429294000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: mentioned them in https://storage.spec.whatwg.org/#infrastructure","msgtype":"m.text"},"ts":1459431138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perfect, cheers!","msgtype":"m.text"},"ts":1459432791000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if an email client can detect an out-of-office email and forward those to trash","msgtype":"m.text"},"ts":1459433023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g., I have a hard time caring mkwst will not reply to my email today, even though he just replied to the same thread","msgtype":"m.text"},"ts":1459433065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm?","msgtype":"m.text"},"ts":1459433078000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I got an autoresponder from you","msgtype":"m.text"},"ts":1459433090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm. That should be off. I got back in this morning.","msgtype":"m.text"},"ts":1459433102000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Off now. Sorry. Off by one. :/","msgtype":"m.text"},"ts":1459433139000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"What email do you have a hard time caring about?","msgtype":"m.text"},"ts":1459433162000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Sorry. I've been out for a week, and I'm not at all on top of things.","msgtype":"m.text"},"ts":1459433176000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(If you're missing something from me, tell me. :) )","msgtype":"m.text"},"ts":1459433195000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: just your autoresponder emails, I care about the others","msgtype":"m.text"},"ts":1459433241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You don't have a deep desire to know whether or not I'm on vacation?","msgtype":"m.text"},"ts":1459433278000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I thought that was a universal human need.","msgtype":"m.text"},"ts":1459433287000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: that explains why you work for Google","msgtype":"m.text"},"ts":1459433304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, Google wants to know whether _you_ are on vacation.","msgtype":"m.text"},"ts":1459433327000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Eventually gmail will just automatically provide autoresponder emails like \"Sorry, mkwst is by a pool in Vegas right now. He lost $10,000 this morning and so won't be responding to your email soon.\"","msgtype":"m.text"},"ts":1459433433000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Delighting users, one autoresponder at a time.","msgtype":"m.text"},"ts":1459433531000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: ReSpec'd, so all the definitions are worthless.  Every one of them will be a \"dfn\"-type definition, unexported.  And they duplicate several terms from other specs (luckily those are unexported too).","msgtype":"m.text"},"ts":1459434620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm, maybe jyasskin can convert it to bikeshed","msgtype":"m.text"},"ts":1459435078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I won't override the editors on that, but I am volunteering to help edit Permissions, in which case converting to Bikeshed is the price.","msgtype":"m.text"},"ts":1459435177000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: since \"the editors\" haven't been doing much for a year I think you should be fine","msgtype":"m.text"},"ts":1459435263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/w3c/permissions/pull/66 has the basics for extending permissions from other specs. I'm just assuming the \"partial enum\" problem is solved.","msgtype":"m.text"},"ts":1459435286000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I don't care much about that, I actually think it's better if permissions is the registry so it keeps a coherent view on all permissions","msgtype":"m.text"},"ts":1459435322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: what I mostly care about is primitives to hook into around the permission storage that actually work, i.e., that take a permission name and an origin, and things like that","msgtype":"m.text"},"ts":1459435368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://rawgit.com/jyasskin/permissions/allow-choosers/index.html#dfn-get-a-permission-storage-identifier takes a name and a settings object.","msgtype":"m.text"},"ts":1459435412000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: that looks a little better","msgtype":"m.text"},"ts":1459435519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: are you actively working on this? If that's the case I'm happy to review tomorrow","msgtype":"m.text"},"ts":1459435545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm looking at this as an incremental improvement. There's a bunch left to fix, but I can't tackle it all in one PR.","msgtype":"m.text"},"ts":1459435558000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1459435562000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah understood","msgtype":"m.text"},"ts":1459435576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What do you suggest I do to get commit access? Mail you, mounir, marcos, and Dom?","msgtype":"m.text"},"ts":1459435649000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: MikeSmith can usually arrange that","msgtype":"m.text"},"ts":1459435683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: no need to email me, I don't have power in /w3c","msgtype":"m.text"},"ts":1459435704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd mail you for the endorsement. ;)","msgtype":"m.text"},"ts":1459435714000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1459435719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i might be able to give you commit access","msgtype":"m.text"},"ts":1459437776000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jyasskin: It doesn't need to be fully Bikeshedded, just have its definitions upgraded.  But Bikeshedding is always nice, of course. ^_^","msgtype":"m.text"},"ts":1459438119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Bikeshedding makes everything so much easier.","msgtype":"m.text"},"ts":1459438141000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Including reviewing the document, ReSpec still FOUCs","msgtype":"m.text"},"ts":1459438224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: made you a pusher","msgtype":"m.text"},"ts":1459438262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Thanks!","msgtype":"m.text"},"ts":1459438273000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1459438283000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: You don't have any tidy-like tool for .bs files, do you?","msgtype":"m.text"},"ts":1459439271000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"No, but I've been wanting to design one.","msgtype":"m.text"},"ts":1459439281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Feel free to open an issue on me with some suggestions for things you want linted/formatted.","msgtype":"m.text"},"ts":1459439291000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: btw, I think ideally we have fairly simple hooks here","msgtype":"m.text"},"ts":1459442935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: e.g. \"If permission for \"notification\" and /notication/'s origin is \"granted\", ...\" with \"permission\" being something you define","msgtype":"m.text"},"ts":1459442985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(sorry about the double \" quotes)","msgtype":"m.text"},"ts":1459443004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"permission\" being something the notification API defines, or the permissions API?","msgtype":"m.text"},"ts":1459443020000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: the permissions API","msgtype":"m.text"},"ts":1459443032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: ideally the Notifications API no longer has to define \"permission\" at all, since it can defer to the Permissions store for that now","msgtype":"m.text"},"ts":1459443062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: We have enough kinds of permission, and enough data associated with permissions, that I'm not sure there can be a single unified definition. The ones that are simply boolean should definitely be able to just reference Permissions, but others are more complex.","msgtype":"m.text"},"ts":1459443105000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: yeah, I guess this would only work for the simple ones","msgtype":"m.text"},"ts":1459443124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: and for the others you'd have to do something complex, although I'm still not entirely convinced more complex ones are a good idea","msgtype":"m.text"},"ts":1459443148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My example here is Bluetooth, of course. If we want it to fit into the API, we need to be able to store a list of devices, and be able to query that list.","msgtype":"m.text"},"ts":1459443215000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"It looks like media was already going that direction in the spec, but without any rigor.","msgtype":"m.text"},"ts":1459443236000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"too many editors that don't care about design","msgtype":"m.text"},"ts":1459443261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Eh, whatever the cause, we have to look for the right design now.","msgtype":"m.text"},"ts":1459443303000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"or maybe they don't care about details? It's not entirely clear to me what's missing, but there's certainly lots of messes being created at all times, and few bineg solved","msgtype":"m.text"},"ts":1459443327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"being*","msgtype":"m.text"},"ts":1459443330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: but yeah, if we could have a very basic get/set framework for boolean permissions that'd be great","msgtype":"m.text"},"ts":1459443392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: although maybe I should first review your work, since it seemed you had some interesting things around cleanup and such too","msgtype":"m.text"},"ts":1459443425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mhmm. Right now, I have https://rawgit.com/jyasskin/permissions/allow-choosers/index.html#geolocation and friends explicitly specify the whole permission interface, but it'd be easy to define a \"boolean permission\" shorthand for them. I was waiting to see how many there actually were.","msgtype":"m.text"},"ts":1459443456000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"There's also some potential disagreement","msgtype":"m.text"},"ts":1459443501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. I think \"persistentstorage\" is boolean, but I don't think everyone at Google agrees","msgtype":"m.text"},"ts":1459443519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: This inclines me more toward letting individual specs define their own permissions, instead of trying to centralize those debates through the Permissions editor.","msgtype":"m.text"},"ts":1459444392000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Having the enum centrally, and then link to the definitions in each spec, could work well.","msgtype":"m.text"},"ts":1459444439000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, maybe","msgtype":"m.text"},"ts":1459447538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Depends a bit on the particulars I suppose","msgtype":"m.text"},"ts":1459447556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it seems that lacking a newline after <pre><code class=\"lang-javascript\"> actually influences parsing: https://storage.spec.whatwg.org/#introduction","msgtype":"m.text"},"ts":1459453092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: if I add a newline locally the wrapping is correct","msgtype":"m.text"},"ts":1459453103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It absolutely does. Bikeshed is very opinionated about the structure of your <pre>, so it can tell in a reasonable way what you \"indent\" is, and correct it in the output HTML.","msgtype":"m.text"},"ts":1459453137000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(with the if statement appearing on the next line, and \"navigator.storage.persistent(),\" too)","msgtype":"m.text"},"ts":1459453141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That seems very wrong","msgtype":"m.text"},"ts":1459453161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That way you don't have to put your <pre> contents flush with the left edge, messing up your HTML indentation, like you have to do in normal HTML.","msgtype":"m.text"},"ts":1459453164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh well","msgtype":"m.text"},"ts":1459453164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not wrong. It's a particular choice to make sure your input documents look good; without it, your input documents contain ugly formatting hacks that aren't necessary *anywhere else* in HTML.","msgtype":"m.text"},"ts":1459453216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wish bikeshed would use custom elements for this kind of stuff","msgtype":"m.text"},"ts":1459453230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You either lack indentation, or use funky comment hacks, both of which are terrible.","msgtype":"m.text"},"ts":1459453234000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Changing the meaning of existing HTML elements is super confusing","msgtype":"m.text"},"ts":1459453243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps easier to put yourself in the mindset that Bikeshed's input format is not, technically, HTML, but a language close to it. ^_^","msgtype":"m.text"},"ts":1459453265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(People are generally *happy* when they run into this bug, because as soon as they learn the *right* thing, they can start formatting their <pre> contents *naturally* instead of the hacky bullshit way they were doing so previously.)","msgtype":"m.text"},"ts":1459453312000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(This is something I should lint for, tho.)","msgtype":"m.text"},"ts":1459453325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"More, happy once we've gotten used to it and realize the benefits. We're all grumpy when we hit it the first time. I think I filed a bug.","msgtype":"m.text"},"ts":1459453345000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"All I want is a maintained Anolis with automatic xref...","msgtype":"m.text"},"ts":1459453356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really have a need for all this magic that bites me every time","msgtype":"m.text"},"ts":1459453375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it's easy enough to get used to adding a newline","msgtype":"m.text"},"ts":1459453428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really am genuinely sorry you got really used to the mannerisms of a preprocessor nobody's willing to use anymore.","msgtype":"m.text"},"ts":1459453492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well the thing is, Anolis is basically HTML, no magic","msgtype":"m.text"},"ts":1459453564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And Wattsi is quite similar","msgtype":"m.text"},"ts":1459453577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Most users are new to this stuff, so it's easier for them to learn. Less things to unlearn.","msgtype":"m.text"},"ts":1459453595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm def sympathetic.","msgtype":"m.text"},"ts":1459453595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Your willingness to work with Anolis-style xrefs was truly heroic, they're a *ton* of typing.)","msgtype":"m.text"},"ts":1459453595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's mostly bikeshed I think that parses Markdown before HTML and such","msgtype":"m.text"},"ts":1459453602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Typing isn't really the work though when writing specs","msgtype":"m.text"},"ts":1459453631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not really the work in programming either, but we still look for concise languages.","msgtype":"m.text"},"ts":1459453694000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"True, I think actually ecmarkup might be even better than bikeshed, but it probably lacks cross-spec cross-references","msgtype":"m.text"},"ts":1459453743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like, typing isn't the WORK work, but it's still a lot of work, and minimizing that is ideal.","msgtype":"m.text"},"ts":1459453760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think Domenic passes things through both Bikeshed *and* ecmarkup? I've got plans for integrate ecmarkup's shorthands when I have some downtime.","msgtype":"m.text"},"ts":1459453791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I think we want something ecmarkup like long term given that's what ECMAScript is in and everything else descends from that, in a way","msgtype":"m.text"},"ts":1459453801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah, Domenic has some special setup for Streams","msgtype":"m.text"},"ts":1459453826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe the future is there somewhere","msgtype":"m.text"},"ts":1459453836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"All specs should be like ECMAScript\" is something that very few people would be able to get behind, I think. The precision is nice, but it's *impossible* to read unless you're deeply skilled in spec-ese.","msgtype":"m.text"},"ts":1459453859000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yeah, definitely want to explore this a bit too at some point, maybe after shadow DOM / custom elements","msgtype":"m.text"},"ts":1459453885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But anyway, nothing good about ECMAScript is related to the processor.","msgtype":"m.text"},"ts":1459453886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: All I care about is that any new processors people work on, interoperate in their definitions model.","msgtype":"m.text"},"ts":1459453937000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: 1) I think ECMAScript is getting better 2) We'd still have IDL to help us out, just in a more ECMAScript-y way","msgtype":"m.text"},"ts":1459453938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah, should maybe see if we can make some easy wins with Wattsi with respect to that","msgtype":"m.text"},"ts":1459453963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/tabatkins/bikeshed/blob/master/docs/dfn-contract.md is the dfn contract","msgtype":"m.text"},"ts":1459453972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, bedtime, ttyl","msgtype":"m.text"},"ts":1459453986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Is there a spec for the API to query the dfn database?","msgtype":"m.text"},"ts":1459453992000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"bikeshed refs --help","msgtype":"m.text"},"ts":1459454005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, for another tool to use? I guess that's https://api.csswg.org/shepherd/","msgtype":"m.text"},"ts":1459454054000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Ah, tool-usable.","msgtype":"m.text"},"ts":1459454082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My thought is that ecmarkup or Anolis should be able to query the same database.","msgtype":"m.text"},"ts":1459454121000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, that's it.  Note that Bikeshed does a *bunch* of post-processing on that data.","msgtype":"m.text"},"ts":1459454123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: Yeah, everyone sharing the same db is what we want.","msgtype":"m.text"},"ts":1459454140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is still considering taking over the spidering in an independent project, a la SpecRef, so people can see it more easily and help out.","msgtype":"m.emote"},"ts":1459454165000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Off to lunch, bbiab if this discussion continues.","msgtype":"m.text"},"ts":1459454282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"FWIW I'm currently (between TC39 speeches) trying to make Streams use more Bikeshed features. We'll see how well that integrates with the ecmarkup parts...","msgtype":"m.text"},"ts":1459454631000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"As of this morning it basically only used <dfn>s and <a>s to link between them. Now trying to mark up classes/constructors/methods/properties and {{link}} to them and such.","msgtype":"m.text"},"ts":1459454675000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I use f.lux which makes the screen emit less blue light in the evenings, which is nice but it also makes me kinda colour blind: links in whatwg specs look exactly like the surrounding text","msgtype":"m.text"},"ts":1459457926000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that seems like something we should fix. not just for me but also for people who are actually color blind","msgtype":"m.text"},"ts":1459458029000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: if I add {{EventTarget}} in an example section I get a normative reference to DOM. How can I make it non-normative?","msgtype":"m.text"},"ts":1459460119000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Hm, if it has a parent with class=note or class=example, it should get marked as non-normative.","msgtype":"m.text"},"ts":1459460192000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it doesn't though; it has a nearby <p><em>This section is non-normative.</em></p>","msgtype":"m.text"},"ts":1459460218000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, so I\"m not looking for that yet. I'm open to increasing the set of things that it looks for, as long as we can do so safely.","msgtype":"m.text"},"ts":1459460245000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Would you be opposed to adding a class to the heading, for example?","msgtype":"m.text"},"ts":1459460272000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah that'd be OK... I'd also accept <a idl nonnormative> or something","msgtype":"m.text"},"ts":1459460301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(The warnings you mention aren't safe; it's not clear how large their scope is in a machine-detectable way.)","msgtype":"m.text"},"ts":1459460305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, I can just expand it to look for a class=\"non-normative\" on it or an ancestor, if you want.","msgtype":"m.text"},"ts":1459460328000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1459460378000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll file an issue?","msgtype":"m.text"},"ts":1459460395000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No need, committing now.","msgtype":"m.text"},"ts":1459460404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1459460409000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: also is there a way to turn off ignored vars checking? I couldn't find it in the docs.","msgtype":"m.text"},"ts":1459460434000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Entirely? Not right now, no.","msgtype":"m.text"},"ts":1459460448000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"does somebody know why the payments API uses \"objects that can be passed through JSON.parse(JSON.stringify()) without loss of data instead of SerializedScriptValue?","msgtype":"m.text"},"ts":1459461372000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Lack of knowledge?","msgtype":"m.text"},"ts":1459461777000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think SerializedScriptValue is a thing in specs. You probably meant structured cloneable?","msgtype":"m.text"},"ts":1459461836000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"but I was wondering the same thing, and guessed that it might be because that data gets passed to possibly external native code, which is easier with json rather than arbitrary structured cloneable data","msgtype":"m.text"},"ts":1459461863000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"but the spec could still allow more, since the various payment providers will have to define their own valid subset of data anyway","msgtype":"m.text"},"ts":1459461893000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"well, it's a thing in IDL, isn't it?","msgtype":"m.text"},"ts":1459462138000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1459462186000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"mhm","msgtype":"m.text"},"ts":1459462196000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"so whatever it is in spec-speak, afaik all browsers can serialize the history.state object to disk","msgtype":"m.text"},"ts":1459462231000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"at least HTML uses \"any\" in IDL and \"StructuredCloneWithTransfer\" for postMessage","msgtype":"m.text"},"ts":1459462237000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"and that's a SerializedScriptValue in Blink & WK","msgtype":"m.text"},"ts":1459462255000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"ok, fair enough","msgtype":"m.text"},"ts":1459462283000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"same for history.state","msgtype":"m.text"},"ts":1459462284000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"but yes, I agree that payment request should use any/structured cloneable in the spec (although the implementation in blink will likely still not be able to use SerializedScriptValue due to implementation details of SerializedScriptValue)","msgtype":"m.text"},"ts":1459462335000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"It depends on if they ever want to e.g. send something over HTTP","msgtype":"m.text"},"ts":1459462850000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In which case structured-cloneable doesn't make sense","msgtype":"m.text"},"ts":1459462857000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1459463159000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"if you want a wire format, you should specify a wire format","msgtype":"m.text"},"ts":1459463175000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"JSON seems good","msgtype":"m.text"},"ts":1459463227000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i'm not saying it's not","msgtype":"m.text"},"ts":1459463277000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"it's just odd that the wire format is defined implicitly by messing with the IDL","msgtype":"m.text"},"ts":1459463307000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"TabAtkins: given https://github.com/whatwg/streams/blob/better-spec-hygeine/index.bs#L34-L43 I cannot figure out why %Uint8Array% and friends appear in the index at https://streams.spec.whatwg.org/commit-snapshots/62d8cae22d91df2626c50ae3238e077d6b583dad/#index-defined-elsewhere, but WebSocket does not?","msgtype":"m.text"},"ts":1459464798000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm structured clone also isn't showing up","msgtype":"m.text"},"ts":1459465120000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: That... is a good question.","msgtype":"m.text"},"ts":1459465301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Log an issue?","msgtype":"m.text"},"ts":1459465304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1459465319000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Oh, those anchors don't have a \"spec\" declared.","msgtype":"m.text"},"ts":1459465518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmmm is this because of the conflicting definitions from different specs things?","msgtype":"m.text"},"ts":1459465542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i.e. why does ES not have this problem","msgtype":"m.text"},"ts":1459465546000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Because you specified \"spec\" for those anchors.","msgtype":"m.text"},"ts":1459465558000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Line 37","msgtype":"m.text"},"ts":1459465567000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, duh, ok thanks!","msgtype":"m.text"},"ts":1459465577000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's still something weird/unusable here.  I'll need to figure out what needs doing.","msgtype":"m.text"},"ts":1459465599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]