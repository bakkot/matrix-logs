[
{"content":{"body":"turn off hard tabs, use 4-space indents.  problem solved in the simplest way imaginable","msgtype":"m.text"},"ts":1403568032000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"therefore, some people are reconfiguring the size AND not aware of the associated arcane rules","msgtype":"m.text"},"ts":1403568033000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(or using braindead stuff like VS that starts out with a non-standard value)","msgtype":"m.text"},"ts":1403568104000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I sure don't want to spend time (expensive time, since it involves getting other people to do it too) just to allow fiddling with the indentation; 4 spaces is fine","msgtype":"m.text"},"ts":1403568135000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yeah, I prefer that approach","msgtype":"m.text"},"ts":1403568165000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I set my Emacs to avoid TAB by default","msgtype":"m.text"},"ts":1403568209000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and since it's an easy sell, it leaves more in the \"arguing about code style with coworkers\" budget for things like \"don't write comments in stream of consciousness\"","msgtype":"m.text"},"ts":1403568267000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"This is unbelievably annoying. When drawing a text with fillText on a canvas, the font will randomly blur even though you Math.round() the x and y coordinates. The string \"This is a text.\" is blurry. If I change it into \"This is a text.aaa\", it becomes sharp. If I remove or add any chars, it becomes blurry again. Can somebody save my computer from meeting with my sledgehammer?","msgtype":"m.text"},"ts":1403568335000,"senderName":"montecfel","senderId":"montecfel@irc"},
{"content":{"body":"The font size is not dynamic, but fixed at 16px.","msgtype":"m.text"},"ts":1403568368000,"senderName":"montecfel","senderId":"montecfel@irc"},
{"content":{"body":"zewt: Arguing about tab width is a fun thing to burn code-style budget on. Real tabs avoid this.","msgtype":"m.text"},"ts":1403574144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: The \"arcane rules\" are \"indent with tabs, align with spaces\". Not exactly hard.","msgtype":"m.text"},"ts":1403574182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess it isn't too complicated for *C*","msgtype":"m.text"},"ts":1403574252000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"When aligning a broken line, you indent to the same level, then align the remaining with spaces. Trivial.","msgtype":"m.text"},"ts":1403574254000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's arcane compared to \"don't use TABs\"","msgtype":"m.text"},"ts":1403574271000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"Arcane in comparison\" doesn't carry much weight when both are so simple. ^_^","msgtype":"m.text"},"ts":1403574335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, a lot of people still manage to screw it up :-(","msgtype":"m.text"},"ts":1403574377000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"A paperclip is heavy when compared to a feather, but that doesn't make it \"heavy\".","msgtype":"m.text"},"ts":1403574379000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, and those same people screw up space alignment too. I've never seen a space-indented file without an indentation mistake.","msgtype":"m.text"},"ts":1403574427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as long as it's \"good enough\", who cares","msgtype":"m.text"},"ts":1403574483000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: I guess you haven't looked very hard ;-)","msgtype":"m.text"},"ts":1403574498000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Oh, I'm sure they exist, particularly when there are automated checks or strict style reviews.","msgtype":"m.text"},"ts":1403574533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I think they're rare.","msgtype":"m.text"},"ts":1403574552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you abolish style rules, you don't even need git blame anymore, the blame is built into the file :D","msgtype":"m.text"},"ts":1403574600000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: A file that randomly switches between 2 and 4 space indents isn't \"good enough\".","msgtype":"m.text"},"ts":1403574613000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh, sure","msgtype":"m.text"},"ts":1403574625000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'm not being totally serious there tab, but I think there are a lot of things that you can let slide","msgtype":"m.text"},"ts":1403574631000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but the indent width setting is totally different from the tab width settign","msgtype":"m.text"},"ts":1403574638000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"like aligning function parameters on a wrapped line","msgtype":"m.text"},"ts":1403574638000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"And I've seen plenty of that, even for single-author files.","msgtype":"m.text"},"ts":1403574642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"“never use tabs” is a much simpler rule to follow","msgtype":"m.text"},"ts":1403574648000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"stuff like that is pretty \"who cares\"","msgtype":"m.text"},"ts":1403574651000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"long as it's readable","msgtype":"m.text"},"ts":1403574663000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Yeah, I usually break lines by just indenting an extra level, rather than aligning anything. Even simpler.","msgtype":"m.text"},"ts":1403574693000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"consistency is important for code","msgtype":"m.text"},"ts":1403574694000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"irrelevant differences jump out at you, making it harder to notice the relevant differences","msgtype":"m.text"},"ts":1403574710000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Because then the rule is \"always use tabs\".","msgtype":"m.text"},"ts":1403574710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"consistency is important","msgtype":"m.text"},"ts":1403574720000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but it's not the -most important thing-","msgtype":"m.text"},"ts":1403574729000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: that would work okay as long as it's fine if I leave tabs at the standard width","msgtype":"m.text"},"ts":1403574742000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"othermaciej: You might want to figure out who you're arguing against, because it isn't me. ^_^","msgtype":"m.text"},"ts":1403574747000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so, you better not nest too much if you do that","msgtype":"m.text"},"ts":1403574766000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: my statements were counters to things said by different people","msgtype":"m.text"},"ts":1403574772000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"SamB: Eh, works fine for me at anything between 2 and 8 spaces.","msgtype":"m.text"},"ts":1403574780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyway, obviously if you don't use tabs, everyone needs to use the same `c-basic-offset'","msgtype":"m.text"},"ts":1403574824000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"far more bothersome than any of that is the insistence on using hungarian notation","msgtype":"m.text"},"ts":1403574831000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hmm, I'm still not sure how I feel about hungarian notation","msgtype":"m.text"},"ts":1403574866000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: I am pretty sure you agree with me that consistency in code formatting is important, but you also seemed to advocate use of real TABs for indenting, which I am not a fan of","msgtype":"m.text"},"ts":1403574871000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: anyway, it sounds like I would have no problem with YOUR files","msgtype":"m.text"},"ts":1403574894000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Nominative determinism really leaves me no choice.","msgtype":"m.text"},"ts":1403574897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but many people do not know that there are ANY rules, and that's a problem","msgtype":"m.text"},"ts":1403574907000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hungarian notation often adds more noise than info","msgtype":"m.text"},"ts":1403574915000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yes, those people are the devil.","msgtype":"m.text"},"ts":1403574926000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I would really prefer if getting live TABs required completing a training course of some kind","msgtype":"m.text"},"ts":1403574961000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and if clippy would pop up if you started ruining the indentation in a file by using the wrong basic offset ;-P","msgtype":"m.text"},"ts":1403574978000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"U+000B after every function, or else!","msgtype":"m.text"},"ts":1403574982000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, IDEs could help by highlighting lines that start with spaces.","msgtype":"m.text"},"ts":1403575010000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think it's a *bit* more complicated than that","msgtype":"m.text"},"ts":1403575057000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Yeah, but it's a good start.","msgtype":"m.text"},"ts":1403575079000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, how do you know if those spaces are for normal indentation or alignment?","msgtype":"m.text"},"ts":1403575109000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"his argument was that alignment isn't really necessary -> just add an extra indentation on wrapped lines","msgtype":"m.text"},"ts":1403575141000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyway, you've really gotta throw TAB out the window in, say, Haskell ...","msgtype":"m.text"},"ts":1403575146000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Just stick with my \"only tabs\" rule.","msgtype":"m.text"},"ts":1403575148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which works great for that particular style","msgtype":"m.text"},"ts":1403575153000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"of course you can do that with spaces too, and then you get to hang out with the cool kids","msgtype":"m.text"},"ts":1403575188000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Of all the cool kids jumped off a bridge, would you?","msgtype":"m.text"},"ts":1403575222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"depends on the bridge!","msgtype":"m.text"},"ts":1403575243000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(Probably yes, there's probably something cool down there.)","msgtype":"m.text"},"ts":1403575250000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, I'd make damn sure my glider was in good shape beforehand ...","msgtype":"m.text"},"ts":1403575252000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway, I've seen three positions with any sanity to them: Tab's, the one where you use only spaces and you're careful to at least use the same `c-basic-offset' everywhere, and the one where you say tab stops occur every 8 columns and make sure to use the same `c-basic-offset' as everyone else.","msgtype":"m.text"},"ts":1403575400000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"probably all of these could use some settings in .dir-locals.el","msgtype":"m.text"},"ts":1403575467000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"if you abolish style rules, you don't even need git blame anymore, the blame is built into the file\" wins","msgtype":"m.text"},"ts":1403575565000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't even *understand* that utterance","msgtype":"m.text"},"ts":1403575588000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh, wait","msgtype":"m.text"},"ts":1403575599000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you can infer authorship and date from writing style!","msgtype":"m.text"},"ts":1403575611000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that means everyone uses a different `c-indent-offset'?","msgtype":"m.text"},"ts":1403575611000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but it was not a serious comment","msgtype":"m.text"},"ts":1403575626000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, that won't tell you which commit it was though","msgtype":"m.text"},"ts":1403575628000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":";-P","msgtype":"m.text"},"ts":1403575631000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"although of the set of useless super powers","msgtype":"m.text"},"ts":1403575642000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that would be a pretty cool one","msgtype":"m.text"},"ts":1403575648000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"didn't know this thread was still going; i feel sort of bad :P","msgtype":"m.text"},"ts":1403575657000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think I'm done now","msgtype":"m.text"},"ts":1403575681000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"having given a list of positions I think are at all sane to have","msgtype":"m.text"},"ts":1403575705000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i've been watching SGDQ (http://www.twitch.tv/speeddemosarchivesda) and having a beer","msgtype":"m.text"},"ts":1403575706000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: It's cool, I'm having wine and flying.","msgtype":"m.text"},"ts":1403575814000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, replying to the one thing highlighted at me: my experience is it's much easier to get consensus on \"4-space soft tabs\" than anything related to hard tab stops, which is a big benefit to me (we can just set it up and get back to work)","msgtype":"m.text"},"ts":1403575885000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: On the other hand, Blink and Chromium use 2 and 4 space indents, respectively. Meeting the codebase is painful","msgtype":"m.text"},"ts":1403575973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Merging, argh.","msgtype":"m.text"},"ts":1403575995000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"blink uses 2 space indents all over the place","msgtype":"m.text"},"ts":1403576062000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"2-space indentation is unforgivable","msgtype":"m.text"},"ts":1403576064000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1403576069000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"4 space*","msgtype":"m.text"},"ts":1403576071000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"are you saying there are files in blink that use 2 space?","msgtype":"m.text"},"ts":1403576078000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but more than anything, changing indentation needs to be avoided at all costs","msgtype":"m.text"},"ts":1403576083000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if they use different indentation across overlapping codebases, and they've reinvented code that needs to be merged, then somebody needs to be taken out of a decision-making position","msgtype":"m.text"},"ts":1403576157000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"because that's the worst possible result","msgtype":"m.text"},"ts":1403576169000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"to be fair, blink was inherited from webkit, and they probably weren't there when webkit decided on their style? but I am pretty sure it's 4 space indentation in chromium, blink and v8","msgtype":"m.text"},"ts":1403576224000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"... reindented (yeah, I'm on my phone)","msgtype":"m.text"},"ts":1403576239000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh i'm wrong, 2 space in v8","msgtype":"m.text"},"ts":1403576257000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there you go =)","msgtype":"m.text"},"ts":1403576261000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but if you've forked code and you have any intention of sharing code, you keep the existing indentation style--period","msgtype":"m.text"},"ts":1403576278000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"We might have aligned indentation after the fork.","msgtype":"m.text"},"ts":1403576279000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that probably wasn't a good idea if you wanted to steal patches ever ...","msgtype":"m.text"},"ts":1403576302000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: anyway, .dir-locals.el is your friend!","msgtype":"m.text"},"ts":1403576316000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i guess the most important thing to remember about code style is: it's not the most important thing","msgtype":"m.text"},"ts":1403576329000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i haven't landed anything in webkit, just blink, so I can't recall","msgtype":"m.text"},"ts":1403576364000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I like the coding style rules for the GDB testsuite","msgtype":"m.text"},"ts":1403576425000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i assume it's gnu","msgtype":"m.text"},"ts":1403576498000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"where there *are* no rules for the programs to run GDB on, because some of GDB's bugs might actually depend on coding style ...","msgtype":"m.text"},"ts":1403576500000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"That's horrifying.","msgtype":"m.text"},"ts":1403576632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's only horrifying when you realize contractors for boeing might be debugging code on it","msgtype":"m.text"},"ts":1403576674000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or toyota or pick your favourite","msgtype":"m.text"},"ts":1403576714000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"what specifically is being discussed at the \"Web Input\" meeting? https://twitter.com/jacobrossi/status/481173650523955200","msgtype":"m.text"},"ts":1403576739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"input/touch/pointers/etc?","msgtype":"m.text"},"ts":1403576811000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"must be I guess","msgtype":"m.text"},"ts":1403576854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-pointer-events/2014AprJun/0084.html it seems","msgtype":"m.text"},"ts":1403576959000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: well, you know, GNU have a lot of rules","msgtype":"m.text"},"ts":1403577025000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't expect the indentation rules are actually involved here","msgtype":"m.text"},"ts":1403577041000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"ah good TabAtkins was there","msgtype":"m.text"},"ts":1403577043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I see hober in the photo","msgtype":"m.text"},"ts":1403577050000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"A bunch of things, trying to align on controversial cross-browser topics.","msgtype":"m.text"},"ts":1403577109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah I'm perusing https://docs.google.com/document/d/1C6P3Mhza1jdMJyP9G6fr7n7zcXrCmwih1o2xohFVEhc/edit now","msgtype":"m.text"},"ts":1403577165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, Max took good notes.","msgtype":"m.text"},"ts":1403577424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"threaded input handling..","msgtype":"m.text"},"ts":1403577453000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the overview at https://docs.google.com/presentation/d/1VYfCKye4TM-QiR_hiLvwYxhci_xc5YcA4oZxtrp2qes/edit#slide=id.p is nice","msgtype":"m.text"},"ts":1403577516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: is there implied optional whitespace anywhere in CSS syntax? (similar to the way there is in grammars in some IETF specs, e.g., HTTP headers","msgtype":"m.text"},"ts":1403577937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: I mean, if I'm looking at a railroad diagram for a certain thing and it doesn't explicitly show whitespace as being allowed in some particular place, does that that mean the corresponding parsing algorithm for that thing does not expect to find whitespace there?","msgtype":"m.text"},"ts":1403578077000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yes, V&U defines all this.","msgtype":"m.text"},"ts":1403578078000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1403578086000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Not that railroad diagrams are non-normative.","msgtype":"m.text"},"ts":1403578120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Note","msgtype":"m.text"},"ts":1403578120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That yes was to your first question, not the second one.","msgtype":"m.text"},"ts":1403578147000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: roger that","msgtype":"m.text"},"ts":1403578159000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"finds http://dev.w3.org/csswg/css-values/#component-whitespace","msgtype":"m.emote"},"ts":1403578167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yup, that's it.","msgtype":"m.text"},"ts":1403578194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I guess I expected to find that stated in teh Syntax spec instead of V&U","msgtype":"m.text"},"ts":1403578195000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: cool, thanks","msgtype":"m.text"},"ts":1403578234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Syntax does the core syntax, not the grammar of actual properties.","msgtype":"m.text"},"ts":1403578300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1403578315000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"But also, the location is idiot historical.","msgtype":"m.text"},"ts":1403578318000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Partly","msgtype":"m.text"},"ts":1403578323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1403578347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: so now I understand about WS among components but the thing I'm wondering about specifically is about WS around delimiters","msgtype":"m.text"},"ts":1403578398000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Delimiters?","msgtype":"m.text"},"ts":1403578418000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I mean, e.g., parens in functions -- calc(1px + 3px) vs calc( 1px + 3px )","msgtype":"m.text"},"ts":1403578467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"No rule there.","msgtype":"m.text"},"ts":1403578497000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Calc is a bit of a special case, but yeah, arguments to a function obey the same \"component value\" rules.","msgtype":"m.text"},"ts":1403578552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah OK sure, yeah, the WS in this case is space around the components, I see","msgtype":"m.text"},"ts":1403578600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"should write stuff out first before asking, since it's quite clear now when he actually looks at it written out","msgtype":"m.emote"},"ts":1403578697000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I hate these XMLHttpRequest state bugs :-(","msgtype":"m.text"},"ts":1403618197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Has anyone experimented with JavaScript generated markup how Google interprets it for search results? I’m thinking about entire pages of generated markup.","msgtype":"m.text"},"ts":1403627721000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: when is it good to use null?","msgtype":"m.text"},"ts":1403628383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: Google hasn't been very detailed with what's happening, but they did announce recently that they're starting to execute at least some JS for indexing purposes.","msgtype":"m.text"},"ts":1403628595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, clamstar was kind enough to share this with me http://googlewebmastercentral.blogspot.com/2014/05/understanding-web-pages-better.html","msgtype":"m.text"},"ts":1403628675000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: kind of fuzzy, but in general it's a signifier for \"there is purposefully nothing here,\" instead of \"this was left unset\" (which is `undefined`).","msgtype":"m.text"},"ts":1403629136000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. it seems good that querySelector('asdf') returns `null`. If it returned `undefined`, that's what all functions without return values return, so it's kind of saying \"I was supposed to return something, but there was nothing there.\"","msgtype":"m.text"},"ts":1403629172000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This whole distinction is kind of Stockholm-syndromey. I often catch myself saying \"it makes perfect sense! How did we live without the distinction before!\" And then I step back and say, WTF, clearly this language has changed your brain.","msgtype":"m.text"},"ts":1403629217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so the problem with that is if you start returning null, you want to accept null too","msgtype":"m.text"},"ts":1403630609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so you can't really make it a rule that methods accepting null should be retrofitted to use undefined/optional behavior instead","msgtype":"m.text"},"ts":1403630641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: e.g. node.insertBefore(..., otherNode.previousSibling)","msgtype":"m.text"},"ts":1403630672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"disagree","msgtype":"m.text"},"ts":1403633146000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"null should throw in that situation","msgtype":"m.text"},"ts":1403633153000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"undefined is a default-value signaler","msgtype":"m.text"},"ts":1403633162000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's no sensible \"default value\" for a node that you want to insert","msgtype":"m.text"},"ts":1403633173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk ^","msgtype":"m.text"},"ts":1403633178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(both null and undefined should throw in that situation)","msgtype":"m.text"},"ts":1403633206000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"append seems reasonable","msgtype":"m.text"},"ts":1403633247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which is what DOM does)","msgtype":"m.text"},"ts":1403633328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems reasonable if you're trying to trigger the default value, but it's more likely a bug if you're trying to pass in document.querySelector('#tpyo')","msgtype":"m.text"},"ts":1403633655000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"E.g. node.prepend(input) would be node.insertBefore(input, node.firstChild)","msgtype":"m.text"},"ts":1403634499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: with the addition of rebeccapurple various notes around http://dev.w3.org/csswg/css-color/#named-colors are no longer accurate","msgtype":"m.text"},"ts":1403634626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, noticed that.","msgtype":"m.text"},"ts":1403634647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Was wondering if/how to change that.","msgtype":"m.text"},"ts":1403634654000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: removing the notes about X11, HTML, and SVG might make sense","msgtype":"m.text"},"ts":1403634656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: maybe saying that most of them came from X11 in a note, with a pointer to that email that does all the archeology","msgtype":"m.text"},"ts":1403634695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, was thinking about that. It's a great email!","msgtype":"m.text"},"ts":1403634711000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is","msgtype":"m.text"},"ts":1403634718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: around?","msgtype":"m.text"},"ts":1403634844000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: sorta","msgtype":"m.text"},"ts":1403634866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, in http://xhr.spec.whatwg.org/#interface-formdata, in the `create an entry` bit, the spec seems to rewrite the `value` argument multiple times","msgtype":"m.text"},"ts":1403634899000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Is that intentional?","msgtype":"m.text"},"ts":1403634905000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"This affects step 4, since it says \"If value is a File and filename is given\" -- `value` will always be a File, since it was made a File in the previous step","msgtype":"m.text"},"ts":1403634941000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(since it was overwritten)","msgtype":"m.text"},"ts":1403634953000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"it can also be a string","msgtype":"m.text"},"ts":1403634984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and yes, it is intentional that in case it was a Blob, that step is applied","msgtype":"m.text"},"ts":1403634997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: `value` is a Blob","msgtype":"m.text"},"ts":1403634998000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"not necessarily","msgtype":"m.text"},"ts":1403635005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(a File is also a Blob)","msgtype":"m.text"},"ts":1403635008000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1403635013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"value is either a string or a Blob","msgtype":"m.text"},"ts":1403635031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so in step 3, \"If value is a Blob, set value to a new File object\", we are overwriting value?","msgtype":"m.text"},"ts":1403635035000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1403635041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I get it, this is used elsewhere too","msgtype":"m.text"},"ts":1403635079000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(for the append() and set() where a DOMString is passed)","msgtype":"m.text"},"ts":1403635102000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"er, ScalarValueString","msgtype":"m.text"},"ts":1403635110000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1403635118000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"step 3 should not apply if value is a File however","msgtype":"m.text"},"ts":1403635124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that could be clarified","msgtype":"m.text"},"ts":1403635136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"If value is a Blob but not a File?\"","msgtype":"m.text"},"ts":1403635175000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1403635193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"making that edit now","msgtype":"m.text"},"ts":1403635197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1403635202000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1403635235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi. Is there API to query file upload progress from JS?","msgtype":"m.text"},"ts":1403637121000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"what kind of file upload progress?","msgtype":"m.text"},"ts":1403637150000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Percentage","msgtype":"m.text"},"ts":1403637169000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"you can look at XMLHttpRequestUpload progress events, but that obviously is restricted to xmlhttprequest","msgtype":"m.text"},"ts":1403637205000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and doesn't work for like, <form method=\"POST\">","msgtype":"m.text"},"ts":1403637215000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Lots of sites do it by using AJAX to query temporary file size from the server. But I would like to ask the browser itself.","msgtype":"m.text"},"ts":1403637237000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Of course, I mean POST.","msgtype":"m.text"},"ts":1403637342000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"I mean, it would work for XHR (unless you're using like IE9 or under), but would not work for form submission","msgtype":"m.text"},"ts":1403637391000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think it would be great to implement some events for form's uploading progress. Because all modern sites need to display the progress.","msgtype":"m.text"},"ts":1403637430000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"couldn't hurt to ask if browsers are interested in doing that","msgtype":"m.text"},"ts":1403637479000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't know whether they are, but it could make life easier.","msgtype":"m.text"},"ts":1403637693000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"well you might want to ask around here (there are some browser people hanging around), and maybe file a bug on the appropriate draft, which would probably be web-apps","msgtype":"m.text"},"ts":1403638713000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nah it'd be whatwg⊙wo","msgtype":"m.text"},"ts":1403639551000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this is about the HTML spec","msgtype":"m.text"},"ts":1403639556000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if it's about <form>","msgtype":"m.text"},"ts":1403639561000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, try that","msgtype":"m.text"},"ts":1403639734000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"IZh: the problem is that <form> causes navigate","msgtype":"m.text"},"ts":1403641432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IZh: which replaces the current document","msgtype":"m.text"},"ts":1403641456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IZh: events for navigation process don't make much sense if the document (and its associated global) change","msgtype":"m.text"},"ts":1403641485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it doesn't necessarily need to cause navigation, though, I think you'd make a lot of people happy if they could just <form method=\"POST\" action=\"someroute\" onprogress=\"updateWidget()\">, heh","msgtype":"m.text"},"ts":1403641902000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but I'm not going to get into that little discussion","msgtype":"m.text"},"ts":1403641940000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"That would cause navigation","msgtype":"m.text"},"ts":1403641949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would _now_","msgtype":"m.text"},"ts":1403641955000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but it doesn't necessarily need to, if you have some attribute that says \"don't navigate plz\"","msgtype":"m.text"},"ts":1403641969000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"If you want a new kind of form submission behavior that would be a different discussion","msgtype":"m.text"},"ts":1403641977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not the one that wants it, I'm just saying it's not really beyond the realm of the reasonable","msgtype":"m.text"},"ts":1403642010000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's doable, and it wouldn't likely break any existing apps","msgtype":"m.text"},"ts":1403642026000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Sure, but it's a different feature from progress","msgtype":"m.text"},"ts":1403642053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whether anyone actually wants to do it or not is a different discussion","msgtype":"m.text"},"ts":1403642058000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ojan: does blink have usage data for mutation events","msgtype":"m.text"},"ts":1403642199000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in gecko the data is currently measuring mutation events used in a window, and of  2.1G windows 5.5M have had mutation event listeners","msgtype":"m.text"},"ts":1403642271000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Loving this WebIDL thread","msgtype":"m.text"},"ts":1403642623000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: any idea how had NoScript installed","msgtype":"m.text"},"ts":1403642702000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"+many","msgtype":"m.text"},"ts":1403642706000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or anything of that nature","msgtype":"m.text"},"ts":1403642715000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: no idea","msgtype":"m.text"},"ts":1403643235000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"does it use mutation events?","msgtype":"m.text"},"ts":1403643240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"actually, I was just figuring sites wouldn't get a chance to use them if noscript blocked the script","msgtype":"m.text"},"ts":1403643278000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh, those might not get mutation events recorded","msgtype":"m.text"},"ts":1403643281000,"senderName":"smaug____","senderId":"smaug____@irc"}
]