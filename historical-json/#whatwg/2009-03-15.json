[
{"content":{"body":"I don't think anyone is sugesting that","msgtype":"m.text"},"ts":1237075500000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"Just that anecdotically more people seem to be cool with it than not. See also e.g. twitter and blog posts around the Web","msgtype":"m.text"},"ts":1237075501000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"http://www.google.com/search?q=%22html5+sucks%22","msgtype":"m.text"},"ts":1237075680000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.google.com/search?q=%22html5+rocks%22","msgtype":"m.text"},"ts":1237075681000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"but not sure it is very relevant ;)","msgtype":"m.text"},"ts":1237075682000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"is a web developer, and is not only firmly on the \"cool with it\" side of things, but also believes the same goes for every single other web developer he knows (and given the various organizations I'm part of and the meetings I attend, that's a sizeable group). And beyond the people involved enough to be part of all that, I suspect most simply don't think about html5 at all yet.","msgtype":"m.emote"},"ts":1237075860000,"senderName":"svl","senderId":"svl@irc"},
{"content":{"body":"I agree with svl specifically for the last sentence.","msgtype":"m.text"},"ts":1237075920000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"will ask monday in the office.","msgtype":"m.emote"},"ts":1237075921000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Based on a large sampling of one person (outside the WHATWG community) who has expressed an opinion on HTML5, 100% of people like it","msgtype":"m.text"},"ts":1237075922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"mostly because the doctype is short","msgtype":"m.text"},"ts":1237075923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that will be around 20 persons actually making Web sites in a commercial context","msgtype":"m.text"},"ts":1237075924000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"but that's about the limit of my personal experience","msgtype":"m.text"},"ts":1237075980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"woah, my issues chart is saying i checked lots in in the past few weeks which is completely bogus","msgtype":"m.text"},"ts":1237078020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1237078080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goddamnit","msgtype":"m.text"},"ts":1237078740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i always get caught up on this \"january is month zero\" nonsense","msgtype":"m.text"},"ts":1237078741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, chart fixed.","msgtype":"m.text"},"ts":1237078742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: what I wrote was \"It is less obvious that we have adequate representation from content creators.\"","msgtype":"m.text"},"ts":1237086120000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"jgraham: what you read \"strong perception that HTML 5 has disenfranchised authors somehow\"","msgtype":"m.text"},"ts":1237086121000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"how the @#$#&^ did THAT happen?","msgtype":"m.text"},"ts":1237086122000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys, if you buy this: \"Content creation should not be recondite. It should not be this bizarre arcana that only experts and gold-plated computer science gurus can do.\"","msgtype":"m.text"},"ts":1237090560000,"senderName":"sayrer","senderId":"sayrer@irc"},
{"content":{"body":"how do you find people to participate in the working group?","msgtype":"m.text"},"ts":1237090620000,"senderName":"sayrer","senderId":"sayrer@irc"},
{"content":{"body":"tough question, if you ask me","msgtype":"m.text"},"ts":1237090621000,"senderName":"sayrer","senderId":"sayrer@irc"},
{"content":{"body":"rubys: Because I was not just basing what I said on what you wrote. As I said, that merely brought it to mind.","msgtype":"m.text"},"ts":1237106280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"looks up \"recondite\"","msgtype":"m.emote"},"ts":1237114380000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rsayre: I understand the statement by Brendan, but don't see the association.","msgtype":"m.text"},"ts":1237114500000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"jgraham: thanks for clearing that up","msgtype":"m.text"},"ts":1237114501000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"http://pastebin.com/m41bc51f9 â€” why does __copy__ create copies of the key values and not references to them>","msgtype":"m.text"},"ts":1237114620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"notes that making a subclass of dict whose API is different in many ways is quite likely to be violating fundamental principles of OO design","msgtype":"m.emote"},"ts":1237116060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"True, but being better would mean doing odd things in places.","msgtype":"m.text"},"ts":1237121940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: But being better would, by definition, be better","msgtype":"m.text"},"ts":1237123140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1237125420000,"senderName":"bell007","senderId":"bell007@irc"},
{"content":{"body":"hi all","msgtype":"m.text"},"ts":1237125421000,"senderName":"bell007","senderId":"bell007@irc"},
{"content":{"body":"When I sanitize  \"<IMG SRC=\"HTTP://WWW.G.COM/png.png\" ALT=\"g\">\", there","msgtype":"m.text"},"ts":1237125480000,"senderName":"bell007","senderId":"bell007@irc"},
{"content":{"body":"is only receive \"<IMG  ALT=\"g\">\",  the string  SRC=\"HTTP://WWW.G.COM/","msgtype":"m.text"},"ts":1237125481000,"senderName":"bell007","senderId":"bell007@irc"},
{"content":{"body":"png.png\"  lost!","msgtype":"m.text"},"ts":1237125482000,"senderName":"bell007","senderId":"bell007@irc"},
{"content":{"body":"gsnedders: What are the keys?","msgtype":"m.text"},"ts":1237126500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, I found why it wasn't working, it doesn't matter.","msgtype":"m.text"},"ts":1237126560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(__setitem__ caused a copy to be created)","msgtype":"m.text"},"ts":1237126561000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Oh and what Philip` said :)","msgtype":"m.text"},"ts":1237126562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"blames jgraham for doing s/and/or/ when attempting to change line wrapping in html5lib","msgtype":"m.emote"},"ts":1237126740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"tries to look innocent","msgtype":"m.emote"},"ts":1237126800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DId we not have a unit test that covered it?","msgtype":"m.text"},"ts":1237126801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: We had dozens","msgtype":"m.text"},"ts":1237126802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And they failed? Wow I suck","msgtype":"m.text"},"ts":1237126860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"They did","msgtype":"m.text"},"ts":1237126861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You said \"there are some regressions in the liberal xml parser and the sanitizer that need to be fixed\"","msgtype":"m.text"},"ts":1237126862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so presumably you did check them :-)","msgtype":"m.text"},"ts":1237126863000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, well I feel better about that then :)","msgtype":"m.text"},"ts":1237126864000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have to learn that people are actually trying to use this stuff","msgtype":"m.text"},"ts":1237126920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Breaking the sanitiser tests is probably not an excellent idea, even temporarily, when people seem to rely on trunk versions for security :-)","msgtype":"m.text"},"ts":1237126921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"One test still fails, but I don't quite know why","msgtype":"m.text"},"ts":1237126922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I think it passes in the Ruby version, though it's hard to tell because there's a load of bogus test failures from <a/> vs <a></a> serialisation)","msgtype":"m.text"},"ts":1237126980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"winders if people are relying on the ruby version","msgtype":"m.emote"},"ts":1237126981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*wonders","msgtype":"m.text"},"ts":1237127040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"val_unescaped = CGI.unescapeHTML(attrs[attr].to_s).gsub(/`|[\\000-\\040\\177\\s]+|\\302[\\200-\\240]/,'').downcase","msgtype":"m.text"},"ts":1237127041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is that doing a gsub on UTF-8 byte values?","msgtype":"m.text"},"ts":1237127042000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If so, what's the equivalent in a non-insane language like Python that understands Unicode?","msgtype":"m.text"},"ts":1237127100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Thst doesn't look entirely implausible","msgtype":"m.text"},"ts":1237127101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm, look like the last bit is U+0080 to U+00A0","msgtype":"m.text"},"ts":1237127220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, the Python one's already equivalent","msgtype":"m.text"},"ts":1237127460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, right, the difference is probably that the Python version correctly translates &#14; into U+FFFD, and the Ruby one doesn't","msgtype":"m.text"},"ts":1237127580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it's just a parser issue","msgtype":"m.text"},"ts":1237127581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and the Ruby parser is already broken lots, so I don't care about it","msgtype":"m.text"},"ts":1237127640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So the test is wrong?","msgtype":"m.text"},"ts":1237127641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: No","msgtype":"m.text"},"ts":1237127760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh. So we still fail a test but we just don't know why?","msgtype":"m.text"},"ts":1237127820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, wait","msgtype":"m.text"},"ts":1237127821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes it is wrong","msgtype":"m.text"},"ts":1237127822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The test is for <img src=\" &#14;  javascript:alert('XSS');\" />","msgtype":"m.text"},"ts":1237127823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which runs the script in IE","msgtype":"m.text"},"ts":1237127880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and the test case says it should become <img/>, but Python html5lib says u'<img src=\" \\ufffd  javascript:alert(\\'XSS\\');\"/>'","msgtype":"m.text"},"ts":1237127881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which is okay because the U+FFFD results in the script not running","msgtype":"m.text"},"ts":1237127940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I don't know if it's dodgy to rely on that output being safe","msgtype":"m.text"},"ts":1237128000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems like it would be nicer to pass the test","msgtype":"m.text"},"ts":1237128060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't really like the sanitizer code because it relies so heavilly on regexps for attribute sanitisation","msgtype":"m.emote"},"ts":1237128061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It relies on regexp blacklisting of attribute values, in particular","msgtype":"m.text"},"ts":1237128120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can we do it better?","msgtype":"m.text"},"ts":1237128121000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Use whitelisting :-)","msgtype":"m.text"},"ts":1237128180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well it doesn't seem reasonable to whitelist all possible attribute values","msgtype":"m.text"},"ts":1237128181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's reasonable to whitelist values that are valid URIs","msgtype":"m.text"},"ts":1237128182000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes, that would be better","msgtype":"m.text"},"ts":1237128240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(and invalid URIs can be escape into valid URIs first)","msgtype":"m.text"},"ts":1237128241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Someone should write an HTML insanitiser that makes your markup crazier","msgtype":"m.text"},"ts":1237128300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't care enough about this to work out what to do, so he'll leave it with the failing test","msgtype":"m.emote"},"ts":1237128360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(...since it seems to be a 'safe' failure, in terms of not introducing XSS vulnerabilities)","msgtype":"m.text"},"ts":1237128600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.iamcal.com/understanding-bidirectional-text/ is interesting. I guess the HTML sanitizer should do something about mismatched explicit override markers","msgtype":"m.text"},"ts":1237130340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Their effects seem to be scoped by elements like <div>, so as long as you've got some block markup around any user-supplied content then it shouldn't be a problem","msgtype":"m.text"},"ts":1237130520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"where \"problem\" means \"denial of service attack, via user-generated content making significant parts of your page unreadable\"","msgtype":"m.text"},"ts":1237130640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Localised nonsense isn't a problem that the sanitiser should be dealing with, because people can (and do) write nonsense just with plain ASCII anyway)","msgtype":"m.text"},"ts":1237130641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Ah, did the article say about the <div> thing or did you just test that?","msgtype":"m.text"},"ts":1237130760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(By \"block markup\", I mean \"markup which gets rendered with display:block\")","msgtype":"m.text"},"ts":1237130820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: I just tested it","msgtype":"m.text"},"ts":1237130821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"very briefly and incomprehensively","msgtype":"m.text"},"ts":1237130822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.google.com/search?q=%E2%80%AE","msgtype":"m.text"},"ts":1237130880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The example in the article still makes some sense; you might not have user entered content in a <div>","msgtype":"m.text"},"ts":1237130881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"Your search - .stnemucod yna hctam ton did -\"","msgtype":"m.text"},"ts":1237130882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah so I see :)","msgtype":"m.text"},"ts":1237130883000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but then the rest of the page is fine","msgtype":"m.text"},"ts":1237130884000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in the browsers I've tried)","msgtype":"m.text"},"ts":1237130940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So it would still make sense to try and balance that out","msgtype":"m.text"},"ts":1237130941000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Of course I could still write http://www.google.com/search?q=.stnemucod+yna+htcam+ton+did to get very similar output","msgtype":"m.text"},"ts":1237131060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You can imagine situations where content from several users is put together in a single block-level element so one user can confuse everyone else","msgtype":"m.text"},"ts":1237131180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I agree that it doesn't seem like a very serious issue","msgtype":"m.text"},"ts":1237131240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://gsnedders.html5.org/cite/","msgtype":"m.text"},"ts":1237138320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, when I submit a file to that, I get an internal server error","msgtype":"m.text"},"ts":1237138980000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I tried submitting the html5 reference source","msgtype":"m.text"},"ts":1237138981000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Awesome.","msgtype":"m.text"},"ts":1237138982000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"suexec policy violation: see suexec log for more details","msgtype":"m.text"},"ts":1237138983000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, is that supposed to be running anolis with support for biblio, and with support for submitting an auxilliary biblio file?","msgtype":"m.text"},"ts":1237139040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"No, it just does biblio","msgtype":"m.text"},"ts":1237139041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: \"bilbiography\"?","msgtype":"m.text"},"ts":1237139042000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes, I can't spell.","msgtype":"m.text"},"ts":1237139100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"suggests a spell chequer","msgtype":"m.emote"},"ts":1237139101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders, so when I submit one of my specs, does it just append the reference section to the end, without doing any other processing like anolis does?","msgtype":"m.text"},"ts":1237139102000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1237139103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so should I go Overview.src.html -> anolis -> Overview.html -> then biblio, to get the final copy of my spec?","msgtype":"m.text"},"ts":1237139160000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1237139161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1237139162000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"biblio will be merged into Anolis","msgtype":"m.text"},"ts":1237139163000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1237139220000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"It's just I really did it for my computing project for school disguised as a separate project","msgtype":"m.text"},"ts":1237139221000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what file format does the extra biblio database field support?","msgtype":"m.text"},"ts":1237139222000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"refer","msgtype":"m.text"},"ts":1237139223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1237139224000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gsnedders, ping me when you get the internal server error resolved","msgtype":"m.text"},"ts":1237139340000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gets a different error","msgtype":"m.emote"},"ts":1237139460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i now get an ImportError","msgtype":"m.text"},"ts":1237139760000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sighs, having compiled libxml2 and libxslt","msgtype":"m.emote"},"ts":1237140480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, so having managed to build lxml, from lxml import html still fails","msgtype":"m.text"},"ts":1237140600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: ping","msgtype":"m.text"},"ts":1237141980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"posts <http://gsnedders.com/installing-lxml-on-dreamhost>","msgtype":"m.emote"},"ts":1237143600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, I just tried it with Selectors API. Your bibliographic database seems to be using different identefiers for the references from what Bert's does","msgtype":"m.text"},"ts":1237143900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"e.g. [{!SELECT] is CSS3 selectors in Bert's, but not in yours","msgtype":"m.text"},"ts":1237143960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and [[!WEBIDL]] doesn't seem to work. I'm guessing that means yours in case sensitive, since \"WebIDL\" is listed in yours","msgtype":"m.text"},"ts":1237144020000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"same issue with Dom-Level-3-Core","msgtype":"m.text"},"ts":1237144021000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gsnedders, other than those relatively minor issues, since I can easily update the references in my spec, the system seems to work fairly well","msgtype":"m.text"},"ts":1237144200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"re the sanitiser, you should always use only whitelisting","msgtype":"m.text"},"ts":1237148040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and for every attribute value","msgtype":"m.text"},"ts":1237148100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"including e.g. src=\"\", style=\"\", etc","msgtype":"m.text"},"ts":1237148101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: Indeed, I know that.","msgtype":"m.text"},"ts":1237151340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: I can't legitimately copy Bert's database, because I have no access to it, and myself, annevk5, and marcos all disagree with how it does stuff","msgtype":"m.text"},"ts":1237151341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Lachy: But you can download Bert's database and use it yourself","msgtype":"m.text"},"ts":1237151400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It's linked to from the docs","msgtype":"m.text"},"ts":1237151401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"56%...","msgtype":"m.text"},"ts":1237152360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders when Hixie will finish this","msgtype":"m.emote"},"ts":1237152480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In time for his birthday?","msgtype":"m.text"},"ts":1237152540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which of his birthdays?","msgtype":"m.text"},"ts":1237152660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: 27th December","msgtype":"m.text"},"ts":1237152720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: There's an infinite number of 27ths of December, so that doesn't narrow it down much","msgtype":"m.text"},"ts":1237152721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"27th December 2009 AD","msgtype":"m.text"},"ts":1237152780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"60%","msgtype":"m.text"},"ts":1237152900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: Which calendar system?","msgtype":"m.text"},"ts":1237152901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"was waiting for that question","msgtype":"m.emote"},"ts":1237152902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: the 29th December 2009 AD is only his birthday in one calendar system","msgtype":"m.text"},"ts":1237152903000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Thus that one)","msgtype":"m.text"},"ts":1237152960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Not given a sufficiently large universe","msgtype":"m.text"},"ts":1237152961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh shut up.","msgtype":"m.text"},"ts":1237152962000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"RFC 3986 tlks about certian URI forms being \"less likely\" which seems like a fairly pointless distincion to make since it is essential to treat them uniformly anyway","msgtype":"m.text"},"ts":1237153740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess it should say \"be sure to test wih the following special cases\" or something","msgtype":"m.text"},"ts":1237153741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"62%","msgtype":"m.text"},"ts":1237156260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why is the datagrid section greyed out?","msgtype":"m.text"},"ts":1237156440000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"I see, <div class=bad> :)","msgtype":"m.text"},"ts":1237156500000,"senderName":"annevk5","senderId":"annevk5@irc"}
]