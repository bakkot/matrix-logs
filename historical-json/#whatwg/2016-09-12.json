[
{"content":{"body":"https://github.com/whatwg/html/issues/192#issuecomment-146830020 - http://people.mozilla.org/~roc/videosync.html is gone :-(","msgtype":"m.text"},"ts":1473682497000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"This is what happens if we let roc leave the building :(","msgtype":"m.text"},"ts":1473682681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests/pull/3697 - it's not clear to me why some events have exposed=Worker and some others do not. should all events be exposed? or only those that get fired on objects that are exposed in workers?","msgtype":"m.text"},"ts":1473693225000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"replied to zcorpan in the PR","msgtype":"m.text"},"ts":1473698236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: hi there, I have a question about your data: URI kitchen","msgtype":"m.text"},"ts":1473700728000,"senderName":"jez9999","senderId":"jez9999@irc"},
{"content":{"body":"Hixie: you have a checkbox for \"base64\", but looking at your code i'm not sure why you first base64-encode the data, then URI encode it. often. the \"=\" character will still need to be URI-escaped. what's the purpose of the base64 encoding?","msgtype":"m.text"},"ts":1473700737000,"senderName":"jez9999","senderId":"jez9999@irc"},
{"content":{"body":"Given a HTMLScriptElement that has been loaded and executed, is there any way to find the src of what was loaded and executed? Assume the src attribute is unchanged, but the document base URL has.","msgtype":"m.text"},"ts":1473706037000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I can't think of any way.","msgtype":"m.text"},"ts":1473706654000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: thx","msgtype":"m.text"},"ts":1473707733000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"crazy stuff https://wicg.github.io/shape-detection-api/","msgtype":"m.text"},"ts":1473709928000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"totally crazy to add that as web api","msgtype":"m.text"},"ts":1473709936000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: What's your criterion for something to make a good web API?","msgtype":"m.text"},"ts":1473710034000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"some API which is defined properly and which isn't something one is expected to implement on top of other web APIS","msgtype":"m.text"},"ts":1473710073000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"this shape detection API is so something which should either run over some code running in workers","msgtype":"m.text"},"ts":1473710108000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"or it should send data to server side and get it there","msgtype":"m.text"},"ts":1473710119000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"How does the code in the workers access the hardware acceleration?","msgtype":"m.text"},"ts":1473710127000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"shape-detection-api doesn't seem to in anyway define the algorithms detection is supposed to do","msgtype":"m.text"},"ts":1473710207000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"And it seems bad to require web code to expose extra data to servers, and use extra network bandwidth, for use cases that native apps can achieve locally.","msgtype":"m.text"},"ts":1473710213000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I think that's a good place the spec could be improved: nail down a little more precisely what these detectors actually detect.","msgtype":"m.text"},"ts":1473710279000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"That said, it also seems bad to forbid UAs from improving their object detection.","msgtype":"m.text"},"ts":1473710315000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: how is this API supposed to be implemented when it doesn't define what to do?","msgtype":"m.text"},"ts":1473710368000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Taking just https://wicg.github.io/shape-detection-api/#barcode-detection-api, the spec seems clear enough: it identifies QR codes (it should link to ISO/IEC 18004:2015 or similar to define that) in an image. It doesn't say how to do that, and different implementations might do a better or worse job, making testing difficult, but IIRC the same is true of","msgtype":"m.text"},"ts":1473710629000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"font rendering.","msgtype":"m.text"},"ts":1473710629000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"qr code detection using JS isn't exactly hard","msgtype":"m.text"},"ts":1473711032000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug@ help me understand your concerns","msgtype":"m.text"},"ts":1473711068000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"my concern is to add API which can be implemented on top of other stuff and/or adding API which isn't defined properly","msgtype":"m.text"},"ts":1473711101000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the API is not providing any sw-fallback. If there's hw acceleration sitting there in the platform, it'll be surfaced; otherwise is JS-business as usual","msgtype":"m.text"},"ts":1473711102000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"currently the draft is more like an idea","msgtype":"m.text"},"ts":1473711127000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the API is the simplest you can find, and mimics the underlying Hw/OS: pass a single image, get the metadata back","msgtype":"m.text"},"ts":1473711164000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"near-zero state","msgtype":"m.text"},"ts":1473711170000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"which Hw/OS?","msgtype":"m.text"},"ts":1473711217000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"mcasas: I think smaug wants a more rigorous definition of what the HW/OS actually do.","msgtype":"m.text"},"ts":1473711236000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"and it lends itself nicely to a polyfill: if there is hw acceleration, use it, otherwise fallback to one of a number of JS libraries implementing, e.g. Face Detection","msgtype":"m.text"},"ts":1473711236000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Yeah, let me pull some links","msgtype":"m.text"},"ts":1473711249000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"we shouldn't add APIs which possibly require polyfills to the platform","msgtype":"m.text"},"ts":1473711290000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: So you'd be happier if the spec required UAs to include the software fallback?","msgtype":"m.text"},"ts":1473711355000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"People going to TPAC, where are you staying?","msgtype":"m.text"},"ts":1473711375000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Currently there are a number of JS libraries providing Face Detection. My idea was that, if the platform (i.e. the OS) provides hardware acceleration for such tasks, developers can use it, saving CPU and battery/energy.","msgtype":"m.text"},"ts":1473711409000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"jyasskin: right, and some kind of default algorithm how it all should work","msgtype":"m.text"},"ts":1473711418000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"AVFoundation face detection is implemented here: https://developer.apple.com/library/ios/documentation/CoreImage/Reference/CIDetector_Ref/","msgtype":"m.text"},"ts":1473711422000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"UAs would be then free to implement it all using HW or whatnot, but the end result should be still the same","msgtype":"m.text"},"ts":1473711446000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(-featuresInImage: is the function to actually detect)","msgtype":"m.text"},"ts":1473711447000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Android has the FaceDetector class: https://developer.android.com/reference/android/media/FaceDetector.html","msgtype":"m.text"},"ts":1473711505000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"the method being findFaces(...)","msgtype":"m.text"},"ts":1473711518000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"mcasas: and what about desktop OSes?","msgtype":"m.text"},"ts":1473711535000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Ever since the OpenCV implementation in ~2000, all Face/shape detectors work pretty much the same","msgtype":"m.text"},"ts":1473711538000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"so hardware manufacturers just took that pseudo-API","msgtype":"m.text"},"ts":1473711555000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Desktop OSes: I've only seen hw implementation in MacBooks","msgtype":"m.text"},"ts":1473711574000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"some USB sophisticated cameras have that as well","msgtype":"m.text"},"ts":1473711600000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"mcasas: ok, so you'd have sw implementation on Windows and Linux and others","msgtype":"m.text"},"ts":1473711634000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JS comparison of libraries doing face detection: https://github.com/mtschirs/js-objectdetect#performance","msgtype":"m.text"},"ts":1473711650000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Re. having a sw fallback implementation: I don't think the browser should include such a large piece of code, for a perhaps-not-too-popular use case.","msgtype":"m.text"},"ts":1473711678000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"If the platform has some accelerated capabilities, the browser may offer them, but the sw-fallback would be getting into deep waters","msgtype":"m.text"},"ts":1473711704000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"mcasas: so browsers would ship this API only on mobile and OSX?","msgtype":"m.text"},"ts":1473711722000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that would be quite some new API","msgtype":"m.text"},"ts":1473711727000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(by \"deep waters\" I mean e.g. what algorithm to provide, etc)","msgtype":"m.text"},"ts":1473711734000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"mcasas: The CIDetector_Ref API documentation is much less precise than we're used to for web specs. It may be as precise as it can be, given the freedom we want to give implementations to optimize and improve their detection, but you should try to defend that.","msgtype":"m.text"},"ts":1473711752000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"(We could move that to an issue on https://github.com/WICG/shape-detection-api/issues.)","msgtype":"m.text"},"ts":1473711785000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"the proposed API would reject the Promises if the underlying platform does not provide such acceleration","msgtype":"m.text"},"ts":1473711792000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"it's similar to e.g., having a gps unit or not,","msgtype":"m.text"},"ts":1473711804000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"or having a compass","msgtype":"m.text"},"ts":1473711809000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"but yeah, feel free to open bugs to the wicg spec","msgtype":"m.text"},"ts":1473711827000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Windows 10 has built-in face detection I am pretty sure","msgtype":"m.text"},"ts":1473713358000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i will never use that malware","msgtype":"m.text"},"ts":1473713370000,"senderName":"jez9999","senderId":"jez9999@irc"},
{"content":{"body":"domenic@: investigating. Would love to have more platforms.","msgtype":"m.text"},"ts":1473713495000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Windows.Media.FaceAnalysis","msgtype":"m.text"},"ts":1473713522000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://msdn.microsoft.com/library/windows/apps/dn974129","msgtype":"m.text"},"ts":1473713542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jez9999: Please stay civil on this forum.","msgtype":"m.text"},"ts":1473713695000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"how is that uncivil?","msgtype":"m.text"},"ts":1473713705000,"senderName":"jez9999","senderId":"jez9999@irc"},
{"content":{"body":"https://msdn.microsoft.com/library/windows/apps/windows.media.faceanalysis.aspx yeah, now the question is if that's accelerated in any way (probably yes)","msgtype":"m.text"},"ts":1473713788000,"senderName":"mcasas","senderId":"mcasas@irc"},
{"content":{"body":"Surfaces come with these Intel depth cameras for real face detection (so you can't fool them by holding up a picture). I guess that's a whole nother thing","msgtype":"m.text"},"ts":1473713826000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jez9999, i'm not sure how calling an entire software package malware without good reason is considered civil","msgtype":"m.text"},"ts":1473713987000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"i have perfectly good reason","msgtype":"m.text"},"ts":1473713998000,"senderName":"jez9999","senderId":"jez9999@irc"},
{"content":{"body":"jez9999: regardless, it's not appropriate for this channel.","msgtype":"m.text"},"ts":1473714130000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yes, most important is that it's off-topic and annoying.","msgtype":"m.text"},"ts":1473714490000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"To be fair there has traditionally been a very loose sense of \"off topic\" in this channel","msgtype":"m.text"},"ts":1473714889000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, but context-free \"windoze sux lololol\" is definitely outside of the topic, whatever it is.","msgtype":"m.text"},"ts":1473716085000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]