[
{"content":{"body":"annevk: it isn't relevant","msgtype":"m.text"},"ts":1264982400000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"if I use xhtml that all just works","msgtype":"m.text"},"ts":1264982401000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"in that example using <hX> was simpler","msgtype":"m.text"},"ts":1264982402000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"well sure","msgtype":"m.text"},"ts":1264982403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but XHTML does not work in IE","msgtype":"m.text"},"ts":1264982404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that would be a problem","msgtype":"m.text"},"ts":1264982460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we want to test IE","msgtype":"m.text"},"ts":1264982461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using divs would have required id attributes or something","msgtype":"m.text"},"ts":1264982462000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"that wasn't a testcase","msgtype":"m.text"},"ts":1264982463000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"but just an example","msgtype":"m.text"},"ts":1264982464000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"even trivial one","msgtype":"m.text"},"ts":1264982465000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"anyways, it seems like someone needs to define hit testing","msgtype":"m.text"},"ts":1264982466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe","msgtype":"m.text"},"ts":1264982467000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"though, if IE really behaves like that with mouseenter/leave","msgtype":"m.text"},"ts":1264982520000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"I think those should be just dropped","msgtype":"m.text"},"ts":1264982521000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"those aren't that useful","msgtype":"m.text"},"ts":1264982522000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"are you sure?","msgtype":"m.text"},"ts":1264982523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, you can emulate them using scripts","msgtype":"m.text"},"ts":1264982524000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"lots of developers want those events","msgtype":"m.text"},"ts":1264982525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and mouseover/out","msgtype":"m.text"},"ts":1264982526000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"I would wager that a majority of all uses of mouseover/out really wants mouseenter/leave","msgtype":"m.text"},"ts":1264982580000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"e.g. a simple search gives http://blog.stchur.com/2007/03/15/mouseenter-and-mouseleave-events-for-firefox-and-other-non-ie-browsers/","msgtype":"m.text"},"ts":1264982640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://foolip.org/microdatajs/live/ neat","msgtype":"m.text"},"ts":1264983840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-> past bedtime","msgtype":"m.emote"},"ts":1264983841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1264983842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, your microdata tool is awesome","msgtype":"m.text"},"ts":1264986960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've added it to my list of consoles on http://damowmow.com/portal/ (top right)","msgtype":"m.text"},"ts":1264986961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, new version of Requiem is out. It aparently fixes the 4GiB file size limit.","msgtype":"m.text"},"ts":1264986962000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1264986963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(there was a 4GB file size limit?)","msgtype":"m.text"},"ts":1264986964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's taking me a while to download it from Tor - it's a really slow connection today - and I couldn't find it on any torrent sites yet.","msgtype":"m.text"},"ts":1264987020000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1264987080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there was a limit, but since only a few of the HD movies available from iTunes are over 4GB, it probably hasn't affected you","msgtype":"m.text"},"ts":1264987140000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it hasn't affected me either, since being outside the US, there is no HD content available","msgtype":"m.text"},"ts":1264987200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1264987260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how weird","msgtype":"m.text"},"ts":1264987320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the Australian iTunes store (which my account is for) is unlikely to bother with HD content while our internet continues to be over priced and capped with extremely low usage caps","msgtype":"m.text"},"ts":1264987321000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"don't they have an itunes datacenter?","msgtype":"m.text"},"ts":1264987322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, they do. But our ISPs count your data usage, and downloading 2GB HD TV shows frequently will send most users over their 10GB to 20GB monthly limit quite quickly. (Plans with more than that are way over priced)","msgtype":"m.text"},"ts":1264987440000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and so unless Apple does some deals with Australian ISPs to make iTunes content be unmetered, the market for HD content will be very small","msgtype":"m.text"},"ts":1264987500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so basically unless you lose your net neutrality, you're screwed?","msgtype":"m.text"},"ts":1264987560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is it with english-speaking countries and being stupid","msgtype":"m.text"},"ts":1264987561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, basically. Although, to some extent, some Aussie ISPs have gone against net neutrality, and have in the past, included some major download sites (like tucows and cnet downloads) as part of the unmetered freezone.","msgtype":"m.text"},"ts":1264987680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Telstra includes its own BigPond network in their free zone too","msgtype":"m.text"},"ts":1264987740000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie, maybe non-English-speaking countries are also stupid, but you don't notice it as much because it's in a foreign language?","msgtype":"m.text"},"ts":1264987800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've heard claims that the reason for the over priced, capped internet is because the cost of sending data across the Pacific ocean is expensive.","msgtype":"m.text"},"ts":1264987801000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Bandwidth caps make more sense than \"unlimited\" plans where you get threatening calls from your ISP if you use too much bandwidth . . .","msgtype":"m.text"},"ts":1264987802000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i speak french and lived in swizterland, and also lived in norway, and i haven't seen the same kinds of stupidity as in the UK, US, and Australia.","msgtype":"m.text"},"ts":1264987803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i'm sure each country has its own stupidity, certainly :-)","msgtype":"m.text"},"ts":1264987860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, there are plenty of non-English speaking countries that are stupid. LIke China, Iran (I think), and some other middle eastern countries.","msgtype":"m.text"},"ts":1264987861000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Unlimited plans don't make much market sense, they encourage tragedies of the commons like BitTorrent.","msgtype":"m.text"},"ts":1264987862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, what do you mean by tragedies of the commons?","msgtype":"m.text"},"ts":1264987920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, I mean that if it's unlimited, you won't care how much you use, so you'll be much more likely to use an unreasonably large amount, which in aggregate degrades service for everyone.","msgtype":"m.text"},"ts":1264987921000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But every individual bears too little of the cost to care.","msgtype":"m.text"},"ts":1264987922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Tragedy_of_the_commons","msgtype":"m.text"},"ts":1264987923000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I strongly disagree. Bandwidth caps place an unfair burdon on end users, and place wholly artificial limits on what people can and can't do.","msgtype":"m.text"},"ts":1264988040000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"How is it wholly artificial or unfair to pay for the resources you use?  Most resources you use are metered, like electricity.","msgtype":"m.text"},"ts":1264988100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But yeah, it's a pain, so people don't like it and ISPs try to avoid it.","msgtype":"m.text"},"ts":1264988101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which creates tragedies of the commons, but oh well.","msgtype":"m.text"},"ts":1264988160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: different argument. Your electricity is metered, but it's probably unlimited","msgtype":"m.text"},"ts":1264988280000,"senderName":"GarethAdams|Home","senderId":"GarethAdams|Home@irc"},
{"content":{"body":"Ah, someone upgraded the wiki to 1.15.1.","msgtype":"m.text"},"ts":1264988281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(unlimited within capacity provision)","msgtype":"m.text"},"ts":1264988340000,"senderName":"GarethAdams|Home","senderId":"GarethAdams|Home@irc"},
{"content":{"body":"GarethAdams|Home, well, yes.  Caps are just a coarser form of metering, though, where you have to pay in advance to upgrade to the next plan.","msgtype":"m.text"},"ts":1264988341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lachy, should I upgrade the wiki to the latest alphas from SVN so that it's outputting HTML5 instead of XHTML1 Transitional?  :)","msgtype":"m.text"},"ts":1264988342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Personally I think pre-pay vs credit is quite a fundamental difference","msgtype":"m.text"},"ts":1264988400000,"senderName":"GarethAdams|Home","senderId":"GarethAdams|Home@irc"},
{"content":{"body":"AryehGregor, bandwidth is not a limited resource in the same sense as physical resources, and bandwidth caps attempt to solve the issue the wrong way.","msgtype":"m.text"},"ts":1264988401000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy, it's limited every bit as much as things like electricity or water.  How would you solve it?","msgtype":"m.text"},"ts":1264988402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, it's too late for me to get into an argument, but I could set up MediaWiki 1.16alpha tonight, or not.","msgtype":"m.text"},"ts":1264988460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You gave me shell access, but I don't want to do it without at least one other person thinking it's a reasonable idea.  :)","msgtype":"m.text"},"ts":1264988461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Bandwidth is, for the sake of simplicity, effectively a measure of how much data can be transmitted at the same time. So offering plans based on the bandwidth, or rather speed, provided to the user makes sense.","msgtype":"m.text"},"ts":1264988462000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Whee, still using MySQL 4.1.  At least one user is benefiting for our support for ancient MySQL versions!","msgtype":"m.text"},"ts":1264988520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But imposing monthly usage limits tries to treat data as a finite resource, and implies that it will somehow run out if too much is used in a month.","msgtype":"m.text"},"ts":1264988640000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well, what they really care about is how much you're using at peak.  If there's excess capacity, it makes no difference to them, no.  So it's a crude metric, that's true.","msgtype":"m.text"},"ts":1264988700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's not quite true, actually.","msgtype":"m.text"},"ts":1264988701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"They do pay for every bit that goes over a backbone, AFAIK.","msgtype":"m.text"},"ts":1264988702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but that's not the case at all. If a backbone can support 1Gbps, and 50 users are connected to that, each going flat out on their ADSL2+, 20Mbps connection, they could do that all indefinitely.","msgtype":"m.text"},"ts":1264988703000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But anyway, are you going to answer me about upgrading the WHATWG wiki?","msgtype":"m.text"},"ts":1264988704000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes, but they oversell, because people don't use all their bandwidth at once.","msgtype":"m.text"},"ts":1264988760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although, with bandwidth caps, they would hit their artificial limit within a day","msgtype":"m.text"},"ts":1264988761000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"right. But bandwidth caps do nothing to address that problem of over selling","msgtype":"m.text"},"ts":1264988762000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Overselling isn't a problem, it's the only thing that makes sense.  It would be crazy to let massive bandwidth capacity lie idle because you have to reserve a fixed amount for each customer.","msgtype":"m.text"},"ts":1264988820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"wonders why Lachy keeps on ignoring the questions about the wiki.","msgtype":"m.emote"},"ts":1264988880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh, I missed the wiki question.","msgtype":"m.text"},"ts":1264988881000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I only asked it about eight times.","msgtype":"m.text"},"ts":1264988882000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"sure, do whatever you like with the wiki (as long as you don't break it).","msgtype":"m.text"},"ts":1264989000000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or if you do break it, fix it","msgtype":"m.text"},"ts":1264989001000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"There are no hacks, are there?","msgtype":"m.text"},"ts":1264989002000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So I can overwrite the files and there will be no problems?","msgtype":"m.text"},"ts":1264989003000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1264989004000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"k.","msgtype":"m.text"},"ts":1264989005000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"there are plugins, I believe","msgtype":"m.text"},"ts":1264989006000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"can't remember which ones we have installed though","msgtype":"m.text"},"ts":1264989060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"ConfirmEdit, no problem.","msgtype":"m.text"},"ts":1264989061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor, have you ever lived with an internet connection that was capped?","msgtype":"m.text"},"ts":1264989420000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"No.  Is that relevant?","msgtype":"m.text"},"ts":1264989480000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I was just wondering, since if you had, you might actually understand the detrimental effects that caps can have on many things, including work. I can tell you for a fact that it's no fun trying to do web development when your connection has been shaped to 64kbps for going over your monthly bandwidth limit","msgtype":"m.text"},"ts":1264989540000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Did I ever say caps were fun?  I'm pretty sure I explicitly said customers don't like them.","msgtype":"m.text"},"ts":1264989600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although, I was talking more about metering than caps)","msgtype":"m.text"},"ts":1264989601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"metering implies caps","msgtype":"m.text"},"ts":1264989602000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"No it doesn't.  My server's connection is metered but uncapped.","msgtype":"m.text"},"ts":1264989660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"unless you're talking about plans that charge per MB, and can get quite expensive really quickly","msgtype":"m.text"},"ts":1264989661000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I've legitimately done about 1GiB/day","msgtype":"m.text"},"ts":1264989662000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"granted, scp'ing 100MiB files to a server is going to do that rather quickly","msgtype":"m.text"},"ts":1264989663000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Sure, and it would be fair if you were charged more than someone who just checks their e-mail.","msgtype":"m.text"},"ts":1264989720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if someone just wants to check their e-mail, give them a low bandwidth, but uncapped, plan. I don't mind paying extra for the extra bandwidth. But I expect to be able to make use of it, which caps don't let me do","msgtype":"m.text"},"ts":1264989780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Updating wiki, will be down for a few minutes.","msgtype":"m.text"},"ts":1264989840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Back up.","msgtype":"m.text"},"ts":1264989841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Try viewing source.  :)","msgtype":"m.text"},"ts":1264989900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyone who finds a problem should report it to me and I'll fix it.  Meanwhile, I'm going to sleep.","msgtype":"m.text"},"ts":1264989960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"<!doctype html>","msgtype":"m.text"},"ts":1264989961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"<html lang=\"en\" dir=\"ltr\"  version=\"HTML+RDFa 1.0\" >","msgtype":"m.text"},"ts":1264989962000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wtf?","msgtype":"m.text"},"ts":1264989963000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Oh, right.","msgtype":"m.text"},"ts":1264989964000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"lose the version crap","msgtype":"m.text"},"ts":1264989965000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Let me disable the RDFa.  :P","msgtype":"m.text"},"ts":1264989966000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"how did RDFa shit get into mediawiki?","msgtype":"m.text"},"ts":1264989967000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Try now.","msgtype":"m.text"},"ts":1264989968000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Someone committed it.","msgtype":"m.text"},"ts":1264990020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then I said we should also allow microdata, and then I said we should allow only microdata, and a lengthy debate ensued on the mailing list.","msgtype":"m.text"},"ts":1264990021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(wikitech-l, I mean)","msgtype":"m.text"},"ts":1264990022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think the likely outcome is that both get disabled by default.","msgtype":"m.text"},"ts":1264990023000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you should get the RDFa removed. It's non-conforming HTML5","msgtype":"m.text"},"ts":1264990024000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"It's conforming HTML5+RDFa!","msgtype":"m.text"},"ts":1264990080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, conformance matters less than usefulness.","msgtype":"m.text"},"ts":1264990081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The HTML5 mode means a whole truckload of non-conforming content, since we don't blacklist things like cellpadding and what have you.","msgtype":"m.text"},"ts":1264990082000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that's true. But HTML+RDFa is a completely useless spec","msgtype":"m.text"},"ts":1264990083000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But it also means more features, so to heck with validators.","msgtype":"m.text"},"ts":1264990140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, you don't have to convince me of that.","msgtype":"m.text"},"ts":1264990141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"points out type=search in the search bar, some type=number in preferences, autofocus in lots of places, . . .","msgtype":"m.emote"},"ts":1264990142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"All of which I wrote.  :P","msgtype":"m.text"},"ts":1264990200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"And of course, speaking of bandwidth, look at all those saved bytes!","msgtype":"m.text"},"ts":1264990260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, now's about time to go to bed.","msgtype":"m.text"},"ts":1264990261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"wonders if Lachy would be happier with an unmetered uncapped 256Kbps connection that he could use all day every day, or with a 20Mbps one that's capped at 100GB/month for the same cost","msgtype":"m.emote"},"ts":1264991640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"looks at Jingle and SIP to see if either would be usable with <device> and comes out disturbed at how complicated people make their protocols","msgtype":"m.emote"},"ts":1264991940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ping: Hixie ","msgtype":"m.text"},"ts":1265005500000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1265005620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey Hixie - do you know, or know someone who knows, or know somewhere I can find out information about youtube.com/html5 ?","msgtype":"m.text"},"ts":1265005920000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"what information?","msgtype":"m.text"},"ts":1265005980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTTP requisites","msgtype":"m.text"},"ts":1265005981000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"not sure what you mean","msgtype":"m.text"},"ts":1265005982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm getting 403 on my experimental build of webkit","msgtype":"m.text"},"ts":1265005983000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"odd","msgtype":"m.text"},"ts":1265005984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so presumably there are requisite headers","msgtype":"m.text"},"ts":1265005985000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"403 for the video file?","msgtype":"m.text"},"ts":1265005986000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1265005987000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"and it works for regular webkit?","msgtype":"m.text"},"ts":1265006040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how weird","msgtype":"m.text"},"ts":1265006041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"have you dumped the two network traffic sessions and compared them?","msgtype":"m.text"},"ts":1265006042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't see why there'd be anything like that","msgtype":"m.text"},"ts":1265006043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is a different multimedia backend","msgtype":"m.text"},"ts":1265006044000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"i'd recommend cracking out tcpdump and comparing them","msgtype":"m.text"},"ts":1265006100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, ok","msgtype":"m.text"},"ts":1265006101000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"my thought is it's probably either a cookie it wants, or a missing refferer header","msgtype":"m.text"},"ts":1265006160000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"my backend passes on neither at the moment","msgtype":"m.text"},"ts":1265006161000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"anyway, I just thought you might have seen some documents floating around I could consult :)","msgtype":"m.text"},"ts":1265006220000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"oh you almost certainly need the opt-in cookie","msgtype":"m.text"},"ts":1265006280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, unfortunately the webkit interface for media is somewhat broken in this respect. The backend is only passed a URL to the media file.","msgtype":"m.text"},"ts":1265006520000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"seriously, i'd recommend using tcpdump to see what the working UA is sending","msgtype":"m.text"},"ts":1265006640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it could be something obvious","msgtype":"m.text"},"ts":1265006641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"NickYoung: we do want to eventually fix the networking to go through WebKit's http stick - just tricky to beat both WebKit and relevant media engines into shape","msgtype":"m.text"},"ts":1265006642000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"NickYoung: I think Referer or Cookie is a likely candidate","msgtype":"m.text"},"ts":1265006643000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"NickYoung: if you find the differences, one easy way to see which is making the difference could be to use curl or wget with custom headers","msgtype":"m.text"},"ts":1265006700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"unfortunately I'm on linux atm, and HTML5 media support is in chrome (but not chromium) afaik","msgtype":"m.text"},"ts":1265006820000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"which leaves me with nothing to compare against","msgtype":"m.text"},"ts":1265006821000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"but a massive wget hack could work :P","msgtype":"m.text"},"ts":1265006880000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"there's no official Chrome for Linux yet?","msgtype":"m.text"},"ts":1265007540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wait, WebKit/Gtk has video support - does that not work?","msgtype":"m.text"},"ts":1265007541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(or is that what you are working on now?)","msgtype":"m.text"},"ts":1265007542000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm working on WebKit/Qt","msgtype":"m.text"},"ts":1265007600000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"you could check if WebKit/Gtk can handle YouTube, that might be the easiest point of reference (though of course you'd need a GStreamer module that does H.264...)","msgtype":"m.text"},"ts":1265007601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah.. I have that","msgtype":"m.text"},"ts":1265007660000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"I'll investigate :)","msgtype":"m.text"},"ts":1265007661000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"also, it looks like there is an official chrome for linux now","msgtype":"m.text"},"ts":1265007780000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"dear lord, the GTK version explicitly spoofs its user agent for movies.apple.com","msgtype":"m.text"},"ts":1265008800000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"NickYoung: if you find that UA spoofing is indeed required for movies.apple.com, could you please send me the info so I can file a bug on them? mjs⊙ac","msgtype":"m.text"},"ts":1265011740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: does aria-hidden actually work in Firefox for the use case you mentioned on the list?","msgtype":"m.text"},"ts":1265014020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: does aria-hidden in Firefox cause content to be hidden from visual rendering?","msgtype":"m.text"},"ts":1265014021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: no, AFAIK","msgtype":"m.text"},"ts":1265014080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I assume not, because that would violate the ARIA spec","msgtype":"m.text"},"ts":1265014081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so I assume it does work in Firefox","msgtype":"m.text"},"ts":1265014082000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: but at least at some point, it didn't really prune anything from the accessible tree, either","msgtype":"m.text"},"ts":1265014083000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: that would presumably be a bug in their ARIA support...","msgtype":"m.text"},"ts":1265014084000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it depended on the author specifying *[aria-hidden=\"true\"] { display: none; }","msgtype":"m.text"},"ts":1265014085000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I'm certainly not telling authors to include that, since it subverts the intent of the ARIA spec (as far as I can tell)","msgtype":"m.text"},"ts":1265014140000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I guess \"the intent of the ARIA spec\" is tricky thing","msgtype":"m.text"},"ts":1265014141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"my reading is that role=\"presentation\" is supposed to skip an element (but still include its children) in the accessibility tree, and aria-hidden is supposed to hide the element *and* its children in the accessibility tree","msgtype":"m.text"},"ts":1265014200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"what I've heard from the folks behind ARIA, *[aria-hidden=\"true\"] { display: none; } in an author style sheet is very much something that is expected","msgtype":"m.text"},"ts":1265014201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: that's my understanding of the spec, too.","msgtype":"m.text"},"ts":1265014202000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"having that in a UA stylesheet would definitely violate the ARIA spec","msgtype":"m.text"},"ts":1265014260000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"having it in an author stylesheet does not seem like a problem per se if you definitely want to visually hide all content that's also hidden from accessibility","msgtype":"m.text"},"ts":1265014261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I said \"author style sheet\" intentionally. Putting it in the UA style sheet would be clearly wrong.","msgtype":"m.text"},"ts":1265014262000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"however, the author should not *have* to specify that, to hide content in the accessibility tree","msgtype":"m.text"},"ts":1265014263000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if the UA doesn't prune it from the accessibility tree unless the author includes \"*[aria-hidden=\"true\"] { display: none; }\", that too would violate the ARIA spec (as I read it)","msgtype":"m.text"},"ts":1265014320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or at least, if the UA+AT combination still present the content in that case, then there is clearly a bug in at least one of them","msgtype":"m.text"},"ts":1265014321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I agree. Dunno what Firefox does now and what's considered a bug and what's a feature here.","msgtype":"m.text"},"ts":1265014322000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but like I said, I've been advising people to use it like a recursive version of role=\"presentation\"","msgtype":"m.text"},"ts":1265014380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(the case this has particularly come up, the content does not actually need to work in other browsers, but that doesn't seem relevant to the actual issue of use cases)","msgtype":"m.text"},"ts":1265014500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: has this been for iTunes-embedded WebKit?","msgtype":"m.text"},"ts":1265014501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"can't really talk about the specific details, but feel free to speculate","msgtype":"m.text"},"ts":1265014560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1265014561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I am sure we will need something similar in the future in content that works cross-browser","msgtype":"m.text"},"ts":1265014562000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"at which point I guess we will have to test in all the target browsers we care about and possibly report bugs","msgtype":"m.text"},"ts":1265014620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: aaronlev said back in 2007 that aria-hidden did nothing in firefox but display:none hid from accessibility tree","msgtype":"m.text"},"ts":1265015160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej: dunno if it has changed","msgtype":"m.text"},"ts":1265015161000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: in Safari on Mac with VoiceOver, it definitely hides the whole subtree from the accessibility tree","msgtype":"m.text"},"ts":1265015220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I could test in Firefox on Mac","msgtype":"m.text"},"ts":1265015221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I have n easy way to test accessibility behavior on Windows though :-/","msgtype":"m.text"},"ts":1265015222000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's an aapi debug tool for windows","msgtype":"m.text"},"ts":1265015280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"inspect32.exe at http://www.microsoft.com/downloads/details.aspx?familyid=3755582a-a707-460a-bf21-1373316e13f0","msgtype":"m.text"},"ts":1265015340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"my favorite thing about voiceover is that it shows what it's speaking, so you can even test with it muted...","msgtype":"m.text"},"ts":1265015700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm my copy of Firefox does not seem to support VoiceOver on Mac","msgtype":"m.text"},"ts":1265015760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm running 3.5.2","msgtype":"m.text"},"ts":1265015761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"same thing with a minefiled alpha","msgtype":"m.text"},"ts":1265015762000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: IIRC, Mac accessibility of Firefox got frozen, because the developers didn't get enough information out of Apple a couple of years ago","msgtype":"m.text"},"ts":1265015820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: do you know if Firefox supports accessibility at all on Mac?","msgtype":"m.text"},"ts":1265015821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I can't get VoiceOver to read anything but the title controls","msgtype":"m.text"},"ts":1265015822000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: there at least used to be code but IIRC it has never been turned on by default","msgtype":"m.text"},"ts":1265015823000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"guess I can't test this after all","msgtype":"m.text"},"ts":1265015824000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and in Chrome only the toolbar supports VoiceOver, not the content area","msgtype":"m.text"},"ts":1265016000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if anyone feels like testing on Windows, here is my test case:","msgtype":"m.text"},"ts":1265016060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<div>First paragraph.</div>","msgtype":"m.text"},"ts":1265016061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<div aria-hidden=\"true\">Hidden from accessibility.</div>","msgtype":"m.text"},"ts":1265016062000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"<div>Third paragraph.</div>","msgtype":"m.text"},"ts":1265016063000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(or on Linux)","msgtype":"m.text"},"ts":1265016064000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Safari definitely reads the first and third paragraph, but not the second, and shows all three","msgtype":"m.text"},"ts":1265016065000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: from what i can tell with inspect32.exe, firefox does not hide the paragraph from msaa","msgtype":"m.text"},"ts":1265016420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: how about IE?","msgtype":"m.text"},"ts":1265016660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"surkov: is it intentional that Firefox doesn't hide stuff from the accessible tree if aria-hidden=true?","msgtype":"m.text"},"ts":1265016720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"smaug__, David Bolter tried to contact with Apple developers to get some help but no real success iirc","msgtype":"m.text"},"ts":1265016721000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"hsivonen: I think so, iirc this ARIA requirement","msgtype":"m.text"},"ts":1265016722000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"jeez. i only got this laptop last week and i'm already nearly killing it again.","msgtype":"m.text"},"ts":1265016723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we set proper state on the accessible","msgtype":"m.text"},"ts":1265016724000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"moves his laptop further away from the tea cup","msgtype":"m.emote"},"ts":1265016725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: same as firefox","msgtype":"m.text"},"ts":1265016726000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe on Windows it's the screen reader's job to hide aria-hidden stuff","msgtype":"m.text"},"ts":1265016780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(I don't actually know which of Safari or VoiceOver hides it on Mac, I tested end-to-end)","msgtype":"m.text"},"ts":1265016840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"surkov: where is the requirement in ARIA?","msgtype":"m.text"},"ts":1265016841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: it sounds the things were changed, now ARIA impl guide sais \"# has one of the WAI-ARIA  global states and properties but does not have the aria-hidden  property set to \"true\". Hidden elements are not exposed to assistive technology.\"","msgtype":"m.text"},"ts":1265016900000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"http://www.w3.org/WAI/PF/aria-implementation/","msgtype":"m.text"},"ts":1265016901000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"\"This is not used in mapping to platform accessibility APIs. Instead, use information from the layout system to determine if the element is hidden or not. Advisory: it is incorrect use of ARIA if an element with aria-hidden=\"true\" is visible. The aria-hidden property is exposed only so that DOM-based assistive technologies can be informed of visibility changes. However, the layout will be able to provide the most complete set of all truly hidden","msgtype":"m.text"},"ts":1265016960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nodes.\"","msgtype":"m.text"},"ts":1265016961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(same url)","msgtype":"m.text"},"ts":1265016962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"uh i mean https://developer.mozilla.org/En/ARIA_to_API_mapping","msgtype":"m.text"},"ts":1265016963000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, that seems to contradict what WAI-ARIA itself says","msgtype":"m.text"},"ts":1265016964000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(but the other url seems to say the same thing)","msgtype":"m.text"},"ts":1265017020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: English translation: aria-hidden is only for IE7+JAWS","msgtype":"m.text"},"ts":1265017021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"This allows http://www.w3.org/TR/wai-aria/terms#def_at or http://www.w3.org/TR/wai-aria/terms#def_useragent to properly skip http://www.w3.org/TR/wai-aria/terms#def_hidden elements in the document.\"","msgtype":"m.text"},"ts":1265017022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yay for UA-specific features","msgtype":"m.text"},"ts":1265017023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(boy that copied oddly)","msgtype":"m.text"},"ts":1265017024000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so I wonder what is the correct way to do the deep equivalent of role=\"presentation\"","msgtype":"m.text"},"ts":1265017080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"should you just put role=\"presentation\" on every element in the subtree? (But that still won't affect the text nodes)","msgtype":"m.text"},"ts":1265017081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: actually it sounds aria-hidden doesn't make sense at all in the current aria impl guide edition","msgtype":"m.text"},"ts":1265017140000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"othermaciej: maybe send feedback to public-pfwg-comments⊙wo today? today is the DL for ARIA comments.","msgtype":"m.text"},"ts":1265017141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder also why the implementor's guide apprently contradicts the spec on this","msgtype":"m.text"},"ts":1265017142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: will attempt to","msgtype":"m.text"},"ts":1265017143000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: I'll ping David Bolter about this issue since he is a member of ARIA group","msgtype":"m.text"},"ts":1265017200000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"surkov: thanks","msgtype":"m.text"},"ts":1265017201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: the correct way is \"don't have presentational elements\"","msgtype":"m.text"},"ts":1265017260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm posting to public-pfwg-comments but I don't necessarily expect to have a prompt reply","msgtype":"m.text"},"ts":1265017261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: we have some markup that would give bad results in a screen reader if you didn't hide part of it, but where the extra bits can't be tacked on via CSS","msgtype":"m.text"},"ts":1265017320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: sounds like a bug for css","msgtype":"m.text"},"ts":1265017321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so maybe your answer is \"redesign the UI\", but that does not seem like helpful advice","msgtype":"m.text"},"ts":1265017322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is it a goal for CSS to allow generated content with arbitrarily complex internal structure and styling?","msgtype":"m.text"},"ts":1265017380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I mean, you can use XBL to do that","msgtype":"m.text"},"ts":1265017381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but in that case you'd still need ARIA to control how your XBL binding is presented to a screen reader","msgtype":"m.text"},"ts":1265017382000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe the answer is xbl","msgtype":"m.text"},"ts":1265017383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's hard to know without examining the actual use case","msgtype":"m.text"},"ts":1265017384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which regrettably I am not at liberty to paste here","msgtype":"m.text"},"ts":1265017385000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think we'll probably need to add something to xbl to indicate whether the accessibility apis are expected to crawl it or not","msgtype":"m.text"},"ts":1265017440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really this should be solved by not using the same media type for screens as screen readers","msgtype":"m.text"},"ts":1265017441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's another story","msgtype":"m.text"},"ts":1265017442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think you may need more control than binary \"yes\" or \"no\" over the accessibility behavior","msgtype":"m.text"},"ts":1265017500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though I suppose reading either the surface markup or the contents of the XBL binding which may internally use ARIA would cut it","msgtype":"m.text"},"ts":1265017501000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but you'd still need a proper mechanism to hide parts of the XBL shadow tree from screen readers","msgtype":"m.text"},"ts":1265017502000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"using a different media type would be cleaner CSS wise, but would require generating two render trees to have both visual and audio presentation at the same time","msgtype":"m.text"},"ts":1265017560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(which is the only mode VoiceOver has, so you can work with or help a blind person by looking over their shoulder)","msgtype":"m.text"},"ts":1265017561000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I agree XBL markup should have a stuffs to control its accessible tree, in firefox we some basic stuffs to do this. For example, accessible for bound XBL element can provide accessible name or XBL can allow or deny accessible children in its subtree","msgtype":"m.text"},"ts":1265018100000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"ideally I think XBL should special markup to control all this stuffs","msgtype":"m.text"},"ts":1265018160000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"hsivonen, zcorpan, surkov: http://lists.w3.org/Archives/Public/public-pfwg-comments/2010JanMar/0038.html","msgtype":"m.text"},"ts":1265019120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.floodgap.com/software/classilla/ wow","msgtype":"m.text"},"ts":1265019121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"surkov: I think the markup to control accessible presentation of XBL should be (a possibly extended version of) ARIA, and it should also be usable outside XBL, so that it's viable to use DIV soup as fallback to XBL during the transition","msgtype":"m.text"},"ts":1265019122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would not want to see a whole second form of accessibility markup","msgtype":"m.text"},"ts":1265019180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: neat parlor trick, I guess","msgtype":"m.text"},"ts":1265019181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, if origin is a unique identifier the result is Origin: null","msgtype":"m.text"},"ts":1265019300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and my idea was that it would support preflights as well","msgtype":"m.text"},"ts":1265019360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because that was the plan for Level 2 of their protocol anyway","msgtype":"m.text"},"ts":1265019361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok well i've dealt with all the websocket feedback that is not on the hybi list and all the feedback on the hybi list up to the 28th of this month","msgtype":"m.text"},"ts":1265019480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all that's left is GIANT threads of pain","msgtype":"m.text"},"ts":1265019481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i go through and delete the process ones first","msgtype":"m.text"},"ts":1265019482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: should there be a \"force no preflight\" flag anyway to define XDR sanely?","msgtype":"m.text"},"ts":1265019483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: I guess XDR just doesn't allow sending any requests that would cause preflight, so nevermind","msgtype":"m.text"},"ts":1265019484000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I tried to move discussion into the technical threads","msgtype":"m.text"},"ts":1265019540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah that helps a lot, indeed","msgtype":"m.text"},"ts":1265019541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i like the subthread with the subject line \"Process, was: Technical feedback. was:  Process\"","msgtype":"m.text"},"ts":1265019600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I have some potentially bad news, which is that I came up with a way to do the handshake that is both much more secure and likely much easier to use in existing server software","msgtype":"m.text"},"ts":1265019601000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1265019602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is it too late to consider changes to the handshake?","msgtype":"m.text"},"ts":1265019603000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"depends how much of an improvement it is","msgtype":"m.text"},"ts":1265019604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the improvement?","msgtype":"m.text"},"ts":1265019605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, so as I understand it, the security goal of the \"exact binary match\" requirement on the first part of the header is to reduce the risk of abusing unmodified vanilla HTTP servers,  or non-HTTP resources","msgtype":"m.text"},"ts":1265019660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: thanks","msgtype":"m.text"},"ts":1265019661000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"othermaciej: more or less, yeah","msgtype":"m.text"},"ts":1265019662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there's two problems with the current setup:","msgtype":"m.text"},"ts":1265019663000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, you can prevent sending a preflight by preventing making requests that result in one","msgtype":"m.text"},"ts":1265019664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(you can force a preflight if you want)","msgtype":"m.text"},"ts":1265019720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"1) Hardcoding not just the status line, but also a few of the initial headers, is apparently a pain in the ass to work into existing HTTP stacks in servers (I'm willing to take their word for it).","msgtype":"m.text"},"ts":1265019721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't buy that at all, but i have heard it, yes","msgtype":"m.text"},"ts":1265019722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2) The handshake response consists exclusively of fixed contents, and literal character-for-character echoes of parts of the handshake request","msgtype":"m.text"},"ts":1265019723000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1265019780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this means that if you can trick any server into echoing back exact text of choice in response to a WebSocket request, you are hosed","msgtype":"m.text"},"ts":1265019781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a better method would be requiring something in the response that proves you saw the request, but is not predictable in advance","msgtype":"m.text"},"ts":1265019782000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes, though i'm not aware of any case where it is possible, and i've looked","msgtype":"m.text"},"ts":1265019783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so here is my proposal:","msgtype":"m.text"},"ts":1265019784000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"woah woah","msgtype":"m.text"},"ts":1265019840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1265019841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we don't want to require that the server parse the request","msgtype":"m.text"},"ts":1265019842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in fact in the common case the server won't parse the request at all","msgtype":"m.text"},"ts":1265019843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"- Include a nonce in the request","msgtype":"m.text"},"ts":1265019844000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"- Server includes a hash of the nonce plus the request origin in the response status line","msgtype":"m.text"},"ts":1265019845000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"- Only the status line is strictly constrained, not response headers","msgtype":"m.text"},"ts":1265019900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"This is clearly more robust against cross-protocol attacks","msgtype":"m.text"},"ts":1265019901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"unless you're aware of a web service that can be tricked into sending back the handshake, that seems unnecessarily complicated","msgtype":"m.text"},"ts":1265019902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now in the most common case a websocket server will send the handshake before the client does","msgtype":"m.text"},"ts":1265019960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's actually pretty trivial","msgtype":"m.text"},"ts":1265019961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"cross-protocol attacks do happen and it's hard to predict them","msgtype":"m.text"},"ts":1265019962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's not as trivial as not doing anything :-)","msgtype":"m.text"},"ts":1265019963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"witness recent firefox-based attack against IRC","msgtype":"m.text"},"ts":1265019964000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i agree that they happen, but as far as i've been able to tell, what we have currently is sufficient","msgtype":"m.text"},"ts":1265020020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what I described is far more robust against cross-protocol attacks, and likely easier to do in the context of integrating with an existing Web server","msgtype":"m.text"},"ts":1265020021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually i don't see why it's any more secure","msgtype":"m.text"},"ts":1265020022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"again, anything where the necessary handshake response is predictable is much more robust","msgtype":"m.text"},"ts":1265020023000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why can't you just cause the server to echo back the right hash?","msgtype":"m.text"},"ts":1265020024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you can't predict the correct handshake response","msgtype":"m.text"},"ts":1265020025000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1265020026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you (the JS-level attacker) do not know the nonce","msgtype":"m.text"},"ts":1265020080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh the UA makes up the nonce, ok","msgtype":"m.text"},"ts":1265020081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is generated by the UA","msgtype":"m.text"},"ts":1265020082000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that seems like a lot more complexity than what we have now","msgtype":"m.text"},"ts":1265020083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i agree it's easy for experienced programmers","msgtype":"m.text"},"ts":1265020084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't even have to be a cryptographically secure hash, in fact, it might be an improvement even if you don't hash the nonce at all","msgtype":"m.text"},"ts":1265020085000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and even more non-experienced ones","msgtype":"m.text"},"ts":1265020086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/more/most/","msgtype":"m.text"},"ts":1265020087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or at least many0","msgtype":"m.text"},"ts":1265020140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it is still more work than nothing","msgtype":"m.text"},"ts":1265020141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not aware of any protocol where you can cause the server to echo back the handshake or even get close","msgtype":"m.text"},"ts":1265020142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"especially given how constrained the client's part of the handshake is","msgtype":"m.text"},"ts":1265020200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and putting the unpredictable part of the required handshake response in the status line makes it slightly more robust against header injection attacks on normal HTTP services","msgtype":"m.text"},"ts":1265020201000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right, the client can only control the URL part","msgtype":"m.text"},"ts":1265020202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"however, what I described is secure at a stronger level than \"I'm not aware of any hackable services currently\"","msgtype":"m.text"},"ts":1265020260000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"agreed, but it's not enough of an improvement to throw away the half-dozen or so implementations","msgtype":"m.text"},"ts":1265020261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(if you had suggested this six months ago, it'd be in without question)","msgtype":"m.text"},"ts":1265020262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why don't we check if server and client implementors think it's enough of an improvement?","msgtype":"m.text"},"ts":1265020320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"go for it","msgtype":"m.text"},"ts":1265020321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"afaik the only client implementation that has actually shipped is Chrome, and they specifically said they weren't looking to prematurely lock in the protocol","msgtype":"m.text"},"ts":1265020322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'm certainly happy to improve matters if people are willing to rewrite their code","msgtype":"m.text"},"ts":1265020323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i really don't like requiring that the server have to do work in the handshake","msgtype":"m.text"},"ts":1265020324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't there some way we can get around that?","msgtype":"m.text"},"ts":1265020325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I posted a vague form of my suggestion on the hybi list","msgtype":"m.text"},"ts":1265020380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe I should pull it out of the thread and/or post it on whatwg","msgtype":"m.text"},"ts":1265020381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"man, all this hybi crap in my inbox","msgtype":"m.text"},"ts":1265020382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe also get abarth's opinion","msgtype":"m.text"},"ts":1265020383000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and now you guys are spamming this channel with it as well :p","msgtype":"m.text"},"ts":1265020384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"actually the more i think of this the less i like it... i don't like making the server have to read the client's data","msgtype":"m.text"},"ts":1265020440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"currently you can make a really simple server that completely ignores the server if you want to do something simple (similar to eventsource)","msgtype":"m.text"},"ts":1265020441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, ignores the client","msgtype":"m.text"},"ts":1265020442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if a server accepts requests from multiple origins, doesn't it have to read the client's data anyway?","msgtype":"m.text"},"ts":1265020443000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes, but that's likely to be much rarer","msgtype":"m.text"},"ts":1265020444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the fact that it's needed in that case makes me think it is not such a huge burden","msgtype":"m.text"},"ts":1265020560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i didn't say it was a huge burden, i said it was a burden","msgtype":"m.text"},"ts":1265020561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now you can literally never read a byte from the client","msgtype":"m.text"},"ts":1265020562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the part that the server has to read, check and echo-back isn't even in the fixed-order-and-capitalization part of the request, it's in the freeform part","msgtype":"m.text"},"ts":1265020563000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is it not required for servers to check correctness of the client part of the handshake?","msgtype":"m.text"},"ts":1265020620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1265020621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they can totally ignore the client","msgtype":"m.text"},"ts":1265020622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so a server could respond with WebSocket data even if you don't include Upgrade: WebSocket Connection: Upgrade?","msgtype":"m.text"},"ts":1265020623000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1265020624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wouldn't such a service be at risk of being exploited via XHR?","msgtype":"m.text"},"ts":1265020680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"comnnechow?","msgtype":"m.text"},"ts":1265020681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1265020682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how?","msgtype":"m.text"},"ts":1265020683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"try connecting to damowmow.com:11111","msgtype":"m.text"},"ts":1265020684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how can XHR exploit that?","msgtype":"m.text"},"ts":1265020685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If it does not check the handshake request, I bet I can send it a GET with some preformatted messages as the body","msgtype":"m.text"},"ts":1265020740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even if I can't get the results back, that's still an integrity violation","msgtype":"m.text"},"ts":1265020741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1265020742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the service accepts commands of some kind via WebSocket that have side effects, rather than just reporting data, you could use XHR to abuse it if it does not check the handshake request","msgtype":"m.text"},"ts":1265020800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if the server ignores the client, there's really not much to abuse","msgtype":"m.text"},"ts":1265020801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: thanks for the link, I looked at the Firefox code and we do nothing with aria-hidden. And it sounds it goes with the spec :). However I'm agree it's not clear why ARIA hidden is at all.","msgtype":"m.text"},"ts":1265020802000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"at least in a browser that supports CORS","msgtype":"m.text"},"ts":1265020803000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"surkov: it doesn't sound to me like that is correct per the actual spec","msgtype":"m.text"},"ts":1265020860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if the server ignores the client handshake but does listen to frames, then yes, you could send frames, just like you could if you just used zombies to send data there","msgtype":"m.text"},"ts":1265020861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that doesn't seem like a particular problem","msgtype":"m.text"},"ts":1265020862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"XHR cannot do GET with a body","msgtype":"m.text"},"ts":1265020863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless the UA is broken","msgtype":"m.text"},"ts":1265020864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's a problem if the server uses Cookies from the request but does not otherwise check correctness","msgtype":"m.text"},"ts":1265020920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: the spec sais aria-hidden=\"true\" should be on hidden elements, aria-hidden=\"false\" on visible elements so aria-hidden does affect on nothing","msgtype":"m.text"},"ts":1265020921000,"senderName":"surkov","senderId":"surkov@irc"},
{"content":{"body":"annevk: good point - do any cross-site POSTs count as \"simple requests\"","msgtype":"m.text"},"ts":1265020922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1265020923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the Content-Type header matches <form enctype> allowed values","msgtype":"m.text"},"ts":1265020924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: yes, if you read cookies you should make sure you're getting a websocket handshake. but then we're far past \"ignoring the client\", and checking the handshake is not a burden any more, since you're already parsing it and everything.","msgtype":"m.text"},"ts":1265020980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if you're not checking correctness of the handshake request you presumably don't check the method either","msgtype":"m.text"},"ts":1265020981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: it seems to me that if you are completely ignoring the client, you don't really need a full duplex connection","msgtype":"m.text"},"ts":1265020982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: *shrug*","msgtype":"m.text"},"ts":1265021040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you listen to the messages, then you'd better check the handshake","msgtype":"m.text"},"ts":1265021041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i doubt most servers will","msgtype":"m.text"},"ts":1265021042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec should at least mention this in security considerations, even if it does not mandate rejecting a bad handshake","msgtype":"m.text"},"ts":1265021043000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if most servers will not, then we effectively have an insecure protocol","msgtype":"m.text"},"ts":1265021100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not much we can do about that as far as i can tell","msgtype":"m.text"},"ts":1265021101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's always possible to make a buggy server, and indeed we can't prevent that","msgtype":"m.text"},"ts":1265021102000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but:","msgtype":"m.text"},"ts":1265021160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a) the spec could require the server to check the handshake for correctness, even if we know some won't listen","msgtype":"m.text"},"ts":1265021161000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure, i can add that, at least for the case where you read cookies","msgtype":"m.text"},"ts":1265021162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"b) even if it does not require it, the spec could recommend checking the handshake for correctness in the case where you look at any credentials and/or perform any side effects in response to messages","msgtype":"m.text"},"ts":1265021220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"c) my nonce proposal would actually force servers to read the handshake and process it (though it can't force them to check it is really correct, I suppose)","msgtype":"m.text"},"ts":1265021221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if a server truly ignores all input, then it could work just as well over EventSource with less trouble, so I am not sure WebSocket has to make that use case extra easy","msgtype":"m.text"},"ts":1265021280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think requiring the non-sensitive cases to be harder just to secure the sensitive cases is making the wrong tradeoff, personally","msgtype":"m.text"},"ts":1265021340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what i'd really like to do is throw out the HTTP compatibility altogether","msgtype":"m.text"},"ts":1265021341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and go back to ports 81 and 815","msgtype":"m.text"},"ts":1265021342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think the sensitive use cases are some of the most important","msgtype":"m.text"},"ts":1265021400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and then just have people use port 443 as they will anyway","msgtype":"m.text"},"ts":1265021401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"chat is clearly a case where you care about integrity, not just confidentiality","msgtype":"m.text"},"ts":1265021402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(i.e. you don't want random third parties to be able to forge chat messages as you)","msgtype":"m.text"},"ts":1265021403000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think security is one area where I would be very hesitant to cut corners, even if it makes things easier for the use cases where you don't need any security","msgtype":"m.text"},"ts":1265021460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well if we really want security to that level, we should design the handshake with that in mind and stop using HTTP","msgtype":"m.text"},"ts":1265021520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"trying to retrofit it into HTTP isn't ideal","msgtype":"m.text"},"ts":1265021521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and will always leave us vulnerable to the fake-websocket-via-form-post attack","msgtype":"m.text"},"ts":1265021580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"retrofitting it into HTTP makes it easier to share a host:port with a web server","msgtype":"m.text"},"ts":1265021581000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i thought so too, but apparently not","msgtype":"m.text"},"ts":1265021582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because it makes people think they should use their HTTP output code","msgtype":"m.text"},"ts":1265021583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well it's really the input side of the handshake that matters","msgtype":"m.text"},"ts":1265021640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i.e. the request from the client to the server","msgtype":"m.text"},"ts":1265021641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the server response could be anything, the fact that it takes the form of an HTTP 101 request is just following things to their logical conclusion","msgtype":"m.text"},"ts":1265021700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that being said, I think making the handshake response unpredictable would do more to improve security than making the handshake non-HTTP","msgtype":"m.text"},"ts":1265021701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"making the handshake non-HTTP could solve the entire attack scenario you described","msgtype":"m.text"},"ts":1265021760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is a real attack scenario","msgtype":"m.text"},"ts":1265021761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unlike echoing the handshake, which is theoretical at this point","msgtype":"m.text"},"ts":1265021762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'd say it's the other way around","msgtype":"m.text"},"ts":1265021763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually, if a non-http handshake still allowed the server to ignore the client handshake request, it would do nothing to prevent my attack scenario","msgtype":"m.text"},"ts":1265021764000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"nah, it'd be easy to design it in a way that it could... e.g. terminate the handshake with \\n, so that the first frame would be corrupt","msgtype":"m.text"},"ts":1265021880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then you would have to hard fail on a bad frame instead of ignoring it and moving on - does the protocol require that currently?","msgtype":"m.text"},"ts":1265021940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you're writing a server lazily, that's by far the easiest thing to do","msgtype":"m.text"},"ts":1265021941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec does explain how you can go the extra mile and ignore unknown frames, but it's extra code, like checking the handshake","msgtype":"m.text"},"ts":1265022000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the frame boundary is a fixed sentinel, then it's easiest to scan for the sentinel","msgtype":"m.text"},"ts":1265022001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we could arrange for the failure to be with a length-delimited frame and for the length to be gigantic","msgtype":"m.text"},"ts":1265022002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by flipping the meanings of the high bits in the frame typesa and the length marker","msgtype":"m.text"},"ts":1265022003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we do your nonce idea, we could put the nonce in a specific header that would only be included with websockets","msgtype":"m.text"},"ts":1265022120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that if you can't find it, you can't send it","msgtype":"m.text"},"ts":1265022121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"request-wise you mean?","msgtype":"m.text"},"ts":1265022122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1265022123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that might make it more likely that the server implementors would fail if they can't find it","msgtype":"m.text"},"ts":1265022124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I agree that it should go in a request header that is only sent by WebSocet","msgtype":"m.text"},"ts":1265022125000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"er *WebSocket","msgtype":"m.text"},"ts":1265022180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think I will ask abarth for his opinion on these issues","msgtype":"m.text"},"ts":1265022181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"both whether the attacks I described are worth worrying about, and whether a nonce mechanism would be an effective defense","msgtype":"m.text"},"ts":1265022240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"one of my concerns with requiring that authors read the handshake is that one of the advantages of them NOT reading the handshake is they won't just echo back the origin","msgtype":"m.text"},"ts":1265022780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm worried that authors will just do that instead of echoing back only their own origin","msgtype":"m.text"},"ts":1265022781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"servers that accept connections from multiple origins actually *do* have to do that, after checking the origin, but you are right that it may affect the likelihood of making a mistake in the single-origin case","msgtype":"m.text"},"ts":1265022960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though of course you could write the server-side algorithms to say otherwise (i.e. have different ones for single-origin and multi-origin case, where the former only sends the fixed allowed origin after separately comparing it to the handshake origin)","msgtype":"m.text"},"ts":1265023080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's more or less what the spec does","msgtype":"m.text"},"ts":1265023140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the parsing is in a separate (later) section","msgtype":"m.text"},"ts":1265023141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"people using stock tools for this (like mod_pywebsocket) might be less likely to make that mistake, if the framework asks you to declare allowed origins to it up front","msgtype":"m.text"},"ts":1265023142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then the framework could make sure to both check against your list and echo back","msgtype":"m.text"},"ts":1265023200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess the main risk there would be if the framework has an \"allow any origin\" mode, authors might switch that on inadvertantly","msgtype":"m.text"},"ts":1265023201000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or indeed if they default to that :-)","msgtype":"m.text"},"ts":1265023202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"given how easy it is to write a websocket server, i don't know how much point there is to a websocket framework really","msgtype":"m.text"},"ts":1265023260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not having to parse the header is a big part of that)","msgtype":"m.text"},"ts":1265023261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, if you want something that operates on a large scale, you probably need some sort of framework, even if not for parsing the header","msgtype":"m.text"},"ts":1265023320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway - frameworks should probably either default to failing if you don't specify allowed origins, or default to allowing the same origin as the WEb sever they are running inside, if their purpose is to share a host:port with an existing web server","msgtype":"m.text"},"ts":1265023321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"what's blocking bytes in JS?","msgtype":"m.text"},"ts":1265023560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TC39","msgtype":"m.text"},"ts":1265023561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doh","msgtype":"m.text"},"ts":1265023562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: btw, re having acks in the protocol, it's relatively easy to add them at the application level, but it turns out to be much harder to add them at the websocket level. Basically all you need is to number your messages, and tell the server what the last message was you got when you reconnect.","msgtype":"m.text"},"ts":1265023920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: but if you do that at the websocket level, you've no way to know if the script _actually_ received the message","msgtype":"m.text"},"ts":1265023980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: right - I'm wondering what the practical benefit (if any) would be of doing it at the websocket level","msgtype":"m.text"},"ts":1265023981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"obviously, at the websocket level you could only generate transport-level acks, not guarantee actual end-to-end delivery to the app at either end","msgtype":"m.text"},"ts":1265023982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1265023983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one thing that would help is having a flag in the onclose event to say whether it was an orderly close or not","msgtype":"m.text"},"ts":1265024040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm wondering if a clean shutdown handshake is something that benefits from being at the protocol level","msgtype":"m.text"},"ts":1265024041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TCP already does that for us, no?","msgtype":"m.text"},"ts":1265024042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sounds like if you don't use one at the app level, you have to do the same kind of \"lingering close\" dance as HTTP servers, or you may lose mssages","msgtype":"m.text"},"ts":1265024043000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"some of the content on the thread implies that the TCP close handshake is broken, and http servers have to work around it in crazy ways","msgtype":"m.text"},"ts":1265024100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I do not have enough expertise to check the accuracy of those claims","msgtype":"m.text"},"ts":1265024101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"obviously you can do a close handshake at the subprotocol level if you want, but if every subprotocol has to do it to be remotely correct, then maybe it should be in the base protocol","msgtype":"m.text"},"ts":1265024160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i guess i'd have to understand the use case better","msgtype":"m.text"},"ts":1265024161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to have an opinion","msgtype":"m.text"},"ts":1265024220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"apparently, if you just do a normal close of your socket when you are done sending, in some cases it can make the client drop data that it has already ACKd at the TCP level","msgtype":"m.text"},"ts":1265024221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in other words, you might lose the last few messages even if there is no actual disruption of service","msgtype":"m.text"},"ts":1265024280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Web servers do something crazy that I don't understand to work around this","msgtype":"m.text"},"ts":1265024281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would be nice if protocol reliability could just rely on TCP-level acks, but besides the close issue, there's the problem that OS TCP stacks apparently don't expose how much has been ACK'd","msgtype":"m.text"},"ts":1265024282000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which seems like a waste...","msgtype":"m.text"},"ts":1265024340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TCP is supposed to provide a reliable stream, but the next level up has to reinvent reliability","msgtype":"m.text"},"ts":1265024341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wait, back up","msgtype":"m.text"},"ts":1265024342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"who's closing?","msgtype":"m.text"},"ts":1265024343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"client or server?","msgtype":"m.text"},"ts":1265024344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the server","msgtype":"m.text"},"ts":1265024345000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and why?","msgtype":"m.text"},"ts":1265024346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1265024347000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the server has sent the final message it intends to","msgtype":"m.text"},"ts":1265024348000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"closes the socket","msgtype":"m.text"},"ts":1265024349000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that can make the client lose the last few messages","msgtype":"m.text"},"ts":1265024350000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so the server thinks it's done but it wants to make sure it gets all the client's messages?","msgtype":"m.text"},"ts":1265024351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(apparently)","msgtype":"m.text"},"ts":1265024400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well there's no way to do that except at the application layer, since you don't know what the app wants to send but hasn't sent yet","msgtype":"m.text"},"ts":1265024401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not messages from the client","msgtype":"m.text"},"ts":1265024402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"what people claim is this:","msgtype":"m.text"},"ts":1265024403000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"- the server sends some messages to the client","msgtype":"m.text"},"ts":1265024404000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"- the server gets TCP-level ACKs","msgtype":"m.text"},"ts":1265024405000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"- the server closes the socket","msgtype":"m.text"},"ts":1265024406000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in this case, TCP requirements can cause the client to forcibly drop the last few messages","msgtype":"m.text"},"ts":1265024460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh i see","msgtype":"m.text"},"ts":1265024461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you have to do some \"lingering close\" trick to avoid it","msgtype":"m.text"},"ts":1265024462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wow, really?","msgtype":"m.text"},"ts":1265024463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's, ah, stupid","msgtype":"m.text"},"ts":1265024464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about we fix TCP","msgtype":"m.text"},"ts":1265024465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sounds like a huge bug in TCP to me","msgtype":"m.text"},"ts":1265024466000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I think \"fix TCP\" is out of the range of the practical","msgtype":"m.text"},"ts":1265024467000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"someone asked about TCP5 from us","msgtype":"m.text"},"ts":1265024468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: cool, glad you enjoyed it","msgtype":"m.text"},"ts":1265024520000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"jokingly maybe","msgtype":"m.text"},"ts":1265024521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whereas \"shutdown handshake\" is viable","msgtype":"m.text"},"ts":1265024522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: did you happen to find out and document what exactly WebKit does with initial about:blank?","msgtype":"m.text"},"ts":1265024523000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"forgot who it was","msgtype":"m.emote"},"ts":1265024524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: it turned out that the new RDF extraction algorithm is a bit b0rked, will send mail about that tonight hopefully","msgtype":"m.text"},"ts":1265024525000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hsivonen: not in any more detail than what the spec says now","msgtype":"m.text"},"ts":1265024526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip: cool","msgtype":"m.text"},"ts":1265024527000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I wonder if SCTP fixes this problem","msgtype":"m.text"},"ts":1265024528000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: ok.","msgtype":"m.text"},"ts":1265024529000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"clearly, what the spec says now isn't what WebKit does","msgtype":"m.text"},"ts":1265024580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://hsivonen.iki.fi/test/moz/about-blank-load.html","msgtype":"m.text"},"ts":1265024581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this whole about:blank has been so sad. I reached my timeout of fixing it the right way on the critical path of HTML5 parser enablement","msgtype":"m.text"},"ts":1265024640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I'm going to paper over it for now","msgtype":"m.text"},"ts":1265024641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I'd still like to fix it the right way once the HTML5 parser is on by default on trunk","msgtype":"m.text"},"ts":1265024642000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: the \"Reliable message delivery\" subthread had the explanations of the socket close issue","msgtype":"m.text"},"ts":1265024643000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.ietf.org/mail-archive/web/hybi/current/msg01030.html","msgtype":"m.text"},"ts":1265024644000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.ietf.org/mail-archive/web/hybi/current/msg01044.html has more details","msgtype":"m.text"},"ts":1265024700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(that is, even what the spec says now and what the spec says plus load event are too much on the critical path)","msgtype":"m.text"},"ts":1265024701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fwiw, the above demo alerts \"Different body\" in Gecko, WebKit and Trident","msgtype":"m.text"},"ts":1265024760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and \"Same body\" in Opera","msgtype":"m.text"},"ts":1265024761000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: does the spec require too much relative to what WebKit does, or too little?","msgtype":"m.text"},"ts":1265024762000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: breaks enough test cases that poking at about:blank is going to be a test case whack-a-mole project on its own right","msgtype":"m.text"},"ts":1265024763000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I am surprised that this echoed \"Different body\"","msgtype":"m.text"},"ts":1265024820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"getting the HTML5 parser on by default is big enough a test case whack-a-mole project already","msgtype":"m.text"},"ts":1265024821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I figured out why it says \"Different body\" in WebKit","msgtype":"m.text"},"ts":1265024880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: it's not because the about:blank load is async, it's because the load event listener runs before the second script","msgtype":"m.text"},"ts":1265024881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: does the event loop spin or do you fire a sync load event?","msgtype":"m.text"},"ts":1265024940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't know code-wise why it happens (either explanation is plausible), but I verified that the end() function runs before the second script by adding more alerts","msgtype":"m.text"},"ts":1265025000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://dev.w3.org/rdfa/specs/rdfa-dom-api.html","msgtype":"m.text"},"ts":1265025001000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"othermaciej: ok. thanks","msgtype":"m.text"},"ts":1265025002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I believe we do fire a load event from the middle of parsing without spinning the event loop","msgtype":"m.text"},"ts":1265025060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"foolip: I am amused that the \"Triple\" interface has 6 things in it...","msgtype":"m.text"},"ts":1265025120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: eww. I really don't want to go down that road.","msgtype":"m.text"},"ts":1265025121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I just think that is how our code happens to work - no idea if this is required","msgtype":"m.text"},"ts":1265025122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: I think it is actually as a result of DOM insertion, not parsing, that the load event fires","msgtype":"m.text"},"ts":1265025123000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: ok. I still want to avoid sync events while the parser is on the call stack","msgtype":"m.text"},"ts":1265025180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I can see the wisdom of that","msgtype":"m.text"},"ts":1265025181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I honestly have no idea if this behavior is needed for Web compat","msgtype":"m.text"},"ts":1265025182000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm just trying to describe what we do","msgtype":"m.text"},"ts":1265025183000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure. thanks","msgtype":"m.text"},"ts":1265025240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So the IETF doesn't like cool URIs? Interesting","msgtype":"m.text"},"ts":1265025241000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"that's nothing new","msgtype":"m.text"},"ts":1265025242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though tools.ietf.org generally does","msgtype":"m.text"},"ts":1265025243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I use that","msgtype":"m.text"},"ts":1265025244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: well, (object, datatype, language) is really all part of the object, and children is just a bit odd. I assume this won't be the final draft.","msgtype":"m.text"},"ts":1265025300000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"othermaciej: about the H:TML draft, I will get an announcement out to public-html shortly","msgtype":"m.text"},"ts":1265025301000,"senderName":"MikeSmithX","senderId":"MikeSmithX@irc"},
{"content":{"body":"sorry for the delay, I made quite a lot of changes over the weekend","msgtype":"m.text"},"ts":1265025302000,"senderName":"MikeSmithX","senderId":"MikeSmithX@irc"},
{"content":{"body":"whoa. the load event is sync in IE8, too","msgtype":"m.text"},"ts":1265025360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: btw, the two framing types is a result of targetting novice authors. SPDY is intended to be implemented by experts only.","msgtype":"m.text"},"ts":1265025480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: also, it's really easy to do multiplexing if your subprotocol supports it, just use a shared worker","msgtype":"m.text"},"ts":1265025540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: at this point I'm a little frightened of the thought of novice authors implementing the protocol by hand - I really hope people make good frameworks for Perl/Python/Ruby/Java/etc","msgtype":"m.text"},"ts":1265025541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1265025600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the protocol is trivial","msgtype":"m.text"},"ts":1265025601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems like there are many opportunities for subtle mistakes, when you dig into the details","msgtype":"m.text"},"ts":1265025602000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i've tried to minimise those","msgtype":"m.text"},"ts":1265025660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously it's impossible to make a protocol idiot-proof, but it's a lot harder to screw up than most","msgtype":"m.text"},"ts":1265025661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's easier to make an API (more) idiot-proof than a protocol, so I hope people do so","msgtype":"m.text"},"ts":1265025720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for multiplexing, yes, you could have clients coordinate via a SharedWorker or a shared iframe","msgtype":"m.text"},"ts":1265025780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it also seems to me that transparent multiplexing could be added down the line (between the UA and the server, invisible to the JS client code)","msgtype":"m.text"},"ts":1265025840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"since the handshakes allow custom headers, and since you could introduce new frame types","msgtype":"m.text"},"ts":1265025841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes, indeed","msgtype":"m.text"},"ts":1265025842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"voluntary multiplexing also doesn't work if your clients might be running from different origins","msgtype":"m.text"},"ts":1265025900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but sharing a connection in such a case is scarier security-wise","msgtype":"m.text"},"ts":1265025901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"bugs in doing framing become much more severe issues","msgtype":"m.text"},"ts":1265025902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, shared workers will be cross-origin capable in due course","msgtype":"m.text"},"ts":1265025903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which would solve that issue","msgtype":"m.text"},"ts":1265025904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think transparent multiplexing would be cool, but it seems to me that it could be a 2.0 feature if deployment experience with WebSocket shows it is useful","msgtype":"m.text"},"ts":1265025960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1265025961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"likewise for transparent compression","msgtype":"m.text"},"ts":1265025962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or whatever","msgtype":"m.text"},"ts":1265025963000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1265025964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the idea with the frame types though? lots of people seem to have in mind non-browser use cases, will they fork some of the frame types?","msgtype":"m.text"},"ts":1265026080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1265026140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"non-browser use cases seems tupid to me","msgtype":"m.text"},"ts":1265026141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/seems tupid/seem stupid/","msgtype":"m.text"},"ts":1265026142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, just use TCP","msgtype":"m.text"},"ts":1265026143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"websockets is a terrible protocol if you're not trying to use this with JS","msgtype":"m.text"},"ts":1265026144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I think the idea is to reuse existing services made for browsers in websocket","msgtype":"m.text"},"ts":1265026145000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"in that case, there won't be forked frame types","msgtype":"m.text"},"ts":1265026200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, stupid or not, the people on the hybi list wanna do it","msgtype":"m.text"},"ts":1265026201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: oh, the reason the fixed part of the handshake is more than one line long is to ensure that you have to cause the server to echo something with a newline in it (which you can't send in the request)","msgtype":"m.text"},"ts":1265026260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure it's very productive to label them stupid","msgtype":"m.text"},"ts":1265026261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's prolly also what part of the clash is coming from","msgtype":"m.text"},"ts":1265026262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they have completely different use cases in mind","msgtype":"m.text"},"ts":1265026320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have yet to see a good reason to use websocket rather than TCP for something where there's no browser as possible client","msgtype":"m.text"},"ts":1265026321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I see - in that case, I think a nonce would definitely remove the benefit of having a newline in the fixed part","msgtype":"m.text"},"ts":1265026322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(indeed i've yet to see a reason at all)","msgtype":"m.text"},"ts":1265026323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: yes","msgtype":"m.text"},"ts":1265026324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: probably","msgtype":"m.text"},"ts":1265026325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I could imagine using WebSocket if you have browser clients *and* other clients","msgtype":"m.text"},"ts":1265026326000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think the reason for these server developers is that they can provide a easy-to-use library to their customers","msgtype":"m.text"},"ts":1265026380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1265026381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but then you wouldn't invent new frame types","msgtype":"m.text"},"ts":1265026382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: can't they do that with TCP too?","msgtype":"m.text"},"ts":1265026383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they want to interoperate","msgtype":"m.text"},"ts":1265026384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with other servers and new clients","msgtype":"m.text"},"ts":1265026385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"from that perspective it makes sense to have a standard protocol","msgtype":"m.text"},"ts":1265026440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TCP is a standard protocol?","msgtype":"m.text"},"ts":1265026441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, but they want an abstraction","msgtype":"m.text"},"ts":1265026442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just like HTTP is an abstraction","msgtype":"m.text"},"ts":1265026443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't see how this is very hard to get...","msgtype":"m.text"},"ts":1265026444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"websocket isn't an abstraction","msgtype":"m.text"},"ts":1265026500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a minimal browser origin model security layer","msgtype":"m.text"},"ts":1265026501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it will be an abstraction of some kind once we have send(Stream)","msgtype":"m.text"},"ts":1265026502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, and UTF-8 support is already an abstraction, imo","msgtype":"m.text"},"ts":1265026503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't think \"abstraction\" means what you think it means","msgtype":"m.text"},"ts":1265026680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"higher-level?","msgtype":"m.text"},"ts":1265026740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seriously, you can do everything websockets does in like 10 lines of documentation if all you want is a convention of using UTF-8 or something like htat.","msgtype":"m.text"},"ts":1265026741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't really care what term we use","msgtype":"m.emote"},"ts":1265026742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't understand why you would use websocket","msgtype":"m.text"},"ts":1265026800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless you specifically cared about browsers","msgtype":"m.text"},"ts":1265026801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i understand using it for something where browsers is a use case and you also want to handle non-browser clients","msgtype":"m.text"},"ts":1265026802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but for something where you don't have browser clients?","msgtype":"m.text"},"ts":1265026860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's silly.","msgtype":"m.text"},"ts":1265026861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: even for cutting through firewalls?","msgtype":"m.text"},"ts":1265026862000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, it seems like you don't even try to understand their concerns","msgtype":"m.text"},"ts":1265026920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: websocket doesn't do anything special to cut through firewalls.","msgtype":"m.text"},"ts":1265026921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think a use case with both browser and non-browser clients is legitimate","msgtype":"m.text"},"ts":1265026980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: please enlighten me","msgtype":"m.text"},"ts":1265026981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you may well not want to offer two forms of your service","msgtype":"m.text"},"ts":1265026982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: absolutely","msgtype":"m.text"},"ts":1265026983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I could also imagine that once you have that infrastructure, you may want to reuse the client and server code for some cases that don","msgtype":"m.text"},"ts":1265026984000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"t also involve a browser client","msgtype":"m.text"},"ts":1265026985000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I am not sure those should get consideration on the level of a primary use case","msgtype":"m.text"},"ts":1265026986000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's like saying \"ok, i've deployed IMAP, now I want to be able to run my MUD using IMAP\"","msgtype":"m.text"},"ts":1265027040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I could also imagine that you may want to talk an extended version of your protocol to a non-browser client rather than having a whole different protocol","msgtype":"m.text"},"ts":1265027041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would bet someone has actually run a MUD over IMAP :-)","msgtype":"m.text"},"ts":1265027042000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and they're silly :-)","msgtype":"m.text"},"ts":1265027043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"people also run back end business-to-business data messaging over HTTP","msgtype":"m.text"},"ts":1265027100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"HTTP over WS-* over Web Socket","msgtype":"m.text"},"ts":1265027101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"people do a lot of silly things","msgtype":"m.text"},"ts":1265027160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that doesn't stop them being silly","msgtype":"m.text"},"ts":1265027161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, it seems to me they want something akin to HTTP for bidirectional communication","msgtype":"m.text"},"ts":1265027220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they also think that deploying a new protocol is costly","msgtype":"m.text"},"ts":1265027280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, i have several people say those things a lot","msgtype":"m.text"},"ts":1265027281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"have seen, rather","msgtype":"m.text"},"ts":1265027340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: if they want bidirectional HTTP for B2B back end integration, what does it have to do with Web Socket?","msgtype":"m.text"},"ts":1265027341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it seems they don't believe that deploying two protocols will work so they want WebSocket to also accommodate use cases / requirements they have","msgtype":"m.text"},"ts":1265027342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: seems like the orderly close could be done easily just by having an echo feature of some kind","msgtype":"m.text"},"ts":1265028780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: either at the application level or in WS itself if we wanted to require all implementations to do it","msgtype":"m.text"},"ts":1265028781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: echo feature?","msgtype":"m.text"},"ts":1265028782000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah where the side that wants to close the connection sends a packet saying \"this is close attempt X\" for some value of X, and the other side replies \"close X\", and if the first side receives a \"close X\" with the value of X that it sent, and it still thinks it wants to close, then it closes.","msgtype":"m.text"},"ts":1265028840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"without lingering.","msgtype":"m.text"},"ts":1265028841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the side that sends close X does not know when it can close?","msgtype":"m.text"},"ts":1265028960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because wasn't the concern that if it closes to early \"close X\" would not arrive","msgtype":"m.text"},"ts":1265028961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the side that sends close X will know it can close when the other side closes.","msgtype":"m.text"},"ts":1265029080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in that case one side could just do the closing attempt right?","msgtype":"m.text"},"ts":1265029200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no need for confirmation","msgtype":"m.text"},"ts":1265029201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then there might be data lost in transmission","msgtype":"m.text"},"ts":1265029202000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"A says close, B closes on arrival of that message, A knows B closed","msgtype":"m.text"},"ts":1265029320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so A can close","msgtype":"m.text"},"ts":1265029321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie's example said \"and it still thinks it wants to close\", though.","msgtype":"m.text"},"ts":1265029500000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I guess that might not be a necessary step","msgtype":"m.text"},"ts":1265029501000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"yeah i guess you could just do it that way","msgtype":"m.text"},"ts":1265029502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually no","msgtype":"m.text"},"ts":1265029560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you need the two-way handshake","msgtype":"m.text"},"ts":1265029561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm looks like tests that i wrote 4 years ago have the same style as tests i write today","msgtype":"m.text"},"ts":1265029562000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: I believe that would be a fine orderly close mechanism, but I don't understand the TCP issue super well","msgtype":"m.text"},"ts":1265029563000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"otherwise if A says to \"close\" to B, and B sends data to A then closes, B wouldn't see what A said","msgtype":"m.text"},"ts":1265029564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1265029565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A wouldn't see what B siad","msgtype":"m.text"},"ts":1265029566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except i probably try to automate tests more now","msgtype":"m.text"},"ts":1265029567000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie, good point","msgtype":"m.text"},"ts":1265029620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you win :)","msgtype":"m.text"},"ts":1265029621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: the reason I think it should be considered for the base protocol is that WebSocket is broken for any app-level protocol where you don't do this","msgtype":"m.text"},"ts":1265029622000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: depends on the protocol","msgtype":"m.text"},"ts":1265029623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not just \"no acks\" broken but \"might gratuitously lose data even though everything seemed fine\" broken","msgtype":"m.text"},"ts":1265029624000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"zcorpan, heh","msgtype":"m.text"},"ts":1265029680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: if the server is just sending a stream of updates \"stock AAPL up $1\" \"stock MSFT up $5\" etc, then you don't care about lost packets","msgtype":"m.text"},"ts":1265029681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: it very much depends on the subprotocol","msgtype":"m.text"},"ts":1265029682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if the server initiated the close, then it seems wasteful for the server to order the client to discard the last few packets","msgtype":"m.text"},"ts":1265029683000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: even if the client being a few messages out of date might not be a critical problem","msgtype":"m.text"},"ts":1265029684000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"6 out of 8 have been fixed from http://zcorpan.1go.dk/test/opera-bugs/","msgtype":"m.text"},"ts":1265029740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1265029741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in that case the client would close","msgtype":"m.text"},"ts":1265029742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not the server","msgtype":"m.text"},"ts":1265029743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it seems like that is what's happening with this TCP issue - not just that you don't know for sure what got delivered, but that you are actually telling the client to discard data that it already received","msgtype":"m.text"},"ts":1265029744000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you could put it in the base protocol and allow the server to close regardless if it doesn't care","msgtype":"m.text"},"ts":1265029745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the client wouldn't want an orderly close, especially if e.g. the websocket object is already GCed","msgtype":"m.text"},"ts":1265029746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we can come up with some thing simple enough that can be ignored if the server doesn't need it, it makes sense to add it to the base protocol","msgtype":"m.text"},"ts":1265029800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I actually don't know the bare minimum required for a proper orderly close handshake over TCP","msgtype":"m.text"},"ts":1265029860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it seems you could just use the highest byte as a special closing message","msgtype":"m.text"},"ts":1265029861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that needs to be returned","msgtype":"m.text"},"ts":1265029862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish someone on the thread had explained how you would solve the problem with a proper close handshake instead of a lingering close - like at least one example of something that works","msgtype":"m.text"},"ts":1265029920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so 0xFF","msgtype":"m.text"},"ts":1265029921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i wonder if we need the number X from my example","msgtype":"m.text"},"ts":1265029922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as a standalone closing frame","msgtype":"m.text"},"ts":1265029923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe we can just do 0xFF 0x00","msgtype":"m.text"},"ts":1265029924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if you receive an 0xFF frame, you know the other side wants to close","msgtype":"m.text"},"ts":1265029925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If you want to support changing your mind about closing, you need it, don't you?","msgtype":"m.text"},"ts":1265029926000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"you don't even need 0x00 I think","msgtype":"m.text"},"ts":1265029927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and you can send an 0xFF to say ok","msgtype":"m.text"},"ts":1265029928000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: i don't want to add a third kind of frame","msgtype":"m.text"},"ts":1265029929000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dashiva: yeah, but it's not clear we need that","msgtype":"m.text"},"ts":1265029980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"boring :)","msgtype":"m.text"},"ts":1265029981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: maybe I am dumb, but if RDFa is fundamentally a graph structure, that seems like a poor API for it","msgtype":"m.text"},"ts":1265030280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how are HTML notications in http://dev.chromium.org/developers/design-documents/desktop-notifications/api-specification supposed to work with D-Bus or Growl notifications?","msgtype":"m.text"},"ts":1265030340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the spec talks about the browser rendering them as a browsing context","msgtype":"m.text"},"ts":1265030341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but who really want that except in a Chrome OS -like environment where there's nothing but the browser?","msgtype":"m.text"},"ts":1265030400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*wants","msgtype":"m.text"},"ts":1265030401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"they're not, as i understand them","msgtype":"m.text"},"ts":1265030402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"has similar concerns","msgtype":"m.emote"},"ts":1265030403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: I agree, it's not terribly useful","msgtype":"m.text"},"ts":1265030404000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hsivonen: also a concern for iphone or android environments where the OS has a built-in notification system that is pure-text or close to it","msgtype":"m.text"},"ts":1265030405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i should go sleep","msgtype":"m.text"},"ts":1265030460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1265030461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in particular, you'd expect the children of an RDFa graph node / triple to have the same subject as the triple's *object*, not the same subject as its subject","msgtype":"m.text"},"ts":1265030462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thinks it would be good to start out with a simple icon + plain text API that maps to system notification mechanisms","msgtype":"m.emote"},"ts":1265030463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it also seems like you would really want to be able to query by subject, object or predicate, not just by type...","msgtype":"m.text"},"ts":1265030464000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"what mailing list am I supposed to whine on about the notication API?","msgtype":"m.text"},"ts":1265030465000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aside: it's rather amazing that Growl still isn't part of Mac OS X itself","msgtype":"m.text"},"ts":1265030520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"amazing from a practical POV that is","msgtype":"m.text"},"ts":1265030521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not amazing from a NIH attitude POV","msgtype":"m.text"},"ts":1265030522000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you could use webkit-dev, to complain about what's implemented, since the code is in WebKit, but fwiw I think Chrome is the only browser shipping with it enabled","msgtype":"m.text"},"ts":1265030523000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for proposing a standard version of this and proposing changes to that, I dunno","msgtype":"m.text"},"ts":1265030524000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"HTML is not really an obstacle for Growl","msgtype":"m.text"},"ts":1265030525000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"IIRC it uses WebKit to render notifications","msgtype":"m.text"},"ts":1265030580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: does chrome send stuff to growl or d-bus on Mac/Linux?","msgtype":"m.text"},"ts":1265030581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I don't know","msgtype":"m.text"},"ts":1265030582000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1265030583000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"non-Chrome WEbKit vendors/devs were not fully sold on the suitability of this API or the value of shipping it without sufficient cross-vendor discussion","msgtype":"m.text"},"ts":1265030640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I expect they implement it all internally and do not use any system or third-party notification services","msgtype":"m.text"},"ts":1265030641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1265030700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does Windows have a system-wide notification service that doesn't involve registering a tray icon first?","msgtype":"m.text"},"ts":1265030701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"onvolumechange didn't work at least","msgtype":"m.text"},"ts":1265031060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but addEventListener worked","msgtype":"m.text"},"ts":1265031120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's a bug I guess","msgtype":"m.text"},"ts":1265031240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"per HTML5 it should clearly be on HTMLElement and HTMLDocument","msgtype":"m.text"},"ts":1265031300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1265031360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and window","msgtype":"m.text"},"ts":1265031361000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I need to catch up on this fullscreen thread at some point","msgtype":"m.text"},"ts":1265031420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"feature testing says it's on window but not document or element","msgtype":"m.text"},"ts":1265031421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in webkit","msgtype":"m.text"},"ts":1265031422000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which is not so useful since volumechange doesn't bubble :)","msgtype":"m.text"},"ts":1265031480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so to get an.ne I need to a have a registered company in Nigeria named \"an\"","msgtype":"m.text"},"ts":1265035260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that seems like too much trouble","msgtype":"m.text"},"ts":1265035261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man, uganda doesn't have any silly restrictions like that","msgtype":"m.text"},"ts":1265035320000,"senderName":"ray","senderId":"ray@irc"},
{"content":{"body":"annevk, surely you could just bribe the right official?","msgtype":"m.text"},"ts":1265035500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Markup conformance requirements that need to be tested and give them a stable identifier that will persist across drafts of the specification.\" - http://www.w3.org/TR/2010/NOTE-test-methodology-20100128/","msgtype":"m.text"},"ts":1265036400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wonders how many thousands of distinct conformance requirements there are in HTML5.","msgtype":"m.emote"},"ts":1265036520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's easy, just use the text of the conformance requirement as the identifier","msgtype":"m.text"},"ts":1265036580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I guess if the text changes, you've changed the conformance requirement anyway . . .","msgtype":"m.text"},"ts":1265036640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I counted 223 requirement statements for <canvas> a while ago","msgtype":"m.text"},"ts":1265036700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so there's going to be quite a lot across the whole spec","msgtype":"m.text"},"ts":1265036701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is that counting something like \"When X occurs, user agents must execute the following algorithm:\" as one requirement or lots?","msgtype":"m.text"},"ts":1265036702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Lots","msgtype":"m.text"},"ts":1265036760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I suppose it's more about testable points than about conformance requirements)","msgtype":"m.text"},"ts":1265036820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There are what, like 8,000 tests for CSS2.1?  And HTML5 is how much longer, twenty times as long?","msgtype":"m.text"},"ts":1265036880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1265036881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"is ballparking","msgtype":"m.emote"},"ts":1265036940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"last estimate was 50000 tests needed","msgtype":"m.text"},"ts":1265036941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe that was optimistic","msgtype":"m.text"},"ts":1265036942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML5 has lots of features, many different facets to test for each, very detailed requirements for most of them, and some nontrivial interactions among different features","msgtype":"m.text"},"ts":1265037000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so probably the level of test coverage needed is even higher than comparison of length to CSS would imply","msgtype":"m.text"},"ts":1265037060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though to be fair, CSS is also pretty damn complicated","msgtype":"m.text"},"ts":1265037061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CSS is prolly more complicated","msgtype":"m.text"},"ts":1265037062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"most of HTML5 is written in a pretty straightforward way","msgtype":"m.text"},"ts":1265037063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS has very complex interactions","msgtype":"m.text"},"ts":1265037064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You couldn't test a lot of HTML5 requirements in a cross-browser way, could you?  You'd need something more like Mozilla's mochitests, that can synthesize input and whatnot.","msgtype":"m.text"},"ts":1265037065000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"CSS has some very complex interactions by design","msgtype":"m.text"},"ts":1265037066000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"HTML5 has a fair number of complex interactions by accident of history","msgtype":"m.text"},"ts":1265037120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there are many HTML requirements that would be hard to test if the browser itself is your only test tool","msgtype":"m.text"},"ts":1265037121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that doesn't mean you can't do it in a cross-browser way","msgtype":"m.text"},"ts":1265037122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"How would you do it, then?  Except manually, of course.","msgtype":"m.text"},"ts":1265037180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"doesn't want to see anyone try running 100,000 tests manually :P","msgtype":"m.emote"},"ts":1265037181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"one possible way is to run an external program to synthesize input events, and possibly capture output","msgtype":"m.text"},"ts":1265037182000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"people have made such tools that work with any given browser, for example for testing Web sites or for general QA of any native application with a GUI","msgtype":"m.text"},"ts":1265037240000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i generated about 15000 tests for a css feature","msgtype":"m.text"},"ts":1265037241000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Generated\"?","msgtype":"m.text"},"ts":1265037242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"of course for any conformance requirement that can be tested by scripting against the DOM, that's the best way to do it","msgtype":"m.text"},"ts":1265037300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, i wrote some python scripts","msgtype":"m.text"},"ts":1265037301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"although i wanted to generate more for interaction with svg","msgtype":"m.text"},"ts":1265037360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So how many substantively different things did these 15,000 tests actually test?","msgtype":"m.text"},"ts":1265037420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i tested different combinations of percentages, lengths and keywords, visibility:hidden/visible, and the different values for the feature, for a number of different elements","msgtype":"m.text"},"ts":1265037540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"including invalid cases","msgtype":"m.text"},"ts":1265037541000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh and with different images","msgtype":"m.text"},"ts":1265037542000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gah, I'm going crazy with all the different html parsing libraries... I want three things: parse broken html -> remove all tags except a list I specify -> get all text blocks that remain","msgtype":"m.text"},"ts":1265040060000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"I guess this is why people give up and use regexps","msgtype":"m.text"},"ts":1265040120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the only way I see of doing this, is to parse with html5lib, serialize to html, parse with lxml.html.clean and clean up, then parse again with html5lib, and select out all the text from there with xpath","msgtype":"m.text"},"ts":1265040121000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"... and that's a mess :)","msgtype":"m.text"},"ts":1265040122000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"yeah :)","msgtype":"m.text"},"ts":1265040123000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Why can't you parse with html5lib with lxml treebuilder, then do whatever manipulations you need to the tree structure, then serialise as text?","msgtype":"m.text"},"ts":1265040180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"because the tree I get from the lxml treebuilder is not the format lxml.html.clean, expects... I get 'lxml.etree._ElementTree' object has no attribute 'rewrite_links' when trying to clean that document","msgtype":"m.text"},"ts":1265040240000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"so it seems there are more methods on html trees somehow","msgtype":"m.text"},"ts":1265040241000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Oh, right","msgtype":"m.text"},"ts":1265040300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Do you have to use lxml.html.clean, rather than implementing the functionality you need yourself using the normal lxml API?","msgtype":"m.text"},"ts":1265040301000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"no, I'll switch as long as it works :)","msgtype":"m.text"},"ts":1265040302000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"I'm screenscraping pages, and have found that a good way is to strip all tags except div, and then look for the longest text string that's left","msgtype":"m.text"},"ts":1265040360000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"that's (most often) the article text","msgtype":"m.text"},"ts":1265040361000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"should be pretty easy to go through a tree and dump elements you do not like and append their content to the parent?","msgtype":"m.text"},"ts":1265040362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1265040420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe with some different branches depending on the element","msgtype":"m.text"},"ts":1265040421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It'd be easier with a SAX-like API since you could trivially filter out unwanted tags","msgtype":"m.text"},"ts":1265040422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The seperation between lxml.etree and lxml.html is a real pain","msgtype":"m.text"},"ts":1265040423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good ideas, all of them","msgtype":"m.text"},"ts":1265040480000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"jgraham: yeah, I was hoping for a lxml.html.frometree(doc)","msgtype":"m.text"},"ts":1265040481000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Huvet: Have you tried looking at the implementation of the lxml.html thing and seeing if you san port it to vanilla lxml.etree?","msgtype":"m.text"},"ts":1265040482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think that's a bit over my head, I'm not that used to lxml","msgtype":"m.text"},"ts":1265040540000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"http://codespeak.net/lxml/api/lxml.html.clean-pysrc.html","msgtype":"m.text"},"ts":1265040541000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"700 lines","msgtype":"m.text"},"ts":1265040600000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Huvet: You could rather inefficiently walk the tree and rebuild it in lxml.html Elements","msgtype":"m.text"},"ts":1265040601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or you could patch html5lib asnd see what breaks :)","msgtype":"m.text"},"ts":1265040660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess the best way is what annevk said... except the \"pretty easy\" part ;)","msgtype":"m.text"},"ts":1265040720000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"get the lxml tree and walk it and drop nodes as I go along","msgtype":"m.text"},"ts":1265040780000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Huvet: You have to be a bit careful because of the .tail","msgtype":"m.text"},"ts":1265041080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"See lxml.html.drop_tree","msgtype":"m.text"},"ts":1265041140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*reading*","msgtype":"m.text"},"ts":1265041380000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Heyo.","msgtype":"m.text"},"ts":1265043180000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"has html5 got something special for centering a div ?","msgtype":"m.text"},"ts":1265043900000,"senderName":"no_mind","senderId":"no_mind@irc"},
{"content":{"body":"we're not in the business of styling ;)","msgtype":"m.text"},"ts":1265043960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you want CSS","msgtype":"m.text"},"ts":1265043961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something like margin:0 auto; plus an explicit width","msgtype":"m.text"},"ts":1265043962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or some fiddling with table layout","msgtype":"m.text"},"ts":1265043963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, so which channel is suitable for css ?","msgtype":"m.text"},"ts":1265043964000,"senderName":"no_mind","senderId":"no_mind@irc"},
{"content":{"body":"#css on irc.w3.org, though that's mainly for the CSS WG","msgtype":"m.text"},"ts":1265044200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's also #css here.","msgtype":"m.text"},"ts":1265044260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's unofficial.","msgtype":"m.text"},"ts":1265044261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hmm, chrome doesn't support wave in <audio>?","msgtype":"m.text"},"ts":1265047620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Anyone know how often the http://html5gallery.com/ guys update","msgtype":"m.text"},"ts":1265053020000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"reading http://unicode.org/draft/reports/tr46/tr46.html I really wonder how IDNA2008 got through","msgtype":"m.text"},"ts":1265055360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where is the upside?","msgtype":"m.text"},"ts":1265055361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it sounds insane","msgtype":"m.text"},"ts":1265055362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me repeat that","msgtype":"m.text"},"ts":1265055363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"insane","msgtype":"m.text"},"ts":1265055364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads section 1.2 decides that \"insane\" is probably being kind","msgtype":"m.emote"},"ts":1265056800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Surely all valid comments were taken into consideration","msgtype":"m.text"},"ts":1265057220000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It's just that imperfect beings such as us can't comprehend the trascendental perfection","msgtype":"m.text"},"ts":1265057280000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"thanks for the help figuring this out Philip`, annevk, and jgraham: http://dpaste.com/153474/","msgtype":"m.text"},"ts":1265059020000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"input: an URL to an article, output: the article text","msgtype":"m.text"},"ts":1265059021000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"Huvet: You can write doc = html5lib.parse(html, treebuilder=\"lxml\")","msgtype":"m.text"},"ts":1265059800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Rather than explicitly creating a parser that is never reused","msgtype":"m.text"},"ts":1265059801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, great, fixing right away","msgtype":"m.text"},"ts":1265059860000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"That is probably not documented anywhere","msgtype":"m.text"},"ts":1265059920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We have documentation?","msgtype":"m.text"},"ts":1265059980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"would tend to write the filter as a list comprehension or a generator expression","msgtype":"m.emote"},"ts":1265059981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like texts = (x.strip() for x in doc.xpath(\"//text\") if x)","msgtype":"m.text"},"ts":1265059982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but it doesn't matter)","msgtype":"m.text"},"ts":1265060040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, I heard that from another python guru too... but I kinda like the idea that I'm \"filtering away the empty texts\" and it says \"filter\" there","msgtype":"m.text"},"ts":1265060160000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"and yeah, you desperately need documentation","msgtype":"m.text"},"ts":1265060220000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"I would set that as my main priority if I where you","msgtype":"m.text"},"ts":1265060221000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"imagines the main priorities should be things like writing documentation and improving the sanitizer, and spec compliance should be somewhere near the bottom of the list","msgtype":"m.emote"},"ts":1265060640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gsnedders: Well we do, there are a few docstring and the old, lost documentation","msgtype":"m.text"},"ts":1265060641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it is abysmal, I grant you","msgtype":"m.text"},"ts":1265060642000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I know, I know...","msgtype":"m.text"},"ts":1265060700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: But what's the fun of that?","msgtype":"m.text"},"ts":1265060701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"still doesn't understand why the draft changed to have async back()/forward()","msgtype":"m.emote"},"ts":1265060820000,"senderName":"smaug___","senderId":"smaug___@irc"},
{"content":{"body":"Philip`, the whole point is spec compliance","msgtype":"m.text"},"ts":1265060880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Users don't care about spec compliance","msgtype":"m.text"},"ts":1265060940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe users aren't the point, but they'd probably disagree","msgtype":"m.text"},"ts":1265060941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://code.google.com/p/html5lib/wiki/UserDocumentation","msgtype":"m.text"},"ts":1265061000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Now it just needs to be right and good","msgtype":"m.text"},"ts":1265061001000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"great!","msgtype":"m.text"},"ts":1265061180000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"things that many documentations fail to do is provide examples... you could just include things that people have done with html5lib right in the docs","msgtype":"m.text"},"ts":1265061240000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"that would help most people get started","msgtype":"m.text"},"ts":1265061241000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"and I mean from url to string","msgtype":"m.text"},"ts":1265061242000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"not only the parser-specific thing in between","msgtype":"m.text"},"ts":1265061300000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"you should move to the whatwg wiki with all docs imo","msgtype":"m.text"},"ts":1265061600000,"senderName":"Huvet","senderId":"Huvet@irc"},
{"content":{"body":"foolip, yt?","msgtype":"m.text"},"ts":1265064240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"foolip, there's a bug in your live microdata tool with support for additional-name","msgtype":"m.text"},"ts":1265064300000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"when there are multiple additional-name properties used, they should be comma separated when the vcard is generated, just like you do for street-address","msgtype":"m.text"},"ts":1265064360000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie, they didn't like mappings","msgtype":"m.text"},"ts":1265064480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe you mean something different from what I said earlier in that thread...","msgtype":"m.text"},"ts":1265064540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, same bug with itemprop=\"type\" within \"tel\"","msgtype":"m.text"},"ts":1265065320000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1265065920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IDNA2003 is tied to Unicode 3.2 and does not do bidi","msgtype":"m.text"},"ts":1265065921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though do you really want bidi in URLs?!","msgtype":"m.text"},"ts":1265065922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.macchiato.com/unicode/idna/security-issues is a good document on the IDNA2008 mess","msgtype":"m.text"},"ts":1265066220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My first attempt at using microdata seems to be a success. I just marked up my contact page using the vcard profile. http://lachy.id.au/about/contact","msgtype":"m.text"},"ts":1265068560000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"although tedious, it was actually quite easy","msgtype":"m.text"},"ts":1265068561000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the one thing I found annoying was that I kept mistyping itemtype=\"...\" instead of itemprop=\"...\"","msgtype":"m.text"},"ts":1265068620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"foolip, that page of mine nicely illustrates those bugs in your tool that I mentioned above.","msgtype":"m.text"},"ts":1265068740000,"senderName":"Lachy","senderId":"Lachy@irc"}
]