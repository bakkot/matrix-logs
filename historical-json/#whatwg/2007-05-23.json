[
{"content":{"body":"Have people reverse-engineered/documented the level file format?","msgtype":"m.text"},"ts":1179878700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1179878820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The .exe has some strings (I guess from assert calls) that appear to give some information about the physics, except they say things like \"gyuru::beszur-ban k >= pontszam!\" and I'm not quite sure what that means","msgtype":"m.text"},"ts":1179878940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"um, don't know either","msgtype":"m.text"},"ts":1179879000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"At least I can read \"fabs( ujenergia - oldenergia ) > 0.001!\"","msgtype":"m.text"},"ts":1179879240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"seems like it's written in Hungary","msgtype":"m.text"},"ts":1179879420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i mean Hungarian","msgtype":"m.text"},"ts":1179879540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://www.gamedev.net/community/forums/topic.asp?topic_id=397791 has some relevant notes","msgtype":"m.text"},"ts":1179879720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It'd always be possible to ask the original author exactly how the physics works, though I don't know if he'd like people reproducing his work in JavaScript :-)","msgtype":"m.text"},"ts":1179879900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"perhaps it makes elastomania even more famous :)","msgtype":"m.text"},"ts":1179879901000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's a very addicting game","msgtype":"m.text"},"ts":1179879960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I just keep bashing my head on the floor and dying","msgtype":"m.text"},"ts":1179879961000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1179880020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah, its collision detection explains some bugs indeed","msgtype":"m.text"},"ts":1179880080000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good stuff in there","msgtype":"m.text"},"ts":1179880440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"xmoto is open source... but it doesn't have the same physics as elastomania at all","msgtype":"m.text"},"ts":1179881340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie - you there?","msgtype":"m.text"},"ts":1179895860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanted to ask about meanings of flags/fields in html5 checkin message","msgtype":"m.text"},"ts":1179895861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how testable is the HTML5 tokenizer these days? are the tokenizer tests in html5lib designed to run without a tree builder setting the content model flag?","msgtype":"m.text"},"ts":1179900000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"testable on its own, that is","msgtype":"m.text"},"ts":1179900001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: see the web-apps-tracker","msgtype":"m.text"},"ts":1179901440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - thanks ... looking now","msgtype":"m.text"},"ts":1179903540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie - I know already about the browser flags in square brackets ... was wondering about the number in parens","msgtype":"m.text"},"ts":1179903720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's he stability","msgtype":"m.text"},"ts":1179903721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: are your tokenizer tests applicable without a tree builder? that is, can I develop a tokenizer first and prove that I pass the semiofficial tests before I develop a suite of tree builder?","msgtype":"m.text"},"ts":1179903840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has a plan for 4 or 5 tree builder subclasses","msgtype":"m.emote"},"ts":1179903841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i believe there are tokeniser tests, but i didn't write them","msgtype":"m.text"},"ts":1179903900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - OK ... stability values defined anywhere (mostly seems to be either 0 or 2 in checkin descriptions)","msgtype":"m.text"},"ts":1179903901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: i assumed that most people would not write tokenisers exactly per spec","msgtype":"m.text"},"ts":1179903902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh. I thought you had a tokenizer test suite","msgtype":"m.text"},"ts":1179903903000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"presumably only the actual tree output is normative","msgtype":"m.text"},"ts":1179903904000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but some tokenizer issues must inevitably affect the DOM, so end-to-end tests could be made","msgtype":"m.text"},"ts":1179903960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"MikeSmith: 0 = experimental, 1 = unstable, 2 = has implementations, 3 = has stable implementations","msgtype":"m.text"},"ts":1179903961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: my tokeniser wasn't an implemenatation of the spec -- e.g. it did some preprocessing magic for collecting characters together and separating whitespace from non-whitespace depending on the tree constructor mode","msgtype":"m.text"},"ts":1179904020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how do you mean not exactly per spec? I intend to use the runtime stack for implicit state instead of an explicit state variable. Mike Day suggested making a table-driven DFA, but I'm not sure that makes sense in terms of optimizing Java performance ","msgtype":"m.text"},"ts":1179904021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so any tests i had for that wouldn't match the spec","msgtype":"m.text"},"ts":1179904022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1179904023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie - thanks","msgtype":"m.text"},"ts":1179904024000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1179904025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: I do intend to test the whole thing with a tree builder eventually","msgtype":"m.text"},"ts":1179904080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(although I am hoping to write the tree building stuff one with pluggable tree builder-specific back ends so that there's really only one tree builder to test instead of 4 or 5)","msgtype":"m.text"},"ts":1179904140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/stuff one/stuff once/","msgtype":"m.text"},"ts":1179904141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we're doing SQL now?!","msgtype":"m.text"},"ts":1179909660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ?","msgtype":"m.text"},"ts":1179910260000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"SQL in HTML5? ","msgtype":"m.text"},"ts":1179910261000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"confused","msgtype":"m.emote"},"ts":1179910262000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"http://html5.org/tools/web-apps-tracker?from=837&to=838","msgtype":"m.text"},"ts":1179910560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it would be easier if the second argument was an array","msgtype":"m.text"},"ts":1179911760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of executeSql()","msgtype":"m.text"},"ts":1179911761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Methods with an arbitrary amount of arguments are hard to construct on the fly","msgtype":"m.text"},"ts":1179911820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, in HTML5, http-equiv is only kept around for backward compatibility with refresh, yeah?","msgtype":"m.text"},"ts":1179912960000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it's actually conforming to use it","msgtype":"m.text"},"ts":1179913200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what about http-equiv=\"content-type\" ?","msgtype":"m.text"},"ts":1179913260000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that's replaced with <meta charset=utf-8>","msgtype":"m.text"},"ts":1179913320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, replaced with <meta charset>","msgtype":"m.text"},"ts":1179913321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, so pages that still use it can not be valid HTML5? (for whatever definition of valid we are using this week)","msgtype":"m.text"},"ts":1179913322000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I think <meta http-equiv=\"content-type\"> should remain conforming for charset purposes","msgtype":"m.text"},"ts":1179913380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so your content can be conforming but still degrade gracefully","msgtype":"m.text"},"ts":1179913381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: Function.call in JS lets you call any function with a variable number of arguments with an array instead","msgtype":"m.text"},"ts":1179913440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that would help reduce confusion for authors following existing tutorials","msgtype":"m.text"},"ts":1179913441000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"annevk: but I don't believe there's a way to do the converse","msgtype":"m.text"},"ts":1179913442000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"mikeday, valid also requires <!Doctype html>","msgtype":"m.text"},"ts":1179913500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true.","msgtype":"m.text"},"ts":1179913501000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"othermaciej, when would you want to do the reverse?","msgtype":"m.text"},"ts":1179913560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do you set CVSROOT in Ubuntu?","msgtype":"m.text"},"ts":1179913620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think you would want to do the reverse, but it makes functions w/ variable arguments more useful than functions that take an array","msgtype":"m.text"},"ts":1179913621000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you only have one","msgtype":"m.text"},"ts":1179913622000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and I think I mean Function.apply, not call","msgtype":"m.text"},"ts":1179913623000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"export CVSROOT=?","msgtype":"m.text"},"ts":1179913680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday, cool","msgtype":"m.text"},"ts":1179913740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"continues fooling around","msgtype":"m.emote"},"ts":1179913741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to switch to Ubuntu","msgtype":"m.emote"},"ts":1179913800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, the good thing about not allowing content-type is that there's only one way to do it","msgtype":"m.text"},"ts":1179914040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(in the markup, as you can still set it through HTTP)","msgtype":"m.text"},"ts":1179914041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i can't think of a single time i've ever wanted to call a sql evaluator with a variable number of arguments -- it's not like getElementsByClassName() in that respect","msgtype":"m.text"},"ts":1179914100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk, what are you using now?","msgtype":"m.text"},"ts":1179914101000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ubuntu","msgtype":"m.text"},"ts":1179914102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I used to use Windows XP","msgtype":"m.text"},"ts":1179914103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1179914104000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I also have a Windows XP installation on this computer","msgtype":"m.text"},"ts":1179914105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I hope to leave it alone","msgtype":"m.text"},"ts":1179914106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"vmware is handy for testing IE bugs while still running Linux","msgtype":"m.text"},"ts":1179914160000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"if you've got gcc installed, you can always try building my stub code: libhtml.sf.net","msgtype":"m.text"},"ts":1179914161000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yeah, I got IE6 and IE7 running","msgtype":"m.text"},"ts":1179914162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(you'll need svn to check it out, not cvs)","msgtype":"m.text"},"ts":1179914163000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I need CVS for W3C stuff","msgtype":"m.text"},"ts":1179914220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think \"only one way to do it\" is a weak advantage compared to graceful degradation","msgtype":"m.text"},"ts":1179914221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in fact, I'm not sure <meta charset=\"\"> is really justifiable","msgtype":"m.text"},"ts":1179914280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's nicer syntax but it does not degrade in older browsers at all","msgtype":"m.text"},"ts":1179914281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"browsers have to support it to support the web","msgtype":"m.text"},"ts":1179914282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in that sense it degrades perfectly","msgtype":"m.text"},"ts":1179914283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<meta charset>?","msgtype":"m.text"},"ts":1179914284000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179914340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what current browsers support it?","msgtype":"m.text"},"ts":1179914341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess I just did not know about it","msgtype":"m.text"},"ts":1179914342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"all of them","msgtype":"m.text"},"ts":1179914343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, in the charset sniffing, <!--> is not a complete comment, and <!----> is, but what about <!---> ?","msgtype":"m.text"},"ts":1179914344000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"specifically they support <meta htt-equiv=content-type content=text/html; charset=utf-8>","msgtype":"m.text"},"ts":1179914345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(note the lack of quotes)","msgtype":"m.text"},"ts":1179914346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's amusing","msgtype":"m.text"},"ts":1179914400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"mikeday, also not complete","msgtype":"m.text"},"ts":1179914401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, no real objection then","msgtype":"m.text"},"ts":1179914402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk, the spec could be clearer on that point :)","msgtype":"m.text"},"ts":1179914460000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or, I could be smarter","msgtype":"m.text"},"ts":1179914461000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I missed the bit that said after the existing --","msgtype":"m.text"},"ts":1179914462000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(note that <!--> will become a comment in due course)","msgtype":"m.text"},"ts":1179914463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(to minimize differences between quirks and standards mode)","msgtype":"m.text"},"ts":1179914520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Advance the position pointer so that it points at the first 0x3E byte which is preceeded by two 0x2D bytes and comes after the second 0x2D byte that was found.\"","msgtype":"m.text"},"ts":1179914521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it could be clearer that the two 0x2D bytes come after the second 0x2D byte that was found","msgtype":"m.text"},"ts":1179914522000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"not just the first 0x3E byte coming after the second 0x2D byte that was found.","msgtype":"m.text"},"ts":1179914523000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"send mail","msgtype":"m.text"},"ts":1179914524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sends","msgtype":"m.emote"},"ts":1179914580000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1179914581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(although if comment definition will change, perhaps charset sniffing will need to change as well)","msgtype":"m.text"},"ts":1179914582000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yeah, likely","msgtype":"m.text"},"ts":1179914640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least, it would make sense if they behaved the same :)","msgtype":"m.text"},"ts":1179914641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm trying to write a little state machine for charset sniffing,","msgtype":"m.text"},"ts":1179914880000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"as it's a lot easier than writing a state machine for complete HTML tokenisation :)","msgtype":"m.text"},"ts":1179914881000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"what's the use-case for a client-side database?","msgtype":"m.text"},"ts":1179916200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mikeday|away: did you already investigate the feasibility of a table-driven DFA for the tokenizer?","msgtype":"m.text"},"ts":1179918000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"SQL! whoa! how will that one interoperate without requiring every browser to embed sqlite?","msgtype":"m.text"},"ts":1179918060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"who requested it?","msgtype":"m.text"},"ts":1179918120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SQL isn't exactly the best example of an interoperably implemented standard","msgtype":"m.text"},"ts":1179918121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"got a point there...","msgtype":"m.text"},"ts":1179918240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is still shying away from a table-driven DFA in Java","msgtype":"m.emote"},"ts":1179918241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan, Mozilla has it","msgtype":"m.text"},"ts":1179918242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure if they requested it","msgtype":"m.text"},"ts":1179918243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, not sure yet, the state machine in the spec is too complex as is, needs to be simplified first","msgtype":"m.text"},"ts":1179920100000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hsivonen, I'm just trying to get something basic working to implement <meta charset> sniffing","msgtype":"m.text"},"ts":1179920160000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but it won't be implemented as an array, probably just use goto","msgtype":"m.text"},"ts":1179920161000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and it only needs to apply to a buffer of fixed size, so blocking on input won't be an issue.","msgtype":"m.text"},"ts":1179920162000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: is your main loop of control going to be inside the parser as in Java SAX parsers or outside as in expat?","msgtype":"m.text"},"ts":1179920520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"outside","msgtype":"m.text"},"ts":1179920521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"can still support SAX that way","msgtype":"m.text"},"ts":1179920580000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and more convenient for integration with some input sources, eg. curl","msgtype":"m.text"},"ts":1179920640000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I've been thinking if I should decouple the loop from the tokenizer on the Java side, but I'll probably go with the traditional java.io/org.xml.sax model on the inside","msgtype":"m.text"},"ts":1179920641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you've got a few more options in Java, but fitting in with SAX makes perfect sense.","msgtype":"m.text"},"ts":1179920700000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: just about all XML parsing in Java happens with the parser pulling stuff from java.io.InputStream instead of an app-owned loop pushing buffers to a parser","msgtype":"m.text"},"ts":1179920880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah, most C libraries work like that as well","msgtype":"m.text"},"ts":1179920881000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"then sometimes end up trying to hack in support for progressive parsing later","msgtype":"m.text"},"ts":1179920882000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm going to try and do it the other way around from the beginning, and see how far I get :)","msgtype":"m.text"},"ts":1179920883000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but starting with charset sniffing, as that's easier and doesn't involve input at all","msgtype":"m.text"},"ts":1179921000000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"as you only apply it to the bytes that you already have in the buffer.","msgtype":"m.text"},"ts":1179921001000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm a bit uncomfortable with the sniffing result depending on buffering","msgtype":"m.text"},"ts":1179921060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tee hee, I found another bug in the spec: 0x3C 0x2D (ASCII '<!')","msgtype":"m.text"},"ts":1179921061000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"requiring the sniffer to read up to 512 until it finds the charset would be deterministic","msgtype":"m.text"},"ts":1179921062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes, mine will read up to 512 or EOF, whichever comes first.","msgtype":"m.text"},"ts":1179921120000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, actually mine will sometimes read past 512 at the moment","msgtype":"m.text"},"ts":1179921180000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"do you think it would be best to clamp it at 512, regardless of how much has been read?","msgtype":"m.text"},"ts":1179921181000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'd clamp to 512 to avoid results depending on buffering details.","msgtype":"m.text"},"ts":1179921300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(those are hard to track down when something goes wrong)","msgtype":"m.text"},"ts":1179921301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"right, sounds good.","msgtype":"m.text"},"ts":1179921302000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"min(buf->size, 512) :)","msgtype":"m.text"},"ts":1179921303000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, with goto and macros you can make a decent state machine","msgtype":"m.text"},"ts":1179921420000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"if you used labels-as-values gcc extension you could probably make it handle input buffering too","msgtype":"m.text"},"ts":1179921421000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"basically defining a state machine mini-language in C","msgtype":"m.text"},"ts":1179921480000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: do you compile with GCC on Windows?","msgtype":"m.text"},"ts":1179921481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or does MS support that GCC extension?","msgtype":"m.text"},"ts":1179921482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I usually cross-compile Windows binaries on Linux using mingw32","msgtype":"m.text"},"ts":1179921483000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but I'll avoid using gcc extensions for now","msgtype":"m.text"},"ts":1179921484000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"there's always someone out there not using gcc","msgtype":"m.text"},"ts":1179921485000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"gcc also has case ranges: case 0x41 ... 0x5A:","msgtype":"m.text"},"ts":1179921660000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"which would be quite handy in this case, as they would save me writing out 52 letters explicitly :/","msgtype":"m.text"},"ts":1179921661000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: no, you write code to write tedious code :)","msgtype":"m.text"},"ts":1179921720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"s/me/me or an automation under my control/","msgtype":"m.text"},"ts":1179921780000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1179921781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"actually, I'm curious to see if gcc generates any clever code for a switch statement on a byte value","msgtype":"m.text"},"ts":1179921782000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for example, does it generate a jump table by itself, or some other clever trick","msgtype":"m.text"},"ts":1179921840000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"SELECT \"a\"||0;  - SQLite says \"a0\", MySQL says 0, Postgres says column \"a\" does not exist; interoperably not great :-(","msgtype":"m.text"},"ts":1179922140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You need 'a' for postgres, sadly","msgtype":"m.text"},"ts":1179922141000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I think oracle is the same","msgtype":"m.text"},"ts":1179922200000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"SQL5 will safe us","msgtype":"m.text"},"ts":1179922201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How many doctype states will -that- have ;)","msgtype":"m.text"},"ts":1179922202000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: I'm guessing Postgres follows the standard, since MySQL doesn't and SQLite is slightly crazy","msgtype":"m.text"},"ts":1179922260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: I think variable number of arguments is useful whenever you want to add some abstracted interface, like with","msgtype":"m.text"},"ts":1179922680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"  function search(fields) {","msgtype":"m.text"},"ts":1179922681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"    db.execute(\"SELECT * FROM stuff WHERE \" + \" AND \".join(name+\" = ?\" for name,value in fields), [ value for name,value in fields ]);","msgtype":"m.text"},"ts":1179922682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"  }","msgtype":"m.text"},"ts":1179922683000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"  results = search([ ['name', n], ['age', 12], ['colour', c] ]);","msgtype":"m.text"},"ts":1179922684000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(where is this proposal to support SQL in JavaScript?)","msgtype":"m.text"},"ts":1179922685000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(Er, that's probably a broken mix of JS and Python, though I suppose I might be lucky and it could be valid JS1.7)","msgtype":"m.text"},"ts":1179922686000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/section-sql.html","msgtype":"m.text"},"ts":1179922740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"mikeday, http://html5.org/tools/web-apps-tracker?from=837&to=838","msgtype":"m.text"},"ts":1179922741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"A future version of this specification may define the exact SQL subset required in more detail.\"","msgtype":"m.text"},"ts":1179922800000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"now there's an understatement :)","msgtype":"m.text"},"ts":1179922801000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I think the only interoperable subset of SQL and of existing SQL implementations is likely to be the empty set","msgtype":"m.text"},"ts":1179922860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, maybe \"SELECT 1+1\" would work","msgtype":"m.text"},"ts":1179922861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Yeah, I finally found the part in SQL92 which mentions it","msgtype":"m.text"},"ts":1179922862000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"SELECT * FROM table\" is probably more interoperable than 1+1","msgtype":"m.text"},"ts":1179922980000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'd the practical effect would be that Firefox ships with support for the full SQLite syntax, so people write code assuming that, and other browsers have no choice but to use SQLite too, and then Microsoft would ship with Jet or whatever, and everyone would suffer pain, and then maybe someone would try to sort out the mess by defining a common subset but it'd be too late then","msgtype":"m.text"},"ts":1179922981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"*I'd guess","msgtype":"m.text"},"ts":1179922982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"at that point we get \"Web SQL 5\"","msgtype":"m.text"},"ts":1179923040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why bother? I mean honestly, is SQL the best method for doing this?","msgtype":"m.text"},"ts":1179923100000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"doesn't understand the use-case for client side SQL","msgtype":"m.emote"},"ts":1179923160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"best\" also includes what people are used to","msgtype":"m.text"},"ts":1179923161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it's pretty awesome that techniques people are used to on the server can now be easily reused client side","msgtype":"m.text"},"ts":1179923162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in theory you might even be able to share some code","msgtype":"m.text"},"ts":1179923220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and in practice, you wouldn't","msgtype":"m.text"},"ts":1179923221000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yeah, dunno about that either","msgtype":"m.text"},"ts":1179923222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although some of the database design can be reused","msgtype":"m.text"},"ts":1179923223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like using XForms to integrate server-side and client-side processing of data?","msgtype":"m.text"},"ts":1179923280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is there a better way to do relational data storage client side?","msgtype":"m.text"},"ts":1179923281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, once you say relational, no, not really","msgtype":"m.text"},"ts":1179923340000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm not so worried about acid and all the fancy DB stuff, but SQL itself is a nice way to manipulate","msgtype":"m.text"},"ts":1179923341000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"which also includes support for querying etc.","msgtype":"m.text"},"ts":1179923342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems there are lots of libraries that hide the SQL behind an object-like interface, so maybe it'd be worth looking at those","msgtype":"m.text"},"ts":1179923400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it just doesn't seem very webby, to me.","msgtype":"m.text"},"ts":1179923401000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(Hmm, it doesn't look like there's even a common-subset way to concatenate strings...)","msgtype":"m.text"},"ts":1179923460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"HTML5 is complex enough without trying to inhale a common subset of SQL","msgtype":"m.text"},"ts":1179923461000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I wonder what the disk footprint of a SQLite database is","msgtype":"m.text"},"ts":1179923462000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"seems to far removed from \"standardisation of what we already know\"","msgtype":"m.text"},"ts":1179923463000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"considering that each domain needs its own","msgtype":"m.text"},"ts":1179923464000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"geez, it's going to suck debugging random crappy websites in the future","msgtype":"m.text"},"ts":1179923520000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I mean keeping track of cookies was bad enough","msgtype":"m.text"},"ts":1179923521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"the web evolves :)","msgtype":"m.text"},"ts":1179923522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and writing eg. little screen scraping tools with wget or whatever","msgtype":"m.text"},"ts":1179923523000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"evolution != progress, it can just mean random mutations, genetic drift, and pointless specialisation :)","msgtype":"m.text"},"ts":1179923580000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"whow! there is a book already http://www.amazon.com/tag/sql5","msgtype":"m.text"},"ts":1179923581000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"SQL: the peacock's tail of the web","msgtype":"m.text"},"ts":1179923582000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hsivonen: A SQLite database with one table and no data is 3072 bytes","msgtype":"m.text"},"ts":1179923640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and 158 bytes after gzip","msgtype":"m.text"},"ts":1179923641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah, that's 158 bytes we won't see again in a hurry :)","msgtype":"m.text"},"ts":1179923700000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I bet you could do fun DOS attacks by JOINing a table with itself dozens of times","msgtype":"m.text"},"ts":1179923760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"presumably it's no more vulnerable to that sort of thing than JavaScript already is","msgtype":"m.text"},"ts":1179923880000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"eg. running ackermann's function or whatever","msgtype":"m.text"},"ts":1179923881000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"But the JS engines already provide timeouts so users can stop runaway scripts, and SQL engines might not","msgtype":"m.text"},"ts":1179924000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(SQLite does, but it's marked as experimental)","msgtype":"m.text"},"ts":1179924001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right, it's another weak point that would need to be checked","msgtype":"m.text"},"ts":1179924060000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"is it in the spec purely because Mozilla support it?","msgtype":"m.text"},"ts":1179924061000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Mozilla doesn't appear to support it now (though they could easily add it (if they don't care about security, e.g. limiting to privileged content) since they're using SQLite)","msgtype":"m.text"},"ts":1179924180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so who asked for it?","msgtype":"m.text"},"ts":1179924181000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Developers, developers, developers!","msgtype":"m.text"},"ts":1179924240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't know","msgtype":"m.emote"},"ts":1179924241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You missed one developer","msgtype":"m.text"},"ts":1179924242000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmm. Maybe I should ask for a complete POSIX implementation to be added to HTML5","msgtype":"m.text"},"ts":1179924243000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Dashiva, he didn't care","msgtype":"m.text"},"ts":1179924244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1179924245000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"that way, people could run existing Linux binaries in the browser environment","msgtype":"m.text"},"ts":1179924246000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"each domain could have a chroot style setup","msgtype":"m.text"},"ts":1179924247000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: That would solve the problem of making a web-based OS","msgtype":"m.text"},"ts":1179924248000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Are we still talking about a world where Microsoft exists?","msgtype":"m.text"},"ts":1179924300000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"with its own POSIX namespace, the usual APIs available, sockets, memory mapped files, etc.","msgtype":"m.text"},"ts":1179924301000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Just wait for virtualisation technology to advance a bit, and then it'll be fine to run a virtual machine per browser session","msgtype":"m.text"},"ts":1179924302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or better yet, an x86 virtual machine would make more sense than a POSIX layer","msgtype":"m.text"},"ts":1179924303000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hah, you beat me to it","msgtype":"m.text"},"ts":1179924304000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"then we could run arbitrary programs and old DOS games in the browser. take that, flash!","msgtype":"m.text"},"ts":1179924360000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Hmm, x86 is a pain - just make a new instruction set that's easy to virtualise, and port Linux to it","msgtype":"m.text"},"ts":1179924361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Why not just reuse JS?","msgtype":"m.text"},"ts":1179924362000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"We have JSON, next is JSOS","msgtype":"m.text"},"ts":1179924363000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hmm, compile Linux into the instruction set for virtual machine written in JavaScript?","msgtype":"m.text"},"ts":1179924420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"+a","msgtype":"m.text"},"ts":1179924421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Then just JIT it to the user's native instruction set, for optimal performance","msgtype":"m.text"},"ts":1179924422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"rather than having an SQL based storage system in the browser,","msgtype":"m.text"},"ts":1179924480000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"you could have a virtual machine with a virtual IDE hard disk of configurable size","msgtype":"m.text"},"ts":1179924481000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"wonders how many potential embedded-SQL uses could be handled just by adding B-tree indexes to globalStorage","msgtype":"m.emote"},"ts":1179924482000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"scripts can then \"format\" the virtual hard disk with their file system of choice, and address it at block-level","msgtype":"m.text"},"ts":1179924483000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I would be quite nervous looking at a web site that said \"Formatting disk - please wait\" and knowing that it was actually capable of formatting a disk, even if I was fairly certain it was isolated to the web browser","msgtype":"m.text"},"ts":1179924660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how nervous would you be to see \"Creating tables and building indices\"","msgtype":"m.text"},"ts":1179924661000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I know how to protect myself from tables, so that's not a problem - I can just climb up the stairs and they can't follow because their legs won't bend enough","msgtype":"m.text"},"ts":1179924720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"touche :)","msgtype":"m.text"},"ts":1179924780000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"a whole new world of layout tables","msgtype":"m.text"},"ts":1179924781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"We could just adopt the proposal from http://sql4.by.ru/","msgtype":"m.text"},"ts":1179924840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"we have good stuff in here for next year's april fool's joke","msgtype":"m.text"},"ts":1179925380000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Next year it won't be a joke anymore :)","msgtype":"m.text"},"ts":1179925381000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"why wait? After all, they didn't wait until April for the SQL proposal :)","msgtype":"m.text"},"ts":1179925382000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":":p","msgtype":"m.text"},"ts":1179925440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah well, that's enough spec bashing for now","msgtype":"m.text"},"ts":1179925920000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1179925921000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Hixie: Re: IRC logs a week ago: Jukka Korpela is known to argue about the details of what it means to have a \"sample\" in the statistics sense.","msgtype":"m.text"},"ts":1179925980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"of course, on the Web, it is impossible to have the kind of sample he means","msgtype":"m.text"},"ts":1179926280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what kind of sample does he mean?","msgtype":"m.text"},"ts":1179926281000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"he refused to explain when I asked and then insulted me for not having taken statistics 101","msgtype":"m.text"},"ts":1179926282000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Well, intranet pages for one","msgtype":"m.text"},"ts":1179926340000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Lachy: I think he means that first you identify a population and then you pick a sample at random so that each member of the population has an equal probability of appearing in the sample","msgtype":"m.text"},"ts":1179926460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: but on the Web, you cannot enumerate the population of pages and you cannot do uniform sampling","msgtype":"m.text"},"ts":1179926520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: one might argue, though, that a chunk of \"important\" pages from google is more useful than a proper sample of the same size","msgtype":"m.text"},"ts":1179926521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't taking a massive sample of several billion pages somewhat compensate for the problems of not being able to do that?","msgtype":"m.text"},"ts":1179926580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: but the argument wasn't about useful but about proper use of statistics terminology","msgtype":"m.text"},"ts":1179926581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: just don't call it a \"sample\" :-)","msgtype":"m.text"},"ts":1179926582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, what would you call it?","msgtype":"m.text"},"ts":1179926583000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"dunno. it has been a while since I've done statistics","msgtype":"m.text"},"ts":1179926640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Why would taking a bigger sample make it any better, if the sample is still biased in some direction?","msgtype":"m.text"},"ts":1179926641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: well, if the bias is towards some notion of being more important","msgtype":"m.text"},"ts":1179926700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: then we can discuss what's important","msgtype":"m.text"},"ts":1179926701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If you identified a billion pages and then chose a million at random to analyse in detail, you should get exactly the same results (except for incredibly rare events where you'd lose statistical significance)","msgtype":"m.text"},"ts":1179926702000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy: call it \"a subset of the Web\". :)","msgtype":"m.text"},"ts":1179926760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(then the problem is in identifying the population of a billion pages, and the actual sampling is easy)","msgtype":"m.text"},"ts":1179926761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: the problem is that implicitly the infinite population of all Web pages is assumed","msgtype":"m.text"},"ts":1179926820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(and using a bigger sample within that population wouldn't compensate for any problems in the choice of population)","msgtype":"m.text"},"ts":1179926821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm. according to wikipedia, a non-random subset is still a \"sample\" even if not a \"random sample\"","msgtype":"m.text"},"ts":1179926880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Sampling an infinite space seems like it ought to be impossible (or at least not well defined) - if you chose a sample of n random positive integers, then the mean would be some value which is completely non-representative of the population because there'd be a finite number of numbers below it and an infinite number of numbers above it...","msgtype":"m.text"},"ts":1179927000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham, I think we should be using insert(0, data) as opposed to append()","msgtype":"m.text"},"ts":1179927780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, for stream.qeue","msgtype":"m.text"},"ts":1179927781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, especially if we start allowing injection","msgtype":"m.text"},"ts":1179927782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1179929340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the Content-Type discussion is funny","msgtype":"m.text"},"ts":1179929341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the last e-mail from Jeff :)","msgtype":"m.text"},"ts":1179929400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What annoys me most about these HTTP guys is that they always tell you how things should be done, but they never make it actually happen","msgtype":"m.text"},"ts":1179930540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Browser vendors have tried and tried to fix the web, but it hasn't paid off and didn't work out very well either.","msgtype":"m.text"},"ts":1179930600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In fact, we're still trying to actively educate people and publish articles, etc. and what not and still lots of people get it wrong and will get it wrong.","msgtype":"m.text"},"ts":1179930601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(HTTP people also have this notion about asking the user. It's even in the HTTP specification. That's one of the worst possible models you can have and it has been widely ignored in practice...)","msgtype":"m.text"},"ts":1179930720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Browsers still seem to ask the user if they really want to submit a form, or if they really want to look at a secure site, or if they really want to leave a secure site","msgtype":"m.text"},"ts":1179931080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though the default seems to be to only ask once, and it's not like anybody reads those messages the first time anyway, so I'm not sure what the point is","msgtype":"m.text"},"ts":1179931081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: to claim you implement the spec","msgtype":"m.text"},"ts":1179931140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"My XML tokenizer now passes the \"tests\" in http://www.w3.org/TR/xml/#sec-entexpand","msgtype":"m.text"},"ts":1179931200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Some bits are a bit hacky for my taste, but I suppose that can eventually be made cleaner","msgtype":"m.text"},"ts":1179931260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, yeah, I've the feeling that those messages are there to please the HTTP gods","msgtype":"m.text"},"ts":1179931440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At some point in the past my parents switched browser and were heavily confused with those modal dialogs wondering what they had done wrong.","msgtype":"m.text"},"ts":1179931441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is still attempting to get his mother to use a computer at all","msgtype":"m.emote"},"ts":1179931560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"After I hook this up with the treebuilder I need to start doing boring things... Such as making testcases :(","msgtype":"m.text"},"ts":1179931920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe I should open source it :)","msgtype":"m.text"},"ts":1179931921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I liked that dialog box","msgtype":"m.text"},"ts":1179932640000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"We should have more of those. \"Do you want this page to render correctly?\"","msgtype":"m.text"},"ts":1179932641000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"Do you want to render this page per spec?\"","msgtype":"m.text"},"ts":1179932700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Do you want to render this page in a way completely incompatible with the web?\"","msgtype":"m.text"},"ts":1179932940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Do you want to use a browser that doesn't follow the spec but does render this page?\"","msgtype":"m.text"},"ts":1179932941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does anyone have any documentation of the major incompatibilities between HTTP/1.1 and HTTP in the real world?","msgtype":"m.text"},"ts":1179933000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1179933001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ergh. does anyone know if you need to do hysterics involving CR or LF where the spec says you should have CRLF?","msgtype":"m.text"},"ts":1179933120000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: are html5lib tokenizer tests independent of tree builder?","msgtype":"m.text"},"ts":1179934020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, yes, although you have to implement some logic to run them","msgtype":"m.text"},"ts":1179934200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, they may also assume a particular implementation","msgtype":"m.text"},"ts":1179934201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what kind of assumptions?","msgtype":"m.text"},"ts":1179934202000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that end tags have their attributes not dropped yet I believe","msgtype":"m.text"},"ts":1179934380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some things are done during the tree builder step","msgtype":"m.text"},"ts":1179934381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but just go through them yourself, it should not be that hard to modify the problematic ones","msgtype":"m.text"},"ts":1179934440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eww. do the end tag attributes ever get anything but ignored?","msgtype":"m.text"},"ts":1179934441000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't remember the spec doing anything with end tag attributes","msgtype":"m.emote"},"ts":1179934442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, we don't check whether it's an end or start tag when appending attributes","msgtype":"m.text"},"ts":1179934740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, you mentioned <canvas> perf earlier on? Do you have standalone testcases for that?","msgtype":"m.text"},"ts":1179935640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, Having standalone testcases makes it easier to improve the situation","msgtype":"m.text"},"ts":1179935641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"removes lots of HTML specific stuff out of base.py in his XML5 project","msgtype":"m.emote"},"ts":1179939120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to align the architecture as much as possible so it remains relatively easy to do similar things","msgtype":"m.emote"},"ts":1179939180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the deal with this ship names thing?","msgtype":"m.text"},"ts":1179940080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there a good use case for needing to know that a string is a ship name?","msgtype":"m.text"},"ts":1179940081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or is it just a popular contrived example of something that is italicized but doesn't have a more appropriate element than <i> in HTML?","msgtype":"m.text"},"ts":1179940140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It's apparently the best example of semantic non-emphasis italic","msgtype":"m.text"},"ts":1179940141000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"right. ","msgtype":"m.text"},"ts":1179940142000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and presumably ship names are a common case?","msgtype":"m.text"},"ts":1179940200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Personally I'd guess most people wouldn't italicize them at all","msgtype":"m.text"},"ts":1179940201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"annevk: I don't have any intentional tests - I've just played around a bit with http://canvex.lazyilluminati.com/misc/speed/benchmark.html but I don't think any of those cases are actually representative of what makes Canvex slow (e.g. I no longer see any real-world performance difference using drawImage(img) vs drawImage(canvas) because it's probably drowned out by other problems)","msgtype":"m.text"},"ts":1179942900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I should probably set up some mode in Canvex where it starts in an interesting place looking at complex stuff, so I could run it in a profiler and see what's actually slow nowadays","msgtype":"m.text"},"ts":1179943080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the SQL stuff's main use case is offline Web apps -- big web apps like say an RSS reader that wants to support working while offline needs way more than the globalStorage stuff","msgtype":"m.text"},"ts":1179952680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm very aware of the problem with sql interoperability :-(","msgtype":"m.text"},"ts":1179952740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i hope we'll be able to have implementations in the coming 6-12 months; if we then have 2 implementations we can define a common subset and lock that down","msgtype":"m.text"},"ts":1179952741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I don't think interoperability should be a problem if you specify the exact subset of SQL supported by SQLite","msgtype":"m.text"},"ts":1179952800000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"(in practice i would expect it to be very similar to sqllite, since safari and firefox are both already using it, as i understand it)","msgtype":"m.text"},"ts":1179952801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: regarding samples, note that he never replied to my e-mail where i explained exactly how i defined a fixed sampling frame before taking a sample","msgtype":"m.text"},"ts":1179952860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... since SQLite is placed in the public domain, http://sqlite.org/copyright.html","msgtype":"m.text"},"ts":1179952861000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179952920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and they have this interesting take on patents, http://programming.reddit.com/info/1eypf/comments","msgtype":"m.text"},"ts":1179952921000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"being in the public domain is actually a little more dodgy than copyright with a liberal license","msgtype":"m.text"},"ts":1179952922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: you're thinking of the fact that all jurisdictions don't recognize PD?","msgtype":"m.text"},"ts":1179952980000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"They offer licensing for that purpose","msgtype":"m.text"},"ts":1179952981000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"virtuelv2: that and because anyone can copyright even a trivial derivative work of a PD work in full, thereby potentially making the licensing issues more murky","msgtype":"m.text"},"ts":1179953100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if it's in the public domain, who are they to issue licenses?","msgtype":"m.text"},"ts":1179953101000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"isn't copyright in this case non-existent?","msgtype":"m.text"},"ts":1179953160000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"gavin: because all contributors have to sign off the code to the PD","msgtype":"m.text"},"ts":1179953161000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"you can relicense PD code if you please, as othermaciej noted","msgtype":"m.text"},"ts":1179953162000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"the copyright is what I'm wondering about","msgtype":"m.text"},"ts":1179953163000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"if they say they have no copyright to the code, I don't see how they can license it","msgtype":"m.text"},"ts":1179953220000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"you can only license something if you have the copyright","msgtype":"m.text"},"ts":1179953221000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"gavin: they can, because they are free to do so under the same license they're distributing it","msgtype":"m.text"},"ts":1179953222000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"you can do the same","msgtype":"m.text"},"ts":1179953223000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"maybe I should go speak to a copyright lawyer","msgtype":"m.text"},"ts":1179953280000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"wonder how much that'll cost me :)","msgtype":"m.text"},"ts":1179953281000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"gavin: make sure you do in a country that accepts the PD","msgtype":"m.text"},"ts":1179953282000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"Some countries don't","msgtype":"m.text"},"ts":1179953283000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"I don't see how that matters","msgtype":"m.text"},"ts":1179953284000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"I once had a boss who doubted our ability to waive copyright in Finland. So we used the MIT license. I have talked to copyright lawyers since and none of them saw a problem with waiving copyright.","msgtype":"m.text"},"ts":1179953340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok, let's say I place Item A in the public domain in country Foo","msgtype":"m.text"},"ts":1179953341000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"I have no stake in this, I'm just curious","msgtype":"m.text"},"ts":1179953342000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"make sure you talk to a lawyer that understands the copyright law of countries that accept the public domain","msgtype":"m.text"},"ts":1179953343000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that would be the right way to put it","msgtype":"m.text"},"ts":1179953344000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1179953345000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"ah, ok, I see","msgtype":"m.text"},"ts":1179953346000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"(what virtuelv2 meant)","msgtype":"m.text"},"ts":1179953347000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"if a user in country Bar, that doesn't accept PD, gets my Item A, the legal system in Country Bar will assert that I own copyright of Item A","msgtype":"m.text"},"ts":1179953400000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"didn't intend to start a discussion about copyright law","msgtype":"m.emote"},"ts":1179953401000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"I should have kept my curiosity to myself :)","msgtype":"m.text"},"ts":1179953402000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"still can't imagine any two SQL implementations being close to interoperable, unless they're two versions of exactly the same database engine and then it's still fairly dodgy (e.g. SQLite 2 vs SQLite 3 being very different; though from what I've heard, v3 is considered pretty much complete and there's not going to be a v4, though I could be utterly wrong in remembering that)","msgtype":"m.emote"},"ts":1179954060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, cut down on the utility functions and fancy frills, and it gets a lot better","msgtype":"m.text"},"ts":1179954180000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Oh, it was http://osdir.com/ml/python.db.pysqlite.user/2006-12/msg00015.html saying \"drh does not expect there to ever be a SQLite 4\"","msgtype":"m.text"},"ts":1179954181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What about e.g. types?","msgtype":"m.text"},"ts":1179954182000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"like, SQLite doesn't really have them, but other databases do","msgtype":"m.text"},"ts":1179954183000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which seems a fairly major interoperability concern","msgtype":"m.text"},"ts":1179954184000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: we couldn't imagine two html implementations being close to interoperable, but now we have html5 and the goal is in sight :-)","msgtype":"m.text"},"ts":1179954240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe clarify what kind of interoperability is the worry. Developer experience/lockin, or machine/application interop?","msgtype":"m.text"},"ts":1179954300000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"The people implementing HTML want it to be interoperable, whereas the people implementing SQL have never really cared and there's not much reason to think they ever will, and the people implementing HTML probably don't want all the work of reimplementing SQL too :-)","msgtype":"m.text"},"ts":1179954301000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Uh, \"The people implementing HTML wanted HTML to be interoperable, ...\"","msgtype":"m.text"},"ts":1179954302000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip` there are people building apps with same SQL working on MSSQL and Oracle too, but it is only small subset of all functionality","msgtype":"m.text"},"ts":1179954303000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"And on a pragmatic note, reality survives with the current set of SQL engines. Why would that change?","msgtype":"m.text"},"ts":1179954420000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I don't remember having seen any applications that work on more than one database, without them having put significant effort into writing multiple sets of database backend code","msgtype":"m.text"},"ts":1179954540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"we'll see. it may well be that we simply can't have interoperability here, and we have to drop it.","msgtype":"m.text"},"ts":1179954541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't imagine there are too many web applications running SQL on the client side yet","msgtype":"m.text"},"ts":1179954542000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"e.g. Trac at http://trac.edgewall.org/wiki/DatabaseBackend eventually got support for SQLite+MySQL+Postgres but it took a long time","msgtype":"m.text"},"ts":1179954600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"one thing though -- if the first two implementations use SQLLite, same version, and then we get widely distributed code out there that uses it, that will greatly increase the cost of someone writing a non-compatible version.","msgtype":"m.text"},"ts":1179954601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, look at mozilla expanding JS, who's to say they won't do the same to their SQL?","msgtype":"m.text"},"ts":1179954720000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"they being browser vendors in general, not just moz","msgtype":"m.text"},"ts":1179954780000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"they're expanding JS in conjunction with the ECMA working group","msgtype":"m.text"},"ts":1179955020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If the first implementations do use SQLite and everyone else has to too, it sounds like the specification will simply (though maybe not explicitly) require all implementors to use the SQLite implementation, and it doesn't really sound very spec-like to say \"you must accept the dialect of SQL spoken by SQLite\" (but it wouldn't be good to not say that, if it's true)...","msgtype":"m.text"},"ts":1179955320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm not sure if there's anything particularly wrong with everybody in the world using SQLite, if Microsoft would accept that too instead of going their own way with a different SQL implementation (assuming they ever bother with this at all), but it seems odd","msgtype":"m.text"},"ts":1179955440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: no, we'd define it in detail, not like that","msgtype":"m.text"},"ts":1179955500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would just happen to be compatible with the implementations in the wild, whether that be sqllite or whatever","msgtype":"m.text"},"ts":1179955560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What would happen with old content that came before it was defined, and assumed all of SQLite's behaviour?","msgtype":"m.text"},"ts":1179955561000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the idea would be to define it such that existing content works","msgtype":"m.text"},"ts":1179955620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just doing \"CREATE TABLE t ( n )\" is perfectly normal in SQLite but I don't believe it works in any other database at all (since they all require columns to have types)","msgtype":"m.text"},"ts":1179955621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"then if sqllite is what is used, then we will probably end up defining that","msgtype":"m.text"},"ts":1179955680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ergh. I give up with people claiming <i> is deprecated.","msgtype":"m.text"},"ts":1179955681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If someone isn't going to use SQLite for whatever reason, would they implement something that's compatible with it (or with the definition of it from the spec), rather than just sticking in whatever other SQL engine is handy because it'll save them years of work?","msgtype":"m.text"},"ts":1179955740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"if they want to be compliant and want to work with existing content, yes","msgtype":"m.text"},"ts":1179955800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hence the desire to have existing content depend on something before we spec it in detail","msgtype":"m.text"},"ts":1179955801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since that rather forces the issue","msgtype":"m.text"},"ts":1179955802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What'd be really neat is if you could use SQLite's virtual tables, where you implement the table backend in JavaScript and could make it do synchronous XHR requests to retrieve the data to return to the client code when it performs queries...","msgtype":"m.text"},"ts":1179956160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(http://www.sqlite.org/cvstrac/wiki?p=VirtualTables etc)","msgtype":"m.text"},"ts":1179956280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179956520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"2","msgtype":"m.text"},"ts":1179957180000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"heh, dette er pussig","msgtype":"m.text"},"ts":1179957181000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"Ubuntu NEKTER å mounte ipoden min","msgtype":"m.text"},"ts":1179957182000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"augh, wrong channel","msgtype":"m.text"},"ts":1179957240000,"senderName":"virtuelv2","senderId":"virtuelv2@irc"},
{"content":{"body":"assumes you wouldn't have to use transactions if you were doing everything in a single JS function (rather than spread across multiple event handlers), since JS has to execute single-threadedly so there wouldn't be concurrent database accesses, which is nice because it prevents some obvious errors","msgtype":"m.emote"},"ts":1179957540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Why does ResultSet have getName and not specify what order or what set of fields should be returned, rather than just saying it returns the same fields in the same order as in the SELECT statement (and then not needing getName because the user already knows)?","msgtype":"m.text"},"ts":1179957840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"getName throwing exceptions if there are no results sounds a bit annoying, because it means you couldn't do \"r = executeSql(...); i = r.getName('field'); for (; r.validRow; r.next()) { dostuff(r[i]) }\" ","msgtype":"m.text"},"ts":1179958020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"insertId doesn't say what happens if multiple rows were inserted","msgtype":"m.text"},"ts":1179958140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I expect people writing code would like to be able to find out how much disk space they're using and how much is available, so they can present it to the user nicely and can clean up old data if it's getting full, rather than waiting until they get an exception at an unexpected time","msgtype":"m.text"},"ts":1179958380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: you don't know the rows in a SELECT * statement","msgtype":"m.text"},"ts":1179958440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can you insert multiple rows?","msgtype":"m.text"},"ts":1179958441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, i imagine quota management might be something we'll do in a v2","msgtype":"m.text"},"ts":1179958442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think \"executeSql('BEGIN'); executeSql('INSERT INTO table VALUES (?)', lots_of_data_so_we_run_out_space); executeSql('COMMIT')\" would break confusingly since JS exceptions won't roll back the transaction","msgtype":"m.text"},"ts":1179958443000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it interacts with the other storage things","msgtype":"m.text"},"ts":1179958444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, I forgot about SELECT *","msgtype":"m.text"},"ts":1179958500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why won't they?","msgtype":"m.text"},"ts":1179958501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You can do e.g. \"INSERT INTO b SELECT * FROM a\" to copy a whole table at once","msgtype":"m.text"},"ts":1179958560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1179958561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what should insertId return then?","msgtype":"m.text"},"ts":1179958620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think they can they roll back the transaction without knowing that the exception is passing out of the transaction's scope without being caught","msgtype":"m.text"},"ts":1179958621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and since the transaction is defined by a pair of BEGIN and COMMIT commands, it doesn't have a scope that the browser could know about","msgtype":"m.text"},"ts":1179958622000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, well sure, if you're going to do commit/rollback transactions, you should use exception handlers around what you're doing","msgtype":"m.text"},"ts":1179958680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think you misunderstood getName, btw","msgtype":"m.text"},"ts":1179958681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You could write a transaction wrapper and run \"doTransaction(function(){ executeSql(...) })\" and it can do the BEGIN/COMMIT/catch/ROLLBACK/throw stuff, I suppose","msgtype":"m.text"},"ts":1179958740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"your example would be  r = executeSql(...); for (; r.validRow; r.next()) { dostuff(r['field']) }","msgtype":"m.text"},"ts":1179958741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there is in fact no way to get an index from a string","msgtype":"m.text"},"ts":1179958800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SQLite's last_insert_rowid() returns the last row ID that was inserted in the current connection - if insertId is supposed to be per-resultset instead, I'm not sure how you could implement that, but it'd probably end up returning the last inserted row ID from that query","msgtype":"m.text"},"ts":1179958801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1179958802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oops, yes, I got getName the wrong way round","msgtype":"m.text"},"ts":1179958860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(well i guess you can get an index from a string if you loop over the fields looking at each name in turn)","msgtype":"m.text"},"ts":1179958920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I fixed the insertId thing.","msgtype":"m.text"},"ts":1179958921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're in the acknowledgements already right?","msgtype":"m.text"},"ts":1179958922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd guess doing string->index might be useful for efficiency, if you're getting lots of rows and don't want the hash lookup cost for each one, but maybe it's not worth caring about","msgtype":"m.text"},"ts":1179958980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I am","msgtype":"m.text"},"ts":1179958981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'm famous!)","msgtype":"m.text"},"ts":1179958982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"christ, between twitter being down and the mail server being twitchy the people watching twitter and commit-watchers aren't going to get much of a good look at the changes today","msgtype":"m.text"},"ts":1179959040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure how you could implement insertId so it works with \"INSERT INTO t (id) VALUES (123) /* insertId = 123 */; DELETE FROM t /* insertId undefined */; INSERT INTO t (id) VALUES (123) /* insertId = 123 */\", given SQLite's last_insert_rowid (which will (I think) give exactly the same value after each of those statements)","msgtype":"m.text"},"ts":1179959100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dunno, we'll see what implementors say","msgtype":"m.text"},"ts":1179959220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe we'll just have to have insertId return the last inserted row at the point the result set was created","msgtype":"m.text"},"ts":1179959221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In ms sql wil be the second insert 134 (dunno sqllite)","msgtype":"m.text"},"ts":1179959280000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"or they'll fix sqllite","msgtype":"m.text"},"ts":1179959281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Could just drop it entirely and use executeSql(\"SELECT last_insert_rowid()\")[0]","msgtype":"m.text"},"ts":1179959282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"when writing database code i always wish i could just do |var x = executeSql(\"INSERT ...\").insertId;|","msgtype":"m.text"},"ts":1179959400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and have that be per browsing context, since it's per connection and each browsing context can have a separate connection)","msgtype":"m.text"},"ts":1179959401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"var x = executeSql(\"INSERT ...; SELECT last_insert_rowid()\")[0] isn't much worse","msgtype":"m.text"},"ts":1179959520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it is worse :-)","msgtype":"m.text"},"ts":1179959521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ponders whether pushState() should always require a URI and title, or if it should allow state to be pushed without a URI","msgtype":"m.emote"},"ts":1179959522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip` why not per connection? it should be for one connection","msgtype":"m.text"},"ts":1179959523000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1179959524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"met_: Not quite sure what you mean","msgtype":"m.text"},"ts":1179959580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you said  last_insert_rowid() should return last id from whole context not from one connection?","msgtype":"m.text"},"ts":1179959640000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"I meant that if you did \"executeSql(\"INSERT ...\"); setTimeout(function(){ executeSql(\"SELECT last_insert_rowid()\") }, 1000)\" (and nothing else happens on that page) then it should return the rowid from that first INSERT, regardless of whether you've got the same site open in a different tab or window and are inserting new rows over there","msgtype":"m.text"},"ts":1179959820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes I agree, misunderstand it","msgtype":"m.text"},"ts":1179959880000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"which would require browsers to have a separate SQLite-connection in order to keep that separation","msgtype":"m.text"},"ts":1179959881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Uh","msgtype":"m.text"},"ts":1179959882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"*a seperate SQLite-connection per browsing context","msgtype":"m.text"},"ts":1179959883000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes ","msgtype":"m.text"},"ts":1179959884000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"has sqllite some lock mechanism for this?","msgtype":"m.text"},"ts":1179959940000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"for more connection accesing one table","msgtype":"m.text"},"ts":1179959941000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"You can open multiple connections (as long as the database is stored on disk, not in memory, I think), so each will have its own last_insert_rowid and stuff, and you can do some coarse-grained (per-table reader-writer) locking to stop transactions interfering","msgtype":"m.text"},"ts":1179960180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and JavaScript's singlethreadedness should avoid most of the real concurrency issues","msgtype":"m.text"},"ts":1179960240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fine","msgtype":"m.text"},"ts":1179960241000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"(I think people would like finer-grained locks, but it'll only be implemented if they can find a mechanism that was described long enough ago for any patents to have expired)","msgtype":"m.text"},"ts":1179960242000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"how handle in javascript case when 1 browser windows lock some table and second  windows are in a que? should'n be there some timeout? for not to freeze so many windows","msgtype":"m.text"},"ts":1179960300000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"*queu","msgtype":"m.text"},"ts":1179960360000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"The browser can set SQLite's busy_timeout, so if two pages both BEGIN EXCLUSIVE then the second will time out after 5 seconds (or whatever) and presumably the browser would then raise a JavaScript exception","msgtype":"m.text"},"ts":1179960480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, actually, no","msgtype":"m.text"},"ts":1179960481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"busy_timetout will be useful","msgtype":"m.text"},"ts":1179960482000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"Since JS runs single-threaded, you wouldn't want to bother with timeouts because there isn't any other thread that's going to release the lock later","msgtype":"m.text"},"ts":1179960540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and what 2 browser windows?","msgtype":"m.text"},"ts":1179960541000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"Both browser windows still run all the scripts in the same thread (as far as I'm aware)","msgtype":"m.text"},"ts":1179960542000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"these are not neccessary in one JS thread","msgtype":"m.text"},"ts":1179960543000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"or is it some recommendation for implementors?","msgtype":"m.text"},"ts":1179960600000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"HTML5 says \"... the HTML scripting model is strictly single-threaded and not reentrant\"","msgtype":"m.text"},"ts":1179960601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and concern this really more  windows?","msgtype":"m.text"},"ts":1179960660000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"So you could still have one page that does BEGIN EXCLUSIVE and then returns control to the browser, then a second page comes along and tries BEGIN EXCLUSIVE but it would immediately fail because the table's already locked (so you set the busy timeout to 0, I guess)","msgtype":"m.text"},"ts":1179960661000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which is kind of irritating since a single page can jam the database until you restart your browser","msgtype":"m.text"},"ts":1179960720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"rememer only Firefox to have js threads via  XPCOM ","msgtype":"m.emote"},"ts":1179960721000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"Oh, no, it only jams the database until you close the page which had the lock","msgtype":"m.text"},"ts":1179960722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since that page has its own connection, and locks belong to connections)","msgtype":"m.text"},"ts":1179960723000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or there can be some max_time_limit for one sql request","msgtype":"m.text"},"ts":1179960780000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"I think multiple windows still have to all be in the same single thread (or at least appear exactly as if they are), because they can interact with each other in various ways","msgtype":"m.text"},"ts":1179960781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"if it takes too long db should stop it","msgtype":"m.text"},"ts":1179960782000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"It doesn't have to be a slow request - you could just do \"<script>executeSql('BEGIN EXCLUSIVE')</script>\" and the request would finish quickly, but the database would still be locked","msgtype":"m.text"},"ts":1179960900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Oops, I said it was per-table but actually it's per-database)","msgtype":"m.text"},"ts":1179960901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah the spec already describes the threading model in detail","msgtype":"m.text"},"ts":1179961020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i can't find it now","msgtype":"m.text"},"ts":1179961080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1179961081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#threads ?","msgtype":"m.text"},"ts":1179961082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh there we go","msgtype":"m.text"},"ts":1179961083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"4.1.4","msgtype":"m.text"},"ts":1179961084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i read br. context well it  looks like if I have two independent browser windows with www.example.com, these are 2 browsing context and do not know about each other, so single-thread rule doesn't apply for them","msgtype":"m.text"},"ts":1179961440000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1179961441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1179961500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, in that case it's not true that the database access is single-threaded and easy","msgtype":"m.text"},"ts":1179961501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1179961560000,"senderName":"met_","senderId":"met_@irc"},
{"content":{"body":"wonders what happens if there are two unrelated browsing contexts, one in a window named \"A\" and one in a window named \"B\", and simultaneously the first does \"while (1) window.open(uri, 'B');\" and the second does \"while (1) window.open(uri, 'A');\"","msgtype":"m.emote"},"ts":1179961620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"One would win","msgtype":"m.text"},"ts":1179961800000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Unless you're somehow managing to really run both at once using two processors and a multithread-script UA or somesuch","msgtype":"m.text"},"ts":1179961860000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"The threading model in the spec allows them to be in separate threads on separate processors, as far as I can tell","msgtype":"m.text"},"ts":1179961920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I guess a sensible implementation would just abort one of the scripts when it's forcibly navigated away from, since it's the same as if one page does \"while (1) {}\" and the user tries to hit the back button to get away","msgtype":"m.text"},"ts":1179961980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heho","msgtype":"m.text"},"ts":1179962100000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"(Or maybe a sensible implementation would do everything in a single thread anyway, since it's not like people tend to look at multiple unrelated pages which are simultaneously using the full CPU to execute JS)","msgtype":"m.text"},"ts":1179962160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Good evening","msgtype":"m.text"},"ts":1179962161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"html5?","msgtype":"m.text"},"ts":1179962162000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"Yes?","msgtype":"m.text"},"ts":1179962220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i did just read about it, is it only because of backwards compatibility and the xml must 100% valid problem?","msgtype":"m.text"},"ts":1179962221000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"It's not a 'only', no","msgtype":"m.text"},"ts":1179962222000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i am currently using xhtml 1.0 strict for all my small websites, so tell me, what is the future? xhtml2 or xhtml5?","msgtype":"m.text"},"ts":1179962280000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"Well, browsers are implementing parts of xhtml5 already","msgtype":"m.text"},"ts":1179962281000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i have read here and there a bit, but can't find much examples of html5 and so, i am no technician, so i don't udnerstand all those documentations with this abstract text","msgtype":"m.text"},"ts":1179962340000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"It's a work in progress","msgtype":"m.text"},"ts":1179962341000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"is there a site where i can see a comparison of xhtml2 and 5 and 1?","msgtype":"m.text"},"ts":1179962342000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"okay, and html5 will have all the elements of html 4.01 strict? or on what does it build up on?","msgtype":"m.text"},"ts":1179962400000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"It builds on the existing web","msgtype":"m.text"},"ts":1179962460000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":".....","msgtype":"m.text"},"ts":1179962520000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Changes_from_HTML4 lists some differences between HTML4 and HTML5","msgtype":"m.text"},"ts":1179962521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1179962522000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"Hopefully, this will be a success: http://yodel.yahoo.com/2007/05/22/one-small-step-for-email-one-giant-leap-for-internet-safety/","msgtype":"m.text"},"ts":1179962640000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"is the stupid target attribute removed in html5?","msgtype":"m.text"},"ts":1179962940000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"as far as i read, frames arent supported","msgtype":"m.text"},"ts":1179963000000,"senderName":"MasterLexx","senderId":"MasterLexx@irc"},
{"content":{"body":"Philip`: in that kind of UA, i would imagine that the ua would not determine \"that the two browsing contexts are related enough that it is ok if they reach each other\"","msgtype":"m.text"},"ts":1179963120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Ah, didn't see that bit - makes sense","msgtype":"m.text"},"ts":1179964080000,"senderName":"Philip`","senderId":"Philip`@irc"}
]