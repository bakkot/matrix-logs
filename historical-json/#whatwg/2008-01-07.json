[
{"content":{"body":"Hixie: another idea for a test -- make sure that the CSS float property can be accessed through the DOM by the property name \"cssFloat\"; I've heard rumors IE only supports styleFloat","msgtype":"m.text"},"ts":1199682300000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: thanks","msgtype":"m.text"},"ts":1199685000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1199685001000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"if you have any firefox or safari bugs, those are even more valuable... the test is already a mess in IE, we don't really need to add more IE bugs :-)","msgtype":"m.text"},"ts":1199685060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i'll try this one","msgtype":"m.text"},"ts":1199685061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I know; I should skim through the list of bugs I'm CCed on and see if there are any that have been around awhile","msgtype":"m.text"},"ts":1199685120000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: btw, your use of text-shadow is nice, and I wish Gecko supported it, but (I'd hope!) you're not going to be able to get accurate rendering with it, unless you're just checking that it gets DOMified","msgtype":"m.text"},"ts":1199685180000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1199685660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: surely CSS wouldn't prescribe exact rendering for text-shadow, would it?","msgtype":"m.text"},"ts":1199686020000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden_: in the extreme case of there not being a blur radius, sure","msgtype":"m.text"},"ts":1199687460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"finds it rather odd that jwalden_ and Hixie are having two separate conversations in two different channels on two different networks","msgtype":"m.emote"},"ts":1199687520000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=98694 might be reasonable","msgtype":"m.text"},"ts":1199688960000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"can't test :hover from script","msgtype":"m.text"},"ts":1199689020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, point","msgtype":"m.text"},"ts":1199689500000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"you could require the mouse to be in the window and ensure that the feature which should be in :hover covers the whole page and then use getComputedStyle","msgtype":"m.text"},"ts":1199690100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(:hover on a column, yuck)","msgtype":"m.text"},"ts":1199690101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that one's not clearly justified by standards I don't think","msgtype":"m.text"},"ts":1199690220000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even if it were testable","msgtype":"m.text"},"ts":1199690221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't want to require much of reporters at all :-)","msgtype":"m.text"},"ts":1199690222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: <https://bugzilla.mozilla.org/show_bug.cgi?id=312354> might fit a bill","msgtype":"m.text"},"ts":1199690460000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"26 tests to go","msgtype":"m.text"},"ts":1199691120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: looking","msgtype":"m.text"},"ts":1199691121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jwalden: E4X isn't old enough","msgtype":"m.text"},"ts":1199691180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: don't need E4X, just something that will do the conversion -- |var c = node.textContent = {toString: function() { return \"string\"; }};| would do the trick -- is c a string or an object?","msgtype":"m.text"},"ts":1199691240000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"or at least that's how I understand it","msgtype":"m.text"},"ts":1199691241000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1199691242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks closer","msgtype":"m.emote"},"ts":1199691243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"typeof(window.name = 6) retrns number for me","msgtype":"m.text"},"ts":1199691420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as does typeof(document.documentElement.id = 6)","msgtype":"m.text"},"ts":1199691421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and typeof(document.documentElement.id = {toString: function() { return \"string\"; }}) returns object","msgtype":"m.text"},"ts":1199691480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't reproduce this bug","msgtype":"m.text"},"ts":1199691481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1199691482000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(without e4x)","msgtype":"m.text"},"ts":1199691540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: see comment 3, or try javascript:var re = /x/g; var y; y = re.lastIndex = \"7\"; typeof y","msgtype":"m.text"},"ts":1199691600000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it's only a problem when it chains, I think","msgtype":"m.text"},"ts":1199691601000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"var x; typeof(x = document.documentElement.id = {toString: function() { return \"string\"; }}) still says object","msgtype":"m.text"},"ts":1199691660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but your example does fail","msgtype":"m.text"},"ts":1199691661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1199691662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks for that one","msgtype":"m.text"},"ts":1199692260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"added it","msgtype":"m.text"},"ts":1199692261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=385166 is an HTTP compliance one","msgtype":"m.text"},"ts":1199692380000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"not clear that that's a bug","msgtype":"m.text"},"ts":1199692440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since HTTP doesn't define error handling","msgtype":"m.text"},"ts":1199692441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"find bugs is hard :-/","msgtype":"m.text"},"ts":1199692442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"finding bugs, even","msgtype":"m.text"},"ts":1199692443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or rather, finding usable bugs for an acid test","msgtype":"m.text"},"ts":1199692444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except that treating something with the wrong content-type as text/css is clearly wrong, isn't it?","msgtype":"m.text"},"ts":1199692500000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it's not clear that it has the wrong content-type","msgtype":"m.text"},"ts":1199692501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it may have no content-type","msgtype":"m.text"},"ts":1199692502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"according to http, behaviour is undefined","msgtype":"m.text"},"ts":1199692560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<https://bugzilla.mozilla.org/show_bug.cgi?id=398681>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398682>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398686>, <https://bugzilla.mozilla.org/show_bug.cgi?id=398820> for more possibilities (didn't look beyond the summaries, tho)","msgtype":"m.text"},"ts":1199693820000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"table layout is not very well specified","msgtype":"m.text"},"ts":1199694300000,"senderName":"om_sleep","senderId":"om_sleep@irc"},
{"content":{"body":"and with that I've run through the list of open bugs I'm CCed on","msgtype":"m.text"},"ts":1199694301000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1199694302000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so not likely to be good fodder for an acid test","msgtype":"m.text"},"ts":1199694303000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I also was sorta trying to find bugs where the situation hit is one you might reasonably see in a web page, or where the tested functionality is generally useful","msgtype":"m.text"},"ts":1199694360000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so much of this is edge-case functionality that's not especially useful","msgtype":"m.text"},"ts":1199694361000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"or has easy workarounds","msgtype":"m.text"},"ts":1199694362000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"or similar","msgtype":"m.text"},"ts":1199694420000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"i love when working groups are asked to define error handling and their response is \"defining error handling is hard\" as if that means they shouldn't do it","msgtype":"m.text"},"ts":1199703960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: btw, totally understandable if you don't want to do it, but if you could throw some testing in the document.createElement(badness) test for createElementNS(badness) that'd be awesome and would save us a little effort ;-)","msgtype":"m.text"},"ts":1199704200000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: come again?","msgtype":"m.text"},"ts":1199704860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it would be convenient to have something like test 22 (maybe just more added to it) which tested createElementNS, possibly for things that only it would have problems handling (qname = \"xml:foo\" with wrong ns comes to mind as one, for example)","msgtype":"m.text"},"ts":1199704980000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"since I doubt our impl of that is fully correct either","msgtype":"m.text"},"ts":1199704981000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"oh i see","msgtype":"m.text"},"ts":1199705040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1199705041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure thing","msgtype":"m.text"},"ts":1199705042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bed time now though","msgtype":"m.text"},"ts":1199705043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1199705044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should really do that too","msgtype":"m.emote"},"ts":1199705045000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"zcorpan: xml-stylesheet PIs recorded as a feature request","msgtype":"m.text"},"ts":1199705460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I don't think the |assert(!s.MIN_VALUE, \"attribute is a Number\");| means what you think it means in test 54; you want typeof == \"number\", I think","msgtype":"m.text"},"ts":1199710260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: |s.match| is a function because |typeof s == \"string\"|, but the MIN_VALUE property only exists on the Number ctor","msgtype":"m.text"},"ts":1199710380000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: also, the messages in those two asserts seem to have inverted logic","msgtype":"m.text"},"ts":1199710440000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: ping","msgtype":"m.text"},"ts":1199722260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: regarding plain text form submission and almost arbitrary cross-domain POST: the hazard can be neutralized by servers not accepting text/plain POSTs, right?","msgtype":"m.text"},"ts":1199723760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: I have no MS-DOS 5 installed :(","msgtype":"m.text"},"ts":1199735280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: i thnk you misread them","msgtype":"m.text"},"ts":1199739420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: yes","msgtype":"m.text"},"ts":1199739421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcpong","msgtype":"m.text"},"ts":1199739422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how so?","msgtype":"m.text"},"ts":1199739480000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: the assert message is the error message shown when the assert expression is false","msgtype":"m.text"},"ts":1199739540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"      assert(!s.MIN_VALUE, \"attribute is a Number\");","msgtype":"m.text"},"ts":1199739541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1199739542000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the expression is only false when s.MIN_VALUE is present, thus when it is a Number","msgtype":"m.text"},"ts":1199739543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"prefers messages of the form \"should be\" for unambiguity","msgtype":"m.emote"},"ts":1199739600000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: except that MIN_VALUE isn't on any object in JS but Number (not numbers, not Number instances), so the test is over-permissive -- !s.toFixed would be better","msgtype":"m.text"},"ts":1199739660000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"toPrecision, &c.","msgtype":"m.text"},"ts":1199739720000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it caught the error in the browser is was trying to catch the error in :-)","msgtype":"m.text"},"ts":1199739840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what was \"yes\" in response to?","msgtype":"m.text"},"ts":1199739841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"17:42 <      hsivonen> Hixie: regarding plain text form submission and almost arbitrary cross-domain POST: the hazard can be neutralized by servers not accepting text/plain  POSTs, right?","msgtype":"m.text"},"ts":1199739842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zounds","msgtype":"m.text"},"ts":1199740140000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie: ok. so in that case, the threat of scripted form POST isn't at all the same as the thread of cross-domain XHR POST without access-control pre-flight","msgtype":"m.text"},"ts":1199740440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: few servers if any check the content-type header.","msgtype":"m.text"},"ts":1199740441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/MarkUp/2008/WD-xhtml-access-20080107/","msgtype":"m.text"},"ts":1199741340000,"senderName":"hsivonen","senderId":"hsivonen@irc"}
]