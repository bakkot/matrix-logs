[
{"content":{"body":"sorry, had to leave, I'll get back to this tomorrow :)","msgtype":"m.text"},"ts":1400630792000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Can somebody tell me what the current state of HTML 5 audio is? I really wish to drop Flash finally now. Does HTML 5 audio - whatever it is called now - have support for multi-voice (multiple samples at once), panning and volume?","msgtype":"m.text"},"ts":1400630890000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"And support in all modern browsers?","msgtype":"m.text"},"ts":1400630895000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=25721 \"Does choosing to run a javascript application mean that the user must accept all the choices made by this application?\" ...","msgtype":"m.text"},"ts":1400633593000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"coolbot95: it's called \"Web Audio\", and I believe the answer is yes","msgtype":"m.text"},"ts":1400633683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: bad%20life%20decisions.js","msgtype":"m.text"},"ts":1400634358000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: oh my god, that thread, I feel so bad for Ryan :(","msgtype":"m.text"},"ts":1400634374000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"did someone fall into a trap?","msgtype":"m.text"},"ts":1400634876000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: Hmm...","msgtype":"m.text"},"ts":1400635437000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Hixie: Can you link me to documentation?","msgtype":"m.text"},"ts":1400635462000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"It's such a jungle of different terms.","msgtype":"m.text"},"ts":1400635469000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I think they tried to standardize this multiple times?","msgtype":"m.text"},"ts":1400635483000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I really wanna leave Flash 100% now.","msgtype":"m.text"},"ts":1400635490000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"No more dependency on Flash objects for audio playback.","msgtype":"m.text"},"ts":1400635497000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"coolbot95: this isn't a half-bad place to start: http://www.html5rocks.com/en/tutorials/webaudio/intro","msgtype":"m.text"},"ts":1400636037000,"senderName":"bengl","senderId":"bengl@irc"},
{"content":{"body":"i wonder how much less hated windows APIs would be if they released source for them fifteen years ago","msgtype":"m.text"},"ts":1400636541000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"nothing to do with \"open source\" or changing anything, it's just 100x easier to figure out why their APIs (which are still terrible) are behaving strangely","msgtype":"m.text"},"ts":1400636618000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic: yeah Ryan's gotta be admired for making the effort. He put way more time responding to that guy than I would have bothered to.","msgtype":"m.text"},"ts":1400636638000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"imagines the discussion with the directory about that formal objection... \"So here's how the web works, and over here is how this guy would like for it to work instead. Changing the way the entire web works is a bit out of scope for the crypto spec...\"","msgtype":"m.emote"},"ts":1400636807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Domenic: context?","msgtype":"m.text"},"ts":1400636893000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"zewt: then people would complain even MORE if undocumented aspects the behaviour changed, probably","msgtype":"m.text"},"ts":1400636917000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hober: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25721","msgtype":"m.text"},"ts":1400636927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"formal objections\" seem to be a pretty reliable way to alienate everyone in earshot","msgtype":"m.text"},"ts":1400636934000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: :) yeah pretty much. At least the few people who are actually listening","msgtype":"m.text"},"ts":1400636967000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it should be required to wear formalwear to issue a formal objection","msgtype":"m.text"},"ts":1400636977000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"making a formal objection is pretty much never a good idea","msgtype":"m.text"},"ts":1400637014000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean if it was a known mozilla developer we'd probably stop and think \"maybe he's doing this for a reason\", but invariably it's someone at some hostname nobody's ever heard of","msgtype":"m.text"},"ts":1400637020000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: the requirement to wear a tuxedo might reenforce that principle nicely","msgtype":"m.text"},"ts":1400637052000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: i don't really care how much people complain, it makes my life easier","msgtype":"m.text"},"ts":1400637200000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not that it actually makes things like WPF not nightmarishly broken or anything","msgtype":"m.text"},"ts":1400637224000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"plus I figure the pictures would be funny","msgtype":"m.text"},"ts":1400637227000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: we should add some other requirement like they have to physically nail the objection to somebody's front door","msgtype":"m.text"},"ts":1400637261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"while wearing a tuxedo?","msgtype":"m.text"},"ts":1400637281000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the only platforms I've done UI stuff on in living memory where I could pretty reliably tell what was going on, and avoid spending more time convincing the UI than actually getting stuff done, are the web and ... iOS, oddly","msgtype":"m.text"},"ts":1400637287000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and post pictures on the 'net?","msgtype":"m.text"},"ts":1400637295000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wpf: totally broken. android: totally broken.","msgtype":"m.text"},"ts":1400637295000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SamB: there we go. good brainstorming","msgtype":"m.text"},"ts":1400637296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(basically, the APIs that try to force \"separation of business logic\" crap on you, whether it makes sense or not, tend to be the ones that are nearly unusable)","msgtype":"m.text"},"ts":1400637339000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wait, there's business logic in android apps?","msgtype":"m.text"},"ts":1400637381000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"thought they were all toys","msgtype":"m.emote"},"ts":1400637408000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"android has a lack of toys, too, but that's a separate issue","msgtype":"m.text"},"ts":1400637439000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Huh? The source code for their API? That makes no sense.","msgtype":"m.text"},"ts":1400637442000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"That must mean you want them to release the source code for their OS.","msgtype":"m.text"},"ts":1400637451000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1400637454000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"formal objections are usually just a formal statement of \"Let this hereby be a formal record of the fact that I've failed to make a convincing argument.\"","msgtype":"m.text"},"ts":1400637459000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they release source to chunks of APIs http://referencesource.microsoft.com/#PresentationFramework/src/Framework/System/Windows/Input/KeyboardNavigation.cs","msgtype":"m.text"},"ts":1400637487000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but not the win32 APIs","msgtype":"m.text"},"ts":1400637511000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"But... and API...","msgtype":"m.text"},"ts":1400637511000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Source code... to an API...","msgtype":"m.text"},"ts":1400637518000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"'s head explodes.","msgtype":"m.emote"},"ts":1400637521000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"*an API","msgtype":"m.text"},"ts":1400637527000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"coolbot95: it's a common sloppy usage ...","msgtype":"m.text"},"ts":1400637533000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"sorry, you're not being very interesting, informative or helpful","msgtype":"m.text"},"ts":1400637537000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"coolbot95: insert the term \"implementation\" in there somehow and it will make more sense","msgtype":"m.text"},"ts":1400637557000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"MikeSmith: with the other important detail: \"... and I think I should be able to win the argument anyway because my employer gives money to the W3C\"","msgtype":"m.text"},"ts":1400637571000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400637585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that too","msgtype":"m.text"},"ts":1400637590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ralph: did you write software to generate those it's vs its typo fix patches, or are you just bored and doing that on your own? if it's software I'd like to see it, I'm interested","msgtype":"m.text"},"ts":1400637593000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"MikeSmith: it's probably the operative part, at least as far as the impression people make on me when they do it","msgtype":"m.text"},"ts":1400637627000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: though in the case of that bug, their reporter neither works for the w3c nor has ever contributed in any way to developing new security/privacy-related technologies/standards for the platform","msgtype":"m.text"},"ts":1400637690000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have to use a god damn XMLHttpRequest to load sounds? Why isn't it just like Image()?","msgtype":"m.text"},"ts":1400637710000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"zewt: yeah, that is the impression it makes in most case","msgtype":"m.text"},"ts":1400637717000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"coolbot95: well, god DAMN IT then","msgtype":"m.text"},"ts":1400637755000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: What?","msgtype":"m.text"},"ts":1400637780000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"wouldn't a regular XMLHttpRequest work just fine?","msgtype":"m.text"},"ts":1400637792000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"heretical xhr is cooler than sync xhr, that's for sure","msgtype":"m.text"},"ts":1400637831000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SamB: It makes it look ugly.","msgtype":"m.text"},"ts":1400637843000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I mean why do you need to use a god damn one","msgtype":"m.text"},"ts":1400637857000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"If Image() is done like that, why not Audio()?","msgtype":"m.text"},"ts":1400637859000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"SamB: \"whoosh\"","msgtype":"m.text"},"ts":1400637864000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It's ugly to have to use an XMLHttpRequest.","msgtype":"m.text"},"ts":1400637881000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"if the api were pretty, it wouldn't be successful","msgtype":"m.text"},"ts":1400637929000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"zewt: also the thing is, the director doesn't really care whether a comment is a formal objection or not. he care about the technical merit of the comment regardless. Also I think that spec is in last call right now, and if so, the WG will anyway be obligated to inform the director about any comments that were not resolved to the commenter's satisfication. So there's no different process effect between making a Last Call comment and making a formal obj","msgtype":"m.text"},"ts":1400637941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the only way for it to be successful is for it to be both A) terrible and B) the only option!","msgtype":"m.text"},"ts":1400637950000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"MikeSmith: except the \"I'm a douchebag\" effect","msgtype":"m.text"},"ts":1400637985000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well, that's the main effect we've been talking about ... though that perhaps is a more succinct way of putting it","msgtype":"m.text"},"ts":1400638010000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The linked-to article is from 2011.","msgtype":"m.text"},"ts":1400638040000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"I mean the formal objection will communicate this to the director, too","msgtype":"m.text"},"ts":1400638043000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"And does not mention anything about volume or panning as far as I can see.","msgtype":"m.text"},"ts":1400638048000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Or about multi-voice.","msgtype":"m.text"},"ts":1400638052000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"smiles about caitp's earlier \"what is money if it doesn't flow down the river\"","msgtype":"m.emote"},"ts":1400638061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe a different aspect is \"your arguments are irrelevant because we pay the W3C\", which may be why it feels like an insult","msgtype":"m.text"},"ts":1400638067000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It does mention realtime filters, though, which is unexpected.","msgtype":"m.text"},"ts":1400638069000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"You'd think panning and volume would be basics.","msgtype":"m.text"},"ts":1400638086000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"coolbot95: https://developer.mozilla.org/en-US/docs/Web_Audio_API","msgtype":"m.text"},"ts":1400638086000,"senderName":"bengl","senderId":"bengl@irc"},
{"content":{"body":"And realtime filters would be fancy.","msgtype":"m.text"},"ts":1400638093000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"coolbot95: also https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement","msgtype":"m.text"},"ts":1400638146000,"senderName":"bengl","senderId":"bengl@irc"},
{"content":{"body":"it's a great line mike, you've got to drop it at the appropriate time though, like when people are daring you to spend millions of dollars on something that nobody will ever agree on","msgtype":"m.text"},"ts":1400638205000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400638272000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Why is audio playback such a massive, over-engineered deal?","msgtype":"m.text"},"ts":1400639108000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"Even back in the MS-DOS days, a genius such as John Carmack would still license out the audio playback part.","msgtype":"m.text"},"ts":1400639126000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"He could code a fantastic 3D engine for very slow computers, but not audio playback.","msgtype":"m.text"},"ts":1400639143000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"it's just electronics","msgtype":"m.text"},"ts":1400639156000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1400639165000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"surely you could build a neve mixer in your garage, how hard could it be","msgtype":"m.text"},"ts":1400639193000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1400639205000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"super simple stuff","msgtype":"m.text"},"ts":1400639225000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Have you been smoking crack cocaine?","msgtype":"m.text"},"ts":1400640777000,"senderName":"coolbot95","senderId":"coolbot95@irc"},
{"content":{"body":"oh dear","msgtype":"m.text"},"ts":1400640914000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: The way you handle the \"don't do something until this promise I'm handing you settles\" is by making a method that takes the promise as an arg.","msgtype":"m.text"},"ts":1400641385000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ServiceWorker has a .waitUntil(Promise) method for this.","msgtype":"m.text"},"ts":1400641430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, that's what i assumed. i was getting confused by Domenic and benjamingr :-|","msgtype":"m.text"},"ts":1400644793000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: can waitUntil be called several times?","msgtype":"m.text"},"ts":1400644813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dunno.","msgtype":"m.text"},"ts":1400648399000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: the URL spec doesn't like your data: URLs http://sideshowbarker.net:8888/?doc=http%3A%2F%2Fwhatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2F","msgtype":"m.text"},"ts":1400651082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: i like the rotated labels :-)","msgtype":"m.text"},"ts":1400652257000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: And I like the :target styling, and will try to steal it for CSS.","msgtype":"m.text"},"ts":1400655055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"man is https://github.com/domenic/promises-unwrapping/issues/24#issuecomment-43714664 really the kind of code we can expect to see when promises are everywhere? that's horrifying","msgtype":"m.text"},"ts":1400655097000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just long changes of method calls with no obvious control flow","msgtype":"m.text"},"ts":1400655126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"chains","msgtype":"m.text"},"ts":1400655129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: cool","msgtype":"m.text"},"ts":1400655137000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: any idea which character it is it doesn't like?","msgtype":"m.text"},"ts":1400655178000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's already the code we have today with callback functions (see: \"callback hell\"), except it's worse today due to the rightward march.","msgtype":"m.text"},"ts":1400655240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also terrible error-handling, no free synchronization primitives, etc.","msgtype":"m.text"},"ts":1400655259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't recall every writing code that hard to read","msgtype":"m.text"},"ts":1400655285000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Promise code is as close as we can get to straight-line sync code without new JS facilities.","msgtype":"m.text"},"ts":1400655287000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And new JS facilities *are* coming - the \"await\" keyword lets you write code that looks sync.","msgtype":"m.text"},"ts":1400655305000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah except i'll never be able to use it because it screws up throwing TypeErrors...","msgtype":"m.text"},"ts":1400655331000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the braces I think","msgtype":"m.text"},"ts":1400655351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Actually, \"await fetch()\" I suspect would throw a rejection.","msgtype":"m.text"},"ts":1400655353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: ah","msgtype":"m.text"},"ts":1400655356000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No sure I've heard it.","msgtype":"m.text"},"ts":1400655364000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Rather, \"not sure I've heard of the specific plans for what 'await' does for rejections\".","msgtype":"m.text"},"ts":1400655380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because `try { await fetch(...) } catch(e) {...}` can get CPT-transformed into good code for you, in a way that is super clumsy and terrible when doing straight promises by themselves.","msgtype":"m.text"},"ts":1400655436000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If it makes you feel better, just remember that using raw promises everywhere is a middle step in the evolution of good async handling.","msgtype":"m.text"},"ts":1400655476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And that no matter how bad you think it looks, it looks much worse today.)","msgtype":"m.text"},"ts":1400655489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And if you think you write elegant beautiful callback-hell code, you can do the same thing with promises.)","msgtype":"m.text"},"ts":1400655506000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Basically, check out http://www.xanthir.com/b4P_0. We're still in the Mauvascript stage of async code, with Promises being a pretty band-aid.","msgtype":"m.text"},"ts":1400655611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand why .foo('5') should fail one way when you typoed \"foo\" and a different way when you typoed its argument.","msgtype":"m.text"},"ts":1400655740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: btw I notice my chrome doesn't scroll to the right place when I visit http://url.spec.whatwg.org/#url-code-points (though Firefox does). I wonder if it's a side effect of the spec stylesheet redesign, and the :target thing","msgtype":"m.text"},"ts":1400655750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah i've noticed that too. i think it might be, though no idea why or how","msgtype":"m.text"},"ts":1400655768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems like a chrome bug","msgtype":"m.text"},"ts":1400655785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Good morning, Hixie","msgtype":"m.text"},"ts":1400655828000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah i really should head to bed","msgtype":"m.text"},"ts":1400655891000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I typed a more involved argument into GitHub.","msgtype":"m.text"},"ts":1400656550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"One you have `await` it won't be different (when you use await).","msgtype":"m.text"},"ts":1400656565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right now, and in the future when you're operating on the promise directly, it'll just be a wart from JS not supporting async from the get-go.  Oh well.","msgtype":"m.text"},"ts":1400656604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yay, more warts","msgtype":"m.text"},"ts":1400656697000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's an existing wart, so whatevs.","msgtype":"m.text"},"ts":1400656712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it's funny how quickly promises moved from \"the bright new future\" to \"wart\"","msgtype":"m.text"},"ts":1400656762000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If JS had some different syntax for calling things async, it'd probably work - the language would catch any errors for you and package them into a rejected promise automatically.","msgtype":"m.text"},"ts":1400656781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: Why are you implying they aren't both?","msgtype":"m.text"},"ts":1400656794000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: seems we're gonna try url(\"...\" crossorigin etc); and you have to use quotes. possibly also support image(\"...\" crossorigin etc, <color>);","msgtype":"m.text"},"ts":1400656826000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Promises are the stepping stone towards good async, representing the base notion of an \"async value\".  They're great, and enable tons of great things that'll make lots of different programming concepts better.","msgtype":"m.text"},"ts":1400656827000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Specifically, I'm pretty sure I can adjust Syntax to parse a quoted-string url() as a plain function(), leaving only unquoted urls as a url-token.","msgtype":"m.text"},"ts":1400656876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/function()/function-token/","msgtype":"m.text"},"ts":1400656884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: ^^^ also","msgtype":"m.text"},"ts":1400656917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I’m missing context. Why would you want to do that?","msgtype":"m.text"},"ts":1400657304000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Also, how? It doesn’t sound possible unless you make tokenization context-aware","msgtype":"m.text"},"ts":1400657334000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Is it possible for IDs to end with \"?\" character?","msgtype":"m.text"},"ts":1400657508000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"The spec has one. And a href to it.","msgtype":"m.text"},"ts":1400657592000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: sure, IDs can contain any symbol except for spaces http://mathiasbynens.be/notes/html5-id-class","msgtype":"m.text"},"ts":1400657763000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"SimonSapin: Nope, no context-awareness needed.","msgtype":"m.text"},"ts":1400658014000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: After seeing \"url(\", consume whitespace until the next character is non-whitespace.  If it's a double or single quote, return a function token named \"url\", otherwise switch into the crazytimes unquoted url consuming code.","msgtype":"m.text"},"ts":1400658055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IZh: Note that HTML IDs and the CSS ID selector have different syntaxes.  You could write <div id=\"foo?\">, but to select it would need #foo\\?.","msgtype":"m.text"},"ts":1400658119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: The reasoning is so we can add cors, integrity, etc to urls in CSS without having to invent a function with a new name.","msgtype":"m.text"},"ts":1400658225000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Oh, so <function-token> only for URLs with quoted strings. I thought you meant <function-token name=url content=[<unquoted-url-body>]>","msgtype":"m.text"},"ts":1400658259000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1400658289000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The spec has <a href=#is-this-html5?>...</a> and <h3 id=is-this-html5?>...</h3>.","msgtype":"m.text"},"ts":1400658290000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: Yeah, that works.","msgtype":"m.text"},"ts":1400658312000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(? has a meaning in urls, but only *before* the hash.  Once you're in the hash ? doesn't mean anything special.)","msgtype":"m.text"},"ts":1400658332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: What's the \"rotated labels\" you talked about?","msgtype":"m.text"},"ts":1400658404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sounds reasonable. There is a slight impl bug potential in forgetting to update some of the parser places that expect a url token to also look for a function token with name URL, but it may be worth it","msgtype":"m.text"},"ts":1400658466000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yeah, good point.","msgtype":"m.text"},"ts":1400658483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: If we were allowed to output multiple tokens in a single pass to/from the initial state, we could handle unquoted urls as functions just fine.","msgtype":"m.text"},"ts":1400658739000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, except for bad-url I guess.","msgtype":"m.text"},"ts":1400658748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"Note\" etc in the html spec. you need a browser that supports unprefixed 'transform'","msgtype":"m.text"},"ts":1400658944000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Some bad-url would become parser-level errors","msgtype":"m.text"},"ts":1400658958000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: Ah, kk.","msgtype":"m.text"},"ts":1400659118000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: I guess we could still output an error token in that case with the same effect - it's a token that's guaranteed to never be in any grammar.","msgtype":"m.text"},"ts":1400659203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But anyway, the guarantee that we only ever output one token per pass is a nice quality to preserve.","msgtype":"m.text"},"ts":1400659221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I suppose we could just add a single bit of state to the tokenizer - an \"in unquoted url?\" bool.","msgtype":"m.text"},"ts":1400659262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: half (read 95%) of the time with promises you're not in a sync context but in a promise chain anyway, just like in callbacks often you're inside an emitter callback. A promise rejection that's unhandled causes the chain to stop running (unless it is handled). Throwing synchronously means you create different behavior when you start the chain and when","msgtype":"m.text"},"ts":1400659262000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"you're running it.","msgtype":"m.text"},"ts":1400659263000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Maybe you have a point and we have to wrap the initial API calls with `Promise.try` (in ES6, Promise.resolve().then) calls anyway though, thinking about it.","msgtype":"m.text"},"ts":1400659440000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"I mean, that's certainly *a* way to go about things, to guarantee that any mistakes you make don't cause something crazy.","msgtype":"m.text"},"ts":1400659655000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/285 - you're saying 1. would be the CSS base url, right?","msgtype":"m.text"},"ts":1400661897000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Because I think Alex thinks it's 2.","msgtype":"m.text"},"ts":1400661908000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: (and I think it should be 3, so yey!)","msgtype":"m.text"},"ts":1400661920000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think it should be 3 if you use default()","msgtype":"m.text"},"ts":1400662000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: otherwise the /fallback.html stuff sucks","msgtype":"m.text"},"ts":1400662011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: a good way to think about it is what URL you'd expect in the address bar","msgtype":"m.text"},"ts":1400662071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: This is for a CSS subresource, not a navigate. What do you think the base url would be using the code as it is (using fetch())","msgtype":"m.text"},"ts":1400662104000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think it should be 1","msgtype":"m.text"},"ts":1400662119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I realize this is for CSS, but I don't think we should apply different semantics to navigate necessarily","msgtype":"m.text"},"ts":1400662139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the only thing that's special about navigate is that the invoking algorithm needs to have a say in redirect handling","msgtype":"m.text"},"ts":1400662156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: url(\"...\" ...) sounds nice","msgtype":"m.text"},"ts":1400662258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that makes sense. Just hate the magic of event.default(). What about request.followRedirects, which would be true for stuff coming through event.request?","msgtype":"m.text"},"ts":1400663844000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So fetch(event.request) would return an OpaqueResponse redirect if it hit one","msgtype":"m.text"},"ts":1400663885000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: where is this proposal specified?","msgtype":"m.text"},"ts":1400663935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In IRC just now :D","msgtype":"m.text"},"ts":1400663956000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: what is an <img> element going to do if it gets handed an OpaqueResponse? It'll just fail","msgtype":"m.text"},"ts":1400664003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If the OpaqueResponse is a redirect, doesn't the fetch spec deal with the rest of the redirects?","msgtype":"m.text"},"ts":1400664089000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: (also, images will render OpaqueResponses fine, but they'll taint canvases)","msgtype":"m.text"},"ts":1400664116000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: (not if the OpaqueResponse is a redirect)","msgtype":"m.text"},"ts":1400664145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think the idea was that only an explicit redirect from the service worker would be handled by Fetch","msgtype":"m.text"},"ts":1400664175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: anything else would just be passed back up the stack","msgtype":"m.text"},"ts":1400664185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although I guess I can see arguments both ways... Hmm","msgtype":"m.text"},"ts":1400664223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is an OpaqueResponse redirect not an explicit redirect?","msgtype":"m.text"},"ts":1400664241000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I thought that was how event.default() would work","msgtype":"m.text"},"ts":1400664250000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if event.default() resolves to a redirect, it must be OpaqueResponse for security reasons","msgtype":"m.text"},"ts":1400664273000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: an explicit redirect would be something like new RedirectResponse({status:301, location:...})","msgtype":"m.text"},"ts":1400664489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But isn't exposing that a security no-no?","msgtype":"m.text"},"ts":1400664515000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no, only network-level redirects cannot be exposed","msgtype":"m.text"},"ts":1400664532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: sorry, we would also not expose that one to the API, we would indeed follow it","msgtype":"m.text"},"ts":1400664558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but not because of security","msgtype":"m.text"},"ts":1400664579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what does event.default() resolve to if it hits a redirect?","msgtype":"m.text"},"ts":1400664610000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I thought it would be a redirect response, which would be opaque for security reasons","msgtype":"m.text"},"ts":1400664692000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it depends on the request instance","msgtype":"m.text"},"ts":1400664913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if the manual redirect flag is not set (most cases), it just follows them and hands back a \"flattened\" response","msgtype":"m.text"},"ts":1400664935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But there's a difference between SW doing the flattening and the fetch spec doing the flattening","msgtype":"m.text"},"ts":1400665030000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Fetch does it","msgtype":"m.text"},"ts":1400665041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If you do fetch(url) the response url will always be the original url, despite redirects, right?","msgtype":"m.text"},"ts":1400665063000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the only case where an SW might be able to have another crack at a redirect (and this depends on the context) is when the manual redirect flag is set (navigate) or when the SW returns a redirect it created itself","msgtype":"m.text"},"ts":1400665091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1400665105000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you do fetch(url) the response's url will be the final url","msgtype":"m.text"},"ts":1400665126000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: no different from XHR.responseURL","msgtype":"m.text"},"ts":1400665138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: however, it's not clear the layer above SW (Fetch) cares about that URL","msgtype":"m.text"},"ts":1400665166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: my assumption has been that it does not, because of the /fallback and other cases","msgtype":"m.text"},"ts":1400665189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought we couldn't expose responseURL for security reasons","msgtype":"m.text"},"ts":1400665217000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it might not be exposed in all cases","msgtype":"m.text"},"ts":1400665246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: depends on the type of response","msgtype":"m.text"},"ts":1400665255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(but it's certainly known to the UA)","msgtype":"m.text"},"ts":1400665266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1400665274000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"XHR can always expose it because XHR only does CORS, no tainted stuff","msgtype":"m.text"},"ts":1400665451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: event.default() returns a redirect if it hits one, which gets handed back to the fetch spec, which either hands that to the top level (if manual redirect is set) or follows the redirects without further SW interaction & uses the final url as the base url, right?","msgtype":"m.text"},"ts":1400665453000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(by top level I mean the fetch spec caller, sorry)","msgtype":"m.text"},"ts":1400665498000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"event.default() invokes Fetch with the original request instance and an override to bypass the SW; whatever it gets out of that it hands back to the SW","msgtype":"m.text"},"ts":1400665529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it's very much like fetch() except that it uses the original request instance","msgtype":"m.text"},"ts":1400665589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which also means it modifies the original request instance and therefore response's url and such are different; there's some details to figure out there as obviously the Request object exposed in the API cannot change, that needs to be a snapshot)","msgtype":"m.text"},"ts":1400665683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So, going back to the CSS example, how does the response from respondWith(event.default()) end up with a difference base url than respondWith(fetch(event.request))?","msgtype":"m.text"},"ts":1400665793000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wish we had gone through this more at the F2F, I tried to push for it but everyone else seemed to think it was somehow clear...","msgtype":"m.text"},"ts":1400665800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks for going through it now though. Happy to jump on VC if you think it'd be easier","msgtype":"m.text"},"ts":1400665837000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: fetch() creates a new (you could think of it as nested) instance of the request","msgtype":"m.text"},"ts":1400665841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think it matters what fetch() does, as the base url is set in the fetch spec, once it gets a response from SW","msgtype":"m.text"},"ts":1400665913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: As far as I can tell, the fetch spec gets the response from SW, and sets its response url (for base purposes) to request.url","msgtype":"m.text"},"ts":1400665948000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: That's how the example on https://github.com/slightlyoff/ServiceWorker/issues/285 becomes 1.","msgtype":"m.text"},"ts":1400666032000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Fetch gets a Request R1, opens SW, SW initaties a *new* Fetch with R2 using fetch() and gets back a response, hands that back to R1 (R1 never saw it's url field change so sets that on the response)","msgtype":"m.text"},"ts":1400666047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: default() however keeps using R1","msgtype":"m.text"},"ts":1400666069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ohhh ok *thinks*","msgtype":"m.text"},"ts":1400666155000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is still trying to go through the IRC backlog","msgtype":"m.emote"},"ts":1400666275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sorry, I realise I'm not helping","msgtype":"m.text"},"ts":1400666304000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I thought the fetch spec would open SW before step 7 of http://fetch.spec.whatwg.org/#concept-http-fetch, but the response would still hit step 10 that deals with redirects & 304","msgtype":"m.text"},"ts":1400666556000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: heh, it's just very long today, that's all","msgtype":"m.text"},"ts":1400666603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if the SW respondWith a redirect (opaque or not), it'd go through step 10, and follow the redirect but ignoring the SW","msgtype":"m.text"},"ts":1400666685000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, a) it would follow the redirect if the manual redirect flag was unset and b) it would go back into the SW as following a redirect invokes Fetch","msgtype":"m.text"},"ts":1400666745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"I really wish people would just read the spec that Ian wrote and what I wrote about this on es-discuss in the past instead of making random assumptions...\"","msgtype":"m.text"},"ts":1400667532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/domenic/promises-unwrapping/issues/108#issuecomment-43691121","msgtype":"m.text"},"ts":1400667540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let's move everything into ES","msgtype":"m.text"},"ts":1400667901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There will certainly be no issues integrating them with the platform","msgtype":"m.text"},"ts":1400667921000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: go do some homework :p","msgtype":"m.text"},"ts":1400668318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nah, I see what happens to bz's homework","msgtype":"m.text"},"ts":1400668341000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: might want to check the logs regarding script loading","msgtype":"m.text"},"ts":1400673899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: seems <script needs> or some such is still floating around","msgtype":"m.text"},"ts":1400673907000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sobs","msgtype":"m.emote"},"ts":1400673924000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you don't like it you should talk to Hixie","msgtype":"m.text"},"ts":1400674385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: seems like he's investing time in it","msgtype":"m.text"},"ts":1400674395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not really against it, it was just a really painful thread last time around","msgtype":"m.text"},"ts":1400674469000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: Domenic: If we have <link rel=preload> which has a .loaded promise, you can do most of this delayed execution stuff yourself","msgtype":"m.text"},"ts":1400674538000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: Domenic: But for the simple case, I don't think we need anything more complex than <script depends=\".css-selector\">, where the CSS selector points to other script/img/link elements","msgtype":"m.text"},"ts":1400674689000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The dependencies can be calculated at document insertion time, which avoids circular dependencies. Also <script depends=\"script\"> becomes a handy way to do sequential execution","msgtype":"m.text"},"ts":1400674774000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems Hixie added ele.addDependency(promise) to the mix","msgtype":"m.text"},"ts":1400675323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that's where having preload primitives is better. You can do whatever you want then","msgtype":"m.text"},"ts":1400675385000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I thought Object.observe didn't work for DOM?","msgtype":"m.text"},"ts":1400678808000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"re navigator.language shipping thread","msgtype":"m.text"},"ts":1400678836000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"jcgregorio: it has hooks","msgtype":"m.text"},"ts":1400678838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jcgregorio: it doesn't work for everything, e.g. you wouldn't want it for ele.innerHTML, but for things where we already dispatch events it's fine","msgtype":"m.text"},"ts":1400678866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok, and for everything else there's MutationObserver?","msgtype":"m.text"},"ts":1400679048000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"jcgregorio: I guess it's more like MutationObserver is for trees, and O.o is for most other things","msgtype":"m.text"},"ts":1400679330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk (or others), is there a specific status code that should be expected when fetch/xhr send times out?","msgtype":"m.text"},"ts":1400680078000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I'm not seeing one mentioned in fetch, but it's being asked about in a separate channel","msgtype":"m.text"},"ts":1400680131000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: 0","msgtype":"m.text"},"ts":1400680200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where is that actually specified?","msgtype":"m.text"},"ts":1400680208000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: last bit is http://xhr.spec.whatwg.org/#request-error-steps where it sets response to a network error (whose status is 0)","msgtype":"m.text"},"ts":1400680231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One thing that could be improved is that XMLHttpRequest currently does not check the timeout attribute value continuously, seems a bit buggy","msgtype":"m.text"},"ts":1400680326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe it's stated in the specification (and tested in the wpt) that setting the attribute means setting the timeout to a new value relative to the start of the request, if a request had already started","msgtype":"m.text"},"ts":1400680632000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"which should mean \"dispatch timeout if that time has already elapsed\"","msgtype":"m.text"},"ts":1400680650000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: that's the bug I just mentioned","msgtype":"m.text"},"ts":1400680670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure what you mean then, why would it need to be checked continuously if the behaviour that would happen when checking it, happens when the value changes?","msgtype":"m.text"},"ts":1400680718000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if 50ms is enough accuracy I could just piggyback on the callbacks from Fetch","msgtype":"m.text"},"ts":1400680720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: you might change the value to enlarge the window, but yeah, could be done in multiple ways, patches welcome","msgtype":"m.text"},"ts":1400680769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober: I think people still at Opera like critic too :p","msgtype":"m.text"},"ts":1400680839000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(but actually it generally seems like people who use it a bit don't have too many complaints, which fits my hypothesis that it's basically a good tool, with a learning curve and a slightly aesthetically displeasing frontend)","msgtype":"m.text"},"ts":1400680921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i'm still not sure what you mean, it seems like the instructions are spelled out, they just don't seem to be normative / are expressed sort of like hints","msgtype":"m.text"},"ts":1400680934000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so if there's a bug, it's more that it's not expressed as a MUST or even SHOULD","msgtype":"m.text"},"ts":1400680947000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: there's none of that, everything follows from \"The send(data) method must run these steps:\"","msgtype":"m.text"},"ts":1400681212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://xhr.spec.whatwg.org/#dom-xmlhttprequest-timeout it's more the \"note\" section, it's very awkward to have something like this stated as \"this implies...\"","msgtype":"m.text"},"ts":1400681391000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"fetch doesn't really make any mention of the behaviour dictated by this note, and nor does anywhere else in xhr, as far as I can see","msgtype":"m.text"},"ts":1400681464000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: right, that's why I said the text in the send() section is somewhat buggy","msgtype":"m.text"},"ts":1400681562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, I see what you're getting at","msgtype":"m.text"},"ts":1400681639000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: i introduced a new flag to <img> that is not exposed to JS in https://github.com/ResponsiveImagesCG/picture-element/pull/179 to fix https://code.google.com/p/chromium/issues/detail?id=372971","msgtype":"m.text"},"ts":1400683847000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: but you can get an img with the flag set by doing innerHTML = '<img>' on an element in a document without a browsing context","msgtype":"m.text"},"ts":1400683895000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not sure if this is relevant to the \"implement a browser in JS\" thing or whatever","msgtype":"m.text"},"ts":1400683934000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'm not sure what you're asking me, but \"await a stable state\" was recently factored out","msgtype":"m.text"},"ts":1400683939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ah I see","msgtype":"m.text"},"ts":1400683964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for that bit I recommend filing an issue here: https://github.com/dglazkov/html-as-custom-elements/issues","msgtype":"m.text"},"ts":1400683989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"await a stable state\" is still defined, it's just defined in terms of microtasks","msgtype":"m.text"},"ts":1400684013000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: for removing \"await a stable state\" I suggest looking at how Hixie did that","msgtype":"m.text"},"ts":1400684013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1400684022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1400684050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that should be fine i think. the img move happened after the stable state changes","msgtype":"m.text"},"ts":1400684051000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Sometimes I wish the other XMLHttpRequest editors fixed some bugs","msgtype":"m.text"},"ts":1400684163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok filed https://github.com/dglazkov/html-as-custom-elements/issues/15","msgtype":"m.text"},"ts":1400684297000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.igvita.com/2014/05/20/script-injected-async-scripts-considered-harmful/ - was there any progress on declarative dependencies thing to get ordered execution for <script src async>?","msgtype":"m.text"},"ts":1400684624000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: see discussion from today's logs before we woke up","msgtype":"m.text"},"ts":1400685296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: if XHR provided a way to disable 401 dialogs, what should we call the flag?","msgtype":"m.text"},"ts":1400687005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: disableUserAgentAidedAuthentication","msgtype":"m.text"},"ts":1400687094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"disableAssistedAuthentication","msgtype":"m.text"},"ts":1400687122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: 'await a stable state' is still there, actually, what was factored out is 'provide a stable state'.","msgtype":"m.text"},"ts":1400687134000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"'await a stable state' now just queues a microtask","msgtype":"m.text"},"ts":1400687145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah zcorpan pointed that out, my bad","msgtype":"m.text"},"ts":1400687150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1400687158000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1400687161000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the flag should have something about unauthorized","msgtype":"m.text"},"ts":1400687216000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: this could be another difference between default() and fetch(); whether UA assisted authentication is enabled","msgtype":"m.text"},"ts":1400687232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: disable401Handling","msgtype":"m.text"},"ts":1400687254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400687271000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though, that is pretty clear","msgtype":"m.text"},"ts":1400687280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Unauthorized is hard to spell","msgtype":"m.text"},"ts":1400687281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and I don't think we want to mess with proxy authentication","msgtype":"m.text"},"ts":1400687293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Makes sense","msgtype":"m.text"},"ts":1400687319000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for new APIs I'd really like to avoid popping up auth dialogs","msgtype":"m.text"},"ts":1400687338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Should only be for navigations. Probably top-level at that","msgtype":"m.text"},"ts":1400687384000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug____: can also have disable304Handling at some point","msgtype":"m.text"},"ts":1400687391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: currently pretty much everything does them","msgtype":"m.text"},"ts":1400687411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: might actually be compat problem to remove them","msgtype":"m.text"},"ts":1400687420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I kind of like having the number there","msgtype":"m.text"},"ts":1400687422000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: for things like <img>","msgtype":"m.text"},"ts":1400687426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, actually hit that issue this morning. Interestingly, Chrome doesn't seem to support username:password@ urls on images","msgtype":"m.text"},"ts":1400687474000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"iOS seems to","msgtype":"m.text"},"ts":1400687488000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Didn't test anything else","msgtype":"m.text"},"ts":1400687493000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Had to add an iframe to the page with the username:password@ url, *then* the images would load","msgtype":"m.text"},"ts":1400687521000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Fetch supports both variants, it's up to the API to define whether URL credentials take effect","msgtype":"m.text"},"ts":1400687527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But the iframe made iOS have a phishing panic","msgtype":"m.text"},"ts":1400687533000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug____: ta","msgtype":"m.text"},"ts":1400687596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: constraints seems correct, no?","msgtype":"m.text"},"ts":1400688914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, as the verb? Doesn't sound right to me, but I guess we should ask a native :)","msgtype":"m.text"},"ts":1400693536000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"The XMLHttpRequest standard intentionally constraints the use of HTTP here in line with contemporary implementations.\"","msgtype":"m.text"},"ts":1400693654000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Native speakers, please comment","msgtype":"m.text"},"ts":1400693661000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"should be constrains","msgtype":"m.text"},"ts":1400694371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"a constraint is a noun; constrain is a verb","msgtype":"m.text"},"ts":1400694380000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"in line with contemporary implementations\" seems a bit odd ... somehow","msgtype":"m.text"},"ts":1400694439000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(maybe some more specific explanation of the reasoning would be better?)","msgtype":"m.text"},"ts":1400694560000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Some of the links in spec points to redirecting pages. Should it be corrected to point to \"final\" pages?","msgtype":"m.text"},"ts":1400698469000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"For example, there is a link to http://whatwg.org/html that redirects to http://www.whatwg.org/html that redirects to http://www.whatwg.org/specs/web-apps/current-work/multipage that redirects to http://www.whatwg.org/specs/web-apps/current-work/multipage/","msgtype":"m.text"},"ts":1400698594000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Shouldn't we point the link against real page?","msgtype":"m.text"},"ts":1400698632000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Point to.","msgtype":"m.text"},"ts":1400698646000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IMHO 3 redirects is too much.","msgtype":"m.text"},"ts":1400698746000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"For beautiful url with ability to change real page in the future, I suppose, one redirect is enough.","msgtype":"m.text"},"ts":1400701841000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: you would think it could at least combine the first two ...","msgtype":"m.text"},"ts":1400701901000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well, actually, combining all three redirects into one wouldn't seem all that much to ask ...","msgtype":"m.text"},"ts":1400701950000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"In the spec there are dozen of links that points to redirects of different depth. The 3 is the maximum, but there are lots of 2","msgtype":"m.text"},"ts":1400702068000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: i use the link whatwg.org/html because that's the shortest link and so people might remember it.","msgtype":"m.text"},"ts":1400702216000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: whatwg.org redirects everything to www.whatwg.org so that all cookies so that there's only one canonical domain","msgtype":"m.text"},"ts":1400702249000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thought there were technically some shorter ones (but which are irrelevant since not actually memorable)","msgtype":"m.text"},"ts":1400702257000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"er, s/zcorpan/IZh/","msgtype":"m.text"},"ts":1400702257000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: then .../html does the redirect to .../multipage, since that's what it's a shortcut for","msgtype":"m.text"},"ts":1400702288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: then apache does the redirect to add the /","msgtype":"m.text"},"ts":1400702297000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: we can't add the / at the third step because otherwise if you went to .../html/ you'd end up at .../multipage//","msgtype":"m.text"},"ts":1400702339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1400702348000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"no regexen?","msgtype":"m.text"},"ts":1400702354000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's even better if you go to .../html#foo because then you get a javascript redirect after all the above...","msgtype":"m.text"},"ts":1400702370000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes, I see. But why not shorten the path?","msgtype":"m.text"},"ts":1400702379000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"which path?","msgtype":"m.text"},"ts":1400702384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I mean, why so deep?","msgtype":"m.text"},"ts":1400702405000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"oh, you mean just actually have the spec at /html/ ?","msgtype":"m.text"},"ts":1400702411000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh well there used to be multiple specs and there used to be multiple snapshots","msgtype":"m.text"},"ts":1400702428000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: can't you write two rules, /html redirects to multipage/ and /html/ redirects to multipage/ ?","msgtype":"m.text"},"ts":1400702429000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: maybe, dunno","msgtype":"m.text"},"ts":1400702437000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Why not point html to multipage/ in one step?","msgtype":"m.text"},"ts":1400702443000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"<Hixie> IZh: we can't add the / at the third step because otherwise if you went to .../html/ you'd end up at .../multipage//","msgtype":"m.text"},"ts":1400702459000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: btw should i be moving the <img> bugs you filed to HTML - <img>?","msgtype":"m.text"},"ts":1400702479000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: or are they for me later?","msgtype":"m.text"},"ts":1400702486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sure","msgtype":"m.text"},"ts":1400702487000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1400702489000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: one <img> is for you","msgtype":"m.text"},"ts":1400702501000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=25848","msgtype":"m.text"},"ts":1400702525000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm behind on bugs, been working on e-mail","msgtype":"m.text"},"ts":1400702525000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i think it's ok for you to wait a bit with that bug","msgtype":"m.text"},"ts":1400702588000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: I think it's possible to make 2 redirects: both html and html/ to multipage/","msgtype":"m.text"},"ts":1400702591000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"yeah that's what zcorpan suggested","msgtype":"m.text"},"ts":1400702627000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: k","msgtype":"m.text"},"ts":1400702633000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if you remember rationale for some of the <img> bugs i filed i'd be happy if you could add a comment","msgtype":"m.text"},"ts":1400702730000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1400702741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in other news, i hate moving 7 timezones. it fucks up my sleep","msgtype":"m.text"},"ts":1400702848000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: Good news. Validator that I use did not found any serious errors in the spec. :-)","msgtype":"m.text"},"ts":1400702908000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Hixie: Just some accessibility and some CSS issues.","msgtype":"m.text"},"ts":1400702937000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"what are the claimed acc issues?","msgtype":"m.text"},"ts":1400703024000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: One iframe lacks of \"title\" attribute.","msgtype":"m.text"},"ts":1400703116000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1400703135000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: have you checked out the Pixel one or whatever it's called?","msgtype":"m.text"},"ts":1400703258000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, TabAtkins already suggested that","msgtype":"m.text"},"ts":1400703305000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In the FAQ there are some broken links.","msgtype":"m.text"},"ts":1400703901000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"In \"When will we be able to start using these new features?\" there is a link to http://dev.opera.com/articles/html/","msgtype":"m.text"},"ts":1400703929000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"In \"What are the various versions of the HTML spec?\" there is a broken link to W3C Microdata: http://dev.w3.org/html5/md/","msgtype":"m.text"},"ts":1400704096000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"And at the same place the link to http://www.w3.org/html/wg/drafts/2dcontext/html5_canvas/","msgtype":"m.text"},"ts":1400704157000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"feel free to edit that page","msgtype":"m.text"},"ts":1400704208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me know if you need a login to the wiki","msgtype":"m.text"},"ts":1400704213000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"First of all we need alive links there.","msgtype":"m.text"},"ts":1400704269000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Hixie: There are two links for Microdata: http://www.w3.org/TR/microdata/ and http://www.w3.org/html/wg/drafts/microdata/master/ Which one you prefer?","msgtype":"m.text"},"ts":1400704502000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Latest published or editors draft?","msgtype":"m.text"},"ts":1400704616000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"IZh: i \"prefer\" http://whatwg.org/html#microdata","msgtype":"m.text"},"ts":1400704657000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: well it was an editor's draft before","msgtype":"m.text"},"ts":1400704666000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"if we're talking about what the url to the w3c fork of it should be, then it should be the one that isn't in /TR/","msgtype":"m.text"},"ts":1400704681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I just removed  \"The disabled attribute is ignored if the value of the type attribute is hidden\" from the display attribute on MDN pages. I see that on w3schools, but I didn't see that as \"fact\" in the spec. Am I wrong? Is disabled is not supported on input type hidden? It doesn't submit in my test, but it's odd to think that a myth somehow got started. Was that ever the case?","msgtype":"m.text"},"ts":1400704733000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"estellevw: see the \"bookkeeping details\" in http://www.whatwg.org/specs/web-apps/current-work/#hidden-state-(type=hidden)","msgtype":"m.text"},"ts":1400704783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was disabled on input type hidden ever ignored, or is it ignored in any browsers that anyone knows of?","msgtype":"m.text"},"ts":1400704783000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1400704799000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"oh hm","msgtype":"m.text"},"ts":1400704809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like \"disabled\" always applies maybe?","msgtype":"m.text"},"ts":1400704813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, check http://www.whatwg.org/specs/web-apps/current-work/#attr-fe-disabled","msgtype":"m.text"},"ts":1400704837000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"type=hidden has no relevance to disabled=\"\"","msgtype":"m.text"},"ts":1400704848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, i had read both of those, so decided to remove that sentence from MDN page, but have since seen it mentioned on w3schools and stack overflow, so wanted to confirm","msgtype":"m.text"},"ts":1400704927000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1400704959000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"w3schools is so full of nonsense it's not worth even considering in any capacity regarding whether something is true or not","msgtype":"m.text"},"ts":1400705073000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I recently discovered they're five guys, and have a turnover of more than 3M USD. Not too bad for a scam.","msgtype":"m.text"},"ts":1400705345000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"i've been happy to see MDN starting to take over in my google results","msgtype":"m.text"},"ts":1400705382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is a big fan of MDN","msgtype":"m.emote"},"ts":1400705388000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, that was why i got confused. MDN was wrong. Wasn't sure if W3Schools copied MDN or the other way around","msgtype":"m.text"},"ts":1400705427000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400705433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm sure w3schools didn't copy mdn","msgtype":"m.text"},"ts":1400705440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they probably made it up","msgtype":"m.text"},"ts":1400705448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But MDN doesn't have certifications! How else can I document my skills? http://www.refsnesdata.no/certification/w3certified.asp?id=5204222","msgtype":"m.text"},"ts":1400705473000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I am currently updating the Wufoo form pages, and that will hopefully be very accurate. I am updating MDN as i find new stuff for the Wufoo page.","msgtype":"m.text"},"ts":1400705486000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"wilhelm: haha","msgtype":"m.text"},"ts":1400705490000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"wow, I just don't even: http://www.w3schools.com/cert/default.asp","msgtype":"m.text"},"ts":1400705517000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"no longer haha. now whaaaaa, or however you write a cry. So sad.","msgtype":"m.text"},"ts":1400705583000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"tantek: Yup, that's how the manager of a five-person company can pay himself 1M USD per year.","msgtype":"m.text"},"ts":1400705588000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"from that page: \"Highly Recommended / W3Schools' tutorials are recommended reading in over 100 Universities and High schools all over the world.\" (lists 9 examples of universities)","msgtype":"m.text"},"ts":1400705615000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Ok, so the next time someone asks me about university-based web dev education vs. self-taught web dev hackers, I am going to point them to this. What a disaster.","msgtype":"m.text"},"ts":1400705663000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you laugh, but those kids will be making the snapchats and tinder","msgtype":"m.text"},"ts":1400705749000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"of tomorrow","msgtype":"m.text"},"ts":1400705760000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and their citations seem to check out too (checked 3 out of 9), and they link to specific University pages which link to W3schools","msgtype":"m.text"},"ts":1400705769000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and getting rich off it despite not providing anything of any real value","msgtype":"m.text"},"ts":1400705770000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp - not as bad as finance industry with making up financial \"instruments\" which then make money out of nothing","msgtype":"m.text"},"ts":1400705797000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie: Please make me an account on Wiki.","msgtype":"m.text"},"ts":1400705816000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"so what this tells me is that W3C should issue certificates instead","msgtype":"m.text"},"ts":1400705820000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"as a funding model alternative to membership fees","msgtype":"m.text"},"ts":1400705830000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"lets turn the W3C into a for-profit school like devry","msgtype":"m.text"},"ts":1400705835000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it will be brilliant","msgtype":"m.text"},"ts":1400705840000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"nothing could go wrong","msgtype":"m.text"},"ts":1400705848000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Here's a selection of gullible people paying money for that scam: https://google.com/search?q=site%3Arefsnesdata.no","msgtype":"m.text"},"ts":1400705915000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"you could even get the w3c its own faculty at university of phoenix","msgtype":"m.text"},"ts":1400706028000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"IZh: e-mail address?","msgtype":"m.text"},"ts":1400706042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: izh1979⊙gc","msgtype":"m.text"},"ts":1400706064000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"don","msgtype":"m.text"},"ts":1400706091000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1400706092000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: you want the W3C to be a CA?","msgtype":"m.text"},"ts":1400706166000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: Thank you.","msgtype":"m.text"},"ts":1400706171000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Grr... Even http://www.w3.org/TR/microdata/ contains broken link to latest editor's draft. So there is no known link to it.","msgtype":"m.text"},"ts":1400706436000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"lZh don't bother linking to any W3C microdata resources - W3C has abandoned microdata. The *only* reference is WHATWG microdata.","msgtype":"m.text"},"ts":1400706564000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(boom)","msgtype":"m.text"},"ts":1400706573000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I can't tell if that's even nice","msgtype":"m.text"},"ts":1400706630000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's what i'd like them to do to all the specs","msgtype":"m.text"},"ts":1400706644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that they fork from us)","msgtype":"m.text"},"ts":1400706649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, I mean, is it because they despair of the idea or is it just that they dispair of hijacking the idea","msgtype":"m.text"},"ts":1400706662000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the latter is clearly good","msgtype":"m.text"},"ts":1400706668000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh i'm sure they did it because it competes with RDFa","msgtype":"m.text"},"ts":1400706678000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and since anyone who cares about microdata is just gonna do it in the WHATWG, they no longer had anyone there advocating for it","msgtype":"m.text"},"ts":1400706695000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the RDFa voices could get their fork shut down","msgtype":"m.text"},"ts":1400706702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"speaking of forks, i wonder how the w3c's fork of anne's URL spec that replaces the IETF URL spec is coming along","msgtype":"m.text"},"ts":1400706732000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wakes up to RDFa/Microdata snarkiness.","msgtype":"m.emote"},"ts":1400707241000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"huh, when did Microdata become a NOTE at W3C? Last I heard, it was barreling down the REC track?","msgtype":"m.text"},"ts":1400707275000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"hey, for once, there wasn't actually any snarkiness there :-)","msgtype":"m.text"},"ts":1400707288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1400707292000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"i mean, i have barrels of it i could deploy, but i was holding back :-)","msgtype":"m.text"},"ts":1400707321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"appreciates Hixie's restraint.","msgtype":"m.emote"},"ts":1400707331000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"wonders if he should see if HTML5+RDFa has been NOTE'd as well.","msgtype":"m.emote"},"ts":1400707346000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"'cause I haven't been paying attention to what's been happening in the W3C HTML WG...","msgtype":"m.text"},"ts":1400707365000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1400707375000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"text/html RDFa is happening in the HTMLWG?","msgtype":"m.text"},"ts":1400707390000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought that was an RDF world thing","msgtype":"m.text"},"ts":1400707398000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does seem kind of bad form to not point to WHATWG Microdata spec as \"Latest Editor's Draft\"","msgtype":"m.text"},"ts":1400707415000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1400707435000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's the least of the troubles on that front","msgtype":"m.text"},"ts":1400707435000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"q.v. http://lists.w3.org/Archives/Public/www-archive/2014Apr/0034.html","msgtype":"m.text"},"ts":1400707455000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"remembers reading that missive... I remember agreeing w/ about 65% of it.","msgtype":"m.emote"},"ts":1400707595000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"presumably the consensus parts are in the 35%?","msgtype":"m.text"},"ts":1400707658000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe 20% of it - I'm not a card carrying consensus-is-the-only-way member. Other 15% had to do w/ things like \"Tim has the final say.\" arguments (yes he does, but in practice, doesn't use it)","msgtype":"m.text"},"ts":1400707761000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"well if he doesn't have the final say, that means the relevant wg's chair does","msgtype":"m.text"},"ts":1400707796000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the way the w3c is structured, there's always someone who has the final say.","msgtype":"m.text"},"ts":1400707809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in any case, good email, I've been pointing people at it to try and explain why the WHATWG/W3C dynamic isn't a simple one.","msgtype":"m.text"},"ts":1400707812000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"(and that person is rarely the person who truly has the final say, the implementor)","msgtype":"m.text"},"ts":1400707837000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, but again - I don't think that's a terrible thing to have a tie-breaker... and I agree w/ you wrt. implementors have the final say.","msgtype":"m.text"},"ts":1400707863000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"just think that there needs to be something there to balance the multi-billion dollar multinationals w/ the general public.","msgtype":"m.text"},"ts":1400707892000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"(wrt. privacy rights, centralization, etc.)","msgtype":"m.text"},"ts":1400707903000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"(there's also a less-well-written sequel, if you're pining for me hixie-ranting: http://lists.w3.org/Archives/Public/www-archive/2014Apr/0039.html )","msgtype":"m.text"},"ts":1400707920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, don't want to spam this channel w/ all of that stuff...","msgtype":"m.text"},"ts":1400707939000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"it's ok, nobody else is talking right now :-D","msgtype":"m.text"},"ts":1400707952000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously i don't think it's bad for someone to be tie-breaker","msgtype":"m.text"},"ts":1400707971000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since that's how everything works in the whatwg too :-)","msgtype":"m.text"},"ts":1400707980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my point is mainly that the w3c's claimed process -- consensus -- isn't the actual process","msgtype":"m.text"},"ts":1400707995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the actual process is more subtle and complicated","msgtype":"m.text"},"ts":1400708013000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"m4nu: what would you prefer it be spammed with?","msgtype":"m.text"},"ts":1400708031000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"cat pictures and discussion about how we're going to fix the Web login mess... and pervasive monitoring.","msgtype":"m.text"},"ts":1400708091000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"🐱 ?","msgtype":"m.text"},"ts":1400708144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\\o/ !","msgtype":"m.text"},"ts":1400708154000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"wonders if that showed up right for anyone at all","msgtype":"m.emote"},"ts":1400708155000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"did for me...","msgtype":"m.text"},"ts":1400708166000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1400708168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what irc client?","msgtype":"m.text"},"ts":1400708171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"xchat","msgtype":"m.text"},"ts":1400708175000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"wow","msgtype":"m.text"},"ts":1400708179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"impressive","msgtype":"m.text"},"ts":1400708180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thinks it has more to do w/ how your font server is configured than anything else.","msgtype":"m.emote"},"ts":1400708212000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"ah, could be","msgtype":"m.text"},"ts":1400708224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm on mac here","msgtype":"m.text"},"ts":1400708237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it displayed as a question mark :-)","msgtype":"m.text"},"ts":1400708249000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it did for me, on colloquy","msgtype":"m.text"},"ts":1400708269000,"senderName":"jeffreyatw","senderId":"jeffreyatw@irc"},
{"content":{"body":"Hixie: re: claimed process of consensus - yes, I agree that there are good points to be made that W3C doesn't practice what they preach at times (WHATWG spec forking being an example of that)... and there is a lot of big corporate interest in W3C that makes dumb stuff happen sometimes, and perhaps we'd be better off if that was tamped down a bit.","msgtype":"m.text"},"ts":1400708270000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"anyway - bottom line - it's good that both the WHATWG and W3C exist and do what they do, even though it's a pain in all of our collective asses for a non-trivial chunk of the year.","msgtype":"m.text"},"ts":1400708375000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"afks.","msgtype":"m.emote"},"ts":1400708378000,"senderName":"m4nu","senderId":"m4nu@irc"},
{"content":{"body":"m4nu: which chunk of the year is it non-painful for?","msgtype":"m.text"},"ts":1400708416000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"vacation?","msgtype":"m.text"},"ts":1400708492000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's lots of specs being developed at the w3c that are fine","msgtype":"m.text"},"ts":1400708523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just the way they insist on forking our specs that i find asinine","msgtype":"m.text"},"ts":1400708536000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ACK: 🐱","msgtype":"m.text"},"ts":1400709771000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so about promises...","msgtype":"m.text"},"ts":1400712819000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is it possible to subclass promises so that they include more information?","msgtype":"m.text"},"ts":1400712821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"consider the thing we were talking about yesterday, where a script needs to be told to wait for an image, so the image's .loaded promise is given to the script so it can wait for the promise","msgtype":"m.text"},"ts":1400712824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what if the image itself is also in \"whenneeded\" mode, and so is waiting until someone needs it before it loads?","msgtype":"m.text"},"ts":1400712825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there some way i can subclass the promise to provide a way to signal back to the promise vendor that the image is now needed?","msgtype":"m.text"},"ts":1400712829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: why .ready for document and .loaded for img/link/etc ?","msgtype":"m.text"},"ts":1400713400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1400713487000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"document would have .loaded too","msgtype":"m.text"},"ts":1400713493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and .ready would be for just when it's parsed","msgtype":"m.text"},"ts":1400713502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i suppose script could have a .ready too to mean .execute() would occur immediately if called","msgtype":"m.text"},"ts":1400713520000,"senderName":"Hixie","senderId":"Hixie@irc"}
]