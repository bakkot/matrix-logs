[
{"content":{"body":"I am here: http://maps.google.com/maps?q=26.891408333333334,80.93088833333333","msgtype":"m.text"},"ts":1427947397000,"senderName":"_1_tima","senderId":"_1_tima@irc"},
{"content":{"body":"jgraham: what's an easy way to generate an image with wptserve?","msgtype":"m.text"},"ts":1427959366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I want to control the headers and have something that resembles a valid image in the response","msgtype":"m.text"},"ts":1427959384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: do we have a pattern for that?","msgtype":"m.text"},"ts":1427959391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A .headers file?","msgtype":"m.text"},"ts":1427959405000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Lovely, now people are coming into #servo wanting to implement css-egg","msgtype":"m.text"},"ts":1427961754000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: is the magic of .headers defined somewhere?","msgtype":"m.text"},"ts":1427962684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://wptserve.readthedocs.org/en/latest/handlers.html#file-handlers","msgtype":"m.text"},"ts":1427962828000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Yeah, what Ms2ger said as long as you are happy to serve a static image","msgtype":"m.text"},"ts":1427967407000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you really mean \"generate an image\" you will need to write some python code","msgtype":"m.text"},"ts":1427967429000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah so the problem is that I don't want static headers","msgtype":"m.text"},"ts":1427967546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What do you want them to depend on?","msgtype":"m.text"},"ts":1427967580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: some GET parameters","msgtype":"m.text"},"ts":1427967600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then you need some python code","msgtype":"m.text"},"ts":1427967611000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"def main(request, response):","msgtype":"m.text"},"ts":1427967621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    headers = []","msgtype":"m.text"},"ts":1427967625000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    body = open(\"/path/to/image\").read()","msgtype":"m.text"},"ts":1427967643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    if \"type\" in request.GET:","msgtype":"m.text"},"ts":1427967683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"        headers.append((\"Content-Type\", request.GET[\"type\"]))","msgtype":"m.text"},"ts":1427967708000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thanks, reading the image in seems reasonable","msgtype":"m.text"},"ts":1427967710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    return headers, body","msgtype":"m.text"},"ts":1427967718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: what's the current path for these Python scripts?","msgtype":"m.text"},"ts":1427968206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was just thinking that I'm not sure :)","msgtype":"m.text"},"ts":1427968275000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: __file__ as a global variable should exist and be the absolute path to the the script, so you can use that to resolve paths without caring about the pwd","msgtype":"m.text"},"ts":1427968358000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: can I assume os.path.relpath is supported?","msgtype":"m.text"},"ts":1427968474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: so e.g. os.path.relpath(\"image.gif\", __file__) ?","msgtype":"m.text"},"ts":1427968495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well that wouldn't do what you want","msgtype":"m.text"},"ts":1427968535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would","msgtype":"m.text"},"ts":1427968538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"import os","msgtype":"m.text"},"ts":1427968540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"os.path.join(os.path.dirname(__file__), \"image.gif\")","msgtype":"m.text"},"ts":1427968559000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1427968635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So this is fun. IE11 successfully loads both image/png and image/gif, but only successfully decodes the latter...","msgtype":"m.text"},"ts":1427969134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sort of thought both should work","msgtype":"m.text"},"ts":1427969169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp, zcorpan, yes, I added the [LenientThis] FIXME (we have now switched to TODO(name))","msgtype":"m.text"},"ts":1427969826000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I never saw the point of (name)","msgtype":"m.text"},"ts":1427969887000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: we don't have global image/video/audio resources that would be good to reuse?","msgtype":"m.text"},"ts":1427970448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess video/audio is hard given that browsers suck at having one format that works everywhere","msgtype":"m.text"},"ts":1427970474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: There are someâ€¦ try /common or /media (off the top of my head)","msgtype":"m.text"},"ts":1427970479000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah yeah /media and /images","msgtype":"m.text"},"ts":1427970542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: my tentative location has been http/nosniff","msgtype":"m.text"},"ts":1427970576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: though I'm also considering fetch/nosniff since I might write this down as a subsection of Fetch","msgtype":"m.text"},"ts":1427970598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I don't have a strong opinion about where, and we can always move things later","msgtype":"m.text"},"ts":1427970657000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm leaning towards fetch, but either way","msgtype":"m.text"},"ts":1427970739000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where can I find out whether WebVTT is sniffed or not?","msgtype":"m.text"},"ts":1427978216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I have more questions","msgtype":"m.text"},"ts":1427979060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if I append a <script> as part of an asynchronous test","msgtype":"m.text"},"ts":1427979071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: how do I assert things from there?","msgtype":"m.text"},"ts":1427979077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: also currently I have this rather inelegant code:","msgtype":"m.text"},"ts":1427979117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"script.onerror = t.step_func_done(function() { assert_true(true) })","msgtype":"m.text"},"ts":1427979119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"script.onload = t.step_func_done(function() { assert_true(false) })","msgtype":"m.text"},"ts":1427979124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there something better for that?","msgtype":"m.text"},"ts":1427979130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Listening to clytn talk about hosting events at the moment, I might not be able to give a coherent answer :)","msgtype":"m.text"},"ts":1427979269000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: If you only have one test in a file, you don't need the async_test() stuff at all, you can just use raw asserts()","msgtype":"m.text"},"ts":1427979334000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I have a couple","msgtype":"m.text"},"ts":1427979346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you just want to test the things you said above, there are easier ways","msgtype":"m.text"},"ts":1427979354000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"script.onerror = t.step_func_done(function(){})","msgtype":"m.text"},"ts":1427979374000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"script.onload=t.unreached_func(\"Should not get a load event\")","msgtype":"m.text"},"ts":1427979399000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I want to create a sequence of script elements and for each script element assert its events (either positive or negative) and let them execute something that is also an assert","msgtype":"m.text"},"ts":1427979402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That doesn't seem too hard; what's the problem?","msgtype":"m.text"},"ts":1427979476000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean if you insert a script you can just call t.step_func or whatever from that script","msgtype":"m.text"},"ts":1427979503000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm not sure how to tie what the script executes with the async_test","msgtype":"m.text"},"ts":1427979511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: doesn't that require t to be a global?","msgtype":"m.text"},"ts":1427979522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Ms2ger: help. my brain stopped working trying to figure this out from the spec. what should happen for onclick = 1; alert(onclick); onclick = {}; alert(onclick) ?","msgtype":"m.text"},"ts":1427979564000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I knew this once","msgtype":"m.text"},"ts":1427979607000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's TreatNonObjectAsNull, no?","msgtype":"m.text"},"ts":1427979624000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah. yes it is","msgtype":"m.text"},"ts":1427979644000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So alert(null), alert({})","msgtype":"m.text"},"ts":1427979646000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i totally missed the extended attribute","msgtype":"m.text"},"ts":1427979669000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1427979675000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1427979686000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Well yeah it requires it to be global. If it's not you would have to pass it in somehow. Not sure how else it coulf work?","msgtype":"m.text"},"ts":1427979692000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"globals in tests aren't particularly frowned upon","msgtype":"m.text"},"ts":1427979715000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"you don't expect to be able to run a bunch of them in the same context","msgtype":"m.text"},"ts":1427979728000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that would lead to a lot of weirdness","msgtype":"m.text"},"ts":1427979739000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wonders if we could try that then drink a last beer as we watch the world 'splode","msgtype":"m.emote"},"ts":1427979780000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"jgraham: that also seems racy, would need a unique global per script...","msgtype":"m.text"},"ts":1427980077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't understand what you're trying to do here","msgtype":"m.text"},"ts":1427980188000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you want a test to contain some asserts in script A and some in inserted script B then you need some way to reference that test from B","msgtype":"m.text"},"ts":1427980234000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Making the test a global seems like the easiest way to do that","msgtype":"m.text"},"ts":1427980250000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But please give me an example to look at","msgtype":"m.text"},"ts":1427980269000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm creating the scripts asynchronously","msgtype":"m.text"},"ts":1427980313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, but as long as the test can't end before the script has run, what's the problem?","msgtype":"m.text"},"ts":1427980340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's not necessarily a problem, it's just that I can't use a single variable","msgtype":"m.text"},"ts":1427980487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although actually, a problem might be that I don't know when all scripts will have executed...","msgtype":"m.text"},"ts":1427980861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do you need to know that?","msgtype":"m.text"},"ts":1427980917000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: not sure where else to run .done()","msgtype":"m.text"},"ts":1427980955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One test, multiple scripts?","msgtype":"m.text"},"ts":1427980973000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: the script may or may not execute","msgtype":"m.text"},"ts":1427980996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Depending on what?","msgtype":"m.text"},"ts":1427981055000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nosniff","msgtype":"m.text"},"ts":1427981061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So one way is a pass and the other is a fail?","msgtype":"m.text"},"ts":1427981073000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can load a script in a execute or non-execute way. If I load it in an execute way I want to see that it actually executed and that load is dispatched. If I load it in a non-execute way I want to make sure it did not actually execute and that error is dispatched.","msgtype":"m.text"},"ts":1427981129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you expect the script to not execute and not executing is the pass condition there's pretty much no choice but to use a timer to say \"if it didn't execute in X time, it's a PASS\"","msgtype":"m.text"},"ts":1427981132000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: shouldn't html/dom/interfaces.html have Blob defined somewhere?","msgtype":"m.text"},"ts":1427981150000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Request.clone() is not an adequate sanitize step, right?  we need to use the constructor to sanitize I think","msgtype":"m.text"},"ts":1427983014000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: correct","msgtype":"m.text"},"ts":1427983054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: clone() just creates a clone","msgtype":"m.text"},"ts":1427983075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1427983076000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1427983079000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: the cache sanitize language uses a mix of clone and constructor right now","msgtype":"m.text"},"ts":1427983091000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: interesting","msgtype":"m.text"},"ts":1427983120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: cloning seems bad per definition","msgtype":"m.text"},"ts":1427983140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: e.g. the stream just needs to be moved, not tee'd","msgtype":"m.text"},"ts":1427983155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably worried about draining the body... but Requests with bodies cannot be put into cache any more (because we only accept GET)","msgtype":"m.text"},"ts":1427983158000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: also, I thought that if you did put them in, the body should be drained...","msgtype":"m.text"},"ts":1427983175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think clone is being used for places we don't want to drain... like cache.match()","msgtype":"m.text"},"ts":1427983200000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: shouldn't match just read out the variables?","msgtype":"m.text"},"ts":1427983225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: why would that even clone?","msgtype":"m.text"},"ts":1427983232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should .match() need a sanitize step?","msgtype":"m.text"},"ts":1427983245000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't really see why","msgtype":"m.text"},"ts":1427983252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: or do you only want to sanitize on putting in?","msgtype":"m.text"},"ts":1427983252000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I want sanitize when fetching","msgtype":"m.text"},"ts":1427983261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so just .add() and .addAll()?","msgtype":"m.text"},"ts":1427983275000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ehsan convinced me that putting it in should just put it in","msgtype":"m.text"},"ts":1427983276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1427983293000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"At some point I'll have free time to move Cache into Fetch and make it all nice and consistent...","msgtype":"m.text"},"ts":1427983317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan, I don't think it's strictly necessary","msgtype":"m.text"},"ts":1427983451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok","msgtype":"m.text"},"ts":1427983484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: shouldn't we make fetches in general be reliable wrt cookies though?","msgtype":"m.text"},"ts":1427983607000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: you want Cache in Fetch just because of the dependency?","msgtype":"m.text"},"ts":1427983608000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the other bit of rationale was that Cache is bigger than SW","msgtype":"m.text"},"ts":1427983637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I'm wondering if Cache should just be its own spec at this point","msgtype":"m.text"},"ts":1427983656000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: different idea I had was to create storage.spec.whatwg.org and put it there along with new storage features","msgtype":"m.text"},"ts":1427983665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: are implementers interested?","msgtype":"m.text"},"ts":1427983743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: don't know","msgtype":"m.text"},"ts":1427983765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: not sure I have enough experience with spec stuff to really say which would be better... the OCD person inside me says Cache should be its own spec and depend on Fetch and storage specs","msgtype":"m.text"},"ts":1427983799000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, if setting up a spec had no costs that might be \"better\"","msgtype":"m.text"},"ts":1427983968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that would be my main worry if we wanted to architect something a bit more predictable","msgtype":"m.text"},"ts":1427984001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what \"new storage features\"?","msgtype":"m.text"},"ts":1427984164000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: see whatwgâŠ™wo and e.g. https://wiki.whatwg.org/wiki/Storage","msgtype":"m.text"},"ts":1427984221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, that one","msgtype":"m.text"},"ts":1427984255000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's time to define the storage architecture...","msgtype":"m.text"},"ts":1427984264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And expose some of its primitives yadayada","msgtype":"m.text"},"ts":1427984282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opinions, people who care about readonly attributes on window? https://www.w3.org/Bugs/Public/show_bug.cgi?id=24160 (cssom-view)","msgtype":"m.text"},"ts":1427986842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"don't readonly attributes on window run the risk of breaking old sloppy mode JS?","msgtype":"m.text"},"ts":1427987043000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: in strict mode you get TypeError. non-strict is like no-op setter","msgtype":"m.text"},"ts":1427987125000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, but if people expect the setter to not be no-op, then it's a problem :x","msgtype":"m.text"},"ts":1427987153000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1427987204000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"[Replaceable] solves that","msgtype":"m.text"},"ts":1427987211000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the hacks people come up with to make sense of this platform:>","msgtype":"m.text"},"ts":1427987488000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there is no sense :-)","msgtype":"m.text"},"ts":1427987696000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Like nonsense?","msgtype":"m.text"},"ts":1427987867000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: looking at https://wiki.whatwg.org/wiki/Storage... why put StorageManager on Navigator?","msgtype":"m.text"},"ts":1427988381000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"how does a Worker access it?  (I thought navigator was window only)","msgtype":"m.text"},"ts":1427988404000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: workers have navigator","msgtype":"m.text"},"ts":1427988438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, ok","msgtype":"m.text"},"ts":1427988443000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I like that API for v1... I imagine some people will want finer grained estimates, but doing the whole origin/storage area seems a good start","msgtype":"m.text"},"ts":1427988576000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, if we can get the UX/UI sorted I'm pretty happy with this too","msgtype":"m.text"},"ts":1427988652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: annevk: thoughts on cancellable promises vs cancellable tokens https://gist.github.com/jakearchibald/9a24f3c06f06b9c06a1e","msgtype":"m.text"},"ts":1427990323000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that issue... also, we should probably start using \"cancelable\" (see color and other American spelled terms)","msgtype":"m.text"},"ts":1427995226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: will try to review tomorrow","msgtype":"m.text"},"ts":1427995244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: https://github.com/w3c/web-platform-tests/pull/1715#commitcomment-10548986 given that, it's reviewed, right?","msgtype":"m.text"},"ts":1427995890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: also, did critic disappear?","msgtype":"m.text"},"ts":1427995909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: JakeA: yeah, like Event.prototype.cancelable","msgtype":"m.text"},"ts":1427997095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: left comments","msgtype":"m.text"},"ts":1427998147000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: annevk: ah, sorry, didn't realise the UK thing","msgtype":"m.text"},"ts":1427998309000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's OK, I didn't actually know which was American vs. UK, I just sometimes spell it one way and sometimes another.","msgtype":"m.text"},"ts":1427998336000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's one argument in favor of abort, but then again I'm not looking forward to the html5rocks article on promise abortions","msgtype":"m.text"},"ts":1427998366000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"finally{}.  is not an \"oncancelled\", it is \"always execute when complete\" workflow, unless i am mistaken @ Domenic","msgtype":"m.text"},"ts":1427998371000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: yes, exactly, that was my point.","msgtype":"m.text"},"ts":1427998384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"lol, promise abortions sounds like something that'd spur public debate in the us","msgtype":"m.text"},"ts":1427999652000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Promise cancellation really confuses me :D","msgtype":"m.text"},"ts":1427999673000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Promises are way more complicated than they look, but you can get most stuff done knowing 90%. I think cancellable promises will be the same","msgtype":"m.text"},"ts":1428001111000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although most of the people I meet who make a living from JS don't know how to create one object that extends another","msgtype":"m.text"},"ts":1428001201000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That's why I like the class syntax sugar","msgtype":"m.text"},"ts":1428001219000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Damn object-orientation","msgtype":"m.text"},"ts":1428001325000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Yes. Critic may have got a bit behind which can happen sometimes.","msgtype":"m.text"},"ts":1428003141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sweet delicious finally","msgtype":"m.text"},"ts":1428003314000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"so many memory leaks when you aren't sure if something is done, guarantees are nice. I am still sad that generators don't have a way to invoke finally if they go into the GC","msgtype":"m.text"},"ts":1428003373000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jgraham: anyway, I got review on GitHub so can I merge or someone else?","msgtype":"m.text"},"ts":1428003517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: never mind, Mike already did it :-)","msgtype":"m.text"},"ts":1428003548000,"senderName":"annevk","senderId":"annevk@irc"}
]