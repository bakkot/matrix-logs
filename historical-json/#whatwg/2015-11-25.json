[
{"content":{"body":"Can anyone show me an example of traditional typographical shorthand notation where a slash is used to separate the font size and line height?","msgtype":"m.text"},"ts":1448421219000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"> The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts. â€” http://www.w3.org/TR/css3-fonts/#font-prop","msgtype":"m.text"},"ts":1448421969000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: I don't know that it specifically relates to the optical size / line-height relationship, but rather the means of defining multiple characteristics","msgtype":"m.text"},"ts":1448422365000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"@boogyman, would you know why that syntax was used then, over say, spaces?","msgtype":"m.text"},"ts":1448423163000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I can speculate that since those are the two \"numeric\" characteristics, it was easiest to describe using the non-standard delimiter. eg, the other characteristics don't really overlap at all","msgtype":"m.text"},"ts":1448423348000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"JonathanNeal: I have seen 10/12 etc. notation for size/leading, usually in books on pre-desktop-publishing usage","msgtype":"m.text"},"ts":1448424738000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"\"I presume, then, you have a W3C approved, feature-complete alternative implementation to SMIL with solid reasons for deprecating the specification.\"","msgtype":"m.text"},"ts":1448439509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"I'm simply not confident you have the chops to lead the way in the area of web development standards.\"","msgtype":"m.text"},"ts":1448441548000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"What are you quoting from? :)","msgtype":"m.text"},"ts":1448441949000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"blink-dev <3","msgtype":"m.text"},"ts":1448442135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I hadn't really read past the initial bit of the email, but it's a real gem","msgtype":"m.text"},"ts":1448442194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"SVG is the only really capable image format that offers superb scalability and flexibility inside the XHTML framework.\"","msgtype":"m.text"},"ts":1448442203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"I'm coming to a place where I don't care if Web & CSS animations will walk my dog and cook my breakfast.\"","msgtype":"m.text"},"ts":1448442250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"who?","msgtype":"m.text"},"ts":1448442678000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: I don't know who this person is, it's just the last email in the SMIL deprecation thread on blink-dev","msgtype":"m.text"},"ts":1448443288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't usually care about tone, but wow.","msgtype":"m.text"},"ts":1448446434000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: does fetch talk about 3xx redirects at all?","msgtype":"m.text"},"ts":1448447360000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: yes","msgtype":"m.text"},"ts":1448447366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: https://fetch.spec.whatwg.org/#http-fetch step 5","msgtype":"m.text"},"ts":1448447392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: People like that are an occupational hazard of working on web standards","msgtype":"m.text"},"ts":1448447468000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I don't even comprehend why he would mention that the deprecation is bad because Blink is FOSS.","msgtype":"m.text"},"ts":1448447539000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"As an aside but wholly related, here's a gem in the form of a significant SMIL bug report dating back to 2011 that still hasn't been fixed. Given this and what I consider an ill-considered  deprication announcement I'm simply not confident you have the chops to lead the way in the area of web development standards.\" What.","msgtype":"m.text"},"ts":1448447613000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh MikeSmith had pasted that part, never mind.","msgtype":"m.text"},"ts":1448447622000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk, maybe I'm blind that step 5 already doesn't tell what to do with the referrer, no?","msgtype":"m.text"},"ts":1448449080000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: yeah, we probably need to update that somehow","msgtype":"m.text"},"ts":1448449111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: if redirects affect the referrer","msgtype":"m.text"},"ts":1448449119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: which I guess they do","msgtype":"m.text"},"ts":1448449128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: seems like something that's not well defined at the moment","msgtype":"m.text"},"ts":1448449147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least not in fetch","msgtype":"m.text"},"ts":1448449175000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'm pretty sure that http says what to do on downgrade","msgtype":"m.text"},"ts":1448449183000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"https://tools.ietf.org/html/rfc7231#section-5.5.2 doesn't say much","msgtype":"m.text"},"ts":1448449390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: Logical arguments aren't a strong feature of the \"you're all inept and shouldn't be allowed to do this work\" rants","msgtype":"m.text"},"ts":1448449477000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mkwst: any ideas on how to move https://github.com/whatwg/html/pull/323 forward?","msgtype":"m.text"},"ts":1448449934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's annoying that github issue referencing doesn't work when it's in the PR title","msgtype":"m.text"},"ts":1448455310000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If only that was the only annoying thing.","msgtype":"m.text"},"ts":1448456217000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"amen","msgtype":"m.text"},"ts":1448456333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, ship it and see what explodes?","msgtype":"m.text"},"ts":1448456791000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: :-)","msgtype":"m.text"},"ts":1448456807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: try shipping something where A can only navigate B if A is B","msgtype":"m.text"},"ts":1448456850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: is it known that files with spaces in the file name get 404ed by wpt-serve?","msgtype":"m.text"},"ts":1448457089000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"looks at https://github.com/w3c/wptserve/blob/master/wptserve/handlers.py but can't see anything obvious to fix","msgtype":"m.emote"},"ts":1448458020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: comments on not rejecting invalid values as per https://github.com/whatwg/dom/pull/114#issuecomment-159568709 ?","msgtype":"m.text"},"ts":1448458486000,"senderName":"yoav_","senderId":"yoav_@irc"},
{"content":{"body":"yoav: not really, having a bit of a hard time seeing what an ideal API might be here given the constraints","msgtype":"m.text"},"ts":1448458614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1448458691000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"jgraham: filed https://github.com/w3c/wptserve/issues/69","msgtype":"m.text"},"ts":1448460113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yoav: i suppose all-truthy strings is OK since code is going to care about legacy clients, and strings makes it more self-documenting than mystery falsy values","msgtype":"m.text"},"ts":1448460247000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK, so now the main question is whether invalid values should be rejected?","msgtype":"m.text"},"ts":1448460301000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah. it was Domenic who wanted that, mostly?","msgtype":"m.text"},"ts":1448460398000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I still think it would be nice. If we're not going to do a solution that tries to sync what's actually added with what's supported, then we should just go with relList.supportedValues = [\"foo\", \"bar\", \"baz\", ...] or relList.supports(\"foo\"), and accept that spec authors will have to be careful to synchronize supportedValues with reality.","msgtype":"m.text"},"ts":1448460498000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"relList.supports('foo') would be OK with me. we can write wpt tests that check that the claim matches the actual support","msgtype":"m.text"},"ts":1448460599000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does it return a boolean or an enum?","msgtype":"m.text"},"ts":1448460614000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"boolean. it doesn't have the problem that add() has because supports() doesn't exist today","msgtype":"m.text"},"ts":1448460648000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm wait","msgtype":"m.text"},"ts":1448460677000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there was this other case also","msgtype":"m.text"},"ts":1448460688000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"<a>.relList or other going from n/a to having a set of supported keywords","msgtype":"m.text"},"ts":1448460710000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't really understand how that's ever going to make sense","msgtype":"m.text"},"ts":1448460724000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If it's going to have a set of supported keywords we should do that now","msgtype":"m.text"},"ts":1448460761000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I don't see why it ever would","msgtype":"m.text"},"ts":1448460776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"to check for <a rel=noopener>?","msgtype":"m.text"},"ts":1448460810000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Then we should define the set of supported keywords for <a rel> now","msgtype":"m.text"},"ts":1448460830000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes, we should","msgtype":"m.text"},"ts":1448460836000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Then we can go back to .add :P. (Or supports I guess, whatever.)","msgtype":"m.text"},"ts":1448460858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Next question: does \"supports\" mean \"is specified\" or does it mean \"has some affect on browser processing\"","msgtype":"m.text"},"ts":1448460895000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and does classList.supports() exist at all, and if it does, what does it return?","msgtype":"m.text"},"ts":1448460897000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the latter","msgtype":"m.text"},"ts":1448460913000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"e.g., what does a.relList.supports(\"tag\") return","msgtype":"m.text"},"ts":1448460916000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK so a.relList.supports(\"tag\") is false","msgtype":"m.text"},"ts":1448460922000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think classList.supports(\"anything without a NUL byte\") is true","msgtype":"m.text"},"ts":1448460933000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"right (re \"tag\")","msgtype":"m.text"},"ts":1448460967000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why? (and why \"anything without a NUL byte\"?)","msgtype":"m.text"},"ts":1448460991000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"because the browser now includes the class name you added in the list of things CSS selectors match, and because http://stackoverflow.com/a/6732899/3191","msgtype":"m.text"},"ts":1448461023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although clicking through that StackOverflow answer to the spec I can't find the NUL byte clause","msgtype":"m.text"},"ts":1448461084000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"having a DOM API be affected of css syntax seems a bit weird","msgtype":"m.text"},"ts":1448461137000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you can use class without using css","msgtype":"m.text"},"ts":1448461170000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is it weirder than having a DOM API be affected by the preload spec?","msgtype":"m.text"},"ts":1448461204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i don't know what that is referring to","msgtype":"m.text"},"ts":1448461250000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but maybe besides the point :-)","msgtype":"m.text"},"ts":1448461261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"a.relList.supports(\"preload\") is determined by the fact that the preload spec says \"preload\" rel has normative impact","msgtype":"m.text"},"ts":1448461278000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"despite .supports() being a DOM API","msgtype":"m.text"},"ts":1448461287000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Let me summarize this on the issue tracker... where's the latest place...","msgtype":"m.text"},"ts":1448461339000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok, sure, but classes don't do anything on their own, so they're not \"supported\" in that sense. unless we had classes with default styling, maybe","msgtype":"m.text"},"ts":1448461373000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there isn't a use case for supports() on classList, it just gets the API by accident because it's also a DOMTokenList","msgtype":"m.text"},"ts":1448461529000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe we should have a new interface","msgtype":"m.text"},"ts":1448461539000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: zcorpan: note that two classes means four classes due to DOMSettableTokenList","msgtype":"m.text"},"ts":1448462815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1448462882000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"except we might only need 3","msgtype":"m.text"},"ts":1448462894000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: HTML has been patched for both DOMTokenList and DOMSettableTokenList users to add a concept of supported tokens","msgtype":"m.text"},"ts":1448462971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... why *isn't* classList a DOMSettableTokenList","msgtype":"m.text"},"ts":1448462997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think because className exists","msgtype":"m.text"},"ts":1448463025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why isn't everything a DOMSettableTokenList","msgtype":"m.text"},"ts":1448463030000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Stupid /topic","msgtype":"m.text"},"ts":1448463039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We might be able to do that...","msgtype":"m.text"},"ts":1448463050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes. but there's no DOMSettableTokenList other than <iframe sandbox>, is there?","msgtype":"m.text"},"ts":1448463067000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: maybe not with supported values","msgtype":"m.text"},"ts":1448463100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but there's <a>.ping and <link>.sizes","msgtype":"m.text"},"ts":1448463123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be nice to rationalize everything to [PutForwards=appropriateProperty] DOMSettableTokenList","msgtype":"m.text"},"ts":1448463173000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh ok yeah. and dropzone","msgtype":"m.text"},"ts":1448463174000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Then we could teach new web developers classList and never teach them className","msgtype":"m.text"},"ts":1448463186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess [PutForwards] isn't that great of a behavior to teach","msgtype":"m.text"},"ts":1448463200000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still, the fact that we have so many different patterns for this same idiom is weird","msgtype":"m.text"},"ts":1448463250000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"switching to [PutForwards] and DOMSettableTokenList everywhere seems good","msgtype":"m.text"},"ts":1448463295000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is it only HTML that uses DOMTokenList?","msgtype":"m.text"},"ts":1448463412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes in Blink; where's Gecko's codesearch again? https://code.google.com/p/chromium/codesearch#search/&q=DOMTokenList%20file:%5C.idl&sq=package:chromium&type=cs","msgtype":"m.text"},"ts":1448463558000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wait lol Blink doesn't even use DOMTokenList anywhere","msgtype":"m.text"},"ts":1448463583000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Except as a base class for DOMSettableTokenList","msgtype":"m.text"},"ts":1448463612000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, mxr.mozilla.org","msgtype":"m.text"},"ts":1448463715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh Blink has classList at least nevermind","msgtype":"m.text"},"ts":1448463785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But yeah seems like's yes for Gecko as well https://mxr.mozilla.org/mozilla-central/search?string=DOMTokenList&find=.idl","msgtype":"m.text"},"ts":1448463817000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'll file an issue suggesting this simplification and then we can see what folks say","msgtype":"m.text"},"ts":1448463927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/dom/issues/119","msgtype":"m.text"},"ts":1448464095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/358","msgtype":"m.text"},"ts":1448464207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The HTML Working Group has published a W3C Recommendation of W3C DOM4.","msgtype":"m.text"},"ts":1448466887000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess the good part is that it'll become increasingly obvious what a joke it is given all the changes since the last snapshot.","msgtype":"m.text"},"ts":1448466964000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, changes? Why? The W3C has declared everything in DOM4 is implemented perfectly interoperably!","msgtype":"m.text"},"ts":1448467045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok so can we fix Document vs HTMLDocument already?","msgtype":"m.text"},"ts":1448467061000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Document vs HTMLDocument seems like Attr as a Node... someone needs to try the current spec, nobody but Servo is brave enough to d oso","msgtype":"m.text"},"ts":1448467103000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: can you?","msgtype":"m.text"},"ts":1448467107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: even if we are to admit defeat, defining the appropriate Document object for each context and then what properties each must expose is quite a big undertaking","msgtype":"m.text"},"ts":1448467149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there a new reason to give up?","msgtype":"m.text"},"ts":1448467185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i meant fix as in implement what is specced now","msgtype":"m.text"},"ts":1448467197000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i can't do it because i'm not a browser dev :-]","msgtype":"m.text"},"ts":1448467225000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jsdom is working on it!","msgtype":"m.text"},"ts":1448467325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: become a browser dev!","msgtype":"m.text"},"ts":1448467736000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: can you prod https://github.com/html5lib/html5lib-python/pull/198 such that Critic realises it exists and creates a review for it?","msgtype":"m.text"},"ts":1448468009000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: also opinions welcome on whether it's worthwhile rewriting the history even more","msgtype":"m.text"},"ts":1448468076000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: JakeA: https://twitter.com/phuunet/status/669515142057598976","msgtype":"m.text"},"ts":1448471148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yawns","msgtype":"m.emote"},"ts":1448471169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: http://www.publickey1.jp/blog/15/html5whatwgw3c_tpac_2015.html is quite popular on Twitter, anything noteworthy?","msgtype":"m.text"},"ts":1448471212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*sigh*","msgtype":"m.text"},"ts":1448471374000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Replied","msgtype":"m.text"},"ts":1448471640000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Google translate says that WHATWG is mostly mentioned in their \"future of HTML\" section","msgtype":"m.text"},"ts":1448471742000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://services.w3.org/htmldiff?doc1=http%3A%2F%2Fwww.w3.org%2FTR%2F2015%2FREC-dom-20151119%2F&doc2=https%3A%2F%2Fdom.spec.whatwg.org%2F","msgtype":"m.text"},"ts":1448471814000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: see https://code.google.com/p/chromium/issues/detail?id=324922#c6 for why i dislike quirks mode test cases :-)","msgtype":"m.text"},"ts":1448476215000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Anyone here good at math? I am trying to calculate things like cover and contain in JavaScript.","msgtype":"m.text"},"ts":1448476908000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: did you get a more authoritative opinion to your question about font shorthand notation?","msgtype":"m.text"},"ts":1448477933000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman, yes. You can read the thread here: https://twitter.com/tabatkins/status/669384360903073792","msgtype":"m.text"},"ts":1448477963000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"ah, so I wasn't too far off","msgtype":"m.text"},"ts":1448478056000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"good to know, thanks.","msgtype":"m.text"},"ts":1448478063000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"I used to know how to do the math. Something about getting the aspect ratios, min/max, produce result.","msgtype":"m.text"},"ts":1448478652000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3766 ? (the centering can probably be done in better ways, and maybe the other thing also)","msgtype":"m.text"},"ts":1448480029000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks, Iâ€™ll review that.","msgtype":"m.text"},"ts":1448481179000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"is there some \"process\" to backout spec changes","msgtype":"m.text"},"ts":1448481846000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I mean in those cases when a change was either clearly wrong or controversial, it probably should be backed out sooner than later","msgtype":"m.text"},"ts":1448481881000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"No process, what do you think this is :P. Submit a PR or open an issue requesting an editor does it?","msgtype":"m.text"},"ts":1448481949000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I was kind of hoping some nice tool where one could easily backout changes :)","msgtype":"m.text"},"ts":1448482100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not sure who should have rights to use such tool","msgtype":"m.text"},"ts":1448482108000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(tokenlist.add changes just came to my mind)","msgtype":"m.text"},"ts":1448482172000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, I mean, `git revert` is a pretty good approximation of that tool","msgtype":"m.text"},"ts":1448482205000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: so yeah, I want to html5lib-python#198 asap given it allows us to get up-to-date with tests with no failures","msgtype":"m.text"},"ts":1448482668000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"navigation context\" isn't any real spec thing, right?","msgtype":"m.text"},"ts":1448482683000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"tries to understand web perf wg specs","msgtype":"m.emote"},"ts":1448482699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I've certainly never heard of it!","msgtype":"m.text"},"ts":1448482767000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bah, how does one change github issue title?","msgtype":"m.text"},"ts":1448482794000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"press the edit button to the left of it?","msgtype":"m.text"},"ts":1448482819000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"doesn't work","msgtype":"m.text"},"ts":1448482834000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, wfm","msgtype":"m.text"},"ts":1448482845000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]