[
{"content":{"body":"today’s winner: https://groups.google.com/a/chromium.org/forum/#!msg/chromium-dev/kDq4t93zbpA/KX9aZlbLBwAJ","msgtype":"m.text"},"ts":1480398100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hope he takes in interest in <keygen>","msgtype":"m.text"},"ts":1480398114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"“fake news story about functionality that very much needs to be true”","msgtype":"m.text"},"ts":1480398169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie: tell zcorpan that the problem with the \"Note:\" bug is that we'd need some kind of override in standard.css to not insert the generated content... or we'd need to update all the specs at once.","msgtype":"m.text"},"ts":1480400186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1480400187000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"MikeSmith: isn't that the same guy that got kicked off a bunch of service worker repos?","msgtype":"m.text"},"ts":1480400217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yup","msgtype":"m.text"},"ts":1480400227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"making new friends now","msgtype":"m.text"},"ts":1480400233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wow I scrolled up","msgtype":"m.text"},"ts":1480400239000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"he sent a ... fake intent to implement ...","msgtype":"m.text"},"ts":1480400251000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gotta be a first","msgtype":"m.text"},"ts":1480400296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"breaking new ground every where he goes","msgtype":"m.text"},"ts":1480400307000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the Johnny Appleseed of techno-boors","msgtype":"m.text"},"ts":1480400321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news we need a review for BroadcastChannel tests PR https://github.com/w3c/web-platform-tests/pull/4237","msgtype":"m.text"},"ts":1480400443000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if anybody on teh channel is interested in helping the web-platform-tests effort that would be good PR for review as far as reviewing goes","msgtype":"m.text"},"ts":1480400486000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"especially if you are already familiar with BroadcastChannel","msgtype":"m.text"},"ts":1480400519000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"PR by Mek","msgtype":"m.text"},"ts":1480400560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: aren't they already reviewed upstream?","msgtype":"m.text"},"ts":1480402212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1480402221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe so","msgtype":"m.text"},"ts":1480402227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if so that would be great","msgtype":"m.text"},"ts":1480402232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks","msgtype":"m.emote"},"ts":1480402236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"d’oh","msgtype":"m.text"},"ts":1480402254000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1480402255000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"first word in the commit message","msgtype":"m.text"},"ts":1480402261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan, at 2016-11-29 06:16 UTC, Domenic said: the problem with the \"Note:\" bug is that we'd need some kind of override in standard.css to not insert the generated content... or we'd need to update all the specs at once.","msgtype":"m.text"},"ts":1480403874000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"MikeSmith: whoa, makes me wish Mark Pilgrim was still writing","msgtype":"m.text"},"ts":1480405889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: added Oxford Comma to https://wiki.whatwg.org/wiki/Style","msgtype":"m.text"},"ts":1480407010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like the bit \" stalkers, estranged spouses, and marketeers will no longer be allowed to track users covertly\" :)","msgtype":"m.text"},"ts":1480409253000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"Response to link https://groups.google.com/a/chromium.org/forum/#!msg/chromium-dev/kDq4t93zbpA/KX9aZlbLBwAJ","msgtype":"m.text"},"ts":1480409342000,"senderName":"younder","senderId":"younder@irc"},
{"content":{"body":"Domenic: we have bikeshed.css","msgtype":"m.text"},"ts":1480410270000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but if the idea is that generated content shouldn't be used for this, i suppose it shouldn't be used for bikeshedded specs, either","msgtype":"m.text"},"ts":1480410344000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: ^ (see  https://www.w3.org/Bugs/Public/show_bug.cgi?id=28555  )","msgtype":"m.text"},"ts":1480410374000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't know if it causes an actual problem for users though. generated content is exposed in the acc tree in all browsers but IE11 per http://ljwatson.github.io/decks/2016/cssday/ and http://tink.uk/accessibility-support-for-css-generated-content/","msgtype":"m.text"},"ts":1480410555000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(i guess IE <= 11)","msgtype":"m.text"},"ts":1480410574000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: given you resolved the rendering issue for list items, is https://www.w3.org/Bugs/Public/show_bug.cgi?id=27185 WONTFIX?","msgtype":"m.text"},"ts":1480415524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: without impl interest, i'd say so","msgtype":"m.text"},"ts":1480415591000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh wait, I already marked it as such back in March","msgtype":"m.text"},"ts":1480415651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm am I missing something, <img style=\"width:25px; height: 25px\" srcset=\"red-50.png 50w, green-100.png 100w, blue-150.png 150w\" /> always comes out blue?","msgtype":"m.text"},"ts":1480419567000,"senderName":"daleharvey","senderId":"daleharvey@irc"},
{"content":{"body":"daleharvey: sizes defaults to 100vw. and chrome will stick to the largest one it has already loaded in srcset if you later shrink the viewport","msgtype":"m.text"},"ts":1480419679000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Not sure why that means I am not getting the expected src, I am not shrinking the viewport, and I have a size set for each stc so default shouldnt apply?","msgtype":"m.text"},"ts":1480419817000,"senderName":"daleharvey","senderId":"daleharvey@irc"},
{"content":{"body":"*src","msgtype":"m.text"},"ts":1480419821000,"senderName":"daleharvey","senderId":"daleharvey@irc"},
{"content":{"body":"daleharvey: maybe you want sizes=\"25px\"","msgtype":"m.text"},"ts":1480419856000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"daleharvey: the algorithm ignores your style attribute. you need to declare intended size with the sizes attribute","msgtype":"m.text"},"ts":1480419915000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ah, thats great thanks a lot","msgtype":"m.text"},"ts":1480420219000,"senderName":"daleharvey","senderId":"daleharvey@irc"},
{"content":{"body":"daleharvey: np","msgtype":"m.text"},"ts":1480420229000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"good afternoon; i am looking for a place to enquire about the proper way to use eventsource/server-side-event in practice. is this a good place?","msgtype":"m.text"},"ts":1480423438000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"zcorpan: Your document.write test is amazing.","msgtype":"m.text"},"ts":1480423732000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jamesanderson: depends on the question","msgtype":"m.text"},"ts":1480423776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the first one: why do the clients not support setting the actual content media type and how do applications work around that?","msgtype":"m.text"},"ts":1480424030000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"nox: did it reveal some crash bug or so? :-)","msgtype":"m.text"},"ts":1480424050000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the second one: what is the intended way for a server to indicate there is nothing more in the stream. my initial encounter with the client implementation in firefox and safari indicates, if the caller does not close the connection, the requests are repeated indefinitely.","msgtype":"m.text"},"ts":1480424125000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"jamesanderson: why does the client have to set the MIME type?","msgtype":"m.text"},"ts":1480424228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: indicating the stream is done is something you have to implement yourself, e.g., by sending some kind of close frame","msgtype":"m.text"},"ts":1480424531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: you can also use a status code other than 200 to make the subsequent request fail","msgtype":"m.text"},"ts":1480424555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: posted another PR for IDL's dfn tragedy","msgtype":"m.text"},"ts":1480424616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: very small","msgtype":"m.text"},"ts":1480424628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other than 200 sounds mean. i have to think about that, but as relentless as the safari and firefox libraries are, i do not want to leave it to the application.","msgtype":"m.text"},"ts":1480424663000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"the effective content media type is to indicate how the application wants the data encoded. the obvious place would be a media type parameter, but the libraries do not permit that.","msgtype":"m.text"},"ts":1480424764000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"other than two hundred also means that the server would have to retain request history, to known that there is a previous/next request relationship.","msgtype":"m.text"},"ts":1480424819000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"jamesanderson: the future of this is going to be fetch() and using the streams API on the Response object; EventSource is somewhat legacy though better supported at this point","msgtype":"m.text"},"ts":1480424888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: but yeah, you'll have to do some bookkeeping","msgtype":"m.text"},"ts":1480424908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: still not really sure what you mean by \"effective content media type\"","msgtype":"m.text"},"ts":1480424920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my situation is a streaming sparql endpoint. a client customarily specifies how they want the result encoded. for which, something like \"text/event-stream; accept=application/sparql-results+json\" would make sense, despite that the registration permits no parameter.","msgtype":"m.text"},"ts":1480425131000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"jamesanderson: you mean in the Accept header?","msgtype":"m.text"},"ts":1480425249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: but yeah, that's not possible","msgtype":"m.text"},"ts":1480425274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: that kind of stuff is all possible with fetch(), but as I mentioned support for that is worse","msgtype":"m.text"},"ts":1480425290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"exactly. the eventsource code which i have found has the accept header value hard-coded.","msgtype":"m.text"},"ts":1480425295000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"jamesanderson: and you'd have to write your own framing code with fetch(), it's a little lower level","msgtype":"m.text"},"ts":1480425314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the point of eventsource was to avoid that, so that would be a shame.","msgtype":"m.text"},"ts":1480425366000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"It's a tradeoff, you can go with EventSource, but you have to accept it's limited","msgtype":"m.text"},"ts":1480425405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"emiiting an eventsource strem actually does involve some degree of framing, but the client side need not.","msgtype":"m.text"},"ts":1480425409000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"You can go with fetch(), but you have to accept you need to do more work and not all browsers support it well","msgtype":"m.text"},"ts":1480425424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, wrt media type, what do people do? just presume something and hope?","msgtype":"m.text"},"ts":1480425454000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"That is, I think at this point it's basically Chrome that does fetch() and streams, but maybe Edge?","msgtype":"m.text"},"ts":1480425455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: I would expect EventSource to be mostly used for tightly-coupled applications","msgtype":"m.text"},"ts":1480425494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesanderson: where the server and client library are written by the same team and no variance is needed","msgtype":"m.text"},"ts":1480425510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh. cool.","msgtype":"m.text"},"ts":1480425521000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"good to know, what to make of it.","msgtype":"m.text"},"ts":1480425555000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"that is, good for an immediate demo, but do not count on it for general use.","msgtype":"m.text"},"ts":1480425657000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"The future here is clearly fetch(), but you'll have to figure out how to get there I'm afraid","msgtype":"m.text"},"ts":1480425794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thank you for the insights.","msgtype":"m.text"},"ts":1480426465000,"senderName":"jamesanderson","senderId":"jamesanderson@irc"},
{"content":{"body":"smaug: history is the worst","msgtype":"m.text"},"ts":1480426944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: history/navigation","msgtype":"m.text"},"ts":1480426957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tell me something new :)","msgtype":"m.text"},"ts":1480426975000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1480426975000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"smaug: location.hash = \"forward\", does not refresh the page; then history.back() does not either; then refresh the page; then history.forward(), does refresh the page?!","msgtype":"m.text"},"ts":1480427002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: also, in Chrome location.hash = \"forward\" does not count as a new history entry","msgtype":"m.text"},"ts":1480427041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really","msgtype":"m.text"},"ts":1480427051000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1480427052000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"does it count in UI?","msgtype":"m.text"},"ts":1480427059000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: if you do history.back() after that you end up on about:blank","msgtype":"m.text"},"ts":1480427062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not in history API?","msgtype":"m.text"},"ts":1480427065000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: dunno, haven't tested the difference","msgtype":"m.text"},"ts":1480427071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wasn't even testing that","msgtype":"m.text"},"ts":1480427078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am trying to test if same-URL loading deletes forward history","msgtype":"m.text"},"ts":1480427097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then I found myself getting dragged into all kinds of other messes","msgtype":"m.text"},"ts":1480427121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: do we mess around with sessionStorage when traversing in history?","msgtype":"m.text"},"ts":1480427262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: I think we do, since I just created an infinite loop","msgtype":"m.text"},"ts":1480427272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ooh, wait, maybe that's my bad","msgtype":"m.text"},"ts":1480427344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mess with sessionStorage? I don't think so. If we end up re-loading something, that might be different, but session history itself doesn't know anything about sessionStorage","msgtype":"m.text"},"ts":1480427395000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: Chrome does the same through UI","msgtype":"m.text"},"ts":1480427571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: <script>location.hash = \"blah\"</script> then either UI back or history.back() takes you to about:blank","msgtype":"m.text"},"ts":1480427596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but if you have a page with #fragments, and click those, new session history entry is created","msgtype":"m.text"},"ts":1480427673000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"in chrome, as far as I know","msgtype":"m.text"},"ts":1480427681000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"tests","msgtype":"m.emote"},"ts":1480427683000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: yeah","msgtype":"m.text"},"ts":1480427718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like it anyway","msgtype":"m.text"},"ts":1480427727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think seems like it is coming back now?","msgtype":"m.text"},"ts":1480427728000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"botie: stop","msgtype":"m.text"},"ts":1480427742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry...","msgtype":"m.text"},"ts":1480427742000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"smaug: maybe in Chrome they guard this with user gestures or something?","msgtype":"m.text"},"ts":1480427764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how would that be web compatible...","msgtype":"m.text"},"ts":1480427823000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: yeah, it's not true","msgtype":"m.text"},"ts":1480427928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: if you do <a>.click() it also adds an entry","msgtype":"m.text"},"ts":1480427937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: seems like this might just be a bug with location since it's not consistent at all","msgtype":"m.text"},"ts":1480427976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Do you get an exception in Gecko through the rendered view too? I don't.","msgtype":"m.text"},"ts":1480428299000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"JakeA: ping","msgtype":"m.text"},"ts":1480429816000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hey!","msgtype":"m.text"},"ts":1480429825000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: got a minute for a SW spec question?","msgtype":"m.text"},"ts":1480429837000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I'm actually sat at a desk and a laptop for once","msgtype":"m.text"},"ts":1480429857000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wow... ok!","msgtype":"m.text"},"ts":1480429863000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: so we are implementing the \"use no-cache by default on updates\" thing in gecko and a question arose","msgtype":"m.text"},"ts":1480429895000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the issue defines an API like register(scriptURL, { useCache: true })","msgtype":"m.text"},"ts":1480429936000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"the spec also short circuits registration if the scriptURL and scope are the same as an existing registration","msgtype":"m.text"},"ts":1480429961000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"our question is, should that short circuit still happen even if the \"useCache\" value has changed?","msgtype":"m.text"},"ts":1480429979000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or should there be another way for a service worker to change its \"useCache\" value?","msgtype":"m.text"},"ts":1480429990000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ^^^","msgtype":"m.text"},"ts":1480429997000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm inclined to implement without any ability to change useCache to start, but thought I would get your opinion","msgtype":"m.text"},"ts":1480430070000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: changing the value of useCache in .register feels like the right way to update this value","msgtype":"m.text"},"ts":1480430089000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: whether it causes an immediate refetch of the SW (like changing the url does) is another question","msgtype":"m.text"},"ts":1480430122000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so the bypass check should be \"if script URL, scope, and useCache value are identical, then bypass\" ?","msgtype":"m.text"},"ts":1480430145000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah","msgtype":"m.text"},"ts":1480430152000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1480430157000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: it would be easiest if it just acted the same as if a script URL changed","msgtype":"m.text"},"ts":1480430187000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that works for me then","msgtype":"m.text"},"ts":1480430198000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ok, thanks... I'll update the github issue","msgtype":"m.text"},"ts":1480430211000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: btw I've been working on cleaning up the spec. Hopefully making changes from now on will be a lot easier. I'm also taking a break from speaking in 2017 so will in theory have more time to actually, y'know, contribute","msgtype":"m.text"},"ts":1480430254000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"nice!","msgtype":"m.text"},"ts":1480430276000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: oh, looks like I had a couple other questions about this here: https://github.com/w3c/ServiceWorker/issues/893#issuecomment-260442769","msgtype":"m.text"},"ts":1480430630000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"like, should we expose a getter for useCache","msgtype":"m.text"},"ts":1480430641000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ugh, sorry I didn't answer that. I'm still recovering from CDS I think","msgtype":"m.text"},"ts":1480430772000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1480430779000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nox: the too deep counter should be a variable of the HTML parser, like the script nesting level, correct?","msgtype":"m.text"},"ts":1480430794000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: I think I was thinking it was less part of the registration identity (scope/scriptURL) and more something that could changed on the registration (like push subscription)","msgtype":"m.text"},"ts":1480430811000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, it could go either way. But it feels most like the scriptURL to me","msgtype":"m.text"},"ts":1480430859000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so a new version of the SW script should not be able to change it?","msgtype":"m.text"},"ts":1480430893000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it could call navigator.serviceWorker.register() in its install step","msgtype":"m.text"},"ts":1480430952000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: navigator.serviceWorker.register() is exposed in the worker context?","msgtype":"m.text"},"ts":1480430984000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep!","msgtype":"m.text"},"ts":1480431019000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't think we implement that","msgtype":"m.text"},"ts":1480431046000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't think we do either","msgtype":"m.text"},"ts":1480431163000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"huh, so we don't","msgtype":"m.text"},"ts":1480431279000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's specifically added to NavigatorWorker https://w3c.github.io/ServiceWorker/#navigator-serviceworker","msgtype":"m.text"},"ts":1480431302000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"um, WorkerNavigator","msgtype":"m.text"},"ts":1480431312000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: workers are not well implemented for SWs yet... I don't think either browser exposes Worker Client objects either","msgtype":"m.text"},"ts":1480431350000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: and in gecko we don't even expose ServiceWorker in worker context yet... self.registration.active is always null in gecko at the moment","msgtype":"m.text"},"ts":1480431373000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ohhh interesting","msgtype":"m.text"},"ts":1480431387000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"we've had surprisingly few compat issues from that","msgtype":"m.text"},"ts":1480431444000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I had one report where someone wanted to check self.registration.active.scriptURL... but I was able to point them to self.location","msgtype":"m.text"},"ts":1480431609000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: way to go finding so many issues by just looking at origin","msgtype":"m.text"},"ts":1480431649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: s/setter/getter/ in your github comment?","msgtype":"m.text"},"ts":1480431651000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh ffs why do they even let me near computers","msgtype":"m.text"},"ts":1480431679000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: fixed!","msgtype":"m.text"},"ts":1480431683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":".win 22","msgtype":"m.text"},"ts":1480431692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bah","msgtype":"m.text"},"ts":1480431699000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: oh, I didn't realize I could edit your post... (or the button in the UI suggests I can)","msgtype":"m.text"},"ts":1480431717000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: slowly realizing that while what Hixie created is much better than HTML4, we need to be much better than that still","msgtype":"m.text"},"ts":1480431718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and the lack of review on these features is just astonishing","msgtype":"m.text"},"ts":1480431744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: all these other APIs that get added must do pretty poorly","msgtype":"m.text"},"ts":1480431760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah :/","msgtype":"m.text"},"ts":1480431792000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: Probably.","msgtype":"m.text"},"ts":1480431960000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: are you interested in making a PR for the spec? :-)","msgtype":"m.text"},"ts":1480432029000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Not really. :P","msgtype":"m.text"},"ts":1480432039000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Though,","msgtype":"m.text"},"ts":1480432041000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: do you think the spec could use a refactoring getting rid of insertion point?","msgtype":"m.text"},"ts":1480432052000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: no, i think that seems like it would risk introducing regressions and it wouldn't fix any known problem, would it?","msgtype":"m.text"},"ts":1480432148000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Nah.","msgtype":"m.text"},"ts":1480432164000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Didn't try your stuff in Servo yet btw,","msgtype":"m.text"},"ts":1480434256000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: I said \"amazing\" because I wouldn't even have tried to see if later calls get neutered or not.","msgtype":"m.text"},"ts":1480434280000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: ah :-)","msgtype":"m.text"},"ts":1480434362000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: so I have tests that are nearly ready but I need help with making the origin bits generic","msgtype":"m.text"},"ts":1480434484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: is it best to submit a PR or create a branch?","msgtype":"m.text"},"ts":1480434494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"PR, I think","msgtype":"m.text"},"ts":1480435103000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Harder to get lost","msgtype":"m.text"},"ts":1480435107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm going with that","msgtype":"m.text"},"ts":1480435117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since I need to leave soonish too","msgtype":"m.text"},"ts":1480435124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: have you guys had any compat issues from the no-fetch optimizations shipping in chrome 54?","msgtype":"m.text"},"ts":1480435197000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: none that I'm aware of","msgtype":"m.text"},"ts":1480435210000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Spec says \"When an iframe element is removed from a document, the user agent must discard the element's nested browsing context,\"","msgtype":"m.text"},"ts":1480435220000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What should happen to descendants of the discarded BC?","msgtype":"m.text"},"ts":1480435236000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: isn't that defined in \"discard\"?","msgtype":"m.text"},"ts":1480435401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Doh","msgtype":"m.text"},"ts":1480435426000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it's a little vague since according to that a browsing context doesn't have child browsing contexts, it's associated document does, but we do talk about a browsing context's nested browsing contexts now and then","msgtype":"m.text"},"ts":1480435488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: maybe the latter is actually bad practice and we shouldn't do things like that","msgtype":"m.text"},"ts":1480435501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: for https://github.com/whatwg/fetch/pull/419 it'd be good to have a test plan as well","msgtype":"m.text"},"ts":1480435591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: we basically want to have a corresponding test for each WHATWG Standard change","msgtype":"m.text"},"ts":1480435616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"igrigorik: puts the bar a little higher, but the thinking is that interop will come faster too","msgtype":"m.text"},"ts":1480435654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, meet ajeffrey_, who's prompting my questions :)","msgtype":"m.text"},"ts":1480435661000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think we met in London","msgtype":"m.text"},"ts":1480435675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1480435676000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"waves back","msgtype":"m.emote"},"ts":1480435680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we did indeed","msgtype":"m.text"},"ts":1480435684000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"Unfortunately, I gotta go pick up the kid","msgtype":"m.text"},"ts":1480435688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was it something I said? :)","msgtype":"m.text"},"ts":1480435702000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"Nah, it's more that I'm already a little late","msgtype":"m.text"},"ts":1480435734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, let me apologize for the state of the lifecycle affair of all these objects","msgtype":"m.text"},"ts":1480435760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's pretty awful","msgtype":"m.text"},"ts":1480435767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have hopes of improving the situation, but the complexity is somewhat daunting","msgtype":"m.text"},"ts":1480435779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I still wish we could add an explicit fetch event subscription API that gets rid of this weird quirk mode with addEventListener() throwing","msgtype":"m.text"},"ts":1480435961000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Am I right in reading https://html.spec.whatwg.org/multipage/browsers.html#a-browsing-context-is-discarded","msgtype":"m.text"},"ts":1480435979000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"as saying that when a browsing context is discarded, its document is discarded,","msgtype":"m.text"},"ts":1480435999000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"JakeA: if you call registration.sendMeFetchPlease(true) then you can call addEventListener('fetch') async, etc","msgtype":"m.text"},"ts":1480435999000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"even if there are other strong references to it?","msgtype":"m.text"},"ts":1480436010000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"wanderview: *scratches head* what's the benefit?","msgtype":"m.text"},"ts":1480436018000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if you want to work with a sane API you can choose to do so... we only do weird quirk stuff if you aren't explicit about fetch event handling on the registration","msgtype":"m.text"},"ts":1480436084000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: just my christmas wish... but I'm happy not to re-litigate the no-fetch issue","msgtype":"m.text"},"ts":1480436154000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: creating the listeners async is going to fail though","msgtype":"m.text"},"ts":1480436187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"once the service worker is shut down, the listener is gone","msgtype":"m.text"},"ts":1480436197000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess it would be difficult to use without some sort of sync state the SW could use","msgtype":"m.text"},"ts":1480436323000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: although still possible... the page could postMessage('doSpecialFetch') to the SW and then perform a network call... the message event listener could register the fetch event listener","msgtype":"m.text"},"ts":1480436361000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"feels really hacky","msgtype":"m.text"},"ts":1480436404000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1480436417000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: but so does making addEventListener() throw for async registrations... but not throwing for random addeventlistener in script evaluation","msgtype":"m.text"},"ts":1480436455000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: random as in Math.random?","msgtype":"m.text"},"ts":1480436484000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: anyway... it just feels like an explicit API could avoid all the special logic","msgtype":"m.text"},"ts":1480436485000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: yes... Math.random","msgtype":"m.text"},"ts":1480436493000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: or \"only on tuesdays\"","msgtype":"m.text"},"ts":1480436507000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just think of the potential of different fetch event handlers for every day of the week!","msgtype":"m.text"},"ts":1480436525000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1480436533000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I agree there aren't a lot of use cases... but its just a code smell adding these special cases to addEventListener()...","msgtype":"m.text"},"ts":1480436555000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and onfetch=","msgtype":"m.text"},"ts":1480436561000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think it's a big of implementation ugliness but works pretty well for developers","msgtype":"m.text"},"ts":1480436584000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: does chrome let you do setTimeout(_ => self.onfetch = null, 0) ?","msgtype":"m.text"},"ts":1480436607000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: wouldn't an opaque origin mean that the script is not allowed to access anything in the document (e.g. to clone a node)?","msgtype":"m.text"},"ts":1480436898000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: just tried it and it didn't complain","msgtype":"m.text"},"ts":1480437052000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is chrome supposed to be complaining about async fetch event handlers?","msgtype":"m.text"},"ts":1480437155000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I can do setTimeout(_ => addEventListener('fetch'), 0) without warning in chrome","msgtype":"m.text"},"ts":1480437241000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and without throwing","msgtype":"m.text"},"ts":1480437250000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm getting a warning when I try it in the console","msgtype":"m.text"},"ts":1480437285000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but yeah it should be a throw","msgtype":"m.text"},"ts":1480437290000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: maybe its just a warning after install?","msgtype":"m.text"},"ts":1480437310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ah, canary warns, but but chrome stable does not","msgtype":"m.text"},"ts":1480437401000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ahh so it's relatively new","msgtype":"m.text"},"ts":1480437411000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it should really throw though","msgtype":"m.text"},"ts":1480437416000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not throwing might explain why no compat complaints so far","msgtype":"m.text"},"ts":1480437505000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think we will probably implement what chrome implements here to start... to avoid web compat issues","msgtype":"m.text"},"ts":1480437593000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"unless you think throwing might be added soon","msgtype":"m.text"},"ts":1480437613000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: matching Chrome seems fair. I'll create an issue and a test case to get Chrome doing the right thing","msgtype":"m.text"},"ts":1480437660000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: here is the issue for the warning: https://bugs.chromium.org/p/chromium/issues/detail?id=594160","msgtype":"m.text"},"ts":1480437728000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: and do you think we should throw for all async addEventListener() calls or just for async addEventListener('fetch') calls?","msgtype":"m.text"},"ts":1480437788000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: oh, the spec actually says to warn rather than throw","msgtype":"m.text"},"ts":1480437818000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1480437823000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1480437831000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I thought we agreed to change that in the no-fetch issue","msgtype":"m.text"},"ts":1480437842000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhh I think it might be in the dom spec","msgtype":"m.text"},"ts":1480437858000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1480437868000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener","msgtype":"m.text"},"ts":1480437882000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it was added for *all* addEventListener() calls... even things like 'error'... that seems wrong to me","msgtype":"m.text"},"ts":1480437882000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/whatwg/dom/issues/371#issuecomment-261251184","msgtype":"m.text"},"ts":1480437913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan: I don't think so","msgtype":"m.text"},"ts":1480438993000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I don't think any of those checks use the origin of a document object","msgtype":"m.text"},"ts":1480439006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1480439043000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ajeffrey_: yeah, I think that's correct","msgtype":"m.text"},"ts":1480439043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: I'm around for a bit now if you have some questions","msgtype":"m.text"},"ts":1480439058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(no promises on answers though)","msgtype":"m.text"},"ts":1480439068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool","msgtype":"m.text"},"ts":1480439073000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"OK, so the idea is that a document can be discarded even if there is a strong reference to it.","msgtype":"m.text"},"ts":1480439125000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"can it ever be undiscarded?","msgtype":"m.text"},"ts":1480439152000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: I don't think so","msgtype":"m.text"},"ts":1480439190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. if an iframe is detatched from the document tree then reattatched?","msgtype":"m.text"},"ts":1480439197000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"annevk: I think you're right,","msgtype":"m.text"},"ts":1480439204000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"when the iframe is reattatched, it gets a new document object.","msgtype":"m.text"},"ts":1480439229000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: definitely not then, we'd create a new browsing context and document","msgtype":"m.text"},"ts":1480439230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: and since salvageable is set to false I'm pretty sure it won't ever reappear","msgtype":"m.text"},"ts":1480439249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does this happen if the iframe is moved inside the same document?","msgtype":"m.text"},"ts":1480439271000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: yes","msgtype":"m.text"},"ts":1480439276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, and the disposing of documents is synchronous, isn't it?","msgtype":"m.text"},"ts":1480439311000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: <iframe> is one of the reasons we can't really do transactions with the tree","msgtype":"m.text"},"ts":1480439322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: yeah, creation is too","msgtype":"m.text"},"ts":1480439334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the case which is going to cause servo grief is where you have nested iframes","msgtype":"m.text"},"ts":1480439359000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: collection of the underlying objects can be async of course","msgtype":"m.text"},"ts":1480439360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A contains B contains C,","msgtype":"m.text"},"ts":1480439367000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"and A and C are same-origin,","msgtype":"m.text"},"ts":1480439375000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: do you have cross-process <iframe>?","msgtype":"m.text"},"ts":1480439389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: I guess you want to study whatever Chrome is doing","msgtype":"m.text"},"ts":1480439400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then A detatches B, and should immediately be able to observe that C is detatched.","msgtype":"m.text"},"ts":1480439405000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"annevk: cross-thread, yes.","msgtype":"m.text"},"ts":1480439420000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: A can already get sync access to C though","msgtype":"m.text"},"ts":1480439435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the case above, A and C will be in a different thread than B.","msgtype":"m.text"},"ts":1480439444000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"annevk: indeed, that's what's causing the problem,","msgtype":"m.text"},"ts":1480439470000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"we need to provide some way for the script thread for A+C to be synchronously informed that the discard has happened,","msgtype":"m.text"},"ts":1480439506000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: maybe foolip has insights into how Chrome does that","msgtype":"m.text"},"ts":1480439512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even though it's a different thread that takes care of it :/","msgtype":"m.text"},"ts":1480439526000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: but you basically need some kind of proxying and script halting I suppose","msgtype":"m.text"},"ts":1480439527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, we are probably going to have to block the script waiting for the discards to happen,","msgtype":"m.text"},"ts":1480439566000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"we just need to make sure that we don't have a possibility for deadlock because of this.","msgtype":"m.text"},"ts":1480439596000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"Does chrome keep all the iframes for one tab in the same process?","msgtype":"m.text"},"ts":1480439635000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: I think they might at the moment, but they have an OOP-iframe project going on","msgtype":"m.text"},"ts":1480439719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ajeffrey_: http://www.chromium.org/developers/design-documents/oop-iframes","msgtype":"m.text"},"ts":1480439735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, thanks for the pointer!","msgtype":"m.text"},"ts":1480439775000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"goes and reads","msgtype":"m.emote"},"ts":1480439781000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"hmm, no mention of document and browsing context discarding there, I wonder how that'll be handled?","msgtype":"m.text"},"ts":1480439899000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: yeah weird, dunno","msgtype":"m.text"},"ts":1480440397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I can see how to do it in servo. Thanks!","msgtype":"m.text"},"ts":1480440481000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1480440541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: help me out here, is test((t) => { t.add_cleanup() what you mean?","msgtype":"m.text"},"ts":1480440639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1480440662000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: setting to the empty string does nothing :-D but i can try to fix it","msgtype":"m.text"},"ts":1480440923000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: does nothing?","msgtype":"m.text"},"ts":1480440975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ooh, the setter is super weird? hmm","msgtype":"m.text"},"ts":1480440992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1480441000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can it even be fixed then if every set is effectively a new cookie header?","msgtype":"m.text"},"ts":1480441018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there are tests that deal with cookies and clean them up. i'll check","msgtype":"m.text"},"ts":1480441152000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"websockets/cookies/001.html","msgtype":"m.text"},"ts":1480441307000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it uses a random cookie name because tests can be run in parallel in the same browser instance, which would affect the result if it runs 2 cookie tests with the same cookie name","msgtype":"m.text"},"ts":1480441404000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that does seem a lot purer","msgtype":"m.text"},"ts":1480441423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I guess I can try something like that later","msgtype":"m.text"},"ts":1480441437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also there's the template document's cookie, but i don't know if it really needs a cleanup","msgtype":"m.text"},"ts":1480441546000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it probably should though it would only affect non-conforming UAs","msgtype":"m.text"},"ts":1480441598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1480441607000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ajeffrey_, annevk, I know  mostly about fullscreen, but in ABA origin nesting cases, there's code that traverses the frame tree to find all of the local frames (\"browsing contexts\") and do stuff with them in the same task, while doing the things in B in another process.","msgtype":"m.text"},"ts":1480445933000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ajeffrey_: If you need it, I can find someone who knows more about out-of-process iframes for you to interrogate.","msgtype":"m.text"},"ts":1480445959000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: do you keep a cached copy of the frame tree in each process?","msgtype":"m.text"},"ts":1480446003000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: yes, each process has its own view of all frames","msgtype":"m.text"},"ts":1480446025000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"In Blink this is the Frame/LocalFrame/RemoteFrame split","msgtype":"m.text"},"ts":1480446035000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yes, that would work too.","msgtype":"m.text"},"ts":1480446042000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"and some other things are also split into Local/Remote","msgtype":"m.text"},"ts":1480446042000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"we're trying not to duplicate data in servo,","msgtype":"m.text"},"ts":1480446063000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"so there's only one process which keeps track of the whole frame tree.","msgtype":"m.text"},"ts":1480446089000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: but there must at least be a way to synchrously ask some questions about the parent frame? Without that you can't implement the Fullscreen allowfullscreen checks and probably many other things.","msgtype":"m.text"},"ts":1480446130000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"there's an annoying tradeoff of messaging vs cache coherency here :(","msgtype":"m.text"},"ts":1480446135000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"foolip: yes, for things which have to be synchronous across processes, we use messaging.","msgtype":"m.text"},"ts":1480446180000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: is it only ever synchronous in the child-parent direction? otherwise, deadlocks?","msgtype":"m.text"},"ts":1480446216000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: there's a coordinating process (the \"constellation\") that script is allowed to block on,","msgtype":"m.text"},"ts":1480446256000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"otherwise like you say, deadlock.","msgtype":"m.text"},"ts":1480446266000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: ok, will be interesting to see if it's possible to do it everything this way, or if there are web compat contraints that break the whole model","msgtype":"m.text"},"ts":1480449031000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(hope not)","msgtype":"m.text"},"ts":1480449035000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: indeed.","msgtype":"m.text"},"ts":1480449076000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"foolip: it's an interesting challenge adding concurrency to a model that was designed to be single-threaded.","msgtype":"m.text"},"ts":1480449135000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"annevk: in the WebIDL for Window https://html.spec.whatwg.org/multipage/browsers.html#window should parent and top have type WindowProxy? since they can return null?","msgtype":"m.text"},"ts":1480456313000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"ajeffrey_: yes definitely; file an issue?","msgtype":"m.text"},"ts":1480456544000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: will do","msgtype":"m.text"},"ts":1480456569000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"why google.fi wants to use Flash o_O","msgtype":"m.text"},"ts":1480456729000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/issues/2115","msgtype":"m.text"},"ts":1480456815000,"senderName":"ajeffrey_","senderId":"ajeffrey_@irc"},
{"content":{"body":"another fake Intent to Implement https://groups.google.com/forum/#!topic/mozilla.dev.platform/1K_Uq_fx1l4","msgtype":"m.text"},"ts":1480463640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"from another personality","msgtype":"m.text"},"ts":1480463650000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]