[
{"content":{"body":"annevk: regarding your question Friday about observing event listeners (sorry I was out for the day):  Yes I did update the touch events spec but it's pretty handy-wavy: https://w3c.github.io/touch-events/#cancelability","msgtype":"m.text"},"ts":1460942418000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"What we actually implement here is pretty special (been this way for ages - passive doesn't change that really) but the other browsers all seem to have similar similarly special (with different details).  Rather than explicitly walk the event path as you suggest, we compute layer regions as a list of rectangles and update on layout.","msgtype":"m.text"},"ts":1460942500000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"This is because the compositor thread doesn't have access to the DOM.","msgtype":"m.text"},"ts":1460942545000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"For 'passive' the main thing we did was opt-out of this fancy (and somewhat hacky) system and just tracking a single bit indicating that there are passive touch listeners somewhere (to continue to support an additional minor CPU optimization for the case when there are really no listeners at all).","msgtype":"m.text"},"ts":1460942714000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"We could probably define that in terms of some sort of algorithm on the DOM at event dispatch time, but it would look nothing like the implementation and so be tricky to verify.  Perhaps it's more useful to try to define properties of the behavior (and associated web-platform-tests) rather than to try to actually specify an algorithm here?","msgtype":"m.text"},"ts":1460942771000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"And again, my understanding is this isn't just blink - Safari, Edge and Firefox have something similar with the details depending on the design of each browser's threaded compositing system.  So, unlike most of DOM, this is the sort of thing that is probably hard to specify as an algorithm that'll bear any semblance to any mainstream implementation :-)","msgtype":"m.text"},"ts":1460942904000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: passive somewhere? But what about a mix of passive and non-passive?","msgtype":"m.text"},"ts":1460953229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: in any event, passive has been great in unblocking some new event listener primitives","msgtype":"m.text"},"ts":1460956315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: hey, I want to change the topic again","msgtype":"m.text"},"ts":1460962282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: the wiki is acting up, when trying to login I get a cached copy of sorts","msgtype":"m.text"},"ts":1460962583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: \"This is a cached copy of the requested page, and may not be up to date.\", \"Sorry! This site is experiencing technical difficulties.\", at https://wiki.whatwg.org/index.php?title=Special:UserLogin&returnto=Main+Page","msgtype":"m.text"},"ts":1460962612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why did https://github.com/coonsta disappear?","msgtype":"m.text"},"ts":1460965228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: apparently renamed to https://github.com/dominiccooney","msgtype":"m.text"},"ts":1460966539000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/dominiccooney?tab=activity","msgtype":"m.text"},"ts":1460966550000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess github doesnâ€™t automatically redirect in that case","msgtype":"m.text"},"ts":1460966574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ta, that's useful to know","msgtype":"m.text"},"ts":1460966614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: hey, if you're still awake could you have one more look at the slotchange issue?","msgtype":"m.text"},"ts":1460968544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: I'm going to write a patch for the DOM Standard today","msgtype":"m.text"},"ts":1460968562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hayato: thank you!","msgtype":"m.text"},"ts":1460970247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lovely, github has rather horrible bug with lists","msgtype":"m.text"},"ts":1460988684000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://github.com/w3c/webcomponents/issues/184#issuecomment-210474769","msgtype":"m.text"},"ts":1460988694000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"those numbers aren't 1, 2, 3, 4","msgtype":"m.text"},"ts":1460988715000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but 4, 5, 6, 7","msgtype":"m.text"},"ts":1460988718000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, noticed that. It's nice if you edit a long list that you don't have to update the following numbers, but if you actually mean a certain number it's a little annoying.","msgtype":"m.text"},"ts":1460989728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Teehee, I think slotchange is done","msgtype":"m.text"},"ts":1460990304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So tomorrow, shadow event extensions and <slot>, perhaps?","msgtype":"m.text"},"ts":1460990319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And then change all the features one-by-one...","msgtype":"m.text"},"ts":1460990343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fwiw, I think it's possible to implement the decoders in the Encoding Standard with less buffering that you previously said was needed","msgtype":"m.text"},"ts":1460990618000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in encoding-rs, I have the capability to unread only the current byte","msgtype":"m.text"},"ts":1460990641000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in addition to that, I need to have a specialy one-byte \"buffer\" for gb18030 and ISO-2022-JP","msgtype":"m.text"},"ts":1460990681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: but in both cases, the value of the byte is pretty restricted, so manually inlining its handling to the top of the decode function is pretty easy","msgtype":"m.text"},"ts":1460990721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the key insight is that if there's a bogus byte when gb18030 third is already non-zero, gb18030 second goes into the special one-byte buffer to be output as Basic Latin code point and third becomes first, since the range of third and first is the same.","msgtype":"m.text"},"ts":1460990821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jsbell might be interested to hear about that","msgtype":"m.text"},"ts":1460990861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/hsivonen/encoding-rs/blob/master/src/iso_2022_jp.rs#L57 and https://github.com/hsivonen/encoding-rs/blob/master/src/gb18030.rs#L44","msgtype":"m.text"},"ts":1460990898000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: wait, but if you have 3 variables for gb18030 that's more than a two-byte buffer, no?","msgtype":"m.text"},"ts":1460991115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I see what you mean now. You can only unread, not prepend, so you need an alternative strategy for that","msgtype":"m.text"},"ts":1460991502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe we should add the trick to the standard at some point in a note","msgtype":"m.text"},"ts":1460991547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the trick is that \"third\" becomes the new \"first\" and \"second\" becomes a \"pending ASCII\" that's going to get out of the way before \"first\" is checked for non-zero","msgtype":"m.text"},"ts":1460991571000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: could you comment on https://github.com/whatwg/encoding/issues/42?","msgtype":"m.text"},"ts":1460991775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"about the design questions for the canvas hit regions API, I would think Rik Cabanier would be the one who knows","msgtype":"m.text"},"ts":1460994339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought he was the one who specced it","msgtype":"m.text"},"ts":1460994355000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"According to junov Frank was mostly responsible","msgtype":"m.text"},"ts":1460994665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah OK yeah I was just reading more of it","msgtype":"m.text"},"ts":1460994696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess if it was Rik that specced it out originally he just did it based on the requirements that had been given","msgtype":"m.text"},"ts":1460994732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there some way to know which wpt tests are passed by which browsers","msgtype":"m.text"},"ts":1461009707000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, or, jgraham_, can I run wpt tests I have in local mozilla-inbound tree using other browsers?","msgtype":"m.text"},"ts":1461009762000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: You can!","msgtype":"m.text"},"ts":1461011106000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"But it's not really a well cleared path :(","msgtype":"m.text"},"ts":1461011125000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"smaug____: https://developer.mozilla.org/en-US/docs/Mozilla/QA/web-platform-tests#Chrome has instructions for Chrome","msgtype":"m.text"},"ts":1461011158000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Safari doesn't work afaik","msgtype":"m.text"},"ts":1461011167000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"ok, let me try","msgtype":"m.text"},"ts":1461011175000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Edge needs some code that never got reviewed","msgtype":"m.text"},"ts":1461011181000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"pip?","msgtype":"m.text"},"ts":1461011187000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't know what pip is","msgtype":"m.emote"},"ts":1461011194000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"some python thingie I assume","msgtype":"m.text"},"ts":1461011200000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, I have it","msgtype":"m.text"},"ts":1461011215000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham_: is there some way to run just some particular test from github or something like that","msgtype":"m.text"},"ts":1461011645000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Pass the path to the test? Or if you are just running a single test and it's already upstream http://w3c-test.org/tools/runner/index.html","msgtype":"m.text"},"ts":1461011944000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Maybe should add that to the wiki","msgtype":"m.text"},"ts":1461011951000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"jgraham_: I mean without those instructions in MDN","msgtype":"m.text"},"ts":1461012338000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"tries http://w3c-test.org/tools/runner/index.html","msgtype":"m.emote"},"ts":1461012350000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ooh I didn't know about http://w3c-test.org/tools/runner/index.html. I always just browsed to the HTML files directly.","msgtype":"m.text"},"ts":1461012519000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"how does one then see which test failed?","msgtype":"m.text"},"ts":1461012529000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess looking at the json","msgtype":"m.text"},"ts":1461012617000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham_: ok, thanks. Verified there is a buggy test. fix it coming to mozilla tree first","msgtype":"m.text"},"ts":1461012638000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Thanks!","msgtype":"m.text"},"ts":1461012652000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Which part of the DOMTokenList IDL (https://dom.spec.whatwg.org/#domtokenlist) reflects the \"tokenlist[index]\" shown in the next Note block? is that implicitly defined by .item()?","msgtype":"m.text"},"ts":1461018228000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"rodneyrehm: It has \"supported property indices\" defined for it.","msgtype":"m.text"},"ts":1461018267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, second paragraph below the Note box, found it, thanks!","msgtype":"m.text"},"ts":1461018331000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"},
{"content":{"body":"rodneyrehm: And yeah, the \"getter ...\" line actually defines it. (And happens to also define that .item() is a method that does the same thing)","msgtype":"m.text"},"ts":1461018335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should linkify \"getter\" appropriately in Bikeshed.","msgtype":"m.emote"},"ts":1461018394000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes please :)","msgtype":"m.text"},"ts":1461018457000,"senderName":"rodneyrehm","senderId":"rodneyrehm@irc"}
]