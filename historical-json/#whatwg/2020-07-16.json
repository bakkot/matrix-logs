[
{"content":{"body":"Well, agent cluster, no?","msgtype":"m.text"},"ts":1594874271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ideally","msgtype":"m.text"},"ts":1594874280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does the term \"deque\" not describe this?","msgtype":"m.text"},"ts":1594874599000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it does I think, but the prepending isnâ€™t an important feature and could be factored out","msgtype":"m.text"},"ts":1594875718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1594876148000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: would it make sense to change x-ua-compatible to be non-conforming?","msgtype":"m.text"},"ts":1594885550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, I have a web with origin X; I open a new window with a URL from the same origin (via window.open), and yet I receive","msgtype":"m.text"},"ts":1594891721000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":" Permission denied to access property \"href\" on cross-origin object","msgtype":"m.text"},"ts":1594891727000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"when I try to access win.location.href","msgtype":"m.text"},"ts":1594891733000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"what kind of black magic is that?","msgtype":"m.text"},"ts":1594891746000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the popup window's content-type of application/json seems to be a problem","msgtype":"m.text"},"ts":1594892023000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is that a standardized behavior? or a browser bug?","msgtype":"m.text"},"ts":1594892031000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: it's probably not as well-defined as it should be, but that's what I would expect for that case","msgtype":"m.text"},"ts":1594892100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: actually, I think what would be ideal is that you see a closed popup that's still at initial about:blank and the browser swapped the browsing context so the user gets to see the JSON still","msgtype":"m.text"},"ts":1594892146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there a reason for that? why should I *not* access the popup's location in this case?","msgtype":"m.text"},"ts":1594892223000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it fails even if the popup has the access-control-allow-origin:* (not sure why this should be required tho)","msgtype":"m.text"},"ts":1594892299000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: because we only create documents for certain MIME types and we shouldn't expose documents for browser internal viewers","msgtype":"m.text"},"ts":1594892310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. I do not want to access the document, though - I am only interested in the location (oauth popup with secret code in the url)","msgtype":"m.text"},"ts":1594892353000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Then use fetch() or some such","msgtype":"m.text"},"ts":1594892384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is not really suitable for oauth. the user needs a real new window to perform the authorization","msgtype":"m.text"},"ts":1594892441000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(and ends up being redirected to my problematic redirect_uri that happens to contain JSON)","msgtype":"m.text"},"ts":1594892463000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"okay, so I conclude that this is currently not possible. thanks for explanation! (still not sure why accessing the same-origin location for a json document shall be forbidden though)","msgtype":"m.text"},"ts":1594892514000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Well, poking a hole like that requires a bunch of special cases that don't seem worth it","msgtype":"m.text"},"ts":1594892775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just serve HTML","msgtype":"m.text"},"ts":1594892809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done. switched the content based on the Accept: header.","msgtype":"m.text"},"ts":1594892833000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: yes, I think it would make sense to change x-ua-compatible to be non-conforming","msgtype":"m.text"},"ts":1594897290000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: could you move https://github.com/whatwg/fetch/issues/538#issuecomment-659350493 into its own issue pretty please?","msgtype":"m.text"},"ts":1594899299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any chance you could look at https://github.com/whatwg/html/pull/5736 soon?","msgtype":"m.text"},"ts":1594907621000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I was refactoring things and I just noticed that the TextEncoderStream algorithms used a stream of code units, not scalar values, for the cases when the split happened in the middle of a surrogate pair","msgtype":"m.text"},"ts":1594907898000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"and I completely missed this back at https://github.com/whatwg/encoding/pull/196","msgtype":"m.text"},"ts":1594907901000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"whoops","msgtype":"m.text"},"ts":1594907914000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: do you recall some helper site to check what all data browser ends up sending to the server when submitting a form?","msgtype":"m.text"},"ts":1594909512000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I use http://software.hixie.ch/utilities/cgi/test-tools/echo at times","msgtype":"m.text"},"ts":1594910433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where is the best place to talk about css stuff","msgtype":"m.text"},"ts":1594917683000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: https://github.com/w3c/csswg-drafts/issues","msgtype":"m.text"},"ts":1594917693000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1594917700000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Anyone interested in doing some editorial review on XMLHttpRequest? It's a big change, but it does now use all IDL's latest goodies: https://github.com/whatwg/xhr/pull/285","msgtype":"m.text"},"ts":1594918226000,"senderName":"annevk","senderId":"annevk@irc"}
]