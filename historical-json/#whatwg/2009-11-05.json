[
{"content":{"body":"hendry: you there?","msgtype":"m.text"},"ts":1257379200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wanted to ask about the sed expression in your vim validator script","msgtype":"m.text"},"ts":1257379201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what the purpose of it is","msgtype":"m.text"},"ts":1257379202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie, do you know anyone that looked at http://www.w3.org/2005/Incubator/MashSSL/charter ?","msgtype":"m.text"},"ts":1257381000000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hmm, I still don't see how http://sites.google.com/site/guestxhr/maciej-challenge works","msgtype":"m.text"},"ts":1257382200000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hixie: there isn't an allow-plugins for @sandbox?","msgtype":"m.text"},"ts":1257382260000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"oh, hmm","msgtype":"m.text"},"ts":1257382261000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"anyone know the state of the css3 paged media spec?","msgtype":"m.text"},"ts":1257385800000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"are the editors still working on it?","msgtype":"m.text"},"ts":1257385801000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"to some extent, I think","msgtype":"m.text"},"ts":1257385920000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"https://bug-21288-attachments.webkit.org/attachment.cgi?id=42473","msgtype":"m.text"},"ts":1257385921000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=21288","msgtype":"m.text"},"ts":1257385922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Isn't the web lovely, where you have to have a separate domain for every attachment to get any kind of security.","msgtype":"m.text"},"ts":1257386220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1257386280000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk2: thx. we're getting requests to implement parts of it and trying to evaluate which parts make sense to move forward with","msgtype":"m.text"},"ts":1257386700000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"still gets confused which mailing lists, etc to use for what specs.","msgtype":"m.emote"},"ts":1257386880000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan, www-style","msgtype":"m.text"},"ts":1257387060000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: heh. that seems obvious in retrospect","msgtype":"m.text"},"ts":1257387061000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"annevk2: I think CORS should document the \"Don't Be a Deputy\" programming discipline in the Security Considerations section","msgtype":"m.text"},"ts":1257387120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk2: (maybe after people have had a chance to review it to see if it is sound)","msgtype":"m.text"},"ts":1257387121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I agree","msgtype":"m.text"},"ts":1257387180000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"we should have some of your diagrams as well to introduce the problem space","msgtype":"m.text"},"ts":1257387181000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"i don't understand the allow-same-origin directive of the sandbox attribute","msgtype":"m.text"},"ts":1257387300000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"if we allow-same-origin, can't the frame just remove the sandbox attribute altogether?","msgtype":"m.text"},"ts":1257387360000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie: ^^^","msgtype":"m.text"},"ts":1257387361000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1257387420000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"scripting will be disabled","msgtype":"m.text"},"ts":1257387421000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i'm not used to thinking about a world without script.....  ignore me :)","msgtype":"m.text"},"ts":1257387422000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: did you see Mike+Tyler's GuestXHR-based cross-site access proposal, and my comments on it?","msgtype":"m.text"},"ts":1257387480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not yet, but i'll look at it now","msgtype":"m.text"},"ts":1257387481000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: would appreciate sanity check on the latter and analysis on the former","msgtype":"m.text"},"ts":1257387482000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i got excited by the sandbox attribute patch for webkit","msgtype":"m.text"},"ts":1257387483000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"there's a sandbox attribute patch for WebKit?","msgtype":"m.text"},"ts":1257387484000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hot!","msgtype":"m.text"},"ts":1257387485000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"pointer?","msgtype":"m.text"},"ts":1257387540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: https://bugs.webkit.org/show_bug.cgi?id=21288","msgtype":"m.text"},"ts":1257387541000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i don't know the contributor","msgtype":"m.text"},"ts":1257387542000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the patch is quite good","msgtype":"m.text"},"ts":1257387543000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"although some details can be improved","msgtype":"m.text"},"ts":1257387544000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"othermaciej: i like point 6 of your argument","msgtype":"m.text"},"ts":1257388080000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"his argue is basically that by providing developers less rope, we hope they'll build bridges out of steel instead of hanging themselves","msgtype":"m.text"},"ts":1257388140000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: it was more a series of comments than an argument, but thanks","msgtype":"m.text"},"ts":1257388141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"abarth: another thing I thought of - if you have CORS it's easier to make the shared secret be time-limited or use-limited without violating the \"AJAX UI\" requirement, thus further mitigating the risk of revealing it","msgtype":"m.text"},"ts":1257388200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't think guest XHR handles the basic use case of \"almost public\" data, like timely stock ticker information that might be licensed for use only for certain sites","msgtype":"m.text"},"ts":1257388260000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"e.g., if Google Finance lets Acme Finance CORS+XHR for timely stock ticker data by checking the Origin","msgtype":"m.text"},"ts":1257388320000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"in a guest XHR world, ACME needs to either proxy","msgtype":"m.text"},"ts":1257388321000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or talk to Google on the back end","msgtype":"m.text"},"ts":1257388322000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"this scenario is interesting because it doesn't fit our usual notions of confidentiality because","msgtype":"m.text"},"ts":1257388380000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"an attacker can always proxy the information from the main Google Finance site","msgtype":"m.text"},"ts":1257388381000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but that's different than access the data directly from the user's browser","msgtype":"m.text"},"ts":1257388440000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"GuesXHR could handle that by having a pre-arranged shared secret between Google Finance and Acme Finance","msgtype":"m.text"},"ts":1257388500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually I guess not, since to avoid revealing it you need to use server-to-server communication either to actually get the data or to generate a one-time token for the client side","msgtype":"m.text"},"ts":1257388560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1257388561000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you can do it with crypto","msgtype":"m.text"},"ts":1257388562000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"by using the long-lived key to mac a sequence number or something","msgtype":"m.text"},"ts":1257388563000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1257388620000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, let me think about his protocol","msgtype":"m.text"},"ts":1257388621000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"his protocol does have a flaw which I'm not sure can be easily fixed, which is putting the shared secret in a URL","msgtype":"m.text"},"ts":1257388680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in earlier designs, he's used the fragment identifier for that","msgtype":"m.text"},"ts":1257388681000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and cleared the fragment using javascript","msgtype":"m.text"},"ts":1257388682000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I'm not sure that prevents all the ways the secret-bearing URL might get leaked","msgtype":"m.text"},"ts":1257388740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(e.g. browser history sync)","msgtype":"m.text"},"ts":1257388741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://w2spconf.com/2008/papers/s4p2.pdf","msgtype":"m.text"},"ts":1257388742000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the /grant URL in this protocol","msgtype":"m.text"},"ts":1257388800000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"needs to be protected from CSRF","msgtype":"m.text"},"ts":1257388801000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"otherwise the attacker can cause A to grant to whatever B he likes","msgtype":"m.text"},"ts":1257388802000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: the \"got\" URL needs to be protected from CSRF too","msgtype":"m.text"},"ts":1257388860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or an attacker can overwrite A's valid key","msgtype":"m.text"},"ts":1257388861000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and since the \"got\" URL is actually accessed cross-site, that requires an Origin check or a pre-arranged shared secret","msgtype":"m.text"},"ts":1257388862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"er, an attacker can overwrite *B*'s valid key (to A)","msgtype":"m.text"},"ts":1257388920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't understand how to prevent that","msgtype":"m.text"},"ts":1257388921000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"how does B distinguish A from the attacker?","msgtype":"m.text"},"ts":1257388922000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it can distinguish A from an attacker by looking at the Cookie (indicating a valid A user in an actual browser) and the Origin header","msgtype":"m.text"},"ts":1257388980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or by having a pre-arranged shared secret with B that must be included with all \"got\" requests","msgtype":"m.text"},"ts":1257388981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't see how the cookie helps","msgtype":"m.text"},"ts":1257388982000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"B gets B's cookies, not A's","msgtype":"m.text"},"ts":1257388983000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"we're imagining a world without Origin","msgtype":"m.text"},"ts":1257389040000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the user would have to be logged into B for this to work","msgtype":"m.text"},"ts":1257389041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so we can't use that","msgtype":"m.text"},"ts":1257389042000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"right, that's why I dismiss the Origin-based defense","msgtype":"m.text"},"ts":1257389043000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which leaves only a pre-arranged shared secret","msgtype":"m.text"},"ts":1257389044000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so, that means this isn't the whole protocol","msgtype":"m.text"},"ts":1257389045000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"presumably you can't use a long-lived secret","msgtype":"m.text"},"ts":1257389100000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because it bounces to the client","msgtype":"m.text"},"ts":1257389101000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"well, the protocol as specified appears to have a CSRF vulnerability","msgtype":"m.text"},"ts":1257389102000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and the attacker can learn it by being the client in one instance","msgtype":"m.text"},"ts":1257389103000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"he'll say that grant is protected","msgtype":"m.text"},"ts":1257389104000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because of the s=....","msgtype":"m.text"},"ts":1257389105000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"part","msgtype":"m.text"},"ts":1257389106000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but I don't see how got is protected based on the diagram","msgtype":"m.text"},"ts":1257389107000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"also, the protocol violates the HTTP spec","msgtype":"m.text"},"ts":1257389160000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"true, it can't be a long-lived secret, it would have to be arranged between A and B on demand","msgtype":"m.text"},"ts":1257389161000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because a GET request is changing state on server B","msgtype":"m.text"},"ts":1257389162000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"so that would have to be a POST","msgtype":"m.text"},"ts":1257389163000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1257389164000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which means the redirect would have to be a 307","msgtype":"m.text"},"ts":1257389165000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"which means a dialog in Firefox","msgtype":"m.text"},"ts":1257389166000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and that","msgtype":"m.text"},"ts":1257389220000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it doesn't work at all in Safari","msgtype":"m.text"},"ts":1257389221000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and that would reveal the contents of the form submitted to B","msgtype":"m.text"},"ts":1257389222000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"307 does work in Safari at least with WebKit ToT","msgtype":"m.text"},"ts":1257389223000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(not sure if it does in shipping)","msgtype":"m.text"},"ts":1257389224000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, nice","msgtype":"m.text"},"ts":1257389225000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you should send any comments to the list that I didn't already send in one of my many emails","msgtype":"m.text"},"ts":1257389226000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok, will do","msgtype":"m.text"},"ts":1257389227000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"collin is here, i'll ask him to look at it too","msgtype":"m.text"},"ts":1257389228000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"in particular I claimed the CSRF vulnerability on \"got\" is patchable with a pre-arranged shared secret, but as you pointed out, you can't use a long-lived shared secret","msgtype":"m.text"},"ts":1257389280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then why not transfer secret123 on the back end?","msgtype":"m.text"},"ts":1257389281000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the requirements he's trying to satisfy include \"no server-to-server communication required\"","msgtype":"m.text"},"ts":1257389340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(and also \"no bilateral prior arrangement between the servers such as a pre-arranged shared secret\")","msgtype":"m.text"},"ts":1257389400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm not sure this protocol can be patched to fix the CSRF and still meet those requirements, without using Origin somewhere","msgtype":"m.text"},"ts":1257389401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"You probably can do it by bouncing requests back to A to make sure it wanted to send the got request","msgtype":"m.text"},"ts":1257389460000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"you need something like the 4-way handshake in 802.11i","msgtype":"m.text"},"ts":1257389461000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or NSL with a final confirmation message","msgtype":"m.text"},"ts":1257389462000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"is probably the better way to think about it","msgtype":"m.text"},"ts":1257389520000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I'm not familiar with the protocols you refer to but it sounds plausible","msgtype":"m.text"},"ts":1257389521000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"all right, I'm gonna head out for now but I'll be back online later","msgtype":"m.text"},"ts":1257389580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'll send an email to the list with citations","msgtype":"m.text"},"ts":1257389581000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ttyl","msgtype":"m.text"},"ts":1257389582000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"hi all","msgtype":"m.text"},"ts":1257393120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Because I couldn't quite resist: http://thereshouldbenored.com/","msgtype":"m.text"},"ts":1257393480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1257393660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Just look at the page. If there's one thing I had to do with that domain, at least temporarily, that is it.","msgtype":"m.text"},"ts":1257393720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I can see that the page is red","msgtype":"m.text"},"ts":1257393780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I don't get it","msgtype":"m.text"},"ts":1257393781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1257393782000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CSS test case joke?","msgtype":"m.text"},"ts":1257393783000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Not really","msgtype":"m.text"},"ts":1257393784000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, yeah","msgtype":"m.text"},"ts":1257393785000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But not really specifically CSS","msgtype":"m.text"},"ts":1257393786000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: hehe funny, but there should be no title either no?","msgtype":"m.text"},"ts":1257396240000,"senderName":"cedricv","senderId":"cedricv@irc"},
{"content":{"body":"Hi everybody \\o/","msgtype":"m.text"},"ts":1257401160000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"is the plan for mathml to drop support for xlink:href at some point?","msgtype":"m.text"},"ts":1257409620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Dashiva: You know it's an automatic namespace file because you load it as part of the automatic namespace file loading process","msgtype":"m.text"},"ts":1257428640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it's the same as how you know an image is an image when loading it in <img>","msgtype":"m.text"},"ts":1257428641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But it could contain other contents","msgtype":"m.text"},"ts":1257428700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Images require sniffing, after all","msgtype":"m.text"},"ts":1257428701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"So you sniff it based on the element names","msgtype":"m.text"},"ts":1257428760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But surely a new technology shouldn't require sniffing","msgtype":"m.text"},"ts":1257428761000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Especially not one based on XML","msgtype":"m.text"},"ts":1257428762000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"If it's got <ns><element><name>... then you process it, otherwise you ignore unexpected elements","msgtype":"m.text"},"ts":1257428763000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you don't need to sniff, you can just try to apply it and if it fails (because it contains something else), ignore it (or whatever error handling is defined)","msgtype":"m.text"},"ts":1257428880000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Dashiva: So you're advocating in favour of using namespaces everywhere, even when they're not needed for their practical benefits like mixing independently-developed vocabularies?","msgtype":"m.text"},"ts":1257428881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The contents might be XML that happens to use <ns> and <element> and such without being a ns file","msgtype":"m.text"},"ts":1257428940000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(or for benefits like backward compatibility with existing content and specs etc)","msgtype":"m.text"},"ts":1257428941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: Why is that a problem, other than being a security risk?","msgtype":"m.text"},"ts":1257429000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Isn't that problem enough in itself?","msgtype":"m.text"},"ts":1257429001000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1257429002000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's no more of a problem than a text file that happens to be a valid PNG, and I might use it in <img> on my page and it could display something unintentionally rude","msgtype":"m.text"},"ts":1257429060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It would also be problematic to handle those files with generic XML tools, when you don't access the file via an explicit reference as a ns file","msgtype":"m.text"},"ts":1257429061000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: No, it's worse","msgtype":"m.text"},"ts":1257429062000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It might turn a bogus:script element into xhtml:script","msgtype":"m.text"},"ts":1257429063000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"If I don't want it to be processed in that way, and/or don't trust the server it's hosted on, then I don't include an explicit link to it from my page","msgtype":"m.text"},"ts":1257429120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And maybe bogus:script is just example code, not intended to actually be run","msgtype":"m.text"},"ts":1257429121000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: But the proposal practically begs people to link other people's ns files, to avoid recreating everything themselves","msgtype":"m.text"},"ts":1257429180000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Extensibility is centralized in practice, so they'd just link to w3.org, and everyone trusts the W3C already","msgtype":"m.text"},"ts":1257429181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But if everyone's going to use the same file we should just skip the file completely","msgtype":"m.text"},"ts":1257429240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"unless you're IBM and you host a copy yourself","msgtype":"m.text"},"ts":1257429241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: http://www.w3.org/2009/Talks/08-quin-balisage-namespaces/ does suggest skipping the file and having a default be supplied by the application","msgtype":"m.text"},"ts":1257429300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And then we're just one step away from letting the default be supplied by the specification","msgtype":"m.text"},"ts":1257429420000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Coming full circle to <svg> in HTML5","msgtype":"m.text"},"ts":1257429421000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Indeed, except it's in XML not HTML","msgtype":"m.text"},"ts":1257429480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and there's a syntax for expressing the <svg> etc rules, which generic XML processors could use","msgtype":"m.text"},"ts":1257429481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and the rules just get applied when parsing, so there's no need to complicate the internals of applications so they handle context-sensitive semantics of elements, since it just sees the normal namespaceURI/localName that everyone loves)","msgtype":"m.text"},"ts":1257429600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Although we skipped this part: <Dashiva> It would also be problematic to handle those files with generic XML tools, when you don't access the file via an explicit reference as a ns file","msgtype":"m.text"},"ts":1257429601000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"You pass a reference to the ns file as an extra argument to the parser","msgtype":"m.text"},"ts":1257429660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No, the ns file itself","msgtype":"m.text"},"ts":1257429661000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"You pass a reference to the ns file as an extra argument to the parser and it downloads the file itself","msgtype":"m.text"},"ts":1257429662000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or you pass the file itself to it","msgtype":"m.text"},"ts":1257429720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"although I'm probably confused","msgtype":"m.text"},"ts":1257429721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Just processing ns file as a standalone XML file, for editing or XSLT presentation or whatnot.","msgtype":"m.text"},"ts":1257429722000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"isn't reading but solutions that rely on extra files, particularly ones that have to be fetched across the network, for interpretation are bad","msgtype":"m.emote"},"ts":1257429723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Do you mean processing the ns files in isolation, just as plain standalone XML files?","msgtype":"m.text"},"ts":1257429724000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So browsers would have to use the built-in file approach","msgtype":"m.text"},"ts":1257429780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's zillions of unnamespaced XML formats in the world and tools must work fine with them","msgtype":"m.text"},"ts":1257429781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: We covered that part, apparently the files won't really exist in practice","msgtype":"m.text"},"ts":1257429782000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Oh, they work, but you lose the knowledge of what the file is","msgtype":"m.text"},"ts":1257429783000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"X3D made a whole ISO standard without bothering with a namespace","msgtype":"m.text"},"ts":1257429784000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: The proposal explicitly says that they will exist at some level as it vaugely mentions browsers updating them once a year","msgtype":"m.text"},"ts":1257429840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Even those files are purely internal, so they'll probably be optimized away","msgtype":"m.text"},"ts":1257429841000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"The proposal looks to me like \"Okay, let's basically do what HTML5 is doing with namespaces, except in a way that lets non-browsers be told how to handle stuff in a standard fashion without needing to know about HTML specifically.\"","msgtype":"m.text"},"ts":1257429900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Perhaps you could view it as a way of encoding http://whatwg.org/html5#parsing-main-inforeign and related rules in an easily-understandable easily-modifiable declarative format","msgtype":"m.text"},"ts":1257429901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Right so the file \"exists\" insofar as it is expected to be an independently modifiable part of the browser","msgtype":"m.text"},"ts":1257429902000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so it can be extended without having to dive into the huge complexity of the HTML5 parsing algorithm","msgtype":"m.text"},"ts":1257429960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Incidentally, I like how this page has all the visual annoyance of framesets without the ability to right-click and open the actual content in its own page.","msgtype":"m.text"},"ts":1257429961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It kinda ruins the extensibility part, though","msgtype":"m.text"},"ts":1257429962000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"But I haven't yet worked out whether that is actually a sensible idea or not. Say html6 invents some new elements. Is it good or necessary to update existing browsers ","msgtype":"m.text"},"ts":1257429963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"needs to be very careful when talking about parsing because his 'p' key intermittently fails to work","msgtype":"m.emote"},"ts":1257429964000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1257429965000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it has to hardcode every element name and attribute name","msgtype":"m.text"},"ts":1257429966000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"No, because for extensibility you provide an explicit file.","msgtype":"m.text"},"ts":1257429967000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I just disabled stylesheets on that page","msgtype":"m.text"},"ts":1257430020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I mean, for distributed extensibility.","msgtype":"m.text"},"ts":1257430021000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For centralized extensibility it can be hardcoded, avoiding exposure of namespaces to authors.","msgtype":"m.text"},"ts":1257430022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: So in practice a certain fraction of authors will have to deal with two kinds of namespaces at once","msgtype":"m.text"},"ts":1257430023000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(or alternatively let's assume that HTML6 allows direct embedding of some fictional Midi Markup Language)","msgtype":"m.text"},"ts":1257430024000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva, no, because no one will actually use decentralized extensibility.","msgtype":"m.text"},"ts":1257430080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: We don't actually say that out loud","msgtype":"m.text"},"ts":1257430081000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"What are the advantages of putting MML elements in the right namespace in some fraction of existing browsers where MML doesn't work anyway","msgtype":"m.text"},"ts":1257430082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought we can in the #whatwg cabal, we only have to be diplomatic on public-html.","msgtype":"m.text"},"ts":1257430083000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"reads the proposal","msgtype":"m.emote"},"ts":1257430140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: lastweek is watching!","msgtype":"m.text"},"ts":1257430141000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"AryehGregor: AFAIK MLW hasn't added you to the cabal","msgtype":"m.text"},"ts":1257430142000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1257430143000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You can have my spot, AryehGregor","msgtype":"m.text"},"ts":1257430144000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I'm really too much of an outsider to be part anyhow","msgtype":"m.text"},"ts":1257430145000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva just lurks around here and distracts us","msgtype":"m.text"},"ts":1257430200000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"I'm not even employed by a browser maker","msgtype":"m.text"},"ts":1257430201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"it has to hardcode every element name and attribute name\" - which \"it\" do you mean? (I might have lost track of the conversation)","msgtype":"m.text"},"ts":1257430202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(any more)","msgtype":"m.text"},"ts":1257430260000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Philip`: The ns file","msgtype":"m.text"},"ts":1257430261000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Related question, how does it handle having both xhtml:href and xlink:href in the same document?","msgtype":"m.text"},"ts":1257430320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: I think it only has to encode the root elements of differently-namespaced subtrees, like <html> and <svg> and <foreignObject>","msgtype":"m.text"},"ts":1257430380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and it's rare that that list of elements will change","msgtype":"m.text"},"ts":1257430440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Once HTML 5 becomes a W3C Recommendation one might reasonably expect to see implementations\"  I guess they haven't looked at the timetables?","msgtype":"m.text"},"ts":1257430500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Don't ask me how <foreignObject> would actually be encoded in the ns proposal","msgtype":"m.text"},"ts":1257430501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I guess it should not change its own namespace, but make its children default to the HTML namespace, and then you could use a <math> root if you want embedded maths instead of HTML?)","msgtype":"m.text"},"ts":1257430560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What about the hrefs? :)","msgtype":"m.text"},"ts":1257430561000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"xhtml:href doesn't exist so that's not a problem","msgtype":"m.text"},"ts":1257430562000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and nobody should invent new attributes in namespaces","msgtype":"m.text"},"ts":1257430563000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"null:href, then","msgtype":"m.text"},"ts":1257430620000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That is, what does <xhtml:a href=\"\" xlink:href=\"\"> look like with ns files?","msgtype":"m.text"},"ts":1257430680000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Doesn't MathML 3 have href and xlink:href on the same elements?","msgtype":"m.text"},"ts":1257430681000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This proposal actually seems extremely practical and reasonable.","msgtype":"m.text"},"ts":1257430682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"in fact, the restriction is that the browser must not claim such a resource to be a well-formed XML document, but, once it is not XML it is outside the scope of the XML specification, and error recovery is perfectly acceptable, as long as no claim is made that the original document is itself XML.\"","msgtype":"m.text"},"ts":1257430683000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dashiva: Don't allow both in the same vocabulary","msgtype":"m.text"},"ts":1257430684000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"O RLY?","msgtype":"m.text"},"ts":1257430685000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The extensibility is centralizing :)","msgtype":"m.text"},"ts":1257430740000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Anyway, replacing xlink:href with automatic href would break copy-and-paste of existing SVG XML so that's not going to be accepted","msgtype":"m.text"},"ts":1257430741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.w3.org/TR/2008/REC-xml-20081126/#dt-fatal","msgtype":"m.text"},"ts":1257430742000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Any XML processor that can handle errors sanely is not conforming.","msgtype":"m.text"},"ts":1257430800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I'd be interested in what they propose browsers should do instead of rejecting the document","msgtype":"m.text"},"ts":1257430860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"They\" who?","msgtype":"m.text"},"ts":1257430861000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anybody","msgtype":"m.text"},"ts":1257430862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"This Liam Quin guy seems to think it would be fine for browsers to just implement HTML5-style error handling for XML.","msgtype":"m.text"},"ts":1257430863000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"or anybody who says draconian error handling isn't a problem with XML, it's just browser developers being stupid","msgtype":"m.text"},"ts":1257430864000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and stupidly following the spec instead of doing something else","msgtype":"m.text"},"ts":1257430920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and I'm wondering what the something else is","msgtype":"m.text"},"ts":1257430921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Which seems to be totally contrary to the XML spec, but hey, he's XML Activity Lead and I'm some guy who to whom \"robustness, accuracy, error detection and correctness are relatively unimportant\".","msgtype":"m.text"},"ts":1257430922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(and I'm assuming the something else must be clearly specified somewhere so it can be interoperably implementable)","msgtype":"m.text"},"ts":1257430923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor: This proposal decentralizedly extends XML in a new and bold manner","msgtype":"m.text"},"ts":1257430980000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That's the tricky part.","msgtype":"m.text"},"ts":1257430981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's why XML says \"fail horribly\", AFAICT, so that you have consistent behavior.","msgtype":"m.text"},"ts":1257430982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you say \"Well, it's no longer XML, so feel free to do whatever you want with it\", you've just completely lost interoperability.","msgtype":"m.text"},"ts":1257431040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But if it isn't well-formed, then it isn't an XML document, by definition","msgtype":"m.text"},"ts":1257431041000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"In any case, the proposal is about modifying XML and therefore largely irrelevant, because nobody uses XHTML","msgtype":"m.text"},"ts":1257431042000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"votes for HTML5 syntax to be generalized a bit, called \"Robust Markup Language\" or something, moved to its own spec, and pushed as an XML successor","msgtype":"m.emote"},"ts":1257431100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Please don't","msgtype":"m.text"},"ts":1257431101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor: HTML5 is horrid syntax","msgtype":"m.text"},"ts":1257431102000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor: Sounds like it could be taken under the mantle of XML5","msgtype":"m.text"},"ts":1257431103000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"and shouldn't be pushed beyond where it's currently required","msgtype":"m.text"},"ts":1257431104000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, right, except we might be able to shut up the namespace partisans.","msgtype":"m.text"},"ts":1257431105000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, with respect to no one using XHTML.","msgtype":"m.text"},"ts":1257431106000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so basically we replace XML with a mixed-XML-and-SGML successor?","msgtype":"m.text"},"ts":1257431160000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"yuck","msgtype":"m.text"},"ts":1257431161000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"unless by \"generalized\" you mean removing basically all of it and just leaving some simple consistent error-handling behaviour","msgtype":"m.text"},"ts":1257431162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"With respect to an HTML5-based syntax, okay, granted.  But something that has well-defined error handling should replace XML.","msgtype":"m.text"},"ts":1257431163000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"XML has well-defined error handling","msgtype":"m.text"},"ts":1257431164000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I prefer the \"you messed up, screw you\" error handling","msgtype":"m.text"},"ts":1257431165000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"(Well, as long as you're not one of the XML proponents who pretends it doesn't)","msgtype":"m.text"},"ts":1257431166000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well-defined and *sane* error handling, fine.","msgtype":"m.text"},"ts":1257431167000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(and claims that as an advantage)","msgtype":"m.text"},"ts":1257431220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: No, it doesn't have well-defined error handling. Just look at handling of unknown entities in non-validating parsers.","msgtype":"m.text"},"ts":1257431221000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"There is a vauge idea for XML5","msgtype":"m.text"},"ts":1257431222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"XML was designed to be easily machine-readable.  It's not, you need a slow and bloated library to use it anyway.  So we may as well make it more human-friendly at the expense of more implementation complexity.","msgtype":"m.text"},"ts":1257431223000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jcranmer: The problem is that in practice it's commonly \"somebody involved in the development of this site which you're trying to look at messed up, screw you\"","msgtype":"m.text"},"ts":1257431280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: Vague idea? annevk has prototype spec and impl","msgtype":"m.text"},"ts":1257431281000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Although I grant that HTML5's baroque error handling is way too web-specific to sanely saddle anyone with.","msgtype":"m.text"},"ts":1257431282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://code.google.com/p/xml5/","msgtype":"m.text"},"ts":1257431283000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"CSS is maybe a better model for good error handling.","msgtype":"m.text"},"ts":1257431284000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders|work: Yeah but no real traction.","msgtype":"m.text"},"ts":1257431285000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Last commit: ","msgtype":"m.text"},"ts":1257431286000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Oct 21, 2007","msgtype":"m.text"},"ts":1257431287000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Did anyone else notice that the XML proposal by the XML Activity Lead contains malformed XML in an example?  <element src=\"eacml.ns />","msgtype":"m.text"},"ts":1257431340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: That's not malformed XML","msgtype":"m.text"},"ts":1257431341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's not well-formed XML, so it's not XML at all","msgtype":"m.text"},"ts":1257431400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No true scotsman","msgtype":"m.text"},"ts":1257431401000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Draconian error handling is fine for things that are basically always written by hand.  Like programming languages.","msgtype":"m.text"},"ts":1257431402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For data formats it's completely unreasonable.","msgtype":"m.text"},"ts":1257431403000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's fine for cases where the error can be detected _at authoring time_","msgtype":"m.text"},"ts":1257431404000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Which it can't if the markup is built by a script.","msgtype":"m.text"},"ts":1257431460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think it's fine for data formats as long as it's easy to generate non-erroneous output","msgtype":"m.text"},"ts":1257431461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Which any general-purpose data markup language has to handle.","msgtype":"m.text"},"ts":1257431462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes, I'll agree with that too.","msgtype":"m.text"},"ts":1257431463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Draconian error handling for JSON is fine because it's so simple.","msgtype":"m.text"},"ts":1257431464000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Eh?","msgtype":"m.text"},"ts":1257431520000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(although I don't know what JSON's error handling is actually like)","msgtype":"m.text"},"ts":1257431521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Eh what?","msgtype":"m.text"},"ts":1257431522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Have you seen all the broken JSON out there?","msgtype":"m.text"},"ts":1257431523000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"and the problem with XML as a data format is not that it's draconian, but that the draconianness applies in lots of weird complex ways, like certain forbidden characters and certain forbidden element and attribute names and attribute values","msgtype":"m.text"},"ts":1257431524000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"There's a lot of JSON that isn't actually JSON, it's serialized javascript source","msgtype":"m.text"},"ts":1257431525000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"So what happens to it?","msgtype":"m.text"},"ts":1257431526000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It works because you use Javascript eval() to parse it","msgtype":"m.text"},"ts":1257431527000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"But it isn't JSON","msgtype":"m.text"},"ts":1257431580000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It's pretty trivial to get correctly nested tags and quotes around attribute values, so I think it's fine for a format to require that","msgtype":"m.text"},"ts":1257431581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1257431582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`, well, I don't want my site to die unnecessarily because of a typo that would be reasonably correctable by the client.","msgtype":"m.text"},"ts":1257431583000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Fail-fast isn't a good idea except if you'd prefer death to unknown errors.","msgtype":"m.text"},"ts":1257431640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but it's really hard to avoid problems like how http://www.rddl.org/rddl2rdf.xsl applied to http://www.w3.org/XML/1998/namespace gives non-well-formed output","msgtype":"m.text"},"ts":1257431641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and so it's bad for that kind of unexpected situation to cause death","msgtype":"m.text"},"ts":1257431642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'd argue that misnesting tags isn't as trivial to avoid as you think.","msgtype":"m.text"},"ts":1257431700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Remember, well-formed XML runs our national security infrastructure","msgtype":"m.text"},"ts":1257431701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"One error and the nukes fly","msgtype":"m.text"},"ts":1257431702000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"MediaWiki has some known tag misnesting bugs that have sat around for years because they'd require a remarkable amount of effort to fix.","msgtype":"m.text"},"ts":1257431703000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It depends on how you're generating your output.","msgtype":"m.text"},"ts":1257431760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"notes that othermaciej and julian have gotten the xhtml namespace wrong","msgtype":"m.emote"},"ts":1257431761000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'd argue that I've seen lots of XML sites and serializers that break because of funny characters or incorrect namespace declarations, and none that break because user input can cause them to emit misnested tags","msgtype":"m.text"},"ts":1257431762000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't think any syntax error should be fatal in remotely complicated data formats.  If in any data formats at all.","msgtype":"m.text"},"ts":1257431763000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Philip`, counterexample: MediaWiki serving an XML MIME type.  :)","msgtype":"m.text"},"ts":1257431820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I doubt it's unique, either.","msgtype":"m.text"},"ts":1257431821000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although maybe not typical.","msgtype":"m.text"},"ts":1257431822000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"...except for all the sites that display unescaped user input directly, but they're just as broken and insecure with text/html","msgtype":"m.text"},"ts":1257431823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, with text/html they're vulnerable only to malice.  With an XML MIME type the site could be taken down by ignorance.","msgtype":"m.text"},"ts":1257431824000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ignorance is a lot more prevalent than malice.","msgtype":"m.text"},"ts":1257431880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Especially since even XML gurus are liable to typo sometimes.","msgtype":"m.text"},"ts":1257431881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oops, guess you can't reach the edit button for your post (if there is one).","msgtype":"m.text"},"ts":1257431882000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Edit another page, modify the URL :)","msgtype":"m.text"},"ts":1257431940000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Just stick an XML5 parser/serializer in there, to correct the nesting","msgtype":"m.text"},"ts":1257432060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and other typos)","msgtype":"m.text"},"ts":1257432061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's hard to do nowadays with XML, because XML is too complex and so serializers have bugs and produce ill-formed output","msgtype":"m.text"},"ts":1257432120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I think I remember getting ill-formed output out of Xalan and the validator.nu serializer and GenX)","msgtype":"m.text"},"ts":1257432180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So you clean up bad markup on the server side rather than the client?  What's the point?  That just moves the complexity to a place that's less likely to implement it correctly.","msgtype":"m.text"},"ts":1257432240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if it's well-formed, it can be parsed *really fast*","msgtype":"m.text"},"ts":1257432300000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"unlike html tag soup which takes ages to parse because error correction is slow","msgtype":"m.text"},"ts":1257432301000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"(Sadly Tim Bray (of Genx) seems to have forgotten his \"$500 reward for each significant bug reported that would allow someone to use the API as documented but produce non-well-formed output.\" :-( )","msgtype":"m.text"},"ts":1257432420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan_: Can it really?","msgtype":"m.text"},"ts":1257432960000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I'm guessing you were sarcastic, but still","msgtype":"m.text"},"ts":1257433020000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Even an XML processor has to detect invalid input, so all the checks happen even if the input is valid","msgtype":"m.text"},"ts":1257433021000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Yeah, it makes absolutely no difference","msgtype":"m.text"},"ts":1257433140000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"It makes a difference to code size","msgtype":"m.text"},"ts":1257433141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which will have a non-zero effect on performance","msgtype":"m.text"},"ts":1257433142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Potentially a huge effect if it makes your methods too big for HotSpot)","msgtype":"m.text"},"ts":1257433200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can't that be handled by just making more methods?","msgtype":"m.text"},"ts":1257433201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I assume HTML parsers also have to carry around and update some state that wouldn't be needed if there wasn't any complex error correction","msgtype":"m.text"},"ts":1257433260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But the differences are probably negligible compared to the cost of I/O","msgtype":"m.text"},"ts":1257433320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"was being sarcastic, but notes he has heard that argument several times","msgtype":"m.emote"},"ts":1257433380000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"running git svn clone is fairly slow on the webapps repo","msgtype":"m.text"},"ts":1257433381000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"(Sorry, but I want to run blame, to see when stuff changed, so I can dig up the commit message)","msgtype":"m.text"},"ts":1257433440000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"<atom:link rel=\"self\" href=\"\"/> fulfils the SHOULD requirement in Atom for atom:link@rel='self', right?","msgtype":"m.text"},"ts":1257433980000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"isn't the point of rel='self' to include the absolute url?","msgtype":"m.text"},"ts":1257434100000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"in case the feed's url gets lost somewhere in the chain of whatever is done with the feed","msgtype":"m.text"},"ts":1257434101000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Yeah, basically. But I'm wondering how I can deal with a feed that doesn't really have a URL","msgtype":"m.text"},"ts":1257434102000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"if it doesn't have a URL, that seems like a valid reason to violate the SHOULD","msgtype":"m.text"},"ts":1257434220000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Yeah, it does. But it seems fun to do weird things to comply with the spec as much as possible.","msgtype":"m.text"},"ts":1257434221000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"has plans for thereshouldbenored.com","msgtype":"m.emote"},"ts":1257434280000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"will you make it html/js/css/atom polyglot?","msgtype":"m.text"},"ts":1257434340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"should patent the technique","msgtype":"m.emote"},"ts":1257434341000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Nah","msgtype":"m.text"},"ts":1257434400000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Though that is an idea","msgtype":"m.text"},"ts":1257434401000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"wonders how to pull off HTML/Atom","msgtype":"m.emote"},"ts":1257434460000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"http://simon.html5.org/dump/html+js+css+atom.html","msgtype":"m.text"},"ts":1257434461000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"No DOCTYPE :(","msgtype":"m.text"},"ts":1257434520000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"need quirks mode","msgtype":"m.text"},"ts":1257434521000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"for css","msgtype":"m.text"},"ts":1257434522000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Why should there be nored?","msgtype":"m.text"},"ts":1257434523000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That sux.","msgtype":"m.text"},"ts":1257434524000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"also it wouldn't validate as html5 anyway because it uses bogus comments","msgtype":"m.text"},"ts":1257434525000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"is incapable of reading that URL as having a space after \"no\"","msgtype":"m.emote"},"ts":1257434526000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Why?","msgtype":"m.text"},"ts":1257434580000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"gsnedders|work: I don't know - it's just how I read it, given the lack of punctuation","msgtype":"m.text"},"ts":1257434581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"there.should.be.no.red","msgtype":"m.text"},"ts":1257434640000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"should have blatantly tried for there.should.be.no.red","msgtype":"m.emote"},"ts":1257434641000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"I think red.com might already be registered","msgtype":"m.text"},"ts":1257434642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but not no.red","msgtype":"m.text"},"ts":1257434643000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":".ed doesn't exist :(","msgtype":"m.text"},"ts":1257434644000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1257434645000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"there.should.be.red.no","msgtype":"m.text"},"ts":1257434646000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"red.there.should.be.no then it'll sound like Yoda","msgtype":"m.text"},"ts":1257434700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you can mint new TLDs nowadays, no?","msgtype":"m.text"},"ts":1257434701000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"be.no is taken","msgtype":"m.text"},"ts":1257434702000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"No, you can't","msgtype":"m.text"},"ts":1257434760000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1257434761000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"there.should.be.no.red.info","msgtype":"m.text"},"ts":1257434762000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"dammit, red.info taken","msgtype":"m.text"},"ts":1257434820000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"red.there.shouldnt.be is taken too","msgtype":"m.text"},"ts":1257434821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and shouldn’t.be is apparently not allowed","msgtype":"m.text"},"ts":1257434822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though shouldn’t.eu claims to be allowed)","msgtype":"m.text"},"ts":1257434823000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"your.tests.are.totally.inaccessible.info","msgtype":"m.text"},"ts":1257434880000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"taken","msgtype":"m.text"},"ts":1257434881000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"prefers PHP/JS biglot: http://cassisproject.com/","msgtype":"m.emote"},"ts":1257435180000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wrote a js file that was polyglot helper function for a web worker and a helper function for normal <script> inclusion last night","msgtype":"m.emote"},"ts":1257435420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"sadly i ended up commenting out the web worker code path because the web worker implementations suck too much","msgtype":"m.text"},"ts":1257435480000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"isn't particularly attracted by the idea of a language subset in which you can't even declare variables","msgtype":"m.emote"},"ts":1257435540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Don't you do haskell?","msgtype":"m.text"},"ts":1257435720000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hmm? Haskell lets you declare variables","msgtype":"m.text"},"ts":1257435721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For some meaning of variables","msgtype":"m.text"},"ts":1257435780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Some meaning, yes","msgtype":"m.text"},"ts":1257435781000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: No, but anyway that's different because all variables have local scope","msgtype":"m.text"},"ts":1257435782000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"whereas JS without 'var' means every variable is global","msgtype":"m.text"},"ts":1257435783000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't really understand the point of hacking javascript and php into the same file","msgtype":"m.emote"},"ts":1257435840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if it can be done, someone will do it","msgtype":"m.text"},"ts":1257435841000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"It seems like anything you gain from code reuse will be lost in the fact that it is an enormous hack","msgtype":"m.text"},"ts":1257435900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan_: That's not really a point. At least not a point of suggesting it as a sensible approach","msgtype":"m.text"},"ts":1257435901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`: whoa! Did Tim Bray have a $500 bounty on WF bugs in GenX and didn't pay you?","msgtype":"m.text"},"ts":1257436080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sensibly doesn't have the confidence to promise money bounties to Philip` ","msgtype":"m.emote"},"ts":1257436081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Promise bounties redeemable in person only, and stop going to TPAC","msgtype":"m.text"},"ts":1257436140000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I may have promised a drink bounty before the previous TPAC, but I forget if I did but at least there was no one to claim it","msgtype":"m.text"},"ts":1257436200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: He said in http://www.tbray.org/ongoing/When/200x/2004/01/11/PostelPilgrim that he would have a bounty, and later said he'd start it once he thought Genx was reasonably stable","msgtype":"m.text"},"ts":1257436260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but that was in 2004 and then I don't think he ever said he'd start offering bounties at a particular point in time","msgtype":"m.text"},"ts":1257436320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I conclude genx isn't reasonably stable","msgtype":"m.text"},"ts":1257436321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Did he actually know you broke it>","msgtype":"m.text"},"ts":1257436322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/>/?/","msgtype":"m.text"},"ts":1257436380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yes","msgtype":"m.text"},"ts":1257436440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-archive/2009Mar/0060.html (and he replied saying he'd look into it)","msgtype":"m.text"},"ts":1257436441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.tbray.org/ongoing/When/200x/2004/02/20/GenxStatus - \"2004/07/25 ... I think we’re close. If someone sends me one more story about Genx being in real production somewhere, I’ll take the “beta” stamp off and announce the rewards-for-bugs program.\"","msgtype":"m.text"},"ts":1257436500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So you just need to prove that someone did that ;)","msgtype":"m.text"},"ts":1257436560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess I should have sent a story of Genx in \"production\" if a hobby script counts as production","msgtype":"m.text"},"ts":1257436561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"later, though, I've regretted using Genx, because there's no Ubuntu package for it, so I've been unable to migrate the script to a host that doesn't have gcc","msgtype":"m.text"},"ts":1257436620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and all the -dev packages","msgtype":"m.text"},"ts":1257436621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I haven't bothered setting up another box just for compiling pygenx","msgtype":"m.text"},"ts":1257436622000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Has the bug been fixed?","msgtype":"m.text"},"ts":1257436623000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"speaking of pygenx, is there a pure python substitute these days?","msgtype":"m.text"},"ts":1257436680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(If the bug hasn't been fixed I suggest you put gnex into production somewhere and email with the notice of production at the top and the repeated bug report at the bottom ;)","msgtype":"m.text"},"ts":1257436740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://www.tbray.org/ongoing/genx/ indicates no updates released since 2004","msgtype":"m.text"},"ts":1257436800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: But that would require me to put known-buggy software into production, which would be terribly irresponsible","msgtype":"m.text"},"ts":1257436801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You could patch the bug locally","msgtype":"m.text"},"ts":1257436860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"How can I trust that it's not riddled with other bugs?","msgtype":"m.text"},"ts":1257436980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(other than knowing that I spent a while looking through the source code and didn't see any other bugs)","msgtype":"m.text"},"ts":1257436981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Goodmorning Everyone! \\o/","msgtype":"m.text"},"ts":1257439740000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Good evening","msgtype":"m.text"},"ts":1257439741000,"senderName":"daedb","senderId":"daedb@irc"},
{"content":{"body":"good morning","msgtype":"m.text"},"ts":1257439800000,"senderName":"cardona507","senderId":"cardona507@irc"},
{"content":{"body":"I wonder what happened here: http://twitter.com/marcosc/status/5435533789","msgtype":"m.text"},"ts":1257443700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"abarth: I think you may have overstated your case about the issue with Tyler's protocol","msgtype":"m.text"},"ts":1257446340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is toby inkster here?","msgtype":"m.text"},"ts":1257448920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, maybe in #microformats though?","msgtype":"m.text"},"ts":1257448980000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"alias: tobyink","msgtype":"m.text"},"ts":1257448981000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"could remember it was something similar to his name, just not the exact string","msgtype":"m.emote"},"ts":1257449460000,"senderName":"gsnedders|work","senderId":"gsnedders|work@irc"},
{"content":{"body":"hsivonen: I agree with the observation that requiring an extra HTTP request to get namespace bindings is a non-starter (and was considering saying as much)","msgtype":"m.text"},"ts":1257449520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: are you around?","msgtype":"m.text"},"ts":1257450600000,"senderName":"nessy1","senderId":"nessy1@irc"},
{"content":{"body":"nessy: yes","msgtype":"m.text"},"ts":1257450601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we're currently discussion aria role usage and the influence on validating a html5 document in #aapi","msgtype":"m.text"},"ts":1257450660000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I was looking for you thoughts","msgtype":"m.text"},"ts":1257450661000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"#aapi on irc.w3.org","msgtype":"m.text"},"ts":1257450662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: I'm going to hit time zone barriers soon :-(","msgtype":"m.text"},"ts":1257450900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"bummer - just thought it would be good to get your input","msgtype":"m.text"},"ts":1257450901000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"of course you can always contribute more later","msgtype":"m.text"},"ts":1257450902000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"just discussing your statement now :)","msgtype":"m.text"},"ts":1257450960000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"Happy Afternoon!!! \\o/","msgtype":"m.text"},"ts":1257452940000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-rdf-in-xhtml-tf/2009Nov/0013.html - \"We don't trust [XML] 5th Edition.\"","msgtype":"m.text"},"ts":1257454740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is anybody adopting it yet?","msgtype":"m.text"},"ts":1257454800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"libxml 2.7","msgtype":"m.text"},"ts":1257454920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Does it have a 4th Edition option?","msgtype":"m.text"},"ts":1257455280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1257455281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"If not, I guess it's impossible to implement a conforming XHTML or RDFa processor with libxml 2.7","msgtype":"m.text"},"ts":1257455340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hooray for redefining well-formedness","msgtype":"m.text"},"ts":1257455341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"How come?","msgtype":"m.text"},"ts":1257455342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because it won't properly refuse not well-formed content","msgtype":"m.text"},"ts":1257455343000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1257455400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1257455401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it will extract data that it shouldn't extract","msgtype":"m.text"},"ts":1257455402000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Know of any good Python XML serializer?","msgtype":"m.text"},"ts":1257455640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: print","msgtype":"m.text"},"ts":1257455641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: That I can rely upon to output well-formed XML?","msgtype":"m.text"},"ts":1257455700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's easy","msgtype":"m.text"},"ts":1257455701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"print \"<example/>\"","msgtype":"m.text"},"ts":1257455702000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: :P","msgtype":"m.text"},"ts":1257455703000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's always going to output well-formed XML","msgtype":"m.text"},"ts":1257455704000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: With arbitrary content?","msgtype":"m.text"},"ts":1257455705000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Like you give it a tree containing arbitrary strings and it corrects errors and outputs XML?","msgtype":"m.text"},"ts":1257455760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1257455761000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1257455762000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh. Oh well then.","msgtype":"m.text"},"ts":1257455763000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"adds some JS to http://thereshouldbenored.com/ so it could be green","msgtype":"m.emote"},"ts":1257457920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, ping","msgtype":"m.text"},"ts":1257458100000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Can Math.random() * 100 actually be 42...","msgtype":"m.text"},"ts":1257458160000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"When rounded, yes","msgtype":"m.text"},"ts":1257458161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"How is it rounded?","msgtype":"m.text"},"ts":1257458162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Math.round(Math.random() * 100)","msgtype":"m.text"},"ts":1257458220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1257458221000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I for some reason ignored the round","msgtype":"m.text"},"ts":1257458222000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"So let's deal with that question instead","msgtype":"m.text"},"ts":1257458223000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(even when not rounded it could be 42, it's just quite unlikely)","msgtype":"m.text"},"ts":1257458224000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"To the last floating point bit?","msgtype":"m.text"},"ts":1257458280000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It could be 42 in Javascript","msgtype":"m.text"},"ts":1257458281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Definitely maybe.","msgtype":"m.text"},"ts":1257458520000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Definitely.","msgtype":"m.text"},"ts":1257458640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: Looks like it can be exactly 42","msgtype":"m.text"},"ts":1257458641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but only if you use double-precision numbers","msgtype":"m.text"},"ts":1257458642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Javascript only has a single numbe type","msgtype":"m.text"},"ts":1257458643000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that one type is double","msgtype":"m.text"},"ts":1257458700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Lachy: pong","msgtype":"m.text"},"ts":1257458701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I guess it's possible","msgtype":"m.text"},"ts":1257458702000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Compare perl -le'print 100*(unpack f => pack f => 42/100)-42' vs perl -le'print 100*(unpack F => pack F => 42/100)-42'","msgtype":"m.text"},"ts":1257458703000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(First (single precision) says -1.31130218505859e-06, second (double precision) says 0)","msgtype":"m.text"},"ts":1257458704000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie, nevermind. Was just wondering whether you were going to be coming to this meeting","msgtype":"m.text"},"ts":1257458705000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Dashiva: Right, I mean there is only one type, not that it is single precision","msgtype":"m.text"},"ts":1257458706000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh wait my argument is wrong","msgtype":"m.text"},"ts":1257458760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"listen to Philip` ","msgtype":"m.text"},"ts":1257458761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Well, of course, Philip`'s argument is inevitably better.","msgtype":"m.text"},"ts":1257458820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It could be wrong, though","msgtype":"m.text"},"ts":1257458940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1257459000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nobody will notice, though. That's how good your argument is.","msgtype":"m.text"},"ts":1257459060000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I just like using Perl's fat comma","msgtype":"m.text"},"ts":1257459120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.google.co.uk/search?q=%22your+comma%27s+so+fat%22 - hmm, a sadly missed opportunity for Perl syntax related humour","msgtype":"m.text"},"ts":1257459660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"quick daft question, if I want to quote my attributes, is it <video controls=\"controls\"> or <video controls=\"true\">","msgtype":"m.text"},"ts":1257461160000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"or it doesn't make any difference?","msgtype":"m.text"},"ts":1257461161000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"remysharp: The attribute works just by being present","msgtype":"m.text"},"ts":1257461340000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"that's what I figured","msgtype":"m.text"},"ts":1257461341000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"is there a \"best practise\" for quoted attribs - ","msgtype":"m.text"},"ts":1257461342000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"I think that's using the attribute name","msgtype":"m.text"},"ts":1257461343000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I thought it was to repeat the key in the value","msgtype":"m.text"},"ts":1257461344000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"or \"xhtml\" type sytnax","msgtype":"m.text"},"ts":1257461400000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"remysharp: <video controls=\"\">","msgtype":"m.text"},"ts":1257461580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"really? that doesn't look very \"xhtml\"ly","msgtype":"m.text"},"ts":1257461581000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"is equivalent to <video controls> and therefore works and is allowed","msgtype":"m.text"},"ts":1257461582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1257461583000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#boolean-attributes","msgtype":"m.text"},"ts":1257461640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"remysharp: If you're doing HTML syntax, just do the plain name.  It's the easiest and works great.","msgtype":"m.text"},"ts":1257461641000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm looking for the syntax that matches the <option selected=\"selected\"> type of syntax from xhtml","msgtype":"m.text"},"ts":1257461642000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"checking your link","msgtype":"m.emote"},"ts":1257461643000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"<option selected>","msgtype":"m.text"},"ts":1257461644000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"If the attribute is present, its value must either be the empty string or a value that is an ASCII case-insensitive match for the attribute's canonical name, with no leading or trailing whitespace.\"","msgtype":"m.text"},"ts":1257461645000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1257461646000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"thanks for that","msgtype":"m.text"},"ts":1257461647000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"so it's either \"\" or controls=\"controls\"","msgtype":"m.text"},"ts":1257461700000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1257461701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ta :)","msgtype":"m.text"},"ts":1257461702000,"senderName":"remysharp","senderId":"remysharp@irc"},
{"content":{"body":"If you need a value, yeah.","msgtype":"m.text"},"ts":1257461703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or controls=\"CoNtRoLs\" if you fancy","msgtype":"m.text"},"ts":1257461704000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1257461705000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"<p leettext=\"lEeTtExT\">","msgtype":"m.text"},"ts":1257461760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"note that you can write selected=\"\" in XHTML too","msgtype":"m.text"},"ts":1257461880000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"way shorter","msgtype":"m.text"},"ts":1257461881000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hi, why does the html sanitizer from http://code.google.com/p/html5lib/source/browse/python/src/html5lib/sanitizer.py","msgtype":"m.text"},"ts":1257464040000,"senderName":"j^","senderId":"j^@irc"},
{"content":{"body":"not include html5 tags","msgtype":"m.text"},"ts":1257464041000,"senderName":"j^","senderId":"j^@irc"},
{"content":{"body":"like video and audio","msgtype":"m.text"},"ts":1257464100000,"senderName":"j^","senderId":"j^@irc"}
]