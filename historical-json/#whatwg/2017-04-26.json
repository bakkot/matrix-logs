[
{"content":{"body":"I have a question about if something has been, or perhaps would be, considered for the Notifications API. I think the implicit accessibility provided by such an API makes it an appealing way for web apps to display notifications for when async actions have succedded or failed without having to go through making an HTML element accessible themselves. Thing is, I just realized that Nofications don't seem to display when users are in \"Do Not Dist","msgtype":"m.text"},"ts":1493180700000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"but my question is this. Would it make sense for the Notifications API to support some sort of \"assertive\" option that notifies them anyways? I understand this could be abused, but I think there may be ways to circuvment that (it only works if hte notification was dispatched from something like a \"click\" event)","msgtype":"m.text"},"ts":1493180700000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"jpdevries: in that case could you not just display something in the app?","msgtype":"m.text"},"ts":1493182051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ya certainly, but I think of the Notifications API as being nice for this as it comes with implicit accessibility.","msgtype":"m.text"},"ts":1493182183000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"but maybe i'm just being lazy ;)","msgtype":"m.text"},"ts":1493182762000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"Notifications are never going to be a guarantee","msgtype":"m.text"},"ts":1493183028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I personally have most of m disabled","msgtype":"m.text"},"ts":1493183053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's good to know. for some reason, i expected a notification from an interface i'm interacting with to be more than prominent than like, a news notification. but i see now it makes sense they wouldn't be guaranteed","msgtype":"m.text"},"ts":1493183159000,"senderName":"jpdevries","senderId":"jpdevries@irc"},
{"content":{"body":"annevk: !","msgtype":"m.text"},"ts":1493191581000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: please don't go away from the suborigin discussion","msgtype":"m.text"},"ts":1493191588000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: I have the feeling my input is not getting duly considered, if that makes sense","msgtype":"m.text"},"ts":1493191745000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: or maybe my questions can only be addressed by mkwst?","msgtype":"m.text"},"ts":1493191767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: there's a lot of activity on the minutia, but high-level design questions just linger","msgtype":"m.text"},"ts":1493191825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just took this work over from jww, so I'm still ramping up","msgtype":"m.text"},"ts":1493191888000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: one question I've had since the start for instance is how this would deal with permissions and nobody has really given me a concrete answer thus far","msgtype":"m.text"},"ts":1493191889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: say I grant example.com the ability to do notifications, does example.com/suborigin1 get them too? If not, how does it ask for permissions without confusing the user?","msgtype":"m.text"},"ts":1493191949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: from my point of view, I'd like to hide the fact that suborigins are a thing from users, so I'd grant all suborigins the permission if the origin has it","msgtype":"m.text"},"ts":1493191995000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: and a suborigin would ask on behalf of the origin too?","msgtype":"m.text"},"ts":1493192045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1493192069000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: I think that model makes sense, but mkwst and jww gave different answers at times","msgtype":"m.text"},"ts":1493192072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's possible :)","msgtype":"m.text"},"ts":1493192105000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"so, how can we make sure that esp. the platform affecting / security model changes are understood?","msgtype":"m.text"},"ts":1493192126000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"we've scheduled an update for the next WebAppSec phonecall, and I wanted to sync with devd before","msgtype":"m.text"},"ts":1493192160000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I think a good first step is to file \"Suborigin integration\" issues against all standards that are affected","msgtype":"m.text"},"ts":1493192174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe it makes sense for you to join the sync as well?","msgtype":"m.text"},"ts":1493192192000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"So more people know this is a thing and can try to think through the implications","msgtype":"m.text"},"ts":1493192195000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good point","msgtype":"m.text"},"ts":1493192210000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I expect that that's HTML for postMessage / MessageEvent & window.origin & origin definition","msgtype":"m.text"},"ts":1493192246000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"is CORS handled as part of fetch now?","msgtype":"m.text"},"ts":1493192264000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: yes, CORS is in Fetch","msgtype":"m.text"},"ts":1493192373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I'd rather not join a call, happy to study things async","msgtype":"m.text"},"ts":1493192400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I'd expect issues against HTML, Fetch, Cookies (no idea where that is tracked though, private mkwst repo?), and maybe URL","msgtype":"m.text"},"ts":1493192460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, for cookies, the idea is to mark a browsing context in a suborigin as cookie-averse","msgtype":"m.text"},"ts":1493192494000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that one seems straight forward","msgtype":"m.text"},"ts":1493192503000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"permissions would also be part of HTML?","msgtype":"m.text"},"ts":1493192512000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: what about same-origin cookies?","msgtype":"m.text"},"ts":1493192523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: permissions is https://w3c.github.io/permissions/","msgtype":"m.text"},"ts":1493192543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: presumably you'd want same-suborigin cookies for the same reason we introduced same-origin cookies","msgtype":"m.text"},"ts":1493192568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the main problem is that on the first request, the browser doesn't know which suborigin to expect","msgtype":"m.text"},"ts":1493192595000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: although maybe that isn't possible since the suborigin is not known at the time of request","msgtype":"m.text"},"ts":1493192599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1493192603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so we could either send all cookies (but that's potentially a large list) or none and rerequest the URL after the suborigin header was recevied (but that's slow)","msgtype":"m.text"},"ts":1493192624000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: so I think we'll just not have suborigin specific cookies, and document.cookies will not return any cookies for js","msgtype":"m.text"},"ts":1493192642000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: if https://wicg.github.io/origin-policy/ is a thing we could make it known ahead of time in theory","msgtype":"m.text"},"ts":1493192655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1493192675000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"my feeling is that we might be able to punt that until there are actually sites that would need that","msgtype":"m.text"},"ts":1493192694000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"it seems that the cases we have so far would work with monkey patching document.cookie to store stuff in localStorage","msgtype":"m.text"},"ts":1493192719000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and cookies set by the server would still be transmitted since we don't know about suborigins at time of request","msgtype":"m.text"},"ts":1493192785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1493192799000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"all other storage things, however, would be per suborigin","msgtype":"m.text"},"ts":1493192815000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"e.g. IDB, localStorage, web database","msgtype":"m.text"},"ts":1493192821000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Ah, I missed IDB in the list above of needing integration","msgtype":"m.text"},"ts":1493192898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe https://storage.spec.whatwg.org/ needs to take this into account somehow too","msgtype":"m.text"},"ts":1493192934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Even if you get the persistent permission for an entire origin, applications might want to persist on a per-suborigin basis","msgtype":"m.text"},"ts":1493192957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I think part of the problem is that a lot of the motivation is upgrading legacy apps, but not moving them to a subdomain; so it's unclear if we're just adding a lot of complexity to the platform for legacy apps, or if there's also forward looking reasons for all this","msgtype":"m.text"},"ts":1493193074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not just about legacy apps","msgtype":"m.text"},"ts":1493193109000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"one reason that folks don't want to move stuff to subdomains is that they don't want to prompt users N times for the same permission","msgtype":"m.text"},"ts":1493193137000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"but it's a fair point","msgtype":"m.text"},"ts":1493193149000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"dglazkov: if you enable comments on https://docs.google.com/document/d/18qpNBY3Xm2svzBSAgOJk_Kkb_iRJXCsZQO4Oa3wv3n4/edit I might correct some typos","msgtype":"m.text"},"ts":1493193153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: ah permissions, of course; I guess that at least provides sufficient motivation to make this work well and solve all the edge cases too","msgtype":"m.text"},"ts":1493193237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I started a discussion on public-webappsec about introducing a concept of site affiliation","msgtype":"m.text"},"ts":1493193390000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"maybe via origin policy","msgtype":"m.text"},"ts":1493193396000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that would be another option to share permissions with multiple sites","msgtype":"m.text"},"ts":1493193412000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"the downside is that we didn't ask the user whether to grant a permission for the current origin and all affiliated sites","msgtype":"m.text"},"ts":1493193435000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I unsubscribed from public-webappsec since it had too many announcement emails","msgtype":"m.text"},"ts":1493193478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I don't think we could just pass on permissions without re-prompting, and the prompt would probably look odd (including a potentially long list of domains), and what should we do if the list of affiliated sites changes","msgtype":"m.text"},"ts":1493193499000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"In principle a top-level site can already share permissions with anyone it embeds without telling the user","msgtype":"m.text"},"ts":1493193557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But only for the duration of that visit","msgtype":"m.text"},"ts":1493193593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, not sure I have any good suggestions there, UX for that would be really tough","msgtype":"m.text"},"ts":1493193612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Permissions UX is already impossibly hard to get right","msgtype":"m.text"},"ts":1493193624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so anyways","msgtype":"m.text"},"ts":1493193682000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"I've noted filing issues on my todo list","msgtype":"m.text"},"ts":1493193692000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"might not happen this week, as I'm at a conference","msgtype":"m.text"},"ts":1493193708000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Thanks, and enjoy the conf","msgtype":"m.text"},"ts":1493193777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I'm here now","msgtype":"m.text"},"ts":1493196039000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I took a decision myself. :)","msgtype":"m.text"},"ts":1493196054000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: I am currently splitting the tests in unitless-length.html,","msgtype":"m.text"},"ts":1493196069000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: to test per property and per quirky value,","msgtype":"m.text"},"ts":1493196076000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"instead of grouping all properties in a single quirky value test.","msgtype":"m.text"},"ts":1493196085000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: (╯°□°）╯︵ ┻━┻","msgtype":"m.text"},"ts":1493196091000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"You don't like that? :(","msgtype":"m.text"},"ts":1493196101000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: just kidding :-)","msgtype":"m.text"},"ts":1493196109000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ah. :)","msgtype":"m.text"},"ts":1493196111000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"sounds good","msgtype":"m.text"},"ts":1493196129000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Surprisingly,","msgtype":"m.text"},"ts":1493196174000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: with the quirk in Servo, I expected unrelated tests to pass,","msgtype":"m.text"},"ts":1493196188000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"tests that would have been using the quirk syntax by mistake,","msgtype":"m.text"},"ts":1493196197000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"turns out they were not, and I should not expect the worst of wpt. :P","msgtype":"m.text"},"ts":1493196210000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"there were not*","msgtype":"m.text"},"ts":1493196230000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Too many rebases break my English.","msgtype":"m.text"},"ts":1493196235000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hehe, well good then that there are tests specifically for unitless","msgtype":"m.text"},"ts":1493196260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yep, Servo all passes them, except for some top/bottom failures specific to macOS, unrelated to the quirk itself.","msgtype":"m.text"},"ts":1493196392000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: so for {input:\"-\\\\31 \"}, the test expects it to not be applied, no?","msgtype":"m.text"},"ts":1493196408000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Btw, https://github.com/servo/servo/pull/16609/commits/b60049cbfc2f38aa4d2294a98a61d720df807d63","msgtype":"m.text"},"ts":1493197099000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Yes, these don't parse.","msgtype":"m.text"},"ts":1493197105000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1493198834000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: heya","msgtype":"m.text"},"ts":1493199088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: 👍","msgtype":"m.text"},"ts":1493199175000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Can you confirm that /html/semantics/interactive-elements/the-dialog-element/centering.html is totally unrelated to that quirk?","msgtype":"m.text"},"ts":1493201341000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yes. that doesn't use unitless values and doesn't use quirks mode","msgtype":"m.text"},"ts":1493201574000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Thanks.","msgtype":"m.text"},"ts":1493201922000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: how is https://drafts.csswg.org/cssom-view/#dom-mouseevent-offsetx supposed to work if event is re-dispatched","msgtype":"m.text"},"ts":1493207147000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: basically that needs to be defined as part of the MouseEvent definition and dispatch itself","msgtype":"m.text"},"ts":1493207543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: the current approach doesn't really work","msgtype":"m.text"},"ts":1493207555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not necessarily","msgtype":"m.text"},"ts":1493207557000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1493207559000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but the second dispatch could also just keep using pageX/Y","msgtype":"m.text"},"ts":1493207571000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"zcorpan: looks like blink doesn't follow the pageX/Y behavior","msgtype":"m.text"},"ts":1493207742000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: hmm. IIRC there's an open bug about the check for the dispatch flag being bogus","msgtype":"m.text"},"ts":1493209537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I filed couple of bugs","msgtype":"m.text"},"ts":1493209572000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: ok. i don't have this paged in right now and don't have a particular opinion about how it should work (other than it should be web compatible and interoperable)","msgtype":"m.text"},"ts":1493209705000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the testcase didn't work in Edge, so don't know yet what it does","msgtype":"m.text"},"ts":1493209732000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"zcorpan: I have a question.","msgtype":"m.text"},"ts":1493210220000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Would unitless-length.html still work if it used position:absolute?","msgtype":"m.text"},"ts":1493210238000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Trying to understand why I have intermittent failures in Servo and how to limit them.","msgtype":"m.text"},"ts":1493210253000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah i think absolute would work as well. everything still passes in chromium with that change","msgtype":"m.text"},"ts":1493210416000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: That being said,","msgtype":"m.text"},"ts":1493210445000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I have intermittents in the color quirk test too, so...","msgtype":"m.text"},"ts":1493210455000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: you awake?","msgtype":"m.text"},"ts":1493211480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: reading email in bed, but yeah","msgtype":"m.text"},"ts":1493211515000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do we want to test the various views?","msgtype":"m.text"},"ts":1493211553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it seems we need to generalize testSharingViaIncrementerScript and then update all callsites","msgtype":"m.text"},"ts":1493211571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: looking at SAB tests","msgtype":"m.text"},"ts":1493211621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I got a bit lazy on that... It'd be ideal to test one typed array, DataView, and maybe { nested: { view: [ta] } }","msgtype":"m.text"},"ts":1493211663000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the shared incrementer would probably be the right way to test, yeah.","msgtype":"m.text"},"ts":1493211699000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyone here experienced with websockets?","msgtype":"m.text"},"ts":1493211933000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Domenic: there were a couple of places I was surprised you didn't just pass the view to postMessage() as a way to get some variety, though they didn't seem super easy to change either","msgtype":"m.text"},"ts":1493211996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'll have a look to see how far I get with adding some at least","msgtype":"m.text"},"ts":1493212023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I also left a couple of basic questions in the PR","msgtype":"m.text"},"ts":1493212030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, getting to them now","msgtype":"m.text"},"ts":1493212070000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm experiencing an issue where wss.send(\"perkele\".repeat(9)) from a browser works just fine according to the frame spec as outlined in the rfc, but wss.send(\"perkele\".repeat(10)) results in garbage","msgtype":"m.text"},"ts":1493212108000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"zcorpan: Do you see any way to test the quirk without using getComputedStyle?","msgtype":"m.text"},"ts":1493212379000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Emil: sounds like you hit a bug of sorts","msgtype":"m.text"},"ts":1493212704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: might be worth checking bufferedAmount but with such small amounts of data there really shouldn't be a problem","msgtype":"m.text"},"ts":1493212807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Could we use data: URLs for the iframes contents, instead of using open/write/close?","msgtype":"m.text"},"ts":1493212870000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: not same-origin","msgtype":"m.text"},"ts":1493212938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: that would get an opaque origin so the script couldn't getComputedStyle in it. would need postMessage?","msgtype":"m.text"},"ts":1493212941000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Oh right.","msgtype":"m.text"},"ts":1493212944000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"could use srcdoc maybe?","msgtype":"m.text"},"ts":1493212952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Seems like our issue is that we reflow problems and we should wait for the iframe's load event.","msgtype":"m.text"},"ts":1493212964000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"srcdoc is always standards mode","msgtype":"m.text"},"ts":1493212964000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Do you mind if I patch the tests to do this?","msgtype":"m.text"},"ts":1493212975000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: to do what?","msgtype":"m.text"},"ts":1493212998000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh wait for onload","msgtype":"m.text"},"ts":1493213028000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Run the tests in q.contentWindow.onload or something.","msgtype":"m.text"},"ts":1493213033000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"SGTM","msgtype":"m.text"},"ts":1493213045000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"could add a separate test for calling getComputedStyle during page load, if that's buggy?","msgtype":"m.text"},"ts":1493213077000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: my buffer is 4k in size","msgtype":"m.text"},"ts":1493213149000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"which means it shouldn't break at that :/","msgtype":"m.text"},"ts":1493213168000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: clearly the issue is you're swearing repeatedly in the message :-P","msgtype":"m.text"},"ts":1493213245000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hehe","msgtype":"m.text"},"ts":1493213334000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"if only :/","msgtype":"m.text"},"ts":1493213339000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: I meant webSocketInstance.bufferedAmount, if that wasn't clear","msgtype":"m.text"},"ts":1493213351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Emil: does it happen in all browsers?","msgtype":"m.text"},"ts":1493213361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1493213457000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"meaining I'm doing something wrong","msgtype":"m.text"},"ts":1493213463000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: so perkele * 9 is 63. perkele * 10 is 70, which means it won't fit in a \"small\" frame, and will instead use extended payload length","msgtype":"m.text"},"ts":1493213488000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Emil: does the server implementation support such frames?","msgtype":"m.text"},"ts":1493213505000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: but isn't the limit 125 bytes?","msgtype":"m.text"},"ts":1493213513000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"and anycase, yeah, I have extended payload length support","msgtype":"m.text"},"ts":1493213548000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: huh yeah. I thought it was 64 or something. ok","msgtype":"m.text"},"ts":1493213573000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Is there a situation in which the ws frames don't adhere to the 2 byte header, 0/2/8 bytes extended payload, 4 bytes mask, payload-data","msgtype":"m.text"},"ts":1493213643000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"from browser to server","msgtype":"m.text"},"ts":1493213660000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"zcorpan: https://github.com/servo/servo/pull/16618#issuecomment-297409757 Hah!","msgtype":"m.text"},"ts":1493213686000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No need to change the test, just ping the right person on IRC. :P","msgtype":"m.text"},"ts":1493213694000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(The link was supposed to be to a PR, not a comment in it.)","msgtype":"m.text"},"ts":1493213705000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Emil: messages could be fragmented into multiple frames, but i think shouldn't happen for such short messages","msgtype":"m.text"},"ts":1493213753000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: but they still follow the frame format","msgtype":"m.text"},"ts":1493213762000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1493213768000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1493213768000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"And because I am only reading frames","msgtype":"m.text"},"ts":1493213776000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"that shouldn't be an issue","msgtype":"m.text"},"ts":1493213781000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: do you know what goes over the wire? (I guess easier to debug without TLS)","msgtype":"m.text"},"ts":1493213918000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hm?","msgtype":"m.text"},"ts":1493213984000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"I am capturing the raw data in C","msgtype":"m.text"},"ts":1493213991000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"nginx is stripping the TLS off","msgtype":"m.text"},"ts":1493214001000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: ok. so what data do you get?","msgtype":"m.text"},"ts":1493214013000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"here's a raw dump https://emil.fi/jako/koodi/ws_dump_2017-04-26_15:56:14_+0300_4","msgtype":"m.text"},"ts":1493214033000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"that's the data received through the socket without the HTTP handshake","msgtype":"m.text"},"ts":1493214092000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"I can add the HTTP handshake, too, if required","msgtype":"m.text"},"ts":1493214103000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Domenic: I'm probably not going to get to generalizing the tests today after all :/","msgtype":"m.text"},"ts":1493214248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Any success?","msgtype":"m.text"},"ts":1493214648000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Emil: I don't have a websocket implementation at hand to run it through... I started comparing the bits with the spec's framing but that isn't very efficient ^_^","msgtype":"m.text"},"ts":1493214811000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Emil: the first byte looks OK right?","msgtype":"m.text"},"ts":1493214834000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I get just fine data with a message like: 2017-04-26 16:54:05.617 +0300 perkele","msgtype":"m.text"},"ts":1493214862000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"or perkele repeated 9 times","msgtype":"m.text"},"ts":1493214867000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"but perkele repeated 10 times and it breaks :D","msgtype":"m.text"},"ts":1493214876000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"hmm, I'll write a ws decoder","msgtype":"m.text"},"ts":1493214937000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"for files","msgtype":"m.text"},"ts":1493214942000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"very curious. dooes browser's devtools help? (opera 12 had reasonable error messages in the console, but i guess they only help if the client receives something unexpected)","msgtype":"m.text"},"ts":1493215012000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No, they don't show the actual raw data","msgtype":"m.text"},"ts":1493215184000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"just payload","msgtype":"m.text"},"ts":1493215186000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1493217008000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1493224992000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"shame on me","msgtype":"m.text"},"ts":1493224995000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"next time have the right god damn masks you smarty pants","msgtype":"m.text"},"ts":1493225031000,"senderName":"Emil","senderId":"Emil@irc"},
{"content":{"body":"Domenic: you okay with me reintroducing the BroadcastChannel test I wrote?","msgtype":"m.text"},"ts":1493226843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'll look into abstracting for multiple views tomorrow","msgtype":"m.text"},"ts":1493226869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and update the corresponding shared memory blog post","msgtype":"m.text"},"ts":1493226886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: anything else?","msgtype":"m.text"},"ts":1493226892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven't looked at the Broadcast channel spec fix yet but I assume you got it right there. That does sound like all we need. Maybe I'll rebase and do a last review of the remaining PR.","msgtype":"m.text"},"ts":1493227705000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the remaining PR is already rebased and was already reviewed I think","msgtype":"m.text"},"ts":1493227788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but we don't have the various view tests","msgtype":"m.text"},"ts":1493227803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: which should be doable, just some abstraction work and making sure everything still runs after the changes have been made","msgtype":"m.text"},"ts":1493227827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I meant the spec PR","msgtype":"m.text"},"ts":1493227827000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yes, I did too","msgtype":"m.text"},"ts":1493227837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah ok","msgtype":"m.text"},"ts":1493227842000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Note you can test in Chrome by flipping an extra flag in about:flags","msgtype":"m.text"},"ts":1493227869000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah okay","msgtype":"m.text"},"ts":1493227881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: have you been in contact with Constellation, jonco, Edge folks about <script type=module> spec issues?","msgtype":"m.text"},"ts":1493230844000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: you mean the bugfixes around errors and such? Not really, sorry to say.","msgtype":"m.text"},"ts":1493230871000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: makes me a little uneasy","msgtype":"m.text"},"ts":1493230888000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: my view was that we were working out all the bugs, nothing controversial, and it'd be nicer to present them with a \"hey we fixed all the bugs and have tests\" instead of keeping them incrementally updated. But maybe more communication would be good.","msgtype":"m.text"},"ts":1493230932000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that seems fine too","msgtype":"m.text"},"ts":1493230997000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I don't think most of the issues so far are controversial","msgtype":"m.text"},"ts":1493231006000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I'm mostly curious whether any of them even noticed any of this","msgtype":"m.text"},"ts":1493231018000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"jesus, firefox just installed an update automatically even though I have that turned off","msgtype":"m.text"},"ts":1493247705000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's a name for programs that install remote code on your computer without permission, and it's not \"browser\"","msgtype":"m.text"},"ts":1493247755000,"senderName":"zewt","senderId":"zewt@irc"}
]