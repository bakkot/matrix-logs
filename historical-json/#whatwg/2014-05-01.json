[
{"content":{"body":"death to target=_blank.","msgtype":"m.text"},"ts":1398902630000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: that did always seem like a dumb idea","msgtype":"m.text"},"ts":1398902967000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"MikeSmith: I submitted a couple of webkit patches for error handling: https://bugs.webkit.org/show_bug.cgi?id=132407 and https://bugs.webkit.org/show_bug.cgi?id=132412","msgtype":"m.text"},"ts":1398903772000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: cool","msgtype":"m.text"},"ts":1398903831000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"takes a look","msgtype":"m.emote"},"ts":1398903844000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that should make WK turn green for 4 more tests","msgtype":"m.text"},"ts":1398903958000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: excellent","msgtype":"m.text"},"ts":1398904080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"cabanier: thanks for taking time on the testing stuff, and raising the bugs, and the patches","msgtype":"m.text"},"ts":1398904173000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hober: i'm not sure what that is saying :-|","msgtype":"m.text"},"ts":1398906894000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cabanier: trybots are indicating that test is still failing, right?","msgtype":"m.text"},"ts":1398907434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25521 is a bit unsettling","msgtype":"m.text"},"ts":1398907687000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not that I disagree with the rationale","msgtype":"m.text"},"ts":1398907701000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's just, if we end up changing the platform do the point where authors can't get any useful linting/static-checking feedback done on their markup sources, that would suck","msgtype":"m.text"},"ts":1398907787000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"leading eventually to total societal breakdown","msgtype":"m.text"},"ts":1398907885000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"In accordance with prophecy\"","msgtype":"m.text"},"ts":1398907893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes, I missed some tests","msgtype":"m.text"},"ts":1398908024000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: ah ok","msgtype":"m.text"},"ts":1398908037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i have no idea what that bug is saying","msgtype":"m.text"},"ts":1398908174000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: web components aren't valid in html currently. i presume that the web components people have some sort of solution for that, e.g. via the inheritance thing (<tr is=\"my-fancy-tr\">)","msgtype":"m.text"},"ts":1398908244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"For these reasons, all of these content model rules should probably be discarded entirely\" it says","msgtype":"m.text"},"ts":1398908248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what's the wiki syntax for external links?","msgtype":"m.text"},"ts":1398908250000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"i need to put a period after a link and i don't want it to be included in the link","msgtype":"m.text"},"ts":1398908266000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"Hixie: I think you're being generous in that assumption ;-)","msgtype":"m.text"},"ts":1398908274000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that seems like a non-starter. I mean, we can't make <p><html> valid, it would never do anything understandable.","msgtype":"m.text"},"ts":1398908282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"eligrey: it's just metawiki syntax, I think","msgtype":"m.text"},"ts":1398908289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"eligrey: [#FooBar] or such","msgtype":"m.text"},"ts":1398908311000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"same for extenal links?","msgtype":"m.text"},"ts":1398908324000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"i don't edit wikipedia, sorry :p","msgtype":"m.text"},"ts":1398908329000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"eligrey: oh external","msgtype":"m.text"},"ts":1398908337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"eligrey: [http://foo link text here] I think","msgtype":"m.text"},"ts":1398908358000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1398908363000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"the wiki markup thing gives me a list of all the different types of markup","msgtype":"m.text"},"ts":1398908408000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"you would think hovering over each item would give me a description, but no","msgtype":"m.text"},"ts":1398908421000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"they all say \"Click on the character or tag to insert it into the edit window\"","msgtype":"m.text"},"ts":1398908425000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"so helpful :)","msgtype":"m.text"},"ts":1398908434000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"MikeSmith: anyways thanks for that","msgtype":"m.text"},"ts":1398908443000,"senderName":"eligrey","senderId":"eligrey@irc"},
{"content":{"body":"wikis all suck","msgtype":"m.text"},"ts":1398908446000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"eligrey: np","msgtype":"m.text"},"ts":1398908451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: yeah I guess in the proposed regime there'd still need to be a few prohibitions on markup that just would never make sense","msgtype":"m.text"},"ts":1398908616000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: but the bug seems pretty clear to meãƒ¼she's saying that the \"optionally a caption element, followed by zero or more colgroup elements, followed optionally by a thead element, followed optionally by a tfoot element, followed by either zero or more tbody elements or one or more tr elements, followed optionally by a tfoot element (but there can only be one tfoot element child in total), optionally intermixed with one or more script-supporting elem","msgtype":"m.text"},"ts":1398908652000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1398908658000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well anyway, that part","msgtype":"m.text"},"ts":1398908665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"your comment cut off in the middle of the spec quote","msgtype":"m.text"},"ts":1398908679000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"she's saying that's too constrained in the face of web components","msgtype":"m.text"},"ts":1398908685000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: was just quoting the spec, nothing more","msgtype":"m.text"},"ts":1398908715000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hadn't meant to quote the whole thing","msgtype":"m.text"},"ts":1398908725000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah k","msgtype":"m.text"},"ts":1398908729000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think that's right","msgtype":"m.text"},"ts":1398908754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"was going to put some ellipsis in there, since I'm pretty sure you're familiar somewhat with the part that follows","msgtype":"m.text"},"ts":1398908759000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean, sure, you'll want to allow elements to override <tr>, etc","msgtype":"m.text"},"ts":1398908765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1398908770000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but those elements still need to be real <tr>s at some level","msgtype":"m.text"},"ts":1398908778000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as in is=\"\"","msgtype":"m.text"},"ts":1398908780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or some similar solution","msgtype":"m.text"},"ts":1398908784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah I guess it would help there if she could give an actually markup example","msgtype":"m.text"},"ts":1398908897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll post a comment","msgtype":"m.text"},"ts":1398908902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wait she did","msgtype":"m.text"},"ts":1398908915000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/angular/angular.js/issues/7295","msgtype":"m.text"},"ts":1398908923000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1398908927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh geez man","msgtype":"m.text"},"ts":1398908949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's about the parser","msgtype":"m.text"},"ts":1398908949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not the content models","msgtype":"m.text"},"ts":1398908953000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1398908953000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bingo","msgtype":"m.text"},"ts":1398908957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1398908961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's amazing how many people confuse those two things","msgtype":"m.text"},"ts":1398909077000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, that's not a criticism or anything","msgtype":"m.text"},"ts":1398909090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm honestly just amazed at how confusing this apparently is","msgtype":"m.text"},"ts":1398909099000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so do you think there's an opportunity to rephrase and/or add additional examples to the spec","msgtype":"m.text"},"ts":1398909243000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"there's always the opportunity to rephrase and add examples","msgtype":"m.text"},"ts":1398909294000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"post suggestions to http://whatwg.org/newbug :-)","msgtype":"m.text"},"ts":1398909306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"correct, but i would say that if \"this\" is an issue which has confused \"many people\", that might bump this opportunity higher on the priority list.","msgtype":"m.text"},"ts":1398909355000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"oh, that particular issue","msgtype":"m.text"},"ts":1398909420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's already entire sections that try to explain it","msgtype":"m.text"},"ts":1398909433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think teh confusion is mostly amongst people who haven't read the spec","msgtype":"m.text"},"ts":1398909441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the parsing behavior is just inherently confusing","msgtype":"m.text"},"ts":1398909659000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that too","msgtype":"m.text"},"ts":1398909669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and even when you read the spec, you don't want to believe that's how things actually work","msgtype":"m.text"},"ts":1398909688000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it's the way people assume the content models have anything to do with that which is what i'm mostly talking about","msgtype":"m.text"},"ts":1398909696000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because, how dumb would that be, for people to create something that works that way","msgtype":"m.text"},"ts":1398909711000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: yeah","msgtype":"m.text"},"ts":1398909718000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: maybe we could put some icon there","msgtype":"m.text"},"ts":1398909737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like the fingerprinting icon","msgtype":"m.text"},"ts":1398909744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to say, this is not a UA requirements","msgtype":"m.text"},"ts":1398909753000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suggest this icon: https://avatars2.githubusercontent.com/u/568252?s=140","msgtype":"m.text"},"ts":1398909810000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"argh! stupid firefox :( crashes on the single page spec page. haha MikeSmith","msgtype":"m.text"},"ts":1398909850000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"MikeSmith: well, that's what developers.whatwg.org is supposed to be, really","msgtype":"m.text"},"ts":1398909876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my firefox doesn't crash on it, just takes a long time to load","msgtype":"m.text"},"ts":1398909879000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: true","msgtype":"m.text"},"ts":1398909887000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: but the problem is people assume that the authoring requirements _are_ UA requirements","msgtype":"m.text"},"ts":1398909894000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1398909900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i mean, it's UA requirements this contributor is looking for","msgtype":"m.text"},"ts":1398909904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so saying \"don't look here, this is for UAs\" might even be what is making them look at content models","msgtype":"m.text"},"ts":1398909917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe we need a version with all the authoring requirements suppressed, and just have the UA requirements","msgtype":"m.text"},"ts":1398909930000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seriously","msgtype":"m.text"},"ts":1398909933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that would be... interesting","msgtype":"m.text"},"ts":1398909967000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which I realize might require marking stuff with class=author","msgtype":"m.text"},"ts":1398909969000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"a lot of work to do though","msgtype":"m.text"},"ts":1398909970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1398909974000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember when you did the class=impl change","msgtype":"m.text"},"ts":1398909986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's a pretty deep difference between implementation requirements and conformance criteria, the normative language that basically says \"you must do this (but if you don't, everything will still work in a precisely defined way)\" has always felt like a bad use of \"must\" to me","msgtype":"m.text"},"ts":1398910375000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"don't really know how it could be fixed...","msgtype":"m.text"},"ts":1398910410000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: well the \"Content model\" sections don't contain any musts anyway","msgtype":"m.text"},"ts":1398910562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or anything else normative-ish looking","msgtype":"m.text"},"ts":1398910576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, i just have one \"must\" in the definition of \"content model\"","msgtype":"m.text"},"ts":1398910592000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1398910605000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders which","msgtype":"m.emote"},"ts":1398910609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"content model. A normative description of what content must be included as children and descendants of the element.\"","msgtype":"m.text"},"ts":1398910637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, replying to authoring requirements vs. UA requirements","msgtype":"m.text"},"ts":1398910651000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's actually redundant with \"An HTML element must have contents that match the requirements described in the element's content model.\" a few paragraphs later","msgtype":"m.text"},"ts":1398910673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: as another data point about the confusion: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25501","msgtype":"m.text"},"ts":1398911249000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"confusion about \"content models\" vs types of content (flow, phrasing, etc.)","msgtype":"m.text"},"ts":1398911338000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and asking that \"empty\" be defined as a content type","msgtype":"m.text"},"ts":1398911389000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah it is confusing","msgtype":"m.text"},"ts":1398911434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's a different problem. That's the problem of people who forget the english language while reading the spec. :-P","msgtype":"m.text"},"ts":1398911509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not so fair, man :-)","msgtype":"m.text"},"ts":1398912496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"come on, that bug is basically just the guy saying he doesn't know what \"empty\" means","msgtype":"m.text"},"ts":1398912519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's kind of terms-of-art usage of English","msgtype":"m.text"},"ts":1398912527000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: yeah true in that case","msgtype":"m.text"},"ts":1398912540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it does come down to that","msgtype":"m.text"},"ts":1398912553000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i guess the real problem is assuming that a word is a term of art when it's just english","msgtype":"m.text"},"ts":1398912565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm yeah","msgtype":"m.text"},"ts":1398912577000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but i don't know what else the term would mean","msgtype":"m.text"},"ts":1398912585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sometimes empty just means empty","msgtype":"m.text"},"ts":1398912586000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1398912592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there is the void vs empty thing though","msgtype":"m.text"},"ts":1398912609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well \"void\" doesn't mean anything clear, so assuming it's a term of art seems reasonable :-)","msgtype":"m.text"},"ts":1398912630000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is good, and an improvement over what we had before","msgtype":"m.text"},"ts":1398912631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1398912637000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sweet lord there's a lot of script data states","msgtype":"m.text"},"ts":1398917378000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"+1 for a for-UAs version of the spec, containing the actually-normative stuff.","msgtype":"m.text"},"ts":1398918715000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hixie: aaah, we already have listener observation of sorts with http://xhr.spec.whatwg.org/#upload-events-flag","msgtype":"m.text"},"ts":1398936640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"feels bad","msgtype":"m.emote"},"ts":1398936647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i wonder if it would be web-compat to change that to \"set the upload events flag if the xhr.upload property has been accessed\"","msgtype":"m.text"},"ts":1398952376000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: possible","msgtype":"m.text"},"ts":1398952428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's also http://xhr.spec.whatwg.org/#garbage-collection","msgtype":"m.text"},"ts":1398952448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a different sort of lameness, but maybe a lesser one","msgtype":"m.text"},"ts":1398952450000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that seems okay, i think...","msgtype":"m.text"},"ts":1398952496000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(also a little weird that accessing .upload would mean requests complete even if you throw away the object when they wouldn't otherwise, but not catastrophic)","msgtype":"m.text"},"ts":1398952531000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh, you mean another event listener check. hmm","msgtype":"m.text"},"ts":1398952549000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"personally I intuitively thought that XHR would always complete the request if I let go of it, even if I wasn't listening for anything on it","msgtype":"m.text"},"ts":1398952592000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is there a reason to not just never GC the object while the request is in the air?","msgtype":"m.text"},"ts":1398952606000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"could see interop issues there, eg. function send_keepalive() { var xhr = new XHR(); xhr.open(\"http://api.server.com/ping\"); xhr.send(); } may or may not actually send the ping, depending on GC (if I understand correctly)","msgtype":"m.text"},"ts":1398952713000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"EventSource and WebSocket do the same; they might need it more, granted","msgtype":"m.text"},"ts":1398952713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes more sense for streaming things that would never close on their own","msgtype":"m.text"},"ts":1398952749000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Heh, interesting case","msgtype":"m.text"},"ts":1398952754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: actually in that case it would deliver the ping","msgtype":"m.text"},"ts":1398952834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: at HEADERS_RECEIVED the ping is already at the other side","msgtype":"m.text"},"ts":1398952848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: which does argue that the upload related check is wrong...","msgtype":"m.text"},"ts":1398952895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you clarify the and/or gruoping in that section","msgtype":"m.text"},"ts":1398953157000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"An ... (state is opened and send() flag is set), (state is RECEIVED), or (state is LOADING and one of the following is true)?","msgtype":"m.text"},"ts":1398953187000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also grouping","msgtype":"m.text"},"ts":1398953195000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(that's what it seems like based on what it's trying to do, just a bit unobvious from a naive reading)","msgtype":"m.text"},"ts":1398953230000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hehe, source has \"Based on EventSource and WebSocket. Not sure what I am doing.\"","msgtype":"m.text"},"ts":1398953233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might argue that this is okay from an event API standpoint, because the difference is unobservable to script (it just means \"if there are listeners to hear it, do keep going\"), but ...","msgtype":"m.text"},"ts":1398953308000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so in this case i guess what it's really doing is saying \"if nobody is listening, you don't actually have to read the whole POST body\"","msgtype":"m.text"},"ts":1398953369000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"In a tree falls in the forest...","msgtype":"m.text"},"ts":1398953402000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"maybe that's arguably an implementation detail anyway","msgtype":"m.text"},"ts":1398953404000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"*If, dammit","msgtype":"m.text"},"ts":1398953409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"forest.dispatchEvent(new Event(\"TreeFell\"));","msgtype":"m.text"},"ts":1398953443000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"surprised that websocket is spying on event listeners, i thought that was only done with event handlers","msgtype":"m.text"},"ts":1398953566000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: added a commit","msgtype":"m.text"},"ts":1398953571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: it's only about the response body","msgtype":"m.text"},"ts":1398953617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: might be observable from the server if the UA actively kills the connection","msgtype":"m.text"},"ts":1398953650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, but there are plenty of things we seem okay with being observable from the server that we're not in script...","msgtype":"m.text"},"ts":1398953683000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(resource caching behavior, etc)","msgtype":"m.text"},"ts":1398953699000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the upload events flag is the bigger one, though","msgtype":"m.text"},"ts":1398953789000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"afk, heading to work","msgtype":"m.text"},"ts":1398953940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, not sure how to fix that or if","msgtype":"m.text"},"ts":1398954186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Invariants\" seem to be screwed over left and right","msgtype":"m.text"},"ts":1398954229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you forgot to add `s around your HTML tags so your issue makes no sense :P","msgtype":"m.text"},"ts":1398957128000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: fixored","msgtype":"m.text"},"ts":1398957230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: seems weird GH removes stuff it doesn't do anything with","msgtype":"m.text"},"ts":1398957241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: what behavior-only objects are you talking about?","msgtype":"m.text"},"ts":1398957384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hasn't seen many","msgtype":"m.emote"},"ts":1398957388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm trying to get the spec editor to tell me if there's hidden state, but https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#dfn-SubtleCrypto seems at first glance to be behavior-only.","msgtype":"m.text"},"ts":1398957444000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: with functions that access privileged APIs elsewhere somehow?","msgtype":"m.text"},"ts":1398957557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't understand the question?","msgtype":"m.text"},"ts":1398957569000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: https://dvcs.w3.org/hg/webcrypto-api/raw-file/tip/spec/Overview.html#dfn-SubtleCrypto-method-encrypt can't be implemented without \"magic\"","msgtype":"m.text"},"ts":1398957602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why do you say that? It just runs some well-specified algorithms, which are accessible to any Turing machine.","msgtype":"m.text"},"ts":1398957630000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: as in, all those functions want to share some algorithms, such as \"normalize\"","msgtype":"m.text"},"ts":1398957726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which appears to be a broken link...)","msgtype":"m.text"},"ts":1398957740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, functions can call other functions ...","msgtype":"m.text"},"ts":1398957741000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: anyway, any other examples?","msgtype":"m.text"},"ts":1398957880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://dvcs.w3.org/hg/quota/raw-file/tip/Overview.html#idl-def-StorageQuota, given that supportedTypes is a constant (not mutable state)","msgtype":"m.text"},"ts":1398958013000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"That has NoInterfaceObject, so can you distinguish it from an ordinary object?","msgtype":"m.text"},"ts":1398958087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I believe Object.getPrototypeOf(navigator.storageQuota) would give back a StorageQuota, not Object.","msgtype":"m.text"},"ts":1398958224000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"even if window.StorageQuota doesn't exist.","msgtype":"m.text"},"ts":1398958234000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ah, I suspect that's probably true","msgtype":"m.text"},"ts":1398958258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, first sentence of http://heycam.github.io/webidl/#interface-prototype-object","msgtype":"m.text"},"ts":1398958293000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Modules and IDL support for them is what we need for a lot of this stuff","msgtype":"m.text"},"ts":1398958688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indeeeed","msgtype":"m.text"},"ts":1398958697000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"probably worth waiting on implementations for that though.","msgtype":"m.text"},"ts":1398958706000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Do modules have a concept of being scoped to particular types of realms?","msgtype":"m.text"},"ts":1398958711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. we can't have DOM in workers...","msgtype":"m.text"},"ts":1398958723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I imagine different realms would have different built-in module loaders, and thus different built-in modules.","msgtype":"m.text"},"ts":1398958748000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1398961300000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"cwilso, I got the eternal question from our implementor... Why XML and Http in XHR?","msgtype":"m.text"},"ts":1398962232000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Length?","msgtype":"m.text"},"ts":1398962240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Conventions","msgtype":"m.text"},"ts":1398962412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It was HttpRequest shipped as part of the XML library","msgtype":"m.text"},"ts":1398962433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see /topic ?","msgtype":"m.text"},"ts":1398962462000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1398962505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though I guess actually people are actually after the story","msgtype":"m.text"},"ts":1398962531000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"+sometimes","msgtype":"m.text"},"ts":1398962535000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"-actually","msgtype":"m.text"},"ts":1398962542000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I'm certainly not going to suggest implementing XmlHttpRequest in Servo","msgtype":"m.text"},"ts":1398962561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well no","msgtype":"m.text"},"ts":1398962575000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you were picking the name you would probably choose Request","msgtype":"m.text"},"ts":1398962592000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And not implement this API at all","msgtype":"m.text"},"ts":1398962612000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You'd pick fetch and you'd pass it a Request","msgtype":"m.text"},"ts":1398962616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1398962620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the inspecting of event listeners is to make GC not observable","msgtype":"m.text"},"ts":1398963295000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"grr is there nothing less crappy than gettext for python localization","msgtype":"m.text"},"ts":1398963456000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is there ever anything less crappy than gettext?","msgtype":"m.text"},"ts":1398963609000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I mean, for the same purpose","msgtype":"m.text"},"ts":1398963625000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"prepares to take notes","msgtype":"m.emote"},"ts":1398963654000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"dunno, i just want something not crappy","msgtype":"m.text"},"ts":1398963677000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, what about it is your problem?","msgtype":"m.text"},"ts":1398963713000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"at the moment it happens to be fighting with pygettext, which apparently has no support for extracting comments for strings","msgtype":"m.text"},"ts":1398963876000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that does look bad","msgtype":"m.text"},"ts":1398963981000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: have you tried xgettext?","msgtype":"m.text"},"ts":1398964189000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: it appears to be *intended* to work with Python, and it of course supports such things","msgtype":"m.text"},"ts":1398964427000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Ms2ger: why do we have readyState in XMLHttpRequest as a `short`?","msgtype":"m.text"},"ts":1398966230000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Why not?","msgtype":"m.text"},"ts":1398966269000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it runs from 0-4. And I don't think that's going to increase much -- at least not above 8","msgtype":"m.text"},"ts":1398966310000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: GH doesn't \"remove stuff it doesn't do anything with\".  If you don't wrap HTML elements in `s, *they're HTML elements*, and so you don't see them in the visible text obviously.","msgtype":"m.text"},"ts":1398975591000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't know any good reason to specify ints as \"shorts\" in most cases, they're just integers","msgtype":"m.text"},"ts":1398976809000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"SamB: works a bit better, but seems to suck at recursively handling file trees...","msgtype":"m.text"},"ts":1398976839000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: it probably sanitizes them though.","msgtype":"m.text"},"ts":1398976850000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zewt: isn't that what find is for","msgtype":"m.text"},"ts":1398976860000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic_: Possibly, yeah.","msgtype":"m.text"},"ts":1398976866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure, but i'm having to jump a lot of hoops","msgtype":"m.text"},"ts":1398976869000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I know it allows <img> and such through.","msgtype":"m.text"},"ts":1398976872000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i need to say xgettext -j to make it combine with a previous execution (in case xargs splits it into multiple invocations)... but that means I need to delete the file before running it, so it doesn't join with a previous execution... but if I say -j when the file *doesn't* already exist, it throws an error","msgtype":"m.text"},"ts":1398976903000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah, what the heck is short","msgtype":"m.text"},"ts":1398976903000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(are there any specs that already use short for something?)","msgtype":"m.text"},"ts":1398976917000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"zewt: hmm.","msgtype":"m.text"},"ts":1398976934000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so i have to delete the file, then only add -j on the second and further invocations, which i don't know how to do with xargs","msgtype":"m.text"},"ts":1398976937000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's a -D \"add DIRETORY to list for input files search\" which sounds like what I want, but it doesn't seem to actually work","msgtype":"m.text"},"ts":1398976958000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: maybe --files-from= helps?","msgtype":"m.text"},"ts":1398976965000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it also says \"If input file is -, standard input is read\", which should let me avoid xargs entirely, but that doesn't seem to work either","msgtype":"m.text"},"ts":1398976994000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think -D is for if you don't know where the files actually are","msgtype":"m.text"},"ts":1398977020000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"possibly to make things \"easier\" for out-of-tree builds","msgtype":"m.text"},"ts":1398977040000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the word \"footgun\" comes to mind","msgtype":"m.text"},"ts":1398977051000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hence the scare quotes","msgtype":"m.text"},"ts":1398977059000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't know, maybe it's actually possible to use it in a useful way","msgtype":"m.text"},"ts":1398977117000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wonder if the python gettext module has code to compile .po's so i can do it at runtime, precompiling to .mo is pointless for me (it's a server)","msgtype":"m.text"},"ts":1398977121000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://docs.python.org/library/gettext should have the answer","msgtype":"m.text"},"ts":1398977174000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh well, guess i'll write a script to invoke xgettext, it'll take less time","msgtype":"m.text"},"ts":1398977184000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: so did you try --files-from=<(find ...)","msgtype":"m.text"},"ts":1398977218000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wouldn't i have to output the file list to a temp file (maybe --files-from=- works)","msgtype":"m.text"},"ts":1398977242000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh hey that does seem to work","msgtype":"m.text"},"ts":1398977273000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yes it does","msgtype":"m.text"},"ts":1398977277000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it doesn't know what the heck to do with CWEB's .w files, but boy does it find them","msgtype":"m.text"},"ts":1398977291000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i think my stuff is encapsulated enough that it won't run into a bunch of stuff to confuse it","msgtype":"m.text"},"ts":1398977321000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I was just trying a random example that'd work in the tree I was in","msgtype":"m.text"},"ts":1398977336000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"like when I was trying to package a web view's javascript files inside a Unity package, which Unity promptly interpreted as JS and tried to run as Unity code","msgtype":"m.text"},"ts":1398977351000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"thanks, stop that","msgtype":"m.text"},"ts":1398977355000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mostly in case I was not remembering my shell syntax correctly","msgtype":"m.text"},"ts":1398977362000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"gettext is still very... 90s?","msgtype":"m.text"},"ts":1398977388000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"woah, copyright starts in '95 ?","msgtype":"m.text"},"ts":1398977412000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I was expecting '8x","msgtype":"m.text"},"ts":1398977427000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, changelog for GCC starts in '91 with \"Freshly created ChangeLog.\"; no idea when gcc was created","msgtype":"m.text"},"ts":1398977644000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"GCC 1.0 was released in 1987\"","msgtype":"m.text"},"ts":1398977692000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"goes to do \"git log Makefile.in\" in the binutils-gdb repo, which is subsetted from the old src/ repo ...","msgtype":"m.emote"},"ts":1398977716000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"tries again \"git log -- Makefile\" ...","msgtype":"m.emote"},"ts":1398977766000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"nothing","msgtype":"m.text"},"ts":1398977831000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"1.0 released in 1987\" suggests they started on it circa 1972","msgtype":"m.text"},"ts":1398980911000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1398981531000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's apparently been a while since i read my bugmail","msgtype":"m.text"},"ts":1398981544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"4,767 e-mails...","msgtype":"m.text"},"ts":1398981550000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and that's after filtering)","msgtype":"m.text"},"ts":1398981554000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: can you use \"internal slots\" and [[x]] in http://dev.w3.org/csswg/css-font-loading/, instead of \"internal attributes\" and [x] ?","msgtype":"m.text"},"ts":1398983100000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins: we want to encourage more people to do that kind of thing, but it's harder to argue for when everyone is doing something different.","msgtype":"m.text"},"ts":1398983118000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: Absolutely.","msgtype":"m.text"},"ts":1398983388000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though using [[]] is kinda annoying in Bikeshed.  Hmm.","msgtype":"m.text"},"ts":1398983402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think I can write [<!---->[foo]].","msgtype":"m.text"},"ts":1398983414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: awesome, thanks! And, uh, wow that sounds hard.","msgtype":"m.text"},"ts":1398983443000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It's just that Bikeshed treats [[foo]] as a biblio ref.","msgtype":"m.text"},"ts":1398983554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah tricksy","msgtype":"m.text"},"ts":1398983580000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(A behavior inherited from the old CSSWG preprocessor, and shared by Anolis, I think.)","msgtype":"m.text"},"ts":1398983580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah i see, so a behavior that would move peoples' cheese if changed","msgtype":"m.text"},"ts":1398983601000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"The only thing I can think of is inventing something arcane that gets translated to [[x]], e.g. \\\\x//","msgtype":"m.text"},"ts":1398983657000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yeah, it would break virtually every Bikeshedded spec if changed.","msgtype":"m.text"},"ts":1398983674000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What kind of cheese is this, and â€” assuming it is nice cheese â€” could they move it this way?","msgtype":"m.text"},"ts":1398983688000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What I might do instead is add a metadata field to let you specify things that aren't biblio refs.","msgtype":"m.text"},"ts":1398983697000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For now, though, I'm just adding a comment to break things up.","msgtype":"m.text"},"ts":1398983706000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We do want to add internal slot declarations to WebIDL of some sort","msgtype":"m.text"},"ts":1398983730000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Cool.","msgtype":"m.text"},"ts":1398983737000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just checked - ReSpec uses that syntax too.","msgtype":"m.text"},"ts":1398983790000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"waaah waaaaah","msgtype":"m.text"},"ts":1398983799000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Any chance y'all could come up with a syntax that doesn't directly impinge on every extant spec preprocessor?","msgtype":"m.text"},"ts":1398983815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i mean, we could ask ES to change, but seems unlikely...","msgtype":"m.text"},"ts":1398983825000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or we could just be inconsistent with ES...","msgtype":"m.text"},"ts":1398983831000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but they're supposed to be the same concept","msgtype":"m.text"},"ts":1398983837000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I'm fine with the latter.","msgtype":"m.text"},"ts":1398983837000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"don't suppose you could ask them not to process the IDL for bibliographic references","msgtype":"m.text"},"ts":1398983846000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: It won't just appear in IDL.","msgtype":"m.text"},"ts":1398983868000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm a bit surprised that it doesn't leave [[x]]s alone if there's no x in the references section.","msgtype":"m.text"},"ts":1398983874000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It's scattered throughout the spec, every time you reference the slot.","msgtype":"m.text"},"ts":1398983877000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: A good preprocessor *tells* you you've made a typo when it can't find \"x\" in the refs database.","msgtype":"m.text"},"ts":1398983892000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, that makes sense.","msgtype":"m.text"},"ts":1398983906000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"And they *generate* the references sections (that's why preprocessor exist)","msgtype":"m.text"},"ts":1398983907000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh right i forgot about that feature.","msgtype":"m.text"},"ts":1398983923000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"using the database of well-known references","msgtype":"m.text"},"ts":1398983931000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1398983934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You people writing specs in GHMarkdown are missing out on a lot. ^_^","msgtype":"m.text"},"ts":1398983949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess I'd say use {{x}} in source and have preprocessor convert to [[x]]","msgtype":"m.text"},"ts":1398983956000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1398983957000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"is getting closer to having most of Markdown implemented in Bikeshed.","msgtype":"m.emote"},"ts":1398983960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I never quite understood how that part was supposed to work with each thing in its own repository, but then I'm thinking of bibTeX ...","msgtype":"m.text"},"ts":1398983969000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: What part?","msgtype":"m.text"},"ts":1398983982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the part where you have a big database","msgtype":"m.text"},"ts":1398983998000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"You keep a master database of refs that everyone updates.","msgtype":"m.text"},"ts":1398984013000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"easier with spec tools","msgtype":"m.text"},"ts":1398984028000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"The biblio dbs are maintained automatically.  Bikeshed's linking database is done automatically, though.","msgtype":"m.text"},"ts":1398984043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Once it knows a spec's location, it stays up-to-date.","msgtype":"m.text"},"ts":1398984053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: I don't understand what you mean.","msgtype":"m.text"},"ts":1398984067000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so what you're saying is, there's only one place we have to change [[HTML]]'s URL in, and then everything will be better...","msgtype":"m.text"},"ts":1398984081000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: Yes.","msgtype":"m.text"},"ts":1398984086000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"([[HTML]] already points to the proper spec in Bikeshed's DB.)","msgtype":"m.text"},"ts":1398984102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1398984110000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(Though [[HTML5]] points to the W3C spec.)","msgtype":"m.text"},"ts":1398984141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: I can always give you a Bikeshed crash-course if you want.  It works fine with the GH workflow - <picture>'s spec is Bikeshedded, and uses a gh-pages as master for displaying.","msgtype":"m.text"},"ts":1398984187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: probably a good idea, when it's time for me to get serious about prettifying streams. I'll let you know ^_^","msgtype":"m.text"},"ts":1398984357000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"kk, but Bikeshed is helpful during initial writing too, as it makes sure you don't typo links and such.","msgtype":"m.text"},"ts":1398984382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Let's you draw railroad diagrams.","msgtype":"m.text"},"ts":1398984389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Other cool things. _^","msgtype":"m.text"},"ts":1398984392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"[[HTML5]] should be a fatal error :-P","msgtype":"m.text"},"ts":1398985085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic_: Why are [[Foo]] things called private slots rather than private attributes?","msgtype":"m.text"},"ts":1398988425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: attributes is a WebIDL-ism.","msgtype":"m.text"},"ts":1398988490000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"They used to be called internal data properties in ES","msgtype":"m.text"},"ts":1398988503000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"then we thought that was confusing since you can't e.g. getOwnPropertyDescriptor them","msgtype":"m.text"},"ts":1398988520000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"also it was long","msgtype":"m.text"},"ts":1398988524000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so they became internal slots","msgtype":"m.text"},"ts":1398988528000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1398988531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, just pushed the change to Font Loading.","msgtype":"m.text"},"ts":1398988556000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"May take a few minutes to show up.","msgtype":"m.text"},"ts":1398988570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yaaaay :) thanks man","msgtype":"m.text"},"ts":1398988664000,"senderName":"Domenic_","senderId":"Domenic_@irc"}
]