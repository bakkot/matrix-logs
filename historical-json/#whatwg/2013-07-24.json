[
{"content":{"body":"I think I mentioned before when discussing DOM3 Events.","msgtype":"m.text"},"ts":1374624019000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"What would be involved in adding mutation events back into WHATWG DOM, BTW?","msgtype":"m.text"},"ts":1374624293000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"ww3","msgtype":"m.text"},"ts":1374624303000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ww3?","msgtype":"m.text"},"ts":1374624337000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"isn't rik at adobe? sort of surprised he doesn't understand half-pixel coordinate systems (or at least it seems from the rect email)","msgtype":"m.text"},"ts":1374627769000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I have 6 paragraphs in a section, they have click event assigned, when I rotate by X axis the section for 360 deg I can't click and select the text from the 2 paragraphs that are on the bottom of the seciton others I can, they should change color on click, butwhen section is rotated 0 deg by X axis I can select text and click all paragrahs why?","msgtype":"m.text"},"ts":1374643678000,"senderName":"gallant","senderId":"gallant@irc"},
{"content":{"body":"heycam: so today we came up with this thing that'll help with with() and event handlers","msgtype":"m.text"},"ts":1374644580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: @@unscopeable","msgtype":"m.text"},"ts":1374644590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, what is the thing that needs helping","msgtype":"m.text"},"ts":1374644615000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1374644616000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it's a per-object array of property strings that are not visible when looking on the prototype chain of the object in those contexts","msgtype":"m.text"},"ts":1374644631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: so e.g. we could have Node.prototype[@@unscopeable]] = [\"find\", \"findAll\"]","msgtype":"m.text"},"ts":1374644657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-]","msgtype":"m.text"},"ts":1374644670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh is this to help where the event target is in the scope chain?","msgtype":"m.text"},"ts":1374644702000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"when does that happen again. and where's that specced?","msgtype":"m.text"},"ts":1374644727000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"might be missing some context","msgtype":"m.emote"},"ts":1374644732000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah, it'll help with that, it was mostly added for Array.prototype.values which got fucked by ext.js because of with()","msgtype":"m.text"},"ts":1374644742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1374644776000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it happens for <div onclick=find()></div> which currently will want to invoke a user-defined function, but when Element.find is there would invoke that, which'll break","msgtype":"m.text"},"ts":1374644790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so what's the plan, to have all new things on Array.prototype be unscopable?","msgtype":"m.text"},"ts":1374644791000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah gotcha","msgtype":"m.text"},"ts":1374644809000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: I guess for now we'd decide on a case-by-case basis, but it's been proposed for that to be the policy","msgtype":"m.text"},"ts":1374644823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess @@unscopable would be handled in the ES spec then","msgtype":"m.text"},"ts":1374644881000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since it needs to change how property lookups work","msgtype":"m.text"},"ts":1374644888000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"an alternative would be to stick a different object in the scope chain, one that forward a limited, fixed set of property lookups to the actual event target","msgtype":"m.text"},"ts":1374644922000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think there's no way of inspecting what the actual object on the scope chain is","msgtype":"m.text"},"ts":1374644939000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so it's probably equivalent","msgtype":"m.text"},"ts":1374644942000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah, it'll be in JavaScript, but we'll need to be able to define it on a per-object basis","msgtype":"m.text"},"ts":1374644945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: that is, we need to define the array Node.prototype[@@unscopeable] returns","msgtype":"m.text"},"ts":1374644969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1374644985000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think it'd be preferable to have a fixed set of names there, and then to never add any more","msgtype":"m.text"},"ts":1374645012000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"seems better than waiting for new APIs to break things :)","msgtype":"m.text"},"ts":1374645018000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: also, do you think we can change what HTMLElement.prototype instanceof Node returns?","msgtype":"m.text"},"ts":1374645027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh and actually I mean the inverse of @@unscopeable","msgtype":"m.text"},"ts":1374645040000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: according to Allan what we do now is not ES6-style","msgtype":"m.text"},"ts":1374645040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so a fixed set of names that do go through to the event target","msgtype":"m.text"},"ts":1374645051000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, yes that is not my list of things to do","msgtype":"m.text"},"ts":1374645061000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think Gecko already switched to doing it too","msgtype":"m.text"},"ts":1374645071000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(i.e. make that return true, is that right?)","msgtype":"m.text"},"ts":1374645084000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1374645089000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"am I thinking of the right thing?","msgtype":"m.text"},"ts":1374645095000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it returns true right now, but it's not clear whether that's good","msgtype":"m.text"},"ts":1374645108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: although bz made a claim about web compat...","msgtype":"m.text"},"ts":1374645121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah I remember seeing that thread about it needing to","msgtype":"m.text"},"ts":1374645131000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it's not good at least for appendChild(), as that fails","msgtype":"m.text"},"ts":1374645136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and most things, really","msgtype":"m.text"},"ts":1374645158000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: re whitelist, whitelist does not work if you assume user extensions to prototype","msgtype":"m.text"},"ts":1374645161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ah, yes","msgtype":"m.text"},"ts":1374645171000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, whitelist of things that came from the IDL? dunno","msgtype":"m.text"},"ts":1374645184000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: say I add HTMLCanvasElement.prototype.clear = function() { ... } and then <canvas onmouseout=clear>","msgtype":"m.text"},"ts":1374645227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mmm","msgtype":"m.text"},"ts":1374645243000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I wonder if you could have an object on the scope chain that forwarded to window first, then to the event target","msgtype":"m.text"},"ts":1374645315000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":".name probably ruins that idea tho","msgtype":"m.text"},"ts":1374645374000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, so maybe @@unscopeable is the simplest thing to do. esp if the ES spec will add it. can you file a bug to have an [Unscopeable] or something we can stick on interface members?","msgtype":"m.text"},"ts":1374645453000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah will do once I need it","msgtype":"m.text"},"ts":1374645480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, thanks","msgtype":"m.text"},"ts":1374645485000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: we should prolly start thinking about making our syntax a bit closer to ES syntax","msgtype":"m.text"},"ts":1374645508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: I guess it kinda depends on whether JSIDL happens, but I've the feeling nobody really has time for that","msgtype":"m.text"},"ts":1374645540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yeah, I want to think about that, but probably not until I get through this backlog of open issues","msgtype":"m.text"},"ts":1374645557000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1374645567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yuhong: I guess you read the logs... Adding mutation events would be a world of hurt, but it basically comes down to the same things we go through for each ancient feature. Figure out what browsers do and define it. Ideally the least problematic variant. I'm still hopeful we don't have to. A couple of IE versions doesn't seem like a big deal.","msgtype":"m.text"},"ts":1374645889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So can a template element have a child in the normal DOM tree?","msgtype":"m.text"},"ts":1374667186000,"senderName":"gsnedder1","senderId":"gsnedder1@irc"},
{"content":{"body":"gsnedders: as far as I understand it, No, it can't","msgtype":"m.text"},"ts":1374668567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thus why the tests in html5lib merely put subtree as its children. Okay.","msgtype":"m.text"},"ts":1374668750000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This makes me wonder if the infoset coercion should just move them to being children.","msgtype":"m.text"},"ts":1374668775000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: is namespaceHTMLElements documented? I learned about it by reading the source","msgtype":"m.text"},"ts":1374669057000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Probably not. The documentation is diabolical.","msgtype":"m.text"},"ts":1374669122000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"does anyone understand what's being referred to at https://twitter.com/annevk/status/359916359980822528? Event handlers picking up property names from nodes? I'm confused.","msgtype":"m.text"},"ts":1374673176000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I don’t know, but http://krijnhoetmer.nl/irc-logs/whatwg/20130724#l-212 seems related","msgtype":"m.text"},"ts":1374673383000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: oh woah yeah I think that explains it. Didn't know about behavior; how bizarre.","msgtype":"m.text"},"ts":1374673431000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"wow, the google apps admin page is now pretty much unusable","msgtype":"m.text"},"ts":1374675978000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mysterious lines of meaningless icons","msgtype":"m.text"},"ts":1374675982000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: just posted to es-discuss about letting the host decide what this is bound to in the global environment","msgtype":"m.text"},"ts":1374678707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: is there anything besides that and document.all for which we've conflicts with ES?","msgtype":"m.text"},"ts":1374678735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: http://esdiscuss.org/topic/let-this-object-of-global-environment-be-specified-by-host","msgtype":"m.text"},"ts":1374680731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: ?","msgtype":"m.text"},"ts":1374681679000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"heycam|away: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=22346","msgtype":"m.text"},"ts":1374687025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"any idea what bugs 22778 to 22781 are about? https://www.w3.org/Bugs/Public/show_bug.cgi?id=22781","msgtype":"m.text"},"ts":1374688021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: may I have one more events-related question?","msgtype":"m.text"},"ts":1374688085000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"you can have any questions you like","msgtype":"m.text"},"ts":1374688110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"answers, i can't promise","msgtype":"m.text"},"ts":1374688113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool :)","msgtype":"m.text"},"ts":1374688116000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: well, it is the case of removing an event listener during (another) listener","msgtype":"m.text"},"ts":1374688128000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"both on same object/element","msgtype":"m.text"},"ts":1374688133000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and the same phase","msgtype":"m.text"},"ts":1374688135000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the spec says that a list of listeners is copied prior to execution","msgtype":"m.text"},"ts":1374688150000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so I conclude that the removed listener shall be executed as well?","msgtype":"m.text"},"ts":1374688160000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"seems reasonable to conclude that based on what you've described","msgtype":"m.text"},"ts":1374688206000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, major impls think otherwise","msgtype":"m.text"},"ts":1374688234000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"let me put together a testing fiddle","msgtype":"m.text"},"ts":1374688243000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"IE9 being an exception that follows my interpretation","msgtype":"m.text"},"ts":1374688256000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: http://jsfiddle.net/ondras/fD9qq/","msgtype":"m.text"},"ts":1374688445000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Hixie: do you think this is a correct demonstration?","msgtype":"m.text"},"ts":1374688454000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: ^ can you please confirm as well?","msgtype":"m.text"},"ts":1374688470000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"seems right to me","msgtype":"m.text"},"ts":1374688553000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I am asking prior to submitting ff/chrome bugs, to evade looking like an idiot afterwards :)","msgtype":"m.text"},"ts":1374688581000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: looks correct to me","msgtype":"m.text"},"ts":1374688621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the behavior of ff does not match the spec?","msgtype":"m.text"},"ts":1374688665000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yeah, I seem to remember testing this and the spec matching Firefox","msgtype":"m.text"},"ts":1374688703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*matching* ?","msgtype":"m.text"},"ts":1374688763000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1374688771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"your test surprises me","msgtype":"m.text"},"ts":1374688785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome (blink) + opera (non-blink) does the same","msgtype":"m.text"},"ts":1374688824000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ie9 alerts","msgtype":"m.text"},"ts":1374688827000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ie10 no idea, not available for me atm","msgtype":"m.text"},"ts":1374688837000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"http://www.w3.org/TR/DOM-Level-3-Events/#event-flow says the same. \"Once determined, the candidate event listeners must not be changed; adding or removing listeners does not affect the current target's candidate event listeners.\"","msgtype":"m.text"},"ts":1374688917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fine, will submit ff bug tomorrow","msgtype":"m.text"},"ts":1374689484000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: thanks, please cc me and \":smaug\"","msgtype":"m.text"},"ts":1374690164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And me","msgtype":"m.text"},"ts":1374690290000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1374690748000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"haha everyone likes the onerror change https://twitter.com/pmuellr/status/360117846212231168","msgtype":"m.text"},"ts":1374694681000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hey guys! Someone wants to book our band(s) on a tour!","msgtype":"m.text"},"ts":1374694849000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic_: everyone except the implementors, so far :-P","msgtype":"m.text"},"ts":1374696596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: bah, who needs 'em","msgtype":"m.text"},"ts":1374696669000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah, i sometimes think that's the attitude of people who think the spec is magical and will somehow force the browsers to follow...","msgtype":"m.text"},"ts":1374696698000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if only that were the case...","msgtype":"m.text"},"ts":1374696731000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(and RL auto-minified it when loaded, but the page stays cool)","msgtype":"m.text"},"ts":1374697015000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"(wrong chan)","msgtype":"m.text"},"ts":1374697020000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"The mailing list threads involving James Greene really upset me.","msgtype":"m.text"},"ts":1374698948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I keep thinking \"I didn't say that\"","msgtype":"m.text"},"ts":1374698957000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Only to realise that it is in fact a totally different person","msgtype":"m.text"},"ts":1374698972000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Who doesn't even have the same name as me","msgtype":"m.text"},"ts":1374698984000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: pointer?","msgtype":"m.text"},"ts":1374698988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The onerror thread. But the upset is only because James Gr.* seems to match my internal filters for my own name","msgtype":"m.text"},"ts":1374699042000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least when scanning","msgtype":"m.text"},"ts":1374699071000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"where is the thread, i couldn't find it","msgtype":"m.text"},"ts":1374699629000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"AirPlay competition, finally: http://googleblog.blogspot.com/2013/07/from-tvs-to-tablets-everything-you-love.html","msgtype":"m.text"},"ts":1374703546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Now some standards...","msgtype":"m.text"},"ts":1374703555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Jul/0313.html and similar","msgtype":"m.text"},"ts":1374703578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, i swear i tried that archive -__","msgtype":"m.text"},"ts":1374703915000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"-_-","msgtype":"m.text"},"ts":1374703919000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I think there might have been a hickup, I didn't see everything I expected earlier either","msgtype":"m.text"},"ts":1374703940000,"senderName":"annevk","senderId":"annevk@irc"}
]