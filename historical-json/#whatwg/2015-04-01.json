[
{"content":{"body":"annevk: Really? There are *more* contexts?","msgtype":"m.text"},"ts":1427848056000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hey all, what's new?","msgtype":"m.text"},"ts":1427870317000,"senderName":"TheSuoX","senderId":"TheSuoX@irc"},
{"content":{"body":"GPHemsley: https://fetch.spec.whatwg.org/#concept-request-context","msgtype":"m.text"},"ts":1427870589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-whatwg-archive/ doesn't have messages from before 2012? :-(","msgtype":"m.text"},"ts":1427873943000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it does","msgtype":"m.text"},"ts":1427874445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for some reason those months are not listed","msgtype":"m.text"},"ts":1427874453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: ^","msgtype":"m.text"},"ts":1427874456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but you can browse to e.g. https://lists.w3.org/Archives/Public/public-whatwg-archive/2004May/ and find the first set of messages","msgtype":"m.text"},"ts":1427874483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thx","msgtype":"m.text"},"ts":1427874490000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk http://dev.w3.org/csswg/css-egg/ is up, with a nice reference to https://fetch.spec.whatwg.org/#unicorn","msgtype":"m.text"},"ts":1427874762000,"senderName":"frivoal","senderId":"frivoal@irc"},
{"content":{"body":"MikeSmith: ok went through my bugs. closed most of them. feel free to reopen any INTENTIONAL if you want to fix them","msgtype":"m.text"},"ts":1427875452000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1427879900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: would love to fix them all but right now just trying to figure out which of the long-open bugs might still be a priority for any odd the original commenters","msgtype":"m.text"},"ts":1427879997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the biggest open issue that the most people care about is the error reported for ampersands in URLs","msgtype":"m.text"},"ts":1427880114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which, were still not conforming to the spec there","msgtype":"m.text"},"ts":1427880157000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that's complicated by the fact it's actually a parser issue","msgtype":"m.text"},"ts":1427880202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: it'd be nice if we could get that error-reported-for-ampersand thing resolved; last I recall I had a parser patch out top you for review","msgtype":"m.text"},"ts":1427880328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I'll open a sysreq for that mailing-list archive index-page problem","msgtype":"m.text"},"ts":1427880410000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"frivoal++","msgtype":"m.text"},"ts":1427881347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how I loathe April 1","msgtype":"m.text"},"ts":1427882232000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I would actually like to see about:unicorn irrespective of April 1, it's been a comment in the source of the specification for ages","msgtype":"m.text"},"ts":1427882364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc++","msgtype":"m.text"},"ts":1427882566000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it doesn't help that April 1 effectively lasts for two days for me","msgtype":"m.text"},"ts":1427882705000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: are we working on http://dev.w3.org/csswg/css-containment/#containment ?","msgtype":"m.text"},"ts":1427882926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: Firefox OS devs wants it, reportedly","msgtype":"m.text"},"ts":1427882945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"want*","msgtype":"m.text"},"ts":1427882947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"enjoys April 1, playing Pac Man on Google Maps is rather fun","msgtype":"m.emote"},"ts":1427882982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no","msgtype":"m.text"},"ts":1427883721000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"what for?","msgtype":"m.text"},"ts":1427883725000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: it allows you to give elements the same kind of isolation <iframe>s have and thereby improving perf (is the hope)","msgtype":"m.text"},"ts":1427883792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: and it would allow for resize events for those elements most likely","msgtype":"m.text"},"ts":1427883808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know what it does","msgtype":"m.text"},"ts":1427883974000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but what do they want it for?","msgtype":"m.text"},"ts":1427883980000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"any specific case?","msgtype":"m.text"},"ts":1427883986000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Probably best to ask Wilson Page directly, I suspect for the various components they create","msgtype":"m.text"},"ts":1427884020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"He doesn't seem to be online atm :/","msgtype":"m.text"},"ts":1427884053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: I'll find out and have him file a bug","msgtype":"m.text"},"ts":1427884320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the links at the end of https://lists.w3.org/Archives/Public/public-webapps/2015AprJun/0003.html do suggest that we need to think harder about these permission requests we keep asking for","msgtype":"m.text"},"ts":1427887075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we also got feedback from the game community that even by giving users incentive to e.g. grant the game fullscreen permission or some such, users end up ignoring the dialogs","msgtype":"m.text"},"ts":1427887134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: unfortunately I still don't have any great ideas, the bundling that some seem to argue for only seems to make things worse","msgtype":"m.text"},"ts":1427887162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm nervous about bundling given the situation on Android","msgtype":"m.text"},"ts":1427887335000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although Chrome bundles push messaging & notifications, which I think is fine","msgtype":"m.text"},"ts":1427887357000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I like your idea on the one-off sync thing (although it could get a bit onbeforeunload), but it's not what I was getting at in that thread","msgtype":"m.text"},"ts":1427887419000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't like the way Chrome bundles push and notifications, since push really ought to be a distinct thing from displaying notifications","msgtype":"m.text"},"ts":1427887474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I can see allowing push would also allow for notifications I guess. I don't like that it's currently required to show a notification.","msgtype":"m.text"},"ts":1427887531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What we shipped is a first step, we're fully committed to getting \"silent\" push out of the door as well","msgtype":"m.text"},"ts":1427887565000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"it's just much harder to convey to users what's going on","msgtype":"m.text"},"ts":1427887572000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"JakeA: my idea is that whenever you want to do synchronization traffic you'd request a one-off sync and do it from there","msgtype":"m.text"},"ts":1427887575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that would avoid any kind of racing","msgtype":"m.text"},"ts":1427887583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, will reply to the thread","msgtype":"m.text"},"ts":1427887593000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so rather than making all kinds of decisions based on hunches, we may as well gather data and learn from developers about how they want to use the features","msgtype":"m.text"},"ts":1427887593000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: so mt gave me the impression that Google's UX ideas influenced the spec, but maybe that's not really the case?","msgtype":"m.text"},"ts":1427887646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The ideas were mostly driven by my team, but definitely influenced by UX as well","msgtype":"m.text"},"ts":1427887677000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: I mean, in a way that prevents others from not having that coupling","msgtype":"m.text"},"ts":1427887713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we worked that out with Martin / slightlyoff last week","msgtype":"m.text"},"ts":1427887740000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"also, doug mentioned it wasn't completely crazy based on his firefox implementation :)","msgtype":"m.text"},"ts":1427887750000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1427887763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1427887766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Any idea why errors aren't structured-clonable?","msgtype":"m.text"},"ts":1427888457000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems worth filing a bug on","msgtype":"m.text"},"ts":1427888521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I tried requesting a resource of which the status was 101 and it seems what happens is that the browser just does another request hoping to get something back that is not 101","msgtype":"m.text"},"ts":1427888960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though I'm not entirely sure","msgtype":"m.text"},"ts":1427888968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm actually, XMLHttpRequest towards it seems to work fine","msgtype":"m.text"},"ts":1427889169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you get back the 101 etc.","msgtype":"m.text"},"ts":1427889180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But no body","msgtype":"m.text"},"ts":1427889185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh my... And those are all necessarily distinct?","msgtype":"m.text"},"ts":1427890186000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yep","msgtype":"m.text"},"ts":1427891547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Are their uses defined somewhere?","msgtype":"m.text"},"ts":1427891687000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: not really, just the examples for now, until specs are updated to use Fetch","msgtype":"m.text"},"ts":1427891756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, 103 response results in a network error afaict","msgtype":"m.text"},"ts":1427891789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hmm... do you have notes as to why you split up ones that I had grouped together?","msgtype":"m.text"},"ts":1427891805000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: basically we want all contexts to be unique, more or less","msgtype":"m.text"},"ts":1427891846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: for service workers, CSP, and Mixed Content","msgtype":"m.text"},"ts":1427891864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and anything else that might come along at some point","msgtype":"m.text"},"ts":1427891874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1427891877000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: your grouping might still be adequate for sniffing purposes btw","msgtype":"m.text"},"ts":1427892157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: we don't necessarily want to have different handling for all of these contexts, we just want to allow for it and give a very granular context to developers","msgtype":"m.text"},"ts":1427892217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1427892375000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"for some reason, favicon keeps sticking out to me","msgtype":"m.text"},"ts":1427892393000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"IDK if that's rational","msgtype":"m.text"},"ts":1427892399000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"zcorpan: what happens with a stylesheet if Content-Type is missing","msgtype":"m.text"},"ts":1427894102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the spec doesn't seem to be obviously clear about that","msgtype":"m.text"},"ts":1427894347000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i seem to recall that missing content-type or content-type without a slash should mean text/css, but not sure","msgtype":"m.text"},"ts":1427894393000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i'll file a bug to look into it","msgtype":"m.text"},"ts":1427894413000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=28391","msgtype":"m.text"},"ts":1427894523000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"roc ping","msgtype":"m.text"},"ts":1427896952000,"senderName":"wilsonpage","senderId":"wilsonpage@irc"},
{"content":{"body":"wilsonpage: I think it's like 3am for roc","msgtype":"m.text"},"ts":1427896982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is confused and interested that fet has a read stream but not the streams API full in Chrome Canary","msgtype":"m.emote"},"ts":1427896993000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"fetch*","msgtype":"m.text"},"ts":1427896997000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"jgraham oh, thanks","msgtype":"m.text"},"ts":1427897005000,"senderName":"wilsonpage","senderId":"wilsonpage@irc"},
{"content":{"body":"jgraham what time-zone is he on?","msgtype":"m.text"},"ts":1427897027000,"senderName":"wilsonpage","senderId":"wilsonpage@irc"},
{"content":{"body":"He's in NZ","msgtype":"m.text"},"ts":1427897034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Usually","msgtype":"m.text"},"ts":1427897036000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ah ok","msgtype":"m.text"},"ts":1427897042000,"senderName":"wilsonpage","senderId":"wilsonpage@irc"},
{"content":{"body":"So NZDT apparently","msgtype":"m.text"},"ts":1427897076000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: can I have a ServiceWorker registered for scope ./a perform a network requests to ./b/foo.html and have that intercepted by a separate ServiceWorker registered for scope ./b?","msgtype":"m.text"},"ts":1427897607000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"will probably be claiming \"not enough coffee\" shortly...","msgtype":"m.emote"},"ts":1427897651000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nah, requests from a page go through the serviceworker at navigator.serviceWorker.controller only","msgtype":"m.text"},"ts":1427897668000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1427897682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Which is registration.active on the registration that covers that scope","msgtype":"m.text"},"ts":1427897691000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh... but what about if the first ServiceWorker was only spawned to handle a background sync?","msgtype":"m.text"},"ts":1427897701000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wilsonpage: did you get my email?","msgtype":"m.text"},"ts":1427897737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the background sync SW is not controlling the page, right?","msgtype":"m.text"},"ts":1427897752000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"the page\" doesn't exist I guess","msgtype":"m.text"},"ts":1427897765000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: trying to think of a way to spawn a secondary SW for this issue: https://github.com/slightlyoff/BackgroundSync/issues/70","msgtype":"m.text"},"ts":1427897780000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: this might be a good case for just having a ServiceWorker constructor... times when you want a SharedWorker like thing, but no document exists","msgtype":"m.text"},"ts":1427897822000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the SW spawns in time to receive events such as \"fetch\", \"sync\", \"push\", \"install\" etc","msgtype":"m.text"},"ts":1427897864000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It can already spawn without a document","msgtype":"m.text"},"ts":1427897874000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Eg, browser receives a push message, it spins up the related SW & fires the push event","msgtype":"m.text"},"ts":1427897899000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: right... but in this case the web dev needs to do large amounts of sync work in response to the \"sync\" event... where should they do that?  they cannot spawn a worker","msgtype":"m.text"},"ts":1427897906000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"goes to read the issue","msgtype":"m.emote"},"ts":1427897941000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I guess if they just have a separate SW registration for the \"sync\" and a separate SW registration for \"fetch\", then they could just do all the synchronous work inline and not delay fetch events","msgtype":"m.text"},"ts":1427897964000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"steps away for a bit","msgtype":"m.emote"},"ts":1427898158000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think doing the email work in there is going to be a problem for fetches","msgtype":"m.text"},"ts":1427899024000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"in the SW I mean","msgtype":"m.text"},"ts":1427899028000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it does a lot of synchronous, blocking work to merge snippets together... on low end devices","msgtype":"m.text"},"ts":1427900707000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it was moved to a Worker previously due to jank","msgtype":"m.text"},"ts":1427900720000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: shouldn't it defer that until first view?","msgtype":"m.text"},"ts":1427900757000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well... I guess that would jank the user experience","msgtype":"m.text"},"ts":1427900781000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or doing it earlier would help avoid janking user experence","msgtype":"m.text"},"ts":1427900796000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: its basically a pre-render thing, right?","msgtype":"m.text"},"ts":1427900840000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hm, I guess I'm worried about sync being used for heavy processing due to battery. But yeah, it should be possible to create workers or connect to shared workers in a serviceworker. The","msgtype":"m.text"},"ts":1427900861000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't know how creating a worker from ServiceWorker would work (alliteration!)...  there is no document and other worker types require a document","msgtype":"m.text"},"ts":1427900897000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think the only worker type a ServiceWorker could reliably use is another ServiceWorker","msgtype":"m.text"},"ts":1427900970000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"also, I thought chrome did not have nested workers implemented","msgtype":"m.text"},"ts":1427901004000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we don't","msgtype":"m.text"},"ts":1427901015000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: but I want to be able to get a request for an image, fetch it, create a worker, send the image into the worker, create a canvas worker, so some sync pixel work, send the result back, resolve respondWith","msgtype":"m.text"},"ts":1427901066000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If we can't have workers in SW, we should fix that","msgtype":"m.text"},"ts":1427901081000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for fetch event the document exists... thats easier to handle I think... but for BG sync there is no document","msgtype":"m.text"},"ts":1427901108000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: why does a document need to exist? Couldn't the ServiceWorker itself (or any environment settings object) do the job?","msgtype":"m.text"},"ts":1427901153000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if we can have a separate bg sync SW than the fetch event SW, then I think that is fine... but if they must be the same (I'm unsure of the API), then this would introduce network jank","msgtype":"m.text"},"ts":1427901238000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"if fetch events start happening while the bgsync work is still being performed","msgtype":"m.text"},"ts":1427901251000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Although separate SWs are possible today, I really think workers within a single SW is the better approach for the edge cases where there's sync processing","msgtype":"m.text"},"ts":1427901371000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I say we need a document for other Worker types because the spec says \"Document\"","msgtype":"m.text"},"ts":1427901373000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe that can be changed... but I bet it has all kinds of implications","msgtype":"m.text"},"ts":1427901398000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: The HTML spec has been fixed before :D","msgtype":"m.text"},"ts":1427901399000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: if we change SharedWorker not to need a Document... why do we have a ServiceWorker type? :-)","msgtype":"m.text"},"ts":1427901427000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: because .port doesn't make sense on ServiceWorker due to the lifecycle","msgtype":"m.text"},"ts":1427901510000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well... there is gunk the ServiceWorker inherits from Worker now that we just throw in... seems similar... the distinguishing feature of ServiceWorker in my mind was \"doesn't need a document\"","msgtype":"m.text"},"ts":1427901601000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: looking through the spec, it seems like the document dependency is used to decide the worker's lifecycle. Seems like this should be allowed to include serviceworker clients, or be made to be client-generic. What do you think annevk?","msgtype":"m.text"},"ts":1427901885000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I agree, document is already pretty much irrelevant except for a few things","msgtype":"m.text"},"ts":1427901912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think it will be easier to fix in the spec than the implementation","msgtype":"m.text"},"ts":1427901915000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Given that Chrome doesn't allow workers in workers, I imagine it's true there too","msgtype":"m.text"},"ts":1427902022000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: annevk: I think we should asking sicking about this... I believe he has opinions on ServiceWorker vs SharedWorker","msgtype":"m.text"},"ts":1427902023000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: what do you think about my question above regarding why ServiceWorker type at all if SharedWorker won't need a Document any more?","msgtype":"m.text"},"ts":1427902152000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think we discussed that","msgtype":"m.text"},"ts":1427902318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I think the primary motivation is lifetime and persistence","msgtype":"m.text"},"ts":1427902344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: but they are very close","msgtype":"m.text"},"ts":1427902390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the persistence seems a property of the registration to me","msgtype":"m.text"},"ts":1427902392000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think we should have had both, but I don't really see a way out now","msgtype":"m.text"},"ts":1427902410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and lifetime can be described via references to the SharedWorker (like it is today)","msgtype":"m.text"},"ts":1427902410000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: only to perhaps deprecate SharedWorker over time","msgtype":"m.text"},"ts":1427902419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like \"FetchEvent holds a reference to the SharedWorker until respondWith() is called, etc.\"","msgtype":"m.text"},"ts":1427902454000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: why deprecate SharedWorker?  wouldn't it deprecate ServiceWorker?","msgtype":"m.text"},"ts":1427902498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't think we can kill ServiceWorker","msgtype":"m.text"},"ts":1427902538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: can you explain the problems you are worried about when you wrote: \"Although separate SWs are possible today, I really think workers within a single SW is the better approach for the edge cases where there's sync processing\"","msgtype":"m.text"},"ts":1427902835000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: To have two service workers you need separate registrations, you'll need to keep their updates in sync etc","msgtype":"m.text"},"ts":1427902901000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Btw, I'm open to the idea of allowing the browser to spin up multiple instances of the same serviceworker if there's a performance benefit, but I imagine that being difficult to debug.","msgtype":"m.text"},"ts":1427902964000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"As in, in the same way a server will spin up multiple instances of node for multi-core concurrency","msgtype":"m.text"},"ts":1427903005000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: personally I'm coming around to having an API like new ServiceWorker() for spinning up an extra worker-without-document...","msgtype":"m.text"},"ts":1427903025000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I don't think having the exact same SW script is important in this case... it seems you could have one script install call .update() on the other registrations","msgtype":"m.text"},"ts":1427903116000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or just make SharedWorker accessible without a document I guess...","msgtype":"m.text"},"ts":1427903162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"this API mismatch between ServiceWorker and other worker types seems more obvious to me now","msgtype":"m.text"},"ts":1427903186000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I kinda like the idea of new ServiceWorker(). Bascially like SharedWorker but with the lifecycle of ServiceWorker","msgtype":"m.text"},"ts":1427903289000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So new ServiceWorker() couldn't open a websocket and monitor it in the way SharedWorker can, but it's more memory efficient than a sharedworker","msgtype":"m.text"},"ts":1427903365000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sorry if this is obvious, but what makes a ServiceWorker more memory efficient than a SharedWorker?","msgtype":"m.text"},"ts":1427903438000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it shuts down when it isn't in use","msgtype":"m.text"},"ts":1427903459000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"whereas a sharedworker is alive while the parent document is alive","msgtype":"m.text"},"ts":1427903477000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so holding the var sw = new ServiceWorker() would not hold it alive?","msgtype":"m.text"},"ts":1427903506000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in this hypothetical future universe","msgtype":"m.text"},"ts":1427903520000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, that's the case today","msgtype":"m.text"},"ts":1427903530000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Having a reference to navigator.serviceWorker.controller does not stop it terminating","msgtype":"m.text"},"ts":1427903556000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess it comes down to what event is firing in the ServiceWorker when you ask it do something... onmessage?","msgtype":"m.text"},"ts":1427903560000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, it'd absolutely be postMessage and onmessage","msgtype":"m.text"},"ts":1427903579000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so it would spin up for the onmessage event?","msgtype":"m.text"},"ts":1427903581000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep, that's what happens today","msgtype":"m.text"},"ts":1427903594000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: would the message event have waitUntil() as well?","msgtype":"m.text"},"ts":1427903624000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"when waitUntil() is spec'd for fetch event","msgtype":"m.text"},"ts":1427903633000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe it exists for message event already... I'm obviously ignorant of this part of the spec","msgtype":"m.text"},"ts":1427903684000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it doesn't exist yet, but good point, it should. Or we have a global self.waitUntil - that's been suggested a couple of times","msgtype":"m.text"},"ts":1427903727000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea, that would be more future proof as features are added","msgtype":"m.text"},"ts":1427903748000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/slightlyoff/ServiceWorker/issues/400","msgtype":"m.text"},"ts":1427903823000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"although it's confusing. If you do waitUntil(stuff) instead of event.waitUntil(stuff) in your install event, it appears to work, but if 'stuff' fails your serviceworker will still install","msgtype":"m.text"},"ts":1427903870000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the name could be changed to disambiguate with the event.waitUntil()","msgtype":"m.text"},"ts":1427903974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1427903985000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"gsnedders: cssom specifies el.style.background http://dev.w3.org/csswg/cssom/#dom-cssstyledeclaration-_camel_cased_attribute","msgtype":"m.text"},"ts":1427904001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: I don't understand slightlyoff's \"it creates more questions than it answers\" in that issue... it seemed most of the issues were around naming or method-vs-function...  were there more serious internal google concerns?","msgtype":"m.text"},"ts":1427904026000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Not that I'm aware of","msgtype":"m.text"},"ts":1427904047000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, the event-specific waitUntil could be spec'd such that it uses the global wait-until-thing... but also mix in its extra install success/failure logic","msgtype":"m.text"},"ts":1427904114000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/slightlyoff/ServiceWorker/issues/669","msgtype":"m.text"},"ts":1427904226000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: gotta run","msgtype":"m.text"},"ts":1427904239000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1427904304000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan: oh that's just weird","msgtype":"m.text"},"ts":1427904326000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: like, in how it's spec'd, having IDL like that","msgtype":"m.text"},"ts":1427904359000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yeah it's a bit weird. dunno how to make it less so","msgtype":"m.text"},"ts":1427904385000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: can you not just used named property getters/setters per WebIDL and then have a separate bit of magic?","msgtype":"m.text"},"ts":1427904474000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"makes the IDL less weird","msgtype":"m.text"},"ts":1427904479000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: is it black box equivalent?","msgtype":"m.text"},"ts":1427904518000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think it should be","msgtype":"m.text"},"ts":1427904525000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zcorpan: will check once I get home","msgtype":"m.text"},"ts":1427904532000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"-> home","msgtype":"m.emote"},"ts":1427904534000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1427904541000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what level of black-box equiv. do we need? inc. whether the properties are data properties or getter/setter pairs?","msgtype":"m.text"},"ts":1427904699000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: getter/setter on the prototype i think. it's not strictly necessary for web compat but i think it's what we wanted to have here","msgtype":"m.text"},"ts":1427904842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"getters and setter :(","msgtype":"m.text"},"ts":1427904872000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"zcorpan: because oddly the catch-all getters/setters in WebIDL expose themselves as data properties. weird.","msgtype":"m.text"},"ts":1427904906000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: i would expect an implementation to just have a webidl file with all the css properties dumped, rather than magic like the spec","msgtype":"m.text"},"ts":1427906013000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Standalone, which HTML element best represents a physical location?","msgtype":"m.text"},"ts":1427906698000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: <p>?","msgtype":"m.text"},"ts":1427906751000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I wonder. <p> represents a run of text with one or more sentences that discuss a particular topic. It’s usually distinguished from labeling content.","msgtype":"m.text"},"ts":1427906929000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I wish we had something like <location>, in the same way we have <time>.","msgtype":"m.text"},"ts":1427906991000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Why? What difference would it make? Is this about a hypothetical world where we have software that's interested in finding all web pages that have physical locations, but is not smart enough to do its own text parsing?","msgtype":"m.text"},"ts":1427907287000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i wish we had <banana> to mark up physical bananas :-)","msgtype":"m.text"},"ts":1427907392000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Dammit zcorpan now I'm hungry","msgtype":"m.text"},"ts":1427907495000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mohahaha","msgtype":"m.text"},"ts":1427907510000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: btw, I'll test that stylesheet thing for you","msgtype":"m.text"},"ts":1427907836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks!","msgtype":"m.text"},"ts":1427907859000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"is trying to figure out nosniff","msgtype":"m.emote"},"ts":1427907868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, zcorpan: is this a minimalist argument? Like, why even have a <time> element?","msgtype":"m.text"},"ts":1427907886000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: we don't add anything without a compelling use case","msgtype":"m.text"},"ts":1427907904000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathanNeal: \"i want X\" is not good enough","msgtype":"m.text"},"ts":1427907917000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathanNeal: see https://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F","msgtype":"m.text"},"ts":1427907944000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathanNeal: in particular, don't forget about step 1 https://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F","msgtype":"m.text"},"ts":1427907944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maha","msgtype":"m.text"},"ts":1427907947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"win","msgtype":"m.emote"},"ts":1427907957000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"We redefined <address> to the point that it can almost never represent a physical location.","msgtype":"m.text"},"ts":1427907965000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Now we’re missing the ability to markup a location associated with content.","msgtype":"m.text"},"ts":1427907985000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Microformats","msgtype":"m.text"},"ts":1427907994000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Microformats is fairly focused around the development of microformats (specs) and everything related - so you're likely right there","msgtype":"m.text"},"ts":1427907995000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"<address> was never a location","msgtype":"m.text"},"ts":1427908011000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HTML6","msgtype":"m.text"},"ts":1427908017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would have expected an entry","msgtype":"m.emote"},"ts":1427908023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XHTML!","msgtype":"m.text"},"ts":1427908031000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Looks like Ms2ger has some work to do","msgtype":"m.text"},"ts":1427908049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<JonathanNeal:location>","msgtype":"m.text"},"ts":1427908051000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I believe the answer is found later in that faq, zcorpan: “In the future, it is expected that the <time> element will be dropped.”","msgtype":"m.text"},"ts":1427908062000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Lol","msgtype":"m.text"},"ts":1427908067000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"when the <time> is right","msgtype":"m.text"},"ts":1427908091000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"When <plaintext> is gone","msgtype":"m.text"},"ts":1427908117000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that section can probably be removed, i think it's basically fixed now","msgtype":"m.text"},"ts":1427908178000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: <address> very name suggests a physical location, and it’s original definition was ambigiously against such a definition at best http://www.w3.org/MarkUp/html-spec/html-spec_5.html#SEC5.5.3","msgtype":"m.text"},"ts":1427908184000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: the tag name is irrelevant, it's the element's definition that defines what the element means","msgtype":"m.text"},"ts":1427908235000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: which is why I shared that definition for you.","msgtype":"m.text"},"ts":1427908271000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TODO(zcorpan): clean up FAQ, removing old stuff","msgtype":"m.text"},"ts":1427908301000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathanNeal: \"contains such information as address, signature and authorship\" - ok, i stand corrected","msgtype":"m.text"},"ts":1427908338000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I’m fine with the minimalist argument. I reject the idea that <time> is somehow valid but location is not. We have an API for time and location. We markup time and location as it results to a document or a section within a document. We even had an element, <address>, that was often used to markup location, and allowed for this in its original definition,","msgtype":"m.text"},"ts":1427908372000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"by the account I’ve shared above.","msgtype":"m.text"},"ts":1427908372000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"but in html4 it's not an address","msgtype":"m.text"},"ts":1427908384000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gotta go","msgtype":"m.emote"},"ts":1427908448000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Its definition changes often. Even HTML5 Doctor has an outdated, vague definition and it claims to be for HTML5 http://html5doctor.com/the-address-element/","msgtype":"m.text"},"ts":1427908462000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"}
]