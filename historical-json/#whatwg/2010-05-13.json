[
{"content":{"body":"Any of the html5lib guys awake at the moment?","msgtype":"m.text"},"ts":1273712160000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Depends on who is sufficiently an html5lib guy for your requirements","msgtype":"m.text"},"ts":1273712340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Anyone responsible for the development of it.","msgtype":"m.text"},"ts":1273712460000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I have commit access and wrote some bits of its code","msgtype":"m.text"},"ts":1273712580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though I'm largely irresponsible","msgtype":"m.text"},"ts":1273712581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Good enough.  You have any clue if you guys are going to try and get it pushed into the standard modules?","msgtype":"m.text"},"ts":1273712640000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I don't believe I've heard anybody intending to try that any time soon","msgtype":"m.text"},"ts":1273712700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Kk.","msgtype":"m.text"},"ts":1273712701000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"It ought to be made fast (i.e. written in C) before attempting to make it standard","msgtype":"m.text"},"ts":1273712702000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The teacher in this Python class I'm taking was just wondering.","msgtype":"m.text"},"ts":1273712760000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"As he had it listed as a standard external module.","msgtype":"m.text"},"ts":1273712820000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"annevk: A Python class.","msgtype":"m.text"},"ts":1273717080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boblet: i'm working on your feature request. :)","msgtype":"m.text"},"ts":1273726020000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: lol","msgtype":"m.text"},"ts":1273726021000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"sorry to forget the @ in the original","msgtype":"m.text"},"ts":1273726022000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I was pretty shocked how much things have changed in the last two years","msgtype":"m.text"},"ts":1273726080000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"really didn’t realise the rate of progress","msgtype":"m.text"},"ts":1273726081000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yay browser makers!","msgtype":"m.text"},"ts":1273726082000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"hsivonen: Oh very colol indeed.","msgtype":"m.text"},"ts":1273726200000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1273726201000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"totally. :)  now, would you expect ie7 to remain in the same position as you change years?","msgtype":"m.text"},"ts":1273726202000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"http://validator.nu/?doc=http%3A%2F%2Fwww.in-nomine.org%2F~asmodai%2F3d.html passes as expected","msgtype":"m.text"},"ts":1273726203000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1273726204000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Now to go back to being drained of my bodily moisture in this Thai heatwave","msgtype":"m.text"},"ts":1273726260000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"paul_irish: yeah — each browser is in the same arc, so flipping between 2008, 2009 and 2010 shows each arc filling out (well, depending on browser)","msgtype":"m.text"},"ts":1273726320000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: some browsers disappear in later years","msgtype":"m.text"},"ts":1273726321000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"yah only from 2008, only ie7 survives until the 2010 view. :/","msgtype":"m.text"},"ts":1273726380000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"that makes things a little tricky","msgtype":"m.text"},"ts":1273726381000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Firefox 2 survives 08/09","msgtype":"m.text"},"ts":1273726382000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"we could probably assign a position for each browser (irrespective of version)","msgtype":"m.text"},"ts":1273726500000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"hrm, you could have arcs for every browser in all views, and have them blank when that browser isn’t represented","msgtype":"m.text"},"ts":1273726501000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"divya: yeah","msgtype":"m.text"},"ts":1273726502000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"that’d work too","msgtype":"m.text"},"ts":1273726560000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"so 3 spaces for IE 2 spaces for FF and 1 each for the rest. ","msgtype":"m.text"},"ts":1273726561000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"and a ghost ie5","msgtype":"m.text"},"ts":1273726620000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":":|","msgtype":"m.text"},"ts":1273726621000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"paul_irish: whaaaa","msgtype":"m.text"},"ts":1273726680000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"In any case I think this should be an 'alternate view' but not default :|","msgtype":"m.text"},"ts":1273726681000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya: completely agree. current view is more helpful. ‘locked’ view only good for over-time comparison","msgtype":"m.text"},"ts":1273726860000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"btw you can use numbers in class names if you want ;-) (twenty10 etc is cute tho!)","msgtype":"m.text"},"ts":1273726920000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"s/use numbers in class names/start class names with numbers/","msgtype":"m.text"},"ts":1273726980000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(read what I thought, not what I typed)","msgtype":"m.text"},"ts":1273726981000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":";-)","msgtype":"m.text"},"ts":1273726982000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"you can? whoa sweet","msgtype":"m.text"},"ts":1273727040000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: in HTML5 class/id names can be any unicode character(s) except space","msgtype":"m.text"},"ts":1273727100000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"kanji is fine","msgtype":"m.text"},"ts":1273727101000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"beautiful.","msgtype":"m.text"},"ts":1273727102000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"does that degrade fine?","msgtype":"m.text"},"ts":1273727103000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"dunno about browser support for crazy things like smileys, but a starting number was only ever a validation issue, and I’ve seen kanji class names over here on live Japanese sites","msgtype":"m.text"},"ts":1273727160000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: woah sweet!","msgtype":"m.text"},"ts":1273727161000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1273727220000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"last time I tried, it didnt detect for ids starting with numbers. Though that was more than a year ago :/","msgtype":"m.text"},"ts":1273727221000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#classes which links to http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#space-separated-tokens","msgtype":"m.text"},"ts":1273727280000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"“A set of space-separated tokens is a string containing zero or more words separated by one or more space characters, where words consist of any string of one or more characters, none of which are space characters”","msgtype":"m.text"},"ts":1273727281000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"divya: it meaning validator?","msgtype":"m.text"},"ts":1273727340000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: no, the styles did not apply :/","msgtype":"m.text"},"ts":1273727400000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"when I did #1 { blah: blah; }","msgtype":"m.text"},"ts":1273727401000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"ohrly!? do you remember which browser?","msgtype":"m.text"},"ts":1273727402000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: wow most likely Firefox but that was a long time ago :/","msgtype":"m.text"},"ts":1273727403000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"crikey, didn’t think browsers would actually enforce that rule. seems pretty brutal","msgtype":"m.text"},"ts":1273727460000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"well, maybe I’m living in a theoretical world then re: starting with a number","msgtype":"m.text"},"ts":1273727520000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: they still dont http://dl.dropbox.com/u/952/random.html","msgtype":"m.text"},"ts":1273727521000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"yeah, I’m finding the same thing ;-(","msgtype":"m.text"},"ts":1273727580000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"jeez, that’s crap","msgtype":"m.text"},"ts":1273727581000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"could it be something to do with DOM naming prefs","msgtype":"m.text"},"ts":1273727700000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"sorry for ray of false hope","msgtype":"m.text"},"ts":1273727701000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"ROFL","msgtype":"m.text"},"ts":1273727702000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"boblet: its up. take a look","msgtype":"m.text"},"ts":1273727820000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"ooo nice jeorb! :)","msgtype":"m.text"},"ts":1273727940000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"btw I tested class and id names with →, ☺ and オ. all worked","msgtype":"m.text"},"ts":1273728060000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"so there’s something about starting numbers huh","msgtype":"m.text"},"ts":1273728120000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(all worked = latest Chrome, Webkit, Opera, Firefox)","msgtype":"m.text"},"ts":1273728121000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: ha! That is interesting to note :) I sense a blog post :P","msgtype":"m.text"},"ts":1273728300000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya: I’ll leave the IE checking to you ;-)","msgtype":"m.text"},"ts":1273728301000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: sheesh The only Windows I have is Vista which eats my battery in 2 mins flat.","msgtype":"m.text"},"ts":1273728480000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"that’s a short window for browser testing","msgtype":"m.text"},"ts":1273728600000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"paul_irish: the JS var twenty10 etc in script.js are how you’re doing the alternate view right?","msgtype":"m.text"},"ts":1273728660000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1273728720000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"it looks to see if there isnt a block where it expects one and chucks in a fake one","msgtype":"m.text"},"ts":1273728780000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"going one by one through the browsers through the yeras.","msgtype":"m.text"},"ts":1273728781000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"huh. tried to hack a version with all browsers taking a slot on every year, but the script doesn’t seem to work on the locally saved version. maybe b/c Chrome saved the HTML with all-caps tags","msgtype":"m.text"},"ts":1273728840000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yeah, that was it. wow, I done gone broke it good now tho","msgtype":"m.text"},"ts":1273729020000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"while you're at it, size the bars to be representative of browser market share, why dontcha. :)","msgtype":"m.text"},"ts":1273729080000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"sure, right after I pop round to bring you both a cup of tea and a biscuit…","msgtype":"m.text"},"ts":1273729140000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: Earl Grey Pls. :)","msgtype":"m.text"},"ts":1273729141000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"divya: certainly ma’am, although perhaps ma’am would care to try the broken orange pekoe afternoon blend?","msgtype":"m.text"},"ts":1273729260000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: only if it comes with a scone :P","msgtype":"m.text"},"ts":1273729320000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"I’ll just grab some clotted cream, brb","msgtype":"m.text"},"ts":1273729500000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"oh fun, more CORS email","msgtype":"m.text"},"ts":1273730760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yawn","msgtype":"m.text"},"ts":1273730820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webr3, please raise an issue only once instead of spamming it in every thread","msgtype":"m.text"},"ts":1273731480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the best practice method of constructing an array of sorted strings when you receive them in a random order?","msgtype":"m.text"},"ts":1273731481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"collect them out of order then quick sort then remove duplicates?","msgtype":"m.text"},"ts":1273731540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webr3, also, it may help to read the archives, the issue you have been raising in about three emails since I was asleep has already been recorded and a solution has already been proposed","msgtype":"m.text"},"ts":1273731541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that seems like it'd be slow","msgtype":"m.text"},"ts":1273731542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, spec doesn't have to be fast :p","msgtype":"m.text"},"ts":1273731600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"assuming this is for WebSRT","msgtype":"m.text"},"ts":1273731601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm writing code for my game","msgtype":"m.text"},"ts":1273731602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ooh, sounded very much like collecting cues and sorting them :)","msgtype":"m.text"},"ts":1273731720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nah","msgtype":"m.text"},"ts":1273731721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess duplicates should've alarmed me","msgtype":"m.text"},"ts":1273731722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm, maybe it's better to just put them in an array doing mem moves as i go","msgtype":"m.text"},"ts":1273731723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so they're pre-sorted","msgtype":"m.text"},"ts":1273731780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that seems like it'd involve a lot of moves...","msgtype":"m.text"},"ts":1273731781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: point taken and I'll check through the archives to see if i can find it","msgtype":"m.text"},"ts":1273733340000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"really doesn't want to be sending the mail(s) about CORS or having any worries or issues with it at all :(","msgtype":"m.emote"},"ts":1273733460000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Hixie: transfer them into an array as key's on the way in (rather than values), that'll remove all duplicates without any work","msgtype":"m.text"},"ts":1273733760000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"\"as key's\"?","msgtype":"m.text"},"ts":1273733820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"string1\" = '',","msgtype":"m.text"},"ts":1273733821000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"yeah instead of [] = \"string1\"","msgtype":"m.text"},"ts":1273733822000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"(depending on length of strings)","msgtype":"m.text"},"ts":1273733823000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"oh i'm not using javascript","msgtype":"m.text"},"ts":1273733880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is a compiler language","msgtype":"m.text"},"ts":1273733881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"non-option then i guess :)","msgtype":"m.text"},"ts":1273734000000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"also i'm more concerned about the work the computer does than the work i have to do :-)","msgtype":"m.text"},"ts":1273734001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"probably produce way less op codes, but depending on size of strings etc would have other performance hits","msgtype":"m.text"},"ts":1273734240000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"best of luck though, sure you'll figure it out easily enough (if not already)","msgtype":"m.text"},"ts":1273734241000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"http://www.w3.org/Bugs/Public/show_bug.cgi?id=9662 -- lol","msgtype":"m.text"},"ts":1273736760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's unfortunate that with the current process that bug may end up escalating to a meaningless vote","msgtype":"m.text"},"ts":1273736820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wasting everyone's time for something that will not change","msgtype":"m.text"},"ts":1273736821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least that's a technical question","msgtype":"m.text"},"ts":1273736880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not as much of a waste of time as what reference to use for ascii","msgtype":"m.text"},"ts":1273736881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unlike this one, that one we could actually do something about","msgtype":"m.text"},"ts":1273737000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder why Unicode doesn't define ASCII as code points 1-127","msgtype":"m.text"},"ts":1273737001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"0-127 I mean","msgtype":"m.text"},"ts":1273737002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"44 new CORS emails since Tuesday in only one of the running threads","msgtype":"m.text"},"ts":1273737120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't seem useful to change it","msgtype":"m.text"},"ts":1273737121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(not counting all the duplicates I receive)","msgtype":"m.text"},"ts":1273737122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, nothing new (the claim about new is not accurate, it's simply not done)","msgtype":"m.text"},"ts":1273737180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and to be honest I'm not really sure what to say in the security section","msgtype":"m.text"},"ts":1273737240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I had time I would volunteer to write a draft of a security section","msgtype":"m.text"},"ts":1273737300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I suppose I could expand the sentence on validation saying you shouldn't just pass on everything from origin a to c via yourself, b","msgtype":"m.text"},"ts":1273737301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but in the end developers won't read CORS","msgtype":"m.text"},"ts":1273737302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if it helps, I think they will","msgtype":"m.text"},"ts":1273737420000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"is a developer, /me read it","msgtype":"m.emote"},"ts":1273737480000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"sure a couple might","msgtype":"m.text"},"ts":1273737600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/might/will/","msgtype":"m.text"},"ts":1273737601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but most won't","msgtype":"m.text"},"ts":1273737602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think security considerations should cover the following things:","msgtype":"m.text"},"ts":1273737603000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"1) Two-party interactions","msgtype":"m.text"},"ts":1273737604000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"2) Three-party interactions - potential for Confused Deputy risk in this scenario","msgtype":"m.text"},"ts":1273737605000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"3) Ways to avoid Confused Deputy - validate inputs before retransmitting, distinguish requests made on behalf of third parties in your protocol, or use secret tokens in combination with CORS for services to be used cooperatively","msgtype":"m.text"},"ts":1273737660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"4) How you can use CORS combined with secret tokens to get a stronger defense than either separately, even for two-party interactions","msgtype":"m.text"},"ts":1273737720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess security considerations should also discuss the no-credentials mode of CORS, since that is in the CORS spec","msgtype":"m.text"},"ts":1273737780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and I guess there should be a list of potential pitfalls for implementors to watch out for, I think","msgtype":"m.text"},"ts":1273737781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's http://dev.w3.org/2006/waf/access-control/#user-agent-security","msgtype":"m.text"},"ts":1273737782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that seems to be a good start on the UA issues","msgtype":"m.text"},"ts":1273737840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I could write at least a rough outline for the 4 things I mentioned","msgtype":"m.text"},"ts":1273737841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not sure I have time to draft final text","msgtype":"m.text"},"ts":1273737900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a draft might be enough for me to finish it","msgtype":"m.text"},"ts":1273737901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the outline sounds good, i'm just not sure how to fill them in... :/","msgtype":"m.text"},"ts":1273737960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: (i hate to ask, honestly) - if the headers (i mean the allowed headers) from UMP where added to CORS and it was sealed at that, would the vendors be happy / could it go through to rec. (security section aside) - hixie replied \"I'm not familiar with the browser vendor opinions on this specific issue.\" - perhaps you know, or could ask /end - i swear I'll never mention CORS again","msgtype":"m.text"},"ts":1273738260000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"mhausenblas: morning :)","msgtype":"m.text"},"ts":1273738320000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"i'd like to provide some text for xhr's intro section that talks about how to safely do some common things that tyler thinks are dangerous, but i haven't been able to figure out what that is exactly","msgtype":"m.text"},"ts":1273738380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"morning webr3 ","msgtype":"m.text"},"ts":1273738381000,"senderName":"mhausenblas","senderId":"mhausenblas@irc"},
{"content":{"body":"webr3, I don't understand","msgtype":"m.text"},"ts":1273738382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: CORS limits to 5 headers, UMP allows more headers (Location etc) still a whitelist, but also allows Uniform-Headers = \"Uniform-Headers\" \":\" 1#field-name - basically http://dev.w3.org/2006/waf/UMP/#response-header-filtering section 4.2 only - could that be added to CORS [/me would be happy could work with that, under current setup i/we simply can't)","msgtype":"m.text"},"ts":1273738500000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"s/5/6","msgtype":"m.text"},"ts":1273738501000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"I thought I already told you it's an open issue","msgtype":"m.text"},"ts":1273738620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you already raised it more than once on the mailing list","msgtype":"m.text"},"ts":1273738621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"patience","msgtype":"m.text"},"ts":1273738680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay I'll take you at your word it's being handled & leave it there","msgtype":"m.text"},"ts":1273738681000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"CORS has a way to allow additional request headers","msgtype":"m.text"},"ts":1273738740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does it not have a way to expose additional response headers yet?","msgtype":"m.text"},"ts":1273738741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not yet, I'm waiting for whether we want to rename the headers or not","msgtype":"m.text"},"ts":1273738742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so far nobody replied so I guess we won't","msgtype":"m.text"},"ts":1273738743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and by nobody I mean affected browser vendors)","msgtype":"m.text"},"ts":1273738800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what kind of replies are you looking for?","msgtype":"m.text"},"ts":1273738801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'd rather not change them unless the new names are a huge improvement","msgtype":"m.text"},"ts":1273738802000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I won't object if other vendors want to change","msgtype":"m.text"},"ts":1273738803000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(we could always support the old names too for a transition period)","msgtype":"m.text"},"ts":1273738860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"something like 1) looks great lets do it 2) if you change that proposed syntax to this lets do it 3) not worth the change 4) looks great, but only if Mozilla/WebKit makes the changes too","msgtype":"m.text"},"ts":1273738861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"something like that","msgtype":"m.text"},"ts":1273738920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see http://lists.w3.org/Archives/Public/public-webapps/2010AprJun/thread.html#msg508 othermaciej","msgtype":"m.text"},"ts":1273738921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oops http://lists.w3.org/Archives/Public/public-webapps/2010AprJun/0508.html (there's no thread)","msgtype":"m.text"},"ts":1273738922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, I see","msgtype":"m.text"},"ts":1273738980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"does that cover all the headers that start with \"Accesss-Cotrol-\"?","msgtype":"m.text"},"ts":1273739040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1273739041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only \"Origin\" remains unchanged, effectively","msgtype":"m.text"},"ts":1273739042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"CORS\" seems a bit mysterious as a header name, but I do like getting rid of the obsolete Access-Control","msgtype":"m.text"},"ts":1273739100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I couldn't really think of something better","msgtype":"m.text"},"ts":1273739220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"http cors\" or some such would be easy to find though","msgtype":"m.text"},"ts":1273739221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm writing up my thoughts in email","msgtype":"m.text"},"ts":1273739280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"my ideas so far:","msgtype":"m.text"},"ts":1273739281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CORS ==> Allow-Access","msgtype":"m.text"},"ts":1273739282000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CORS-Methods ==> Allow-Methods","msgtype":"m.text"},"ts":1273739283000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"CORS-Headers ==> Allow-Headers","msgtype":"m.text"},"ts":1273739284000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"can't think of a good name for CORS-preflight","msgtype":"m.text"},"ts":1273739340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe Allow-Request-Headers to make space for the response version","msgtype":"m.text"},"ts":1273739341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or perhaps that one could be Reveal-Headers","msgtype":"m.text"},"ts":1273739342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Expose-Headers was my idea","msgtype":"m.text"},"ts":1273739400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CORS-Expose-Headers","msgtype":"m.text"},"ts":1273739401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like Expose better than Reveal","msgtype":"m.text"},"ts":1273739402000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: perfect, anything like that","msgtype":"m.text"},"ts":1273739403000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Allow-Access is not really accurate though, it's not really about granting access","msgtype":"m.text"},"ts":1273739404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't it?","msgtype":"m.text"},"ts":1273739460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that header is what the browser uses to determine whether to expose the response, right?","msgtype":"m.text"},"ts":1273739461000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe it should be Expose-Response","msgtype":"m.text"},"ts":1273739462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's an interesting one","msgtype":"m.text"},"ts":1273739463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless it's also used for other purposes","msgtype":"m.text"},"ts":1273739464000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"can't we stop renaming things and let the platform stablilize?","msgtype":"m.text"},"ts":1273739520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't really want to rename things","msgtype":"m.text"},"ts":1273739521000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the Access-Control-* names are not so great, but not so terrible I feel compelled to change","msgtype":"m.text"},"ts":1273739522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but others did raise the idea of change, so I'd like to propose good names in case we choose to do it","msgtype":"m.text"},"ts":1273739580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: maybe (in this hypothetical renamed world) it should be Expose-Response in response to an actual request, and Allow-Access in response to a preflight","msgtype":"m.text"},"ts":1273739640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe Allow-Request?","msgtype":"m.text"},"ts":1273739700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for the preflight response that makes sense","msgtype":"m.text"},"ts":1273739701000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and Preflight-For or some such instead of CORS-preflight","msgtype":"m.text"},"ts":1273739760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure that makes things more clear","msgtype":"m.text"},"ts":1273739761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1273739820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, this part of the platform is not stable","msgtype":"m.text"},"ts":1273739880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: self-fulfilling statement","msgtype":"m.text"},"ts":1273739940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, but I'm not that keen on it either but since mnot argued quite strongly that the header names were too long and all I thought I should at least give it a chance","msgtype":"m.text"},"ts":1273739941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, guess I'm mostly where othermaciej is with this","msgtype":"m.text"},"ts":1273739942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe mnot was challenge you to get as short as his \"link\" header","msgtype":"m.text"},"ts":1273739943000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"chuckles","msgtype":"m.emote"},"ts":1273740000000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"dunno, but \"his\" link header is around since HTTP 1.0","msgtype":"m.text"},"ts":1273740001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... k","msgtype":"m.text"},"ts":1273740002000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"fwiw.. i kinda like the \"new header to expose more response headers ==> Expose-Headers (or Expose-Response-Headers)\" idea :)","msgtype":"m.text"},"ts":1273740180000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"runs","msgtype":"m.emote"},"ts":1273740181000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"my google Buzz stream is nothing but my twitter/Flickr account and the twitter account of Sjoerd Visscher","msgtype":"m.text"},"ts":1273740360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess Buzz has failed; at least in my universe","msgtype":"m.text"},"ts":1273740420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"people think of google-branded services as trustworthy private space. when google-branded services behave like facebook, it feels creepy","msgtype":"m.text"},"ts":1273740660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"google search is a private space?","msgtype":"m.text"},"ts":1273740661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1273740662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: people think their search terms are","msgtype":"m.text"},"ts":1273740720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah, fair enough","msgtype":"m.text"},"ts":1273740721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"facebook doesn't tend to broadcast your info though","msgtype":"m.text"},"ts":1273740780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the buzz privacy debacle was totally different from the facebook privacy debacle","msgtype":"m.text"},"ts":1273740781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"facebook exposes more and more","msgtype":"m.text"},"ts":1273740840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some private info was broadcast to the general public (perhaps partly by accident) as opposed to facebook which is giving your private data to business partners or people you don't know, in contravention of the expectations it set originally","msgtype":"m.text"},"ts":1273740841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess both cases come down to violating previously established expectations","msgtype":"m.text"},"ts":1273740842000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"buzz was fixed pretty damn quick though","msgtype":"m.text"},"ts":1273740900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: both debacles arise from similar actions but people thought google wouldn't do such a thing","msgtype":"m.text"},"ts":1273740901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"facebook's on the other hand seems to be intentional","msgtype":"m.text"},"ts":1273740902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not that i'm trying to defend google","msgtype":"m.text"},"ts":1273740903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: where as facebook has... let's say a different reputation","msgtype":"m.text"},"ts":1273740904000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"google did do a better job of reacting to the outcry","msgtype":"m.text"},"ts":1273740960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I thought the buzz thing was an intentional greed-driven attempt to compete with facebook in their game","msgtype":"m.text"},"ts":1273740961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I've always assumed that Google only cares about my privacy to the extent it helps foster their self-image as doing no evil","msgtype":"m.text"},"ts":1273741020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: buzz in general as a feature - yes","msgtype":"m.text"},"ts":1273741021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"isn't buzz competing with twitter?","msgtype":"m.text"},"ts":1273741022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"decides to let his PR department handle the issue, since this is logged","msgtype":"m.emote"},"ts":1273741023000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"buzz being shoved in, in a way that exposed personal information, that may have been intentional but it didn't seem very clearly thought out","msgtype":"m.text"},"ts":1273741080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: twitter is pretty clear about what's public and what's private--unlike facebook","msgtype":"m.text"},"ts":1273741140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, the date on the January 1 2006 archive copy is a copypasta error: http://www.whatwg.org/specs/","msgtype":"m.text"},"ts":1273741740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fixed thanks","msgtype":"m.text"},"ts":1273741741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: I don't know if you saw my discussion with Ville on the validator mailing list, but people have been reporting unexpected EOF errors when using it ","msgtype":"m.text"},"ts":1273745520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember now I mentioned this to you earlier","msgtype":"m.text"},"ts":1273745521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't get any errors if I post (using curl) from the shell to localhost port 8888 ","msgtype":"m.text"},"ts":1273745580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but in browsing through the log output for the instance, I do see EOF errors being logged ","msgtype":"m.text"},"ts":1273745581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with the root cause being this:","msgtype":"m.text"},"ts":1273745640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Caused by: java.net.SocketException: Broken pipe","msgtype":"m.text"},"ts":1273745641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at java.net.SocketOutputStream.socketWrite0(Native Method)","msgtype":"m.text"},"ts":1273745642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)","msgtype":"m.text"},"ts":1273745643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)","msgtype":"m.text"},"ts":1273745644000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at org.mortbay.io.ByteArrayBuffer.writeTo(ByteArrayBuffer.java:177)","msgtype":"m.text"},"ts":1273745645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at org.mortbay.io.bio.StreamEndPoint.flush(StreamEndPoint.java:122)","msgtype":"m.text"},"ts":1273745646000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        at org.mortbay.jetty.HttpGenerator.flush(HttpGenerator.java:693)","msgtype":"m.text"},"ts":1273745647000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"        ... 35 more","msgtype":"m.text"},"ts":1273745648000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, if not the root cause, at least the lowest-level error that's causing the EOF","msgtype":"m.text"},"ts":1273745700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: see http://pastebin.org/229072 for the full record of the error","msgtype":"m.text"},"ts":1273745820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suspect this is just due to excessive load on the validator hosts, and that causing a timeout or something","msgtype":"m.text"},"ts":1273745880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: Store the incoming strings in a hashmap (which will remove duplicates, total cost O(n) in the total number of strings), then extract and sort all the keys at the end (O(n log n) in the number of unique strings) - I can't imagine any way to be asymptotically faster than that","msgtype":"m.text"},"ts":1273746300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what was the problem?","msgtype":"m.text"},"ts":1273746420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20100513#l-177","msgtype":"m.text"},"ts":1273746480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1273746540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, that would be the best way","msgtype":"m.text"},"ts":1273746541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"unique in O(N) with O(N) space, sort in O(N log N)","msgtype":"m.text"},"ts":1273746600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's no way to beat N log N by putting things in the right place, because any data structure that sorts on insertion would take O(N log N) time to build","msgtype":"m.text"},"ts":1273746660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: validator.w3.org updated to latest upstream v.nu (SVG and MathML in text/html)","msgtype":"m.text"},"ts":1273749240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also updated http://www.w3.org/html/check (but that is running my workspace code)","msgtype":"m.text"},"ts":1273749300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is even less of a fan of this hybi experiment now","msgtype":"m.emote"},"ts":1273751040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What is it that's being overengineered this time?","msgtype":"m.text"},"ts":1273751640000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva, process :)","msgtype":"m.text"},"ts":1273751880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh boy","msgtype":"m.text"},"ts":1273752060000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Because it wasn't slow enough already?","msgtype":"m.text"},"ts":1273752061000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"more layers is better","msgtype":"m.text"},"ts":1273752120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there a requirements specification for how to decide on a proper definition of 'better'?","msgtype":"m.text"},"ts":1273752240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"drafting one as we speak","msgtype":"m.text"},"ts":1273752300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though getting consensus on it might implode the WG","msgtype":"m.text"},"ts":1273752301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the interwebs","msgtype":"m.text"},"ts":1273752302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's a feature","msgtype":"m.text"},"ts":1273752360000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Makes it easier to transition to new protocols when there's no legacy around","msgtype":"m.text"},"ts":1273752361000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"you're on to something here","msgtype":"m.text"},"ts":1273752362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then we could finally deploy XHTML2","msgtype":"m.text"},"ts":1273752420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and Cookie2","msgtype":"m.text"},"ts":1273752421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and XSL:FO","msgtype":"m.text"},"ts":1273752422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and lots of other X-based specifications","msgtype":"m.text"},"ts":1273752423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the web would reborn","msgtype":"m.text"},"ts":1273752424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"magical","msgtype":"m.text"},"ts":1273752425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"I'm afraid that is too meta-physical for me.  I've been asked to edit the requirements document as part of the IETF process and that's what I'm attempting to do.\" is it just me or is the obvious follow-up question asking if he wants to jump in the pond?","msgtype":"m.text"},"ts":1273758300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"incidentally, i recall Steven Pemberton justifying working on XHTML2 in much the same way","msgtype":"m.text"},"ts":1273758301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.sfgate.com/cgi-bin/article.cgi?f=/c/a/2010/05/12/BUPJ1DDISH.DTL - \"In a full-page ad [...] Adobe says, we love [...] HTML5\"","msgtype":"m.text"},"ts":1273761540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sadly can't find the actual ad","msgtype":"m.emote"},"ts":1273761600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"would be fun to see a picture of the ad, indeed","msgtype":"m.text"},"ts":1273761601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hey, this HTML5 thing.. Do you guys think this is going to be a mainstream thing? I really have my doubts about it!","msgtype":"m.text"},"ts":1273762200000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"I don't know about this HTML5 thing","msgtype":"m.text"},"ts":1273762260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That other HTML5 thing is pretty popular, though","msgtype":"m.text"},"ts":1273762261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The one that's made up of CSS3 and Geolocation and so on","msgtype":"m.text"},"ts":1273762262000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I heard HTML5 also included Flash 10.1 in some definitions..","msgtype":"m.text"},"ts":1273762263000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"It needs a better acronym, there's no X","msgtype":"m.text"},"ts":1273762320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"i know i know, XHTML5!","msgtype":"m.text"},"ts":1273762680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's not catchy enough","msgtype":"m.text"},"ts":1273762800000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"the adobe stuff might be http://www.adobe.com/choice/ ?","msgtype":"m.text"},"ts":1273763100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That and the ads seem to be part of the current Adobe-vs-Apple battle","msgtype":"m.text"},"ts":1273763280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's a nice battle since it's about who's the most open and most supportive of open standards like HTML5","msgtype":"m.text"},"ts":1273763460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I thought it was about who was most open about H.264 :)","msgtype":"m.text"},"ts":1273763520000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"It's about who has the stronger RDF","msgtype":"m.text"},"ts":1273763580000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"othermaciej: you around?","msgtype":"m.text"},"ts":1273770120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: Because I'm biased towards linked lists, just do insertion sort as each comes in.  Worst case in n^2 time, but with a standard fairly uniform distibution of values it'll be fine, and dupe elimination comes along for free.","msgtype":"m.text"},"ts":1273770840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Average case is O(n^2) time too","msgtype":"m.text"},"ts":1273771140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hm, yeah, you're right, since on average you'll just be adding it to the middle.","msgtype":"m.text"},"ts":1273771141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you have n total and m unique it'll be O(nm), vs O(n + m log m) for the hash/sort method, which isn't so good if m and n are large","msgtype":"m.text"},"ts":1273771380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(and if they're not large then you wouldn't worry about performance at all)","msgtype":"m.text"},"ts":1273771381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That then brings up the obvious question of, how large is it?","msgtype":"m.text"},"ts":1273771740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"->                <- this large","msgtype":"m.text"},"ts":1273771920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: i would go with path-compressed tries. http://cr.yp.to/critbit.html","msgtype":"m.text"},"ts":1273771980000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"You have to ensure that what you have is prefix-free in that case, though (which it likely is).","msgtype":"m.text"},"ts":1273772280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: or you can just store strings with some kind of terminating character at the end (nul-byte in case of cstrings)","msgtype":"m.text"},"ts":1273772580000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"btw, karaoke plus ruby","msgtype":"m.text"},"ts":1273782600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.flickr.com/photos/annevk/4601462252/","msgtype":"m.text"},"ts":1273782601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"including that animated effect with the letters","msgtype":"m.text"},"ts":1273782602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess we'll need some new CSS features for that","msgtype":"m.text"},"ts":1273782603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, that wiping effect?  Yeah, I've seen that in karaoke a lot.","msgtype":"m.text"},"ts":1273782720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If we ever decide to handle that, though, it's certainly something just on the CSS side, with no effect on the captioning format, like you said.","msgtype":"m.text"},"ts":1273782780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: there were some reports of your font optimizer POST table mods messing with the printability.","msgtype":"m.text"},"ts":1273786140000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"paul_irish: That's not unexpected","msgtype":"m.text"},"ts":1273786380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":":) ok","msgtype":"m.text"},"ts":1273786381000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"slightly off topic perhaps, but does anyone know why there isn't \"rgba(#abc, 0.5)\"?","msgtype":"m.text"},"ts":1273786560000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i'd happily trade that for that silly version which takes percentages :>","msgtype":"m.text"},"ts":1273786561000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Because people hate #rgb notation.  ;_;","msgtype":"m.text"},"ts":1273786562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I and a few other people have been regularly arguing for an #rgba notation.","msgtype":"m.text"},"ts":1273786563000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/people hate/some browser implementors/","msgtype":"m.text"},"ts":1273786620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't care whether I use hex or decimal, as long as I don't have to convert between them.","msgtype":"m.text"},"ts":1273786621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Because some browser implementors #rgb notation.  ;_;\"","msgtype":"m.text"},"ts":1273786622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've used hex colors for so long that I think about color in hex at this point.","msgtype":"m.text"},"ts":1273786623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"AryehGregor, well currently you do have to convert between them","msgtype":"m.text"},"ts":1273786624000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"AryehGregor: So I write broken regexps.  ^_^","msgtype":"m.text"},"ts":1273786625000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i.e. you got some color in hex... and now you'd like to have it somewhat translucent","msgtype":"m.text"},"ts":1273786680000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Philip`: my N is low (1<=N<100) so the contant factors of setting up a hashmap seem high... isn't it just as easy and efficient to just build an array using binary search to find where to put things and a mem copy to move things around?","msgtype":"m.text"},"ts":1273786681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But yeah, aho, I'm still trying to get #rgba added to the Color module, so we can write #06c8 and similar.","msgtype":"m.text"},"ts":1273786682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that would be awesome","msgtype":"m.text"},"ts":1273786740000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":)~","msgtype":"m.text"},"ts":1273786741000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Hixie: Are you locked to an array, or can you use a linked list?","msgtype":"m.text"},"ts":1273786742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: If N < 100 then why are you caring about performance at all?","msgtype":"m.text"},"ts":1273786743000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i'd be also fine with something like rgba(#abc,0.5) though","msgtype":"m.text"},"ts":1273786744000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"TabAtkins: how do i search a linked list?","msgtype":"m.text"},"ts":1273786745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: there's a lot of them","msgtype":"m.text"},"ts":1273786746000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A lot of what?","msgtype":"m.text"},"ts":1273786800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: I don't understand the context of that question.","msgtype":"m.text"},"ts":1273786801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: lists to sort","msgtype":"m.text"},"ts":1273786802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, lots of short lists?","msgtype":"m.text"},"ts":1273786803000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: how do i construct the linked list in a sorted manner without walking on average half the list each time?","msgtype":"m.text"},"ts":1273786804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1273786805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You don't.  You just do insertion sort and eat that cost, because the constant factors are low and the asymptotic behavior is irrelevant for such small cases.","msgtype":"m.text"},"ts":1273786806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: i have a bunch of trees that contain strings, and for each tree i have to construct a sorted array of strings","msgtype":"m.text"},"ts":1273786860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: i have an irrational aversion to searching for things by just walking a list :-)","msgtype":"m.text"},"ts":1273786861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"About hashmaps, \"just as easy\" depends on what language/library functionality you have available","msgtype":"m.text"},"ts":1273786862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: Stop being irrational, then.","msgtype":"m.text"},"ts":1273786863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1273786864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. std::unordered_set<std::wstring> is trivial in C++ and writing code for an explicit binary search takes much more effort","msgtype":"m.text"},"ts":1273786865000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, what are the objections to the #rgba syntax?","msgtype":"m.text"},"ts":1273786920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Man, I dunno.  Let me dig up the thread for you.","msgtype":"m.text"},"ts":1273786921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn't quite sure if it's really called std::unordered_set","msgtype":"m.emote"},"ts":1273786922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: code writinge effort in this case is not an isue","msgtype":"m.text"},"ts":1273786923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy, hard to tell at a glance whether something has three/four/six/eight characters after the #.  Will take a long time to be usable compatibly.","msgtype":"m.text"},"ts":1273786924000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The latter is probably the main objection, since it's a convenience feature.  I think it's pretty easy to tell 3/4/6/8 apart, though.","msgtype":"m.text"},"ts":1273786980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: So \"easy\" is irrelevant?","msgtype":"m.text"},"ts":1273786981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that last argument is bogus. It will just take longer if they keep delaying it.","msgtype":"m.text"},"ts":1273786982000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"But I suppose the quickest way to get it in, is for some browser to implement it","msgtype":"m.text"},"ts":1273786983000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie: Just write up a few possibilities and time.  With lists that small constant factors that you have little control of will dominate, and so if you need efficiency you'll need to discover it experimentally.","msgtype":"m.text"},"ts":1273787040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lachy: Get to it.","msgtype":"m.text"},"ts":1273787041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders who's the right person to ping for that on chrome team...","msgtype":"m.emote"},"ts":1273787042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<AryehGregor> Lachy, hard to tell at a glance whether something has three/four/six/eight characters after the #.  <- well, rgba(#f00,0.4) is pretty easy to read and it's also very obvious :>","msgtype":"m.text"},"ts":1273787100000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Lachy: Actually, I think the main objection was that it would slow Color3's progression.  Getting two of us to implement would kill that argument.","msgtype":"m.text"},"ts":1273787101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1273787160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(personally i also got somewhat used to using a normalized value for the alpha)","msgtype":"m.text"},"ts":1273787161000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Philip`: i'm just looking for something cheap in cpu and memory","msgtype":"m.text"},"ts":1273787162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if distingishing 3/4/6/8 chars is the main objection, then maybe (though I think this is less ideal) the syntax could be like #369/A","msgtype":"m.text"},"ts":1273787163000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Philip`: primarily cpu","msgtype":"m.text"},"ts":1273787164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: for 1<=N<100","msgtype":"m.text"},"ts":1273787165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How long are the strings?","msgtype":"m.text"},"ts":1273787166000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Lachy, that wouldn't conflict with other uses of /?","msgtype":"m.text"},"ts":1273787167000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i'd be also fine with that","msgtype":"m.text"},"ts":1273787220000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"not in the color properties.","msgtype":"m.text"},"ts":1273787221000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Even in shorthand properties?","msgtype":"m.text"},"ts":1273787222000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"TabAtkins: yeah, probably","msgtype":"m.text"},"ts":1273787223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The / is used in 'font', where it wouldn't conflict","msgtype":"m.text"},"ts":1273787224000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Rereading the latest thread on it, it appears the objections were (1) too late for Colors 3, it would slow down progression for a mere convenience feature, and (2) some implementors don't like #rgb notation at all, and so don't particular care to increase the usefulness of that syntax","msgtype":"m.text"},"ts":1273787225000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't really care... as long as i don't have to convert to dec or percentages (wtf) anymore, i'm fine","msgtype":"m.text"},"ts":1273787226000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"It seems possible that string comparisons would be the most expensive operation so you'd want to minimise those","msgtype":"m.text"},"ts":1273787227000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: 1<=len(S)<20","msgtype":"m.text"},"ts":1273787228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, have you considered just buying better hardware?  :)","msgtype":"m.text"},"ts":1273787280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"#rgb syntax is far superior to rgb() syntax for authors.;","msgtype":"m.text"},"ts":1273787281000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and shuffling smallarrays of pointers would be very quick","msgtype":"m.text"},"ts":1273787282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"AryehGregor: actually not an option in this case, but in any case it's more of a theoretical issue :-)","msgtype":"m.text"},"ts":1273787283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/la/l a/","msgtype":"m.text"},"ts":1273787284000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: true","msgtype":"m.text"},"ts":1273787285000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: Yeah, I agree.  Shrug.  So go ping whoever you need to at Opera and get it in.  ^_^","msgtype":"m.text"},"ts":1273787286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm surprised there isn't a well-known algorithm to solve this like there is for sorting constructed lists","msgtype":"m.text"},"ts":1273787340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe that means a trie would be best, since you'd only need to examine each character of an incoming string once, instead of comparing it against many others","msgtype":"m.text"},"ts":1273787341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ooh, that's an interesting idea","msgtype":"m.text"},"ts":1273787400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hadn't thought of that","msgtype":"m.text"},"ts":1273787401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, I think I know who's job it would be to implement it, but he's currently assigned to other tasks and has other more important tasks scheduled. But I'll see what I can do","msgtype":"m.text"},"ts":1273787402000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(ment already suggested a trie variant)","msgtype":"m.text"},"ts":1273787403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Trie would probably be fine, since you won't be doing any more pointer-chasing than you would with a linked list, and the savings in comparisons might be significant.","msgtype":"m.text"},"ts":1273787460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: yeah, i had opened the page he suggested but not read it yet :-)","msgtype":"m.text"},"ts":1273787520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Since there's not much data it'd all fit in L1 and pointers shouldn't be too expensive, I guess","msgtype":"m.text"},"ts":1273787521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"#abcd #aabbccdd #abc/d #aabbcc/dd ... hmm... i think i prefer the one with slash a little bit","msgtype":"m.text"},"ts":1273787522000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"but the pure one is fine too","msgtype":"m.text"},"ts":1273787523000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"What's an average size for L1 caches these days?","msgtype":"m.text"},"ts":1273787580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Man, I was wracking my brain for something I remembered for quickly sorting an array as it's built, but just realized that the algo I'm thinking of is for quickly *shuffling* an array as it is built.","msgtype":"m.text"},"ts":1273787700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"64 kb + 64 kb (data + instructions) per core, i guess","msgtype":"m.text"},"ts":1273787701000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Ah, that's just fine then.  With roughly 100 strings of 20 characters or less each, that's about 2k of data per set.  So yeah, everything fits in L1 no problem.","msgtype":"m.text"},"ts":1273787702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't like that the A in the rgba() function syntax has a different scale than the other components","msgtype":"m.text"},"ts":1273787760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think it's pretty dumb that <alphavalue> is restricted to being a number in [0.0,1.0], and can't be a percentage like the other colors.","msgtype":"m.text"},"ts":1273787880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i never used percentages for colors","msgtype":"m.text"},"ts":1273787940000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"TabAtkins: http://en.wikipedia.org/wiki/Nehalem_(microarchitecture) says \"32 KB L1 instruction and 32 KB L1 data cache per core; 256 KB L2 cache per core; 4–12 MB L3 cache shared by all cores\"","msgtype":"m.text"},"ts":1273787941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: You have to count all the pointers too, which are probably going to be larger than the actual character data","msgtype":"m.text"},"ts":1273788000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it sounds like it still wouldn't be a problem","msgtype":"m.text"},"ts":1273788001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so there's no need to worry too much about optimising memory usage","msgtype":"m.text"},"ts":1273788002000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hm?  A pointer is 4-8 bytes.  The strings will be 1-40 bytes, depending on encoding.","msgtype":"m.text"},"ts":1273788060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(8 bytes, in this architecture)","msgtype":"m.text"},"ts":1273788061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If it's a simple trie then I guess you need at least a pointer per node, which in the worst case is one per character","msgtype":"m.text"},"ts":1273788120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, right, per trie node.  Yeah, then the pointers are more expensive.","msgtype":"m.text"},"ts":1273788121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"likes it when he can make code faster just by rearranging data and not having to do anything complicated like think about algorithms","msgtype":"m.emote"},"ts":1273788180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what problem are you trying to solve?","msgtype":"m.text"},"ts":1273788300000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"ment: the same one i mentioned earlier","msgtype":"m.text"},"ts":1273788600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: for a trie, it seems you need some sort of dictionary structure per node","msgtype":"m.text"},"ts":1273788601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i still haven't understand why don't you just sort them with qsort?","msgtype":"m.text"},"ts":1273788720000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"if you want to sort N items, just sort them","msgtype":"m.text"},"ts":1273788721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"N log N is pretty good","msgtype":"m.text"},"ts":1273788722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"qsort has good constants","msgtype":"m.text"},"ts":1273788780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Depends if there's going to be lots of duplicates you want to get rid of before sorting","msgtype":"m.text"},"ts":1273788781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"why not remove duplicates _after_ sorting?","msgtype":"m.text"},"ts":1273788782000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"or use heapsort if you need very little memory","msgtype":"m.text"},"ts":1273788783000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you want to remove duplicates before sorting, just use a hashset","msgtype":"m.text"},"ts":1273788784000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"O(N) in number of entries","msgtype":"m.text"},"ts":1273788785000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's no way to sort and unique a list of strings that is faster than O(N log N)","msgtype":"m.text"},"ts":1273788840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(unless they are fixed length, then you can use a radix sort to sort I guess)","msgtype":"m.text"},"ts":1273788841000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Ha, beat me to it.","msgtype":"m.text"},"ts":1273788842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ment: You might find everything is a duplicate of a single value in O(N) time, and then you avoid the whole O(N log N) sort","msgtype":"m.text"},"ts":1273788900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Strings can be treated as fixed-length if you already know the longest length, and treat non-existent characters as sorted before any actual characters.","msgtype":"m.text"},"ts":1273788901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"I'm not *strongly* opposed to the concepts that these semantic elements, attributes and controls add, but I do think that, in order to actually reach a W3C standard quickly, controversial additions that are likely to slow down progress or result in poor interoperability should be removed from the specification so that the W3C HTML working group can reach closure quickly.\"","msgtype":"m.text"},"ts":1273788902000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Is it just me, or is this kind of statement usually a self-fulfilling prophecy?","msgtype":"m.text"},"ts":1273788960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"ment: constructing an array, then sorting it, then removing duplicates, seems like something that could be optimised further","msgtype":"m.text"},"ts":1273788961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: that would be O(N * MAXLEN), so unless MAXLEN is much less than log N it doesn't much help","msgtype":"m.text"},"ts":1273788962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: is your input streaming in, or is it already in memory?","msgtype":"m.text"},"ts":1273788963000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: You don't need a dictionary for a trie.  It's just a normal tree, with each link representing a single element of the lists.","msgtype":"m.text"},"ts":1273788964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a trie is still essentially N log N","msgtype":"m.text"},"ts":1273789020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: i'm just surprised there aren't well-established algorithms for doing this :-)","msgtype":"m.text"},"ts":1273789021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't use a fancy data structure when a simple one would do","msgtype":"m.text"},"ts":1273789022000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Right, but it's fun!","msgtype":"m.text"},"ts":1273789023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: how do you store the connections at each node?","msgtype":"m.text"},"ts":1273789024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: first, there's three-way qsort. second, you would need a really large amount of data with duplicates to speed things up (it would only complicate the code)","msgtype":"m.text"},"ts":1273789025000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"there are - unique using a dictionary, then sort using a common sort","msgtype":"m.text"},"ts":1273789026000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: An array of pointers.","msgtype":"m.text"},"ts":1273789027000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: there are! qsort :)","msgtype":"m.text"},"ts":1273789028000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"othermaciej: it's in memory (in a tree data structure)","msgtype":"m.text"},"ts":1273789029000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what kind of tree?","msgtype":"m.text"},"ts":1273789030000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: for constructing the array while sorting it, i mean","msgtype":"m.text"},"ts":1273789031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: on what axis are you asking for the trees to be described?","msgtype":"m.text"},"ts":1273789080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if the tree is indexed by the string in question, then an inorder traversal will give you back the strings in sorted order","msgtype":"m.text"},"ts":1273789081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: then you're back to walking a list to find things :-P","msgtype":"m.text"},"ts":1273789082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: do you need it to be 1) with low latency (and with intermidiate results available) 2) able to cope with large amount of data 3) high speed ... ? just give some conditions","msgtype":"m.text"},"ts":1273789083000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"that's O(N)","msgtype":"m.text"},"ts":1273789084000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: any - \"it's a tree\" is very little information","msgtype":"m.text"},"ts":1273789085000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: Hm?  No, if you have a set alphabet the strings are constructed from, you just make an array of that size and you can grab the appropriate one with a simple index.","msgtype":"m.text"},"ts":1273789140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: trie is not 'N log N', trie is O(1) if implemented right","msgtype":"m.text"},"ts":1273789141000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"erm, O(N)","msgtype":"m.text"},"ts":1273789142000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"is it a binary tree? a b-tree? something else? are these the strings to the key or not?","msgtype":"m.text"},"ts":1273789143000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: building the trie isn't O(N)","msgtype":"m.text"},"ts":1273789144000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: erm I mean O(N) where N is sum of lenghts of the keys","msgtype":"m.text"},"ts":1273789200000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"othermaciej: it's just a regular tree, like a DOM tree; the strings are just annotations at each node and have nothing to do with the structure of the tree","msgtype":"m.text"},"ts":1273789201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: but you wouldn't get better result with sort anyway as comparsion or varlen keys isn't really O(1) ","msgtype":"m.text"},"ts":1273789202000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"*of","msgtype":"m.text"},"ts":1273789203000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Hixie: so my suggestion is, make an array and a set, visit each tree node, check if string is in set, if not, append to the array","msgtype":"m.text"},"ts":1273789204000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then sort the array","msgtype":"m.text"},"ts":1273789205000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if that is too slow or uses too much memory, then you can worry about whether you need a fancy algorithm","msgtype":"m.text"},"ts":1273789206000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: um, i'm not creeating a 256-entry (or 0x10FFFF-entry!) array at each node of a trie, that would take insane amounts of memory :-P","msgtype":"m.text"},"ts":1273789207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: my suggestion is qsort it, then remove the duplicates","msgtype":"m.text"},"ts":1273789260000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"sorting before removing duplicates could use less memory in theory but is probably slower","msgtype":"m.text"},"ts":1273789261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"man creating an array then sorting it seems so silly","msgtype":"m.text"},"ts":1273789262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't have to, you can save the state-transition table in hashmap :)","msgtype":"m.text"},"ts":1273789263000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"ment: that's what i said earlier","msgtype":"m.text"},"ts":1273789264000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ment: each node of a trie requires some sort of dictionary","msgtype":"m.text"},"ts":1273789320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Heh, just estimate the minimum and maximum character used and establish an array that wide.","msgtype":"m.text"},"ts":1273789321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: you could build a balanced binary tree instead, but then building the tree takes longer than building the array + sorting the array","msgtype":"m.text"},"ts":1273789322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: TabAtkins was disagreeing","msgtype":"m.text"},"ts":1273789323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you can use one dictionary for all states","msgtype":"m.text"},"ts":1273789324000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"basic rule of programming: never use a fancy data structure when a simple one would do","msgtype":"m.text"},"ts":1273789325000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and access it with composed key (state, char)","msgtype":"m.text"},"ts":1273789326000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Hixie: Though a linked list of pointers would be better, since it will be sparse past the root node.","msgtype":"m.text"},"ts":1273789327000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: i'm just surprised there isn't some variant on sorting algorithms that basically sorts as the array is constructed instead of doing it as a two-step process","msgtype":"m.text"},"ts":1273789328000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you haven't tried the simple solution first, you are wasting all our time and are a bad software engineer","msgtype":"m.text"},"ts":1273789329000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: it is :) insert sort","msgtype":"m.text"},"ts":1273789380000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Hixie: a balanced binary tree self-sorts, but it's not really faster","msgtype":"m.text"},"ts":1273789381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: insertion sort still acts on a pre-built array unless we're talking about different things","msgtype":"m.text"},"ts":1273789382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true, insertion sort will do it, but that's O(N^2)","msgtype":"m.text"},"ts":1273789383000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i agree entirely that using complex data structures is silly here, hence my pushback on the ideas of using tries and so forth","msgtype":"m.text"},"ts":1273789440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can use insertion sort in the course of inserting","msgtype":"m.text"},"ts":1273789441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: no, you walk down sorted list and insert it before first larger key","msgtype":"m.text"},"ts":1273789442000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Hixie: why your pushback on building an array and then sorting it then?","msgtype":"m.text"},"ts":1273789443000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's the obvious CS101 solution","msgtype":"m.text"},"ts":1273789444000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: No, insertion sort works fine.  That's why I suggested it beforehand.  ^_^  You need a linked list, not an array, though, to avoid data-moving penalties.","msgtype":"m.text"},"ts":1273789445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you haven't tried that, you are wasting all our time","msgtype":"m.text"},"ts":1273789446000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: no push back there, i'm just saying i'm surprised there's no better solution","msgtype":"m.text"},"ts":1273789447000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: it's basically what i had gotten to before asking here","msgtype":"m.text"},"ts":1273789448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorting is N log N","msgtype":"m.text"},"ts":1273789449000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: data moving while traversing is cheap","msgtype":"m.text"},"ts":1273789450000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"(unless you have a special case amenable to radix sort or the like)","msgtype":"m.text"},"ts":1273789500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ment: walking the whole list each time just seems obviously suboptimal","msgtype":"m.text"},"ts":1273789501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or half the list","msgtype":"m.text"},"ts":1273789502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on average","msgtype":"m.text"},"ts":1273789503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ment: Not in the situation you'd have here, where you would traverse part of the array, and then ahve to move the rest.","msgtype":"m.text"},"ts":1273789504000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ment: That's guaranteeing a full-price n^2 cost.","msgtype":"m.text"},"ts":1273789505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"insertion sort is a poor solution here","msgtype":"m.text"},"ts":1273789560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: what if you move while traversing from the back?","msgtype":"m.text"},"ts":1273789561000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"one O(N^2) pass is not better than an O(N) pass followed by an O(N log N) pass","msgtype":"m.text"},"ts":1273789562000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: do you need it to be high-speed for 10000 or more keys?","msgtype":"m.text"},"ts":1273789563000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"othermaciej: It is if the N is very small (which it is here, roughly 100 strings).","msgtype":"m.text"},"ts":1273789564000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: Or rather, it can be, if the constant factors are small enough for the n^2.","msgtype":"m.text"},"ts":1273789620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they are not smaller than the constant factors for vector append and quicksort","msgtype":"m.text"},"ts":1273789621000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and if your problem set size is 100, then if you are spending time optimizing it at all you're probably wasting effort","msgtype":"m.text"},"ts":1273789680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Individual problems are roughly 100, but if you have a bunch of problems like that then optimization can make sense.","msgtype":"m.text"},"ts":1273789681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(unless you do it over and over)","msgtype":"m.text"},"ts":1273789682000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"optimization doesn't make sense until you measure","msgtype":"m.text"},"ts":1273789740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"But really, I said before that at problem sizes this small you can't establish efficiency through theory, and really just need to do timings.","msgtype":"m.text"},"ts":1273789741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wasn't trying to optimise, just asking if there was some obvious solution intended for this case that he was overlooking :-)","msgtype":"m.emote"},"ts":1273789742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you already found the obvious solution","msgtype":"m.text"},"ts":1273789743000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"apparently","msgtype":"m.text"},"ts":1273789744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there may be marginally faster solutions depending on context, but none of them are obvious, and the obvious solution is not at all bad","msgtype":"m.text"},"ts":1273789800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The obvious solution is always some combination of sorts and trees and hashmaps, whatever the problem is","msgtype":"m.text"},"ts":1273789801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and usually works well enough","msgtype":"m.text"},"ts":1273789802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sometimes you need a crazy data structure","msgtype":"m.text"},"ts":1273789860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not often though","msgtype":"m.text"},"ts":1273789861000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sometimes you need word-encoded hash-table indexed by tree shape","msgtype":"m.text"},"ts":1273789862000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"btw do css* working groups have irc channels?","msgtype":"m.text"},"ts":1273789920000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Overoptimisation of underspecified problems is always fun, though","msgtype":"m.text"},"ts":1273789980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ment: We have #css on the w3 server, but that's not really for CSS discussion, just working group stuff.","msgtype":"m.text"},"ts":1273789981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, i was looking for a place where i can threaten people designing new css3 collection of specs","msgtype":"m.text"},"ts":1273790100000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"Which specs?  I can be threatened here without you having to lift an additional finger.","msgtype":"m.text"},"ts":1273790101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in html4, legend elements had an align attribute they don't have anymore in html5, that's a regression or i'm missing something ?","msgtype":"m.text"},"ts":1273792320000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"use CSS","msgtype":"m.text"},"ts":1273792500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i don't know the policy about backward compatibility but that means someone using \"aglign=bottom\" (don't know if that's valid) which should do something with HTML4 will do nothing with HTML5","msgtype":"m.text"},"ts":1273793100000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"imo, that's an issue","msgtype":"m.text"},"ts":1273793160000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"look in the \"obsolete features\" section","msgtype":"m.text"},"ts":1273793520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's defined there","msgtype":"m.text"},"ts":1273793521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and in the rendering section","msgtype":"m.text"},"ts":1273793522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Can I do something like this?","msgtype":"m.text"},"ts":1273793640000,"senderName":"KaOSoFt","senderId":"KaOSoFt@irc"},
{"content":{"body":"<label for=\"candidato\">Primer grupo</label>","msgtype":"m.text"},"ts":1273793641000,"senderName":"KaOSoFt","senderId":"KaOSoFt@irc"},
{"content":{"body":"<img alt=\"Fotograf�as de Tal persona y tal persona\" height=\"240\" id=\"candidato\" src=\"grupo.jpg\" width=\"320\" />","msgtype":"m.text"},"ts":1273793642000,"senderName":"KaOSoFt","senderId":"KaOSoFt@irc"},
{"content":{"body":"volkmar: it's supported but not valid","msgtype":"m.text"},"ts":1273793643000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: ok, then that's the backward policy: supported but not valid","msgtype":"m.text"},"ts":1273793700000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"thanks :)","msgtype":"m.text"},"ts":1273793701000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"that's true for a lot of things in HTML5","msgtype":"m.text"},"ts":1273793760000,"senderName":"othermaciej","senderId":"othermaciej@irc"}
]