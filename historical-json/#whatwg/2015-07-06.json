[
{"content":{"body":"hi heycam","msgtype":"m.text"},"ts":1436143583000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"hi weinig","msgtype":"m.text"},"ts":1436143592000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: got a second for a WebIDL question?","msgtype":"m.text"},"ts":1436143599000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1436143602000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: for a method like prepend in https://dom.spec.whatwg.org/#parentnode","msgtype":"m.text"},"ts":1436143628000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"heycam: should non-nodes that get passed to it get toString()ed?","msgtype":"m.text"},"ts":1436143653000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig, I think that's right. let me check.","msgtype":"m.text"},"ts":1436143694000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: thanks!","msgtype":"m.text"},"ts":1436143700000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig, so, yes. the last few steps of http://heycam.github.io/webidl/#es-union catch types that didn't match exactly","msgtype":"m.text"},"ts":1436143766000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: excellent, thanks!","msgtype":"m.text"},"ts":1436143780000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig, no problem!","msgtype":"m.text"},"ts":1436143791000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"‚ÄúIf types includes a string type, then return the result of converting V to that type.\"","msgtype":"m.text"},"ts":1436143813000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"couldn‚Äôt be clearer :)","msgtype":"m.text"},"ts":1436143818000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"it's clear if you've made it all the way through the previous 15 steps :)","msgtype":"m.text"},"ts":1436143838000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: and remembered where to look","msgtype":"m.text"},"ts":1436143856000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"heycam: I was pretty sure I was right, I just couldn‚Äôt remember which part it was in","msgtype":"m.text"},"ts":1436143867000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"annevk: i guess you found my github account meanwhile","msgtype":"m.text"},"ts":1436167613000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: did!","msgtype":"m.text"},"ts":1436167619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i'm not convinced that the referrer attribute adds much value, i'd rather first see a use case","msgtype":"m.text"},"ts":1436167642000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: https://github.com/w3c/webappsec/issues/409 and https://github.com/w3c/webappsec/issues/413","msgtype":"m.text"},"ts":1436167649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as in a big website that wants this feature","msgtype":"m.text"},"ts":1436167655000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: well I'd be happy if you removed it from the draft","msgtype":"m.text"},"ts":1436167658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: we should still figure out what the story with fetch(), service workers, and referrers is","msgtype":"m.text"},"ts":1436167684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1436167715000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Setting same-origin URLs works fine, until you hit CSS. I'm not entirely sure what to do there and it seems to be a problem for service workers too. At least, the current model violates SOP (same for resource timing)...","msgtype":"m.text"},"ts":1436167763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps \"no-cors\" cross-origin CSS subresources should simply skip the service worker... And if you want them to go through you need CORS.","msgtype":"m.text"},"ts":1436167815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's the problem with css?","msgtype":"m.text"},"ts":1436167842000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: https://github.com/slightlyoff/ServiceWorker/issues/719","msgtype":"m.text"},"ts":1436167858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: and https://github.com/w3c/webappsec/issues/413","msgtype":"m.text"},"ts":1436167863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: (the referrer for CSS subresources is the stylesheet, not the document)","msgtype":"m.text"},"ts":1436167893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, the sheet itself is from another origin","msgtype":"m.text"},"ts":1436167896000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"but the service worker sees what it loads","msgtype":"m.text"},"ts":1436167902000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1436167908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, at least as currently defined","msgtype":"m.text"},"ts":1436167916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not telling the service worker about those seems like the way to go","msgtype":"m.text"},"ts":1436167920000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"But I guess even with CORS CSS, setting the referrer for its subresources would be problematic","msgtype":"m.text"},"ts":1436167951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So perhaps we should only allow copying the referrer from incoming Request objects","msgtype":"m.text"},"ts":1436167966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotta go for a bit","msgtype":"m.text"},"ts":1436167986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, so the only actual use case I know for changing the referrer to something entirely else is G+","msgtype":"m.text"},"ts":1436167993000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"you need to test that in the wild.","msgtype":"m.text"},"ts":1436168012000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and they don't want to set it to something on the same origin, but to something else","msgtype":"m.text"},"ts":1436168020000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i have a guess that font cdns care about referrer","msgtype":"m.text"},"ts":1436168035000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"i.e. they would like to have plus.url.google.com as outgoing referrer","msgtype":"m.text"},"ts":1436168037000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"(particularly the licensed kind)","msgtype":"m.text"},"ts":1436168085000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"hayato: „Çè„ÅÇ„ÅÇ„ÅÇ„Éºüò≤","msgtype":"m.text"},"ts":1436168733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yey!","msgtype":"m.text"},"ts":1436168756000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1436168759000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"If you are watching GitHub w3c/webcomponents repository, I'm very sorry for spamming :)","msgtype":"m.text"},"ts":1436168795000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"now he says he's sorry! :-)","msgtype":"m.text"},"ts":1436168819000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"In the next, I'll mark all migrated bugs on bugzilla \"MOVED\".","msgtype":"m.text"},"ts":1436168846000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"yay! nice to have something to look forward to!","msgtype":"m.text"},"ts":1436168869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hayato: just kidding„ÉºI'm very glad to see these getting migrated to github","msgtype":"m.text"},"ts":1436168883000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for doing it","msgtype":"m.text"},"ts":1436168888000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jochen__: so the problem is that service workers reset the referrer due to fetch()","msgtype":"m.text"},"ts":1436169882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: so for a site with a service worker the referrer will always be the service worker","msgtype":"m.text"},"ts":1436169898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I think we want that to change","msgtype":"m.text"},"ts":1436169921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oops in hindsight I guess we should have temporarily disabled bugzilla bugmail to public-webapps","msgtype":"m.text"},"ts":1436170070000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"too late now I reckon","msgtype":"m.text"},"ts":1436170076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I'm gonna mark w3c/webcomponents as read","msgtype":"m.text"},"ts":1436170249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's too much","msgtype":"m.text"},"ts":1436170253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought we did disable it...","msgtype":"m.text"},"ts":1436170261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, not super cool this","msgtype":"m.text"},"ts":1436170483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: yeah was just now talking to the webapps team contact; it seems they disabled it on the component but not on all the existing bugs","msgtype":"m.text"},"ts":1436170750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm. it looked public-webapps received the mass mail flood again.","msgtype":"m.text"},"ts":1436171012000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"Sorry for that. I though the mail was disabled as per https://lists.w3.org/Archives/Public/public-webapps/2015JulSep/0006.html","msgtype":"m.text"},"ts":1436171049000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"Yes, I've finished.","msgtype":"m.text"},"ts":1436171088000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"xiaoqian told me that it was not removed from *every* bugs.","msgtype":"m.text"},"ts":1436171245000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"hayato: no worries„Éº not your fault, yeah","msgtype":"m.text"},"ts":1436171257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I should have checked on it myself ahead of time","msgtype":"m.text"},"ts":1436171299000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: would it be interesting to have GitHub auto-notify about commits to whatwg repos in this channel? Or would that interfere with the flow of discussion?","msgtype":"m.text"},"ts":1436171369000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jochen__: it seems kind of okay to tie the referrer thing to public suffixes, though sleevi might have a fit :p","msgtype":"m.text"},"ts":1436171382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: might be fun to try","msgtype":"m.text"},"ts":1436171405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith:  NP. I also should have tested it with a small number of the bugs. If we have a next chance, I think we can do better in the next time. :)","msgtype":"m.text"},"ts":1436171426000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"I guess people can already watch those with twitter, hmm","msgtype":"m.text"},"ts":1436171461000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hayato: no blood was spilled, so I think everybody will survive :)","msgtype":"m.text"},"ts":1436171498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \"e.g.\" is usually followed by a comma?","msgtype":"m.text"},"ts":1436171800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it always is, actually","msgtype":"m.text"},"ts":1436171824000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: huh, okay","msgtype":"m.text"},"ts":1436171840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: \"forbidden response-header name\" why no hyphen after forbidden?","msgtype":"m.text"},"ts":1436171853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just like \"for example\" is","msgtype":"m.text"},"ts":1436171857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: or between same-origin and data-URL in \"same-origin data-URL flag\"","msgtype":"m.text"},"ts":1436171889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well those are sorta special cases, in part because they're unambiguous without yet another hyphen in there","msgtype":"m.text"},"ts":1436171997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think they might actually be more confusing if there were additional hyphens there","msgtype":"m.text"},"ts":1436172057000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because \"same-origin\" is a unit of meaning as a term, and \"data url\" is a unit ofmeaning as a term","msgtype":"m.text"},"ts":1436172165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The extra hyphen would obscure those meanings","msgtype":"m.text"},"ts":1436172192000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if y'all do set up IRC notifications for any github repos here, I recommend you use the github option to send them as IRC Notices rather than regular messages (that would show up as \"real\" channel activity in people's clients)","msgtype":"m.text"},"ts":1436172241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll send an announce mail about the migration to public-webapps soon after I update the links to the bugs on the Custom Elements and HTML Imports editor's draft.","msgtype":"m.text"},"ts":1436172347000,"senderName":"hayato","senderId":"hayato@irc"},
{"content":{"body":"and \"forbidden response-header name\" because I think you also already got \"response-header name\" there as a term","msgtype":"m.text"},"ts":1436172357000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So \"forbidden\" is modifying that existing term","msgtype":"m.text"},"ts":1436172380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: how do you convert svgs to pngs usually","msgtype":"m.text"},"ts":1436174858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I use some online service, but reportedly it's not very good","msgtype":"m.text"},"ts":1436174876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can use an optimizer after the initial conversion, just need to get that done","msgtype":"m.text"},"ts":1436174892000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: as in, I use one of the first search results for that question","msgtype":"m.text"},"ts":1436174896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and I use 500x500 as output size, to avoid most scaling artifacts","msgtype":"m.text"},"ts":1436174924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and what is the best png crusher these days... eric lawrence has opinions, i know","msgtype":"m.text"},"ts":1436174945000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess if you're on Windows you can use his stuff","msgtype":"m.text"},"ts":1436174987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The only reason we even have PNG is Twitter","msgtype":"m.text"},"ts":1436175001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They probably recompress to jpg anyway lol","msgtype":"m.text"},"ts":1436175118000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"davve: Domenic: hah, I see now why it had the extra <path> bits, the original didn't render in Firefox","msgtype":"m.text"},"ts":1436175715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what caused that","msgtype":"m.text"},"ts":1436175723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that seems kind of bad","msgtype":"m.text"},"ts":1436177325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"SimonSapin: regarding application/xhtml+xml, https://bugzilla.mozilla.org/show_bug.cgi?id=1180623 seems relevant to what you were asking about the other day, as far as if there's content relying on application/xhtml+xml and if Servo should support it","msgtype":"m.text"},"ts":1436182606000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: as far as I can tell from the bug description that Julien wrote there, mobile GMail at least must be using application/xhtml+xml for something for some reason","msgtype":"m.text"},"ts":1436182672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"of course that bug's also relevant in the context of what should be done in cases where the application/xhtml+xml being served isn't well-formed XML","msgtype":"m.text"},"ts":1436182771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway we still have to wonder (1) why Gmail is serving anything as application/xhtml+xml to begin with, and (2) whatever UAs they're intending it for must not actually be parsing it as XML, because otherwise they'd be choking on it too, so why don't they just serve it as text/html to them","msgtype":"m.text"},"ts":1436183021000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for the pointer MikeSmith","msgtype":"m.text"},"ts":1436185435000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"philipj: not sure how to answer your window.event questions","msgtype":"m.text"},"ts":1436185631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to put it differently, is there anything I can do?","msgtype":"m.text"},"ts":1436185672000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"if there's a particular pattern of usage seen in some bug report, I could search for that in httparchive","msgtype":"m.text"},"ts":1436185745000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but coming up with a use counter that's a good proxy of the risk seems tricky in this case","msgtype":"m.text"},"ts":1436185776000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"SimonSapin: Ms2ger: why is Servo doing XML5 instead of just HTML?","msgtype":"m.text"},"ts":1436186052000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I would be very surprised if we never needed any xml","msgtype":"m.text"},"ts":1436186412000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Although I think the answer to \"why now\" is more or less \"someone wrote a patch\"","msgtype":"m.text"},"ts":1436186798000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: why? assuming \"HTML\" = HTML + SVG (+ MathML if you want)","msgtype":"m.text"},"ts":1436187039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Because XML does occasionally get used? Not just through top-level documents","msgtype":"m.text"},"ts":1436187097000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean Chrome can't even remove XSLT afaik which is even less common","msgtype":"m.text"},"ts":1436187120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But ... you have no concrete examples?","msgtype":"m.text"},"ts":1436187120000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"IIRC XSLT and SVG are the only things in chrome we need libxml for","msgtype":"m.text"},"ts":1436187145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Seems like a lot to add to a browser without any actual use cases yet, is what confuses me.","msgtype":"m.text"},"ts":1436187193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hypothetically, would the selector weight of `.element:media( min-width: 30em )` be any heavier than the selector weight of `.element` ? Re: http://htmlpreview.github.io/?https://github.com/ResponsiveImagesCG/container-queries/blob/master/index.html","msgtype":"m.text"},"ts":1436187199000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"https://golem.ph.utexas.edu/~distler/blog/ is a concrete example","msgtype":"m.text"},"ts":1436187242000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: sure, but that can be parsed with the HTML parser","msgtype":"m.text"},"ts":1436187299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No need for XML5","msgtype":"m.text"},"ts":1436187312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's not obvious to me that's true without trying it","msgtype":"m.text"},"ts":1436187405000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But we at least all agree that you today can't ship a browser without XML support","msgtype":"m.text"},"ts":1436187422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And someone offered to implement XML5 in a way that would integrate with Servo","msgtype":"m.text"},"ts":1436187466000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So I'm not sure what the discussion here is","msgtype":"m.text"},"ts":1436187477000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I tried it in IE, it works fine","msgtype":"m.text"},"ts":1436187511000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: if this is just a way of helping a new collaborator feel welcomed, that's fine. I'm questioning whether XML is actually something the web platform needs, and surprised Servo's answer is \"yes, and also we invented a new dialect of it that nobody else supports.\"","msgtype":"m.text"},"ts":1436187565000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: hey, if you're here by any chance we have a RegExp with 'u' flag question for you :)","msgtype":"m.text"},"ts":1436187574000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"We're actively trying to remove it in Chromium.","msgtype":"m.text"},"ts":1436187580000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you manage to remove it in Chromium then I'm sure people will be happy to turn it off in Servo","msgtype":"m.text"},"ts":1436187674000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Servo isn't exactly in a position to influence content authors today","msgtype":"m.text"},"ts":1436187693000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fair enough","msgtype":"m.text"},"ts":1436187718000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OTOH XML5 seems like an experiment worth running","msgtype":"m.text"},"ts":1436187718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"IE never implemented it for HTML, is also my point.","msgtype":"m.text"},"ts":1436187739000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I guess it's all the rage to be compatible with WebKit/Blink these days instead of Gecko or IE :-/","msgtype":"m.text"},"ts":1436187815000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"benjamingr: shoot","msgtype":"m.text"},"ts":1436187931000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: we're working on RegExp.escape and we're wondering if/why we need to escape a-fA-F at the start of terms. https://github.com/benjamingr/RegExp.escape/pull/35","msgtype":"m.text"},"ts":1436187985000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Domenic: iirc IE does support XHTML nowadays but sure, long after people stopped caring","msgtype":"m.text"},"ts":1436187998000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: hmm I was almost certain I read some Edge stuff on them doubling-down on not supporting XHTML","msgtype":"m.text"},"ts":1436188018000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"IE added support in 8 or something","msgtype":"m.text"},"ts":1436188071000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah yep, my bad, in version 9. http://blogs.msdn.com/b/ie/archive/2010/11/01/xhtml-in-ie9.aspx","msgtype":"m.text"},"ts":1436188080000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: thanks, are there any special cases we need to be aware of with the \"u\" flag?","msgtype":"m.text"},"ts":1436188315000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Domenic: in terms of usage getting rid of XSLT seems like a possibility, but that blink-dev thread sure did generate a lot of negative feedback","msgtype":"m.text"},"ts":1436188373000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: we did showModalDialog, I am (over-)optimistic that if we take a bit to recover we can do XSLT :)","msgtype":"m.text"},"ts":1436188404000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"assuming that XSLT is gone, do you have any hunch about the additional risk of scrapping XML as a whole, e.g. by replacing it by some new (or old?) HTML insertion mode?","msgtype":"m.text"},"ts":1436188406000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"my hunch is that we can't know before we try parsing SVG as HTML","msgtype":"m.text"},"ts":1436188430000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I see no obvious problems with that, but it really needs to be tried before we can say anything","msgtype":"m.text"},"ts":1436188453000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That does seems pretty doable, since it already happens for SVG in HTML","msgtype":"m.text"},"ts":1436188473000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"After SVG and XSLT... I guess the news that IE has been supporting XHTML syntax since version 9 is a bit worrying","msgtype":"m.text"},"ts":1436188496000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But most people write their XHTML as \"polyglot\"","msgtype":"m.text"},"ts":1436188503000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In other contexts, I guess there's little chance of content depending on XML parsing to fail, so it's down to cases where a new HTML parser mode would result in a different DOM than an XML parser","msgtype":"m.text"},"ts":1436188519000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Yeah, stuff like <div />","msgtype":"m.text"},"ts":1436188527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah :/","msgtype":"m.text"},"ts":1436188558000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"But as I said, mostly polyglot, probably fine...","msgtype":"m.text"},"ts":1436188569000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably","msgtype":"m.text"},"ts":1436188574000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"After SVG, XSLT, XHTML, I don't think there's anything left...","msgtype":"m.text"},"ts":1436188586000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Getting rid of XSLT seems worthwhile on its own, since that also adds a libxslt dependency","msgtype":"m.text"},"ts":1436188611000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Chrome doesn't support RSS (and I hear that needs a forgiving parser these days anyway)...","msgtype":"m.text"},"ts":1436188613000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1436188637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So you just need to trick someone into thinking that removing XSLT is a good way to get love and praise from web developers","msgtype":"m.text"},"ts":1436188655000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Usage:","msgtype":"m.text"},"ts":1436188720000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/78","msgtype":"m.text"},"ts":1436188722000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/79","msgtype":"m.text"},"ts":1436188728000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Are there warnings yet?","msgtype":"m.text"},"ts":1436188773000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Nope","msgtype":"m.text"},"ts":1436188796000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"0.005 seems risky but maybe it could be cut further with warnings","msgtype":"m.text"},"ts":1436188811000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Deprecation messages don't seem very effective, but if we add in a date of removal and make it a very long deprecation window (a year?) it might work out","msgtype":"m.text"},"ts":1436188841000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"But, I imagine we shouldn't do this until the team has had more time to recover from showModalDialog; that took a lot of fortitude.","msgtype":"m.text"},"ts":1436188848000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, I feel like I saw several graphs where deprecation messages made a difference. Maybe it was just showModalDialog though.","msgtype":"m.text"},"ts":1436188893000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, I'm not volunteering to tackle this at least, not now :)","msgtype":"m.text"},"ts":1436188893000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Well, sometimes my best explanation for a big drop has been \"maybe someone saw a warning\", but in most cases it seems to make no difference at all","msgtype":"m.text"},"ts":1436188952000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"In particular when usage is already low that's to be expected, because very few people will even see the warning","msgtype":"m.text"},"ts":1436188969000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I believe hsivonen_ is one of the people who's been opposed to the \"solution\" of parsing application/xhtml+xml through the HTML parser","msgtype":"m.text"},"ts":1436189115000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he's suggested that if we're going to do something about the problem, it should be to implement XML5 parsers","msgtype":"m.text"},"ts":1436189201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i.e., pretty much what the Servo team is trying (as far as I understand)","msgtype":"m.text"},"ts":1436189232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"benjamingr: i think the patch covers it","msgtype":"m.text"},"ts":1436189242000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Might it be an option to make an XML5 parser as a mode of the HTML parser?","msgtype":"m.text"},"ts":1436189257000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"mathiasbynens: thanks!","msgtype":"m.text"},"ts":1436189262000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: only other thing that‚Äôs important here is \\u{‚Ä¶} syntax which i believe is already covered by escaping 0-9a-fA-F","msgtype":"m.text"},"ts":1436189271000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"MikeSmith: hmm now I am trying to figure out what the differences are between XML5 parsing XHTML and the HTML parser parsing XHTML","msgtype":"m.text"},"ts":1436189303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: I guess if XML5 is just XML with error handling, then it would treat <div/> as <div></div>","msgtype":"m.text"},"ts":1436189322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: thanks! Any feedback on the repo and proposal would be greatly appreciated in general.","msgtype":"m.text"},"ts":1436189330000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Domenic: see https://bugzilla.mozilla.org/show_bug.cgi?id=1044332#c5 for Henri's comments < philipj","msgtype":"m.text"},"ts":1436189335000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks!","msgtype":"m.text"},"ts":1436189348000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Domenic: yeah I think so. But we don't have to speculate because there's actually a spec","msgtype":"m.text"},"ts":1436189367000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks for the current spec URL","msgtype":"m.emote"},"ts":1436189374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the dev who implemented the Sever XML5 parser worked from Anne's XML5 spec but updated the spec in teh process","msgtype":"m.text"},"ts":1436189425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well, \"I'd rather see e.g. Blink bear the cost of trying something as radical as getting rid of XSLT or XML parsing instead of us bearing the cost of discovering the impact of such feature removals from the platform.\" heh","msgtype":"m.text"},"ts":1436189437000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"Google Maps was what forced some other engines to add XSLT after Trident and Gecko...\" says https://bugzilla.mozilla.org/show_bug.cgi?id=1044332#c5","msgtype":"m.text"},"ts":1436189445000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Any idea if they're still a user?","msgtype":"m.text"},"ts":1436189453000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"has no idea","msgtype":"m.emote"},"ts":1436189464000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"philipj: seems unlikely... if they were we could probably wipe out the remaining 0.005 with one well-placed internal cake delivery, haha","msgtype":"m.text"},"ts":1436189497000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It does seem unlikely, indeed. On that topic, getting data on which URLs actually trigger use counters would provide a path forward on many issues like this","msgtype":"m.text"},"ts":1436189546000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but the context of some recent gecko bugs over the last couple years is that Gmail is sending application/xhtml+xml for some things to some mobile UAs, including Firefox Mobile","msgtype":"m.text"},"ts":1436189603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Opera Presto had the same problem, and fixed it by reparsing as HTML I think","msgtype":"m.text"},"ts":1436189632000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yeah that's not a fix though","msgtype":"m.text"},"ts":1436189650000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well, not a nice one :)","msgtype":"m.text"},"ts":1436189664000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, but also because it just doesn't work in many cases","msgtype":"m.text"},"ts":1436189685000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it also has security issues","msgtype":"m.text"},"ts":1436189696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't know in which contexts it would happen, but apparently it worked well enough for us to attempt it","msgtype":"m.text"},"ts":1436189733000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Although maybe there was a button one had to press to reparse as HTML, I can't recall","msgtype":"m.text"},"ts":1436189747000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"we should try to get Ygg01 on here (dev who implemented XML5 parsing for Servo)","msgtype":"m.text"},"ts":1436189751000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Doesn't matter now, anyway","msgtype":"m.text"},"ts":1436189752000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1436189756000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/Ygg01","msgtype":"m.text"},"ts":1436189760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: philipj https://github.com/Ygg01/xml5_draft","msgtype":"m.text"},"ts":1436189774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://ygg01.github.io/xml5_draft/","msgtype":"m.text"},"ts":1436189786000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"philipj: https://www.chromium.org/developers/design-documents/rappor may help, but on the other hand it seems like it might fail in precisely these low-numbers use cases","msgtype":"m.text"},"ts":1436189793000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ygg01 also has an XML5 test suite at https://github.com/Ygg01/xml5lib-tests","msgtype":"m.text"},"ts":1436189894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: I've been hearing about Rappor+UseCounter for a while now, but nothing has surfaced outside of Google at least.","msgtype":"m.text"},"ts":1436189911000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"the spec at https://ygg01.github.io/xml5_draft/ is modified from the XML5 spec that Anne originally wrote, and I recall that the changes to it that Ygg01 were also discussed with Anne","msgtype":"m.text"},"ts":1436189988000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"just HTML\" is not a solution that actually works for SVG, XMLHttpRequest, etc.","msgtype":"m.text"},"ts":1436191936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems far too difficult to do anything like that. XML5 + enhancements is a much saner path...","msgtype":"m.text"},"ts":1436191983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I don't know :-/","msgtype":"m.text"},"ts":1436192043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: counting the getter was what I would have suggested, but that seems to return surprising results","msgtype":"m.text"},"ts":1436192062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed. one could also count only the cases where it returns something other than undefined, but I'd be surprised if that came back with a tiny number","msgtype":"m.text"},"ts":1436192115000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"how badly do you want to avoid spec'ing this and adding it to Gecko?","msgtype":"m.text"},"ts":1436192135000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: well, DOM peers have stated they don't want to add it","msgtype":"m.text"},"ts":1436192164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: and it's not exactly a sane extension of the event model, so I guess I'd like to avoid it pretty badly","msgtype":"m.text"},"ts":1436192202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am not convinced \"just HTML\" does not work. But we will see.","msgtype":"m.text"},"ts":1436193175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: wanna try it in Canary? :)","msgtype":"m.text"},"ts":1436193244000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"We can try it in Servo, but results won‚Äôt be as conclusive‚Ä¶","msgtype":"m.text"},"ts":1436193259000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I do! I am not the right expertise for that though. I think TabAtkins was mentioning trying it for SVG recently...","msgtype":"m.text"},"ts":1436193301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: well, ok, do you know of any site compat issues in Gecko due to it not being supported? that would be a good indicator of what would break with removal...","msgtype":"m.text"},"ts":1436193728000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: no, that's the thing","msgtype":"m.text"},"ts":1436193740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nothing at all? very strange","msgtype":"m.text"},"ts":1436193763000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: there might have been one report, linked from that Bugzilla ticket","msgtype":"m.text"},"ts":1436193787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you know if anyone has looked into the history of it, who added it first and why it was copied?","msgtype":"m.text"},"ts":1436193790000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Domenic: it needs to be more than \"just HTML\", the processing model can't be that of text/html","msgtype":"m.text"},"ts":1436193810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: at least not as text/html stands today","msgtype":"m.text"},"ts":1436193819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: it's part of Microsoft's legacy event model","msgtype":"m.text"},"ts":1436193837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: Opera/WebKit copied it for some reason","msgtype":"m.text"},"ts":1436193858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I guess they hit some IE code paths that Gecko did not","msgtype":"m.text"},"ts":1436193875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess finding that reason would be interesting, but takes a bit of work","msgtype":"m.text"},"ts":1436193889000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: there's a pretty long discussion in BTS about removing it too","msgtype":"m.text"},"ts":1436193902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: bugs.opera.com?","msgtype":"m.text"},"ts":1436193922000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: yeah","msgtype":"m.text"},"ts":1436193926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"link?","msgtype":"m.text"},"ts":1436193931000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: Joao might know","msgtype":"m.text"},"ts":1436193936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I no longer have access","msgtype":"m.text"},"ts":1436193940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Makes sense :)","msgtype":"m.text"},"ts":1436193951000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"OK, found it","msgtype":"m.text"},"ts":1436193991000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I had access until the Blink thing happened, didn't really make sense to me anymore at that point, but I guess it would've been useful still from to time for historical perspective","msgtype":"m.text"},"ts":1436194004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well here Joao says \"window.event goes hand with hand with attachEvent\" and attachEvent is long gone","msgtype":"m.text"},"ts":1436194030000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"if it was ever supported in Presto or WebKit, I don't know","msgtype":"m.text"},"ts":1436194048000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"attachEvent used to be supported in Presto at least","msgtype":"m.text"},"ts":1436194083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you're right, looks like it was 'til the end","msgtype":"m.text"},"ts":1436194158000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"MikeSmith: you still around?","msgtype":"m.text"},"ts":1436197197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I wonder why you didn't add hyphens for \"HTTP network fetch\"","msgtype":"m.text"},"ts":1436197207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I reckon I just overlooked that one","msgtype":"m.text"},"ts":1436197532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Will take a look when I get back to my pc","msgtype":"m.text"},"ts":1436197554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm going to commit this first pass in a bit, I guess I can leave the issue open","msgtype":"m.text"},"ts":1436197575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1436197582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah not sure how I missed that","msgtype":"m.text"},"ts":1436200028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"HTTP network or cache fetch\" definitely should be \"HTTP-network-or-cache fetch\"","msgtype":"m.text"},"ts":1436200103000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and so \"HTTP network fetch\" should be \"HTTP-network fetch\"","msgtype":"m.text"},"ts":1436200128000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will make another PR","msgtype":"m.text"},"ts":1436200136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also see if there's any others I missed","msgtype":"m.text"},"ts":1436200147000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I listed a couple of likely candidates","msgtype":"m.text"},"ts":1436200166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1436200237000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where?","msgtype":"m.text"},"ts":1436200238000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"HTTP new header syntax\" should be \"HTTP new-header syntax\"","msgtype":"m.text"},"ts":1436200257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/fetch/issues/63#issuecomment-118905099","msgtype":"m.text"},"ts":1436200309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: gotta go for a bit now","msgtype":"m.text"},"ts":1436200314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1436200314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1436200318000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Once upon a time, I recall there being hypothetical pseudo-classes like :section and :heading. What happened to those?","msgtype":"m.text"},"ts":1436200823000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: The *other* Dominic is now kinda-sorta in charge of investigating ripping out our XML implementation and replacing with something else. \"Just HTML\" for SVG is the leading option there, but it doesn't work for the other cases; we're looking at XML5 or the Sky parser.","msgtype":"m.text"},"ts":1436200971000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Just HTML\" should work for pretty much all SVG in the wild.  Not sure what it does to arbitrary namespaces for scripting.","msgtype":"m.text"},"ts":1436201052000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Sorry for the delay in Bikeshed fixes; got wrapped up in more holiday stuff than I anticipated, and so didn't get time to work on BS.  Will handle it this morning when I get into the office.","msgtype":"m.text"},"ts":1436201176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you were the one who told me about :section and :heading - are they dead? Replaced by custom selectors?","msgtype":"m.text"},"ts":1436201794000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: Yeah.","msgtype":"m.text"},"ts":1436203534000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: For real, tho, just force-generate your spec if Bikeshed is erroring incorrectly.  `bikeshed -f spec`.  It tries its best to fail gracefully and minimally when you force-generate.","msgtype":"m.text"},"ts":1436206711000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, good idea or bad idea: I need context information from a class to do some functions properly, but most/all can *also* be done without that context info. So I'd like to both have all the functions as methods, *and* as unbound functions that don't need a class passed in.","msgtype":"m.text"},"ts":1436208114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Main reason for this is that I've already written them all as unbound methods, and used them throughout my codebase, and don't want to have to rewrite everything to use an object, even tho the object is available everywhere I'm using these functions.)","msgtype":"m.text"},"ts":1436208166000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Python's metaprogramming is... shifty, and I'm not sure how crazy this idea is in it.  In JS I'd be able to handle it no problem.","msgtype":"m.text"},"ts":1436208189000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(repeating from Friday)  peoples!  if I were unsure whether getBoundingClientRect().top could ever be -0, do people think it'd make more sense to file the bug on getBoundingClientRect, or on DOMRect?","msgtype":"m.text"},"ts":1436208918000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: file bugs on the former, but also the latter if it's unclear about negative values","msgtype":"m.text"},"ts":1436208945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: forgot to reply earlier, sorry","msgtype":"m.text"},"ts":1436208955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1436208955000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"no worries :-)","msgtype":"m.text"},"ts":1436208965000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I mean, this was clearly P0 and all, but somehow the world managed to carry on","msgtype":"m.text"},"ts":1436209008000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"TabAtkins: If you have an object instance you can call static methods on it, no problem","msgtype":"m.text"},"ts":1436209144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(otoh, I am not a big fan of static methods at the best of toimes; the python idiom is just to use a function)","msgtype":"m.text"},"ts":1436209201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: They're *currently* all functions and called as such, and I'm trying to avoid rewriting the world just to attach some of them to an object as well.","msgtype":"m.text"},"ts":1436209274000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"just HTML\" clearly doesn't work for all SVG in the wild due to the <html> and <body> elements you get for free and the sizing that implies","msgtype":"m.text"},"ts":1436209503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: unless something changed about CSS' layout model that I missed","msgtype":"m.text"},"ts":1436209513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS has locked densities for pixels, right? Does that mean there is no equivelent to a dp: Density-independent Pixel?","msgtype":"m.text"},"ts":1436209533000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: Seems like you can just import the module they're in and call them rather than doing magic","msgtype":"m.text"},"ts":1436209572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I meean magic also works, but I can't recommend it)","msgtype":"m.text"},"ts":1436209582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yeah, I'm already doing that.  Let me elaborate: Because LXML sucks, I have a module that reimplements useful parts of DOM on top of LXML's stupid tree API.  You pass the element you're working on as the first argument, etc.","msgtype":"m.text"},"ts":1436209703000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But some of the methods can do more if given appropriate context. For example, my check for whether something is an \"opaque\" element (shouldn't have its contents processed, like <script>) defaults to just a few HTML elements, but Bikeshed lets you specify custom elements as opaque, if you're gonna do processing on them in another tool afterwards.","msgtype":"m.text"},"ts":1436209764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That metadata is stored on the document. I could move all the DOM methods to the document class, but then I'd have to rewrite every usage of them to call off of the document object, while today they're just function calls.","msgtype":"m.text"},"ts":1436209796000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thinking of just putting them all under a document class, then using metaprogramming to define function equivalents of all of them that pass None as the self arg for you, so I dont' need to make any code changes.","msgtype":"m.text"},"ts":1436209831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Sorry, when I say \"just HTML\", I'm implying \"with minor parser changes to recognize <svg> as the first tag and switch directly to the foreign-content parser rather than generating the HTML implied elements\".","msgtype":"m.text"},"ts":1436210557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=28918","msgtype":"m.text"},"ts":1436210805000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"JonathanNeal: What do you mean?","msgtype":"m.text"},"ts":1436210835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don‚Äôt think I knew what I meant. I was just learning about Android‚Äôs DP unit and trying to understand it in the context of CSS.","msgtype":"m.text"},"ts":1436210866000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Android's dp unit is basically equivalent to the px unit.","msgtype":"m.text"},"ts":1436210948000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In that it gives an angular-based measurement of the screen, so that you subtend the same visual space on different-resolution devices.","msgtype":"m.text"},"ts":1436210974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeap.","msgtype":"m.text"},"ts":1436210988000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"px got redefined to be non-angular, didn't it?","msgtype":"m.text"},"ts":1436211122000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"also filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=28919 for the DOMRect side of things","msgtype":"m.text"},"ts":1436211584000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: It got defined to be a fixed ratio with the \"in\" unit.  Whether that means it's no longer an angular measure, or that \"in\" is now an angular unit, depends on what unit you're anchoring the set with.","msgtype":"m.text"},"ts":1436212420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jwalden: what's the difference between 0 and -0?","msgtype":"m.text"},"ts":1436212570000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: The sign.","msgtype":"m.text"},"ts":1436212594000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1436212594000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boogyman: divide a finite number by either","msgtype":"m.text"},"ts":1436212597000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"boogyman: 1 / 0 === Infinity; 1 / -0 === -Infinity","msgtype":"m.text"},"ts":1436212607000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1436212628000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"boogyman: short of such division, or a copysign sort of operation, or in JS Object.is that compares using SameValue semantics, it's not super-observable","msgtype":"m.text"},"ts":1436212637000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"but we must never forget that it is a spec we are expounding","msgtype":"m.text"},"ts":1436212663000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":";-)","msgtype":"m.text"},"ts":1436212670000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Ms2ger: while you're reviewing: https://critic.hoppipolla.co.uk/r/5430","msgtype":"m.text"},"ts":1436213991000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"(also: thanks!)","msgtype":"m.text"},"ts":1436213996000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Oh yes, that","msgtype":"m.text"},"ts":1436214109000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm wondering if we should just always use the \\\\btestharness.js pattern","msgtype":"m.text"},"ts":1436214134000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't know the history of how clever we're trying to be, but sgtm","msgtype":"m.text"},"ts":1436214182000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jgraham, ^","msgtype":"m.text"},"ts":1436214214000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger/jgraham: what's the process/timeline for updating the rev of testharness.js that wpt pulls in as a  submodule? Anything I should do?","msgtype":"m.text"},"ts":1436215003000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: It's just \"commit the submodule update and push\", if you can do that, or ask someone who can if you can't","msgtype":"m.text"},"ts":1436215571000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess I don't really know what the right thing to do with that PR is; I think it's fine as is, but it's maybe a matter of taste if we go with the more strict version where possible","msgtype":"m.text"},"ts":1436215660000,"senderName":"jgraham","senderId":"jgraham@irc"}
]