[
{"content":{"body":"they have document.URL though! not to be confused with window.URL.","msgtype":"m.text"},"ts":1414713611000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"still has to actually do the review to make the plan come together","msgtype":"m.emote"},"ts":1414713620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I think it's looking good","msgtype":"m.text"},"ts":1414713627000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: you say \"they're all incompatible!\". I hear \"maybe we can delete it!\"","msgtype":"m.text"},"ts":1414713683000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I doubt we're that lucky","msgtype":"m.text"},"ts":1414713696000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I wonder if we could. Still for <custom-a> I need access to \"the element's base URL\"","msgtype":"m.text"},"ts":1414713716000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this isn't a custom elements thing because you mentioned IE11, so what is it? o_o","msgtype":"m.text"},"ts":1414714126000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"does IE11 support global.URL?","msgtype":"m.text"},"ts":1414714818000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"s/global/window/","msgtype":"m.text"},"ts":1414714831000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"its not URL, really","msgtype":"m.text"},"ts":1414715594000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Let me apologize in advance for not getting it, but is there a browser runnable version of Domenic’s Promise tests?","msgtype":"m.text"},"ts":1414716722000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"^ https://github.com/promises-aplus/promises-tests","msgtype":"m.text"},"ts":1414716753000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Is there a differencee between return undefined; and return; ?","msgtype":"m.text"},"ts":1414721922000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: I think we'd like Mozilla Marketplace to work cross-browser/OS.","msgtype":"m.text"},"ts":1414725561000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"JonathanNeal: no","msgtype":"m.text"},"ts":1414728520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no, there is not a browser runnable version of Domenic’s Promise tests, or no there is no difference between return; and return undefined;, or both?","msgtype":"m.text"},"ts":1414728560000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"the return thing","msgtype":"m.text"},"ts":1414728577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"caitp: it started with some custom elements stuff, then delved into discovering interop hell.","msgtype":"m.text"},"ts":1414728591000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"terinjokes: no URL in IE11","msgtype":"m.text"},"ts":1414728600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: the tests are browserifyable","msgtype":"m.text"},"ts":1414728611000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: unless you do var undefined or something like that maybe","msgtype":"m.text"},"ts":1414728635000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: is it obvious or do i have to do something tricky?","msgtype":"m.text"},"ts":1414728672000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: there is a difference in certain scenarios e.g. `function f(undefined) { return undefined; } f(5);` or `function (undefined){ /* ... 100s of lines later ... */ function g() { return undefined; /* will return 5 */ } /* ... more code here ... */ }(5)","msgtype":"m.text"},"ts":1414728674000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: if you've used browserify before should be pretty simple","msgtype":"m.text"},"ts":1414728684000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Interesting, IE10’s Object.create method does not assign the correct prototype.","msgtype":"m.text"},"ts":1414730979000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: note that hopefully only document.baseURI is important going forward","msgtype":"m.text"},"ts":1414740317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: document.body.baseURI will just return that value (if we need to preserve the propery)","msgtype":"m.text"},"ts":1414740334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I closed it, but I notice now that https://www.w3.org/Bugs/Public/show_bug.cgi?id=27202 is spam","msgtype":"m.text"},"ts":1414740715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: see the URL field","msgtype":"m.text"},"ts":1414740719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-November/033914.html does not redirect to http://lists.w3.org/Archives/Public/public-whatwg-archive/2011Nov/0186.html","msgtype":"m.text"},"ts":1414755989000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"and it is not in the wayback machine","msgtype":"m.text"},"ts":1414755994000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"this breaks a link on https://news.ycombinator.com/item?id=3264074","msgtype":"m.text"},"ts":1414756008000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"We don't have an easy way of fixing that","msgtype":"m.text"},"ts":1414756210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk what is it about lists.whatwg.org?","msgtype":"m.text"},"ts":1414756666000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"is it gone?","msgtype":"m.text"},"ts":1414756671000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: it's not accessible over TLS","msgtype":"m.text"},"ts":1414756702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it was? i see.","msgtype":"m.text"},"ts":1414756801000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1414758374000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Chrome has a quirk in option.text","msgtype":"m.text"},"ts":1414758385000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And IE throws on document.createElement(\"option\").label","msgtype":"m.text"},"ts":1414761159000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Film at 11?","msgtype":"m.text"},"ts":1414761735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: curious in what situations they can be different","msgtype":"m.text"},"ts":1414763973000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: although I guess per spec it seems like \"the element's base URL\" and \"the document's base URL\" are the same.","msgtype":"m.text"},"ts":1414763998000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"xml:base","msgtype":"m.text"},"ts":1414764025000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"right -_-","msgtype":"m.text"},"ts":1414764082000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the plan is to nuke xml:base","msgtype":"m.text"},"ts":1414764725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: there's various open bugs on browsers","msgtype":"m.text"},"ts":1414764731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: most browsers don't really respect it...","msgtype":"m.text"},"ts":1414764743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what is with normal base element?","msgtype":"m.text"},"ts":1414764850000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: that sets the document's base URL","msgtype":"m.text"},"ts":1414764881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and it would be nice if it didn't exist or was not dynamic at least, but...)","msgtype":"m.text"},"ts":1414764904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20976 has my rough plan for replacing the current base URL setup, but I'm waiting for either Chrome or Firefox to remove their remaining xml:base support","msgtype":"m.text"},"ts":1414765191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just wonder if we can fix chrome's baseURI property to return something sensible","msgtype":"m.text"},"ts":1414765262000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wait ... this morning/on my home computer it's being not-retarded... was i hallucinating? will report back when in the office","msgtype":"m.text"},"ts":1414765347000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: make it return the associated document's base URL...","msgtype":"m.text"},"ts":1414765371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No wait it's retarded in Canary even on this computer...","msgtype":"m.text"},"ts":1414765402000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://www.dropbox.com/s/hfba5zwbv9ti30y/Screenshot%202014-10-31%2010.25.13.png?dl=0","msgtype":"m.text"},"ts":1414765555000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: fascinating","msgtype":"m.text"},"ts":1414765675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Firefox has about:newtab","msgtype":"m.text"},"ts":1414765704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah seems Chrome opens up a google.com page that uses AppCache","msgtype":"m.text"},"ts":1414765718000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In yesterday's cursory testing Firefox had sensible baseURI values, Chrome did the weird filename + querystring thing, and IE gave undefined.","msgtype":"m.text"},"ts":1414765751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This discovery that Chrome 38 gives sensible values too is new","msgtype":"m.text"},"ts":1414765764000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, VMWare is broken in OS X 10.10","msgtype":"m.text"},"ts":1414765834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If IE returns undefined, can we do away with baseURI? Would be too good to be true I'm sure","msgtype":"m.text"},"ts":1414765857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OMG","msgtype":"m.text"},"ts":1414765966000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OMG","msgtype":"m.text"},"ts":1414765969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OMG","msgtype":"m.text"},"ts":1414765970000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Developer tools is fucking with me","msgtype":"m.text"},"ts":1414765974000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"document.baseURI","msgtype":"m.text"},"ts":1414766000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"newtab?espv=2&ie=UTF-8:1\"","msgtype":"m.text"},"ts":1414766001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"hello\" + document.baseURI","msgtype":"m.text"},"ts":1414766001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"hellohttps://www.google.com/_/chrome/newtab?espv=2&ie=UTF-8\"","msgtype":"m.text"},"ts":1414766001000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1414766051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1414766087000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"lelele","msgtype":"m.text"},"ts":1414766090000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"ondras","msgtype":"m.text"},"ts":1414766109000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"lest we meet again","msgtype":"m.text"},"ts":1414766109000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1414766120000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"has been idling on this channel for ages","msgtype":"m.emote"},"ts":1414766161000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"never seen you befor","msgtype":"m.text"},"ts":1414766204000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"JonathanNeal how about the table sortable polyfill?","msgtype":"m.text"},"ts":1414766214000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"document.baseURI","msgtype":"m.text"},"ts":1414766260000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"\"https://www.google.de/_/chrome/newtab?espv=2&ie=UTF-8\"","msgtype":"m.text"},"ts":1414766260000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"'hello'+document.baseURI","msgtype":"m.text"},"ts":1414766260000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"\"hellohttps://www.google.de/_/chrome/newtab?espv=2&ie=UTF-8\"","msgtype":"m.text"},"ts":1414766260000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: what about it? =D","msgtype":"m.text"},"ts":1414766267000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"chromium Version 37.0.2062.120 Debian jessie/sid (281580)","msgtype":"m.text"},"ts":1414766270000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"JonathanNeal how far along is it?","msgtype":"m.text"},"ts":1414766277000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: yeah it's a regression from M38","msgtype":"m.text"},"ts":1414766312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=429178","msgtype":"m.text"},"ts":1414766317000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I always wondered if I had a one-character email address (d⊙dm) whether the bug tracker would insert ...s after the character (d...⊙dm). Turns out it does.","msgtype":"m.text"},"ts":1414766339000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Firefox is funny. typeof XMLHttpRequest /* “function\" */ XMLHttpRequest instance Function /* true */ XMLHttpRequest.name /* “” */ Function.prototype.toString.call(XMLHttpRequest) /* TypeError */","msgtype":"m.text"},"ts":1414766399000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"erlehmann: paused development a while back, but i’d be happy to work on it today.","msgtype":"m.text"},"ts":1414766438000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: that *is* weird.","msgtype":"m.text"},"ts":1414766457000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"XMLHttpRequest.toString() works","msgtype":"m.text"},"ts":1414766495000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Function.prototype.toString !== XMLHttpRequest.toString apparently","msgtype":"m.text"},"ts":1414766508000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wonder if that's true for all DOM objects","msgtype":"m.text"},"ts":1414766524000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe. Similarly, Safari considers XMLHttpRequest an object.","msgtype":"m.text"},"ts":1414766544000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Domenic: I guess you didn't have any luck with that panel the other day as WebRTC decided to not require TLS","msgtype":"m.text"},"ts":1414766598000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'm thinking of putting W3C's infamous Formal Objection to test when the time is there to see if that can be reversed","msgtype":"m.text"},"ts":1414766637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"erlehmann: would you like to help me get back to speed with table sort?","msgtype":"m.text"},"ts":1414766642000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: ummm they were supposed to add a note encouraging browsers to ship with only TLS","msgtype":"m.text"},"ts":1414766652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: though with the latest STFU to Apple about longdesc I don't have much hope","msgtype":"m.text"},"ts":1414766655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think it's a non-starter to require HTTPS for GUM but not for webkitGUM though","msgtype":"m.text"},"ts":1414766666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: why can't they make migration happen?","msgtype":"m.text"},"ts":1414766685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: isn't that up to browsers?","msgtype":"m.text"},"ts":1414766693000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if we leave security up to browsers, should we leave APIs up to them too?","msgtype":"m.text"},"ts":1414766731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: IMO they should have a note like https://xhr.spec.whatwg.org/#sync-warning","msgtype":"m.text"},"ts":1414766759000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i will send an email","msgtype":"m.text"},"ts":1414766812000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i looked at too much internet today before breakfast, need to get to the office and eat...","msgtype":"m.text"},"ts":1414766828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: they can do better than that I think, flag day seems feasible","msgtype":"m.text"},"ts":1414767121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but yes, actual deprecation would be good","msgtype":"m.text"},"ts":1414767143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the resolution of the bug I tweeted made it sound like they would just add some text about how it's bad but not have an actual plan","msgtype":"m.text"},"ts":1414767165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When ToLength caps lengths at 2^53-1, why is that? The bit limit in JavaScript?","msgtype":"m.text"},"ts":1414767210000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: thanks (about that bug)","msgtype":"m.text"},"ts":1414767380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"^ http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength","msgtype":"m.text"},"ts":1414767450000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: it would make sense if that were the case","msgtype":"m.text"},"ts":1414767514000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"gaps start to appear beyond that definition.","msgtype":"m.text"},"ts":1414767568000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"JonathanNeal, once you cross that limit, not all integers are representable as IEEE doubles","msgtype":"m.text"},"ts":1414767803000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks. noted.","msgtype":"m.text"},"ts":1414767874000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"annevk: \"authenticated\" is the new \"secure\" w.r.t. origins?","msgtype":"m.text"},"ts":1414769662000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's not stable","msgtype":"m.text"},"ts":1414769711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and it's not tied to origins","msgtype":"m.text"},"ts":1414769730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://w3c.github.io/webappsec/specs/mixedcontent/#powerful-features is the current thinking of Mike and I","msgtype":"m.text"},"ts":1414769765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: mostly Mike","msgtype":"m.text"},"ts":1414769769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://annevankesteren.nl/2014/10/tls-browser-ui","msgtype":"m.text"},"ts":1414770207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: enumerateDevices is privacy-sensitive from my understanding, yes? Although just in the fingerprinting sense...","msgtype":"m.text"},"ts":1414770493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: prolly","msgtype":"m.text"},"ts":1414770581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hm","msgtype":"m.text"},"ts":1414770663000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is it expected that canvas2d font parsing depends on quirkiness?","msgtype":"m.text"},"ts":1414770718000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"erlehmann: lists.whatwg.org was never accessible via TLS, but we have HSTS set up for whatwg.org now so browsers who have visited whatwg.org won't accept to visit lists.whatwg.org except through TLS","msgtype":"m.text"},"ts":1414773039000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"erlehmann: if you visit the URL with http:// rather than https:// in a browser that has never seen whatwg.org, you can copy-and-paste the text from that URL into Google and get the w3.org equivalent.","msgtype":"m.text"},"ts":1414773076000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"someone should write a cgi script to just do that","msgtype":"m.text"},"ts":1414773084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that means there is a cert for whatwg.org … but not for subdomains?","msgtype":"m.text"},"ts":1414773187000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"we have a cert","msgtype":"m.text"},"ts":1414773643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we just have no way to install it for lists.whatwg.org specifically","msgtype":"m.text"},"ts":1414773653000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because that subdomain is run by dreamhost","msgtype":"m.text"},"ts":1414773658000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that clean-browser trick won't work once we make it onto the HSTS preload list","msgtype":"m.text"},"ts":1414774105000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, you'll have to use an old browser","msgtype":"m.text"},"ts":1414775646000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://unicorn-wg.github.io/sslv3-diediedie/ heh","msgtype":"m.text"},"ts":1414777140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://tantek.com/2014/304/b1/url-started-as-udi-conversation-w3c-tpac is relevant to my interests","msgtype":"m.text"},"ts":1414779077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did not realize URN started at around the same time or was already ongoing","msgtype":"m.text"},"ts":1414779102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: In particular, between 2^53 and 2^54-1, only even integers can be represented. Between 2^54 and 2^55-1, only integers divisible by 4 can be represented. Etc.","msgtype":"m.text"},"ts":1414780004000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: Re \"return undefined;\", \"undefined\" is technically a variable on the global object, and can be overridden.  (Unlike true/false/null/etc, which are language keywords and can't be overridden.)  Its initial value is the undefined value.","msgtype":"m.text"},"ts":1414780196000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So \"return;\" always returns the undefined value, while \"return undefined;\" might not.  If you ever explicitly want the undefined value, you can use the \"void\" operator, which is a prefix operator that takes one value, does nothing with it, and returns undefined.","msgtype":"m.text"},"ts":1414780265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like \"void 0\"","msgtype":"m.text"},"ts":1414780268000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Which also happens to be shorter to type than \"undefined\".)","msgtype":"m.text"},"ts":1414780282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"to be fair, global.undefined is [[writable]]: false, [[configurable]]: false","msgtype":"m.text"},"ts":1414780391000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"unless it gets shadowed, which hopefully it doesn't, it doesn't matter","msgtype":"m.text"},"ts":1414780409000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Right, but most JS code happens inside of a function, so you shadowing a legit possibility.","msgtype":"m.text"},"ts":1414780518000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not if you smack anyone that tries to check in code declaring a variable named `undefined`!","msgtype":"m.text"},"ts":1414780550000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Sure, sure.","msgtype":"m.text"},"ts":1414780969000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But, for example, jQuery goes out of its way to keep this from being a problem by taking a final argument in its init code that they don't actually pass (just so they get a guaranteed undefined value).","msgtype":"m.text"},"ts":1414781020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"file\" -> Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new globally unique identifier.","msgtype":"m.text"},"ts":1414782343000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"LOLSTANDARD? :p","msgtype":"m.text"},"ts":1414782359000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"annevk: I'm trying to catch up with the URL Standard changes... what's with all the blob stuff?","msgtype":"m.text"},"ts":1414782749000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"having an associated object to a URL seems out of scope","msgtype":"m.text"},"ts":1414782760000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"stuffing File API internals into the URL Standard looks like a call to \"include all URL schemes' internals into the spec\"","msgtype":"m.text"},"ts":1414782855000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"(e.g. git://, ed2k://, magnet:...)","msgtype":"m.text"},"ts":1414782884000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"smola: it's something the web platform needs, but you can ignore that","msgtype":"m.text"},"ts":1414783218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smola: i could probably write it down more cleanly","msgtype":"m.text"},"ts":1414783229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it would be nice to have a note, somewhere, noting that \"blob\" stuff is for people implementing the File API, or for the \"web platform\", or something like that","msgtype":"m.text"},"ts":1414783350000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"I just want to spare me arguments about why that doesn't need to be implemented in a \"non-web context\" to comply with the URL parsing standard","msgtype":"m.text"},"ts":1414783414000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"annevk: sounds like you need to add some text defining different conformance classes","msgtype":"m.text"},"ts":1414783455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=27215","msgtype":"m.text"},"ts":1414783470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smola: MikeSmith: ^^","msgtype":"m.text"},"ts":1414783475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"patches welcome :p","msgtype":"m.text"},"ts":1414783484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1414783497000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: \\o/","msgtype":"m.text"},"ts":1414783509000,"senderName":"smola","senderId":"smola@irc"},
{"content":{"body":"if i have an expression with an object literal, as in { foo: 'bar' }","msgtype":"m.text"},"ts":1414786460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can add methods to it by making the property value be a function","msgtype":"m.text"},"ts":1414786475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there an object literal syntax to add getters and setters?","msgtype":"m.text"},"ts":1414786488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Wierd, InfoQ basically copied the \"model\" section of the streams spec + some questions into a news article. http://www.infoq.com/news/2014/10/whatwg-streams","msgtype":"m.text"},"ts":1414786507000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: yes, `{ get foo() { return 'bar'; } set foo(v) { ... } }","msgtype":"m.text"},"ts":1414786528000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: does anyone implement that?","msgtype":"m.text"},"ts":1414786641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: IE9+","msgtype":"m.text"},"ts":1414786646000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(and everyone else, obviously)","msgtype":"m.text"},"ts":1414786652000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"{ set foo(a) { } } in Chrome gets me a syntax error","msgtype":"m.text"},"ts":1414786676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh i have to make it an expression","msgtype":"m.text"},"ts":1414786694000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wrap it in parens","msgtype":"m.text"},"ts":1414786695000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i see","msgtype":"m.text"},"ts":1414786696000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1414786696000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"InfoQ is hard to take seriously. I wonder who actually reads it, or why","msgtype":"m.text"},"ts":1414786721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"agreed. it seems like a quantity thing?","msgtype":"m.text"},"ts":1414786785000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jsbell: ping","msgtype":"m.text"},"ts":1414787897000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: wrote a bug instead: https://code.google.com/p/chromium/issues/detail?id=429316","msgtype":"m.text"},"ts":1414788393000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think the intent is that put() implicitly clones (or eventually tees the stream)","msgtype":"m.text"},"ts":1414788472000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I think the decision was not to do implicit clones","msgtype":"m.text"},"ts":1414788491000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"let me find the issue","msgtype":"m.text"},"ts":1414788498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: it was the result of this (long) issue","msgtype":"m.text"},"ts":1414788600000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"seemed to come to the explicit clone conclusion","msgtype":"m.text"},"ts":1414788661000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/slightlyoff/ServiceWorker/issues/510","msgtype":"m.text"},"ts":1414788841000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: that only prevents marking the body used when doing cache.Match(myRequest)","msgtype":"m.text"},"ts":1414788908000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it avoids invoking the Request copy constructor... only create a Request object if a string was passed in","msgtype":"m.text"},"ts":1414788934000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but it doesn't stop the Cache from reading the body in order to store the Request in cache.put()","msgtype":"m.text"},"ts":1414788965000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ah, right...","msgtype":"m.text"},"ts":1414788970000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"sorry, I have to head out early to take my daughter trick-or-treating","msgtype":"m.text"},"ts":1414788992000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: kk; I think you should raise a spec issue on this; I don't see anything in the specs that would actually set the used flag, even if conceptually it \"should\"","msgtype":"m.text"},"ts":1414789064000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1414789077000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I just don't see how it could not if we must retrieve the Request in keys()... means the cache had to store the body","msgtype":"m.text"},"ts":1414789115000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: https://github.com/slightlyoff/ServiceWorker/issues/550","msgtype":"m.text"},"ts":1414789301000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: thx; Happy Halloween!","msgtype":"m.text"},"ts":1414789349000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"np... Happy Halloween to you too!","msgtype":"m.text"},"ts":1414789365000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"MikeSmith: InfoQ ends up generating a ton of tweets somehow","msgtype":"m.text"},"ts":1414792869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1414793083000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"kind of baffling","msgtype":"m.text"},"ts":1414793096000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyone know if JS has static properties?","msgtype":"m.text"},"ts":1414793171000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i want my class { } thingy to define a property that appears on the constructor and the instances, readonly","msgtype":"m.text"},"ts":1414793192000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: per IDL constants are non-writable non-configurable properties","msgtype":"m.text"},"ts":1414793408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: proper static properties don't exist on the instances, only the class","msgtype":"m.text"},"ts":1414793410000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: not sure if there's sugar though","msgtype":"m.text"},"ts":1414793424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: but you can do `class { static foo() { } static get bar() { } } etc","msgtype":"m.text"},"ts":1414793427000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: k","msgtype":"m.text"},"ts":1414793535000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Or with today's JS, you just add them as properties on the constructor function, rather than the prototype.","msgtype":"m.text"},"ts":1414795591000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Instances wont' get it.","msgtype":"m.text"},"ts":1414795608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You'd have two forms of inheritance (from constructor and from prototype), which we've rejected in general.","msgtype":"m.text"},"ts":1414795631000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1414795973000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i always get a headache when trying to fiddle with JS prototype stuff","msgtype":"m.text"},"ts":1414795986000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is https://html.spec.whatwg.org/multipage/rendering.html#phrasing-content-3 missing `:link { cursor: pointer; }` ?","msgtype":"m.text"},"ts":1414796549000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: With the focus spec, is it possible to have the document node be the focused one?","msgtype":"m.text"},"ts":1414796645000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it's possible to have the viewport be focused","msgtype":"m.text"},"ts":1414796664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: i don't think the Document node itself can technically be focused itself? but i could be wrong","msgtype":"m.text"},"ts":1414796678000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Is that the same?","msgtype":"m.text"},"ts":1414796684000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: yeah, looks like it","msgtype":"m.text"},"ts":1414796692000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: not technically","msgtype":"m.text"},"ts":1414796707000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: So I thought that the focused area was always a node?","msgtype":"m.text"},"ts":1414796718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: oh no, definitely not","msgtype":"m.text"},"ts":1414796764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Or at least always had a DOM anchor","msgtype":"m.text"},"ts":1414796774000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there's all kinds of crap that can be focused these days that isn't anode","msgtype":"m.text"},"ts":1414796775000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the viewport uses the document as its dom anchor iirc","msgtype":"m.text"},"ts":1414796784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1414796792000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: see https://html.spec.whatwg.org/#focusable-area","msgtype":"m.text"},"ts":1414796823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: shall I file a bug or are you fixing already?","msgtype":"m.text"},"ts":1414796832000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: file a bug","msgtype":"m.text"},"ts":1414796841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1414796844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Wow did not know (remember?) that :link did not match visited links... fun times","msgtype":"m.text"},"ts":1414797017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":":any-link","msgtype":"m.text"},"ts":1414797035000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yepyep.","msgtype":"m.text"},"ts":1414797099000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"can't find a straight answer as to whether :any-link is equivalent to `:matches(a[href], area, link)`, hmm","msgtype":"m.text"},"ts":1414797140000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess CSS is decoupled from HTML in that respect","msgtype":"m.text"},"ts":1414797183000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"CSS just says \"represents a link ... for example in [HTML5] ...\"","msgtype":"m.text"},"ts":1414797201000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, it's the host language that defines what a link is.","msgtype":"m.text"},"ts":1414797295000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":any-link is equivalent to :matches(:link, :visited)","msgtype":"m.text"},"ts":1414797392000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah just curious what :link matches I guess","msgtype":"m.text"},"ts":1414797447000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in terms of elements","msgtype":"m.text"},"ts":1414797450000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gotta trace the references","msgtype":"m.text"},"ts":1414797456000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1414797479000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's in the spec","msgtype":"m.text"},"ts":1414797481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"html spec","msgtype":"m.text"},"ts":1414797482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1414797484000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"search for :link","msgtype":"m.text"},"ts":1414797485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh it's that easy that sounds nice","msgtype":"m.text"},"ts":1414797493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm no :active in the UA stylesheet either","msgtype":"m.text"},"ts":1414797495000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: Thanks","msgtype":"m.text"},"ts":1414797710000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it's about as far from what browsers implement today as the spec was a few months ago, but the spec has changed drastically in that time, fwiw","msgtype":"m.text"},"ts":1414797857000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: i think the new spec is way more comprehensive in terms of what browsers actually need to do","msgtype":"m.text"},"ts":1414797870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: so if you haven't read that section recently, now's a good time","msgtype":"m.text"},"ts":1414797882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: At the moment I'm mainly trying to convince the webdriver people not to define their own concept of focus","msgtype":"m.text"},"ts":1414797967000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"This has not been too hard, fortunately","msgtype":"m.text"},"ts":1414797975000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh man yeah","msgtype":"m.text"},"ts":1414798005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"defining focus is a huge pain","msgtype":"m.text"},"ts":1414798009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm pretty sure what the HTML spec has now is close to complete relative to what the web needs","msgtype":"m.text"},"ts":1414798032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so they should just use that","msgtype":"m.text"},"ts":1414798037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Other things that should be defined elsewhere and referenced from our spec: visibility, hit testing.","msgtype":"m.text"},"ts":1414798061000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"pretends to have gotten an important phone call and runs out of the room","msgtype":"m.emote"},"ts":1414798184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is there any way for me to be the first subscriber to an event, but only do my thing if no other subscribers call `e.preventDefault()`? Maybe delaying a turn then checking e.defaultPrevented?","msgtype":"m.text"},"ts":1414798285000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"register yourself on the parent element? :-)","msgtype":"m.text"},"ts":1414798365000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what happens if you register yourself during dispatch","msgtype":"m.text"},"ts":1414798377000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oooh interesting","msgtype":"m.text"},"ts":1414798401000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"seems like it would work, although maybe browsers do weird things","msgtype":"m.text"},"ts":1414798424000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"aww doesn't work","msgtype":"m.text"},"ts":1414799067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"setTimeout(, 0) seems like my best bet","msgtype":"m.text"},"ts":1414799075000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: registering yourself during dispatch should do nothing for that event, the propagation chain is computed before firing any handlers","msgtype":"m.text"},"ts":1414799169000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah, that seems reasonable","msgtype":"m.text"},"ts":1414799179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pity","msgtype":"m.text"},"ts":1414799180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"otherwise it's insanity","msgtype":"m.text"},"ts":1414799392000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"totally","msgtype":"m.text"},"ts":1414799457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would have solved this case though ;-)","msgtype":"m.text"},"ts":1414799462000,"senderName":"Hixie","senderId":"Hixie@irc"}
]