[
{"content":{"body":"Hixie: feels great :)","msgtype":"m.text"},"ts":1183507200000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: ok. thanks","msgtype":"m.text"},"ts":1183507201000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hey i guess working for opera also means you get w3c member access","msgtype":"m.text"},"ts":1183507260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183507261000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"now you can see the crazyness you've previously only been able to imagine","msgtype":"m.text"},"ts":1183507262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: I think you need to join the html5lib-discuss group to post to it btw.","msgtype":"m.text"},"ts":1183507320000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Are you being paid to work on this at 1am? :-)","msgtype":"m.text"},"ts":1183507321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: yep :)","msgtype":"m.text"},"ts":1183507322000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: plus, i work from home","msgtype":"m.text"},"ts":1183507323000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"my work day starts when i want and ends when i want","msgtype":"m.text"},"ts":1183507324000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"h4x","msgtype":"m.text"},"ts":1183507380000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"which is usually when i wake up and when i go to bed, respectively","msgtype":"m.text"},"ts":1183507381000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"We have core time in Oslo","msgtype":"m.text"},"ts":1183507382000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hixie: i read the pointers in http://ln.hixie.ch/?start=1172653243&count=1 but i haven't looked at other crazyness","msgtype":"m.text"},"ts":1183507500000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"btw i'm going to be in oslo (though extremely tired) late next monday and early next tuesday","msgtype":"m.text"},"ts":1183507501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll probably pop by the opera offices","msgtype":"m.text"},"ts":1183507502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders if anyone will pop by the eskilstuna office","msgtype":"m.emote"},"ts":1183507560000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Just as I take two days off. I'm going to miss the munchkin playing, no doubt.","msgtype":"m.text"},"ts":1183507620000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"anything interesting on public-html the past 24h?","msgtype":"m.text"},"ts":1183507860000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i just found this interesting tidbit:","msgtype":"m.text"},"ts":1183508040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Tantek Ãelik (Microsoft): We are in the XHTML WG. I am the representative; recently it has become clear that the priorities of the XHTML WG are different from our priorities. We would like to see the HTML 4 and XHTML 1.x versions resolved. Most of the folks in the WG are XHTML 2 and that is not a priority for us.","msgtype":"m.text"},"ts":1183508041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"from http://www.w3.org/2004/04/webapps-cdf-ws/minutes-20040601.html","msgtype":"m.text"},"ts":1183508042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Steven Pemberton (W3C/CWI): If you want that done, you have to do it.","msgtype":"m.text"},"ts":1183508043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Thanks for the memory Hixie :)","msgtype":"m.text"},"ts":1183508220000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yes, that workshop is where everything \"blew up\" as the kids say","msgtype":"m.text"},"ts":1183508221000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1183508222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i didn't realise that steven actually told us to go do html5","msgtype":"m.text"},"ts":1183508280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"he didn't","msgtype":"m.text"},"ts":1183508281000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"he told you to go do html5, and me to go do microformats","msgtype":"m.text"},"ts":1183508282000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"he just didn't realize he did ;)","msgtype":"m.text"},"ts":1183508283000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and yes, you're welcome for the setup :)","msgtype":"m.text"},"ts":1183508284000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1183508340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"out of that workshop i was more convinced than ever that I had to leave microsoft and pursue microformats wherever there was support for them, knowing that you would have a pretty good handle on the HTML 4.x XHTML 1.x updates.","msgtype":"m.text"},"ts":1183508400000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie, it wouldn't be inaccurate for you to even state that Microsoft's representative to that workshop called for work on HTML4 and XHTML1 along a set of requirements remarkably similar to those adopted by WHATWG.","msgtype":"m.text"},"ts":1183508640000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1183508641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thereby confirming all the conspiracy theorists suspicions that WHATWG is merely doing Microsoft's bidding. ;)","msgtype":"m.text"},"ts":1183508642000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"oh the modern conspiracy theory is that it's google's attempt at getting around the problem that converting adsense to xhtml2 would be too hard","msgtype":"m.text"},"ts":1183508700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"LOL","msgtype":"m.text"},"ts":1183508701000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: more vaguely sane long descriptions: http://www.tsu.ox.ac.uk/info/report.php","msgtype":"m.text"},"ts":1183512180000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(although I think they could have madeuse of data tables)","msgtype":"m.text"},"ts":1183512240000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"another example: http://docs.sun.com/source/817-5763/","msgtype":"m.text"},"ts":1183512300000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"in general, look through this search: http://www.google.co.uk/search?hl=en&q=%22long+description+for%22 for lots of longdesc examples","msgtype":"m.text"},"ts":1183512360000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"my script uses the same source data as that search, basically","msgtype":"m.text"},"ts":1183512480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"never knew that IE supports <comment>...</comment>","msgtype":"m.emote"},"ts":1183513080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Interestingly the text appears to be not in the DOM, but is in the innerHTML view)","msgtype":"m.text"},"ts":1183513140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh, i just noticed something about the press release the w3c put out when the charters were announced","msgtype":"m.text"},"ts":1183518540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah?","msgtype":"m.text"},"ts":1183518600000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it says:","msgtype":"m.text"},"ts":1183518601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"With the chartering of the XHTML 2 Working Group, W3C will continue its technical work on the language at the same time it considers rebranding the technology to clarify its independence and value in the marketplace.\"","msgtype":"m.text"},"ts":1183518602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hah!","msgtype":"m.text"},"ts":1183518660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\"dear xhtml2 wg, how is that rebranding coming along? love, the html wg\"","msgtype":"m.text"},"ts":1183518720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: I meant that when you've got a form control whose form pointer does not point to an ancestor and that doesn't have a form='' attribute pointing to the same node as the form pointer, generate an id attribute on the node pointed by the form pointer if there isn't an id already and generate a corresponding form='' attribute on the form control","msgtype":"m.text"},"ts":1183527420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: this fails if the <form> element already has an id='' attribute and the value of that attribute is a duplicate","msgtype":"m.text"},"ts":1183527421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: Also I suggested the iterative DOM traversal algorithm to zcorpan, but does IE guarantee that the algorithm terminates? I think it doesn't.","msgtype":"m.text"},"ts":1183528140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: oh - good point, I'm not sure how it works in the face of a non-tree","msgtype":"m.text"},"ts":1183528380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: I'm not sure what exactly IE's non-tree DOMs look like","msgtype":"m.text"},"ts":1183528381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: this is one significant reason why a non-tree DOM sucks","msgtype":"m.text"},"ts":1183528500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I have seen a look of shocked realization on the faces of JS library authors when they heard that IE can do that","msgtype":"m.text"},"ts":1183528680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\"that explains those weird infinite loop bugs!\"","msgtype":"m.text"},"ts":1183528740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"do you actually know what it does though?","msgtype":"m.text"},"ts":1183528741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is it just the parent pointer that can be wrong? you could work around that with a stack","msgtype":"m.text"},"ts":1183528742000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"see my blog","msgtype":"m.text"},"ts":1183528920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"entries starting with \"Tag Soup\" iirc","msgtype":"m.text"},"ts":1183528921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1183528922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: not sure. The edges between EM and ADDRESS in the Mac IE 5 DOM with Hixie's case look like the ingredients of an infinite loop: http://hsivonen.iki.fi/soup-dom/ (I can't test IE6 here.)","msgtype":"m.text"},"ts":1183529340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good lord, that's insane","msgtype":"m.text"},"ts":1183529640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"blames tantek","msgtype":"m.emote"},"ts":1183529641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"child pointer indicates presence in the childNodes array?","msgtype":"m.text"},"ts":1183529700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`_: If you'd like to run surveys with something that runs as native instructions at run time, I suggest figuring out which Java spider framework can easily take a plugged HTML5 parser","msgtype":"m.text"},"ts":1183529760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: it looks like traversal via firstChild/nextSibling/parentNode would not infinite loop on that, but it would miss some elements","msgtype":"m.text"},"ts":1183529820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"wait, maybe it wouldn't even iss anything","msgtype":"m.text"},"ts":1183529821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`_: the parser needs to get a java.io.InputStream, the value of the HTTP charset (null if absent), a SAX ErrorHandler and a SAX ContentHandler (for extracting links)","msgtype":"m.text"},"ts":1183529822000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: child is firstchild","msgtype":"m.text"},"ts":1183529823000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: IIRC","msgtype":"m.text"},"ts":1183529880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it can't be only firstChild, since you can't have multiple firstChilds","msgtype":"m.text"},"ts":1183529881000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: oh. right. can't rememeber anymore what I did","msgtype":"m.text"},"ts":1183529882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"some nodes would be visited more than once I guess, w/ tree-based traversal","msgtype":"m.text"},"ts":1183530000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we have some ex-MacIE folks on our team, I could ask them what they were thinking :-)","msgtype":"m.text"},"ts":1183530060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`_: the Internet Archive spider looks promising, but they seem to rely on the JVM running on Linux with a particular thread impl","msgtype":"m.text"},"ts":1183530061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`_: btw, I wouldn't run a Java spider that used java.net.URLConnection without socket timeouts","msgtype":"m.text"},"ts":1183530120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I have more confidence in Commons HTTP Client","msgtype":"m.text"},"ts":1183530121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I haven't checked which HTTP client the Internet Archive spider uses","msgtype":"m.text"},"ts":1183530180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hm, xmlns=\"...xhtml\" usage has gone up to 20% according to the survey i just did (of several billion html docs)","msgtype":"m.text"},"ts":1183532520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"from about 15% about a year ago","msgtype":"m.text"},"ts":1183532580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and 41% have no DOCTYPE, down from about 50% at the same time iirc","msgtype":"m.text"},"ts":1183532820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"19% have the XHTML1 DOCTYPE, 11% have a 4.01 Transitional DOCTYPE with no URI","msgtype":"m.text"},"ts":1183532880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"6% are 4.01 Transitional with URI","msgtype":"m.text"},"ts":1183532940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the 0.014% of XHTML usage has gone up to 0.062%","msgtype":"m.text"},"ts":1183534080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: real XHTML? as in a/x+x","msgtype":"m.text"},"ts":1183534140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Amazon EC2 was mentioned earlier. any actual experience with using it?","msgtype":"m.text"},"ts":1183534200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is surprised to hear there's that many sites that give the finger to IE; or is that conditionally served?","msgtype":"m.emote"},"ts":1183534740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: yeah","msgtype":"m.text"},"ts":1183534920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: might be conditional, dunno","msgtype":"m.text"},"ts":1183534921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: does Google unify multiple representations of a page if it finds foo with Content-Location, foo.html and foo.xhtml?","msgtype":"m.text"},"ts":1183534980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"duplicate elimination happens before my script gets hold of the data, yes, but i don't know exactly what gets counted as a dupe","msgtype":"m.text"},"ts":1183535160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm. looks like Google has changed its behavior again and now http://hsivonen.iki.fi/thesis/html5-conformance-checker over .html or .xhtml. IIRC, it returned http://hsivonen.iki.fi/thesis/html5-conformance-checker.xhtml a couple of weeks ago","msgtype":"m.text"},"ts":1183535280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/now/now prefers/","msgtype":"m.text"},"ts":1183535400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it probably treats them separately and picks one based on which has the most \"relevance\"","msgtype":"m.text"},"ts":1183535460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/mid/886507.69879.qm⊙wmryc","msgtype":"m.text"},"ts":1183540560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-validator/2007Jul/0011.html","msgtype":"m.text"},"ts":1183540740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh of course. writing your own dtd makes you validate.","msgtype":"m.text"},"ts":1183540741000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"it's true","msgtype":"m.text"},"ts":1183540800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's just not very smart","msgtype":"m.text"},"ts":1183540801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might be if you really use validation as qa check, and you don't want to flag files that have 1 error you already know about and have to have around","msgtype":"m.text"},"ts":1183540860000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie, yt?","msgtype":"m.text"},"ts":1183542960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"zcorpan_, http://simon.html5.org/temp/html5lib-tests/dom2string.js doesn't seem to handle attributes","msgtype":"m.text"},"ts":1183543140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oops","msgtype":"m.text"},"ts":1183543200000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: fixed","msgtype":"m.text"},"ts":1183543500000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Lachy: yo","msgtype":"m.text"},"ts":1183543800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hey Hixie, Marcos and I are working on the XBL Primer, and we're trying to come up with a concise description of what a template is.  Any suggestions?","msgtype":"m.text"},"ts":1183543860000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it's some markup that will be used to render the bound element, i guess","msgtype":"m.text"},"ts":1183543920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so far we have \"A template is used to control the presentation of a document\", but we want to say something about how it reorders content in the DOM, without altering it, using shadow trees, but without using technical terms","msgtype":"m.text"},"ts":1183543921000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"interesting, Opera returns uppercase attribute names","msgtype":"m.text"},"ts":1183543922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah.","msgtype":"m.text"},"ts":1183543980000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Lachy: good luck","msgtype":"m.text"},"ts":1183543981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1183543982000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: my best attempt is what's in the spec","msgtype":"m.text"},"ts":1183543983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: in the note in the definition of <template>","msgtype":"m.text"},"ts":1183543984000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"A template defines the building blocks for the subtree of the bounding element.\"","msgtype":"m.text"},"ts":1183544040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's the problem :-)","msgtype":"m.text"},"ts":1183544041000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hmm. we could try and work something like that into it.","msgtype":"m.text"},"ts":1183544100000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"just say something and then illustrate it with some \"easy\" to grasp examples","msgtype":"m.text"},"ts":1183544160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that's the idea","msgtype":"m.text"},"ts":1183544161000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hm. opera can have cdata nodes in the dom. how should i output those?","msgtype":"m.text"},"ts":1183544340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"\"<![CDATA[ \" + current.nodeValue + \" ]]>\" ?","msgtype":"m.text"},"ts":1183544341000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1183544460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1183544640000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i'm instrumenting my html parser to report how many times it clones nodes in the AAA and inline-reconstruction algorithms","msgtype":"m.text"},"ts":1183545000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anything else i can instrument while i'm at it?","msgtype":"m.text"},"ts":1183545001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen? annevk? jgraham?","msgtype":"m.text"},"ts":1183545060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we have some XXX comments about tokenization...","msgtype":"m.text"},"ts":1183545120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"specifically which cases in states are the most frequent","msgtype":"m.text"},"ts":1183545180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can optimize those cases in some way...","msgtype":"m.text"},"ts":1183545181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"other interesting things might be <form> nodes <form> where nodes does not include </form> and then do some browser testing on those more complicated examples from real world pages","msgtype":"m.text"},"ts":1183545240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eh?","msgtype":"m.text"},"ts":1183545360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could emit for each tokeniser state the most common tokens seen, i guess","msgtype":"m.text"},"ts":1183545420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would make the parser way slower, but it could work","msgtype":"m.text"},"ts":1183545480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's probably not very important","msgtype":"m.text"},"ts":1183545481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tree mutation and node duplication are more interesting","msgtype":"m.text"},"ts":1183545482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would be fun to count how often you encounter <canvas> nowadays :)","msgtype":"m.text"},"ts":1183545540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i've looked at elements in a separate study","msgtype":"m.text"},"ts":1183545660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"canvas didn't appear in the top 200","msgtype":"m.text"},"ts":1183545720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"suspects that some <canvas>es are only output with script","msgtype":"m.emote"},"ts":1183545780000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1183546320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. dom core doesn't specify an order for .attributes ... i need to sort them myself","msgtype":"m.text"},"ts":1183546321000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I wonder if we have actually sorted them...","msgtype":"m.text"},"ts":1183546380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"opera and safari don't seem to sort them. ie seems to sort them alphabetically. firefox alphabetically reversed. ","msgtype":"m.text"},"ts":1183546500000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok i'm going to emit a list of total count of all the tokens","msgtype":"m.text"},"ts":1183546501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for each kind of token in each insertion mode","msgtype":"m.text"},"ts":1183546560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anything else?","msgtype":"m.text"},"ts":1183546561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"last chance before i set this off and go to bed...","msgtype":"m.text"},"ts":1183546562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, I actually meant characters I think","msgtype":"m.text"},"ts":1183546563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that may be too expensive","msgtype":"m.text"},"ts":1183546564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"characters?","msgtype":"m.text"},"ts":1183546565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"during tokenization","msgtype":"m.text"},"ts":1183546566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do you mean?","msgtype":"m.text"},"ts":1183546567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see how often \">\" (with quotes) appears in doctypes or bogus comments","msgtype":"m.text"},"ts":1183546620000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"so you can optimize a particular tokenization state","msgtype":"m.text"},"ts":1183546621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh i thought you wanted to optimise the tree constructor states","msgtype":"m.text"},"ts":1183546622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: hm","msgtype":"m.text"},"ts":1183546680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hmm. I guess there might be merit in instrumenting how often IN_BODY code runs with the actual insertion mode being one of the table modes other than caption and cell","msgtype":"m.text"},"ts":1183546681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: surely for the tokeniser it makes no difference since you'll just do table dispatch","msgtype":"m.text"},"ts":1183546682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IE has this nice <!- .... \">\" more comment ... >","msgtype":"m.text"},"ts":1183546683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2007-June/012078.html","msgtype":"m.text"},"ts":1183546740000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: you mean an average of times per page that the inbody state is invoked when the state is not inbody, incell, or incaption?","msgtype":"m.text"},"ts":1183546741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is it even important to clone DOM nodes instead of using the attributes on the original token and creating a new DOM node using those?","msgtype":"m.text"},"ts":1183546742000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan_: yeah i'm just trying to work out how to do it","msgtype":"m.text"},"ts":1183546743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is, do you really want to close concurrent attribute changes?","msgtype":"m.text"},"ts":1183546744000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i don't think the dom supports having attributes shared between nodes","msgtype":"m.text"},"ts":1183546800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes, the average times the table states actually fall though to in body ","msgtype":"m.text"},"ts":1183546860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"through","msgtype":"m.text"},"ts":1183546861000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok, i'm logging the actual insertion mode when my inhead, inbody, and intable functions are invoked","msgtype":"m.text"},"ts":1183547040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: since that only happens in non-conforming cases and Java doesn't have goto, I let the code hit some useless branches when the fall-through happens","msgtype":"m.text"},"ts":1183547041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hopefully they map exactly to the spec","msgtype":"m.text"},"ts":1183547042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: for DOCTYPEs we don't care, right? since what the spec does matches IE anyway?","msgtype":"m.text"},"ts":1183547160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(A smart compiler could fix this, but I doubt javac or hotspot are that smart)","msgtype":"m.text"},"ts":1183547161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah, DOCTYPEs match IE","msgtype":"m.text"},"ts":1183547162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's just that IE uses the same mode for bogus comments as they use for DOCTYPEs it seems","msgtype":"m.text"},"ts":1183547163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm gonna bail on working out what characters are most common in each tokeniser mode, on the principle that there are so few states it hardly matters anyway","msgtype":"m.text"},"ts":1183547220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: not quite. the spec doesn't handle <!doctype \">\" >","msgtype":"m.text"},"ts":1183547221000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1183547222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: the spec only matches ie if the > is in an actual FPI or SPI","msgtype":"m.text"},"ts":1183547223000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: oh yeah, one more thing for optimization: whether an average stack node is tested for being in a group of element names more than once","msgtype":"m.text"},"ts":1183547280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well i didn't find any DOCTYPEs with > in their name part, at least not enough to appear on my radar in the scan of doctypes i did earlier this week","msgtype":"m.text"},"ts":1183547340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that is, whether it makes sense to have a boolean on a stack node that says for example whether the node is a table context sentinel","msgtype":"m.text"},"ts":1183547341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: ok","msgtype":"m.text"},"ts":1183547342000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: isn't that because > in the name part terminates the doctype? :)","msgtype":"m.text"},"ts":1183547343000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: or whether a stack node should have a flag for phrasing OR formatting OR div OR address","msgtype":"m.text"},"ts":1183547400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sorry, i meant \"","msgtype":"m.text"},"ts":1183547401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1183547402000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1183547403000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: so what i did with that is that each well-known tag name has an integer associated with it (like an atom) and for each special feature that the parser cares about i used a bit","msgtype":"m.text"},"ts":1183547404000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i used 24 bits for these flags","msgtype":"m.text"},"ts":1183547460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so for example all the <hx> elements have the number 0x400008400000","msgtype":"m.text"},"ts":1183547520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: my strategy is to intern well-known names so that testing against one name is a comparison of memory addresses but still testing if a name is in a group means as many comparisons as names names in group","msgtype":"m.text"},"ts":1183547521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the leading 0x4 is \"element\" (as opposed to text node), the 8 is \"hx node\", and the 4 is \"closes <p> elements\"","msgtype":"m.text"},"ts":1183547522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah so my parser never compares tag names once they're in the stack","msgtype":"m.text"},"ts":1183547580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doing string compares was prohibitively expensive","msgtype":"m.text"},"ts":1183547581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1183547582000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i just use the integer that says whether a node is a text node, comment node, doctype, etc, to say what special kind of element it is too","msgtype":"m.text"},"ts":1183547583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and so everything is always exactly one & and exactly one ==","msgtype":"m.text"},"ts":1183547640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you construct those numbers during tokenization?","msgtype":"m.text"},"ts":1183547700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'll complete the tree builder with my current approach and will leave a tokenizer-assigned bitfield as a later interface-breaking optimization","msgtype":"m.text"},"ts":1183547701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: whenever i create a node, i create it withe the appropriate constant","msgtype":"m.text"},"ts":1183547760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the tokeniser doesn't know about these","msgtype":"m.text"},"ts":1183547761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it emits tokens with tag names","msgtype":"m.text"},"ts":1183547762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's only when i create nodes that i use these","msgtype":"m.text"},"ts":1183547763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ooh. so \"closes p\" is not assigned in the tokenizer after all","msgtype":"m.text"},"ts":1183547764000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok, so the tree construction stage does use string comparison?","msgtype":"m.text"},"ts":1183547765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, tokens are string-compared","msgtype":"m.text"},"ts":1183547820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i think my compiler might be atomising them","msgtype":"m.text"},"ts":1183547821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it's not such a big deal","msgtype":"m.text"},"ts":1183547822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm currently using the generic String.intern(), but I figured how to make a fast interning function with knowledge about the possible names (three-level switch: length, last char, second to last char)","msgtype":"m.text"},"ts":1183547940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but typing that is too much work","msgtype":"m.text"},"ts":1183547941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I guess I'll write a small Python program that generates Java code for the interning function at some point","msgtype":"m.text"},"ts":1183547942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan_: given that only IE does this, I'm going to assume it's not a big deal. I can investigate it in more detail later maybe. Don't want to hack the parser too much tonight. :-)","msgtype":"m.text"},"ts":1183548000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"beware that the names are unbounded","msgtype":"m.text"},"ts":1183548001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<fiv> is an element name that is seen in the wild, e.g.","msgtype":"m.text"},"ts":1183548002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't want to treat it as <div>","msgtype":"m.text"},"ts":1183548003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"especially in your case :-)","msgtype":"m.text"},"ts":1183548060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: of if the length is > 2, the prefix needs to be compared, too, to make sure","msgtype":"m.text"},"ts":1183548120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: still better than an intermediate copy to java.lang.String","msgtype":"m.text"},"ts":1183548121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: the idea is to weed out all but one prefix candidate","msgtype":"m.text"},"ts":1183548180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah cool","msgtype":"m.text"},"ts":1183548181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right sleep time","msgtype":"m.text"},"ts":1183548480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1183548481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1183548482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the parser test format doesn't distinguish between an \"\" attrubute and a text node \"=\" (e.g.: <p \"\">\"=\"</p>)","msgtype":"m.text"},"ts":1183551480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"| <p>","msgtype":"m.text"},"ts":1183551481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"|   \"\"=\"\"","msgtype":"m.text"},"ts":1183551482000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"|   \"\"=\"\"","msgtype":"m.text"},"ts":1183551483000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's not too relevant though","msgtype":"m.text"},"ts":1183551540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but an interesting edge case","msgtype":"m.text"},"ts":1183551541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps \" in text nodes should be escaped with \\?","msgtype":"m.text"},"ts":1183551600000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1183551601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you can tell the difference between attributes and text nodes. but perhaps it doesn't matter","msgtype":"m.text"},"ts":1183551660000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"just don't mix them","msgtype":"m.text"},"ts":1183551720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, if you make mistakes in your parser at that level you've got bigger issues :)","msgtype":"m.text"},"ts":1183551840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which parser?","msgtype":"m.text"},"ts":1183551900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HTML parser?","msgtype":"m.text"},"ts":1183551901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah. yeah.","msgtype":"m.text"},"ts":1183551902000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: I think it might be reasonable to keep the spidering and parsing completely separate, so they could be different languages (depending on what useful tools are available for), just communicating asynchronously through some database (which is probably necessary anyway to support parallelism)","msgtype":"m.text"},"ts":1183552440000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"Philip`_: I've never done wide-scale spidering. however, I would think that sticking stuff in a database in between would slow things significantly compared to the parser reading from the real socked when the spidering happens (possible with e.g. Commons HttpClient)","msgtype":"m.text"},"ts":1183553220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"to me, it seems that the obvious way to implement this is to have a number of worker threads that run both the parser and the HTTP client and request URLs and report results to a centralized thread-safe coordination object","msgtype":"m.text"},"ts":1183553340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/socked/socket/","msgtype":"m.text"},"ts":1183553341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"as for tools in different languages, if you can't make everything run on a JVM, communicating through a local socket is more efficient that having an persistence layer in between","msgtype":"m.text"},"ts":1183553460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I am assuming here that we don't want to keep copies of the spidered bytes","msgtype":"m.text"},"ts":1183553461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It would be useful to allow the thing to run on multiple computers to spread the load out, and then it would need some network communication for coordination instead of just threads","msgtype":"m.text"},"ts":1183553520000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"Philip`_: it might be worth investigating if instead of running a spider we should run on EC2 and read the latest Alexa spireding dump from S3","msgtype":"m.text"},"ts":1183553580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I'm kind of thinking about multiple computers on a LAN with a fast internet connection, so the network wouldn't be a bottleneck when spreading stuff out)","msgtype":"m.text"},"ts":1183553581000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"I poked around the Amazon docs but I didn't find out if the Alexa dump can be easily read by URL instead of by handle obtained from Alexa search results","msgtype":"m.text"},"ts":1183553640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That sounds like a useful thing to investigate","msgtype":"m.text"},"ts":1183553641000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"Philip`_: anyway, you definitely want to keep the JVM up and running with multiple threads reading from sockets instead of invoking it again and again","msgtype":"m.text"},"ts":1183553700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't know where the other end of those sockets should be","msgtype":"m.text"},"ts":1183553701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Perhaps the hardest bit is working out which pages to look at so that the sample is biased sensibly - I assume normal spiders just try to grab as much stuff as possible, which is not useful since they'll spend far too long in a few large sites","msgtype":"m.text"},"ts":1183554000000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"yeah, I think in principle we want to look at the Web breadth first, but not just front pages","msgtype":"m.text"},"ts":1183554060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I would expect it's not possible to grab a large enough sample to do something like PageRank to find the interesting pages","msgtype":"m.text"},"ts":1183554061000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"(though maybe it wouldn't be too rubbish to just use the process which the original PageRank is modelling, where you follow random links and have a ~15% chance of getting bored and jumping to some other arbitrary page)","msgtype":"m.text"},"ts":1183554300000,"senderName":"Philip`_","senderId":"Philip`_@irc"},
{"content":{"body":"cool. the IA crawler uses Commons HttpClient","msgtype":"m.text"},"ts":1183554420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`_: I encourage you to take a look at http://crawler.archive.org/","msgtype":"m.text"},"ts":1183555080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://html5.org/parsing-tests/testrunner.htm","msgtype":"m.text"},"ts":1183573620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lots of browser backing for ignoring </head>","msgtype":"m.text"},"ts":1183573800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I guess that was already known","msgtype":"m.text"},"ts":1183573860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose next would be some prefs so you can ignore IE <title> insertions","msgtype":"m.text"},"ts":1183573920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: re: running python on my web server; the short answer is that I can't (that was in response to your message a few days ago)","msgtype":"m.text"},"ts":1183576860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, are you a registered user?","msgtype":"m.text"},"ts":1183578180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, zcorpan, you can now filter with http://html5.org/parsing-tests/testrunner.htm as well for IE specific quirks","msgtype":"m.text"},"ts":1183578181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders what tantek will do next","msgtype":"m.emote"},"ts":1183578360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Setting the flag makes a lot more pass in IE and Opera. Mostly because IE messes up both DOCTYPE and inserts <title> and because Opera does not include DOCTYPE at all","msgtype":"m.text"},"ts":1183578840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It also helps some for Firefox which always uppercases the tag name in the DOCTYPE","msgtype":"m.text"},"ts":1183578900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Of freenode? No","msgtype":"m.text"},"ts":1183578960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: nice!","msgtype":"m.text"},"ts":1183579860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I fixed some further bugs and I'm going home now","msgtype":"m.text"},"ts":1183580220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll commit it tomorrow to one of the open source thingies we have","msgtype":"m.text"},"ts":1183580280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1183580281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"now someone can write python scripts to iterate over those numbers browsers return...","msgtype":"m.text"},"ts":1183580282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of the 50 or so sites I found with cycles in the headers=\"\", all but three are government sites","msgtype":"m.text"},"ts":1183580880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How does that compare with the proportion of government sites without cycles in the headers?","msgtype":"m.text"},"ts":1183581720000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"(Not that I'm interested, it's just the basic \"compared to what?\" question)","msgtype":"m.text"},"ts":1183581721000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"mpt: the fact that it's 50 basically means it's an insignificant number that have cycles","msgtype":"m.text"},"ts":1183582440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1183582680000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"http://sixstar.cca.gov.tw/community/pages/01_about_people.php?CommID=1231&ID=1","msgtype":"m.text"},"ts":1183582740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's so hard to argue that that is a valid use of headers=\"\"","msgtype":"m.text"},"ts":1183582741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sigh","msgtype":"m.text"},"ts":1183582742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with my proposed heuristic for the top left cell, if they changed that into an actual table it would actually work fine with implied scope=s","msgtype":"m.text"},"ts":1183582800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: btw, shouldn't scope be down, up, right, left (not row/column)","msgtype":"m.text"},"ts":1183582980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: if you have to rows of headers where the upper row applies to the lower row but not vice versa, shoudn't scope be down instead of column?","msgtype":"m.text"},"ts":1183583040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"An end tag whose tag name is one of: \"p\", \"br\" is weird to have in \"in head noscript\"","msgtype":"m.text"},"ts":1183583160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: why?","msgtype":"m.text"},"ts":1183583340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: the values come from html4","msgtype":"m.text"},"ts":1183583400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: other stray end tags get ignored","msgtype":"m.text"},"ts":1183583401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I know that excplicit one come from there but implicit ones don't have to","msgtype":"m.text"},"ts":1183583402000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: not </p> or </br>","msgtype":"m.text"},"ts":1183583403000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah. like I said, weird","msgtype":"m.text"},"ts":1183583460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: there's only one implicit one, \"auto\", and it has no keyword","msgtype":"m.text"},"ts":1183583461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: not specific to in noscript in head though","msgtype":"m.text"},"ts":1183583462000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wow, some (very few) of the pages caused the AAA algorithm to create over 1000 clones for one stray end tag","msgtype":"m.text"},"ts":1183583640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I hope that doesn't count as a reason to redesign the algorithm","msgtype":"m.text"},"ts":1183583760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no, it's expected really","msgtype":"m.text"},"ts":1183583761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what Safari does on those pages? what about Firefox or Opera?","msgtype":"m.text"},"ts":1183583762000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no idea, dunno which pages it is","msgtype":"m.text"},"ts":1183583763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"355 billion invokations of the AAA algorithm resulted in zero clones","msgtype":"m.text"},"ts":1183583820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"715 thousand invokations resulted in one clone","msgtype":"m.text"},"ts":1183583880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er sorry","msgtype":"m.text"},"ts":1183583881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"715 million","msgtype":"m.text"},"ts":1183583882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"55 million resulted in 2 clones","msgtype":"m.text"},"ts":1183583883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"10 million, 3 clones","msgtype":"m.text"},"ts":1183583884000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"3 million, 4 clones","msgtype":"m.text"},"ts":1183583885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"800 thousand, 5 clones","msgtype":"m.text"},"ts":1183583940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"460000 6 clones","msgtype":"m.text"},"ts":1183583941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: 1 billion == 1 million million or 1 thousand million?","msgtype":"m.text"},"ts":1183583942000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"237000 7 clones","msgtype":"m.text"},"ts":1183583943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"US billion, thousand million, 1e9","msgtype":"m.text"},"ts":1183583944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"less than 100,000 instances of hte AAA algorithm resulted in 11 clones","msgtype":"m.text"},"ts":1183584000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i should have gotten the total count","msgtype":"m.text"},"ts":1183584001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: cool. are you going to post this to public-html?","msgtype":"m.text"},"ts":1183584002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"to make this a useful number","msgtype":"m.text"},"ts":1183584003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in due course","msgtype":"m.text"},"ts":1183584004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"finds that writing the HTML5 tokeniser as an OCaml data structure and then printing C++ from it is perhaps slightly crazy, but doesn't seem entirely infeasible (though I've only got about a quarter of two states implemented so far...)","msgtype":"m.emote"},"ts":1183584060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wait this can't be right, according to separate data, there were only 900,000,000 invokations of the AAA","msgtype":"m.text"},"ts":1183584120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, wrong number","msgtype":"m.text"},"ts":1183584121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"phew","msgtype":"m.text"},"ts":1183584122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I forgot to ask you this when you asked about instrumentation but did you record data on stack depth?","msgtype":"m.text"},"ts":1183584900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah but it's biased because my parser bails after 64k elements","msgtype":"m.text"},"ts":1183584960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what did you find?","msgtype":"m.text"},"ts":1183585020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://freechal.com/banilaB8 was one of the worst pages","msgtype":"m.text"},"ts":1183585021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that my parser didn't bail on)","msgtype":"m.text"},"ts":1183585022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so you use a hard limit as well ;-)","msgtype":"m.text"},"ts":1183585023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well i run out of bits to store the pointer in after 64k","msgtype":"m.text"},"ts":1183585080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the pointer?","msgtype":"m.text"},"ts":1183585081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i have 64 bits to store the length of the text node, the offset of the text node, the pointer to the parent element, and some bits for e.g. if it's a comment node or a text node","msgtype":"m.text"},"ts":1183585082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the bit that points to the parent element has to also sit alongside the 24 bits i use for the element flags","msgtype":"m.text"},"ts":1183585140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1183585141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the 50th percentile of the pages my parser didn't bail on had 16 or fewer nodes in its stack at the biggest point","msgtype":"m.text"},"ts":1183585200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"99th percentile had 40 or less","msgtype":"m.text"},"ts":1183585201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"100th percentil had 64k","msgtype":"m.text"},"ts":1183585202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks","msgtype":"m.text"},"ts":1183585203000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i can get you more later but i really have to go shower","msgtype":"m.text"},"ts":1183585204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does new StackNode[64]","msgtype":"m.emote"},"ts":1183585260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1183585261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"incidentally, the reason i used 64k as my limit is that i'm having to balance the number of text nodes with the number of elements","msgtype":"m.text"},"ts":1183585980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right now my text nodes are 32k max each","msgtype":"m.text"},"ts":1183585981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i could make them 16k each but have 128k elements, but it turns out that, anecdotally, to process any significantly greater number of pages, i'd have to add many many bits","msgtype":"m.text"},"ts":1183585982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like 4, or 5","msgtype":"m.text"},"ts":1183585983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whereas there are many pages with more than 32k characters at once","msgtype":"m.text"},"ts":1183586040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i suspect that the pathological cases with deep stacks are all cases of bad interactions with AAA","msgtype":"m.text"},"ts":1183586041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders why Opera says \"XML parsing failed\" when loading http://html5.org/parsing-tests/data/tests3.dat","msgtype":"m.emote"},"ts":1183586220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, how odd, it works when I reload...","msgtype":"m.text"},"ts":1183586280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: because it thinks anything loaded through XHR is XML","msgtype":"m.text"},"ts":1183586460000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: and then remembers that","msgtype":"m.text"},"ts":1183586461000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1183586462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: Ah, that seems to make as much sense as could be expected","msgtype":"m.text"},"ts":1183586580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do these statements have a significant difference \"If the stack of open elements has an element in scope with the same tag name as that of the token, then pop elements from this stack until an element with that tag name has been popped from the stack.\" and \"If the stack of open elements has an element in scope with the same tag name as that of the token, then pop elements from this stack until the stack no longer has an element with the same tag nam","msgtype":"m.text"},"ts":1183586880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1183586940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1183586941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it differs if the stack has two elements of that name in it","msgtype":"m.text"},"ts":1183586942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g.","msgtype":"m.text"},"ts":1183586943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div><div>","msgtype":"m.text"},"ts":1183586944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however typically the second wording is only used for elements that can't be twice on the stack","msgtype":"m.text"},"ts":1183586945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in which case it doesn't matter","msgtype":"m.text"},"ts":1183586946000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: how do you get two nested <p> elements is scope?","msgtype":"m.text"},"ts":1183587000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i don't think you can","msgtype":"m.text"},"ts":1183587001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. thanks. I'll send email. Every time you use a different wording for no good reason, I have to stop and think. :-)","msgtype":"m.text"},"ts":1183587060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thinking is good! :-)","msgtype":"m.text"},"ts":1183587120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1183587180000,"senderName":"Hixie","senderId":"Hixie@irc"}
]