[
{"content":{"body":"Hi annevk, I am an OPW applicant and would like to work on the project \"Contribute to the HTML Standard!\". Where should I start?","msgtype":"m.text"},"ts":1444022421000,"senderName":"babita","senderId":"babita@irc"},
{"content":{"body":"hey babita, I haven't completely read up on the application process yet, but I believe the idea is that you fix one or more bugs/issues","msgtype":"m.text"},"ts":1444023607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babita: the wiki page has some pointers to those that are easy to start with","msgtype":"m.text"},"ts":1444023639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babita: the specification itself is hosted at https://github.com/whatwg/html","msgtype":"m.text"},"ts":1444023738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babita: and you can build it using the scripts here: https://github.com/whatwg/html-build","msgtype":"m.text"},"ts":1444023751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babita: if you haven't read it yet, https://wiki.gnome.org/Outreachy#Make_a_Small_Contribution has some tips on this front from Outreachy","msgtype":"m.text"},"ts":1444023936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"babita: back later today","msgtype":"m.text"},"ts":1444023961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thank you so much for the pointers, will go through them now.","msgtype":"m.text"},"ts":1444025758000,"senderName":"babita","senderId":"babita@irc"},
{"content":{"body":"babita: cool!","msgtype":"m.text"},"ts":1444029341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"updated https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21 to make the initial set of steps clearer","msgtype":"m.emote"},"ts":1444029818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for updating that; there we somebody else on here this weekend also asking how to get started","msgtype":"m.text"},"ts":1444030104000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah saw that, it happening again made me realize the instructions should probably be there","msgtype":"m.text"},"ts":1444033239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: you have a WindowProxy rewrite somewhere, correct?","msgtype":"m.text"},"ts":1444037287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess for the cross-origin stuff, we want to have special instances of that object?","msgtype":"m.text"},"ts":1444037313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: what are the contents of a history entry?","msgtype":"m.text"},"ts":1444045435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to interpret that","msgtype":"m.emote"},"ts":1444045462000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: from reading the specification it seems it contains a \"request\", a \"Document object\", a \"browsing context name\", ...","msgtype":"m.text"},"ts":1444045558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: but it's never really made explicit or enumerated","msgtype":"m.text"},"ts":1444045575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, request","msgtype":"m.text"},"ts":1444045601000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess it says \"Each session history entry consists, at a minimum, of a URL, and each entry may in addition have a state object, a title, a Document object, form data, a scroll position, and other information associated with it.\"","msgtype":"m.text"},"ts":1444045614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or even document object?","msgtype":"m.text"},"ts":1444045619000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"why document object","msgtype":"m.text"},"ts":1444045628000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"But although it says URL, it seems to manipulate the request method at times so that's clearly more complicated","msgtype":"m.text"},"ts":1444045646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only bfcache hentry contains document object","msgtype":"m.text"},"ts":1444045653000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: right, it's for bfcache","msgtype":"m.text"},"ts":1444045662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: the Document object is optional","msgtype":"m.text"},"ts":1444045678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://mxr.mozilla.org/mozilla-central/source/docshell/shistory/nsISHEntry.idl","msgtype":"m.text"},"ts":1444045701000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"title, formstate, scroll info, url are there","msgtype":"m.text"},"ts":1444045750000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is not clear to me what \"request\" is about","msgtype":"m.text"},"ts":1444045796000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: in the spec it accounts for the entry initially being requested using the GET method","msgtype":"m.text"},"ts":1444045826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: from that it seems we also store referrer and referrer policy, all of which would be part of request","msgtype":"m.text"},"ts":1444045996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so maybe there's something to that idea","msgtype":"m.text"},"ts":1444046005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, yes, those might be part of request in spec","msgtype":"m.text"},"ts":1444046173000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: CSPish things are starting to come together at https://w3c.github.io/webappsec-csp/#integrations. It's nowhere near done, but probably worth your time to skim that section now so I don't continue off in directions you wouldn't like for either Fetch or HTML.","msgtype":"m.text"},"ts":1444046310000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I think it should take care of the things you noted last time around as being undesirable.","msgtype":"m.text"},"ts":1444046328000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: is the CSP header recognized for all resources or only those that create global objects?","msgtype":"m.text"},"ts":1444050636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if the latter, shouldn't the parsing be hooked into HTML someplace?","msgtype":"m.text"},"ts":1444050647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If we want to do something like http://w3c.github.io/webappsec-csp/cookies/, we need the policy before we process `set-cookies` (which is the next step after the monkey-patch point).","msgtype":"m.text"},"ts":1444050858000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: And if we want to do referrers, we need to do something in fetch.","msgtype":"m.text"},"ts":1444050882000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: There are a few things like that which effect the way Fetch works, outside the context of a global object. For that reason, it seemed simplest to do the parsing in Fetch.","msgtype":"m.text"},"ts":1444050911000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I see","msgtype":"m.text"},"ts":1444052227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: did you figure out when it happens relative to service workers?","msgtype":"m.text"},"ts":1444052236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it seems you decided service workers do not get to set policy","msgtype":"m.text"},"ts":1444052262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: whereas JakeA and slightlyoff I believe think they will","msgtype":"m.text"},"ts":1444052278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"awakens","msgtype":"m.emote"},"ts":1444052301000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"mkwst: of course, letting CSP control set-cookie and letting CSP be set from SW are potentially somewhat contradictory goals","msgtype":"m.text"},"ts":1444052319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll pop this onto my todo list, need to process it a bit to work out how it interacts with SW","msgtype":"m.text"},"ts":1444052413000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'm not dead set on SW being able to set CSP, I just couldn't think of another way of doing it at the time","msgtype":"m.text"},"ts":1444052437000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: mkwst: since the response's policy can only be set from an http fetch, it cannot be set manually - am I reading that right? Does that mean `new Response` always has no policy?","msgtype":"m.text"},"ts":1444055033000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: a more detailed response to your email...","msgtype":"m.text"},"ts":1444055857000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: nothing else is updated for css requests either (in blink)","msgtype":"m.text"},"ts":1444055868000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: i'm not saying that this is great, but I can hardly define for css how it should fetch resources in the referrer spec","msgtype":"m.text"},"ts":1444055896000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: no, but we can all agree on what the model is","msgtype":"m.text"},"ts":1444056011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure I understand?","msgtype":"m.text"},"ts":1444056163000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"the model should be fetch, no?","msgtype":"m.text"},"ts":1444056185000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: the model for how CSS should work","msgtype":"m.text"},"ts":1444056219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it should use fetch, right?","msgtype":"m.text"},"ts":1444056237000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: sure, but we're discussing how it uses fetch","msgtype":"m.text"},"ts":1444056256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hum","msgtype":"m.text"},"ts":1444056271000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'm not really discussing that","msgtype":"m.text"},"ts":1444056277000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: I don't recall the problem with allowing service workers to control a page's policy. The model in this document allows the service worker to replace/mody a request/response, but forces the response back through the page's policy. That's the agreement that I recall.","msgtype":"m.text"},"ts":1444056278000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"jochen__: you're saying that it shouldn't have a referrer policy, whereas others have been saying it should have one, that of the document","msgtype":"m.text"},"ts":1444056281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^","msgtype":"m.text"},"ts":1444056286000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1444056292000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'm saying whatever has a referrer should have a policy","msgtype":"m.text"},"ts":1444056309000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and it should take the one from whereever it got the referrer","msgtype":"m.text"},"ts":1444056316000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and I understood what you said as \"but I don't like where the referrer came from\"","msgtype":"m.text"},"ts":1444056338000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: I guess I'm disagreeing with that notion","msgtype":"m.text"},"ts":1444056418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I think it's fine for the referrer to come from the stylesheet, whereas the referrer policy comes from the stylesheet's document","msgtype":"m.text"},"ts":1444056436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhm","msgtype":"m.text"},"ts":1444056518000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"and it should use the policy from the document whenever the network request actually hits the wire?","msgtype":"m.text"},"ts":1444056539000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"or from when the stylesheet is loaded?","msgtype":"m.text"},"ts":1444056578000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"mkwst: but if the policy is only applied through http fetch, doesn't that mean CSP is always empty via new Response() (even if headers are set manually)","msgtype":"m.text"},"ts":1444056645000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jochen__: well, that's an open question for any request","msgtype":"m.text"},"ts":1444056775000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: if we allow the referrer policy to change in general, we should also allow it to change for stylesheets","msgtype":"m.text"},"ts":1444056790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i agree that this sounds good in general","msgtype":"m.text"},"ts":1444056818000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"however, if the referrer comes from the document, it's odd to only propagate referrer policy changes but not referrer changes","msgtype":"m.text"},"ts":1444056840000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"the referrer comes from the stylesheet, it cannot really change","msgtype":"m.text"},"ts":1444056917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSSOM allows changes a bit, but none that would affect the referrer","msgtype":"m.text"},"ts":1444056936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if the referer cannot really change, the policy shouldn't change either imo","msgtype":"m.text"},"ts":1444056999000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i mean, a referrer can't change all that much anyway","msgtype":"m.text"},"ts":1444057022000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"basically, anything that you can do via history.pushState","msgtype":"m.text"},"ts":1444057040000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"right, for documents it can change","msgtype":"m.text"},"ts":1444057192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"given that you have <meta name=referrer> you're going to allow some kind of change to the referrer policy either way","msgtype":"m.text"},"ts":1444057228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the main question is whether that is bounded somehow to the first occurrence and whether that makes sense","msgtype":"m.text"},"ts":1444057268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I don't really care strongly about that","msgtype":"m.text"},"ts":1444057291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd go for whatever is easy to implement, but I don't think you can say \"no modifications\" since clearly <script src=...> <meta name=referrer ...> would be one of the tests","msgtype":"m.text"},"ts":1444057340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed, we have such a test in blink","msgtype":"m.text"},"ts":1444059751000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: and currently, it tests that the policy is not updated for the stylesheet","msgtype":"m.text"},"ts":1444059761000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: the thing is, i'd rather not fix one behavior for css in the referrer policy","msgtype":"m.text"},"ts":1444059798000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: i'd rather have css to make up its mind how to integrate with fetch","msgtype":"m.text"},"ts":1444059810000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: euhm, you didn't let HTML make up its mind either","msgtype":"m.text"},"ts":1444059843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: I don't see what is so hard about deciding on something here","msgtype":"m.text"},"ts":1444059855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: clearly it needs to be specified elsewhere, but for now we can have a note in the specification about what it's going to be","msgtype":"m.text"},"ts":1444059876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: but I guess you could email www-style⊙wo and let them chime in, but I'm pretty sure they'd just defer back","msgtype":"m.text"},"ts":1444059914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhm","msgtype":"m.text"},"ts":1444059928000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'll just run the layout test on firefox and see what happens","msgtype":"m.text"},"ts":1444059954000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"in the best case, it just passes, then we have a decision","msgtype":"m.text"},"ts":1444059962000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: that still doesn't make a lot of sense to me","msgtype":"m.text"},"ts":1444060078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: anyway, what happens for <script src=...> <meta name=referrer ...> <script src=...> <meta name=referrer ...> <link rel=stylesheet> etc.","msgtype":"m.text"},"ts":1444060109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: does the policy keep changing?","msgtype":"m.text"},"ts":1444060119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1444060162000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"<meta> is pretty random anyway","msgtype":"m.text"},"ts":1444060174000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"as the preload scanner does some funky stuff with it","msgtype":"m.text"},"ts":1444060183000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i'd rather only of CSP delivery","msgtype":"m.text"},"ts":1444060189000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"anyway, off for today","msgtype":"m.text"},"ts":1444060258000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: so the question for stylesheets is whether we copy the policy in or whether it's a reference","msgtype":"m.text"},"ts":1444060274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: given CSSOM I'd say it should by reference","msgtype":"m.text"},"ts":1444060316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"be by*","msgtype":"m.text"},"ts":1444060330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: WindowProxy at https://github.com/domenic/window-proxy-spec but it has no knowledge of cross-origin complications, yeah.","msgtype":"m.text"},"ts":1444063766000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: for cross-origin we basically want to consolidate the object creation to a single point","msgtype":"m.text"},"ts":1444063917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: and that then branches to create the correct objects","msgtype":"m.text"},"ts":1444063934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't really have enough context to know what that means. What objects are you even talking about.","msgtype":"m.text"},"ts":1444063941000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: same for returning objects, obviously","msgtype":"m.text"},"ts":1444063943000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: WindowProxy and Location objects have their own cross-origin objects per the etherpad draft","msgtype":"m.text"},"ts":1444063968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm OK, makes sense I guess.","msgtype":"m.text"},"ts":1444063993000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: JakeA: I asked in issue, but do you think a document in SW scope should still be considered \"controlled\" if `disableFetch()` has been called?","msgtype":"m.text"},"ts":1444064009000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"fwiw, from a push messaging perspective, I quite dislike the disableFetch() method (while I understand the reasoning of not wanting listening to events to have side-effects)","msgtype":"m.text"},"ts":1444064088000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"there's major performance improvements a UA can make if it's known whether an event will be handled by a SW or not","msgtype":"m.text"},"ts":1444064107000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"making features opt-out doesn't scale very well (disablePush()? disableSync()?)","msgtype":"m.text"},"ts":1444064131000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Yeah, I'd still rather listening was just observable","msgtype":"m.text"},"ts":1444064170000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: …but is we had disableFetch() my hunch would be that the pages are still controlled.","msgtype":"m.text"},"ts":1444064227000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"beverloo: push and sync are explicitly opt-in, so not sure why we would need to add disable calls for those... I think many people would prefer fetch was opt-in as well","msgtype":"m.text"},"ts":1444064230000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview, for now, but onpushsubscriptionchange/onpusherror/hypothetical onnotificationclose wouldn't be","msgtype":"m.text"},"ts":1444064272000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"It allows you to defer idb upgrades to an activate event of a sw, avoiding multiple tabs with different versions. Also makes sense with clients.matchAll","msgtype":"m.text"},"ts":1444064326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the controlled status does those things?  or is that a different topic?","msgtype":"m.text"},"ts":1444064372000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm fine with it being controlled... I just suddenly wasn't sure if the definition of \"controlled\" implied fetch events or not","msgtype":"m.text"},"ts":1444064407000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: a new SW will wait behind the active one while controlled pages exist using the active one","msgtype":"m.text"},"ts":1444064432000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: clients.matchAll() will return only controlled clients by default","msgtype":"m.text"},"ts":1444064446000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right, ok... its more a lifecycle thing","msgtype":"m.text"},"ts":1444064448000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"my mental model was wrong... I was thinking of it as being \"controlled\" in the sense the fetch interception lets the service worker have its way with the page","msgtype":"m.text"},"ts":1444064501000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1444064655000,"senderName":"wanderview","senderId":"wanderview@irc"}
]