[
{"content":{"body":"TabAtkins: Any current estimate of when you might be able to do the thing of extracting the syntax-highlighting stuff from Bikeshed so that we can use it for the HTML spec?","msgtype":"m.text"},"ts":1526607470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Ah dang, that's like 80% finished, I just dropped it. I'll get it done next week for you.","msgtype":"m.text"},"ts":1526612284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \\o/","msgtype":"m.text"},"ts":1526614360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1526614364000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: re:https://github.com/w3c/web-platform-tests/pull/10594#issuecomment-390116038, it would be nice if we could write down what folks think `from-origin` means. The github thread is confusing, and seems to be moving in a direction that doesn't match what's in WebKit at the moment.","msgtype":"m.text"},"ts":1526627456000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Is that on your plate? Or Apple's? Or do we need to find a volunteer? :)","msgtype":"m.text"},"ts":1526627483000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: so WebKit folks would get back to my suggestion I think","msgtype":"m.text"},"ts":1526627489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I think making From-Origin the CORB opt-in makes the most sense and would be the easiest to adopt","msgtype":"m.text"},"ts":1526627513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so I guess it's on Apple's plate and perhaps also on Google and Microsoft's plate to evaluate my input and give their perspective","msgtype":"m.text"},"ts":1526627581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I worry a bit that further narrowing `from-origin`'s impact makes it even less likely that folks would serve it.","msgtype":"m.text"},"ts":1526627609000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"I also worry about some Google security folks' feedback regarding deployability.","msgtype":"m.text"},"ts":1526627626000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: this makes it much easier to deploy as it only affects cross-origin no-cors fetches","msgtype":"m.text"},"ts":1526627650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it also helps as a long term defense when everyone has site isolation","msgtype":"m.text"},"ts":1526627678000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Less risky, certainly. *shrug* I'm happy for folks to ship implementations of this to see if developers pick it up. My suspicion is that we'll end up seeing more value in approaches with broader scope, but this is small enough that shipping it doesn't cost much.","msgtype":"m.text"},"ts":1526627757000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Whenever we tightly couple stuff it seems it's less likely to be adopted because it requires changing all the things","msgtype":"m.text"},"ts":1526627801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: When you say that it should be part of CORB, do you mean it would be another way of triggering the blocking behavior? Or that it would influence the heuristics, similarly to `x-content-type-options`?","msgtype":"m.text"},"ts":1526627822000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: another way of triggering a block","msgtype":"m.text"},"ts":1526627844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. So, the idea is that you'd compare the resource's origin to the requesting origin (without consideration of embedding contexts, etc), and block if there's no match?","msgtype":"m.text"},"ts":1526627906000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(for cross-origin, no-cors requests)","msgtype":"m.text"},"ts":1526627913000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1526627933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. I'll try to summarize my understanding of the thing on the thread.","msgtype":"m.text"},"ts":1526627981000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"And now we landed CORB in Fetch this would be a fairly trivial PR. I volunteered doing the work on it","msgtype":"m.text"},"ts":1526628042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"read \"CORB in French\" and was very confused","msgtype":"m.emote"},"ts":1526628107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: \"Blocage de lecture inter-origine\"","msgtype":"m.text"},"ts":1526628196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi all, does whatwg.org have a CSS spec?","msgtype":"m.text"},"ts":1526631411000,"senderName":"michael2","senderId":"michael2@irc"},
{"content":{"body":"michael2: there's two CSS-related ideas we host, but they're not living standards: https://idea.whatwg.org/","msgtype":"m.text"},"ts":1526631471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"michael2: they're also not really maintained as far as I'm aware","msgtype":"m.text"},"ts":1526631480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so would I need to browse w3c.org to find the CSS spec's? (1,2,3+)","msgtype":"m.text"},"ts":1526631547000,"senderName":"michael2","senderId":"michael2@irc"},
{"content":{"body":"michael2: I'd use https://drafts.csswg.org/","msgtype":"m.text"},"ts":1526631659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"michael2: those are also the documents the WHATWG links to","msgtype":"m.text"},"ts":1526631675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"michael2: they're probably mostly identical to what ends up on w3.org, but might be a bit more recently updated","msgtype":"m.text"},"ts":1526631710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thats really helpful (alot of reading there) thank you :)","msgtype":"m.text"},"ts":1526631766000,"senderName":"michael2","senderId":"michael2@irc"},
{"content":{"body":"annevk: is something in particular blocking [Cached] in idl? If so we could instead add something to infra like \"Return the cached result of these steps\"","msgtype":"m.text"},"ts":1526633599000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: IDL is lacking resources","msgtype":"m.text"},"ts":1526633658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I don't think anything is blocking that work","msgtype":"m.text"},"ts":1526633669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it could maybe work in Infra; I guess it could create a unique slot on this and store the result of running the steps there if it's empty and otherwise return the value of the unique slot","msgtype":"m.text"},"ts":1526633774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: though I guess creating the unique slot is the problem, but we could hand-wave it perhaps","msgtype":"m.text"},"ts":1526633794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The context object could have a map, where the key is the steps and the value is the cached value. But I'm not sure how to decide if it'd be better as an idl thing or a prose thing","msgtype":"m.text"},"ts":1526633858000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: IDL is somewhat better as just like it can generate the spec code for us, it can generate the impl code too","msgtype":"m.text"},"ts":1526634082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g., Firefox supports a variant of Cached already iirc","msgtype":"m.text"},"ts":1526634099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotcha. Yeah that makes sense","msgtype":"m.text"},"ts":1526634111000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: It seems like subresource requests from an <iframe referrerpolicy=xxx></iframe> don't inherit the frame's referrer policy in Chrome/FF. Want to confirm with you that the rp should be inherited, due to steps in Main Fetch that use a request's client's referrer, right?","msgtype":"m.text"},"ts":1526635934000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: looking at it now, I'm not sure there's actually anything that takes that referrerpolicy attribute value and installs it on the loaded document or its global","msgtype":"m.text"},"ts":1526636082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: it seems to be just used for the load triggered by src=\"\"","msgtype":"m.text"},"ts":1526636100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hmm, but don't we set request's client to a node doc's Window's environment settings object when fetching things like <img> etc?","msgtype":"m.text"},"ts":1526636202000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"And since environ settings obj has a referrer policy, Main Fetch should \"inherit\" it?","msgtype":"m.text"},"ts":1526636215000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yes","msgtype":"m.text"},"ts":1526636237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: but the referrer policy of the environment settings object of a thing loaded in an <iframe> is just the default value","msgtype":"m.text"},"ts":1526636257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: as things stand today (well, unless you set a referrer-policy via a header)","msgtype":"m.text"},"ts":1526636281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(or <meta name=referrer>)","msgtype":"m.text"},"ts":1526636296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but that's not the case if <iframe referrerpolicy=origin> etc right?","msgtype":"m.text"},"ts":1526636308000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it is the case is what I'm saying","msgtype":"m.text"},"ts":1526636368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: again, there's nothing that transfers that value to the environment settings object's referrer policy of the loaded thing","msgtype":"m.text"},"ts":1526636385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah. So an <img>'s node document's Window's environment settings object's referrer policy is the default, regardless of the surrounding iframe","msgtype":"m.text"},"ts":1526636646000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: let me put it differently","msgtype":"m.text"},"ts":1526636849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: the referrer policy of the environment settings object can be only be set through <meta name=referrer> or the Referrer-Policy header","msgtype":"m.text"},"ts":1526636873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: there's on inheritance from ancestors and there's no controlling it with <iframe referrerpolicy> either; again, afaict from the algorithms in the HTML Standard","msgtype":"m.text"},"ts":1526636924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok that makes sense now, I appreciate it.","msgtype":"m.text"},"ts":1526637278000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it might make sense to do that though, but it'd be a bit of work and we'd have to figure out various details","msgtype":"m.text"},"ts":1526637358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess when reading https://github.com/whatwg/html/issues/3670#issuecomment-387307670, I was assuming that the \"global state\" was the environment settings object...and the creation of an <iframe referrerpolicy=xxx> set the \"iframe's environment settings object's referrer policy\", and this settings object was used as subresource request clients","msgtype":"m.text"},"ts":1526637432000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Bad assumption :( But yes, I kind of like that idea of somehow sharing that around more easily w/ subresources","msgtype":"m.text"},"ts":1526637499000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: well, I was wrong there as I assumed that <iframe referrerpolicy> did the thing you were looking for","msgtype":"m.text"},"ts":1526637609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: global definitely is 1:1 with settings objects","msgtype":"m.text"},"ts":1526637629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: so, sorry for causing confusion and not checking how referrerpolicy operated first","msgtype":"m.text"},"ts":1526637671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no worries, I made some heavy inferences","msgtype":"m.text"},"ts":1526638018000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: So the client that is a request's client for requests made within an <iframe> will be the <iframe>'s environment settings object though, we just don't set that object's referrer policy with anything but the header and the meta tag","msgtype":"m.text"},"ts":1526638105000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Hey! I'm looking at nested browsing contexts with iframe srcdoc documents, and where it is defined that they inherit the SW from the parent browsing context","msgtype":"m.text"},"ts":1526638543000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"basically, I want to align Chromium's behavior with https://bugzilla.mozilla.org/show_bug.cgi?id=1426979","msgtype":"m.text"},"ts":1526638582000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(and testing shows that Safari is the same as Firefox)","msgtype":"m.text"},"ts":1526638600000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"domfarolino: it's the <iframe>'s child browsing context's active document's relevant settings object, or some such","msgtype":"m.text"},"ts":1526638704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I think part of the reason the bug you pinged is still open is because it's not defined","msgtype":"m.text"},"ts":1526638747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: the issue you pinged*","msgtype":"m.text"},"ts":1526638753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it wasn't clear to me if it was defined elsewhere in the meantime","msgtype":"m.text"},"ts":1526638814000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: so IIUC, in order to define that, I'd need to say that a nested browsing context which has an active document which is an iframe srcdoc document has the same active service worker as the settings object of its parent browsing context?","msgtype":"m.text"},"ts":1526639052000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"(many concepts that I never dove into before, so bare with me if I'm totally off)","msgtype":"m.text"},"ts":1526639089000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah, though I'm not sure that's good enough for the spec (since you also need to say something about time, unless it always inherits somehow)","msgtype":"m.text"},"ts":1526639323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you expand on \"something about time\"? When it inherits it?","msgtype":"m.text"},"ts":1526639369000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: a big problem here is that part of the HTML spec is full of technical debt; document/global creation is really poorly done, which makes these kind of things hard to define (and probably why they're always causing problems)","msgtype":"m.text"},"ts":1526639372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: yeah; e.g. if the parent gained a service worker later on, would that be used?","msgtype":"m.text"},"ts":1526639415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, got it","msgtype":"m.text"},"ts":1526639445000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"fwiw, I think it should","msgtype":"m.text"},"ts":1526639451000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: yeah, seems like that's what you'd want","msgtype":"m.text"},"ts":1526639473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: this should apply to about:blank too btw; they should be identical imo","msgtype":"m.text"},"ts":1526639486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are people embedding about:blank? Or is that a theoretical case?","msgtype":"m.text"},"ts":1526639521000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: whenever you create an <iframe> you are, so yes","msgtype":"m.text"},"ts":1526639572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and no)","msgtype":"m.text"},"ts":1526639582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh...","msgtype":"m.text"},"ts":1526639593000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1526639596000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"JakeA: FWIW, I suspect a longer form explanation of why non-HTTPS is a problem and the diff between long and safe would help a lot of people","msgtype":"m.text"},"ts":1526641047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hah, just in the middle of writing a tweet about that. Yeah, I wish the article had made that clear.","msgtype":"m.text"},"ts":1526641078000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"secure/safe, not long","msgtype":"m.text"},"ts":1526641097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://twitter.com/jaffathecake/status/997431630011752449","msgtype":"m.text"},"ts":1526641403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"foolip: I think I found a better way to insert a newline with sed","msgtype":"m.text"},"ts":1526648559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://dom.spec.whatwg.org/#context-object - when could the context object be omitted? Trying to think of an example","msgtype":"m.text"},"ts":1526653029000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If an object has an associated 'thing', can I just say \"Get the associated thing\" in a getter?","msgtype":"m.text"},"ts":1526653066000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I usually write \"Let whatever be the context object's thing\"","msgtype":"m.text"},"ts":1526653094000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I prefer always including it these days","msgtype":"m.text"},"ts":1526653231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Context: I'm looking at https://notifications.spec.whatwg.org/#dom-notification-actions step 2, where it comes up with \"in the notification's\"","msgtype":"m.text"},"ts":1526653233000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Same. Gotcha.","msgtype":"m.text"},"ts":1526653242000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, this is another thing where IDL needs updating so we can all start using \"this\" instead","msgtype":"m.text"},"ts":1526653254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1526653344000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/dom/pull/647","msgtype":"m.text"},"ts":1526653398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"LGTM","msgtype":"m.text"},"ts":1526653618000,"senderName":"JakeA","senderId":"JakeA@irc"}
]