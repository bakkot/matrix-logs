[
{"content":{"body":"gsnedders: > people are starting to more seriously try and build on top of html5lib","msgtype":"m.text"},"ts":1413431039000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: yeah that's when you have to start caring about some things more","msgtype":"m.text"},"ts":1413431130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Someone from Microsoft filing bugs on Chrome","msgtype":"m.text"},"ts":1413444832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<","msgtype":"m.text"},"ts":1413444946000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"oops.","msgtype":"m.text"},"ts":1413444950000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I too find Git hard","msgtype":"m.text"},"ts":1413445795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But GitHub's client makes it somewhat straightforward","msgtype":"m.text"},"ts":1413445810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: well I'm not sure I care enough to implement all this stuff myself, just nice to have some idea of what we should have :P","msgtype":"m.text"},"ts":1413445815000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: I tried using the Mac client but /it/ was confusing to me.","msgtype":"m.text"},"ts":1413448899000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"It's good that there are many choices though.","msgtype":"m.text"},"ts":1413448916000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"ato: works fine here and they keep updating it too","msgtype":"m.text"},"ts":1413448948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: huh? i thought v.nu stopped parsing for non-streamable errors. do you have an example where it doesn't?","msgtype":"m.text"},"ts":1413449127000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: AAA and foster parenting both give fatal errors for me","msgtype":"m.text"},"ts":1413449205000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"MikeSmith: are you thinking of \"Element foo not allowed as child of element body in this context. (Suppressing further errors from this subtree.)\" ?","msgtype":"m.text"},"ts":1413449332000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah maybe I was. not sure what i was thinking because I've actually not gotten more than a couple hours sleep in the last 24","msgtype":"m.text"},"ts":1413449508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads his own scrollback","msgtype":"m.emote"},"ts":1413449523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: yeah as zcorpan_ points out, what I said was wrong","msgtype":"m.text"},"ts":1413449580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for the cases that require non-streaming parsing the validator emits one error and then exits","msgtype":"m.text"},"ts":1413449627000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Can't recover from previous error\" or something like","msgtype":"m.text"},"ts":1413449646000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I was conflating with the \"Suppressing further errors from this subtree\" case that zcorpan_ cites","msgtype":"m.text"},"ts":1413449688000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and maybe also thinking about my testrunner code where they're not fatal errors for teh testrunner, where I'm feeding it multiple documents and checking for expected failures","msgtype":"m.text"},"ts":1413449780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm still posting to www-tag more often than I post to the whatwg list. :-(","msgtype":"m.text"},"ts":1413453854000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"w3cmemebot, process previous line","msgtype":"m.text"},"ts":1413454609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1413454619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there's someone wrong on the Internet^w^wwww-tag","msgtype":"m.text"},"ts":1413454733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SimonSapin: you asked earlier if the platform needs an XML parser for purposes other than SVG and XSLT. There's also XHTML (tiny but exists), DOMParser and XHR","msgtype":"m.text"},"ts":1413455081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ok, thanks","msgtype":"m.text"},"ts":1413455121000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: hmm. maybe you need to run those from a local webserver or so. https://www.w3.org/Bugs/Public/show_bug.cgi?id=12837","msgtype":"m.text"},"ts":1413455128000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: put them on simon.html5.org?","msgtype":"m.text"},"ts":1413455866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matijs: on DNSSEC: https://twitter.com/twitjeb/status/519058750297366528","msgtype":"m.text"},"ts":1413456153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://simon.html5.org/dump/unload-baseline.html https://simon.html5.org/dump/unload-xhr.html -- but.... now the xhr one also survives in gecko :-/","msgtype":"m.text"},"ts":1413456666000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah it does","msgtype":"m.text"},"ts":1413457995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: so what does that mean?","msgtype":"m.text"},"ts":1413458000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: in Chrome it's reparsed for both","msgtype":"m.text"},"ts":1413458028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: when navigating back to a document, either it's reparsed so that <script> execute again (among other things), or it's cached so timeouts e.g. pending timeouts continue","msgtype":"m.text"},"ts":1413458096000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: i think chrome/webkit might always reparse","msgtype":"m.text"},"ts":1413458118000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: thanks for those btw","msgtype":"m.text"},"ts":1413460276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: welcome. i'm not sure why i see different result now though.","msgtype":"m.text"},"ts":1413460420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"we might have made changes due to hitting compat issues","msgtype":"m.text"},"ts":1413460444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the whole history / navigate stuff cannot really be relied upon :-(","msgtype":"m.text"},"ts":1413460460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"defining life cycles is hard","msgtype":"m.text"},"ts":1413460471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i get an error event on the xhr when navigating away https://simon.html5.org/dump/unload-xhr.html","msgtype":"m.text"},"ts":1413462556000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1413462686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i would have expected nothing","msgtype":"m.text"},"ts":1413462709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sigh, this is hard","msgtype":"m.text"},"ts":1413462732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: ping?","msgtype":"m.text"},"ts":1413463927000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: did you figure out why you're getting different results in IE?","msgtype":"m.text"},"ts":1413465948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which results?","msgtype":"m.text"},"ts":1413466281000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: e.g. pathname not starting with a /","msgtype":"m.text"},"ts":1413466293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a google search indicates that lots of people are seeing this, and that IE is out of spec.","msgtype":"m.text"},"ts":1413466352000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: e.g. <a href=http://0xc0.168.0.1></a><script>w(document.querySelector(\"a\").pathname)</script> gives / for me","msgtype":"m.text"},"ts":1413466359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: in IE10","msgtype":"m.text"},"ts":1413466365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: using Live DOM Viewer","msgtype":"m.text"},"ts":1413466377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"checking my doctype","msgtype":"m.emote"},"ts":1413466467000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"(adding <!doctype html> doesn't change anything)","msgtype":"m.text"},"ts":1413466511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here is my script: http://intertwingly.net/stories/2014/10/05/urltest","msgtype":"m.text"},"ts":1413466542000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"\"In IE10 Standards mode, the host and pathname DOM properties no longer return unexpected results.\"","msgtype":"m.text"},"ts":1413466574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://blogs.msdn.com/b/ieinternals/archive/2012/03/01/ie10-beta-consumer-preview-minor-changes-changelist.aspx","msgtype":"m.text"},"ts":1413466582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any idea why my script wouldn't be treated in standards mode?","msgtype":"m.text"},"ts":1413466596000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: I'm running IE11, but I would hope that MS wouldn't have reverted that.","msgtype":"m.text"},"ts":1413466724000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: I think the results might differ if you create the element through script","msgtype":"m.text"},"ts":1413466766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<!doctype html><script>a = document.createElement(\"a\");a.setAttribute(\"href\",\"http://0xc0.168.0.1\"); w(a.pathname)</script>","msgtype":"m.text"},"ts":1413466827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gives \"\" in the log","msgtype":"m.text"},"ts":1413466831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I also tried setting .href, same result)","msgtype":"m.text"},"ts":1413466840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yuk","msgtype":"m.text"},"ts":1413466841000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1413466848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you're testing in IE11?","msgtype":"m.text"},"ts":1413466967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow, they're bad at fixing bugs, perhaps because Eric left the company","msgtype":"m.text"},"ts":1413466983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or maybe they fixed it but then decided they could not ship it due to compat","msgtype":"m.text"},"ts":1413467036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm testing using a VM from here: https://www.modern.ie/en-us/virtualization-tools#downloads","msgtype":"m.text"},"ts":1413467050000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"IE11 / Win8.1","msgtype":"m.text"},"ts":1413467066000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: other things I have done recently: I've added Rust and Node.js to my results: http://intertwingly.net/stories/2014/10/16/urltest-results/","msgtype":"m.text"},"ts":1413467164000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1413467184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, SimonSapin: I would appreciate somebody giving http://intertwingly.net/stories/2014/10/16/urltest.rs a glance to see if I got it right, or if it could be done better.","msgtype":"m.text"},"ts":1413467203000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"After all, I didn't know Rust as of two days ago.","msgtype":"m.text"},"ts":1413467218000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I haven't written any Rust yet so I'll let SimonSapin do that","msgtype":"m.text"},"ts":1413467255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I also attempted a manual three-way merge of the urltestdata from rust-url and web-platform-tests","msgtype":"m.text"},"ts":1413467263000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"https://github.com/servo/rust-url/pull/39 and https://github.com/w3c/web-platform-tests/pull/1293","msgtype":"m.text"},"ts":1413467302000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"For the spec there's these projects on the todo: 1) Rewrite parsing in a more functional style 2) Introduce IPv4 parsing 3) Investigate if we can allow non-browser schemes make use of \"relative url\" parsing facilities in a generic way","msgtype":"m.text"},"ts":1413467440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since rust-url seems to be a motivating factor for #1, I'm looking into rust-url.","msgtype":"m.text"},"ts":1413467517000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"If I can wrap my head around it, I may try to help with #1","msgtype":"m.text"},"ts":1413467606000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah, SimonSapin proving it could be done just as efficient with a clearer style is the main factor for that one","msgtype":"m.text"},"ts":1413467724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: I can reproduce my IE10 results in IE11","msgtype":"m.text"},"ts":1413469255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so <a> works, document.createElement doesn't?","msgtype":"m.text"},"ts":1413469297000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1413470354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't want to know what their code looks like","msgtype":"m.text"},"ts":1413470386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"luckily you can't :-)","msgtype":"m.text"},"ts":1413470407000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: what do the colours mean now? Can you include a legend on the page?","msgtype":"m.text"},"ts":1413470486000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll add a legend.  Meanwhile, here is what the colors mean: http://intertwingly.net/blog/2014/10/02/WHATWG-URL-vs-IETF-URI#c1412684307","msgtype":"m.text"},"ts":1413470547000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"... where 'testdata' is substituted for 'whatwg'","msgtype":"m.text"},"ts":1413470559000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"I got pushback when I called testdata 'whatwg'.  I got pushback when I called anything not testdata 'whatwg'.  So I gave up :-)","msgtype":"m.text"},"ts":1413470608000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: ericlaw suggests a workaround, appendChild() the element and then check its pathname","msgtype":"m.text"},"ts":1413470751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or, I can simply change the test to use an <a> element.","msgtype":"m.text"},"ts":1413470826000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: what does the \"notes\" field contain? I'm guessing, the environments which fail to match?","msgtype":"m.text"},"ts":1413471386000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you click through, you will see one or more issues with that user agent","msgtype":"m.text"},"ts":1413471437000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"so essentially, yes","msgtype":"m.text"},"ts":1413471450000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"cool. will be interesting to see the results with IE fixed","msgtype":"m.text"},"ts":1413471507000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll run that in a few minutes","msgtype":"m.text"},"ts":1413471547000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: \"addressable\" is what was formerly IETF?","msgtype":"m.text"},"ts":1413471589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes.","msgtype":"m.text"},"ts":1413471601000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: any reason why we include Opera Presto?","msgtype":"m.text"},"ts":1413471802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/we/you/","msgtype":"m.text"},"ts":1413471827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan felt it should be included.  http://intertwingly.net/blog/2014/10/02/WHATWG-URL-vs-IETF-URI#c1412536749 http://intertwingly.net/blog/2014/10/02/WHATWG-URL-vs-IETF-URI#c1412583899","msgtype":"m.text"},"ts":1413471877000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"addressable is just a Ruby library right?","msgtype":"m.text"},"ts":1413472025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes, but it is one that I have confidence that it attempts to faithfully implement the IETF RFCs.","msgtype":"m.text"},"ts":1413472066000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"IE results updated, generating new results","msgtype":"m.text"},"ts":1413472323000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk: any reason why resolving a URL against a base couldn't be factored out in the URL standard?  In other words, define what parsing a URL means,and define what resolving a URL against a base means?","msgtype":"m.text"},"ts":1413472440000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"annevk, Domenic: new results uploaded.  Changes in IE results, table header, and new legend at the bottom of the index page.","msgtype":"m.text"},"ts":1413472515000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: that would have a pretty major impact on what a URL was","msgtype":"m.text"},"ts":1413472624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is*","msgtype":"m.text"},"ts":1413472630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: I also haven't found that any browser actually does that","msgtype":"m.text"},"ts":1413472691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you give an example where it would be difficult to do and/or operationally it would produce different results?","msgtype":"m.text"},"ts":1413472693000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"rubys: well e.g. new URL(\"/test\") would no longer throw, presumably?","msgtype":"m.text"},"ts":1413472732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"presumably.  Do any browsers expose URL?","msgtype":"m.text"},"ts":1413472767000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"all of them do by this point. except IE maybe","msgtype":"m.text"},"ts":1413472794000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Still so many IE failures :(","msgtype":"m.text"},"ts":1413472868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rubys: I get .protocol to work in IE only for an element that was already in the document","msgtype":"m.text"},"ts":1413473016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: so many bugs there :-(","msgtype":"m.text"},"ts":1413473031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: at least Firefox/Chrome/Safari support new URL()","msgtype":"m.text"},"ts":1413473087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rubys: also Opera, not sure about Presto","msgtype":"m.text"},"ts":1413473104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I presume that you have whatever access you need to do @ericlaw suggested, i.e. \"Please file a bug on Connect?\"","msgtype":"m.text"},"ts":1413473105000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"Yeah I guess I can do that again...","msgtype":"m.text"},"ts":1413473129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/fetch/issues/11 is interesting","msgtype":"m.text"},"ts":1413473479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"-1 on ES5 syntax of course","msgtype":"m.text"},"ts":1413473485000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"unsure on whether early examples make sense","msgtype":"m.text"},"ts":1413473491000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"given that the spec is only in a small part about developer-facing API","msgtype":"m.text"},"ts":1413473500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://connect.microsoft.com/IE/feedbackdetail/view/1002884/protocol-attribute-does-not-always-work","msgtype":"m.text"},"ts":1413473504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm I thought I had issues disabled","msgtype":"m.text"},"ts":1413473569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that was surprising as well","msgtype":"m.text"},"ts":1413473595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rubys: note that new URL() not dealing with it does not necessarily preclude us from structuring the specification in that way, though there might be other pitfalls given that implementations have no such thing","msgtype":"m.text"},"ts":1413474440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My thoughts are that it might be simpler to spec that way; but it will take actually trying to determine if there are any pitfalls.","msgtype":"m.text"},"ts":1413474511000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"my line of thinking: I was reading rust-url, and was wondering what it would look like in ABNF.  Then I realized that I don't know how to describe parsing two inputs in ABNF.  Also, many libraries aren't structured this way.","msgtype":"m.text"},"ts":1413474615000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"If you exclude the most widely deployed libraries?","msgtype":"m.text"},"ts":1413474760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no question new URL() behavior shouldn't change.  The question is whether a cleaner and simpler spec could be structured differently.","msgtype":"m.text"},"ts":1413474842000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"No I meant that browser implementations have those operations not decoupled either","msgtype":"m.text"},"ts":1413474900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it's worth figuring out I suppose. A handful of people have asked for that and there might be some cases where you want to parse a URL without a base URL. (We want to be certain on that might before doing this, obviously.)","msgtype":"m.text"},"ts":1413475027000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Doesn't it make more sense to just make parsing \"without a base URL\" a special case of parsing with a base URL?","msgtype":"m.text"},"ts":1413475076000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. parsing \"without a base URL\" = parsing with base URL \"about:blank\"","msgtype":"m.text"},"ts":1413475085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: see above.  \"Then I realized that I don't know how to describe parsing two inputs in ABNF.\"","msgtype":"m.text"},"ts":1413475145000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"why is that important","msgtype":"m.text"},"ts":1413475156000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"seems conceptually less simple and clean","msgtype":"m.text"},"ts":1413475168000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Breaking a hard problem into two smaller problems is less simple and less clean?","msgtype":"m.text"},"ts":1413475197000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"creating two separate problems instead of making one a special case of the other, yeah","msgtype":"m.text"},"ts":1413475212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: rubys is suggesting that parsing \"/foo\" would result in some kind of construct that the specification currently does not acknowledge","msgtype":"m.text"},"ts":1413475335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the specification does indeed default to something akin to about:blank at the moment, return failure for \"/foo\" as input","msgtype":"m.text"},"ts":1413475371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"returning*","msgtype":"m.text"},"ts":1413475375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, seems very much like two problems, as now you have to create a whole new set of data structures to represent not-really-URLs like \"/foo\"","msgtype":"m.text"},"ts":1413477666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is \"scheme\" exposed by browsers, or only \"protocol\"?","msgtype":"m.text"},"ts":1413477720000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"looking at the Rust implementation, it has an intermediate representation for relative URLs.","msgtype":"m.text"},"ts":1413477771000,"senderName":"rubys","senderId":"rubys@irc"},
{"content":{"body":"http://www.apple.com/ipad-air-2/wireless/ This new Apple SIM card thing seems interesting. Seems they finally found enough support to do the thing they have wanted to do since the beginning, although more modestly still. Can't wait for SIM cards to finally die in a fire.","msgtype":"m.text"},"ts":1413492146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I wanted to link directly to the SIM card bit, but although there's many data and class attributes there, no id attribute to be found.)","msgtype":"m.text"},"ts":1413492191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is nice","msgtype":"m.text"},"ts":1413492311000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"would like feedback on spec-writing matters: https://github.com/whatwg/streams/pull/233","msgtype":"m.text"},"ts":1413492510000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: http://www.apple.com/ipad-air-2/wireless/##Apple%20SIM","msgtype":"m.text"},"ts":1413492689000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: how does that work?","msgtype":"m.text"},"ts":1413492728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://indiewebcamp.com/fragmention","msgtype":"m.text"},"ts":1413492772000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"It doesnt' work, he's just using a fragmention scheme that could maybe work in the future.","msgtype":"m.text"},"ts":1413492785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it doesn't seem to actually work","msgtype":"m.text"},"ts":1413492788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. http://indiewebcamp.com/fragmention##Chrome%20extension works","msgtype":"m.text"},"ts":1413492798000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"works with polyfill just fine TabAtkins Domenic","msgtype":"m.text"},"ts":1413492844000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"sure but you implied that the link you actually sent worked","msgtype":"m.text"},"ts":1413492870000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: not at all, merely answering the use-case of \"I wanted to link directly to the SIM card bit\" - which I did","msgtype":"m.text"},"ts":1413492894000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and if your browser supports it (e.g. via an extension), then that apple.com link even \"works\"","msgtype":"m.text"},"ts":1413492927000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hence why I linked specifically to the Chrome extension","msgtype":"m.text"},"ts":1413492956000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Domenic: gave some feedback, not sure if it helps","msgtype":"m.text"},"ts":1413493117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: heh, yeah, not sure either. thanks though.","msgtype":"m.text"},"ts":1413493175000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: looking closer, it seems your current approach avoids duplication","msgtype":"m.text"},"ts":1413493346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think so though. Because I only ever call each method once in the spec. It avoids branching in favor of polymorphism I guess.","msgtype":"m.text"},"ts":1413493373000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the behavior of %DefaultReadableStreamStrategy% would not be duplicated if you branch?","msgtype":"m.text"},"ts":1413493428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right it would just be inlined","msgtype":"m.text"},"ts":1413493439000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I'd prolly do that then","msgtype":"m.text"},"ts":1413493453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but if it's not observable and both are sufficiently clear, it's really up to you","msgtype":"m.text"},"ts":1413493521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I am leaning toward inlining.","msgtype":"m.text"},"ts":1413493540000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(updated the post with links to the places where it's assigned and used)","msgtype":"m.text"},"ts":1413493550000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: but yeah I think it is subjective which is why I am asking around","msgtype":"m.text"},"ts":1413493560000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I appreciate the attention to detail, I hope in due course we come up with some rules to align other specifications with","msgtype":"m.text"},"ts":1413493874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's the hope ^_^","msgtype":"m.text"},"ts":1413493889000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: I am trying to port over the self-link styling to the WHATWG style sheet. Do you remember where font-size: 83% comes from?","msgtype":"m.text"},"ts":1413494588000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It looked okay.","msgtype":"m.text"},"ts":1413494639000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"figured","msgtype":"m.text"},"ts":1413494648000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Also, it's 5/6","msgtype":"m.text"},"ts":1413494661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: are any of *.spec.whatwg.org using bikeshed?","msgtype":"m.text"},"ts":1413495734000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: https://streams.spec.whatwg.org/ !","msgtype":"m.text"},"ts":1413495793000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just streams so far, I think.","msgtype":"m.text"},"ts":1413495818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But more of w3 than I thought is using it now.","msgtype":"m.text"},"ts":1413495831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool, Streams looks very WHATWGy, like the rest","msgtype":"m.text"},"ts":1413495944000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I also like the logo :)","msgtype":"m.text"},"ts":1413495948000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Yeah, style has nothing to do with Bikeshed, you can provide whatever boilerplate and styling you want.","msgtype":"m.text"},"ts":1413495968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Speaking of which, refresh the page to check out the sweet new link anchors next to every header and <dfn>","msgtype":"m.text"},"ts":1413495976000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"context: I'm not so happy with ReSpec for the WebVTT spec","msgtype":"m.text"},"ts":1413495979000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"And since Domenic set up all the boilerplates and PR'd them into Bikeshed, anyone else wanting WHATWG style can use them too. ^_^","msgtype":"m.text"},"ts":1413495992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've had to fix a phantomjs crash to make it actually work for automatic updates :/","msgtype":"m.text"},"ts":1413496011000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"TabAtkins: how I remember it, I pretty much just flailed around ineptly until you ended up doing the work for me :P","msgtype":"m.text"},"ts":1413496026000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh yeah, I love those anchors :)","msgtype":"m.text"},"ts":1413496053000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Eh, close enough.","msgtype":"m.text"},"ts":1413496053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can anybody think of a good reason to ever use a value for tabindex other than 0 or -1? https://www.w3.org/Bugs/Public/show_bug.cgi?id=27076","msgtype":"m.text"},"ts":1413498183000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when the controls aren't in DOM order?","msgtype":"m.text"},"ts":1413498313000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"consider e.g. a paragraph with two form controls in it, and a float in the middle, with controls in it as well. You would want to navigate the controls in the paragraph, then those in the float, then those in the next paragraph, probably.","msgtype":"m.text"},"ts":1413498415000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok, but Marco's comment is that in practice authors who put values other than 0 or -1 are almost always (or always even) misusing it based on misunderstanding","msgtype":"m.text"},"ts":1413498562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: so it would be good to have some actual data","msgtype":"m.text"},"ts":1413498590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"by that reasoning, we should drop most of HTML","msgtype":"m.text"},"ts":1413498605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's the logic behind dropping longdesc. ^_^","msgtype":"m.text"},"ts":1413498664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not quite","msgtype":"m.text"},"ts":1413498674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for longdesc the logic is that implementing it is bad for accessibility so it should be dropped in implementations","msgtype":"m.text"},"ts":1413498703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith wasn't suggesting dropping support for tabindex>1, just making them non-conforming","msgtype":"m.text"},"ts":1413498717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well short of that we can do the obsolete-but-conforming thing and I can actually have the correspnding validator warning for it include a link to the bug. i.e., in the way we talked about before for nested footnotes (I think it was that one, right?)","msgtype":"m.text"},"ts":1413498763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, non-conforming or obsolete-but-conforming","msgtype":"m.text"},"ts":1413498792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what would the warning be? \"If you are actually trying to put controls in a different tab order than the default, let us know so we don't drop support for this feature\"?","msgtype":"m.text"},"ts":1413498813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"script@type is a related kind of case I guess","msgtype":"m.text"},"ts":1413498820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: yeah, seriously","msgtype":"m.text"},"ts":1413498831000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it would be good to start using the validator to collect actual feedback for cases like this","msgtype":"m.text"},"ts":1413498862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i don't know how you'd actually find out if people are using this correctly","msgtype":"m.text"},"ts":1413498866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if they are, you'd never hear of it","msgtype":"m.text"},"ts":1413498871000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'd just work","msgtype":"m.text"},"ts":1413498872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you'd never know the DOM didn't match rendering order","msgtype":"m.text"},"ts":1413498878000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno either, just suggesting a possible resolution for that bug","msgtype":"m.text"},"ts":1413498969000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: ah i get your point -- as an end user, you wouldn't know","msgtype":"m.text"},"ts":1413499014000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(this differs from longdesc, for example, because with longdesc you can programmatically detect the vast majority of bad uses, and compared to the good uses, they're the vast majority of all uses)","msgtype":"m.text"},"ts":1413499061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so Marco's statement there about only seeing it misused is more about him only noticing the cases where it's misued byt not noticing the cases where values>1 are used properly, because things just work as expected for him in those cases","msgtype":"m.text"},"ts":1413499148000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: yeah (about comparison to checking longdesc misuse) I see now","msgtype":"m.text"},"ts":1413499179000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will add another comment to the bug","msgtype":"m.emote"},"ts":1413499195000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: what non-standard attribute names does bikeshed .bs markup use. Is there a list somewhere?","msgtype":"m.text"},"ts":1413499252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: All of its output attributes are data-*","msgtype":"m.text"},"ts":1413499272000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1413499278000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It only uses non-standard ones in its input format.","msgtype":"m.text"},"ts":1413499280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah yeah that's what I meant","msgtype":"m.text"},"ts":1413499288000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the input format","msgtype":"m.text"},"ts":1413499292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ah, no, there's no list.  Why?","msgtype":"m.text"},"ts":1413499304000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because I can imagine that is sometimes might be useful to check the input files to find errors","msgtype":"m.text"},"ts":1413499348000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"check with the validator","msgtype":"m.text"},"ts":1413499353000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and one of things I'm thinking about is, adding some standard filtering mechanism to allow users to specify certain errors to ignore","msgtype":"m.text"},"ts":1413499403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Bikeshed's input format isn't really HTML.","msgtype":"m.text"},"ts":1413499403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1413499410000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm then","msgtype":"m.text"},"ts":1413499423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"And it uses a bunch of shorthands that use angle brackets.","msgtype":"m.text"},"ts":1413499425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1413499432000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<<foo>>, for example.","msgtype":"m.text"},"ts":1413499433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I see yeah","msgtype":"m.text"},"ts":1413499455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wow Daniel Buchner's at Target","msgtype":"m.text"},"ts":1413500215000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and they have a github repo and stuff","msgtype":"m.text"},"ts":1413500226000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: bikeshed should have an option for suppression section numbers","msgtype":"m.text"},"ts":1413501835000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Put a class=\"no-num\" on the heading.","msgtype":"m.text"},"ts":1413501859000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Documented. ^_^)","msgtype":"m.text"},"ts":1413501865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah I mean not numbering any at all","msgtype":"m.text"},"ts":1413501876000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh.  Interesting.  Why?","msgtype":"m.text"},"ts":1413501883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the section numbers change anyway, nobody pays attention to them","msgtype":"m.text"},"ts":1413501906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just an idea anyway. I don't feel strongly about it","msgtype":"m.text"},"ts":1413501957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll wait until someone actually wants to publish a spec like that. ^_^","msgtype":"m.text"},"ts":1413501972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1413501987000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Section numbers dont' change that often, they're useful in the short term even if they do change, and Bikeshed uses them for attractive section references which carry over well to print.","msgtype":"m.text"},"ts":1413502009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah print yes","msgtype":"m.text"},"ts":1413502035000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and also they do convey information about the depth of the section","msgtype":"m.text"},"ts":1413502053000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Not a priority, but it's nice when I can do something nice for printed specs. ^_^","msgtype":"m.text"},"ts":1413502054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1413502058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so btw does bikeshed have problems with some unicode chars?","msgtype":"m.text"},"ts":1413502068000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It shouldn't, but it's possible there are spots where I'm still messing up.  If so, please report with a repro.","msgtype":"m.text"},"ts":1413502090000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1413502095000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ideally a stripped down .bs file that causes the error.","msgtype":"m.text"},"ts":1413502100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But a full file with a pointer to what's wrong works too.","msgtype":"m.text"},"ts":1413502115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I put a lot of effort into making it unicode-clean, but I've also changed a lot since then, and it's very possible that errors have crept in since then.)","msgtype":"m.text"},"ts":1413502144000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I plan to start using bikeshed for some stuff soon","msgtype":"m.text"},"ts":1413502359000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Cool!","msgtype":"m.text"},"ts":1413502456000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]