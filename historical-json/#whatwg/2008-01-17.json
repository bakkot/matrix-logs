[
{"content":{"body":"Philip`: http://www.whatwg.org/specs/web-apps/current-work/#shadows","msgtype":"m.text"},"ts":1200535260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: what do you think? i tried avoiding the maths...","msgtype":"m.text"},"ts":1200535261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"Shadows form part of the source image during composition.\" - they don't in Safari","msgtype":"m.text"},"ts":1200535380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1200535381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(The shadow gets composited onto the canvas first, and then the source image is composited on top)","msgtype":"m.text"},"ts":1200535382000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that seems dumb","msgtype":"m.text"},"ts":1200535383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wouldn't that mean you would get non-shadow-like effects when your globalcompositethingy is not source-over?","msgtype":"m.text"},"ts":1200535440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://canvex.lazyilluminati.com/misc/shadow/shadow2.html (in Safari) - the rows have different globalCompositeOperations, and it does result in things that don't really look like shadows","msgtype":"m.text"},"ts":1200535560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does any browser to shadows other than safair?","msgtype":"m.text"},"ts":1200535620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"safari?","msgtype":"m.text"},"ts":1200535621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No (though there's a patch for Firefox that I wrote)","msgtype":"m.text"},"ts":1200535622000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"do you recommend that we try to get safari to change, or should i just make the spec do this weird behaviour?","msgtype":"m.text"},"ts":1200535680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume Safari uses some CG function to draw shadows, so it'd be a pain if they had to rewrite it all to do custom rendering, and I don't think any other behaviour would be significantly less weird","msgtype":"m.text"},"ts":1200535740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1200535741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I don't have any kind of intuitive understanding of what should happen when you xor a semi-transparent shadowed shape onto a background, so everything is equally weird)","msgtype":"m.text"},"ts":1200535800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1200535860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and Safari's approach is at least sensible when you have operation=source-over and globalAlpha=anything)","msgtype":"m.text"},"ts":1200535861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, changed the drawing model (it'll update in about 60 seconds)","msgtype":"m.text"},"ts":1200535920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"The shadowBlur attribute specifies the number of coordinate space units that the blurring is to cover.\" - it doesn't really specify that, since there's some non-linear calculation to convert shadowBlur into the Gaussian radius and then the blur is theoretically infinitely wide; so maybe it should say something vague like \"The shadowBlur attribute determines the size of the blur\"","msgtype":"m.text"},"ts":1200536040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Copy the alpha channel of A to B, offset by shadowOffsetX in the positive x direction, and shadowOffsetY in the positive y direction.\" - shadowOffsetY is not a link","msgtype":"m.text"},"ts":1200536160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"let σ be the square root of span>shadowBlur*2\" - HTML leakage, and also the sentence doesn't end with a \".\"","msgtype":"m.text"},"ts":1200536161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thanks, fixed and regenning...","msgtype":"m.text"},"ts":1200536280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Perform a Gaussian Blur on B\" - might be slightly clearer as \"Perform a 2D Gaussian blur on B\"","msgtype":"m.text"},"ts":1200536281000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fixed and regenning...","msgtype":"m.text"},"ts":1200536282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have a good reference for 2D Gaussian Blur, btw? i looked at google scholar for a siggraph paper or something, but found nothing","msgtype":"m.text"},"ts":1200536340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Multiply the alpha component of every pixel in B by the alpha components of the color of shadowColor.\" - s/components/component/","msgtype":"m.text"},"ts":1200536341000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"fixed internally","msgtype":"m.text"},"ts":1200536400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm, I don't know of any references","msgtype":"m.text"},"ts":1200536460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Gauss probably wasn't into computer graphics much, and afterwards Gaussian blurs were sufficiently obvious that maybe nobody could publish research papers about it","msgtype":"m.text"},"ts":1200536520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1200536521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe there's some standard graphics textbook that describes fundamental things like that, but I wouldn't know of it","msgtype":"m.text"},"ts":1200536640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"several people have suggested text books, but i'd rather refer to the original reference or to nothing at all","msgtype":"m.text"},"ts":1200536641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Rendered the shadow from image A, using the current shadow styles, creating image B.\" - s/Rendered/Render/","msgtype":"m.text"},"ts":1200536820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's not clear what should be done when shadows are not supported","msgtype":"m.text"},"ts":1200536821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's a convolution kernel with the factors following a gaussian distribution, right?","msgtype":"m.text"},"ts":1200536880000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Philip`: hm, good point","msgtype":"m.text"},"ts":1200536881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"kig: Yes","msgtype":"m.text"},"ts":1200536882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Multiply the alpha component of every pixel in B by globalAlpha.\" (and subsequent lines) - \"B\" should be italics","msgtype":"m.text"},"ts":1200537060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"will fix","msgtype":"m.text"},"ts":1200537120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Back at the beginning, \"Shadows form part of the source image during composition.\" should be removed (if it isn't already)","msgtype":"m.text"},"ts":1200537180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Is it worth saying something like \"σ (may|should) be clamped to a maximum value before drawing, to prevent excessive memory usage\"?","msgtype":"m.text"},"ts":1200537300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hmm, don't think I see anything else to comment on at the moment","msgtype":"m.text"},"ts":1200537360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It's sensible to avoid the maths for the blurring - I don't know why I originally suggested writing it all explicitly, when it's not like anyone is going to implement it based on the spec's maths)","msgtype":"m.text"},"ts":1200537420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"would this be ok:","msgtype":"m.text"},"ts":1200537540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"    <p>User agents may limit values of <var title=\"\">&sigma;</var> to","msgtype":"m.text"},"ts":1200537541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"    an implementation-specific maximum value to avoid memory or CPU","msgtype":"m.text"},"ts":1200537542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"    limitations during the Gaussian blur operation.</p>","msgtype":"m.text"},"ts":1200537543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/avoid memory/avoid exceeding memory/","msgtype":"m.text"},"ts":1200537544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and s/memory or CPU/hardware/","msgtype":"m.text"},"ts":1200537600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think that sounds reasonable, just as a hint to implementors that they should prevent shadowBlur=1e10","msgtype":"m.text"},"ts":1200537660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is clearRect() affected by the clipping region?","msgtype":"m.text"},"ts":1200537780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes, in Opera/Firefox/Safari","msgtype":"m.text"},"ts":1200537840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but not globalAlpha or globalCompositeOperation, right?","msgtype":"m.text"},"ts":1200537841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"according to http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.clip.html (although Opera is a bit funny and gets the alpha slightly wrong)","msgtype":"m.text"},"ts":1200537842000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No (except globalCompositeOperation in Opera 9.2 (not 9.5)), according to http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.globalcomposite.html","msgtype":"m.text"},"ts":1200537843000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200537900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and http://philip.html5.org/tests/canvas/suite/tests/2d.clearRect.globalalpha.html)","msgtype":"m.text"},"ts":1200537901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1200537902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and it's affected by shadows in Safari, which seems silly)","msgtype":"m.text"},"ts":1200537903000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, regenning the new text for shadows and clearRect()","msgtype":"m.text"},"ts":1200537960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't seem to be getting as much mail this year as last year","msgtype":"m.text"},"ts":1200538140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's hope this lasts","msgtype":"m.text"},"ts":1200538141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"regenned","msgtype":"m.text"},"ts":1200538200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is there any value in being explicit that shadowOffset[XY] are not affected by the CTM?","msgtype":"m.text"},"ts":1200538500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since it's now mentioned that shadowBlur is unaffected by it)","msgtype":"m.text"},"ts":1200538501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"... the new value is igored.\" - I'm not sure what Igor is doing here","msgtype":"m.text"},"ts":1200538560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The whole \"Let A be the source image for which a shadow is being created.\" etc section has non-italic \"A\", whereas the Drawing Model section has italic \"A\"","msgtype":"m.text"},"ts":1200538620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"If shadowBlur is less than 8, let σ be shadowBlur/2; otherwise, let σ be the square root of shadowBlur*2.\" - the \"/\" and \"*\" look a bit out of place - maybe use the proper divide and times symbols?","msgtype":"m.text"},"ts":1200538740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'll assume implementors can work out for themselves that the shadow rendering can be skipped iff shadowColor.alpha == 0","msgtype":"m.text"},"ts":1200538800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(since they'd be stupid to not optimise that case)","msgtype":"m.text"},"ts":1200538860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It'd be nice if \"Render the shadow from image A, using the current shadow styles, creating image B.\" linked back to the definition of how to render a shadow","msgtype":"m.text"},"ts":1200538920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can't think of any comments now again","msgtype":"m.emote"},"ts":1200538921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"goes to bed","msgtype":"m.emote"},"ts":1200539040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"based on the minutes, the waf telecon seems to have been one that would have been interesting to listen to...","msgtype":"m.text"},"ts":1200579120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Are the minutes public?","msgtype":"m.text"},"ts":1200579240000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: yes.","msgtype":"m.text"},"ts":1200579241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Dashiva: http://www.w3.org/mid/213B17B2-B67E-4D5F-A6D9-D7C3499AB228⊙nc","msgtype":"m.text"},"ts":1200579300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Interesting indeed","msgtype":"m.text"},"ts":1200579780000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"annevk: FYI: https://bugzilla.mozilla.org/show_bug.cgi?id=289938#c16","msgtype":"m.text"},"ts":1200595920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hiya Hixie... Any chance you have a reference/spec on how you expect button.type to behave? Mozilla's and Opera's implementations are not interoperable (and ours just play sucks)","msgtype":"m.text"},"ts":1200598140000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I guess WF2.0 behavior is consistent with Opera, though..","msgtype":"m.text"},"ts":1200598380000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie, the not crashing requirement on safari 3 for the acid3 submissions, is that an actual safari 3 release, rather than a webkit nightly?","msgtype":"m.text"},"ts":1200598680000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"SadEagle: dom2 html :-)","msgtype":"m.text"},"ts":1200600180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: both, ideally","msgtype":"m.text"},"ts":1200600181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: come on. You know as well as me that that spec is barely above useless.","msgtype":"m.text"},"ts":1200600240000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I can make some guesses about what they -meant- by the case folding remark. But it says nothing about what to do when the value isn't one of the button / submit / reset.","msgtype":"m.text"},"ts":1200600300000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Mozilla behavior is that the values submit / button / reset are case folded on return. Other values are unaffected, including returning uppercase (which does contradict the lowercasing remark). Lack of attribute (what you test for, I think?) is interpreted as submit.","msgtype":"m.text"},"ts":1200600420000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie, ok","msgtype":"m.text"},"ts":1200600480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Opera (and ~now Konq) behavior is to revert to 'submit' if the value of type isn't valid (or blank), and otherwise return the type. ","msgtype":"m.text"},"ts":1200600481000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: unless WF2 says something else, i don't have any better spec yet. HTML5 will eventually cover this of course. Feel free to send mail to whatwg or public-html to remind me to fix this.","msgtype":"m.text"},"ts":1200600660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, WF2 says that invalid values of attributes should be ignored, which is basically what opera does, with the interpretation that type is returning the computed value..","msgtype":"m.text"},"ts":1200600720000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Hixie: I'm not sure tests 26 and 27 are a good idea, since it is an obscure case and the obvious ways preserving connected ancestors as well as descendants across GC would likely hurt DOM performance","msgtype":"m.text"},"ts":1200602520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(I guess we can see if it does for real though)","msgtype":"m.text"},"ts":1200602521000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the expected behavior also could cause web apps to unintentionally hold down larger chunks of memory than they might expect (XHR, grab a single node without removing it, now you have extended the lifetime of the whole result document)","msgtype":"m.text"},"ts":1200602820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk pig","msgtype":"m.emote"},"ts":1200602880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"can't type","msgtype":"m.emote"},"ts":1200602940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that was meant to be: /msg annevk ping","msgtype":"m.text"},"ts":1200602941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"othermaciej: i disagree, iv'e run into this kind of thing before, as have others, and i think it's clear that the DOM requires browsers to not be GCing accessible stuff","msgtype":"m.text"},"ts":1200603540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'm not sure it's particularly clear that the DOM requires anything on this","msgtype":"m.text"},"ts":1200603660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think you'd be hard-pressed to argue that the DOM allows you to just start setting parentNode to null whimsically","msgtype":"m.text"},"ts":1200603720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think it's clear that it doesn't require it either - just not sure \"clear\" is a word that applies","msgtype":"m.text"},"ts":1200603780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it doesn't say anything about what operations not mentioned by the DOM spec may mutate the DOM","msgtype":"m.text"},"ts":1200603781000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's clearly not \"none\", since other specs require various things to mutate the DOM","msgtype":"m.text"},"ts":1200603840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so you're saying that if IE started moving nodes around randomly in the DOM, it would be conforming?","msgtype":"m.text"},"ts":1200603841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can see how a sensible person might not think \"allocating memory\" shouldn't be one of those operations","msgtype":"m.text"},"ts":1200603842000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, it would be a perverse interpretation of the spec","msgtype":"m.text"},"ts":1200603843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I don't think the spec is \"clear\" on this","msgtype":"m.text"},"ts":1200603900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there is no normative prose anywhere that allows the parentNode to change, as far as i can tell","msgtype":"m.text"},"ts":1200603901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in this spec or any other","msgtype":"m.text"},"ts":1200603902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and since parentNode is defined as returning the parent, and appendChild is defined as setting the parent, i don't see how you can have an interpretation that allows the parent to change","msgtype":"m.text"},"ts":1200603960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean, \"as a result of garbage collection\", or no prose allows the parentNode to change ever?","msgtype":"m.text"},"ts":1200603961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i meant as a result of the browser randomly deciding to do it (e.g. as part of GC)","msgtype":"m.text"},"ts":1200603962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if there was some text that could define _when_ exactly the parent would be lost, then ok","msgtype":"m.text"},"ts":1200604020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but there isn't, and browsers are losing the parent in different ways because of it","msgtype":"m.text"},"ts":1200604021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is an interoperability nightmare that should be fixed by not dropping parts of the DOM on the floor","msgtype":"m.text"},"ts":1200604080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like you're actually saving memory intentionally on real sites because of this","msgtype":"m.text"},"ts":1200604081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1200604082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's true that no normative prose explicitly allows that, but nor does it explicitly forbid it","msgtype":"m.text"},"ts":1200604083000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen, actually, we have magic behavior that approaches Gecko, just not for all public identifiers that Gecko recognizes, such as MathML","msgtype":"m.text"},"ts":1200604084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej: yes it does! it says it should return the parent, and the parent was set by appendChild","msgtype":"m.text"},"ts":1200604085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: but clearly there's things not in the DOM Core spec which would require you to change the parent","msgtype":"m.text"},"ts":1200604140000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even things that do not result from any DOM call (like parsing a document)","msgtype":"m.text"},"ts":1200604141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: and none of those things are happening here","msgtype":"m.text"},"ts":1200604142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: indeed _nothing_ is happening here, it's one piece of script","msgtype":"m.text"},"ts":1200604200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if script is executing then obviously something is happening","msgtype":"m.text"},"ts":1200604201000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i mrsn nothing is happening to the DOM, between the setting and the checking","msgtype":"m.text"},"ts":1200604260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: specs cannot say what must not happen, there's an infinite list of things that would have to be listed","msgtype":"m.text"},"ts":1200604261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: \"browsers must not set attributes for no reason. browsers must not change the values of attributes for no reason. browsers must not...\"","msgtype":"m.text"},"ts":1200604320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: if you go down this line of argument, then almost any bug can be explained as \"well the spec doesn't say it _shouldn't_ happen on the 3rd of september at 2pm...\"","msgtype":"m.text"},"ts":1200604321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really must go, will be back shortly","msgtype":"m.text"},"ts":1200604380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure if there's a justification in the text of DOM Core why html parsing can mutate the DOM but garbage collection (or occurence of a random date) is not, but I admit I can't think of how you would write it to make that clear","msgtype":"m.text"},"ts":1200604440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it can't just be \"another standard says so\" because I don't think the fact that insertAdjacentHTML mutates the DOM would be considered nonconforming to the DOM spec","msgtype":"m.text"},"ts":1200604560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"HTML parsing defines what DOM mutations are to be performed","msgtype":"m.text"},"ts":1200604620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it does indeed seem lame to assume that therefore anything is permitted","msgtype":"m.text"},"ts":1200604621000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which is slightly different I'd say","msgtype":"m.text"},"ts":1200604622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, I could write a document saying what DOM mutations may or may not be performed when garbage collecting, but I don't think that should retroactively change the meaning of DOM Core","msgtype":"m.text"},"ts":1200604680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and no spec defines what DOM mutations are to be performed when calling insertAdjacentHTML","msgtype":"m.text"},"ts":1200604740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no spec defines insertAdjacentHTML","msgtype":"m.text"},"ts":1200604741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is true","msgtype":"m.text"},"ts":1200604800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"defining side effects that can happen during GC is nasty, because GC is very non-deterministic","msgtype":"m.text"},"ts":1200604860000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"there is a spec that defines ECMAScript garbage collection, namely ECMA-262","msgtype":"m.text"},"ts":1200604861000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but it's probably super vague about participation of host objects in GC","msgtype":"m.text"},"ts":1200604980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in the name of interop it's probably good that Acid3 includes things that really annoy each of the browser vendors","msgtype":"m.text"},"ts":1200605040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the logical model is that child references are strong references and parent references are weak references","msgtype":"m.text"},"ts":1200605041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the 0 bytes in the DOM issue bites us","msgtype":"m.text"},"ts":1200605042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"surely by now all browser vendors are too jaded to be annoyed by anything","msgtype":"m.text"},"ts":1200605100000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1200605101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: weak references suck too. especially when they're not explicit","msgtype":"m.text"},"ts":1200605220000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"actually I think it would be easy to make the specific acid3 test for this pass, the hard case would be preserving pieces of the DOM that have never been referenced from JS","msgtype":"m.text"},"ts":1200605221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if (elem.parentNode) { elem.parentNode.setAttribute(...) }","msgtype":"m.text"},"ts":1200605280000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sure hope you didn't GC in there!","msgtype":"m.text"},"ts":1200605281000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"at least with explicit weak refs like in Java, I have to declare the weak ref and then do a .get() to get the real reference, so I know something's up","msgtype":"m.text"},"ts":1200605340000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm not saying it's great behavior, it just happens to be what we lovingly reverse-engineered from Mozilla as best we could","msgtype":"m.text"},"ts":1200605400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, I didn't know there was a compatibility argument","msgtype":"m.text"},"ts":1200605460000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm not sure compatibility cares that much one way or the other","msgtype":"m.text"},"ts":1200605520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so why'd you reverse engineer it?","msgtype":"m.text"},"ts":1200605521000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(about preserving parents in detached DOM fragments)","msgtype":"m.text"},"ts":1200605522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there was some site that required specific things about preserving DOM wrappers for descendants of detached DOM subtrees years ago","msgtype":"m.text"},"ts":1200605523000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(actually worse than a site, I think it was an \"enterprise\" app's html interface)","msgtype":"m.text"},"ts":1200605580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"doesn't the Web JS concurrency model guarantee that if you walk down the tree, you can walk back up in the same method without someone else mutating the tree in ways that make weak refs collectable?","msgtype":"m.text"},"ts":1200605581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so we tested what other browsers did for parents or siblings of detached trees across GC","msgtype":"m.text"},"ts":1200605582000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: if what you're getting at is that roc's example can't possibly fail if \"eleme\" is in the document tree then I think you are right","msgtype":"m.text"},"ts":1200605640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1200605700000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"but if it isn't...","msgtype":"m.text"},"ts":1200605701000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"othermaciej: I meant roc's case, yes","msgtype":"m.text"},"ts":1200605702000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"one thing to consider is that any argument that could be made to say test 23 is invalid could also be used to make test 99 invalid","msgtype":"m.text"},"ts":1200605703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, s/23/26/","msgtype":"m.text"},"ts":1200605760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i really don't think you want test 99 to be invalid","msgtype":"m.text"},"ts":1200605761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if elem is not in the document tree then indeed weird things could happen in very speculative theory, but in fact won't, since there's nothing to trigger a GC at times that no temporary expression holds a reference","msgtype":"m.text"},"ts":1200605762000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I still don't understand when parentNode is a weak ref to something for which there isn't a reciprocal hard ref","msgtype":"m.text"},"ts":1200605763000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"isn't parentNode nulled automatically if you detach a node from the tree?","msgtype":"m.text"},"ts":1200605764000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you removeChild, yes, it is nulled","msgtype":"m.text"},"ts":1200605820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the case where it is effectively a weak ref in WebKit (and was in Gecko and IE at least last time I tested) is if you have node A containing node B in document D, then you remove node A from the document, keep a reference to node B, and drop all your references to node A","msgtype":"m.text"},"ts":1200605880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm. interesting case","msgtype":"m.text"},"ts":1200605940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the gc bg fails in gecko differently than webkit","msgtype":"m.text"},"ts":1200605941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"FWIW it still is weak in Gecko, we fail testcase 26, but we have enough infrastructure to fix it pretty easily post-FF3","msgtype":"m.text"},"ts":1200605942000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"in one the ndoes have to still be in the doc, in the other the nodes have to be outside of the dic","msgtype":"m.text"},"ts":1200605943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: test 99 is comedy gold","msgtype":"m.text"},"ts":1200605944000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1200606000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't recall seeing any weak refs in Java DOM impls, but then weak refs wasn't what I was paying attention to","msgtype":"m.text"},"ts":1200606001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you have to have weak refs if you're using ref counting, otherwise you'll never reach zero","msgtype":"m.text"},"ts":1200606002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: not so much an issue with other GC schemes","msgtype":"m.text"},"ts":1200606003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you wouldn't expect to, Java has a real collector so cyclic structures were never a problem","msgtype":"m.text"},"ts":1200606060000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Java DOM impls probably have strong refs both ways because Java DOMs would be written in pure Java","msgtype":"m.text"},"ts":1200606061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ah right. ","msgtype":"m.text"},"ts":1200606062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: \"if elem is not in the document tree then indeed weird things could happen in very speculative theory, but in fact won't\" ... I'm not sure about that. I can easily imagine running unrelated windows in different threads sharing a common JS heap","msgtype":"m.text"},"ts":1200606120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"or the Gears thread stuff","msgtype":"m.text"},"ts":1200606180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: that's the kind of stuff that I considered to be in the \"speculative theory\" category (though Gears might potentially be less speculative)","msgtype":"m.text"},"ts":1200606300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200606840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we can differ on how far-fetched it is","msgtype":"m.text"},"ts":1200606900000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I think the only thing preventing that case from occurring in Gecko + Gears today is where we place our GC safe points","msgtype":"m.text"},"ts":1200607020000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so I don't see it as all that far-fetched","msgtype":"m.text"},"ts":1200607021000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"anyway, if that doesn't bother you, there's still the problem that inserting almost any code between the test of parentNode and the use of parentNode could allocate and trigger GC itself","msgtype":"m.text"},"ts":1200607320000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: does safari 3 fail acid3's text-shadow by having the shadow too close to the text?","msgtype":"m.text"},"ts":1200607740000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"what maks you ask that?","msgtype":"m.text"},"ts":1200607741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"makes","msgtype":"m.text"},"ts":1200607742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"its shadow is close to the text \"Acid3\" than in the reference","msgtype":"m.text"},"ts":1200607743000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"not on my machine...","msgtype":"m.text"},"ts":1200607800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but yes, if it is not pixel perfect, then it has failed","msgtype":"m.text"},"ts":1200607801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1200607802000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"are you testing for multiple shadows?","msgtype":"m.text"},"ts":1200608040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that will make Safari fail","msgtype":"m.text"},"ts":1200608041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, just the one","msgtype":"m.text"},"ts":1200608042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"multiple shadows are out in css3, iirc","msgtype":"m.text"},"ts":1200608043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i found a way to make the shift-click thing work in 3/4 browsers, up from 2/4","msgtype":"m.text"},"ts":1200608100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still doesn't work in opera though","msgtype":"m.text"},"ts":1200608101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're not out","msgtype":"m.text"},"ts":1200608102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i thought they were out?","msgtype":"m.text"},"ts":1200608103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"afaict they're not","msgtype":"m.text"},"ts":1200608104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1200608105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1200608106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they should be :-","msgtype":"m.text"},"ts":1200608107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1200608108000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you use document.close() it might start working in Opera","msgtype":"m.text"},"ts":1200608160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i haven't actually tested that myself though","msgtype":"m.text"},"ts":1200608161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, you do that now","msgtype":"m.text"},"ts":1200608220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well if you work out something that will make it work in opera, let me know","msgtype":"m.text"},"ts":1200608221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the meantime, i'm out of here","msgtype":"m.text"},"ts":1200608222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"later","msgtype":"m.text"},"ts":1200608223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"use <pre>","msgtype":"m.text"},"ts":1200608224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thought that requires some additional effort to escape the rest","msgtype":"m.text"},"ts":1200608280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: i used        document.write('<pre>Failed ' + (tests.length - score) + ' of ' + tests.length + ' tests.\\n' + log.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace('\\0', '\\\\0') + '</pre>');","msgtype":"m.text"},"ts":1200611700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and that worked?","msgtype":"m.text"},"ts":1200611760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: Should be /\\0/g, not '\\0'","msgtype":"m.text"},"ts":1200611761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well i've put that in","msgtype":"m.text"},"ts":1200612000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no time to test it right now","msgtype":"m.text"},"ts":1200612001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but let me know if it breaks anything if you try it before me","msgtype":"m.text"},"ts":1200612002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it worked for me, yeah","msgtype":"m.text"},"ts":1200612120000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: that didn't work","msgtype":"m.text"},"ts":1200612121000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there's only one \\0 in the string anyway","msgtype":"m.text"},"ts":1200612122000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Hmm, how did it not work?","msgtype":"m.text"},"ts":1200612540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cscript%3E%0D%0Avar%20s%3D'a%5C0b%5C0c'%3B%0D%0Aw(s.replace(%2F%5C0%2Fg%2C%20'%5C%5C0'))%3B%0D%0A%3C%2Fscript%3E seems to be doing the right replacements...","msgtype":"m.text"},"ts":1200612600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think I know an easy way to fix tests 26 and 27 in WebKit","msgtype":"m.text"},"ts":1200612720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"still not sure if it is a good idea though","msgtype":"m.text"},"ts":1200612721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: interesting (but may be not for the rest of the channel :-) )","msgtype":"m.text"},"ts":1200612900000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: well, a few hours ago I was debating the test with people","msgtype":"m.text"},"ts":1200612960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: well, I am curious about the potential solution, but this isn't the place for it","msgtype":"m.text"},"ts":1200613260000,"senderName":"SadEagle","senderId":"SadEagle@irc"}
]