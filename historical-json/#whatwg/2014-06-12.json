[
{"content":{"body":"why does tests2.dat's \"<table><plaintext><td>\" have four \"foster-parenting-character-in-table\" errors?","msgtype":"m.text"},"ts":1402550827000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand","msgtype":"m.text"},"ts":1402550831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, i see","msgtype":"m.text"},"ts":1402550874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nevermind","msgtype":"m.text"},"ts":1402550876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"In the algorithms below, the number of days in month month of year year is: 31 if month is 1, 3, 5, 7, 8, 10, or 12; 30 if month is 4, 6, 9, or 11; 29 if month is 2 and year is a number divisible by 400, or if year is a number divisible by 4 but not by 100; and 28 otherwise.\"","msgtype":"m.text"},"ts":1402562172000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: That seems to suggest that every month in the year 1900 has 29 days.","msgtype":"m.text"},"ts":1402562184000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie: Er, I mean...","msgtype":"m.text"},"ts":1402562221000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: the semicolons are very clear.","msgtype":"m.text"},"ts":1402562227000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"Hixie: That seems to suggest that every month in a leap year that is not divisible by 100 has 29 days.","msgtype":"m.text"},"ts":1402562247000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"ChrisMorgan: The semicolons are clear; it's the comma I'm worried about.","msgtype":"m.text"},"ts":1402562280000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Follow the semicolons. There’s no ambiguity there.","msgtype":"m.text"},"ts":1402562286000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"Apply the rules from left to right, as is standard practice in such lists, and you get the right result.","msgtype":"m.text"},"ts":1402562318000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"29 [if month is 2 and year is a number divisible by 400], or [if year is a number divisible by 4 but not by 100]","msgtype":"m.text"},"ts":1402562326000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: comma binds more tightly than semicolon.","msgtype":"m.text"},"ts":1402562345000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"It clearly needs an <ol>","msgtype":"m.text"},"ts":1402562388000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"GPHemsley: really, the “if month is 2 and” should just be removed.","msgtype":"m.text"},"ts":1402562437000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"s/if //","msgtype":"m.text"},"ts":1402562448000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"ChrisMorgan: How do you figure that? 29 days are only in February","msgtype":"m.text"},"ts":1402562452000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And the range of possible values are [1, 12], of which all the rest have been accounted for.","msgtype":"m.text"},"ts":1402562476000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"Ah, I see","msgtype":"m.text"},"ts":1402562508000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yes, I suppose that's true.","msgtype":"m.text"},"ts":1402562515000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Actually, the biggest problem here is the second \"if\"","msgtype":"m.text"},"ts":1402562566000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I agree with your analysis of the parsing of the portion between the second and third semicolons, but deny it to be a problem.","msgtype":"m.text"},"ts":1402562589000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"I can't see how. My bracketing is the literal interpretation.","msgtype":"m.text"},"ts":1402562617000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And that is clearly wrong.","msgtype":"m.text"},"ts":1402562625000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It should read more like \"29 if month is 2, and year is a number divisible by 400 or year is a number divisible by 4 but not by 100\"","msgtype":"m.text"},"ts":1402562676000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Because month *must* be 2 by that point.","msgtype":"m.text"},"ts":1402562684000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"Ah, you're right","msgtype":"m.text"},"ts":1402562721000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Something about the way it's written suggests against following the normal order-matters reading of if/else","msgtype":"m.text"},"ts":1402562757000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"to me","msgtype":"m.text"},"ts":1402562762000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"29 if year is a number divisible by 400 or year is a number divisible by 4 but not by 100\"","msgtype":"m.text"},"ts":1402562818000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"you could even condense it to \"29 if year is a number divisible by 400 or a number divisible by 4 but not by 100\"","msgtype":"m.text"},"ts":1402562865000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I read the entire thing as the following Python: 31 if month in (1, 3, 5, 7, 8, 10, 12) else 30 if month in (4, 6, 9, 11) else 29 if month == 2 and year % 400 == 0 or (year % 4 == 0 and year % 100 != 0) else 28","msgtype":"m.text"},"ts":1402562872000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"depending on how explicit you feel the need to be","msgtype":"m.text"},"ts":1402562875000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"There, the `month == 2 and` part is superfluous.","msgtype":"m.text"},"ts":1402562882000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"yeah, I agree with you now","msgtype":"m.text"},"ts":1402562901000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"What's all this world cup stuff?","msgtype":"m.text"},"ts":1402563222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1402563306000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: It's the reason you got up this morning and felt the overwhelming need to paint your face orange","msgtype":"m.text"},"ts":1402564581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hah, far too hot for that","msgtype":"m.text"},"ts":1402564619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, \"HTTP 500 Internal Server Error, 502 Bad Gateway, 503 Service Unavailable, and 504 Gateway Timeout responses\" was removed, but \"Any other HTTP response code not listed here must cause the user agent to fail the connection.\" is still there","msgtype":"m.text"},"ts":1402569479000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we really need some good blame for specs","msgtype":"m.text"},"ts":1402569822000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is there any url that blink considers to be unresolvable?","msgtype":"m.text"},"ts":1402569915000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin: webidl parser doesn't handle Promise<sequence<DomString>?>> properly (throws an \"Invalid operation\" error), but doesn't mind Promise<sequence<DomString?>>. Any ideas why offhand?","msgtype":"m.text"},"ts":1402570107000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"\"data:x,\" maybe?","msgtype":"m.text"},"ts":1402570119000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: how about http://www.invalid/","msgtype":"m.text"},"ts":1402570373000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":".invalid is reserved for the purpose.","msgtype":"m.text"},"ts":1402570379000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"ChrisMorgan: it doesn't fail to resolve on the url parser level","msgtype":"m.text"},"ts":1402570393000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it fails in dns lookup","msgtype":"m.text"},"ts":1402570407000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hokay.","msgtype":"m.text"},"ts":1402570453000,"senderName":"ChrisMorgan","senderId":"ChrisMorgan@irc"},
{"content":{"body":"darobin: Just. Nevermind.","msgtype":"m.text"},"ts":1402570498000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: okay :)","msgtype":"m.text"},"ts":1402570973000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: http://test:test/","msgtype":"m.text"},"ts":1402571579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: iirc","msgtype":"m.text"},"ts":1402571586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yup, I win","msgtype":"m.text"},"ts":1402571606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how do you tell that it doesn't resolve?","msgtype":"m.text"},"ts":1402571625000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"protocol != http","msgtype":"m.text"},"ts":1402571638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah. thanks!","msgtype":"m.text"},"ts":1402571668000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in theory :link shouldn't match I think","msgtype":"m.text"},"ts":1402571679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does though","msgtype":"m.text"},"ts":1402571740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh that was removed","msgtype":"m.text"},"ts":1402571742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now the requirement is simply <a href>","msgtype":"m.text"},"ts":1402571769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":".protocol is http: in gecko when url fails to resolve (but .href returns the input string)","msgtype":"m.text"},"ts":1402571860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, inconsistency all over","msgtype":"m.text"},"ts":1402571992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"URL Standard has requirements, but nobody is biting","msgtype":"m.text"},"ts":1402572012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the spec's bug filer's textarea's resizer thumb seems like it's in the wrong corner","msgtype":"m.text"},"ts":1402572866000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin: was using <pre> instead of <script type=text/plain> for WebIDL blocks","msgtype":"m.text"},"ts":1402573656000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah, yeah, that will bite your arse off","msgtype":"m.text"},"ts":1402573673000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: depends what you mean by resolve, but http://dev.w3.org/csswg/css-values/#about-invalid sounds related","msgtype":"m.text"},"ts":1402575634000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: as in \"fail to parse\"","msgtype":"m.text"},"ts":1402575775000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: catchy name, for this \"http://www.w3.org/2001/02pd/rec54#ED\" property uh?","msgtype":"m.text"},"ts":1402579354000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: don't expect me to understand what the name of the property is by reading this thing.","msgtype":"m.text"},"ts":1402581156000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"well it's easy!","msgtype":"m.text"},"ts":1402581179000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"pick a domain, then a random year, a mixture of random letters and numbers, then an anchor and a human-oriented shortname","msgtype":"m.text"},"ts":1402581208000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: my eyes can't get off of all the urls and namespaced props. sorry.","msgtype":"m.text"},"ts":1402581209000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"welcome to the semantic web!","msgtype":"m.text"},"ts":1402581213000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh you wish that were namespaced — it's not","msgtype":"m.text"},"ts":1402581240000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"RDF doesn't have namespaces","msgtype":"m.text"},"ts":1402581245000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that *the* name","msgtype":"m.text"},"ts":1402581248000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah, thankfully, this subset of semantic want parses as XML.","msgtype":"m.text"},"ts":1402581253000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"a blessing in disguise","msgtype":"m.text"},"ts":1402581267000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I reckon this is the first time I see someone thankful for RDF/XML","msgtype":"m.text"},"ts":1402581282000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"The fact I'm thankful something parses as XML says a lot about how I feel about it.","msgtype":"m.text"},"ts":1402581298000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Well granted thee are descent xml to json converters","msgtype":"m.text"},"ts":1402581344000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That's a HTML formatting, generated using XSLT, or an RDF schema that models the W3C process? There's so much wrong there I don't know where to start","msgtype":"m.text"},"ts":1402581386000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least the data is avaiable.","msgtype":"m.text"},"ts":1402581437000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I also like my object in JS to look like this: obj[\"contact:homePage\"][0][\"$\"][\"rdf:resource\"]","msgtype":"m.text"},"ts":1402581493000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so much fun.","msgtype":"m.text"},"ts":1402581503000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"darobin: there was an idea about putting PSL into DNS, but nothing that really gained traction","msgtype":"m.text"},"ts":1402581586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought of that, but what's the advantage?","msgtype":"m.text"},"ts":1402581613000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: decentralized","msgtype":"m.text"},"ts":1402581655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"... extensibility?","msgtype":"m.text"},"ts":1402581685000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: however, might require a level of understanding not present there","msgtype":"m.text"},"ts":1402581687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Does anyone have the TL;DR on what makes <script> parsing insane? seems like a mathiasbynens type thing :P","msgtype":"m.text"},"ts":1402585929000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's a third of the states?","msgtype":"m.text"},"ts":1402585961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: document.write","msgtype":"m.text"},"ts":1402585965000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: yeah, I guess that's too short :P. mathiasbynens: ahhh that makes sense.","msgtype":"m.text"},"ts":1402586020000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there are other issues too right? e.g. the </script> detection","msgtype":"m.text"},"ts":1402586031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://mths.be/etago","msgtype":"m.text"},"ts":1402586045000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"there's document.write(), stuff like the <!-- --> (though CSS has that too), the fact that hardly anything needs to be escaped inside <script> (</script> is the main thing that comes to mind), etc?","msgtype":"m.text"},"ts":1402586055000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Yeah, the double dash stuff is the worst","msgtype":"m.text"},"ts":1402586084000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so if we were designing <module> from scratch, we would still need no-escaping and </module>, but we could remove <!-- --> and document.write()... maybe.","msgtype":"m.text"},"ts":1402586106000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it seems like a very big XSS hole to have <module>","msgtype":"m.text"},"ts":1402586295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah yeah, true :((","msgtype":"m.text"},"ts":1402586308000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, script type=\"module\" seems way safer","msgtype":"m.text"},"ts":1402586321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: but hey, I thought we gave up that battle once <link rel=\"import\"> arrived? :P","msgtype":"m.text"},"ts":1402586334000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: also, if <module> has different characteristics from <script>, it seems even harder for people to deal with the hazard","msgtype":"m.text"},"ts":1402586350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Please tell me that thread ended with people agreeing that link rel=import was a bad idea?","msgtype":"m.text"},"ts":1402586366000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: which hazard?","msgtype":"m.text"},"ts":1402586370000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: XSS","msgtype":"m.text"},"ts":1402586381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: the hope was that <module> would be the new <script>, which kind of requires the easy-path to be at least as short to type, instead of having to add extra characters. I.e., trying to avoid the annoyingness of \"use strict\" or <!DOCTYPE html>.","msgtype":"m.text"},"ts":1402586417000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Although I guess it is kind of true that if implementers are shipping <link rel=\"import\"> without XSS concerns they have already decided that blacklist-based XSS is not a use case they want to support.","msgtype":"m.text"},"ts":1402586475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/XSS/XSS prevention/","msgtype":"m.text"},"ts":1402586487000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's possible that it also shows they dropped the ball and failed to consider it","msgtype":"m.text"},"ts":1402586517000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"security isn't a use case","msgtype":"m.text"},"ts":1402586529000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: I think Hixie is right that the annoying thing is that modules require syntax in the first place","msgtype":"m.text"},"ts":1402586568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: out-of-band syntax, that is","msgtype":"m.text"},"ts":1402586577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't really think so. I have no issues with that part of the design.","msgtype":"m.text"},"ts":1402586607000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I.e. practically speaking it doesn't cause me any grief.","msgtype":"m.text"},"ts":1402586621000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"worst case-scenario, we get no new toys and I just do <script>System.import('bootstrap-module')</script>","msgtype":"m.text"},"ts":1402586645000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So this conversation rather suggests that it does cause grief…","msgtype":"m.text"},"ts":1402586696000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean you can't simultaneously say it's not a problem to require syntax and that <script module> is too much syntax","msgtype":"m.text"},"ts":1402586741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or type=module","msgtype":"m.text"},"ts":1402586761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't know what back-compat stoy you want","msgtype":"m.text"},"ts":1402586770000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the current party line is that <script type=\"module\"> is the transitional back-compatible thing, but eventually when all browsers implement <module> people can just use that instead. clearly that is pretty naive, as various aspects of this conversation reveal. but it seems possible at least.","msgtype":"m.text"},"ts":1402586913000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"why would there ever be a time when all browsers have implemented any particular new thing?","msgtype":"m.text"},"ts":1402586953000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't get the whole transitional party line.","msgtype":"m.text"},"ts":1402586957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have heard Dave argue it, but no other feature has ever had such treatment","msgtype":"m.text"},"ts":1402586972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you want <module>, make that happen and create a polyfill with the former. Don't add two features to the platform that require indefinite support","msgtype":"m.text"},"ts":1402587005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Didn't we just decide that <module> is XSS unsafe?","msgtype":"m.text"},"ts":1402587049000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: arguably we have introduced a lot that is XSS unsafe, so the weight of that argument is unclear","msgtype":"m.text"},"ts":1402587092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: is that because we already have lots of anti-XSS stuff that has never heard of <module>, or is it something more fundamental?","msgtype":"m.text"},"ts":1402587094000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: What have we introduced recently?","msgtype":"m.text"},"ts":1402587125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: various <video> event handlers","msgtype":"m.text"},"ts":1402587136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, that does seem suboptimal","msgtype":"m.text"},"ts":1402587246000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't flagrantly XSS-unsafe stuff usually end up crippled in fairly short order?","msgtype":"m.text"},"ts":1402587357000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: example?","msgtype":"m.text"},"ts":1402587479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, okay, maybe not \"fairly short\"","msgtype":"m.text"},"ts":1402587528000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the difference is that <module> introduces radically new (and crazy) parsing rules","msgtype":"m.text"},"ts":1402590928000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's why it's orders of magnitude more scary for security than new event handlers","msgtype":"m.text"},"ts":1402590945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... why would anyone let non-legacy parsing crazy into the HTML spec?","msgtype":"m.text"},"ts":1402590994000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Because they want module to work like script","msgtype":"m.text"},"ts":1402591048000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but to not be called script","msgtype":"m.text"},"ts":1402591058000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"For some reason","msgtype":"m.text"},"ts":1402591062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but, they can't just use script's parsing rules because why?","msgtype":"m.text"},"ts":1402591110000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"script has crazy parsing rules already","msgtype":"m.text"},"ts":1402591230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So making those rules apply in a different context is new and crazy","msgtype":"m.text"},"ts":1402591252000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"not *radically* new and crazy, surely?","msgtype":"m.text"},"ts":1402591279000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so I'm assuming Hixie meant something worse than that","msgtype":"m.text"},"ts":1402591348000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"they'd be radically new because they'd apply to <module>, which they didn't apply to before","msgtype":"m.text"},"ts":1402591699000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and either they're crazy because they're like <script>, or they're crazy because they're specifically _not_ like <script>","msgtype":"m.text"},"ts":1402591722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you're damned either way if you introduce a new script-containing element","msgtype":"m.text"},"ts":1402591736000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just a bad idea and we should stay away from anything that results in multiple script-capable elements","msgtype":"m.text"},"ts":1402591754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(this would all have been much easier if the ES group had reached out before designing their module thing, to coordinate with us and figure out what was reasonable and what was not.)","msgtype":"m.text"},"ts":1402591785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you've still got a few months to get them to change their minds about things =)","msgtype":"m.text"},"ts":1402591835000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: hmm, refactoring those words from saying \"</script>\" to saying \"</script> or </module>, respectively\" doesn't seem like a radical CHANGE, just a stupid one","msgtype":"m.text"},"ts":1402592871000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: it's radical in that it radically changes how <module> is parsed, but if you're just arguing the semantics of how i phrased it, i'll concede :-)","msgtype":"m.text"},"ts":1402592907000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, would it add a huge amount of logic? not as far as I can see. would it give bizarrely different parse results in new and old browsers? hell yes.","msgtype":"m.text"},"ts":1402592913000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"bizarrely different parse results in new and old browsers\" seems \"radical\" to me :-)","msgtype":"m.text"},"ts":1402592937000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and \"crazy\" too :-)","msgtype":"m.text"},"ts":1402592945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, evil like <script> parsing should be kept strictly to legacy things","msgtype":"m.text"},"ts":1402592946000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: well, the *rules* aren't radically new, the *behaviour* is","msgtype":"m.text"},"ts":1402592966000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i don't understand the difference, but this seems like splitting hairs so i'll extricate myself from the conversation now :-P","msgtype":"m.text"},"ts":1402592990000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<script> isn't going to be legacy, though, however much the ES folk want it to be","msgtype":"m.text"},"ts":1402593002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we'll be using non-module scripts for decades","msgtype":"m.text"},"ts":1402593010000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, I mean, they shouldn't be encouraged to BREED","msgtype":"m.text"},"ts":1402593028000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"doesn't matter how much you encourage them","msgtype":"m.text"},"ts":1402593041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's legacy in the sense that crazy rules are a legacy","msgtype":"m.text"},"ts":1402593048000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh well sure","msgtype":"m.text"},"ts":1402593057000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not so much in the sense of \"expected to die at some point\"","msgtype":"m.text"},"ts":1402593088000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"kind of like that one argument to WinMain that's leftover from Win16","msgtype":"m.text"},"ts":1402593132000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hPrevInstance","msgtype":"m.text"},"ts":1402593141000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well the difference is people ignore hPrevInstance now","msgtype":"m.text"},"ts":1402593193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1402593201000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"whereas <script> is going to be actively used for decades","msgtype":"m.text"},"ts":1402593202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe that's got more bearing on the <!-- --> part","msgtype":"m.text"},"ts":1402593216000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway, I don't think hPrevInstance can possibly have a value in win32","msgtype":"m.text"},"ts":1402593250000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's always NULL, no?","msgtype":"m.text"},"ts":1402593283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, yeah, a non-0 value I mean","msgtype":"m.text"},"ts":1402593298000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"on account of win32 having per-process address spaces","msgtype":"m.text"},"ts":1402593353000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"should stop babbling","msgtype":"m.emote"},"ts":1402593420000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"can someone sanity check me?: in |An end tag whose tag name is \"form\"|, in the \"in body\" insertion mode, the \"Otherwise\" clause of step 2 of the first branch is redundant with step 1, right?","msgtype":"m.text"},"ts":1402594457000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Well it doesn't make any sense at least","msgtype":"m.text"},"ts":1402594598000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it's an otherwise on an infallible operation","msgtype":"m.text"},"ts":1402594622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402594626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll just remove that second sentence of step 2","msgtype":"m.text"},"ts":1402594633000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or, make a note like \"I am invincible!\"","msgtype":"m.text"},"ts":1402594729000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Ms2ger: What's this about custom DTDs and the CSSWG yesterday?","msgtype":"m.text"},"ts":1402594735000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"what does a DTD have to do with anything","msgtype":"m.text"},"ts":1402594750000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I thought a DTD was just a way to make your SGML editor do sensible autocompletion","msgtype":"m.text"},"ts":1402594770000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and your SGML parser tell you when you screwed up","msgtype":"m.text"},"ts":1402594785000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins_, see http://www.w3.org/Style/","msgtype":"m.text"},"ts":1402594849000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Speaking of, what things (if any) do you folks use to edit SGML and XML, respectively?)","msgtype":"m.text"},"ts":1402594896000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"emacs.","msgtype":"m.text"},"ts":1402594911000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no one actually edits sgml anymore :)","msgtype":"m.text"},"ts":1402594926000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"s/anymore//","msgtype":"m.text"},"ts":1402594942000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SamB: The <!-- --> thing in CSS isn't insane at all, luckily - they get parsed as tokens, and ignored at the top-level of the stylesheet.  No big deal.","msgtype":"m.text"},"ts":1402594973000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Ms2ger: I... I see.","msgtype":"m.text"},"ts":1402594994000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I feel like it's kind of a shame about SGML; maybe SGML would have gotten more love if the specs hadn't been locked up in the ISO ...","msgtype":"m.text"},"ts":1402594997000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"It's OK, once hober finishes his emacs HTML mode you won't need DTDs to enable syntax checking and autocomplete :p","msgtype":"m.text"},"ts":1402595002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I was actually wondering what modes ;-P","msgtype":"m.text"},"ts":1402595036000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SGML had two serious flaws, imho","msgtype":"m.text"},"ts":1402595049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"first, it was WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY more complicated than necessary","msgtype":"m.text"},"ts":1402595059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"second, it was WAAAAAY not powerful enough","msgtype":"m.text"},"ts":1402595067000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and I didn't ask about HTML precisely because of the lack of an adequate mode for actual HTML, rather than for it's fictioanl SGML forms","msgtype":"m.text"},"ts":1402595068000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: yeah, SGML declarations do seem kind of dopey","msgtype":"m.text"},"ts":1402595115000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there's, maybe, *one* good thing about them: they managed to retrofit SGML to allow a declaration for XML ...","msgtype":"m.text"},"ts":1402595161000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway use psgml and nxml/rng","msgtype":"m.text"},"ts":1402595216000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"XML has two serious flaws, imho","msgtype":"m.text"},"ts":1402595251000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah?","msgtype":"m.text"},"ts":1402595259000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"first, it was WAY more complicated than necessary","msgtype":"m.text"},"ts":1402595260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: :/","msgtype":"m.text"},"ts":1402595262000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"second, it was WAAAAAAAAY not powerful enough","msgtype":"m.text"},"ts":1402595266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: well, at least that's a lot less As in the first flaw","msgtype":"m.text"},"ts":1402595274000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yup :-)","msgtype":"m.text"},"ts":1402595284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, XML isn't *that* over-complicated.","msgtype":"m.text"},"ts":1402595286000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Just a good bit.","msgtype":"m.text"},"ts":1402595291000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Hixie: what are the extra As in the second flaw for?","msgtype":"m.text"},"ts":1402595307000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's less powerful than SGML","msgtype":"m.text"},"ts":1402595316000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"XML is weaker than SGML.","msgtype":"m.text"},"ts":1402595317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1402595321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No over lapping tag spans :(","msgtype":"m.text"},"ts":1402595330000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie: yes, well, isn't DTD almost counter to the whole XML idea anyway","msgtype":"m.text"},"ts":1402595345000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SGML had overlapping tags?","msgtype":"m.text"},"ts":1402595349000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Non-tree data structure?","msgtype":"m.text"},"ts":1402595355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"all I know of SGML I learned from James Clark's implementation ;-P","msgtype":"m.text"},"ts":1402595401000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well, maybe not quite, but I wouldn't know much about anything he didn't implement","msgtype":"m.text"},"ts":1402595420000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"if we restrict ourselves to tree structure use cases (which is a big restriction which we can come back to), XML is either too complicated because of all the DTD baggage, or not powerful enough because DTDs can barely describe the simplest of conformance requirements.","msgtype":"m.text"},"ts":1402595429000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man, the html parser spec has an inordinate number of negated conditions","msgtype":"m.text"},"ts":1402595496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i keep forgetting to negate them in my code","msgtype":"m.text"},"ts":1402595503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"leading to annoyingly hard-to-debug bugs","msgtype":"m.text"},"ts":1402595515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically I think we should just forget about DTD except *maybe* as a vehicle for defining those, er, shorthand things","msgtype":"m.text"},"ts":1402595521000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"RNG is much, much better","msgtype":"m.text"},"ts":1402595533000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(though maybe harder to explain)","msgtype":"m.text"},"ts":1402595547000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Entities are what DTDs get you that RNG still doesn't","msgtype":"m.text"},"ts":1402595550000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"that's the word!","msgtype":"m.text"},"ts":1402595560000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: You know, you are the person on the planet least likely to get sympathy there","msgtype":"m.text"},"ts":1402595566000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but entites introduce all sorts of nastyness","msgtype":"m.text"},"ts":1402595590000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"jgraham: :-)","msgtype":"m.text"},"ts":1402595598000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gavinc: yeah, the nastyness is why I said \"*maybe*\"","msgtype":"m.text"},"ts":1402595613000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"since what most people want is names for hard to remember unicode characters, and what you get is a complex include system","msgtype":"m.text"},"ts":1402595614000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"i've found a few bugs in the parser with this nutty project of mine","msgtype":"m.text"},"ts":1402595619000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i feel like i'm being productive","msgtype":"m.text"},"ts":1402595624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: then, you just need to figure out how to compile it back to English","msgtype":"m.text"},"ts":1402595652000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"unfortunately i'm not implementing the full parser","msgtype":"m.text"},"ts":1402595669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. i'm ignoring all the script execution stuff","msgtype":"m.text"},"ts":1402595676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"darn it, why do w3.org / html5.org have so much higher pagerank for this phrase anyway","msgtype":"m.text"},"ts":1402595705000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"which phrase?","msgtype":"m.text"},"ts":1402595719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"An end tag whose tag name is \"form\"","msgtype":"m.text"},"ts":1402595753000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"wow, yeah, that's sad","msgtype":"m.text"},"ts":1402595906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, jgraham is totally right about that being nonsense","msgtype":"m.text"},"ts":1402595955000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"if you fail to set the form element pointer, I think it's time to die to SIGSEGV","msgtype":"m.text"},"ts":1402595978000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"k. it's gone.","msgtype":"m.text"},"ts":1402595987000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=25503 - any chance we could have an efficient 'display-*' value for <br>?","msgtype":"m.text"},"ts":1402596855000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, need to take that back to the CSSWG.  Will do so.","msgtype":"m.text"},"ts":1402597682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1402597687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what makes a CSS value efficient?","msgtype":"m.text"},"ts":1402597710000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"see dbaron's comment in that bug","msgtype":"m.text"},"ts":1402597719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"What the actual fuck.\" <3 Mark Pilgrim","msgtype":"m.text"},"ts":1402597796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i wonder what he thinks would be better","msgtype":"m.text"},"ts":1402598238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"an @rule in CSS?","msgtype":"m.text"},"ts":1402598245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What's the context of that one?","msgtype":"m.text"},"ts":1402598282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Do you have any examples of multipe-documents-in-one-window-sharing-fonts besides Imports?  Imports are already kinda-sorta same document, right?","msgtype":"m.text"},"ts":1402598332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"blink-dev","msgtype":"m.text"},"ts":1402598420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does everyone agree that \"If there is no adjusted current node\" is equivalent to \"If the stack of open elements is empty\" ?","msgtype":"m.text"},"ts":1402598438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, why the heck did I get <br> mixed with <hr> ...","msgtype":"m.text"},"ts":1402598540000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"fragment case is a bit tricky to follow ... processing ...","msgtype":"m.text"},"ts":1402598610000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"also apparently \"fragment case\" is a technical term you didn't use here","msgtype":"m.text"},"ts":1402598647000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"can't follow where it goes from \"if there is a context element\" to just \"the context element\"","msgtype":"m.emote"},"ts":1402598743000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: I guess it does","msgtype":"m.text"},"ts":1402598798000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: what happened to adding caution tape around any mention of direction WRT stacks","msgtype":"m.text"},"ts":1402598885000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: file a bug if you're serious about that :-)","msgtype":"m.text"},"ts":1402599114000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(with concrete suggestions that don't make the spec even harder to read...)","msgtype":"m.text"},"ts":1402599123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, so no yellow tape then?","msgtype":"m.text"},"ts":1402599139000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"darn it","msgtype":"m.text"},"ts":1402599148000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'm happy to do it, i just don't know how exactly","msgtype":"m.text"},"ts":1402599157000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The annoying thing is that it's not a stack, obviously :)","msgtype":"m.text"},"ts":1402599275000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: oh","msgtype":"m.text"},"ts":1402599291000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1402599293000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's not just a magnetic stack or something?","msgtype":"m.text"},"ts":1402599308000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anti-gravity stack, maybe?","msgtype":"m.text"},"ts":1402599332000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"It admits random access","msgtype":"m.text"},"ts":1402599418000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, it's a stack where every now and then you just have to fiddle with it arbitrarily","msgtype":"m.text"},"ts":1402599481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"removing, swapping nodes around, all kinds of crazy stuff","msgtype":"m.text"},"ts":1402599489000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just imagine if the parser didn't have to swap nodes around","msgtype":"m.text"},"ts":1402599557000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"what if...","msgtype":"m.text"},"ts":1402599566000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"So, \"an array\"","msgtype":"m.text"},"ts":1402599711000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or a vector","msgtype":"m.text"},"ts":1402599715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"meh, I do stuff like that to stacks IRL all the time ;-P","msgtype":"m.text"},"ts":1402599805000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"though the most accessible item is at the TOP of the stack","msgtype":"m.text"},"ts":1402599816000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: it would be awesome","msgtype":"m.text"},"ts":1402599821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: (also, it would not be compatible with most of the web)","msgtype":"m.text"},"ts":1402599829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are we agreed that when the spec says \"reprocess the token\", it means to go through tree construction dispatcher again?","msgtype":"m.text"},"ts":1402599838000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hmm, the diagram in \"Overview of the parsing model\" has a green block obscuring part of it ...","msgtype":"m.text"},"ts":1402599931000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: I blame you guys for this!","msgtype":"m.text"},"ts":1402599948000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh wow, yeah","msgtype":"m.text"},"ts":1402600020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1402600021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: does HTML have a way to make boxes not overlap floats yet?","msgtype":"m.text"},"ts":1402600040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i remember mozilla implemented something to do this way back when","msgtype":"m.text"},"ts":1402600047000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as a hack","msgtype":"m.text"},"ts":1402600051000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean like a -moz- property or value?","msgtype":"m.text"},"ts":1402600111000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402600164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Only via BFC creation.","msgtype":"m.text"},"ts":1402600780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bfc?","msgtype":"m.text"},"ts":1402600787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All the methods of which have side-effects.","msgtype":"m.text"},"ts":1402600787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Block Formatting Context.","msgtype":"m.text"},"ts":1402600794000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402600797000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bumemr","msgtype":"m.text"},"ts":1402600802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"overflow: anything-but-visible is the most common way.","msgtype":"m.text"},"ts":1402600804000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's anything-but-visible?","msgtype":"m.text"},"ts":1402600896000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder how to fix this rendering issue","msgtype":"m.text"},"ts":1402600916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe just make the float a higher z-index for now","msgtype":"m.text"},"ts":1402600921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It's... what it sounds like?","msgtype":"m.text"},"ts":1402600991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what counts as 'visible'?","msgtype":"m.text"},"ts":1402601011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does it mean \"don't show a scroll bar if the bottom of this image is the only thing that overflows and the bottom of the image is fully transparent\", for instance?","msgtype":"m.text"},"ts":1402601034000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The \"visible\" keywords.  I'm being very literal.","msgtype":"m.text"},"ts":1402601049000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"keyword, sorry.","msgtype":"m.text"},"ts":1402601054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, not a specific keyword \"anything-but-visible\"","msgtype":"m.text"},"ts":1402601067000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402601068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hahaha, of course not","msgtype":"m.text"},"ts":1402601078000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sorry, i thought you were being more literal than you were :-)","msgtype":"m.text"},"ts":1402601084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's too silly even for CSS.","msgtype":"m.text"},"ts":1402601094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hey i dunno man, there's all kinds of new keywords in CSS these days that i've never heard of :-)","msgtype":"m.text"},"ts":1402601094000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"setting 'overflow:hidden' on every paragraph in the HTML spec seems like a bad call","msgtype":"m.text"},"ts":1402601120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"z-index seems bad too though","msgtype":"m.text"},"ts":1402601126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1402601129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i really just want a \"warp my block background around floats\" option","msgtype":"m.text"},"ts":1402601146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1402601151000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what would happen if you *did* write \"display: anything-but-visible\"?","msgtype":"m.text"},"ts":1402601177000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's not \"display: visible\"","msgtype":"m.text"},"ts":1402601182000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"er. or \"overflow:\", whatever","msgtype":"m.text"},"ts":1402601198000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it would get ignored","msgtype":"m.text"},"ts":1402601209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since it's not valid","msgtype":"m.text"},"ts":1402601210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"same as overflow: aiohfgoaiehjdzl;","msgtype":"m.text"},"ts":1402601214000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right.","msgtype":"m.text"},"ts":1402601218000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or alkfjalksjf: alfhjalksfj","msgtype":"m.text"},"ts":1402601221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, any idiot could tell that last one wouldn't do anything","msgtype":"m.text"},"ts":1402601256000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there being no \"alkfjalksjf\" property and all","msgtype":"m.text"},"ts":1402601305000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"are we agreed that \"Pop an element from the stack of open elements, and then keep popping more elements from the stack of open elements until\" implies that at least two elements will be popped?","msgtype":"m.text"},"ts":1402601414000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1402601435000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sounds like at least one","msgtype":"m.text"},"ts":1402601438000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What's the float thing you're trying to do?","msgtype":"m.text"},"ts":1402601439000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26079","msgtype":"m.text"},"ts":1402601467000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: me either, uness the \"until\" specifically refers to an *additional* element","msgtype":"m.text"},"ts":1402601481000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm... i guess","msgtype":"m.text"},"ts":1402601515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i should make that clearer then","msgtype":"m.text"},"ts":1402601519000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I've been looking through sections, but haven't fouind an example of such yet.","msgtype":"m.text"},"ts":1402601791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I'm also with the \"at least one\" interpretation.","msgtype":"m.text"},"ts":1402601811000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the link in that bug is to a section with an image","msgtype":"m.text"},"ts":1402601846000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd say \"pop elements from the stack of open elements until .... If this would pop less than two, pop two elements.\"","msgtype":"m.text"},"ts":1402601848000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, I don't see it.","msgtype":"m.text"},"ts":1402601882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"search for \"The input to the HTML parsing process consists of\"","msgtype":"m.text"},"ts":1402601941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and look to the right","msgtype":"m.text"},"ts":1402601944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's in 12.2.1 Overview of the parsing model","msgtype":"m.text"},"ts":1402601949000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Looks like that's not in the pointed-to section of the multipage. ^_^","msgtype":"m.text"},"ts":1402602010000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok, I see.","msgtype":"m.text"},"ts":1402602081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We put overflow:hidden on all .note/.example/etc in the CSSWG stylesheet.","msgtype":"m.text"},"ts":1402602091000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Precisely to fix this.","msgtype":"m.text"},"ts":1402602094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402602098000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think that would break all my fancy label things","msgtype":"m.text"},"ts":1402602110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since they overflow","msgtype":"m.text"},"ts":1402602113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, true.","msgtype":"m.text"},"ts":1402602118000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WELP","msgtype":"m.text"},"ts":1402602167000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hm?","msgtype":"m.text"},"ts":1402602200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"shouldn't it just be possible to make boxes extend to the right until they hit a float *or* hit the parent's edge?","msgtype":"m.text"},"ts":1402602201000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: It *should* be, yes.  But it's not.","msgtype":"m.text"},"ts":1402602224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"samb: it's non-trivial, but that's what i'd like. Actually what i'd like is that they wrap their backgrounds around.","msgtype":"m.text"},"ts":1402602227000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's even less trivial","msgtype":"m.text"},"ts":1402602233000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wrap their backgrounds around, you say?","msgtype":"m.text"},"ts":1402602249000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"We have a trial value (with a purposely-bad name) in the Sizing spec that does this, but it's underspecified, as it only addresses sizes, not the position-shifting that BFCs do.","msgtype":"m.text"},"ts":1402602271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds like you want to print it out, cut out the pieces, and then glue them together ;-P","msgtype":"m.text"},"ts":1402602274000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and wrap their borders, for bonus points","msgtype":"m.text"},"ts":1402602292000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what about position shifting would it need to address?","msgtype":"m.text"},"ts":1402602310000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Those all come as part of a package, Hixie.","msgtype":"m.text"},"ts":1402602314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even border-radius with border images? :-)","msgtype":"m.text"},"ts":1402602336000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: If you have a left-floated item next to a BFC, the BFC not only shrinks its width, but also shifts to the right to get out of the way.","msgtype":"m.text"},"ts":1402602336000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ouch","msgtype":"m.text"},"ts":1402602348000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: If your border images don't extend out of the border geometry, sure.","msgtype":"m.text"},"ts":1402602358000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"left floats FTL :-(","msgtype":"m.text"},"ts":1402602362000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Or if you're willing to add margin to address that.","msgtype":"m.text"},"ts":1402602365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Left floats the most common float.","msgtype":"m.text"},"ts":1402602371000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is it?","msgtype":"m.text"},"ts":1402602387000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: just so we're clear, i'm not talking about just resizing, i'm talking about wrapping around the float(s)","msgtype":"m.text"},"ts":1402602388000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't know what you mean, in that case.","msgtype":"m.text"},"ts":1402602398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which would mean the border now has multiple corners, some concave, some convex...","msgtype":"m.text"},"ts":1402602400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh!","msgtype":"m.text"},"ts":1402602403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1402602407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1402602411000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, yeah, that'd be even nicer","msgtype":"m.text"},"ts":1402602411000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's why it's worth bonus points","msgtype":"m.text"},"ts":1402602412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"many, many bonus points...","msgtype":"m.text"},"ts":1402602420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you'd need extra border- stuff to put special background on the concave corners","msgtype":"m.text"},"ts":1402602442000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well crap","msgtype":"m.text"},"ts":1402602465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the \"any other end tag\" step of the foreign parsing mode totally messes with all my optimisations","msgtype":"m.text"},"ts":1402602485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, if you wanted to do one of the silly raster-based box things like people used to do with <table>","msgtype":"m.text"},"ts":1402602493000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"If node's tag name, converted to ASCII lowercase, is the same as the tag name of the token\"!","msgtype":"m.text"},"ts":1402602499000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just match CSSWG's style for notes/examples/etc? They were put together by actual designers, and have gotten lots of compliments over the years we've used them.","msgtype":"m.text"},"ts":1402602510000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess i'd better keep multiple tag names around...","msgtype":"m.text"},"ts":1402602513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: shouldn't the node already have a lowercased name?","msgtype":"m.text"},"ts":1402602523000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: not in foreign content","msgtype":"m.text"},"ts":1402602530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"darn","msgtype":"m.text"},"ts":1402602533000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well then why does the close tag not have to match?","msgtype":"m.text"},"ts":1402602553000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"because if you write <svg><CLIPPATH></clippath> the two \"clippath\" tags have to match","msgtype":"m.text"},"ts":1402602598000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the element is actually <clipPath>","msgtype":"m.text"},"ts":1402602603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess i'll just store a lowercased tag name","msgtype":"m.text"},"ts":1402602615000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you only know the case because you looked it up in a table, it seems almost silly to store the proper-cased version in the tree node","msgtype":"m.text"},"ts":1402602687000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well the proper-cased version is what you need for everything but parsing","msgtype":"m.text"},"ts":1402602709000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... what exactly do you use the tree for in your implementation?","msgtype":"m.text"},"ts":1402602745000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"starts imagining strings with memoized lowercasing","msgtype":"m.emote"},"ts":1402602801000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, do/can they have interning in JS?","msgtype":"m.text"},"ts":1402602834000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"well e.g. a browser would need to know the right case to distinguish a <clipPath> element from a <clippath> element (the latter of which does nothing, the former is part of SVG)","msgtype":"m.text"},"ts":1402602854000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or do they have those silly mutable strings like elisp has","msgtype":"m.text"},"ts":1402602856000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: certainly","msgtype":"m.text"},"ts":1402602869000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: but, uh, can't they just inherit the names from the traits object?","msgtype":"m.text"},"ts":1402603023000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"the what now?","msgtype":"m.text"},"ts":1402603036000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think they mistakenly call them \"prototypes\" in JS?","msgtype":"m.text"},"ts":1402603053000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"darn, I forgot the ;-P","msgtype":"m.text"},"ts":1402603077000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"who's using JS?","msgtype":"m.text"},"ts":1402603081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1402603087000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"hmm, are you implying that there's going to be a browser that supports embedded SVG but doesn't represent its DOM using JS objects?","msgtype":"m.text"},"ts":1402603131000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"no browser represents its DOM using JS objects","msgtype":"m.text"},"ts":1402603167000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be a performance disaster.","msgtype":"m.text"},"ts":1402603179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We inch closer to that every day.","msgtype":"m.text"},"ts":1402603194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dom.js is a project we keep shooting for.","msgtype":"m.text"},"ts":1402603208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought they just used magic pixie dust to make the fixed-layout stuff work","msgtype":"m.text"},"ts":1402603229000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"so the C++ code can keep pretending it's not a JS object","msgtype":"m.text"},"ts":1402603248000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I guess JS doesn't have a way to pre-specify \"slots\" to be used for a certain class (not OO class, just the regular meaning) of objects?","msgtype":"m.text"},"ts":1402603328000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"this is all academic in this instance, since my parser is not in JS","msgtype":"m.text"},"ts":1402603380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"point","msgtype":"m.text"},"ts":1402603832000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"really what I meant is: why would you have to store the name in each node, rather than in a single thing that describes all elements of that name?","msgtype":"m.text"},"ts":1402603898000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"except for elements you've never heard of","msgtype":"m.text"},"ts":1402603925000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Ah, blink: https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/nzRY-h_-_ig","msgtype":"m.text"},"ts":1402603988000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: ... but, do you think you're the only one who'se allowed to talk \"as if\" the implementation must the JS DOM to represent the document?","msgtype":"m.text"},"ts":1402603993000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"+use","msgtype":"m.text"},"ts":1402603998000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"even while not actually meaning that","msgtype":"m.text"},"ts":1402604005000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(Yes, I went there: I just specified the \"as if\" rule backward.)","msgtype":"m.text"},"ts":1402604055000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"specifies as if SamB made sense","msgtype":"m.emote"},"ts":1402604077000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sorry :-)","msgtype":"m.text"},"ts":1402604084000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"will go back to easy things, like maintaining GDB packaging","msgtype":"m.emote"},"ts":1402604095000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: well i'm only storing a pointer, obviously","msgtype":"m.text"},"ts":1402604308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"points at Hixie ","msgtype":"m.emote"},"ts":1402604321000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: what language *are* you using again?","msgtype":"m.text"},"ts":1402604350000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"objectpascal, obvs.","msgtype":"m.text"},"ts":1402604360000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm.","msgtype":"m.text"},"ts":1402604367000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie's favorite language.","msgtype":"m.text"},"ts":1402604386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, I imagine there's a reason it has such a happy-seeming contingent of user despite being virtually unmarketed for ... a long time now?","msgtype":"m.text"},"ts":1402604462000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"*users","msgtype":"m.text"},"ts":1402604480000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1402604533000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Need to get 17.1 MB of archives.","msgtype":"m.text"},"ts":1402604544000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"After this operation, 161 MB of additional disk space will be used.","msgtype":"m.text"},"ts":1402604544000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Uncompressed?","msgtype":"m.text"},"ts":1402604552000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess they ship sources for the libs?","msgtype":"m.text"},"ts":1402604572000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's for fpc","msgtype":"m.text"},"ts":1402604581000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: Shrug, I'm a happy Common Lisper. We all have our kinks.","msgtype":"m.text"},"ts":1402604660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think i'd be a C++ head if i hadn't happened to start with pascal","msgtype":"m.text"},"ts":1402604683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're very similar, at the end of the day","msgtype":"m.text"},"ts":1402604690000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Common Lisp always leaves me overloaded trying to figure out how to go about my business :-(","msgtype":"m.text"},"ts":1402604698000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"too many choices","msgtype":"m.text"},"ts":1402604701000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"in terms of what they're good at and their performance characteristics","msgtype":"m.text"},"ts":1402604705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but having started in pascal and then later delphi, i find C++ to be really ugly","msgtype":"m.text"},"ts":1402604725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"There's an infinity of ways to do it, and that's not counting readtable hacking.\"","msgtype":"m.text"},"ts":1402604730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think everyone finds C++ ugnly","msgtype":"m.text"},"ts":1402604755000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ugly","msgtype":"m.text"},"ts":1402604756000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think Object Pascal has some important advantages; optimizations implemented in the compiler not being one of them.  Unless it makes the compiler run way faster, which it might ;-)","msgtype":"m.text"},"ts":1402604764000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Even the word is ugnly.","msgtype":"m.text"},"ts":1402604765000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thank you, TabAtkins","msgtype":"m.text"},"ts":1402604775000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the important advantages can basically be summarized as \"not being fugly\" and \"having a real module system\"","msgtype":"m.text"},"ts":1402604810000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Modules are pretty big","msgtype":"m.text"},"ts":1402604833000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and C++ code wants to recompile at the drop of a hat","msgtype":"m.text"},"ts":1402604868000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"C doesn't have so much trouble there because C actually supports encapsulation","msgtype":"m.text"},"ts":1402604913000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"idly wonders if Hixie uses the IDE or Emacs to edit his Object Pascal","msgtype":"m.emote"},"ts":1402605265000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"emacs","msgtype":"m.text"},"ts":1402605288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i couldn't get the ide to work","msgtype":"m.text"},"ts":1402605294000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(didn't try very hard, mind you)","msgtype":"m.text"},"ts":1402605301000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: pascal as a language is designed to compile really freaking fast, especially when you only change one file (unit)","msgtype":"m.text"},"ts":1402605342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having interface files tends to help with that :-)","msgtype":"m.text"},"ts":1402605361000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: but yeah, the freepascal compiler's optimisations aren't the world's leading optimisations","msgtype":"m.text"},"ts":1402605364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least I know I've seen GHC tell me \"oh whoops don't need to recompile that module\" lots of times","msgtype":"m.text"},"ts":1402605379000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: it seems kind of traditional ;-)","msgtype":"m.text"},"ts":1402605393000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I mean have you seen the code that TP used to emit?","msgtype":"m.text"},"ts":1402605422000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"granted, I guess part of that is that the registers are even *less* flexible in 16-bit mode","msgtype":"m.text"},"ts":1402605444000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"at the time i used TP, i wasn't particularly knowledgable about optimisations","msgtype":"m.text"},"ts":1402605626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, when i was a kid i thought that short-circuit boolean evaluation was Hot Stuff...","msgtype":"m.text"},"ts":1402605650000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, oops.","msgtype":"m.text"},"ts":1402605820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't notice that \"push onto the list of active formatting elements\" was non-trivial.","msgtype":"m.text"},"ts":1402605829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, well, see, I was trying to decompile ZZT by hand","msgtype":"m.text"},"ts":1402605892000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"using a slightly different version of TP/BP","msgtype":"m.text"},"ts":1402605907000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"in modern times","msgtype":"m.text"},"ts":1402605922000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk, firefox and chrome behave differently WRT the same-origin policy when talking to file uris (with the default security.fileuri.origin_policy) --- which behaviour is actually correct? it seems to me that gecko is doing the wrong thing here, but it's not super clear","msgtype":"m.text"},"ts":1402605943000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: what if you paint on a <canvas> from another document?","msgtype":"m.text"},"ts":1402605949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but this was before I learned how restricted the registers are in 16-bit mode","msgtype":"m.text"},"ts":1402605959000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: I don't understand what you mean.","msgtype":"m.text"},"ts":1402605966000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: file URLs are not standardized","msgtype":"m.text"},"ts":1402605967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1402605977000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: from document create another document, create an element in that document that's named canvas","msgtype":"m.text"},"ts":1402606000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, it's hard to figure out how to deal with file:// URLs and same-origin stuff","msgtype":"m.text"},"ts":1402606009000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"because there's no obvious \"origin\" boundaries in a filesystem","msgtype":"m.text"},"ts":1402606032000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: I'd suppose that the \"context\" for the drawing op is the document that is executing the script?","msgtype":"m.text"},"ts":1402606047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That's underdefined right now.)","msgtype":"m.text"},"ts":1402606055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think that's why in blink-land it's always a cross-origin request, and is only allowed depending on how the request is made","msgtype":"m.text"},"ts":1402606071000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: yeah not sure, would have to test","msgtype":"m.text"},"ts":1402606084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you sure don't want to let things set their origin to \"file:///\" (if that means \"/\" in your browser on your OS)","msgtype":"m.text"},"ts":1402606085000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"origin is not a string people","msgtype":"m.text"},"ts":1402606105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, yeah, yeah","msgtype":"m.text"},"ts":1402606116000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you know what he means though =)","msgtype":"m.text"},"ts":1402606125000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"in any event, I'm not sure standardizing file is all that crucial","msgtype":"m.text"},"ts":1402606156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the equivalent of \"C:\\\\\" is hardly better","msgtype":"m.text"},"ts":1402606160000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"making sure http to file fails is important, and Mixed Content takes care of that","msgtype":"m.text"},"ts":1402606171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and getting parsing of URLs starting with file: is somewhat important, though getting people to agree on that is harder","msgtype":"m.text"},"ts":1402606197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be nice if some browser would come along with a good way to set up origins though","msgtype":"m.text"},"ts":1402606208000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"for file://","msgtype":"m.text"},"ts":1402606222000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"why, file != web, it's just legacy support","msgtype":"m.text"},"ts":1402606241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe a file you could plop down that would say \"you can count this as an origin\"?","msgtype":"m.text"},"ts":1402606244000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"like computers supporting floppy drives","msgtype":"m.text"},"ts":1402606251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, nn","msgtype":"m.text"},"ts":1402606263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it'd simplify things for locally-installed HTML documentation","msgtype":"m.text"},"ts":1402606266000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"say, if you built some racket docs locally","msgtype":"m.text"},"ts":1402606297000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but why would you want to do that when you could push the docs to drive.google.com or whatever apple's thing is called","msgtype":"m.text"},"ts":1402606376000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: easier to just turn off the damn protection ...","msgtype":"m.text"},"ts":1402606483000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it's not a serious response =) but I guess remote storage is one reason why it's less of a thing","msgtype":"m.text"},"ts":1402606545000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or could be, at any rate.","msgtype":"m.text"},"ts":1402606567000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't suppose I can get some decent line-wrap markers to go with my \"white-space: pre-wrap\"?","msgtype":"m.text"},"ts":1402608987000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Nope.","msgtype":"m.text"},"ts":1402609012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not without JS, that is.","msgtype":"m.text"},"ts":1402609015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"blink-dev O_O","msgtype":"m.text"},"ts":1402609037000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so emacs can do it for probably the last century, and browsers *still* can't do it?","msgtype":"m.text"},"ts":1402609276000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic: Hahaha, wtf are those people doing.","msgtype":"m.text"},"ts":1402609450000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: s/wtf/wtaf/","msgtype":"m.text"},"ts":1402610672000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: Indeed.","msgtype":"m.text"},"ts":1402611285000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, er, I will certainly not want hyphenation ...","msgtype":"m.text"},"ts":1402611384000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"figures that i would fail on the very first test of tricky01.dat...","msgtype":"m.text"},"ts":1402614241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with an internal error deep in the guts of my code, not even in the parser code...","msgtype":"m.text"},"ts":1402614258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mutters something about \"display: segment-break;\" ...","msgtype":"m.emote"},"ts":1402616411000,"senderName":"SamB","senderId":"SamB@irc"}
]