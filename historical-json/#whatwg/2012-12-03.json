[
{"content":{"body":"annevk: planning on doing registry stuff in january","msgtype":"m.text"},"ts":1354493213000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nessy: yt?","msgtype":"m.text"},"ts":1354493214000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nm, gotta go","msgtype":"m.text"},"ts":1354493285000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1354493286000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this morning my 8-year-old son asked me what's the difference between XHTML and HTML, and why don't people use XHTML","msgtype":"m.text"},"ts":1354507709000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Someone needs to write a book of Web standards fairy-tales for children","msgtype":"m.text"},"ts":1354507774000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, that's awesome.","msgtype":"m.text"},"ts":1354508740000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"feel free to childrens-bookize this blog post: http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5","msgtype":"m.text"},"ts":1354508790000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"roc: if he starts asking about http-range-14, that'd be a time to worry","msgtype":"m.text"},"ts":1354508992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nessy: We had a discussion on TPAC about the TR page. The room agreed that the WG should be allowed to put whatever there.","msgtype":"m.text"},"ts":1354523659000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"nessy: So, e.g. for IndexedDB the last year, that would be its editors draft. Because reading the WD version was utterly bogus (lots of old stuff)","msgtype":"m.text"},"ts":1354523694000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Also, as I said yesterday, I coded directly to spec, and ended up having to patch in order for it to work in contemporary Chrome and IE. -- So that caniuse-integration, and hopefully at attribute-method level would be very useful for webdevs.","msgtype":"m.text"},"ts":1354523759000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I guess that's why webdevs doesn't really use the spec. I had to do extra work in the end because of it :P","msgtype":"m.text"},"ts":1354523777000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"(Well, worked in Opera, -- but guess that's because we updated dom level 3 events not too long ago.","msgtype":"m.text"},"ts":1354523831000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"wow i didn't know Hixie used an *SVG* repository to edit the spec. https://github.com/w3c/html#how-the-branches-fit-together","msgtype":"m.text"},"ts":1354526596000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why isn’t that chart itself SVG?","msgtype":"m.text"},"ts":1354526770000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tabatkins: was concerned by your statement http://krijnhoetmer.nl/irc-logs/whatwg/20121201#l-144 so have asked HTML WG chairs if it is correct http://lists.w3.org/Archives/Public/www-archive/2012Dec/0002.html","msgtype":"m.text"},"ts":1354529210000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: hi. does http://www.paciellogroup.com/blog/2012/04/html5-accessibility-chops-real-world-aria-landmark-use/ contain your latest findings on role=main usage?","msgtype":"m.text"},"ts":1354529273000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or is there something more recent I should be reading?","msgtype":"m.text"},"ts":1354529286000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"tabatkins: I am on one of the lists as  edit a few specs in the html wg, I have not noticed any decisions on that list other than administrative ones","msgtype":"m.text"},"ts":1354529301000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"hsivonen: no thats the latest","msgtype":"m.text"},"ts":1354529334000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"I was not aware of those treehouse lists before the meme","msgtype":"m.text"},"ts":1354529336000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Stevef: thanks","msgtype":"m.text"},"ts":1354529338000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Stevef: the real context is http://krijnhoetmer.nl/irc-logs/whatwg/20121130#l-1012","msgtype":"m.text"},"ts":1354529343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: SVG can do anything","msgtype":"m.text"},"ts":1354529409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: dude, mention the feature","msgtype":"m.text"},"ts":1354529444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm on one of the lists too but didn't reflect over its secretness","msgtype":"m.text"},"ts":1354529567000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: OK, well that statement is similar, I thought that the way it worked is/was editors are free to make changes to the specs that are interop bug related or editorial. and the wg is notified of these, anything controversial such as addition of new features or significant chnages to current spec are documented by the editors and not added until wg has agreed.","msgtype":"m.text"},"ts":1354529600000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"but I could be wrong...","msgtype":"m.text"},"ts":1354529712000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: if you don't think there's a lot of private stuff going on around the HTML WG and lobbying and such you're unfortunately misled; fortunately none of it seems to have much of an effect in practice though","msgtype":"m.text"},"ts":1354529720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or fortunately, I don't really care anymore what they're up to","msgtype":"m.text"},"ts":1354529738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what i recently have realised in the last week is there is a lot of private stuff going on in HTML standardization full stop","msgtype":"m.text"},"ts":1354529796000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"well I do, but I've given up","msgtype":"m.text"},"ts":1354529797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I don't think that the HTML WG is any more or less prone to it","msgtype":"m.text"},"ts":1354529845000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"annevk: OH THE SUSPENSE. I was actually just not happy noone commented, now you have, so I'm happy. All is well again.","msgtype":"m.text"},"ts":1354529905000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: no it's not, the curious have no answers!","msgtype":"m.text"},"ts":1354529925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I have had a glimpse of late into a world of backchannels I naively did not know existed","msgtype":"m.text"},"ts":1354529927000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"annevk: Or SimonSapin actually did, but I had forgot when I woke up this morning.","msgtype":"m.text"},"ts":1354529935000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"annevk: I'm scared of being flamed for obviously not knowing that \"noone else had implemented that\". :P","msgtype":"m.text"},"ts":1354529961000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"annevk: Or for \"yeah, it's in the spec but you shouldn't use that you stupid!!!11\"","msgtype":"m.text"},"ts":1354529978000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: sorry I lost context","msgtype":"m.text"},"ts":1354529979000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"odinho: instead you'll be herrassed for not telling!","msgtype":"m.text"},"ts":1354529988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's a tradeoff... ;-)","msgtype":"m.text"},"ts":1354529999000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: what is this about?","msgtype":"m.text"},"ts":1354530051000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Stevef: I'm guessing you're talking about <main>, since there's been a lot of that lately, but it would help my understanding if you were more concrete","msgtype":"m.text"},"ts":1354530104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ohwell, it's only this small keyboardEvent.key.  http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#events-KeyboardEvent-key","msgtype":"m.text"},"ts":1354530118000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: ah, yeah, that's not implemented :)","msgtype":"m.text"},"ts":1354530137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: also, keyboard events are a mess","msgtype":"m.text"},"ts":1354530145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I liked it. e.key == \"Enter\",   e.key == \"Down\"","msgtype":"m.text"},"ts":1354530165000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I was happy.","msgtype":"m.text"},"ts":1354530167000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"But then, TADA- does not work when my friend at my hackspace tried it. And imma like, I haven't yet tested other places than Opera *embarrasedface* :P","msgtype":"m.text"},"ts":1354530229000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"annevk: yeah 'remember the <main>'","msgtype":"m.text"},"ts":1354530257000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: so what backchannel was used there?","msgtype":"m.text"},"ts":1354530294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thought Hixie rejected it on whatwg⊙wo","msgtype":"m.emote"},"ts":1354530327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wasn't saying that was a backchannel, just responding to you saying guessist about <main>","msgtype":"m.text"},"ts":1354530350000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"found it amusing","msgtype":"m.text"},"ts":1354530371000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"SimonSapin: Oh, I'm Velmont at home... :P That's why you are loosing context.","msgtype":"m.text"},"ts":1354530397000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"is getting more confused","msgtype":"m.emote"},"ts":1354530427000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"odinho: if you’re talking about DOM3 events, I’m not the one who commented on it","msgtype":"m.text"},"ts":1354530457000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: will write a post about my experiences of late once the dust settles","msgtype":"m.text"},"ts":1354530467000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"SimonSapin: You did. I have logs, y'know ;-)","msgtype":"m.text"},"ts":1354530489000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Stevef: Maybe you were talking about WAI then? They do indeed a lot of stuff in private...","msgtype":"m.text"},"ts":1354530494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: prove it :p","msgtype":"m.text"},"ts":1354530508000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: http://krijnhoetmer.nl/irc-logs/whatwg/20121202#l-355","msgtype":"m.text"},"ts":1354530532000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"annevk: has nothing to do with WAI, they have not been involved","msgtype":"m.text"},"ts":1354530538000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: The alluding that there's a problem somewhere, but not telling what it is, is kind of annoying. I wish you had written that post first.","msgtype":"m.text"},"ts":1354530594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: oh, that. I had no idea what the actual issues was about, just joking about standards guaranteeing interop","msgtype":"m.text"},"ts":1354530614000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: well I am sorry for that, but was just riffing on the discussion","msgtype":"m.text"},"ts":1354530670000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"SimonSapin: That's commenting enough for me ;]","msgtype":"m.text"},"ts":1354530723000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Hixie: maybe add a check for \"<!DOCTYPE html> ...\" in live dom viewer's filetestbug()?","msgtype":"m.text"},"ts":1354531039000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"haha, just got a bug report on ReSpec for a spec produced using Anolis :)","msgtype":"m.text"},"ts":1354531410000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"does anyone have a list at the top of their heads about what https://www.w3.org/Bugs/Public/show_bug.cgi?id=18460 needs to handle?","msgtype":"m.text"},"ts":1354531439000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin: pointer?","msgtype":"m.text"},"ts":1354531454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you don't want to know, it's the XHR spec","msgtype":"m.text"},"ts":1354531479000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the problem is that when served from https it's linking to a style sheet in http","msgtype":"m.text"},"ts":1354531495000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"which is blocked by a bunch of browsers, naturally","msgtype":"m.text"},"ts":1354531506000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"not sure that's natural actually","msgtype":"m.text"},"ts":1354531539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess Anolis could dynamically select the matching scheme when that happen","msgtype":"m.text"},"ts":1354531541000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh, wait, no it can't!","msgtype":"m.text"},"ts":1354531547000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and you could just use a scheme-relative URL","msgtype":"m.text"},"ts":1354531573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, but except that doesn't work great with file:","msgtype":"m.text"},"ts":1354531601000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'd still like to see this though, browsers block cross-scheme style sheet loads?","msgtype":"m.text"},"ts":1354531649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's not defined anywhere I think","msgtype":"m.text"},"ts":1354531659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: void elements; namespaced elements; elements without namespace; CDATA conversion (unless we get rid of that); <pre>\\n and such","msgtype":"m.text"},"ts":1354531789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: same stuff as innerHTML basically?","msgtype":"m.text"},"ts":1354531802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do you mean with CDATA conversion?","msgtype":"m.text"},"ts":1354531865000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"turn it into text?","msgtype":"m.text"},"ts":1354532081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CDATA sections?","msgtype":"m.text"},"ts":1354532125000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, what else is there?","msgtype":"m.text"},"ts":1354532177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CDATA elements, though i guess they're called RAWDATA now","msgtype":"m.text"},"ts":1354532372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I’ve seen browsers not blocking loading of cross-scheme stuff, but showing the page as \"insecure\"","msgtype":"m.text"},"ts":1354532391000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: right","msgtype":"m.text"},"ts":1354532400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, look at https://dvcs.w3.org/hg/xhr/raw-file/988b577dec23/Overview.html in Chrome","msgtype":"m.text"},"ts":1354532401000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I believe IE blocks that too","msgtype":"m.text"},"ts":1354532408000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"indeed I'm not aware of it being defined","msgtype":"m.text"},"ts":1354532431000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"maybe IE gives some form of insecure prompt, not sure","msgtype":"m.text"},"ts":1354532465000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"prompting has got to be the worst decision you can make there though","msgtype":"m.text"},"ts":1354532478000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"either allow it or don't, but don't ask the user","msgtype":"m.text"},"ts":1354532488000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1354532536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Chrome blocks cross-scheme style sheets but allows cross-scheme XMLHttpRequest fetching?","msgtype":"m.text"},"ts":1354532550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what the rationale for that is","msgtype":"m.text"},"ts":1354532596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rationale? in a browser?","msgtype":"m.text"},"ts":1354532646000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1354532771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they use jQuery in the XHR spec now? that's so funny","msgtype":"m.text"},"ts":1354532816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XHR is too hard for the editors of XHR, better use $.ajax","msgtype":"m.text"},"ts":1354532853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, Julian actually wrote $.ajax so I don't think he finds XHR too hard","msgtype":"m.text"},"ts":1354533413000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"are the W3C lists slower these days?","msgtype":"m.text"},"ts":1354533670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what the fuck","msgtype":"m.text"},"ts":1354534674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gmail complaints my login period expires in the middle of me writing a long email","msgtype":"m.text"},"ts":1354534693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I login in a separate window","msgtype":"m.text"},"ts":1354534697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then my email gets trashed","msgtype":"m.text"},"ts":1354534705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, it's in drafts","msgtype":"m.text"},"ts":1354534719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"close call","msgtype":"m.text"},"ts":1354534726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the fact that https://lists.w3.org/Archives/Team/team-html-chairs/ returns a 403 and https://lists.w3.org/Archives/Team/team-html-chairs2/ returns a 404 should tell people enough","msgtype":"m.text"},"ts":1354543280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems whoever created the meme made a typo in the other list","msgtype":"m.text"},"ts":1354543321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's actually https://lists.w3.org/Archives/Team/team-html-editors/","msgtype":"m.text"},"ts":1354543325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't have permissions to view https://lists.w3.org/Archives/Team/team-html-editors/ archive...","msgtype":"m.text"},"ts":1354543469000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: only the W3C Team does","msgtype":"m.text"},"ts":1354543486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can someone enlighten me on the sudden surge of interest in these two lists?","msgtype":"m.text"},"ts":1354543491000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"even though I am subscribed","msgtype":"m.text"},"ts":1354543492000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"darobin: its where the decisions are made","msgtype":"m.text"},"ts":1354543526000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"yes, by the brain slugs","msgtype":"m.text"},"ts":1354543541000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"bastard brain slugs!","msgtype":"m.text"},"ts":1354543561000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I thought WHATWG made the decisions?","msgtype":"m.text"},"ts":1354543575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where are your brain slugs?","msgtype":"m.text"},"ts":1354543585000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Anyway, I was just trying to point out how you could easily figure out if a list existed or not","msgtype":"m.text"},"ts":1354543601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"luckily I have all the decsions from https://lists.w3.org/Archives/Team/team-html-editors/ archived in gmail","msgtype":"m.text"},"ts":1354543610000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"I don't really have a stake in this game, other than enjoying the delicious memes","msgtype":"m.text"},"ts":1354543623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Stevef: better register w3cleaks.org","msgtype":"m.text"},"ts":1354543648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and unleash a whole lot of broing on the world, why waste anymore of peoples time","msgtype":"m.text"},"ts":1354543710000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"boring","msgtype":"m.text"},"ts":1354543717000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"but maybe 'broing' too","msgtype":"m.text"},"ts":1354543742000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"I have seen a bit of broing from darobin on the editors list for sure","msgtype":"m.text"},"ts":1354543787000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"OH GOD WHEN YOU HAVE MULTIPLE EDITORS AND CHAIRS THEY MIGHT COMMUNICATE AMONG THEMSELVES INSTEAD OF IN THEIR HEAD.","msgtype":"m.text"},"ts":1354543799000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"</sarcasm>","msgtype":"m.text"},"ts":1354543806000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Basically, it seems inevitable that they'll have some means to communicate among themselves.","msgtype":"m.text"},"ts":1354543824000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, sure, but do we get to read along? :)","msgtype":"m.text"},"ts":1354543837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: As much as we do read along inside Hixie's head, seemingly.","msgtype":"m.text"},"ts":1354543865000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i ahven't seen anything vaguely resembling a 'decision' made on the editors list, but was sorry to hear about darobins rash","msgtype":"m.text"},"ts":1354543972000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"gsnedders: Hixie's changes to the spec can almost always be derived from a public email and or bug report","msgtype":"m.text"},"ts":1354543978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: aren't a;;chnages to the html5 specs now available in git commits?","msgtype":"m.text"},"ts":1354544016000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"or am i missing somehting?","msgtype":"m.text"},"ts":1354544029000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: public commits != rationale","msgtype":"m.text"},"ts":1354544036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You want to be able to figure out why changes are made (and others not) in order to properly review them","msgtype":"m.text"},"ts":1354544093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well silvia emails the html wg list regularly on chnanges made or not made","msgtype":"m.text"},"ts":1354544137000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Right, lists of changes made. Not rationale.","msgtype":"m.text"},"ts":1354544209000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The whole thing that led to this was Hixie not being able to figure out if the HTML editors made a mistake in not merging a WHATWG edit or if they had a reason for doing so","msgtype":"m.text"},"ts":1354544273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if it was due to anything other than a mistake it will be documented publicly, editorial changes and interop chnages are added pretty much without question i.e. hixies rationale is the reason","msgtype":"m.text"},"ts":1354544380000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: is there a public list of rejected changes then?","msgtype":"m.text"},"ts":1354544422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"silvia details what has not been merged in her emails for example http://lists.w3.org/Archives/Public/public-html/2012Nov/0154.html","msgtype":"m.text"},"ts":1354544519000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"gsnedders++ # funny","msgtype":"m.text"},"ts":1354544537000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I don't really have any clue what the XHR editors are doing either, other than \"pursuing convergence\". A lot of the copy & pasting that is occurring these days strikes me as amateur hour and not really a viable strategy.","msgtype":"m.text"},"ts":1354544538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and yes, I do do a lot of broing there","msgtype":"m.text"},"ts":1354544544000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: put very simply, there is no decision about what commits go in that's made on the editors' list","msgtype":"m.text"},"ts":1354544590000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I am sure if things are clear enough for anybody that needs to know, that the editors will seek to provide all info in amanner that is public and understandable, no conspiracy needed","msgtype":"m.text"},"ts":1354544596000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"in fact, not much in the way of decisions apart from stuff like \"hey, you folks okay if I move that spec-generating file over there?\"","msgtype":"m.text"},"ts":1354544617000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I read each of silvias commit emails and respond to them (usually), I appear to be the only one that shows any interest...","msgtype":"m.text"},"ts":1354544669000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"I read silvia's emails but it's not impossible that I could miss stuff here and there","msgtype":"m.text"},"ts":1354544690000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"the point is: the commits that are merged are merged at the decision of whoever merges them","msgtype":"m.text"},"ts":1354544709000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: I is so wit.","msgtype":"m.text"},"ts":1354544713000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't think there's much conspiracy, just a lack of insight into what is going on. Whether those lists are Team-only or world readable probably would not change much either way.","msgtype":"m.text"},"ts":1354544719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: mucho wit!","msgtype":"m.text"},"ts":1354544723000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Although for the Chairs list that might be different.","msgtype":"m.text"},"ts":1354544734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no matter what the access control you still can't read what's in people's brains (I think)","msgtype":"m.text"},"ts":1354544755000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"unless you're a brain slug","msgtype":"m.text"},"ts":1354544761000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: only the chairs and illuminati know","msgtype":"m.text"},"ts":1354544765000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"the chairs' list is much the same...","msgtype":"m.text"},"ts":1354544790000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: but it's not about that...","msgtype":"m.text"},"ts":1354544794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there are two other things that it can be about: a better paper trail, or transparency everywhere","msgtype":"m.text"},"ts":1354544838000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"which?","msgtype":"m.text"},"ts":1354544840000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I like both of those? :-)","msgtype":"m.text"},"ts":1354544867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1354544992000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"things can probably be improved, but here's the breakdown for each","msgtype":"m.text"},"ts":1354545004000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"re the paper trail, everything that gets merged is listed as such","msgtype":"m.text"},"ts":1354545014000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if there is no rationale, the rationale by default is that it's editorial or assumed consensual","msgtype":"m.text"},"ts":1354545034000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if it wasn't, then there was a discussion on public-html","msgtype":"m.text"},"ts":1354545045000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess those things could possibly be explained better, but that's the gist of it","msgtype":"m.text"},"ts":1354545061000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"re transparency, those lists are basically replacements for cc lists","msgtype":"m.text"},"ts":1354545090000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"they're not decision centres","msgtype":"m.text"},"ts":1354545095000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"can we ask anyone inolved in the development of HTML to have all there standards work related email publicly archived, also their texts, conversations, gestures, and thoughts?","msgtype":"m.text"},"ts":1354545120000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1354545145000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Everything except my identity","msgtype":"m.text"},"ts":1354545153000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Stevef: sure we can, but as far as I know anything that matters is already public","msgtype":"m.text"},"ts":1354545160000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"i know who you are you are Ms2ger","msgtype":"m.text"},"ts":1354545181000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"if you see a decision being made on team-* then that's a bug","msgtype":"m.text"},"ts":1354545184000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Oshi-","msgtype":"m.text"},"ts":1354545187000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the only things that resemble decisions are about bikeshedding stuff","msgtype":"m.text"},"ts":1354545200000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin, so I wonder, why does it need to be team-*?","msgtype":"m.text"},"ts":1354545212000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darobin: and the chair decisions?","msgtype":"m.text"},"ts":1354545220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and frankly, I would think it wonderful if all mailing lists had a separate hidden place for bikeshedding","msgtype":"m.text"},"ts":1354545227000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: before they become public","msgtype":"m.text"},"ts":1354545228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: \"if you see a decision being made on team-* then that's a bug\" I have not, but others claim they are","msgtype":"m.text"},"ts":1354545244000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: \"others\"?","msgtype":"m.text"},"ts":1354545254000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well hixie and tab for example","msgtype":"m.text"},"ts":1354545284000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Ms2ger: it makes it possible for us to discuss things like your identity without revealing it publicly","msgtype":"m.text"},"ts":1354545303000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"which started this conversation","msgtype":"m.text"},"ts":1354545312000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: so you're saying that people with no access to that list are stating that there's shady stuff going on there?","msgtype":"m.text"},"ts":1354545324000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1354545334000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"that's a lot of hooplah over a rumour....","msgtype":"m.text"},"ts":1354545337000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I guess you don't see the issue","msgtype":"m.text"},"ts":1354545390000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I mean, I could equally talk about the decisions made on private-whatwg⊙wo — those are really evil!","msgtype":"m.text"},"ts":1354545413000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"experience suggests “pursuing convergence” is not good","msgtype":"m.text"},"ts":1354545424000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"darobin: hence my enquiry to the chairs http://lists.w3.org/Archives/Public/www-archive/2012Dec/0002.html","msgtype":"m.text"},"ts":1354545520000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"Stevef: you're on that list, I think you have a decent idea of the vital importance of the decisions we make their thanks to the brain slugs","msgtype":"m.text"},"ts":1354545555000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"initially wrote \"brain sluts\" there — not sure what to make of it","msgtype":"m.emote"},"ts":1354545576000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"guess I'm a bit of a brain slut myself","msgtype":"m.text"},"ts":1354545588000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: thats why I am trying to throw up a smoke screen of  boring truth","msgtype":"m.text"},"ts":1354545627000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"yes, good — that way we can also keep the chupacabras hidden until they're done hatching","msgtype":"m.text"},"ts":1354545671000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: when i amone of the chosen who gest to see the decisions behind the decisions and who really controls the whatwg's mutant child that is HTML5","msgtype":"m.text"},"ts":1354545735000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"it all hinges on the identity of 'the director' and I can assure you its not who you may think","msgtype":"m.text"},"ts":1354546018000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"the Director Brain Slug!","msgtype":"m.text"},"ts":1354546070000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"time to subscribe to yet another W3C mailing list. public-css-testsuite ahead.","msgtype":"m.text"},"ts":1354546247000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: why?","msgtype":"m.text"},"ts":1354546306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: UTF-16","msgtype":"m.text"},"ts":1354546355000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"still wonders why","msgtype":"m.emote"},"ts":1354546373000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: http://w3cmemes.tumblr.com/post/35332222321/css-2-1-syndata-is-awesome","msgtype":"m.text"},"ts":1354546397000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That's not a testsuite problem though?","msgtype":"m.text"},"ts":1354546417000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: ouch","msgtype":"m.text"},"ts":1354546433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is when implementing Level 3 makes Level 2.1 tests fail and people notice","msgtype":"m.text"},"ts":1354546444000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: just read that Polyglot post and comments from Sam o_O","msgtype":"m.text"},"ts":1354546451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Ah, there's a process for dealing with that at least.","msgtype":"m.text"},"ts":1354546631000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"who created the lists?","msgtype":"m.text"},"ts":1354548537000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Re mailing lists: if you have a WC3 Member account, there is a tool for viewing who is subscribed to a list. Even if you’re not in that list, and even if the list is Team-only.","msgtype":"m.text"},"ts":1354549132000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1354549204000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"don’t know if that’s a bug, but the tool is linked from the \"Membership Administrivia\" page","msgtype":"m.text"},"ts":1354549299000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"https://cgi.w3.org/member-bin/MailingListQuery.pl?queryList=team-html-editors","msgtype":"m.text"},"ts":1354549348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has no access anymore to verify","msgtype":"m.emote"},"ts":1354549364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"knows most of the links","msgtype":"m.emote"},"ts":1354549375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You're correct","msgtype":"m.text"},"ts":1354549495000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Interesting, it even has a \"Last mail arrived\" line","msgtype":"m.text"},"ts":1354549568000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's not a bug, it's just a mailing list audit tool","msgtype":"m.text"},"ts":1354549594000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: is it a bug that I can query Team-only lists?","msgtype":"m.text"},"ts":1354549617000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"Interesting\" != \"bug\"","msgtype":"m.text"},"ts":1354549618000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SimonSapin: no","msgtype":"m.text"},"ts":1354549636000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that ways you can always check your cc list to know whether someone really needs to be copied or not","msgtype":"m.text"},"ts":1354549666000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"of course, everyone does that!","msgtype":"m.text"},"ts":1354549670000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"http://www.w3.org/mid/1354040792.4860.822.camel⊙ll — final paragraph is beautiful (MO, sadly)","msgtype":"m.text"},"ts":1354551861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Secretsssss","msgtype":"m.text"},"ts":1354552120000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"hahaha, Liam's funny :)","msgtype":"m.text"},"ts":1354552233000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"gsnedders: I’m surprised by who takes what position in that thread","msgtype":"m.text"},"ts":1354552371000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"CSS WG violating its charter again?","msgtype":"m.text"},"ts":1354552871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No.","msgtype":"m.text"},"ts":1354552941000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mmmm, does anyone know where it's defined what actually triggers resize events?","msgtype":"m.text"},"ts":1354553766000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(if anywhere)","msgtype":"m.text"},"ts":1354553771000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hsivonen: is there a reason you talk about class names instead of id values in your mail about <main>? One of the confusions in the argument appears to be referring to class instead of id","msgtype":"m.text"},"ts":1354553886000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"hsivonen: don't know if you saw this analysis i started working on last night: https://docs.google.com/spreadsheet/ccc?key=0AlVP5_A996c5dHozOW14RkF4NEdEUFRvemxCZ2I4Z3c","msgtype":"m.text"},"ts":1354553951000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"SimonSapin: Argh, of course.  I'll fix that.  ^_^","msgtype":"m.text"},"ts":1354554233000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1354554474000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: Do you expect to extend FormData into being a MultiMap as well?","msgtype":"m.text"},"ts":1354554476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Even if not, the naming of the method isn't that important.  Set uses Set#add for similar functionality, after all.","msgtype":"m.text"},"ts":1354554519000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: Thanks for the component! The delay wasn't important.","msgtype":"m.text"},"ts":1354554535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: I want to add numeric attribute comparisons in Selectors5.  It's no problem grammatically.","msgtype":"m.text"},"ts":1354554681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Stevef: I was just relaying the intended meaning of the meme.  I dunno who actually authored it.","msgtype":"m.text"},"ts":1354554814000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Stevef: Hixie’s chart claimed to be about classes, right?","msgtype":"m.text"},"ts":1354555008000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes , one of issues with that data set is that no data on id values was published","msgtype":"m.text"},"ts":1354555161000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"hsivonen: but use of main, content as class names has been used as argument why the values are not semantically menaingful and do not represent a main content area","msgtype":"m.text"},"ts":1354555238000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"hsivonen: but I think that can be easily countered with reference to data like I pointed to above","msgtype":"m.text"},"ts":1354556298000,"senderName":"Stevef","senderId":"Stevef@irc"},
{"content":{"body":"annevk: Do you suppose it would make sense to separate out all non-sniffing MIME stuff into a separate spec?","msgtype":"m.text"},"ts":1354557443000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: I think this would help with, e.g., SimonSapin's data: spec, with regard to MIME type parsing.","msgtype":"m.text"},"ts":1354557477000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"since a data: URL is basically \"data:\" <MIME type> \",\" <percent-encoded contents>","msgtype":"m.text"},"ts":1354557738000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"well, <percent-encoded MIME type>, I guess","msgtype":"m.text"},"ts":1354557967000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: almost. You can also omit text/plain and just have parameters like data:;charset=foo,data","msgtype":"m.text"},"ts":1354558290000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but yeah, anything to help define parsing this would be great","msgtype":"m.text"},"ts":1354558318000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"nessy: yt?","msgtype":"m.text"},"ts":1354560153000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SimonSapin: Yikes! Whose idea was that?","msgtype":"m.text"},"ts":1354560185000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"don’t know, but it’s in the RFC","msgtype":"m.text"},"ts":1354560329000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"eek","msgtype":"m.text"},"ts":1354560351000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"http://tools.ietf.org/html/rfc2397#section-3","msgtype":"m.text"},"ts":1354560452000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wonders if that was intended.","msgtype":"m.emote"},"ts":1354560864000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: They don't show any examples using that, do they? Are there any in the wild?","msgtype":"m.text"},"ts":1354560881000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Although, I suppose if they didn't want that, they wouldn't have used square brackets at all...","msgtype":"m.text"},"ts":1354560907000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"any people with IE around?","msgtype":"m.text"},"ts":1354560942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: square brackets in the grammar, and prose in the section before","msgtype":"m.text"},"ts":1354560944000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"looking for a description of what happens when you hit the buttons in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1974 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1979","msgtype":"m.text"},"ts":1354560960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SimonSapin: Just a PSA: Don't forget to read the errata.","msgtype":"m.text"},"ts":1354561083000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"glances at the author of the document.","msgtype":"m.emote"},"ts":1354561128000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: So, IIUC, you actually have two defaults if omitted: the MIME type (text/plain) and the charset (US-ASCII)?","msgtype":"m.text"},"ts":1354561417000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"heycam: yt?","msgtype":"m.text"},"ts":1354561424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"GPHemsley: our shared list for getting accounts on the wiki isn't working, we're all hoping the other people will do it :-)","msgtype":"m.text"},"ts":1354561559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Oh, I usually do it. But it's hard to distinguish real requests from spam/misunderstandings.","msgtype":"m.text"},"ts":1354561591000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I'll check the archives and get to it.","msgtype":"m.text"},"ts":1354561605000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"oh ok :-)","msgtype":"m.text"},"ts":1354561614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i tend to leave them in my inbox until i see a reply or until i do it myself","msgtype":"m.text"},"ts":1354561631000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i noticed recently there's three of them i haven't done that nobody else has done either :-)","msgtype":"m.text"},"ts":1354561643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<tantek> feel free to childrens-bookize this blog post: http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5","msgtype":"m.text"},"ts":1354561673000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Personally, I don't like this. It is basically suggest people write XML-valid markup, but omitting the xmlns because of a hate for namespaces which is silly.","msgtype":"m.text"},"ts":1354561715000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"abarth: as far as i can tell, http headers are basically free","msgtype":"m.text"},"ts":1354561717000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: possibly cheaper than harder working existing headers, at least :-)","msgtype":"m.text"},"ts":1354561742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yuhong: You're missing the very first subheading in the post, \"Draconian = FAIL\", which is a pretty huge benefit to not write XML.","msgtype":"m.text"},"ts":1354561773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Of course, but that blog article is suggesting making your markup XML-valid.","msgtype":"m.text"},"ts":1354561809000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"It can be a problem too (XSS), BTW.","msgtype":"m.text"},"ts":1354561834000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Yes?  There's nothing wrong with trying your best to make your markup valid, while simultaneously valuing the fact that if you get it wrong (or down the line, some user-generated content mixed into your page gets it wrong), your page doesn't die.","msgtype":"m.text"},"ts":1354561851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: OK, which is the third?","msgtype":"m.text"},"ts":1354561879000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"XML doesn't stop XSS, either.  At best, it turns some XSS attempts into DOSes.","msgtype":"m.text"},"ts":1354561887000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is still better than nothing.","msgtype":"m.text"},"ts":1354561901000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"GPHemsley: gotta go. i'll do the third if you replied to the others.","msgtype":"m.text"},"ts":1354561924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1354561925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://lcamtuf.blogspot.ca/2011/10/origin-is-forever.html","msgtype":"m.text"},"ts":1354561929000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1354561930000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"But that is a different topic.","msgtype":"m.text"},"ts":1354561935000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I don't agree that a DOS is substantially better than an XSS.  They're all bad, and all mean your page is broken.","msgtype":"m.text"},"ts":1354561936000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, but one is still better than the other in terms of security, see the link above.","msgtype":"m.text"},"ts":1354561971000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Again, though, the DOS only happens if you're incompetent with your XSS.  If you know how your code is being inserted, you can always (maybe there's some times you can't?) craft it to remain well-formed and still XSS.","msgtype":"m.text"},"ts":1354562088000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In other words, it's not real security.  And then you layer on the fact that lots of *non*-attack errors also cause a DOS, and you see there's no benefit.","msgtype":"m.text"},"ts":1354562118000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree it is not a substitute for an XSS filter.","msgtype":"m.text"},"ts":1354562154000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I'd suggest it as a defense-in-depth in case of bypass.","msgtype":"m.text"},"ts":1354562179000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"In fact, I said that before, I think.","msgtype":"m.text"},"ts":1354562214000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"It's a defense-in-depth that triggers much more often on innocent things.  In biology we call that an auto-immune disorder.","msgtype":"m.text"},"ts":1354562243000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In any case, it is not what the blog article is advocating anyway.","msgtype":"m.text"},"ts":1354562312000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"They are advocating \"XML-valid\" HTML5.","msgtype":"m.text"},"ts":1354562333000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Which does not make sense.","msgtype":"m.text"},"ts":1354562339000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"And does not provide much benefit over just putting the xmlns.","msgtype":"m.text"},"ts":1354562379000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"The benefit over not putting in the xmlns is what I've already said - your page doesnt' break when you get your validity wrong.","msgtype":"m.text"},"ts":1354563194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: :)","msgtype":"m.text"},"ts":1354563701000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"TabAtkins: I've had requests to make FormData editable like a map","msgtype":"m.text"},"ts":1354564582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: and to seed a <form> with FormData, etc.","msgtype":"m.text"},"ts":1354564608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so yes, it would be a MultiMap like URLQuery except that it's backend is multipart/form-data rather than application/x-www-form-urlencoded","msgtype":"m.text"},"ts":1354564651000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(both are really quite terrible formats, I wish they had done a better job back in the day)","msgtype":"m.text"},"ts":1354564676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: I prefer not to have too many specifications","msgtype":"m.text"},"ts":1354564719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, I think sniffing is a bit more niche of an issue than e.g. MIME type parsing.","msgtype":"m.text"},"ts":1354564784000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: if the whole <mediatype> is omitted, it defaults to text/plain;charset=US-ASCII","msgtype":"m.text"},"ts":1354564836000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: I suppose, but that's not directly a reason to create a new specification","msgtype":"m.text"},"ts":1354564839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don’t know if only whitespace or percent-escaped whitespace counts as omitted","msgtype":"m.text"},"ts":1354564856000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: We might move concepts around over time, as we figure out their appropriate place, but if we don't know the place yet, it might as well be close to the other MIME stuff","msgtype":"m.text"},"ts":1354564878000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If <type> \"/\" <subtype> is omitted, it defaults to text/plain","msgtype":"m.text"},"ts":1354564894000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: note that US-ASCII means windows-1252","msgtype":"m.text"},"ts":1354564899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Because it really has nothing to do with MIME types, really. It's just about identifying what format a resource uses. The MIME type concept is merely one way to formalize it.","msgtype":"m.text"},"ts":1354564902000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1354564906000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Which is basically what you were arguing for fonts.","msgtype":"m.text"},"ts":1354564916000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: text/plain in what charset?","msgtype":"m.text"},"ts":1354564947000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"err","msgtype":"m.text"},"ts":1354564950000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: again, we don't know the appropriate place yet :)","msgtype":"m.text"},"ts":1354564954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It might be that most of this needs to come together in Fetch somehow","msgtype":"m.text"},"ts":1354564979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: no default charset in the later case. The point is to only specify the charset, as in data:;charset=foo,data","msgtype":"m.text"},"ts":1354564988000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yeah, I'm trying to figure out what question I actually want to ask you...","msgtype":"m.text"},"ts":1354565010000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: FYI, this MIME type parsing algorithm is turning out to be a lot longer than I expected.","msgtype":"m.text"},"ts":1354565052000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I think you argue that we should find the place and that if we cannot find it let it be a separate document. And I argue that lets just define it and move it once we figure out the appropriate architecture.","msgtype":"m.text"},"ts":1354565076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Oh, I mean, what if the type is specified without a charset parameter?","msgtype":"m.text"},"ts":1354565086000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: What I'm really arguing is that I don't want to overload mimesniff with all this stuff that has nothing to do with it. Whether it's in Fetch or a brand new document doesn't matter much to me.","msgtype":"m.text"},"ts":1354565134000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(My point about Fetch was that MIME sniffing might need to be in Fetch.)","msgtype":"m.text"},"ts":1354565154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1354565160000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"doesn't know much about what Fetch is for.","msgtype":"m.emote"},"ts":1354565168000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"not about fetching :p","msgtype":"m.text"},"ts":1354565189000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Fetch takes a URL and returns a resource.","msgtype":"m.text"},"ts":1354565200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So... URL -> Fetch -> MIME Sniffing?","msgtype":"m.text"},"ts":1354565228000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"But it does a whole lot more too, such as giving feedback as to when to dispatch progress events, whether or not to follow redirects for HTTP requests, how to apply CORS headers, how to set Referer, etc.","msgtype":"m.text"},"ts":1354565249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So wait... is Fetch incoming or outgoing?","msgtype":"m.text"},"ts":1354565297000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Yeah, might be. And the reason it makes sense to have MIME type parsing defined in MIME sniffing is that MIME sniffing depends on how Content-Type is parsed sometimes...","msgtype":"m.text"},"ts":1354565301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a quick glance at fetch.spec.whatwg.org makes it look like it’s about whether you’re allowed to fetch, not about the fetching itself. In my mind fetching would be an HTTP client, data: parser etc.","msgtype":"m.text"},"ts":1354565301000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: your quick glance missed the red box at the top I think","msgtype":"m.text"},"ts":1354565330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed","msgtype":"m.text"},"ts":1354565343000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"wonders if we should sit down and determine some sort of relationship document about the various specs.","msgtype":"m.emote"},"ts":1354565364000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Is that not what we do whenever it's design time in #whatwg? :-)","msgtype":"m.text"},"ts":1354565395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I didn't get the memo. When's the next design time? :)","msgtype":"m.text"},"ts":1354565411000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I'm thinking something like this:","msgtype":"m.text"},"ts":1354565425000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"URL -> Fetch -> MIME Sniffing -> MIME -> HTML","msgtype":"m.text"},"ts":1354565463000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(or perhaps MIME -> MIME Sniffing, depending on the scope of each)","msgtype":"m.text"},"ts":1354565478000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"or perhaps Fetch -> MIME -> HTML trololo","msgtype":"m.text"},"ts":1354565543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. http://mimesniff.spec.whatwg.org/#determining-the-sniffed-media-type-of-a-resource does some MIME type parsing","msgtype":"m.text"},"ts":1354565571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it does byte comparisons on the value of Content-Type","msgtype":"m.text"},"ts":1354565582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would data: be part of Fetch? (And would it be cross-origin?)","msgtype":"m.text"},"ts":1354565584000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yes and ideally it's treated as same-origin unless there was a redirect","msgtype":"m.text"},"ts":1354565635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: at least that's the model I've been thinking of which would work for XHR/Workers/<canvas>/etc. that want data: URLs to work","msgtype":"m.text"},"ts":1354565671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: And perhaps that could be abstracted out to MIME or Fetch, since there are multiple ways to trigger the no-sniff flag.","msgtype":"m.text"},"ts":1354565687000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"WebKit refuses to let me test data: in anyway because it is supposedly cross-origin :(","msgtype":"m.text"},"ts":1354565713000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Leaving MIME Sniffing to only be the matching resource byte patterns part","msgtype":"m.text"},"ts":1354565716000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: so my idea is that Fetch gets the bits; MIME determines who gets to handle the bits; HTML/SVG/CSS/JavaScript handle the bits","msgtype":"m.text"},"ts":1354565757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with \"who\" being the format specs","msgtype":"m.text"},"ts":1354565783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only sign of life I can get is with data:text/html,<script>window.parent.postMessage('something', '*')</script>","msgtype":"m.text"},"ts":1354565791000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but that’s not exactly simple","msgtype":"m.text"},"ts":1354565791000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"right, hmm","msgtype":"m.text"},"ts":1354565792000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(in an iframe)","msgtype":"m.text"},"ts":1354565821000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, that's a bug in WebKit but they're not compelled to fix it at this stage I think","msgtype":"m.text"},"ts":1354565835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: hopefully once we have clearer specs...","msgtype":"m.text"},"ts":1354565844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In that case, the sniffing wouldn't return a MIME type so much as a format to parse...?","msgtype":"m.text"},"ts":1354565851000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"compelled?","msgtype":"m.text"},"ts":1354565853000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Or is it merely transforming a HTTP MIME type to a handler MIME type?","msgtype":"m.text"},"ts":1354565879000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Or, put another way, transforming an untrusted MIME type into a trusted MIME type.","msgtype":"m.text"},"ts":1354565914000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: I think that some things like @import bypass MIME completely","msgtype":"m.text"},"ts":1354565931000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: or finding a MIME type (if there was none)","msgtype":"m.text"},"ts":1354565937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"\" is an untrusted MIME type ;)","msgtype":"m.text"},"ts":1354565949000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: and no Content-Type header is too I guess? sure","msgtype":"m.text"},"ts":1354565970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"You silly server. All resources have types!\"","msgtype":"m.text"},"ts":1354565974000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: hi there. I take it from your resolution of https://www.w3.org/Bugs/Public/show_bug.cgi?id=20131 that you were swayed by the consistency argument re: mutation record identity?","msgtype":"m.text"},"ts":1354566011000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: I was also swayed by the lack of further resistance, the simplicity of doing what smaug asked for (and Microsoft seemed to ask for), and the lack of clarity in what exactly the WebKit model would be and whether that would be error proof (smaug seemed to demonstrate a few unexpected cases)","msgtype":"m.text"},"ts":1354566087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k. I'm still a bit concerned about the memory impact, but I don't have data to show, and if it is really bad smaug is right that we could go to extra effort to optimize it (e.g., share the impl and hand out unique wrappers)","msgtype":"m.text"},"ts":1354566171000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"SimonSapin: yes so an API (say @import) does Fetch + MIME and then decides whether what to do is probably closer to the model","msgtype":"m.text"},"ts":1354566182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aklein: I was not really swayed by the expandos argument fwiw. Just that what WebKit did was not consistent and what smaug proposed was simple and straightforward.","msgtype":"m.text"},"ts":1354566514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: good to know. I knew that oldValue design would bite us! :)","msgtype":"m.text"},"ts":1354566607000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"annevk: Oh, another thing I was going to add was aliases (like Encoding) that are interpreted as the canonical MIME type... but now I'm thinking the resource handlers should be the \"canonical\" output. ...?","msgtype":"m.text"},"ts":1354567268000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"since a lot of the Web types have multiple MIME types associated with them","msgtype":"m.text"},"ts":1354567323000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: example?","msgtype":"m.text"},"ts":1354567333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: oh, like text/xml vs application/xml?","msgtype":"m.text"},"ts":1354567360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1354567365000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"or \"The official IANA-registered MIME type for ICO files is image/vnd.microsoft.icon, registered in 2003. Erroneous labels \"image/ico\", \"image/icon\", \"text/ico\" and \"application/ico\", along with the unofficial name \"image/x-icon\" were in use at the time of official registration and assignment of the MIME type.[8]\"","msgtype":"m.text"},"ts":1354567379000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I guess that one is always sniffed or do UAs actually recognise those MIME types?","msgtype":"m.text"},"ts":1354567412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know about this particular one, but I know there are formats that they accept multiple MIME types for.","msgtype":"m.text"},"ts":1354567444000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(Don't know off the top of my head which ones)","msgtype":"m.text"},"ts":1354567458000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"WAVE is similar","msgtype":"m.text"},"ts":1354567471000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(Funnily enough, UAs don't accept the one WAVE type registered at IANA)","msgtype":"m.text"},"ts":1354567492000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"yeah, don't pay too much attention to IANA I guess","msgtype":"m.text"},"ts":1354567512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's a mess for encodings too","msgtype":"m.text"},"ts":1354567519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, my point is, the MIME type is treated as holy, when all that matters is what parser parsers the file (or handler handles, etc.)","msgtype":"m.text"},"ts":1354567545000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so MIME types and sniffing are just ways to funnel resources to the appropriate handler","msgtype":"m.text"},"ts":1354567569000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: yeah, but SimonSapin is right that MIME might not be the right place to make the call about the handler","msgtype":"m.text"},"ts":1354567584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, did he say that?","msgtype":"m.text"},"ts":1354567601000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: e.g. XMLHttpRequest sometimes pays attention, but often ignores MIME","msgtype":"m.text"},"ts":1354567612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: <script> always ignores MIME","msgtype":"m.text"},"ts":1354567619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not true if the no-sniff flag is set, at least in IE>","msgtype":"m.text"},"ts":1354567655000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I’m saying MIME is sometimes bypassed/ignored","msgtype":"m.text"},"ts":1354567661000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":".","msgtype":"m.text"},"ts":1354567661000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"So maybe we should be registering handlers instead of MIME types","msgtype":"m.text"},"ts":1354567701000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: right, but I guess you see my point how it depends on the API?","msgtype":"m.text"},"ts":1354567703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I actually think you're making an orthogonal point.","msgtype":"m.text"},"ts":1354567719000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Or missing mine","msgtype":"m.text"},"ts":1354567730000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I'm saying that e.g. with XHR if I Fetch something labeled image/x-icon I don't want it to be handled by the image library","msgtype":"m.text"},"ts":1354567761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What should it be handled by?","msgtype":"m.text"},"ts":1354567798000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: by XHR","msgtype":"m.text"},"ts":1354567807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So then XHR requests shouldn't pass through the MIME tunnel","msgtype":"m.text"},"ts":1354567830000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"that's simple","msgtype":"m.text"},"ts":1354567838000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"isn't it?","msgtype":"m.text"},"ts":1354567841000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: they should, because XHR does care about the MIME type sometimes","msgtype":"m.text"},"ts":1354567847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"when?","msgtype":"m.text"},"ts":1354567861000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: so I want a resource with a parsed MIME type (no MIME sniffing I suppose)","msgtype":"m.text"},"ts":1354567862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: http://xhr.spec.whatwg.org/#document-response-entity-body","msgtype":"m.text"},"ts":1354567899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"uhm, I might have imagined the bit about @import ignoring Content-Type. Can’t find it in any spec","msgtype":"m.text"},"ts":1354567939000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I think it’s actually undefined what happens when @import points to something that is not text/css","msgtype":"m.text"},"ts":1354568117000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: any opinion on that?","msgtype":"m.text"},"ts":1354568123000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I think for CSS it should be respected actually most of the time","msgtype":"m.text"},"ts":1354568322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: with some same-origin quirks mode exception perhaps","msgtype":"m.text"},"ts":1354568332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it would be an error?","msgtype":"m.text"},"ts":1354568371000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(which means maybe a log message in some console, and then ignored)","msgtype":"m.text"},"ts":1354568394000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yes","msgtype":"m.text"},"ts":1354568511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Nope, well defined.  You just parse it as CSS.  For most things that aren't CSS, that'll just result in a big pile of parse errors and no actual rules.","msgtype":"m.text"},"ts":1354569094000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The CSS parser is defined over all possible bitstreams.","msgtype":"m.text"},"ts":1354569109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so I remembered right, but I can’t find a reference for that","msgtype":"m.text"},"ts":1354569170000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"If there's no text explicitly restricting @import based on Content-Type, then there's no restriction, and you just do what comes naturally. ^_^","msgtype":"m.text"},"ts":1354569202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I never know if something is obvious enough that it doesn’t need to be mentioned in the specs, or if it’s only obvious to us based on prior knowledge","msgtype":"m.text"},"ts":1354569365000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: IIUC, needs to distinguish HTML and XML from everything else. Is that right?","msgtype":"m.text"},"ts":1354569381000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"XHR needs","msgtype":"m.text"},"ts":1354569387000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I consider restrictions never obvious, and always needing explicit statement.","msgtype":"m.text"},"ts":1354569395000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what says that the thing pointed to by @import is CSS and not some other kind of stylesheet?","msgtype":"m.text"},"ts":1354569443000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: So, wait, do CSS files not need to be tagged?","msgtype":"m.text"},"ts":1354569456000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"as text/css","msgtype":"m.text"},"ts":1354569462000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"what if someone starts serving text/css+sass?","msgtype":"m.text"},"ts":1354569472000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: I think TabAtkins is saying that CSS needs to be fixed at some point to define the processing model","msgtype":"m.text"},"ts":1354569476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: @import could be different from <link rel=stylesheet>","msgtype":"m.text"},"ts":1354569503000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: what’s a processing model?","msgtype":"m.text"},"ts":1354569520000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"ah, so you can't CSS-@import XSL, for example","msgtype":"m.text"},"ts":1354569534000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"once you're in CSS mode, you're assumed to always be in CSS mode?","msgtype":"m.text"},"ts":1354569546000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: a set of steps that define what to do; e.g. fetch, check MIME type, throw away if not text/css otherwise apply","msgtype":"m.text"},"ts":1354569548000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: XHR also cares about the charset parameter value","msgtype":"m.text"},"ts":1354569591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin, annevk: We can certainly clarify that @import is always interpreted as text/css.","msgtype":"m.text"},"ts":1354569604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We assumed it was obvious.  ^_^","msgtype":"m.text"},"ts":1354569613000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that's not the processing model","msgtype":"m.text"},"ts":1354569618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: pretty sure @import rejects e.g. text/xml files","msgtype":"m.text"},"ts":1354569637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I suspect this needs some testing.","msgtype":"m.text"},"ts":1354569654000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, what about text/plain?","msgtype":"m.text"},"ts":1354569668000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: What has the power to initiate an XHR request?","msgtype":"m.text"},"ts":1354569670000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: I think Tab meant that this stuff is obvious enough that it doesn’t even need to be written down","msgtype":"m.text"},"ts":1354569677000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: the XHR API?","msgtype":"m.text"},"ts":1354569687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know that I can do \"<link rel=stylesheet href=style.php>\" and it just works.","msgtype":"m.text"},"ts":1354569687000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if you do header(\"content-type:text/css\")","msgtype":"m.text"},"ts":1354569700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Though this conversation proves that I was wrong, and it's not obvious.  ^_^","msgtype":"m.text"},"ts":1354569704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IIRC, we're pretty strict about whether CSS sheets have the right content type","msgtype":"m.text"},"ts":1354569705000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"header","msgtype":"m.text"},"ts":1354569707000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"annevk: And what has the power to use the XHR API?","msgtype":"m.text"},"ts":1354569714000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"doesn't know if that's changed in recent years, but it used to be a problem for servers sending it over as text/plain","msgtype":"m.emote"},"ts":1354569722000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"annevk: I don't think I've done that before.  I think I've just served naked PHP files without explicit declarations and they worked.","msgtype":"m.text"},"ts":1354569723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: web developers?","msgtype":"m.text"},"ts":1354569729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes to test.","msgtype":"m.emote"},"ts":1354569732000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I'm talking about file types here, not people.","msgtype":"m.text"},"ts":1354569745000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: scripts?","msgtype":"m.text"},"ts":1354569748000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: be sure to test standards/quirks and same-origin and cross-origin","msgtype":"m.text"},"ts":1354569756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: that's not relevant?","msgtype":"m.text"},"ts":1354569793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you mean?","msgtype":"m.text"},"ts":1354569818000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: that it's not relevant who or what initiates XHR","msgtype":"m.text"},"ts":1354569843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not relevant to what?","msgtype":"m.text"},"ts":1354569858000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"anything","msgtype":"m.text"},"ts":1354569871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"by the way, WeasyPrint does not know anything about cross-origin. HTTP documents are allowed to use images (including SVG) and stylesheets in file://","msgtype":"m.text"},"ts":1354569881000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Not sure how much of an issue that is, given there is no JS at all","msgtype":"m.text"},"ts":1354569881000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: I'm trying to understand what has the ability to perform an XHR request.","msgtype":"m.text"},"ts":1354569893000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: it's not clear what you mean by \"what\"","msgtype":"m.text"},"ts":1354569912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: All values of \"what\" that are digital.","msgtype":"m.text"},"ts":1354569940000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: you lost me","msgtype":"m.text"},"ts":1354569951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know how XHR works. I'm trying to understand what it is and who/what uses it.","msgtype":"m.text"},"ts":1354569977000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"and \"developers\" does not help me","msgtype":"m.text"},"ts":1354570009000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Blast, you're right.  Standards-mode fails without Content-Type, quirks mode don't care.","msgtype":"m.text"},"ts":1354570011000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what about a content-type other than text/css?","msgtype":"m.text"},"ts":1354570030000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: not surprised :-)","msgtype":"m.text"},"ts":1354570034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Let's see!","msgtype":"m.text"},"ts":1354570036000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: does http://xhr.spec.whatwg.org/#introduction help?","msgtype":"m.text"},"ts":1354570058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: JavaScript can use XHR. Is this the kind of answer you’re looking for?","msgtype":"m.text"},"ts":1354570072000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Yes, thank you. Can anything besides JS use XHR?","msgtype":"m.text"},"ts":1354570094000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: text/html fails, while an explicit text/css works.","msgtype":"m.text"},"ts":1354570101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: XHR is a JS API, so no.","msgtype":"m.text"},"ts":1354570112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: OK, so that's what I was looking for. Thanks.","msgtype":"m.text"},"ts":1354570128000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Plenty of things can make requests, of which XHR is one.","msgtype":"m.text"},"ts":1354570129000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: if the web had other scripting languages, maybe","msgtype":"m.text"},"ts":1354570136000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"XHR is Fetch's API","msgtype":"m.text"},"ts":1354570171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, looks like I need to spec this in Cascade real quick.","msgtype":"m.text"},"ts":1354570172000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: But the bottom line is, you're already in the HTML/XML/JS handler if you're making an XHR request?","msgtype":"m.text"},"ts":1354570185000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: fyi, Hixie has this covered in HTML for <link>, so you might want to use the same language","msgtype":"m.text"},"ts":1354570194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What's the proper way to say \"if the content-type header is text/css\"?  Anything I need to look out for?","msgtype":"m.text"},"ts":1354570198000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, good, I'll check that out.","msgtype":"m.text"},"ts":1354570202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: In MIME Sniffing I define \"media type portion\"; alternatively, you can say the type is \"text\" and the subtype is \"css\".","msgtype":"m.text"},"ts":1354570289000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: if you’re parsing the bytes in the header, things to look for are casing, whitespace, … But you might just refer to the result of that parsing with something like \"if the response has a text/css MIME type\"","msgtype":"m.text"},"ts":1354570301000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: \"media type\" means something else in CSS :/ (think media queries)","msgtype":"m.text"},"ts":1354570317000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Oh, right","msgtype":"m.text"},"ts":1354570323000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"terminology is complicated here","msgtype":"m.text"},"ts":1354570335000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: I'm just going to do what HTML is doing.","msgtype":"m.text"},"ts":1354570337000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well MIME should call it MIME type","msgtype":"m.text"},"ts":1354570344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because I can't really say the \"MIME type portion of the MIME type\", either","msgtype":"m.text"},"ts":1354570348000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"it's not complicated","msgtype":"m.text"},"ts":1354570349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It just refers to \"Content-Type metadata\" and defers to the MIMESNIFF spec.","msgtype":"m.text"},"ts":1354570365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: A *MIME type* consists of a *type* and *parameters* or some such?","msgtype":"m.text"},"ts":1354570389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, SimonSapin: But these are things that I was hoping to tackle with the separate MIME spec (or wherever it would land), with MIME type parsing.","msgtype":"m.text"},"ts":1354570426000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: \"type\" is overloaded too, as the part before the slash","msgtype":"m.text"},"ts":1354570438000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I guess then type, subtype, and parameters","msgtype":"m.text"},"ts":1354570491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In my mind, Content-Type is a MIME type + a map/dict of parameters. charset is a parameter. But maybe I get it wrong.","msgtype":"m.text"},"ts":1354570502000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and just MIME type as the shorthand","msgtype":"m.text"},"ts":1354570506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, that's how I'm doing it in the parsing algorithm I'm currently writing","msgtype":"m.text"},"ts":1354570516000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: charset is tied to the MIME type, though in practice UAs sometimes support it for all MIME types, depending on what algorithm is running","msgtype":"m.text"},"ts":1354570550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: That sounds about right. The complication is that a \"MIME type\" is made up of a \"type\" and a \"subtype\".","msgtype":"m.text"},"ts":1354570557000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: e.g. XHR supports it for all MIME types, which is technically a bug","msgtype":"m.text"},"ts":1354570560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, SimonSapin: One of the questions here is whether \"MIME type\" includes the parameters or not.","msgtype":"m.text"},"ts":1354570596000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"well, we need of term for something that does not","msgtype":"m.text"},"ts":1354570616000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"in Python server side APIs, that term is often \"MIME type\"","msgtype":"m.text"},"ts":1354570641000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'm OK with that","msgtype":"m.text"},"ts":1354570651000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but that could just be a confusion","msgtype":"m.text"},"ts":1354570658000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"perhaps \"MIME type\" is type + subtype, and \"content type\" is type + subtype + parameters?","msgtype":"m.text"},"ts":1354570691000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"works for me","msgtype":"m.text"},"ts":1354570714000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(and then we can leave \"media type\" for CSS media queries)","msgtype":"m.text"},"ts":1354570721000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"though it can get confusing quickly","msgtype":"m.text"},"ts":1354570741000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"well, it already is","msgtype":"m.text"},"ts":1354570748000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so the question is: does this make it better or worsE?","msgtype":"m.text"},"ts":1354570758000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but I never really though of type and subtype separately","msgtype":"m.text"},"ts":1354570760000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"GPHemsley: compared to what? Do we have another proposal?","msgtype":"m.text"},"ts":1354570788000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Compared to whatever the status quo is","msgtype":"m.text"},"ts":1354570798000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: it does","msgtype":"m.text"},"ts":1354570808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don’t know what the status quo is :/","msgtype":"m.text"},"ts":1354570815000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"apart from confusion","msgtype":"m.text"},"ts":1354570824000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: So then this is better, no? :P","msgtype":"m.text"},"ts":1354570832000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1354570836000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: It does make it better?","msgtype":"m.text"},"ts":1354570869000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: MIME type includes parameters","msgtype":"m.text"},"ts":1354570879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, this set of term *is* my opinion of the status quo, so it’s the same :p","msgtype":"m.text"},"ts":1354570879000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Oh. Argh.","msgtype":"m.text"},"ts":1354570887000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: does it? :/","msgtype":"m.text"},"ts":1354570901000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I just explained that above","msgtype":"m.text"},"ts":1354570909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Did you?","msgtype":"m.text"},"ts":1354570960000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Oh, HTTP (which defines the syntax) calls type + subtype + parameters \"media-type\"","msgtype":"m.text"},"ts":1354571041000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(or Internet Media Type, in plain English)","msgtype":"m.text"},"ts":1354571061000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"http://tools.ietf.org/html/rfc2616#section-3.7","msgtype":"m.text"},"ts":1354571067000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"the data: RFC references MIME, not HTTP …","msgtype":"m.text"},"ts":1354571071000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: Does this look okay? http://dev.w3.org/csswg/css3-cascade/#import-content-type","msgtype":"m.text"},"ts":1354571105000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn't quite sure of how to do it correctly.","msgtype":"m.emote"},"ts":1354571115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SimonSapin: Which MIME RFC?","msgtype":"m.text"},"ts":1354571126000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: \"same-origin\"","msgtype":"m.text"},"ts":1354571188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The HTML source doesn't hyphenate.","msgtype":"m.text"},"ts":1354571205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: \"Otherwise, if the resource's type denotes a type of stylesheet that the user agent understands, it must be interpreted as defined by that type.\" can probably be removed as this is CSS specific","msgtype":"m.text"},"ts":1354571209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: ah yeah, not needed here, but a space is","msgtype":"m.text"},"ts":1354571226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Then I need to loosen the final \"otherwise\" to be \"or else do whatever\", right?","msgtype":"m.text"},"ts":1354571238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Whoops, didn't intend them to be one word.","msgtype":"m.text"},"ts":1354571244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"RFC2397 (data:) references RFC2045 (MIME) to define \"type\", \"subtype\", \"attribute\" and \"value\"","msgtype":"m.text"},"ts":1354571265000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: \"If the linked resource's type is text/css, it must be interpreted as a CSS stylesheet, and as a network error otherwise.\" maybe?","msgtype":"m.text"},"ts":1354571275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: so you would allow other stylesheet types in @import?","msgtype":"m.text"},"ts":1354571312000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"annevk: And let other specs override the final clause?","msgtype":"m.text"},"ts":1354571331000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: this is CSS cascade, @import is not ever going to import non-CSS without CSS itself changing","msgtype":"m.text"},"ts":1354571371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: Ah, they're effectively the same. HTTP is newer, and doesn't embed the name of the header into the value.","msgtype":"m.text"},"ts":1354571393000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: just issue a new cascade once that situation arrives rather than let people speculate over what it might mean and imply","msgtype":"m.text"},"ts":1354571406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure I see why that shoudl be true.  If you recognize another stylesheet language that is nevertheless compatible with the cascade (text/css+sass), it would make sense to let that be @import-able.","msgtype":"m.text"},"ts":1354571444000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I'm fine if that's done by just letting the extension spec override the restriction.","msgtype":"m.text"},"ts":1354571459000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what about stylesheets that do not have cascading rules?","msgtype":"m.text"},"ts":1354571475000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"XSL?","msgtype":"m.text"},"ts":1354571508000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"^^ is what I mean","msgtype":"m.text"},"ts":1354571526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is any browser planning on supporting text/css+sass?","msgtype":"m.text"},"ts":1354571551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I pulled it out of thin air, don’t speculate (only) based on what I say","msgtype":"m.text"},"ts":1354571623000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: BTW, I meant to tell you that I added you as a permanent autoconfirmed user on the wiki, so the CAPTCHAs should have gone away (if they hadn't already)","msgtype":"m.text"},"ts":1354571632000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Great! But I moved data: to github pages now :)","msgtype":"m.text"},"ts":1354571657000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"shrugs.","msgtype":"m.emote"},"ts":1354571686000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"thanks anyway","msgtype":"m.text"},"ts":1354571693000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Dunno!  Presumably the extension spec defining how that stuff works would do it.","msgtype":"m.text"},"ts":1354571720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I don't see the difference between @importing an XSL stylesheet and just linking both an XSL and CSS stylesheet.","msgtype":"m.text"},"ts":1354571741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm... two hours ago I came onto the computer to look at how quoted strings work, and I still haven't looked it up...","msgtype":"m.text"},"ts":1354571779000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"@import is supposed to have a \"source order\" compared to other @imports","msgtype":"m.text"},"ts":1354571780000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"TabAtkins: @import is CSS-specific. <link> is not. Although I think the idea HTML might somehow work with another style sheet language is pretty far fetched and we should probably drop that notion in favor of just crossing that bridge when we get there.","msgtype":"m.text"},"ts":1354571802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thought there were some implementations that supported XSLT through <link> ?","msgtype":"m.emote"},"ts":1354571826000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"SimonSapin: For the purpose of the CSS cascade, it is.  If the other language doesn't use our cascade, then that effect is irrelevant.","msgtype":"m.text"},"ts":1354571826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Anyway, I've adopted your language and made the otherwise clause just a network error.  This discussion is academic and pending another stylesheet language actually wanting to interoperate with CSS and get adopted.  ^_^","msgtype":"m.text"},"ts":1354571873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fantasai: that would be news to me; although I think in the past I might have mistakenly pushed for it a bit...","msgtype":"m.text"},"ts":1354571875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, argh. Curse you, RFC 822 comments!","msgtype":"m.text"},"ts":1354571878000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: could work. I feel like annevk that @import in CSS-specific but not a strong opinion","msgtype":"m.text"},"ts":1354571896000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"The current language supports it being CSS specific.  Extension specs can always override the clause if we want to change it in the future.","msgtype":"m.text"},"ts":1354571931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: data: indirectly references 822 too","msgtype":"m.text"},"ts":1354571937000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Well, I would hope they were at least the same crazy allowances. :P","msgtype":"m.text"},"ts":1354571968000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"through 2045","msgtype":"m.text"},"ts":1354571971000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(Though I know that is often not the case)","msgtype":"m.text"},"ts":1354571974000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: Yeah, that's what I'm looking at.","msgtype":"m.text"},"ts":1354571982000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: another fuzzy point for me is when percent-decoding happens for the data: header, relative to other parsing steps","msgtype":"m.text"},"ts":1354572032000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Well, presumably it doesn't matter, no?","msgtype":"m.text"},"ts":1354572058000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"is not directly looking at your data: spec or the RFC","msgtype":"m.emote"},"ts":1354572067000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: You've got two relatively independent chunks, with additional text that isn't percent-encoded","msgtype":"m.text"},"ts":1354572091000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: it seems kinda logical to decode to bytes and then use a byte parser for MIME","msgtype":"m.text"},"ts":1354572093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: but, if that's not what implementations do...","msgtype":"m.text"},"ts":1354572125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: I am defining this algorithm assuming I am getting a straight string of text (no percent-encoding, etc.)","msgtype":"m.text"},"ts":1354572132000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: It'll be up to you to manipulate what you have to be valid input to the algorithm :P","msgtype":"m.text"},"ts":1354572162000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I don’t know … in text/plain%3Bcharset=utf8 is charset part of the subtype? is utf8?","msgtype":"m.text"},"ts":1354572182000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"text/plain%3Bcharset%3Dutf8","msgtype":"m.text"},"ts":1354572209000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Oh dear. It seems Firefox says no.","msgtype":"m.text"},"ts":1354572230000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"err, yes","msgtype":"m.text"},"ts":1354572233000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so... is the content type not supposed to be percent-encoded?","msgtype":"m.text"},"ts":1354572270000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"what happens if it has spaces?","msgtype":"m.text"},"ts":1354572278000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I read rfc2397 a few times, and I have no idea","msgtype":"m.text"},"ts":1354572299000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"try percent-encoded whitespace","msgtype":"m.text"},"ts":1354572316000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: That seems to be decoded.","msgtype":"m.text"},"ts":1354572342000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"%20, anyway","msgtype":"m.text"},"ts":1354572358000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"is it interoperable?","msgtype":"m.text"},"ts":1354572378000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but it doesn't copy & paste as percent-encoded","msgtype":"m.text"},"ts":1354572391000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(which I think would be expected)","msgtype":"m.text"},"ts":1354572398000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Opera loads it, but doesn't decode it","msgtype":"m.text"},"ts":1354572431000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"does it behave the same in an address bar or an attribute?","msgtype":"m.text"},"ts":1354572447000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"(HTML attribute)","msgtype":"m.text"},"ts":1354572454000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"same with Chrome","msgtype":"m.text"},"ts":1354572462000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"and Safari","msgtype":"m.text"},"ts":1354572486000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so Opera, Chrome, and Safari allow %20 and do not decode it","msgtype":"m.text"},"ts":1354572502000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"allow where?","msgtype":"m.text"},"ts":1354572508000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Firefox allows it, but decodes it to space","msgtype":"m.text"},"ts":1354572511000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"in the location bar","msgtype":"m.text"},"ts":1354572514000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I mean where in the URL","msgtype":"m.text"},"ts":1354572524000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1354572527000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"data:text/plain;%20charset=utf8,test","msgtype":"m.text"},"ts":1354572529000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but note that if you load that in Firefox and copy it back, you get:","msgtype":"m.text"},"ts":1354572573000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"data:text/plain; charset=utf8,test","msgtype":"m.text"},"ts":1354572581000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hum, firefox gives the download dialog for data:text/plain%20;charset=utf8,tést","msgtype":"m.text"},"ts":1354572594000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"but not chromium","msgtype":"m.text"},"ts":1354572612000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1354572614000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so I guess Gecko looks for the semicolon to begin percent-decoding?","msgtype":"m.text"},"ts":1354572653000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"is any MIME parameter other than charset actually used on the web?","msgtype":"m.text"},"ts":1354572716000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"using %2C instead of the comma sends the text to search","msgtype":"m.text"},"ts":1354572719000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"in Firefox","msgtype":"m.text"},"ts":1354572732000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: Well, audio/video types may use codecs=","msgtype":"m.text"},"ts":1354572748000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"plus base64","msgtype":"m.text"},"ts":1354572752000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"base64 is special in data: not sure it counts as a parameter","msgtype":"m.text"},"ts":1354572772000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and I think there are a few obscure text/plain parameters","msgtype":"m.text"},"ts":1354572772000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: In what way doesn't it?","msgtype":"m.text"},"ts":1354572789000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"no = sign and no value","msgtype":"m.text"},"ts":1354572803000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"oh, hmm","msgtype":"m.text"},"ts":1354572822000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"appears separately in the rfc2397 grammar","msgtype":"m.text"},"ts":1354572827000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"didn't realize the MIME RFC doesn't allow an optional value","msgtype":"m.text"},"ts":1354572835000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"“The \";base64\" extension is distinguishable from a content-type    parameter by the fact that it doesn't have a following \"=\" sign.”","msgtype":"m.text"},"ts":1354572856000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and neither does HTTP","msgtype":"m.text"},"ts":1354572867000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hixie, here now","msgtype":"m.text"},"ts":1354572869000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I was writing the algorithm taking it for granted that it was similar to URL parameters","msgtype":"m.text"},"ts":1354572888000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"wonders if that would be a big deal.","msgtype":"m.emote"},"ts":1354572901000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"SimonSapin: What if you added an arbitrary value to a base64 parameter?","msgtype":"m.text"},"ts":1354572935000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Does it still work?","msgtype":"m.text"},"ts":1354572938000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"then it’s a parameter, not a base64 marker","msgtype":"m.text"},"ts":1354572962000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: Is that a yes or a no? :P","msgtype":"m.text"},"ts":1354572971000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"the content is not decoded as base64","msgtype":"m.text"},"ts":1354572984000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1354572987000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"interoperably?","msgtype":"m.text"},"ts":1354573005000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but if you had an API to get the map of all parameters, you’d find the value there","msgtype":"m.text"},"ts":1354573009000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"don’t know, but that is one point where the RFC is pretty clear","msgtype":"m.text"},"ts":1354573021000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"data:text/plain;base64=a,ZmFpbA==","msgtype":"m.text"},"ts":1354573051000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"the way I was writing the algorithm you'd get parameters = { 'charset': 'utf-8', 'base64': null }","msgtype":"m.text"},"ts":1354573061000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I think that’s wrong :p","msgtype":"m.text"},"ts":1354573092000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hmm... Safari decodes it to \"fail\"","msgtype":"m.text"},"ts":1354573115000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Firefox, Chrome, and Opera do not","msgtype":"m.text"},"ts":1354573127000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"but that's OK... my algorithm still allows for that","msgtype":"m.text"},"ts":1354573162000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"because data:text/plain;base64=,ZmFpbA== will give { 'base64': '' }}","msgtype":"m.text"},"ts":1354573181000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"-}","msgtype":"m.text"},"ts":1354573186000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so you can distinguish between null and ''","msgtype":"m.text"},"ts":1354573194000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"without the = sign it’s invalid in HTTP or MIME","msgtype":"m.text"},"ts":1354573258000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and the behavior is the same","msgtype":"m.text"},"ts":1354573267000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"s/and/but/","msgtype":"m.text"},"ts":1354573273000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I don’t know what the error handling is, though","msgtype":"m.text"},"ts":1354573275000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I'll continue writing the algorithm as I was, and then you can sort it out","msgtype":"m.text"},"ts":1354573334000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I imagine it'll be up to us to determine the error handling","msgtype":"m.text"},"ts":1354573366000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"so... is it just me, or does RFC 2045 not actually define quoted-string?","msgtype":"m.text"},"ts":1354573448000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"oh, maybe it's in RFC 822","msgtype":"m.text"},"ts":1354573487000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"ah, yeah","msgtype":"m.text"},"ts":1354573515000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"OK, so a quoted-string uses \\\" include a quotation mark, and \\\\ to include a backslash","msgtype":"m.text"},"ts":1354573587000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Oh yeah, regarding variadic URLQuery#set, yeah, it replaces instances that already exist.  If there are leftover things in the arg list, it appends to the end.  If there are leftover items in the URLQuery, it deletes them.","msgtype":"m.text"},"ts":1354573880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: oh it deletes too?","msgtype":"m.text"},"ts":1354573922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I figure that set() is always saying \"screw you, use exactly these values now\".","msgtype":"m.text"},"ts":1354573939000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: so set(\"name\") would be the same as delete(\"name\")?","msgtype":"m.text"},"ts":1354573956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So if you start with ?a=1&a=2&a=3, then say set('a',4), you'll have only a single 'a' value in the map.","msgtype":"m.text"},"ts":1354573970000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or, to be more elaborate:","msgtype":"m.text"},"ts":1354573998000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Start with ?a=1&b=1&a=2&c=1&a=3.  Call u.set('a', 4, 5), then serialize.  You'll get ?a=4&b=1&a=5&c=1","msgtype":"m.text"},"ts":1354574054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Losing the third 'a' key that was originally in the query.)","msgtype":"m.text"},"ts":1354574081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And similarly, if you start with ?a=1&b=1, then call u.set('a', 2, 3), you'll get ?a=2&b=1&a=3.","msgtype":"m.text"},"ts":1354574132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sure, that's pretty basic, I'm more interested in my question above.","msgtype":"m.text"},"ts":1354574183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Set currently does not delete so I guess we'd have to change that if we want to remain forward compatible...","msgtype":"m.text"},"ts":1354574250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just answered your question above, if I understood your question correctly.","msgtype":"m.text"},"ts":1354574274000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought the point of set() was that it overrode whatever existed in the url already, but maintained relative ordering when it could.","msgtype":"m.text"},"ts":1354574302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: i cc'ed you on e-mail","msgtype":"m.text"},"ts":1354574723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, cool, replied I assume.","msgtype":"m.text"},"ts":1354574745000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: my question in particular was whether set(x) is the same as delete(x) because of the way variadics are defined","msgtype":"m.text"},"ts":1354574851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: heycam can correct me but a variadic requires zero or more values as I understand it","msgtype":"m.text"},"ts":1354574876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's right","msgtype":"m.text"},"ts":1354574894000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: we could of course make the argument set(DOMString, DOMString, DOMString...) or some such","msgtype":"m.text"},"ts":1354574895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh!  Now I get it!","msgtype":"m.text"},"ts":1354574897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, I'd require set() to have at least one \"value\".","msgtype":"m.text"},"ts":1354574915000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: I wasn't parsing your question right before.","msgtype":"m.text"},"ts":1354574933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It doesn't make sense to even call set() without at least one value to assign to the key.","msgtype":"m.text"},"ts":1354574955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: why don't we do one or more and optional variadic for zero or more?","msgtype":"m.text"},"ts":1354575012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, was just following how other languages do it","msgtype":"m.text"},"ts":1354575061000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk: Regarding the \"return this\" decision, Rick is responding adequately in anothr es-discuss thread titled \"(Map|Set|WeakMap)#set() returns `this` ?\".","msgtype":"m.text"},"ts":1354575783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The answer to the \"why not delete()?\" part of your question is just \"baby steps\". Rick expects to resolve on that change too.","msgtype":"m.text"},"ts":1354575805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And it has equal use-cases to set() returning this.)","msgtype":"m.text"},"ts":1354575817000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not on es-discuss","msgtype":"m.text"},"ts":1354575829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let me link you, then.","msgtype":"m.text"},"ts":1354575839000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but I'll take a look tomorrow or so","msgtype":"m.text"},"ts":1354575840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Starts here: https://mail.mozilla.org/pipermail/es-discuss/2012-December/026811.html","msgtype":"m.text"},"ts":1354575883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Yo, regarding urls.  http://dev.w3.org/csswg/css3-values/#urls can we refer to something better than RFC3986 now?","msgtype":"m.text"},"ts":1354576466000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We have two refs - one to the syntax of urls and escapes, and one to the absolutization of relative urls.","msgtype":"m.text"},"ts":1354576492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Basically, is the URL spec good enough now for us to point to i?","msgtype":"m.text"},"ts":1354576511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It defines all the infrastructure, may contain bugs, and does not deal with IDNA yet because nobody has decided how that should work.","msgtype":"m.text"},"ts":1354576573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I'm all for referencing it myself, so people complain and yell at me and I can fix more bugs.","msgtype":"m.text"},"ts":1354576589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hah.","msgtype":"m.text"},"ts":1354576607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It defines syntax (called URL) and defines parsing #concept-url-parser and the result of parsing a URL is a parsed URL which you can pass to \"fetch\" (which is a concept that needs a bit more elaboration, it's scheduled to be worked on at some point)","msgtype":"m.text"},"ts":1354576664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not worrying about CSS fetch yet.","msgtype":"m.text"},"ts":1354576685000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think I can just refer to #concept-url.","msgtype":"m.text"},"ts":1354576698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Looking at that... I think that parsing and absolutizing a URL shouldn't be conflated. They're really two separate things, even if you can do them in a single pass.","msgtype":"m.text"},"ts":1354576950000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"annevk: Should be able to parse in a relative URL, understand it, and reserialize it without changing its relativeness","msgtype":"m.text"},"ts":1354576978000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"fantasai: file a bug? be sure to list use cases; \"should be able to\" does not count :)","msgtype":"m.text"},"ts":1354577033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Supporting CSS is a use-case - specified values of urls are whatever you put in, parsed, but computed values are absolutized.","msgtype":"m.text"},"ts":1354577070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, an editor would want to be able to parse and understand URLs, but not absolutize everything in the document when they reserialize it out","msgtype":"m.text"},"ts":1354577102000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"TabAtkins: right, that's supported","msgtype":"m.text"},"ts":1354577409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fantasai: editing typically requires its own parser anyway, because you would not want to lowercase host names and such either","msgtype":"m.text"},"ts":1354577436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fantasai: same e.g. for editing CSS; you wouldn't want your editor to drop -webkit-ballgame","msgtype":"m.text"},"ts":1354577465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Parsing without dropping unknown values doesn't require anything fancy.  You still want to resolve urls as you normally do.","msgtype":"m.text"},"ts":1354577693000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(You just follow the Syntax spec and don't drop anything for being unrecognized.)","msgtype":"m.text"},"ts":1354577709000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: have you looked at the URL parsers in browsers?","msgtype":"m.text"},"ts":1354577906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nope!","msgtype":"m.text"},"ts":1354577917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: my spec is not based on fiction :)","msgtype":"m.text"},"ts":1354577921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure what you mean.","msgtype":"m.text"},"ts":1354577983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what I mean is that the model is parseURL(input, base) -> parsed URL","msgtype":"m.text"},"ts":1354578064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or failure*","msgtype":"m.text"},"ts":1354578108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, bedtime","msgtype":"m.text"},"ts":1354578119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1354578121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hiya fellas.. seen the channel on one of the 'tutorials' for html 5/javascript apis.","msgtype":"m.text"},"ts":1354578356000,"senderName":"PaKScripT","senderId":"PaKScripT@irc"}
]