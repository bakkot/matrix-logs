[
{"content":{"body":"TabAtkins, so by \"concrete object\" do you mean \"box\" or do you mean something else?","msgtype":"m.text"},"ts":1316563500000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"TabAtkins, I was assuming you meant \"box\".","msgtype":"m.text"},"ts":1316563501000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"is wondering whether to introduce cement objects and bricks","msgtype":"m.emote"},"ts":1316563502000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"cinder blocks","msgtype":"m.text"},"ts":1316563560000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I should probably just unsubscribe from www-style.","msgtype":"m.text"},"ts":1316563920000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"It's full of people arguing about things that nobody's even said or written down anywhere.","msgtype":"m.text"},"ts":1316563921000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"just be selective about which threads you read","msgtype":"m.text"},"ts":1316564700000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"sicking: yt?","msgtype":"m.text"},"ts":1316566440000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: pong","msgtype":"m.text"},"ts":1316566740000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: hi","msgtype":"m.text"},"ts":1316566860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: do you have a time now?","msgtype":"m.text"},"ts":1316566861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: just about to head into a meeting, shouldn't be more than an hour, will you still be around?","msgtype":"m.text"},"ts":1316566862000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: oh sure","msgtype":"m.text"},"ts":1316566920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: I'll probably be around 'til 6:30","msgtype":"m.text"},"ts":1316566921000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: if not 7","msgtype":"m.text"},"ts":1316566922000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1316566923000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ping me at 6 if i haven't pinged you already","msgtype":"m.text"},"ts":1316566924000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: ok","msgtype":"m.text"},"ts":1316566925000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: back","msgtype":"m.text"},"ts":1316568720000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: hi","msgtype":"m.text"},"ts":1316568721000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so I was sort of looking at the big picture of undoManager","msgtype":"m.text"},"ts":1316568722000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and I've started to think that maybe we've taken a wrong path in certain things","msgtype":"m.text"},"ts":1316568780000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: oh?","msgtype":"m.text"},"ts":1316568781000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: right now, we're going to have undoManger.automaticTransact and undoManager.manualTransact, right?","msgtype":"m.text"},"ts":1316568782000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and then we'll have two separate interfaces for those objects","msgtype":"m.text"},"ts":1316568783000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1316568784000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sort of","msgtype":"m.text"},"ts":1316568840000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but then, we'll need to expose those in []","msgtype":"m.text"},"ts":1316568841000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i don't actually know that we need real interfaces","msgtype":"m.text"},"ts":1316568842000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: that would mean that the return value of [] would either be Object","msgtype":"m.text"},"ts":1316568843000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"they're more like pure JS-objects","msgtype":"m.text"},"ts":1316568844000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: or we have to define some AbstractInterface for it","msgtype":"m.text"},"ts":1316568845000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: oh","msgtype":"m.text"},"ts":1316568846000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: i think it's fine to use Object. If we indeed even are going to use interfaces here at all","msgtype":"m.text"},"ts":1316568900000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but this would really ingrains the concept of automatic/manual transaction into undomnager","msgtype":"m.text"},"ts":1316568901000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: in the sense, undo manager needs to know all","msgtype":"m.text"},"ts":1316568902000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: in my original proposal, I tried to de-couple those concepts so that undomanager doesn't need to know anything about automatic transaction","msgtype":"m.text"},"ts":1316568903000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: undomanager would just call apply, unapply, reapply","msgtype":"m.text"},"ts":1316568960000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: which is nice from implementor's perspective","msgtype":"m.text"},"ts":1316568961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: hmm","msgtype":"m.text"},"ts":1316568962000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: with current approach, we have to end up adding bindings for undoManger.automaticTransact and undoManager.manualTransact and then share code somehow","msgtype":"m.text"},"ts":1316568963000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: because most of steps in those are identically equal","msgtype":"m.text"},"ts":1316568964000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i don't really care what's nice from an implementation perspective though. It's much more important to have a good API","msgtype":"m.text"},"ts":1316568965000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: to a certain extent of course, it shouldn't be completely insane to implement","msgtype":"m.text"},"ts":1316569020000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: in the sense the only difference between automaticTransact and manualTransact is how it calls apply","msgtype":"m.text"},"ts":1316569021000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: or what object it takes","msgtype":"m.text"},"ts":1316569022000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so I've started to think that it might be better to provide an API that creates automatic transaction instead","msgtype":"m.text"},"ts":1316569080000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: i.e. we'll have createAutomaticTransaction function or just new AutomaticTransaction","msgtype":"m.text"},"ts":1316569081000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: that'll create an object with unapply/reapply functions given apply function","msgtype":"m.text"},"ts":1316569082000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(function names are pending)","msgtype":"m.text"},"ts":1316569083000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: this would allow us to have simple transact function again","msgtype":"m.text"},"ts":1316569140000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: is there a reason to do this other than save a few lines of code in the implementation?","msgtype":"m.text"},"ts":1316569141000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I think this makes the interface conceptually simpler","msgtype":"m.text"},"ts":1316569142000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i think it's much more important to look at what's a good API from a usability point of view first","msgtype":"m.text"},"ts":1316569143000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: because all transactions are just transactions","msgtype":"m.text"},"ts":1316569144000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: what happens if someone calls reapply multiple times in a row on a automatic transaction?","msgtype":"m.text"},"ts":1316569200000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: or unapply and then apply?","msgtype":"m.text"},"ts":1316569201000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: hmm.. actually","msgtype":"m.text"},"ts":1316569260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I guess it could ignore subsequence calls","msgtype":"m.text"},"ts":1316569261000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: so how would this work, would createAutomaticTransaction run the \"execution function\"?","msgtype":"m.text"},"ts":1316569320000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: no, it'll just create a transaction object","msgtype":"m.text"},"ts":1316569321000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: e.g. you do undoManager.transact(createAutomaticTransaction(myCommand, 'typing'))","msgtype":"m.text"},"ts":1316569380000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: in some sense, automaticTransact is a syntactic sugar for this","msgtype":"m.text"},"ts":1316569381000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but I found that having one function for doing things is better than having two","msgtype":"m.text"},"ts":1316569382000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: from an implementation point of view, or from a usability point of view?","msgtype":"m.text"},"ts":1316569440000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: e.g. this would allow author's script to pass transactions around","msgtype":"m.text"},"ts":1316569441000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: from author's point of view as well","msgtype":"m.text"},"ts":1316569442000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so in the current design, you need to know whether you're creating an automatic transaction or manual transaction","msgtype":"m.text"},"ts":1316569443000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: if you've just got a transaction object from some helper function","msgtype":"m.text"},"ts":1316569444000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: e.g.","msgtype":"m.text"},"ts":1316569445000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: var transaction = createMyTransaction(...);","msgtype":"m.text"},"ts":1316569500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that makes some sense i agree","msgtype":"m.text"},"ts":1316569501000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: and then I wouldn't know whether I should call automaticTransact or manualTransact","msgtype":"m.text"},"ts":1316569502000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1316569503000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: if we have createAutomaticTransaction, then we can always call transact","msgtype":"m.text"},"ts":1316569504000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: still is a lot to type every time you create a automatic transaction though :(","msgtype":"m.text"},"ts":1316569560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah, that's one drawback","msgtype":"m.text"},"ts":1316569561000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i wonder if we can also add a helper function that does the work for you","msgtype":"m.text"},"ts":1316569562000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: also it's harder to add properties in this syntax","msgtype":"m.text"},"ts":1316569563000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that's a good point","msgtype":"m.text"},"ts":1316569564000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"very good even","msgtype":"m.text"},"ts":1316569565000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah so I'm not sure which way is better at this point","msgtype":"m.text"},"ts":1316569620000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i think we can help with the typing by creating a helper function","msgtype":"m.text"},"ts":1316569621000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: but the properties part is worse","msgtype":"m.text"},"ts":1316569622000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: right.","msgtype":"m.text"},"ts":1316569623000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so one thing I was thinking is that we can make createAutomaticTransaction take some object","msgtype":"m.text"},"ts":1316569624000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and let the resultant transaction object retrieve all properties the original object had","msgtype":"m.text"},"ts":1316569625000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but that's a very strange object","msgtype":"m.text"},"ts":1316569680000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i.e. we can add a function like    addAutomatic(func) { return this.transact(createAutomaticTransaction(func)) } to the interface","msgtype":"m.text"},"ts":1316569681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah","msgtype":"m.text"},"ts":1316569682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that sounds hacky","msgtype":"m.text"},"ts":1316569683000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"(the automatic copying that is)","msgtype":"m.text"},"ts":1316569684000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but I'm suspecting that many use cases of automatic transaction doesn't require adding new properties","msgtype":"m.text"},"ts":1316569685000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: you'll loose things like the prototype chain","msgtype":"m.text"},"ts":1316569686000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: right","msgtype":"m.text"},"ts":1316569687000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: which i believe Alex Russel really wants to use to be able to do things like manager.transact(new MyOwnTransactionClass(...));","msgtype":"m.text"},"ts":1316569740000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: on the other hand, we could have createAutomaticTransaction just add/assign unapply/reapply properties","msgtype":"m.text"},"ts":1316569741000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: instead of creating of new object","msgtype":"m.text"},"ts":1316569742000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"creating new","msgtype":"m.text"},"ts":1316569743000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: yeah, that'll nice","msgtype":"m.text"},"ts":1316569800000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"'ll be* nice","msgtype":"m.text"},"ts":1316569801000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"having the DOM monkey-patch your objects seems somewhat unfortunate","msgtype":"m.text"},"ts":1316569802000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: so if we'll have createAutomaticTransaction(x)=x but x will get extra properties","msgtype":"m.text"},"ts":1316569860000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: yeah","msgtype":"m.text"},"ts":1316569861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: it's not particularly clean either","msgtype":"m.text"},"ts":1316569862000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: alternatively, we could add \"automatic\" boolean to transaction object","msgtype":"m.text"},"ts":1316569863000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so instead of having two methods","msgtype":"m.text"},"ts":1316569864000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: we'll just have a boolean that determines whether it's automatic or not","msgtype":"m.text"},"ts":1316569865000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: in the object itself","msgtype":"m.text"},"ts":1316569920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah, that seems ok","msgtype":"m.text"},"ts":1316569921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: i do like the idea of being able to return a transaction","msgtype":"m.text"},"ts":1316569922000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah","msgtype":"m.text"},"ts":1316569923000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: but i *really* liked the syntax you guys had in your original email that came up with the transaction objects as they are now","msgtype":"m.text"},"ts":1316569924000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: so we'll have undoManager.transact({apply:~~, automatic:true})","msgtype":"m.text"},"ts":1316569925000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: which one?","msgtype":"m.text"},"ts":1316569980000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: the one that introduced the syntax as it is now","msgtype":"m.text"},"ts":1316569981000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: oh undoManager.transact({apply:~~, automatic:true}) ?","msgtype":"m.text"},"ts":1316569982000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"nono, much much earlier","msgtype":"m.text"},"ts":1316570040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"nevermind, i think our irc'ing just crossed paths :)","msgtype":"m.text"},"ts":1316570041000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: i like the automatic:true idea","msgtype":"m.text"},"ts":1316570042000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: that seems like it would take care of the original use case","msgtype":"m.text"},"ts":1316570100000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: mn... like undoManager.transact(new ManagedTransaction(...)) ?","msgtype":"m.text"},"ts":1316570101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"you just lost me :)","msgtype":"m.text"},"ts":1316570160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-August/032766.html ?","msgtype":"m.text"},"ts":1316570220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: ok","msgtype":"m.text"},"ts":1316570221000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: what I'm saying is that the undoManager.transact({ apply: ..., automatic: true }) seems to solve the use case of having code like: transact = someFunctionThatGeneratesTransactions(); undoManager.transact(transact);","msgtype":"m.text"},"ts":1316570280000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah","msgtype":"m.text"},"ts":1316570281000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: ok, I'll post something up on whatwg and make this change subsequently","msgtype":"m.text"},"ts":1316570282000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: this will lets us just have one implicit interface","msgtype":"m.text"},"ts":1316570283000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and one transact","msgtype":"m.text"},"ts":1316570284000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1316570285000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yup. Might be good to come up with something shorter than \"automatic\" though. Maybe just \"auto\"?","msgtype":"m.text"},"ts":1316570340000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i'll leave the bikeshedding to others :)","msgtype":"m.text"},"ts":1316570341000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah, auto works","msgtype":"m.text"},"ts":1316570342000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: also, i'm still not sold on apply+reapply. I still think just apply is better :)","msgtype":"m.text"},"ts":1316570343000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"with a boolean argument","msgtype":"m.text"},"ts":1316570344000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: hmm.... I still make the same argument AryehGregor made and say booleans are bad","msgtype":"m.text"},"ts":1316570400000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: I find a function that does both do & undo to be semantically hard to understand","msgtype":"m.text"},"ts":1316570401000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: unfortunately, there are no good precedents for this because most of Undo API just provide functions for undo/redo","msgtype":"m.text"},"ts":1316570460000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and not the initial execution","msgtype":"m.text"},"ts":1316570461000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: sure, i wouldn't propose to merge do/undo","msgtype":"m.text"},"ts":1316570462000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: oops I meant do/redo","msgtype":"m.text"},"ts":1316570463000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: booleans are bad on the callsite generally","msgtype":"m.text"},"ts":1316570464000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I'm not buying the idea that developers would duplicate code","msgtype":"m.text"},"ts":1316570465000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: when he can just call apply","msgtype":"m.text"},"ts":1316570466000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: but here the callsite is inside the browser code, so that's not a problem","msgtype":"m.text"},"ts":1316570467000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: but he can't call apply, you brought up good reasons for why they should be slightly different","msgtype":"m.text"},"ts":1316570520000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: also arv made an argument that booleans are hard to remember which one is which","msgtype":"m.text"},"ts":1316570521000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: again, that's generally true on the caller side, not on the callee side","msgtype":"m.text"},"ts":1316570522000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: so he can do reapply: function() { /* some work! */ this.apply(); }","msgtype":"m.text"},"ts":1316570523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i don't think you can do selection like that","msgtype":"m.text"},"ts":1316570580000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: also, look at the examples that you sent to the list, they all duplicated code","msgtype":"m.text"},"ts":1316570581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: or reapply: function() { this.apply(); /* some work */ }","msgtype":"m.text"},"ts":1316570582000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but should I define function(isApply) {...} or function(isReapply) {...}?","msgtype":"m.text"},"ts":1316570640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Either way, it'll be obvious when you look at any example","msgtype":"m.text"},"ts":1316570700000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: the problem with boolean arguments is that you can't tell on the caller side: apply(false)","msgtype":"m.text"},"ts":1316570701000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: but on the callee side it's always documented using the variable name","msgtype":"m.text"},"ts":1316570702000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: i'm also not convinced that the differences between apply/reapply are always so simple that you can implement them before and/or after","msgtype":"m.text"},"ts":1316570760000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: so the argument was that it's hard to remember which boolean it was when you write the function for the first tie","msgtype":"m.text"},"ts":1316570761000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"time*","msgtype":"m.text"},"ts":1316570762000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"though i'd have to think to come up with an example","msgtype":"m.text"},"ts":1316570763000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: how would you do that without looking at docs or examples?","msgtype":"m.text"},"ts":1316570820000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: well, you probably remember it was undoManager","msgtype":"m.text"},"ts":1316570821000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and on firebug or developer console, you can see that it has transact method","msgtype":"m.text"},"ts":1316570822000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and maybe I'll vaguely remember it takes apply function","msgtype":"m.text"},"ts":1316570880000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if that's a person's way of learning an api, they're going to get confused no matter what the type of the argument :)","msgtype":"m.text"},"ts":1316570881000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: well, I almost always use developer tools to figure out property names, etc...","msgtype":"m.text"},"ts":1316570882000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: too lazy to search","msgtype":"m.text"},"ts":1316570883000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: most of the times, properties I find do what their name suggest to do","msgtype":"m.text"},"ts":1316570940000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"anyways","msgtype":"m.text"},"ts":1316570941000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"seems like a strange reason to abolish bools, heh","msgtype":"m.text"},"ts":1316570942000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I guess","msgtype":"m.text"},"ts":1316570943000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if there was more info to send i'd suggest passing an object, like events, but that's a bit overkill if that's all there is","msgtype":"m.text"},"ts":1316571000000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: i'm not convinced that it'll be easier to remember that there's both a \"apply\" and a \"reapply\" function, than to remember that it takes a isReapply boolean argument","msgtype":"m.text"},"ts":1316571001000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I've talked to a couple of developers internally and they told me they'd prefer apply/reapply simply because they don't like booleans","msgtype":"m.text"},"ts":1316571060000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but then they also told me they'll be fine with booleans","msgtype":"m.text"},"ts":1316571061000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if an api made me provide two separate functions that are very similar, i'm pretty sure i'd quick patch it away so i don't have to deal with that","msgtype":"m.text"},"ts":1316571062000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i havn't looked closely enough to know why \"apply\" and \"reapply\" are separate concepts, though)","msgtype":"m.text"},"ts":1316571120000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: if you don't supply reapply, it falls back to apply","msgtype":"m.text"},"ts":1316571121000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1316571122000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: apply is called when you call undoManager.transact","msgtype":"m.text"},"ts":1316571123000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"how's that better than having a bool? if authors forget about reapply, in both cases their apply() function is called","msgtype":"m.text"},"ts":1316571124000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"zewt: reapply is called, well, when a user triggers redo","msgtype":"m.text"},"ts":1316571125000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i guess as someone who's typed \"int main(int argc, char *argv[])\" a few thousand times, worrying about this seems minor :)","msgtype":"m.text"},"ts":1316571180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I can never remember which comes first although I've been writing c programs over a decade","msgtype":"m.text"},"ts":1316571181000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if i think about it i'd probably forget--i just let my fingers type it","msgtype":"m.text"},"ts":1316571182000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"digit coprocessors","msgtype":"m.text"},"ts":1316571240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mn.. maybe I'll like it better if we renamed apply/reapply","msgtype":"m.text"},"ts":1316571241000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: how about executeDo and executeUndo?","msgtype":"m.text"},"ts":1316571242000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: or execute and executeUndo?","msgtype":"m.text"},"ts":1316571300000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: i like apply/unapply/reapply better","msgtype":"m.text"},"ts":1316571301000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: ?","msgtype":"m.text"},"ts":1316571302000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: you like apply/unapply better?","msgtype":"m.text"},"ts":1316571303000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: the names that is","msgtype":"m.text"},"ts":1316571304000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I think the problem is that apply appears to indicate that it's only called for the first time","msgtype":"m.text"},"ts":1316571305000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: oh, i see","msgtype":"m.text"},"ts":1316571360000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"do/undo/redo?","msgtype":"m.text"},"ts":1316571361000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"rniwa: i generally try to stay out of naming issues","msgtype":"m.text"},"ts":1316571362000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jamesr: I think we want to get rid of redo function","msgtype":"m.text"},"ts":1316571363000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1316571364000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jamesr: do/undo seems fine","msgtype":"m.text"},"ts":1316571365000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jamesr: but might be too generic?","msgtype":"m.text"},"ts":1316571420000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jamesr: we want to let duck type it so user may want to inherit from some other objects","msgtype":"m.text"},"ts":1316571421000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"do is a keyword :)","msgtype":"m.text"},"ts":1316571422000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh that won't work :(","msgtype":"m.text"},"ts":1316571423000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: that's ok in ES5","msgtype":"m.text"},"ts":1316571424000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: no, that's not a problem in ES5","msgtype":"m.text"},"ts":1316571425000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: probably better to avoid it though","msgtype":"m.text"},"ts":1316571480000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"why is it okay, that sounds gross, heh","msgtype":"m.text"},"ts":1316571481000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"sicking: you never know which JIT compiler has bugs","msgtype":"m.text"},"ts":1316571482000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: good principle > i generally try to stay out of naming issues","msgtype":"m.text"},"ts":1316571483000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: makes you productive :)","msgtype":"m.text"},"ts":1316571484000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: we have functions called 'delete' in indexedDB","msgtype":"m.text"},"ts":1316571540000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: oh dear","msgtype":"m.text"},"ts":1316571541000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: but I think the problem here is that do is defined by author","msgtype":"m.text"},"ts":1316571780000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: so you'll writ something like undoManager.transact{do: funciton(redo) {..}, undo: funciton() {..})","msgtype":"m.text"},"ts":1316571781000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: I guess it's fine in this simple case but might be annoying in more complicated case","msgtype":"m.text"},"ts":1316571782000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: how old is ES5 support among browsers?","msgtype":"m.text"},"ts":1316571783000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: I don't want to make library author's life harder but I don't want to worry about backward compat. if it's form ages ago","msgtype":"m.text"},"ts":1316571784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: JIT's don't matter here, only ecmascript parsers","msgtype":"m.text"},"ts":1316571785000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: it was renamed from 'remove' to 'delete' based on developer input","msgtype":"m.text"},"ts":1316571786000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: past the parser it's just strings","msgtype":"m.text"},"ts":1316571787000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: one option would be to do both things","msgtype":"m.text"},"ts":1316571788000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: have apply/reapply/unapply, pass a boolean argument to apply/reapply, and do the fallback to apply if reapply doesn't exist","msgtype":"m.text"},"ts":1316571789000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: that way, if you have really different implementations between apply/reapply you can split it into two functions","msgtype":"m.text"},"ts":1316571790000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: but if you don't, you can just add a few branches","msgtype":"m.text"},"ts":1316571791000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"s/but if you don't/but if the differences are small/","msgtype":"m.text"},"ts":1316571792000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: that's what I meant :)","msgtype":"m.text"},"ts":1316571793000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: > parsers","msgtype":"m.text"},"ts":1316571840000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: ftfy https://encrypted.google.com/","msgtype":"m.text"},"ts":1316571841000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"sicking: should have said engine*","msgtype":"m.text"},"ts":1316571842000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hmm... seems like i have connectivity issues","msgtype":"m.text"},"ts":1316571843000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"rniwa: did you get my last message?","msgtype":"m.text"},"ts":1316571844000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah","msgtype":"m.text"},"ts":1316571845000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: that might be a good idea","msgtype":"m.text"},"ts":1316571846000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: the \"s/but if you don't/but if the differences are small/\" one?","msgtype":"m.text"},"ts":1316571847000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: having both*","msgtype":"m.text"},"ts":1316571848000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1316571900000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: okay, let's do that for now","msgtype":"m.text"},"ts":1316571901000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dglazkov: :D","msgtype":"m.text"},"ts":1316571902000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: for what it's worth, if you do { \"do\": function(...) { ... } }, that will work even in ES3 parsers","msgtype":"m.text"},"ts":1316571903000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: sorry about the delay in responses, I want to be more responsive but I've been blocked by regressions from my Apple-style-span removals","msgtype":"m.text"},"ts":1316571904000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: oh that's a good point","msgtype":"m.text"},"ts":1316571905000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: mn... come to think of it","msgtype":"m.text"},"ts":1316571960000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: maybe we don't need automatic boolean","msgtype":"m.text"},"ts":1316571961000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: maybe we should just rename apply for automatci function to execute","msgtype":"m.text"},"ts":1316571962000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ok, gotta run, circus class!","msgtype":"m.text"},"ts":1316571963000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: so that manual transaction would have apply(bool), unapply, and optionally reapply","msgtype":"m.text"},"ts":1316572020000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: and automatic transactoin would have execute","msgtype":"m.text"},"ts":1316572021000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sicking: ah, ok.","msgtype":"m.text"},"ts":1316572022000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ttyl","msgtype":"m.text"},"ts":1316572023000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that might work too","msgtype":"m.text"},"ts":1316572024000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"guess I'll post that on whatwg and see what others think","msgtype":"m.text"},"ts":1316572025000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-September/033136.html","msgtype":"m.text"},"ts":1316598840000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-September/033257.html","msgtype":"m.text"},"ts":1316598841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So does Opera support script onload?","msgtype":"m.text"},"ts":1316598842000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"small css proposal. resampling-filter: lanczos | bicubic | linear | ...","msgtype":"m.text"},"ts":1316598960000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Ms2ger: hmm!","msgtype":"m.text"},"ts":1316599140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'd look at the code, but you guys are evil ;)","msgtype":"m.text"},"ts":1316599141000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: seems my testing was bogus","msgtype":"m.text"},"ts":1316599260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"hot mutato\"","msgtype":"m.text"},"ts":1316600040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is trying to work out the component model minutes","msgtype":"m.emote"},"ts":1316600100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mmm, had SPDY been put forth for an IETF RFC by now (given how Mozilla added it to ff as well in recent builds)?","msgtype":"m.text"},"ts":1316600400000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"s/had/has/","msgtype":"m.text"},"ts":1316600401000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"\"(shouting match--declarative will be there)\"","msgtype":"m.text"},"ts":1316600580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So far it seems sufficient people in the room were in favor of a trimmed XBL2","msgtype":"m.text"},"ts":1316600581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I missed that meeting, but I was told that Mozilla and Apple had pretty similar ideas, and Google something a bit different","msgtype":"m.text"},"ts":1316600880000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Though, I think someone needs to still figure out sane event handling for shadow trees / bindings","msgtype":"m.text"},"ts":1316600940000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"From the minutes I just read on public-webapps that appears to be the case, yes","msgtype":"m.text"},"ts":1316600941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(event retargeting is just quite error prone)","msgtype":"m.text"},"ts":1316600942000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Mozilla/Apple participants want a trimmed XBL2; Google wants simpler JS libraries","msgtype":"m.text"},"ts":1316601000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The specifics were not nailed down","msgtype":"m.text"},"ts":1316601001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is, all the hard questions are still there I guess :)","msgtype":"m.text"},"ts":1316601002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1316601003000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I proposed a unconference session for TPAC","msgtype":"m.text"},"ts":1316601060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe we can make some progress then...","msgtype":"m.text"},"ts":1316601061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to not attend TPAC","msgtype":"m.emote"},"ts":1316601062000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"too much flying","msgtype":"m.text"},"ts":1316601120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"on rel=\"next\" and rel=\"prev\"","msgtype":"m.text"},"ts":1316601240000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"Google says: \"Send users to the most relevant page/URL—typically the first page of the series.\"","msgtype":"m.text"},"ts":1316601241000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"Why would they do that and is there any way to step them from going through with it?","msgtype":"m.text"},"ts":1316601300000,"senderName":"woef","senderId":"woef@irc"},
{"content":{"body":"Curious to see whether this will have any effect: http://infrequently.org/2011/09/things-the-w3c-should-stop-doing/","msgtype":"m.text"},"ts":1316606040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems kind of pointless to suggest XML should be removed as it is unlikely to be removed from browsers, but overall it's a valid point","msgtype":"m.text"},"ts":1316606041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi","msgtype":"m.text"},"ts":1316606700000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"is there a plan to support other date/time format for inputs ? like <input type=\"time\" format=\"time-hour:time-minute\"/> or <input type=\"date\" format=\"date-mday/date-month/date-fullyear\"/> ?","msgtype":"m.text"},"ts":1316606820000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"do you mean UI-wise or submission-wise?","msgtype":"m.text"},"ts":1316606940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"submission-wise: no","msgtype":"m.text"},"ts":1316606941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"UI-wise: vague ideas exist","msgtype":"m.text"},"ts":1316607000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what means submission-wise ? what coming out from the form ?","msgtype":"m.text"},"ts":1316607001000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"yeah, what the server gets","msgtype":"m.text"},"ts":1316607002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, so no only UI-wise","msgtype":"m.text"},"ts":1316607003000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"we don't really have a good idea yet","msgtype":"m.text"},"ts":1316607060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at the moment UI is up to browsers","msgtype":"m.text"},"ts":1316607061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok :)","msgtype":"m.text"},"ts":1316607120000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"hope it will come one day, thx :)","msgtype":"m.text"},"ts":1316607121000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"hopefully browsers can pickup the \"right\" UI based on the page's language","msgtype":"m.text"},"ts":1316607122000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"similarly to <input type=\"number\"> handling","msgtype":"m.text"},"ts":1316607180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(where decimal separator can be . or ,)","msgtype":"m.text"},"ts":1316607181000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but what if the format is not about language convention, like not showing seconds for time inputs","msgtype":"m.text"},"ts":1316607182000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"that is indeed some extra hint which UA should get from the page","msgtype":"m.text"},"ts":1316607240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Neiluj, that you can control already using step I think","msgtype":"m.text"},"ts":1316607241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, showing is another matter I guess","msgtype":"m.text"},"ts":1316607242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed, with time, it's ok, that was for the example and that's a trick","msgtype":"m.text"},"ts":1316607243000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"thinking this may be some CSS property responsability actually...","msgtype":"m.text"},"ts":1316607360000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"on public-webapps⊙wo there is some discussion going on on how we want to allow developers to extend/replace elements with their own implementation","msgtype":"m.text"},"ts":1316607361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as it won't change the data but only the UI...","msgtype":"m.text"},"ts":1316607420000,"senderName":"Neiluj","senderId":"Neiluj@irc"},
{"content":{"body":"For everyone who wants to use Anolis with cross-specification cross-references, it's quite easy: http://wiki.whatwg.org/wiki/Anolis","msgtype":"m.text"},"ts":1316612700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://shiki.esrille.com/2011/09/es-acid1.html seems Shiki is writing a browser in ECMAScript and it now passes Acid1","msgtype":"m.text"},"ts":1316613540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's pretty neat","msgtype":"m.text"},"ts":1316613541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip, we're not having a meeting now, right?","msgtype":"m.text"},"ts":1316617260000,"senderName":"rillian_","senderId":"rillian_@irc"},
{"content":{"body":"guesses not","msgtype":"m.emote"},"ts":1316617860000,"senderName":"rillian_","senderId":"rillian_@irc"},
{"content":{"body":"oh Björn had his spiel again about XMLHttpRequest not having a test suite","msgtype":"m.text"},"ts":1316622600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"trololol","msgtype":"m.text"},"ts":1316622601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought you wrote a test suite for XHR","msgtype":"m.text"},"ts":1316622840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah Ms2ger pointed that out","msgtype":"m.text"},"ts":1316622900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, test suites","msgtype":"m.text"},"ts":1316623200000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I need to look at my notes about invalid EventSource tests","msgtype":"m.text"},"ts":1316623260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: but in any case, thanks for writing tests!","msgtype":"m.text"},"ts":1316623320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, they've been around for a year now...","msgtype":"m.text"},"ts":1316623321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"xhr and eventsource?","msgtype":"m.text"},"ts":1316623380000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"do you happen to have tests for xhr.timeout already?","msgtype":"m.text"},"ts":1316623381000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(someone is implementing that)","msgtype":"m.text"},"ts":1316623382000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I have not written tests for any of the new features and I don't think I should","msgtype":"m.text"},"ts":1316623440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's bad to write both the spec and the tests","msgtype":"m.text"},"ts":1316623441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1316623500000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk, so what should I recommend instead of replaceWholeText?","msgtype":"m.text"},"ts":1316623920000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, parentNode.normalize() and then setting data?","msgtype":"m.text"},"ts":1316624220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe just say to use textContent","msgtype":"m.text"},"ts":1316624280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Takk","msgtype":"m.text"},"ts":1316624400000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"graag gedaan","msgtype":"m.text"},"ts":1316624460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.onderhond.com/blog/work/rel-next-prev-google","msgtype":"m.text"},"ts":1316624640000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"verbose\"","msgtype":"m.text"},"ts":1316625240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also seems like what Google is doing is the whole point behind having such attribute values","msgtype":"m.text"},"ts":1316625300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that you can offer different UI","msgtype":"m.text"},"ts":1316625301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: ooh, second time an \"assistant-resolved\" bug got escalated :-)","msgtype":"m.text"},"ts":1316625540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hey","msgtype":"m.text"},"ts":1316625840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"deadline coming up","msgtype":"m.text"},"ts":1316625841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-html/2011May/0162.html","msgtype":"m.text"},"ts":1316625842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sort of forgot about that","msgtype":"m.text"},"ts":1316625843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only 175 for HTML5","msgtype":"m.text"},"ts":1316625960000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"30 bugs to WONTFIX per day :p","msgtype":"m.text"},"ts":1316626020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noticed http://www.w3.org/Bugs/Public/show_bug.cgi?id=13684 (on event handlers and DOM Events) while looking through those bugs; been meaning to write about that so that was nice","msgtype":"m.text"},"ts":1316627220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, it's already text/vtt I see","msgtype":"m.text"},"ts":1316627760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i sort of like the idea of dropping \"web\" from webvtt, simply because there's nothing about it that's web-specific, and having \"web\" in there could (minorly) hinder adoption","msgtype":"m.text"},"ts":1316627940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"only casually, though, it's already had one name change","msgtype":"m.text"},"ts":1316628000000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(on the other hand, \"vtt\" is slightly less googlable than \"webvtt\")","msgtype":"m.text"},"ts":1316628120000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, we could still call it WebVTT (although I don't think it's a good idea to prefix specifications with random words such as \"X\" or \"Web\"), just not have \"Web\" become an intrinsic part of the format","msgtype":"m.text"},"ts":1316628420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it's baked into the name of the spec, that's what people will call it, so the file header probably doesn't matter much at that point","msgtype":"m.text"},"ts":1316628480000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well, i guess what people end up calling it is out of our hands--if people name the files *.vtt they may call it \"vtt\" no matter what we do","msgtype":"m.text"},"ts":1316628540000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: I wanted the signature to be \"WEBVTT FILE\", it's already been reduced to \"WEBVTT\". I don't think we should go down even further.","msgtype":"m.text"},"ts":1316628541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess in the end it's just another string, like XMLHttpRequest","msgtype":"m.text"},"ts":1316628720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Not that WEBVTT is that bad ;))","msgtype":"m.text"},"ts":1316628780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WEBVtt?","msgtype":"m.text"},"ts":1316628781000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"WEBVtt to represent a file format name WebVTT? that's a mind-bender :)","msgtype":"m.text"},"ts":1316628840000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"named","msgtype":"m.text"},"ts":1316628841000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hey you can now search in Google+","msgtype":"m.text"},"ts":1316628900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it looks like style=\"border-width: initial; border-color: initial\" is unremovable via CSSOM in WebKit.","msgtype":"m.text"},"ts":1316632680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":". . .","msgtype":"m.text"},"ts":1316632681000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!doctype%20html%3E%0A%3Cdiv%20style%3D%22border-width%3A%20initial%3B%20border-color%3A%20initial%22%3E%3C%2Fblockquote%3E%0A%3Cscript%3E%0Avar%20div%20%3D%20document.querySelector(%22div%22)%3B%0Adiv.style.borderWidth%20%3D%20%22%22%3B%0Adiv.style.removeProperty(%22border-width%22)%3B%0Adiv.style.removeProperty(%22borderWidth%22)%3B%0Adelete%20div.style.borderWidth%3B%0A%3C%2Fscript%3E","msgtype":"m.text"},"ts":1316632682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"https://bugs.webkit.org/show_bug.cgi?id=68551","msgtype":"m.text"},"ts":1316633160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I would like to see ignoring CAPS LOCK state while using <input type=password>. Caps Lock usually does nothing good on those fields and is annoying :P (because you don't see you write with other case).","msgtype":"m.text"},"ts":1316633460000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"But then, some might use passwords full of uppercase letters...","msgtype":"m.text"},"ts":1316633461000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"just mimic WinXP's \"AWOOGA AWOOGA you've got caps lock on\" tooltip on top of password boxes (if there was a way to detect it, of course)","msgtype":"m.text"},"ts":1316633520000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I don't think you could check Caps Lock state using JS","msgtype":"m.text"},"ts":1316633521000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"thus if there was :)","msgtype":"m.text"},"ts":1316633522000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Of course you could write passwords in database in lowercase or just try two passwords with each login (specified password and letter case flipped password), but that would lower the security.","msgtype":"m.text"},"ts":1316633580000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"(some might argue that showing something like that is the browser's job, though I think that would be a bit visually invasive for browsers to do on every site)","msgtype":"m.text"},"ts":1316633581000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"GlitchMr, doesn't IE10 alert you if your caps lock key is on when you're typing in password inputs?","msgtype":"m.text"},"ts":1316633640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"All browsers should just do that.","msgtype":"m.text"},"ts":1316633641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's only sensible.","msgtype":"m.text"},"ts":1316633642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Makes sense...","msgtype":"m.text"},"ts":1316633760000,"senderName":"GlitchMr","senderId":"GlitchMr@irc"},
{"content":{"body":"GlitchMr: Some people have learned to type using caps lock for any sequence of two or more uppercase letters","msgtype":"m.text"},"ts":1316635980000,"senderName":"RobbertAtWork","senderId":"RobbertAtWork@irc"},
{"content":{"body":"TabAtkins: yt? i'm trying to figure out what to do w/ height:auto on a vertical flexbox.","msgtype":"m.text"},"ts":1316639220000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: vertical writing-mode shrinkwraps using the initial containing block as the height","msgtype":"m.text"},"ts":1316639280000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: it seems like we should do the same for flexbox","msgtype":"m.text"},"ts":1316639340000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan, here","msgtype":"m.text"},"ts":1316640720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree.","msgtype":"m.text"},"ts":1316640721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: on further thought, i'm going to propose to the wg that the writing-mode spec change","msgtype":"m.text"},"ts":1316640722000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: and i think flexbox should match","msgtype":"m.text"},"ts":1316640723000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1316640724000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'll post shortly...but basically, if there is an available height for a height:auto flexbox, i think we should fill it instead of shrinkwrapping","msgtype":"m.text"},"ts":1316640840000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"TabAtkins: only shrinkwrap in the case of not having an available height and in that case, shrinkwrap using the height of the initial containing block","msgtype":"m.text"},"ts":1316640841000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Oh, so <div height=300px><vbox height=auto>...</vbox></div> would make the vbox 300px tall?","msgtype":"m.text"},"ts":1316640900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As a developer, that's what I'd expect from height:100%, not from height: auto.","msgtype":"m.text"},"ts":1316641020000,"senderName":"mkanat","senderId":"mkanat@irc"},
{"content":{"body":"ojan: ^^^?","msgtype":"m.text"},"ts":1316641021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mkanat: I agree, if that's the behavior he's referring to.","msgtype":"m.text"},"ts":1316641080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it makes height consistent w/ width","msgtype":"m.text"},"ts":1316641140000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: But height isn't consistent with width in general.  If you're embedding a vbox into a block element, I'd expect height:auto to work like height:auto does for any other element.","msgtype":"m.text"},"ts":1316641200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(We need the 'fill' value for width/height which gives you the width:auto behavior explicitly, which we could then also use with height.)","msgtype":"m.text"},"ts":1316641201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"At the workshop today\"","msgtype":"m.text"},"ts":1316643720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what workshop?","msgtype":"m.text"},"ts":1316643721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The schema.org workshop, presumably.","msgtype":"m.text"},"ts":1316643780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can no longer keep up with all the semi-secret meetings","msgtype":"m.emote"},"ts":1316643781000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you're not missing anything","msgtype":"m.text"},"ts":1316643782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(from the whatwg perspective anyway)","msgtype":"m.text"},"ts":1316643783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can someone teach me what a singular transform matrix's implications are?","msgtype":"m.text"},"ts":1316643900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wikipedia's math pages are inpenetrable","msgtype":"m.text"},"ts":1316643960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A simular matrix doesn't have an inverse, so I guess once loses information e.g. by mapping points from an area onto a line","msgtype":"m.text"},"ts":1316644020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't know if that is helpful","msgtype":"m.emote"},"ts":1316644080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie, it has derivative zero.  It's not invertible.  Geometrically, it multiplies areas by zero, so in two dimensions, it maps planes to points or lines.","msgtype":"m.text"},"ts":1316644081000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anything specific you want to know?","msgtype":"m.text"},"ts":1316644082000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Singular vs. invertible is one of the basic differences you can have with matrices, so there are tons of things to say about it.","msgtype":"m.text"},"ts":1316644140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if you have a plane and your transform it by a singular matrix, where is the resulting point or line?","msgtype":"m.text"},"ts":1316644141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess it's got zero thickness so it doesn't matter","msgtype":"m.text"},"ts":1316644200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1316644201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i'm trying to work out why browsers can't just implement the spec with singular matrices, instead needing some special text for them","msgtype":"m.text"},"ts":1316644202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If it's a regular 2x2 matrix, it will map the plane to either the origin or a line through the origin.  If it's an augmented matrix, it transforms affinely instead of linearly, so the point or line can be anywhere.","msgtype":"m.text"},"ts":1316644203000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What exactly constitutes \"singular\" when your matrix's values are floating-points is nonobvious.","msgtype":"m.text"},"ts":1316644260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"by derivative, AryehGregor meant determinant","msgtype":"m.text"},"ts":1316644261000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"AryehGregor: yeah that's why i was hoping there'd be a nice way to not answer the question","msgtype":"m.text"},"ts":1316644262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I did.  How embarrasing.","msgtype":"m.text"},"ts":1316644263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"embarrassing.","msgtype":"m.text"},"ts":1316644264000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, your questions have veered into the highly practical, so I don't think my expertise will be of much use.","msgtype":"m.text"},"ts":1316644320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1316644321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it really depends on the wording of the spec whether it needs to make a special case for singular matrices","msgtype":"m.text"},"ts":1316644322000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"likewise for code","msgtype":"m.text"},"ts":1316644380000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"but there are some things where it's certainly unavoidable","msgtype":"m.text"},"ts":1316644381000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"like if we add an API for getting \"coordinates in the space of element A\" to \"... of element B\"","msgtype":"m.text"},"ts":1316644382000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"if there's a singular transform between them, then there's no answer to the question in one direction (except for a narrow set of points) and lots of answers the other way","msgtype":"m.text"},"ts":1316644440000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"likewise, there are a bunch of algorithms that have a \"divide by the determinant\" step, which doesn't work so well when it's 0.  Usually such algorithms don't make any sense to apply to singular transforms anyway.","msgtype":"m.text"},"ts":1316644500000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, ^","msgtype":"m.text"},"ts":1316644501000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1316644502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the spec still needs to say what it does (return 0, throw exception, etc.)","msgtype":"m.text"},"ts":1316644503000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"well luckily for me i don't think i have anything that returns points or divides anything by anything","msgtype":"m.text"},"ts":1316644560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however","msgtype":"m.text"},"ts":1316644561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"people have nonetheless asked the question","msgtype":"m.text"},"ts":1316644562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(e.g., when animating transforms, the fallback case is to decompose the matrix and animate the pieces -- and the decomposition algorithm doesn't work on singular matrices)","msgtype":"m.text"},"ts":1316644563000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"asked the question about what?","msgtype":"m.text"},"ts":1316644620000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"\"what should happen if you have a singular transformation matrix\"","msgtype":"m.text"},"ts":1316644621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. if you call c.scale(0,1); and then c.fill(); with a path","msgtype":"m.text"},"ts":1316644680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, so these are questions about canvas","msgtype":"m.text"},"ts":1316644681000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"I think that's easy: nothing.","msgtype":"m.text"},"ts":1316644682000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"though if the path was set *before* the scale...?","msgtype":"m.text"},"ts":1316644800000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"the path is non-zero","msgtype":"m.text"},"ts":1316644801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(does the scale affect it?)","msgtype":"m.text"},"ts":1316644802000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"the fill is all that is scaled","msgtype":"m.text"},"ts":1316644803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmmm, I don't remember canvas well enough to discuss this intelligently","msgtype":"m.text"},"ts":1316644804000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"istm the canvas spec should align with the 2d/3d css transforms specs","msgtype":"m.text"},"ts":1316644860000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"if img1 is a mostly green image, in webkit, this is a mostly green rectangle:","msgtype":"m.text"},"ts":1316644920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  c.beginPath(); c.rect(100,100,100,100); c.fillStyle = c.createPattern(img1, 'repeat');","msgtype":"m.text"},"ts":1316644921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  c.scale(0.000000000000000000000000000000000001,1);","msgtype":"m.text"},"ts":1316644922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"  c.fill();","msgtype":"m.text"},"ts":1316644923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but if i add one \"0\" to that number, it no longer paints anything.","msgtype":"m.text"},"ts":1316644924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because repeating a zero-width image across the plane doesn't make much sense","msgtype":"m.text"},"ts":1316644980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what about if the fill is a color?","msgtype":"m.text"},"ts":1316644981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it does nothing, does the globalCompositeOperation still apply?","msgtype":"m.text"},"ts":1316645040000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"if i do c.globalCompositeOperation=\"copy\"; c.scale(0,1); makePath(c); c.fill();","msgtype":"m.text"},"ts":1316645041000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"is my canvas now empty?","msgtype":"m.text"},"ts":1316645042000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"not in webkit","msgtype":"m.text"},"ts":1316645100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however","msgtype":"m.text"},"ts":1316645101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If we had perfect precision, all this stuff would be well-defined.  But some things suddenly behave differently at determinant zero compared to determinant epsilon, and there's no difference with floating-point . . .","msgtype":"m.text"},"ts":1316645102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I think the reason the spec doesn't return points or divide anything by anything is that it doesn't actually define the algorithms to render things (which can do those things)","msgtype":"m.text"},"ts":1316645103000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"if you set it to   c.scale(0.000000000000000000000000000000000001,1);","msgtype":"m.text"},"ts":1316645160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then it is empty","msgtype":"m.text"},"ts":1316645161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there's a difference between c.scale(0.000000000000000000000000000000000001,1);, c.scale(0.00000000000000000000000000000000001,1);, and c.scale(0.00000000000000000000000000000000000,1);","msgtype":"m.text"},"ts":1316645162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is, c.scale(1e-36,1);, c.scale(1e-37,1); and c.scale(0,1);","msgtype":"m.text"},"ts":1316645220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: yeah, i was just noticing that nothing actually says how fill() paints a repeating pattern","msgtype":"m.text"},"ts":1316645221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sound like FLT_MIN","msgtype":"m.text"},"ts":1316645222000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"*Sounds","msgtype":"m.text"},"ts":1316645223000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip` or zewt or anyone who might know: how does EBS pricing work if you maintain the volume for less than an integer number of months?  It doesn't say whether they round or what.","msgtype":"m.text"},"ts":1316645880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least that I see.","msgtype":"m.text"},"ts":1316645881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"they measure it in \"GB-months\", which I think means to multiply by the amount of time, eg. 2 GB for two weeks is one GB-month","msgtype":"m.text"},"ts":1316646420000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(don't use a petabyte of storage and blame me for the billing if I'm wrong, though)","msgtype":"m.text"},"ts":1316646480000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that sounds equivalent to saying that they average the disk usage over each month","msgtype":"m.text"},"ts":1316646540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i regularly create large temporary volumes for things and delete them after a day or two; i'm sure they don't take the maximum or anything like that","msgtype":"m.text"},"ts":1316646600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i wonder how often they sample","msgtype":"m.text"},"ts":1316646720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They're providing block devices, not filesystems, so they don't have to sample.  They can just record the creation and destruction times of each volume.","msgtype":"m.text"},"ts":1316646960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://www.reddit.com/r/reddit.com/comments/kn327/wifes_ipad_i_just_wanted_to_play_angry_birds/ hahaha","msgtype":"m.text"},"ts":1316647020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: http://serverfault.com/questions/197379/amazon-ebs-charges-calculation says hourly","msgtype":"m.text"},"ts":1316647800000,"senderName":"Philip`","senderId":"Philip`@irc"}
]