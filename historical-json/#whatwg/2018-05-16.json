[
{"content":{"body":"am I right in thinking replacing <a name> with <a id> is non-conforming, given it violates the semantics of the a element?","msgtype":"m.text"},"ts":1526488051000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That seems reasonable; you should use <span id>","msgtype":"m.text"},"ts":1526488094000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that makes it much harder to programmatically replace though","msgtype":"m.text"},"ts":1526488123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1526488130000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Replacing an `<a name>` without an href with a `<span id>` seems easy enough; if it has an href then you can leave it as an `<a>` and just swap the attribute.","msgtype":"m.text"},"ts":1526488891000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: are we thinking just an “example” is required for the referrerpolicy attr PR, to show that the policy is communicated downwards to imports or do we need more normative text too?","msgtype":"m.text"},"ts":1526490741000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I’m thinking just an example","msgtype":"m.text"},"ts":1526490749000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: Just an example should be fine, yeah","msgtype":"m.text"},"ts":1526492459000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why is counter() limited to content property only? Wouldn't it make sense to allow it to be used for other properties?","msgtype":"m.text"},"ts":1526501220000,"senderName":"Alystair","senderId":"Alystair@irc"},
{"content":{"body":"eg. I want to reverse the z-index of my H2 tags that are position:sticky to the bottom of the viewport","msgtype":"m.text"},"ts":1526501300000,"senderName":"Alystair","senderId":"Alystair@irc"},
{"content":{"body":"Alystair: It's not, but it returns a <string>, which is accepted by very few properties.","msgtype":"m.text"},"ts":1526501828000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(But in practice, browsers might not have support for using counter() in other places that take <string>...)","msgtype":"m.text"},"ts":1526501846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah right, it's a string because counter can be something other than int... duh","msgtype":"m.text"},"ts":1526514706000,"senderName":"Alystair","senderId":"Alystair@irc"},
{"content":{"body":"Alystair: Can you show a demo / snippet of the issue? It seems to me that position-sticky use cases are typically siblings, which would normally not be overlapping with the native sticky behaviour. So their dom order (default z-index essentially) wouldn't be an issue.","msgtype":"m.text"},"ts":1526514835000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"The example  at MDN / https://css-tricks.com/position-sticky-2/ uses top-aligned items, but the next current item does not overlap the previous current item. instead, they are pushed out of the way.","msgtype":"m.text"},"ts":1526514904000,"senderName":"Krinkle","senderId":"Krinkle@irc"}
]