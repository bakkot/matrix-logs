[
{"content":{"body":"Domenic: I figured you’d like that change","msgtype":"m.text"},"ts":1512526066000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when you have time, please test and let me know if I missed anything","msgtype":"m.text"},"ts":1512526097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean for that whole PR","msgtype":"m.text"},"ts":1512526102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all the script and style stuff","msgtype":"m.text"},"ts":1512526115000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/validator/validator/issues/560 that is","msgtype":"m.text"},"ts":1512526137000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: FYI, I added integrated CSS checking of <style> contents to the HTML checker","msgtype":"m.text"},"ts":1512526189000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"using the same backend code from the W3C CSS checker","msgtype":"m.text"},"ts":1512526219000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: as I've said for about a decade, that data model is broken 😊","msgtype":"m.text"},"ts":1512551747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's the initial value of https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#selection-direction  ?","msgtype":"m.text"},"ts":1512551769000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I don't know, but it seems like it should depend on the platform","msgtype":"m.text"},"ts":1512551831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If the platform doesn't \"support that direction\" (as in the next sentence), would it ever be appropriate to return \"none\" from the getter?","msgtype":"m.text"},"ts":1512551911000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: if it doesn't support \"none\" I don't think it should be","msgtype":"m.text"},"ts":1512552054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"files an issue to clarify","msgtype":"m.emote"},"ts":1512552065000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but I agree that it's a little vague in the same way your initial test was vague","msgtype":"m.text"},"ts":1512552073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really hope we can at some point abstract these \"depends on platform\" better so it's clear what kind of variability there is (and which variability is tightly coupled)","msgtype":"m.text"},"ts":1512552148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I'm pretty sure https://www.w3.org/Bugs/Public/show_bug.cgi?id=23056 can be closed, but I can't find the corresponding commit","msgtype":"m.text"},"ts":1512556846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, I'll take a look","msgtype":"m.text"},"ts":1512556942000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: speaking of IDL things, is providing \"this\" as a reference for spec algorithms to use on the list of priorities?","msgtype":"m.text"},"ts":1512558270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1512558352000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: also, it seems you didn't reply to https://github.com/heycam/webidl/pull/423#pullrequestreview-77122347","msgtype":"m.text"},"ts":1512558580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wasn't too sure the first part was a question or a statement. I should have asked.","msgtype":"m.text"},"ts":1512558821000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Now I realize it probably was a request to sync. :)","msgtype":"m.text"},"ts":1512558840000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: wrt to the second part of the question, I assumed there were open issues against wpt and idlharness in https://github.com/heycam/webidl/issues/365, but there are none.","msgtype":"m.text"},"ts":1512559106000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah, was just trying to get a plan of action","msgtype":"m.text"},"ts":1512559498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I can take more actions","msgtype":"m.text"},"ts":1512559503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: might actually do this today and take a break from the MIME type zone","msgtype":"m.text"},"ts":1512559524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: what would be a good name for this project so I can give it a label?","msgtype":"m.text"},"ts":1512560081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: tobie: I'm gonna go with \"needed-for-js\" for now","msgtype":"m.text"},"ts":1512560121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think wycatz previously looked into this, calling it \"JSIDL\". I like that name.","msgtype":"m.text"},"ts":1512560132000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"wycats","msgtype":"m.text"},"ts":1512560148000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"good call","msgtype":"m.text"},"ts":1512560159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sprinkled that label around","msgtype":"m.text"},"ts":1512560240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, tobie, Domenic: Thanks for all your help here. Thomas Wood from ICL (@IgnoredAmbiance) is also interested in getting involved here, maybe from a standpoint of using this IDL to improve automated analyses/implementation of the JS spec. I'll send him this label; if you have any ideas for what he could work on, that would be helpful","msgtype":"m.text"},"ts":1512560263000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: it would be good to hear some of the requirements that others might have to make this successful in order to determine priorities","msgtype":"m.text"},"ts":1512560373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: adding missing features is probably the least involved at this point; the other things require a good bit more coordination","msgtype":"m.text"},"ts":1512560413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: and by others I mean TC39 primarily","msgtype":"m.text"},"ts":1512560439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We've already discussed the effort in a few forums that TC39 members can see; to reach more of them, a presentation about the problem at TC39 would probably be helpful","msgtype":"m.text"},"ts":1512561133000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"maybe Domenic is thinking of giving that; otherwise, I'd be happy to arrange for you or tobie to call in to explain the ideas and ask for feedback","msgtype":"m.text"},"ts":1512561170000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"what surprised me in the last couple days is how interested the WebIDL community is to making changes to WebIDL to make this work--this would be an important thing to communicate to TC39","msgtype":"m.text"},"ts":1512561494000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I see, I've always supported doing this, but to a large extent it's that we need resources to make it happen","msgtype":"m.text"},"ts":1512561560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: in particular the syntax changes require quite a bit of dedicated effort to get right","msgtype":"m.text"},"ts":1512561581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which of the syntax changes seem plausible to you?","msgtype":"m.text"},"ts":1512561637000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"maybe we can find help in the TC39 community here, once the problem and areas for work are presented","msgtype":"m.text"},"ts":1512562025000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I have some concerns with attributes, but in principle I love all of them","msgtype":"m.text"},"ts":1512562039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: I put the attribute concerns in a new issue","msgtype":"m.text"},"ts":1512562052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: I also like how your changes are fairly pragmatic","msgtype":"m.text"},"ts":1512562469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: e.g., it's not \"please do away with all your number types\", but \"alias double with Number\" (and potentially drop double)","msgtype":"m.text"},"ts":1512562500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: fwiw, I've been trying to push for convergence between roughly speaking node.js and Web JS for quite some time. In a sense, this is just underlying infra work to make that longer term, higher level goal happen.","msgtype":"m.text"},"ts":1512562767000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That's already happening, but this would simplify it","msgtype":"m.text"},"ts":1512563102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I think I closed all legacy IDL bugs that could be closed","msgtype":"m.text"},"ts":1512563729000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, wow! Thanks!","msgtype":"m.text"},"ts":1512563834000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: would it make sense to add an \"exclude query\" flag to URL serializing, or should I just copy my URL record, unset the query, and serialize that if that's the behavior I want?","msgtype":"m.text"},"ts":1512565121000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: unset for now, since it's not widespread I think, but I'd love to know where we want to lose it","msgtype":"m.text"},"ts":1512565242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in this case it's for blob URLs where (firefox, but not chrome) ignores query strings when resolving them.","msgtype":"m.text"},"ts":1512565343000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"but yeah, there's a couple of ways I can get that behavior without changing serialization behavior","msgtype":"m.text"},"ts":1512565402000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: maybe Firefox is wrong?","msgtype":"m.text"},"ts":1512565988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mek: given that you can't get such URLs to begin with, I'm not sure why that shouldn't just be a mismatch in the store","msgtype":"m.text"},"ts":1512566010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, looking back at the bugs filed agains blink and webkit for this and the resulting discussion that does seem like the most sensible outcome","msgtype":"m.text"},"ts":1512566025000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"yeah, consumers of exclude query just went back to 0","msgtype":"m.text"},"ts":1512566050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay*","msgtype":"m.text"},"ts":1512566054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Arguably the current URL spec agrees with firefox in that it only looks at url's path[0] to look up an entry in the blob URL store (which would mean query strings are ignored), but without actually having a well defiend lookup process that step is pretty ambigious anyway","msgtype":"m.text"},"ts":1512566131000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: hmm yeah, I guess the question is how the lookup should work and what is stored in the db","msgtype":"m.text"},"ts":1512566331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: that validator change broke building HTML I’m pretty sure","msgtype":"m.text"},"ts":1512568115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks, that was my intention. I don't actually see any feature or syntax that I'd want to add which actually contradicts what WebIDL already has; at worst, things would be redundant and overlapping in confusing ways (which is really not great to have long-term)","msgtype":"m.text"},"ts":1512571782000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: any such cases also seem like something we'd want to work through and either make disappear or call one legacy and continue with the other","msgtype":"m.text"},"ts":1512572953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: what's the context on having ECMAScript use Web IDL? Is there a GitHub issue or something I can read through?","msgtype":"m.text"},"ts":1512581141000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: inconsistent method definitions are appearing","msgtype":"m.text"},"ts":1512581235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...like?","msgtype":"m.text"},"ts":1512581247000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: littledan has examples, might be Intl mostly","msgtype":"m.text"},"ts":1512581273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, overarching issue would be good or maybe a proposal repo","msgtype":"m.text"},"ts":1512581322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also I understand WebAssembly is going to use Bikeshed for its API spec... is there a repo for that yet?","msgtype":"m.text"},"ts":1512581371000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"PR for WebAssembly using WebIDL: https://github.com/WebAssembly/spec/pull/591","msgtype":"m.text"},"ts":1512581517000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"there's no issue tying the WebIDL/ES thing all together; it is very early","msgtype":"m.text"},"ts":1512581537000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"for new ECMAScript specs, we're sticking to specific conventions and I don't think new things deviate from each other, but there's a lot of copypasta and it's difficult to author and review","msgtype":"m.text"},"ts":1512581583000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"lots of new proposals needlessly deviate early in their development by not having a clear model for what to follow","msgtype":"m.text"},"ts":1512581616000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"if we want to add to the JS standard library, I'm worried the current process won't scale","msgtype":"m.text"},"ts":1512581637000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"tobie: it's not ES properties vs IDL attributes that's the difference, but how their names are used. See https://github.com/heycam/webidl/pull/483#issuecomment-349491093","msgtype":"m.text"},"ts":1512582330000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"between whether or not \"'s are used","msgtype":"m.text"},"ts":1512582365000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: yeah, didn't mean to imply a prop vs attr diff, but precisely how their names were used.","msgtype":"m.text"},"ts":1512582385000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: wait so is <code>entries</code> what you're suggesting","msgtype":"m.text"},"ts":1512582443000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"or rather <code>\"entries\"</code>","msgtype":"m.text"},"ts":1512582451000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"or just \"entries\"","msgtype":"m.text"},"ts":1512582507000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: so my rationale was to say that if you're saying: the x named \"foo\"","msgtype":"m.text"},"ts":1512582534000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"… you're really just putting quotes around a word, and there's no particular reason do mark it up specially in any other way.","msgtype":"m.text"},"ts":1512582575000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: we agree that <code class=idl>foo</code> describes the idl thing itself.","msgtype":"m.text"},"ts":1512582645000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"The difference being the name isn't a word. It's an identifier. That leads back to the original problem: I want to be very clear about the spacing in identifiers, and monospace font is the best way to do that","msgtype":"m.text"},"ts":1512582715000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"otherwise we can get \"<LF>identifier\" because of automatic word wrapping rather than \" identifier\" as intended","msgtype":"m.text"},"ts":1512582752000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: but those aren't identifiers, they're JS (infra) strings, no?","msgtype":"m.text"},"ts":1512582783000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: there's a difference between saying: the x named \"foo\" and the value of x is (the string) \"<code>foo</foo>\"","msgtype":"m.text"},"ts":1512582852000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm not sure we are talking about the same thing","msgtype":"m.text"},"ts":1512582920000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: we're not (that's what what I'm failing to point out)","msgtype":"m.text"},"ts":1512582949000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"deep breathe","msgtype":"m.emote"},"ts":1512582975000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"so there are a few scenarios. I'm going to list all of them out, and you tell me what you think should be the case","msgtype":"m.text"},"ts":1512583007000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"1. Call the then property of |O|.","msgtype":"m.text"},"ts":1512583035000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: the spacing issue arose in what is clearly a string (https://heycam.github.io/webidl/#ref-for-dfn-class-string)","msgtype":"m.text"},"ts":1512583050000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"2. If |O| has a property called then","msgtype":"m.text"},"ts":1512583064000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"3. If |str| is \"then\"","msgtype":"m.text"},"ts":1512583075000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"tobie: yes, but it's concatenating an identifier with a string, which is implicitly saying that identifiers *are* strings","msgtype":"m.text"},"ts":1512583120000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: well, well, well...","msgtype":"m.text"},"ts":1512583177000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"or is that a stretch","msgtype":"m.text"},"ts":1512583202000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: Frankly, that's questionable either way","msgtype":"m.text"},"ts":1512583233000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But let me address your 1-3 examples first","msgtype":"m.text"},"ts":1512583254000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: encodeURI is close to USVString, but not close enough","msgtype":"m.text"},"ts":1512583255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and to make things worse property names in JS are strings, not identifiers, while they in IDL are identifiers, not strings","msgtype":"m.text"},"ts":1512583258000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"so (3) is clearly: If |str| is \"<code>then</code>\"","msgtype":"m.text"},"ts":1512583314000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(1) should be: Call the <code class=idl>then</code> property of |O|. (to follow the ES convention)","msgtype":"m.text"},"ts":1512583370000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(2) I find weird and I think it the contentious one.","msgtype":"m.text"},"ts":1512583414000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":" If we said something like: If |O| has a property whose identifier is then","msgtype":"m.text"},"ts":1512583475000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"that would only work for a subset, since JS property names can have spaces in them","msgtype":"m.text"},"ts":1512583538000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I was suggesting these should be quoted: \"then\"","msgtype":"m.text"},"ts":1512583577000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Agreed on the quoted. But should there be <code>?","msgtype":"m.text"},"ts":1512583614000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"so: If |O| has a property called \"then\"","msgtype":"m.text"},"ts":1512583623000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"possibly","msgtype":"m.text"},"ts":1512583641000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"but then not with class=idl","msgtype":"m.text"},"ts":1512583654000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1512583679000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"because we're really referring to them as either a string or just a quoted piece of text","msgtype":"m.text"},"ts":1512583684000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"not as an idl thing","msgtype":"m.text"},"ts":1512583693000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"for example, you could write:","msgtype":"m.text"},"ts":1512583708000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Is there no precedent in ECMAScript to follow?","msgtype":"m.text"},"ts":1512583709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there are, but ES doesn't have the <code class=idl> vs <code> distinction.","msgtype":"m.text"},"ts":1512583747000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"let |k| be the string \"<code>foo</foo>\"","msgtype":"m.text"},"ts":1512583778000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"call the property |k| of |O|","msgtype":"m.text"},"ts":1512583778000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"you don't really know that k is going to be used as an idl prop until it is","msgtype":"m.text"},"ts":1512583801000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That makes sense","msgtype":"m.text"},"ts":1512583819000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"So the *definitions* in the spec currently follow the form \"a property named “forEach” must exist with attributes\"","msgtype":"m.text"},"ts":1512583857000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"So I don't really have an opinion as to whether these should be \"<code>txt</code>\" or just \"txt\",","msgtype":"m.text"},"ts":1512583857000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I see, I guess I didn't know about class=idl","msgtype":"m.text"},"ts":1512583862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I don't like the class=idl part","msgtype":"m.text"},"ts":1512583867000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"would it be better to have \"a <code class=idl>forEach</code> property must exist with attributes\", or \"a property named \"<code>forEach</code>\" must exist with attributes\"","msgtype":"m.text"},"ts":1512583902000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: I'd go with the former","msgtype":"m.text"},"ts":1512583936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really care either way","msgtype":"m.text"},"ts":1512583943000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1512583949000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1512583959000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: thanks a bunch, I'll merge this as soon as you fix it","msgtype":"m.text"},"ts":1512584021000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll come back to this later. there's a wildfire burning 3km from me","msgtype":"m.text"},"ts":1512584046000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"and the power just went out","msgtype":"m.text"},"ts":1512584204000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: shit, take care","msgtype":"m.text"},"ts":1512585137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1512585151000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"tobie: one last question: what about: an interface named \"abc\"","msgtype":"m.text"},"ts":1512586369000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I'll go with \"<code>abc</abc>\"","msgtype":"m.text"},"ts":1512586426000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"and what about: the identifier \"abc\"? I'm going with: the identifier \"<code class=idl>abc</code>\" but you might have different opinions","msgtype":"m.text"},"ts":1512586601000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"ES uses: https://tc39.github.io/ecma262/#sec-identifiers-static-semantics-early-errors","msgtype":"m.text"},"ts":1512587374000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: ^","msgtype":"m.text"},"ts":1512587379000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TimothyGu: so <code>\"txt\"</code>","msgtype":"m.text"},"ts":1512587490000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"We should probably just used: \"<code>txt</code>\"","msgtype":"m.text"},"ts":1512587525000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Here again, it's just a string","msgtype":"m.text"},"ts":1512587539000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1512587688000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"Oh no, don't catch on fire TimothyGu, that would be bad.","msgtype":"m.text"},"ts":1512589622000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"lol indeed","msgtype":"m.text"},"ts":1512589666000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I don't have any personal experience of catching on fire, but I imagine it wouldn't be greate.","msgtype":"m.text"},"ts":1512590051000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*great","msgtype":"m.text"},"ts":1512590054000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]