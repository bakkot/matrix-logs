[
{"content":{"body":"Does a DocumentFragment contain a \"Document\" object?","msgtype":"m.text"},"ts":1590345057000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"What I'm trying find out is: if you have a script inside a template element, what's the script's \"parser document\"? The outer document? Or is there another parser created for the DocumentFragment, that parses the script element?","msgtype":"m.text"},"ts":1590345186000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Great question...","msgtype":"m.text"},"ts":1590346743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<template>s all share a separate no-browsing context document","msgtype":"m.text"},"ts":1590346756000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But I think the parser still operates on the main document... let's see...","msgtype":"m.text"},"ts":1590346762000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, \"Set the element's parser document to the Document\", not a lot of precision there... :-/","msgtype":"m.text"},"ts":1590346801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"domfarolino: My read of the spec is that the parser document is the outer document. All the handling of the template contents and template contents owner document seems to happen at insertion (in https://html.spec.whatwg.org/#appropriate-place-for-inserting-a-node), whereas setting the \"parser document\" seems to happen at element creation.","msgtype":"m.text"},"ts":1590346970000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://bugs.chromium.org/p/chromium/issues/detail?id=1070667","msgtype":"m.text"},"ts":1590347015000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"This bug seems to want to change what the parser document will be, if I'm reading it correctly","msgtype":"m.text"},"ts":1590347033000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Hmm hmm","msgtype":"m.text"},"ts":1590347068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"> My read of the spec is that the parser document is the outer document.","msgtype":"m.text"},"ts":1590347082000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I agree, that's how the spec reads currently it seems","msgtype":"m.text"},"ts":1590347082000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah, Chrome seems to have this OwnerDocumentForCurrentNode() retargeting mechanism that mason seems at least interested in introducing to the spec (though no issues about it are filed under his name)","msgtype":"m.text"},"ts":1590347126000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I'd be curious to see what tests say about cross-browser behavior here, both for the case he's mentioning, and the script case.","msgtype":"m.text"},"ts":1590347146000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"My guess (not digging in too deeply) is that for the case he's mentioning Chrome is correct, and any other behavior would be bad. So the spec needs updating. But the implications of that for the script case might not be correct.","msgtype":"m.text"},"ts":1590347183000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, maybe not though, he might be wrong","msgtype":"m.text"},"ts":1590347231000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think in particular if we changed it in the way he suggests then custom elements would not work inside <template>s","msgtype":"m.text"},"ts":1590347247000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm which is maybe... correct? Weekend brain...","msgtype":"m.text"},"ts":1590347256000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(brb code searching to try and figure out the exact implications on scripts that move documents)","msgtype":"m.text"},"ts":1590347450000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: OK, I don't believe there's any consequence to scripts moved from templates => outer doc. When #prepare-a-script is initially entered for those scripts, they're not run because they're not connected. So #prepare-a-script returns early, removing the \"parser document\" from the script. Later when the script becomes connected, the \"parser document\" is never consulted in #prepare, because it is null","msgtype":"m.text"},"ts":1590348926000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Nice, that makes sense to me","msgtype":"m.text"},"ts":1590348965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"As an aside, I have a CL a brewing for the tests Chrome fails in https://wpt.fyi/results/html/semantics/scripting-1/the-script-element/moving-between-documents?label=experimental&label=master&aligned","msgtype":"m.text"},"ts":1590348994000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Oh sweet","msgtype":"m.text"},"ts":1590349084000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why does insertAdjacentElement return the resulting element, yet insertAdjacentHTML doesn't have a return value? Sensibly it should return a NodeList. Has this ever been discussed?","msgtype":"m.text"},"ts":1590358030000,"senderName":"alystair","senderId":"alystair@irc"}
]