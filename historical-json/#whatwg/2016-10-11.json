[
{"content":{"body":"can anyone think of a reason why validator should consider require-sri-for in csp header to be an error?","msgtype":"m.text"},"ts":1476150383000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"a-ja: possibly because I haven't updated the validator with the latest spec changes","msgtype":"m.text"},"ts":1476150603000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually we mostly just rely on a third-party library for CSP checking, and I have not updated to the latest version of that for many months","msgtype":"m.text"},"ts":1476150676000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/shapesecurity/salvation","msgtype":"m.text"},"ts":1476150728000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, ....looking","msgtype":"m.text"},"ts":1476150782000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"issue 144 fixed 3 months ago, eh?","msgtype":"m.text"},"ts":1476150878000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Yeah I'm using version 2.0.1, which was released in February","msgtype":"m.text"},"ts":1476151133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"please file an issue at https://github.com/validator/validator/issues if you have time","msgtype":"m.text"},"ts":1476151202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, think I'll pass that URL on to April King for possible use at observatory.mozilla.org","msgtype":"m.text"},"ts":1476151229000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Ah yeah I like that Observatory thing","msgtype":"m.text"},"ts":1476151392000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, https://github.com/validator/validator/issues/382","msgtype":"m.text"},"ts":1476151415000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"But Observatory already does CSP header checking, right?","msgtype":"m.text"},"ts":1476151437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks for raising the issue","msgtype":"m.text"},"ts":1476151459000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, found a csp parser error with it the other day....which is why i thought of it now","msgtype":"m.text"},"ts":1476151465000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1476151476000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's been fixed","msgtype":"m.text"},"ts":1476151489000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1476151502000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will try to update the validator to the latest Salvation version today","msgtype":"m.text"},"ts":1476151635000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and hope they did not make any breaking changes to their API that will require me to rewrite my code","msgtype":"m.text"},"ts":1476151707000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, sorry....got a call.   sounds good.  tks","msgtype":"m.text"},"ts":1476151857000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"can't agree more with jyasskin. Nothing beats a PR, and new issues show up as you start writing things down.","msgtype":"m.text"},"ts":1476168505000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"That is kinda why we keep discussing things there","msgtype":"m.text"},"ts":1476169987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: hey think you could give me admin access to the webidl repo? I need to set up some web hooks for a bot. Happy to relinquish afterwards, just easier to setup that way.","msgtype":"m.text"},"ts":1476179480000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I need to move it to an org to be able to do that","msgtype":"m.text"},"ts":1476179759000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: oh, really? That sucks.","msgtype":"m.text"},"ts":1476179778000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: yeah :(","msgtype":"m.text"},"ts":1476179783000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"tobie: I can either add a hook now for you, or we can discuss moving again ...","msgtype":"m.text"},"ts":1476179808000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: I'll look into the hook url and payloads I need.","msgtype":"m.text"},"ts":1476179866000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"heycam: you're still around for a little bit?","msgtype":"m.text"},"ts":1476179877000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: ok thanks, sorry for the inconvenience","msgtype":"m.text"},"ts":1476179879000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"tobie: no I have to leave the office about now :)","msgtype":"m.text"},"ts":1476179887000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: ok, will email you later so you get this by tomorrow morning","msgtype":"m.text"},"ts":1476179941000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: no problem, will add them first thing in the morning","msgtype":"m.text"},"ts":1476179950000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1476179962000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"could someone explain why there are MessageEvent and ServiceWorkerMessageEvent interfaces?","msgtype":"m.text"},"ts":1476186192000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: I think primarily because source could be something else","msgtype":"m.text"},"ts":1476186455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: I suggested we should just merge those though","msgtype":"m.text"},"ts":1476186462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, feels a bit silly to have similar events","msgtype":"m.text"},"ts":1476186481000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"which are now even inconsisten","msgtype":"m.text"},"ts":1476186487000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"t","msgtype":"m.text"},"ts":1476186489000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"one accepting null ports, one doesn't","msgtype":"m.text"},"ts":1476186498000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"etc","msgtype":"m.text"},"ts":1476186499000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: it seems like Hixie_ blocked it in https://www.w3.org/Bugs/Public/show_bug.cgi?id=28199","msgtype":"m.text"},"ts":1476186546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: well, he didn't really","msgtype":"m.text"},"ts":1476186574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: it seems nobody studied that in sufficient detail :/","msgtype":"m.text"},"ts":1476186590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"studied\"","msgtype":"m.text"},"ts":1476186600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"filed https://github.com/w3c/ServiceWorker/issues/989","msgtype":"m.text"},"ts":1476186627000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"of course there is also https://github.com/w3c/ServiceWorker/issues/988","msgtype":"m.text"},"ts":1476186682000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: oh, I filed https://github.com/w3c/ServiceWorker/issues/990","msgtype":"m.text"},"ts":1476186693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: ok, marked mine as dupe","msgtype":"m.text"},"ts":1476186749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what to implement now","msgtype":"m.text"},"ts":1476186825000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"whether .ports should be nullable or not","msgtype":"m.text"},"ts":1476186833000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(or in other words, whether I can review+ the patch which makes MessageEvent to follow the latest spec)","msgtype":"m.text"},"ts":1476186858000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I think so, unless there's some weird reason we can't change ServiceWorkerMessageEvent","msgtype":"m.text"},"ts":1476187097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But that seems unlikely","msgtype":"m.text"},"ts":1476187104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1476187116000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"or, hmm","msgtype":"m.text"},"ts":1476187119000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"is the ServiceWorkerMessageEvent.ports always set to some value when UA dispatches those events","msgtype":"m.text"},"ts":1476187149000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I guess so","msgtype":"m.text"},"ts":1476187289000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"at least to []","msgtype":"m.text"},"ts":1476187292000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"MikeSmith: can https://dvcs.w3.org/hg/xhr/raw-file/default/xhr-1/Overview.html now be a redirect to https://xhr.spec.whatwg.org/?","msgtype":"m.text"},"ts":1476189934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this focusin/out is such a nice mess too :)","msgtype":"m.text"},"ts":1476190518000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: sigh yes","msgtype":"m.text"},"ts":1476190582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in blink it is possible to have events for the same target in order: blur, focus, focusin, focusout","msgtype":"m.text"},"ts":1476190920000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and after that the element is focused","msgtype":"m.text"},"ts":1476190931000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"even though the last even it got was focusout","msgtype":"m.text"},"ts":1476190954000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"This is what you get when UI events refuses to define a processing model for years on end","msgtype":"m.text"},"ts":1476190994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers isn't convinced that's the biggest problem for some reason, but there's just so many edge cases that would suddenly be clear if we did that","msgtype":"m.text"},"ts":1476191032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, this isn't even UI events","msgtype":"m.text"},"ts":1476191093000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"this is webkit/blink  implementing something totally random","msgtype":"m.text"},"ts":1476191102000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"against even those vague hints UI events spec have about the behavior","msgtype":"m.text"},"ts":1476191135000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"The other problem with focus is that it's in part defined by HTML","msgtype":"m.text"},"ts":1476191290000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: pre and post-click-dispatch steps","msgtype":"m.text"},"ts":1476191521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: is that basically an extra iteration over event's path?","msgtype":"m.text"},"ts":1476191533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: before we call any listeners, and after all listeners are invoked?","msgtype":"m.text"},"ts":1476191546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: and we only do after if the canceled flag is still unset?","msgtype":"m.text"},"ts":1476191553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so in Gecko \"pre\" is about creating path","msgtype":"m.text"},"ts":1476191575000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"we may do some other stuff there too","msgtype":"m.text"},"ts":1476191583000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"like that type=checkbox state change","msgtype":"m.text"},"ts":1476191595000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yeah, that would become part of pre-click-dispatch","msgtype":"m.text"},"ts":1476191620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there anything else?","msgtype":"m.text"},"ts":1476191625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and post is using the path, and is a separate iteration after normal dispatch","msgtype":"m.text"},"ts":1476191634000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I guess it could be combined with creating the path, but it doesn't necessarily have to be","msgtype":"m.text"},"ts":1476191639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(In gecko '̈́post' is part of \"system group dispatch\", which is separate, not-web-visible capture-target-bubble phase after normal c-t-b, and 'post' is part of the system groups bubble phase)","msgtype":"m.text"},"ts":1476191703000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Yeah, I'm trying to get us to improve this space is a test-driven way.  We've got a number of inconsistencies between specs and implementations already, I'm skeptical that focusing primarily on improving spec quality will help much on its own.","msgtype":"m.text"},"ts":1476191728000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: it's really hard to write comprehensive tests if you don't know the processing model","msgtype":"m.text"},"ts":1476191759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: you can't really have good implementations without specs","msgtype":"m.text"},"ts":1476191767000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"rbyers: considering them each in isolation is somewhat problematic","msgtype":"m.text"},"ts":1476191778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right we need to do them all together","msgtype":"m.text"},"ts":1476191788000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"(and yes, having good specs require 2-3 implementations at leasts)","msgtype":"m.text"},"ts":1476191791000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"rbyers: and why many efforts fail (e.g., the one around contenteditable which also focused only on tests)","msgtype":"m.text"},"ts":1476191802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We can write tests from the perspective of what developers expect to happen / what sites are relying on today.","msgtype":"m.text"},"ts":1476191819000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"I agree it would be a mistake to focus only on tests","msgtype":"m.text"},"ts":1476191832000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"that's way too simplistic, imo","msgtype":"m.text"},"ts":1476191834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But in the UI events space tests have been almost entirely neglected.","msgtype":"m.text"},"ts":1476191845000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"So we have a lot of catch-up to do there before all three can really evolve together","msgtype":"m.text"},"ts":1476191867000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"tests and impls have too","msgtype":"m.text"},"ts":1476191867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"specs and impls have too*","msgtype":"m.text"},"ts":1476191873000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nothing there has meaningfully improved for a long time","msgtype":"m.text"},"ts":1476191900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm extremely skeptical you can write comprehensive tests by studying what websites do","msgtype":"m.text"},"ts":1476191918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not in isolation, no of course not","msgtype":"m.text"},"ts":1476191952000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"yeah, without some model one will miss tons of edge cases in tests","msgtype":"m.text"},"ts":1476191959000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"We have some model in the spec today, it's just weak","msgtype":"m.text"},"ts":1476191997000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"I'm not opposed to someone rewriting the spec to make more sense if one of you is volunteering ;-)","msgtype":"m.text"},"ts":1476192022000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"There's no real model in the spec imo","msgtype":"m.text"},"ts":1476192023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess at some point someone will have to, since the current approach doesn't seem to be working","msgtype":"m.text"},"ts":1476192047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it's starting to hurt other things","msgtype":"m.text"},"ts":1476192060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(as long as it's done in a forum Microsoft can participate in of course - they have a ton of good web compat experience on input behavior)","msgtype":"m.text"},"ts":1476192093000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"It's a little annoying that all the cleaning up falls to us","msgtype":"m.text"},"ts":1476192103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"UIEvents doesn't really have model. it has just a list of events basically. List of feature browser is expected to implement, but doesn't tell how the features should work. Quite similar to WebPerfWG's specs.","msgtype":"m.text"},"ts":1476192149000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"rbyers: if it actually falls to me I'll do it somewhere where I'm comfortable","msgtype":"m.text"},"ts":1476192157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not true that there haven't been real improvements here BTW","msgtype":"m.text"},"ts":1476192197000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"mouseover/out/enter/leave behavior used to be completely different between a number of engines","msgtype":"m.text"},"ts":1476192212000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"and we saw real world bugs as a result","msgtype":"m.text"},"ts":1476192226000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"the spec got more precise and blink overhauled it's behavior to match.  Now blink, gecko and Edge are at least pretty consistent.","msgtype":"m.text"},"ts":1476192248000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"We'll keep making incremental progress like this.  Eg. focus behavior is on the blink input team's plans for Q4: https://bugs.chromium.org/p/chromium/issues/detail?id=645988","msgtype":"m.text"},"ts":1476192359000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: BTW, as of now my plan is to just go with blink's focusin/out behavior in Gecko (someone else has written the patch). With most of blink's bugs and all.","msgtype":"m.text"},"ts":1476192450000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I guess we should document somewhere the behavior","msgtype":"m.text"},"ts":1476192461000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"(well, there will be some wpts)","msgtype":"m.text"},"ts":1476192470000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1476192482000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Please cc dtapuska on your plans in gecko - he's leading a new engineer in trying to fix our behavior.","msgtype":"m.text"},"ts":1476192515000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"all these events are so regression prone.","msgtype":"m.text"},"ts":1476192524000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"So if the spec'd behavior isn't web compatible, then it would be good to know that....","msgtype":"m.text"},"ts":1476192551000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: but, if you're actively now fixing the bugs and possibly even making focusin/out follow the spec, Gecko would do that too","msgtype":"m.text"},"ts":1476192564000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Ah, good.  Yeah it's happening just taking time while some new folks ramp up","msgtype":"m.text"},"ts":1476192585000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: I guess only MS might know whether the spec'ed behavior is web compatible","msgtype":"m.text"},"ts":1476192615000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"since they had it something like that in EI","msgtype":"m.text"},"ts":1476192625000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but switched to closer to webkit/blink model in Edge","msgtype":"m.text"},"ts":1476192635000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"\"We're starting on the (hopefully not too convoluted) process of updating the Cookies RFC\"","msgtype":"m.text"},"ts":1476192839000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Lol","msgtype":"m.text"},"ts":1476192840000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lunch","msgtype":"m.text"},"ts":1476192973000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: are we re-creating cookies for this issue? https://github.com/w3c/ServiceWorker/issues/920#issuecomment-252657496","msgtype":"m.text"},"ts":1476194673000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"an origin scoped thing that gets set on network requests automatically","msgtype":"m.text"},"ts":1476194688000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"by \"thing\" I mean header","msgtype":"m.text"},"ts":1476194704000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"obviously there are some differences too... but the similarities we striking to me reading through the last few comments there","msgtype":"m.text"},"ts":1476194746000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep. I'm a little sad about that. See https://github.com/w3c/ServiceWorker/issues/920#issuecomment-245621515 and the following few comments","msgtype":"m.text"},"ts":1476194780000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It certainly makes the API less tidy","msgtype":"m.text"},"ts":1476194825000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  I wonder if we could split this from the particular use case... origin headers that are applied based on sane rules (as opposed to cookies which I think might have insane rules?)","msgtype":"m.text"},"ts":1476194850000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I dunno, just a random though","msgtype":"m.text"},"ts":1476194919000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thought","msgtype":"m.text"},"ts":1476194921000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://github.com/w3c/ServiceWorker/issues/920#issuecomment-247144874 is Facebook's objection","msgtype":"m.text"},"ts":1476195121000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, right... I was saying lets avoid cookies... but pre-specifying a header to apply to all future requests that match X could be a generic thing and not specific to SW preload (or whatever we are calling it these days)","msgtype":"m.text"},"ts":1476195206000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: the \"initialized\" pattern you like so much stems from the lack of internal slots","msgtype":"m.text"},"ts":1476195217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: the idea was to use \"initialized\" rather than \"set\" as some language to get to the internal slot, but with nothing formalized it's all somewhat confused of course","msgtype":"m.text"},"ts":1476195253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I'm open to that. It's very specific right now though, it's specifically these preload requests","msgtype":"m.text"},"ts":1476195262000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: avoid cookies because?","msgtype":"m.text"},"ts":1476195324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: see JakeA's link to FB's objection to cookies","msgtype":"m.text"},"ts":1476195347000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://github.com/w3c/ServiceWorker/issues/920#issuecomment-247144874 this is what Nate from Facebook was talking about at the F2F","msgtype":"m.text"},"ts":1476195370000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: sorry, I meant to ask why you'd like to avoid that","msgtype":"m.text"},"ts":1476195385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my interpretation is \"cookies have a lot of baggage and don't worry the same everywhere\"... and we don't expose cookies in SW yet","msgtype":"m.text"},"ts":1476195393000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: have we thought about things like size limits on this preload header thing?  Its basically another place for people to store stuff (perhaps synchronously?)","msgtype":"m.text"},"ts":1476195553000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I hadn't thought much about it. I guess it could count towards origin storage","msgtype":"m.text"},"ts":1476195591000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: less worries about quota and more thinking of people abusing it as synchronous storage... does the API currently sync set and get the header?","msgtype":"m.text"},"ts":1476195633000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no it's async","msgtype":"m.text"},"ts":1476195646000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok, good","msgtype":"m.text"},"ts":1476195651000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1476195652000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"was thinking of fxos code that stuck pre-rendered HTML for the page in a cookie for fast first load.","msgtype":"m.emote"},"ts":1476195673000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1476195681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: my impression is cookies had all kinds of weird legacy behavior around paths, limits on number, etc...  that fact that everyone groans when cookies come up made me want to avoid them","msgtype":"m.text"},"ts":1476195792000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I see, but this has none of that","msgtype":"m.text"},"ts":1476195814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: main problem with cookies imo is that they're not origin-bound, which this is","msgtype":"m.text"},"ts":1476195826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok... I was not saying to use cookies...","msgtype":"m.text"},"ts":1476195843000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Also they only want it sent on the preloads","msgtype":"m.text"},"ts":1476195847000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think the bit that makes me mention all this is the differences with Cache API... Cache is origin-based and the SW then picks which one to use... this header thing is implicitly to the registration matching logic","msgtype":"m.text"},"ts":1476196177000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: although maybe this is just a consequence of not going whole hog on static routing","msgtype":"m.text"},"ts":1476196194000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wonders if Europeans understand the phrase \"whole hog\".","msgtype":"m.emote"},"ts":1476196251000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh... it seems its common in Britain as well: https://britishhogroasts.co.uk/go-the-whole-hog/","msgtype":"m.text"},"ts":1476196322000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: since the preload is a service worker thing, it makes sense to tie it to the registration (like push subscriptions)","msgtype":"m.text"},"ts":1476196869000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I think static routes will end up being tied to the service worker rather than the registration fwiw","msgtype":"m.text"},"ts":1476196894000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wanted preload to be tied to the service worker too, but that doesn't work if you have a header that can be updated at any point","msgtype":"m.text"},"ts":1476196915000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think the same could be said about Cache API... but we made it its own thing... just seems similar to me","msgtype":"m.text"},"ts":1476196964000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we nearly made caches tied to a sw, but it became really ugly when you wanted a cache to last longer","msgtype":"m.text"},"ts":1476197030000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: not against adding an api to tie a cache (or storage box) to a sw. It'd remove the need for that ugly \"activate\" boilerplate","msgtype":"m.text"},"ts":1476197064000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you misunderstand me :-)  I was saying we could separate the header API from the SW registration just like we did for Cache API... I don't want to go the other way","msgtype":"m.text"},"ts":1476197105000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhh sorry! But if this header is sent has part of preload, which is inherently a service worker thing, doesn't separating them make it more confusing?","msgtype":"m.text"},"ts":1476197179000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea... if we moved it out we would have to have a way to say \"apply this to preload requests only\"... but in theory this API would have a way to match requests anyway in order which ones to apply the header to","msgtype":"m.text"},"ts":1476197307000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: but this is all just brainstorming... I'm not really objecting to the current API proposal","msgtype":"m.text"},"ts":1476197367000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'll have a think about it. I'm a little grumpy about it because the API was *so much* nicer when the header wasn't updatable :D","msgtype":"m.text"},"ts":1476197414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But I suppose there's no point in a nice API if it isn't useful","msgtype":"m.text"},"ts":1476197431000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I was just thinking if we could make it setable at the origin level, separate from SW, perhaps it would be easier to manage across SW life cycles","msgtype":"m.text"},"ts":1476197465000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"similar to how you can load Cache objects from window today","msgtype":"m.text"},"ts":1476197478000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think that would clash with having multiple registrations on the same origin","msgtype":"m.text"},"ts":1476197500000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, the API would need some kind of URL matching... perhaps the same matching algorithm specified by Cache API","msgtype":"m.text"},"ts":1476197544000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but maybe the intent is really to glob resources under the scope","msgtype":"m.text"},"ts":1476197594000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I dunno... again... just random thoughts","msgtype":"m.text"},"ts":1476197604000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'd like this preload thing to be expressible in static routing at some point, so separating the header a little would help there","msgtype":"m.text"},"ts":1476197732000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm thinking something like this: https://gist.github.com/wanderview/d268442914398a66613682957dd2f8ff","msgtype":"m.text"},"ts":1476197930000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: how would that only relate to preload requests?","msgtype":"m.text"},"ts":1476198000000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: let met add that now... someone was at the door","msgtype":"m.text"},"ts":1476198381000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ok, reload the gist","msgtype":"m.text"},"ts":1476198512000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhh, that's actually pretty neat","msgtype":"m.text"},"ts":1476198552000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: using the http cache matching semantics doesn't really provide scope-like path matching, though","msgtype":"m.text"},"ts":1476198590000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but that could be adapted in some way","msgtype":"m.text"},"ts":1476198611000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"although for Cache API we set substring matching was a de-opt","msgtype":"m.text"},"ts":1476198699000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and removed it","msgtype":"m.text"},"ts":1476198703000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^set^said","msgtype":"m.text"},"ts":1476198710000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hah, I was just trying to remember what we called that option","msgtype":"m.text"},"ts":1476198730000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"woah... shots fired at npm https://code.facebook.com/posts/1840075619545360","msgtype":"m.text"},"ts":1476198797000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: anyway, my brain's not working right now (for some reason I didn't sleep last night). Let's pick this up again tomorrow… but I kinda like it.","msgtype":"m.text"},"ts":1476198807000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: np, have a good night!  (I assume you were still thinking about Sunday's debate in the US!)","msgtype":"m.text"},"ts":1476198833000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'll stick the idea in the github issue","msgtype":"m.text"},"ts":1476198890000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: was it intentional that when Headers.get() was switched to combine headers that the Cache API Vary matching would begin matching combined headers as well?","msgtype":"m.text"},"ts":1476201378000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: ^^^","msgtype":"m.text"},"ts":1476201385000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'll file an issue to clarify","msgtype":"m.text"},"ts":1476201441000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: JakeA: filed this... https://github.com/w3c/ServiceWorker/issues/991","msgtype":"m.text"},"ts":1476201600000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: dunno, will study later","msgtype":"m.text"},"ts":1476202388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: sooo, briefly looked at the Cache API algorithms","msgtype":"m.text"},"ts":1476206623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: they appear broken","msgtype":"m.text"},"ts":1476206629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, we'll have to discuss with JakeA tomorrow I guess","msgtype":"m.text"},"ts":1476206841000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, we basically shouldn't be invoking IDL operations","msgtype":"m.text"},"ts":1476206862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: and definitely not from algorithms that run \"in parallel\"","msgtype":"m.text"},"ts":1476206876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: but I also think HTTP doesn't just look at the first header","msgtype":"m.text"},"ts":1476206912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: for HTTP there's no difference between multiple headers or one header with a comma-separated value","msgtype":"m.text"},"ts":1476206926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: except for cookies (another reason folks dislike them)","msgtype":"m.text"},"ts":1476206936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how does \"Add links to tests from requirements (beta)\" work?","msgtype":"m.text"},"ts":1476206983000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: where's you and fantasi's old old form control styling proposal?","msgtype":"m.text"},"ts":1476219860000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: here's my handwavy one from a few years ago https://lists.w3.org/Archives/Public/www-style/2014Feb/0621.html","msgtype":"m.text"},"ts":1476222520000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: oh cool, thanks!","msgtype":"m.text"},"ts":1476222562000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1476222568000,"senderName":"hober","senderId":"hober@irc"}
]