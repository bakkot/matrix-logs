[
{"content":{"body":"CZ","msgtype":"m.text"},"ts":1502673670000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan, at 2017-06-25 09:26 UTC, MikeSmith said: should the checker not report an error for `&;`? https://github.com/validator/validator/issues/529","msgtype":"m.text"},"ts":1502688152000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"of course nm that zcorpan","msgtype":"m.text"},"ts":1502689792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"very old","msgtype":"m.text"},"ts":1502689797000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah, saw it was resolved already","msgtype":"m.text"},"ts":1502689833000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____: https://github.com/whatwg/html/issues/2710","msgtype":"m.text"},"ts":1502695874000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: would you have time to review the WPT changes in https://bugzilla.mozilla.org/show_bug.cgi?id=1389274?","msgtype":"m.text"},"ts":1502696132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I'll have a look as well, but it seems you'd know more about how that method works at this point than I do","msgtype":"m.text"},"ts":1502696147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I think the specification is wrong actually","msgtype":"m.text"},"ts":1502696416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/w3c/csswg-drafts/pull/1505 is probably relevant","msgtype":"m.text"},"ts":1502697576000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: making omitted and undefined different is pretty grotesque","msgtype":"m.text"},"ts":1502697637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: there's only a couple of legacy APIs that need that","msgtype":"m.text"},"ts":1502697652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the new change makes them not be different","msgtype":"m.text"},"ts":1502697711000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: sorry, I assumed false was the default","msgtype":"m.text"},"ts":1502697748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: are the dictionary defaults also the same as passing true?","msgtype":"m.text"},"ts":1502697769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, they are not. {} is center-center, rationale is that center-center is a common case so there should be a convenient way to do that","msgtype":"m.text"},"ts":1502697836000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: the boolean's there for backwards compat, right?","msgtype":"m.text"},"ts":1502697863000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: but i think this is not yet interoperable so there is still room to change it","msgtype":"m.text"},"ts":1502697872000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: yeah","msgtype":"m.text"},"ts":1502697877000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: shouldn't you have gone with a bunch of enum values then if you wanted convenience?","msgtype":"m.text"},"ts":1502697934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I was just wondering if it might be worth keeping it as two overloading methods for the sake of pointing that out.","msgtype":"m.text"},"ts":1502697936000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: I don't think it's a good idea that for some APIs {} is magical and gives you different defaults than undefined","msgtype":"m.text"},"ts":1502697971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: overloading is generally best avoided imo","msgtype":"m.text"},"ts":1502697994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: it just leads to confusing argument handling, especially around omission and undefined","msgtype":"m.text"},"ts":1502698016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, that's a good point. I was just going for the split legacy stuff from non-legacy stuff. But maybe that causes more issues than it solves.","msgtype":"m.text"},"ts":1502698067000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: an enum argument isn't as extensible as a dictionary","msgtype":"m.text"},"ts":1502698068000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: personally i think i would prefer if {} means the same as passing true","msgtype":"m.text"},"ts":1502698110000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: are you suggesting there's a finite number of strings?","msgtype":"m.text"},"ts":1502698121000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ducks","msgtype":"m.emote"},"ts":1502698124000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: that's true, but if there's also a low-level pixel instruction set you might not need much high-level flexibility","msgtype":"m.text"},"ts":1502698124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I think you should make that change, having this API be different from others for the sake of convenience for the couple of folks that remember it's different isn't worth it","msgtype":"m.text"},"ts":1502698173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. i'll follow up. thanks","msgtype":"m.text"},"ts":1502698207000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I filed https://github.com/w3c/csswg-drafts/issues/1720 btw","msgtype":"m.text"},"ts":1502698250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: also filed https://github.com/w3ctag/design-principles/issues/73 to get this all covered in the design principles","msgtype":"m.text"},"ts":1502699302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. I just finished drafting an issue, I'll comment it in your issue instead :-)","msgtype":"m.text"},"ts":1502699377000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hmm, could it be that atob(_X_) and data:;base64,_X_ are identical?","msgtype":"m.text"},"ts":1502702515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The YQ and YR examples from atob() produce identical results","msgtype":"m.text"},"ts":1502702544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Browsers actually using a shared primitive is somewhat surprising","msgtype":"m.text"},"ts":1502702783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Wow, it seems shared","msgtype":"m.text"},"ts":1502703100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hurray?","msgtype":"m.text"},"ts":1502703107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: is https://github.com/whatwg/html/issues/351 still something you want to pursue?","msgtype":"m.text"},"ts":1502703865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: btw, as a reference, html/webappapis/atob/base64.html has 370 tests for btoa/atob; so a hundred or so tests could be just for base64 handling","msgtype":"m.text"},"ts":1502704328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8536472/ ðŸŽ‰ (Align the innerText setter with the spec and Gecko FIXED, FLIGHTED)","msgtype":"m.text"},"ts":1502705358000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wonder who \"Simon P.\" and \"Arron E.\" are","msgtype":"m.text"},"ts":1502705885000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Simon P. would be me","msgtype":"m.text"},"ts":1502706348000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: If only they had waited another 8 days","msgtype":"m.text"},"ts":1502706516000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or four","msgtype":"m.text"},"ts":1502706579000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess Arron E. is https://github.com/arronei","msgtype":"m.text"},"ts":1502706711000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: why?","msgtype":"m.text"},"ts":1502706786000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Just so it took exactly one year from filing to fixing","msgtype":"m.text"},"ts":1502706818000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is it showing different dates to you?","msgtype":"m.text"},"ts":1502706869000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: thinking more about this AbortSignal thing. It still feels like firing the event before the algorithms makes sense. This would match other events like \"click\" where the event comes before the default action.","msgtype":"m.text"},"ts":1502706931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you mean that when the event needs to be forwarded it fires later on the signal that forwarded it?","msgtype":"m.text"},"ts":1502707035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm fine with the current behavior, I was mostly wondering whether we should run it by some other people","msgtype":"m.text"},"ts":1502707057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm okay with just going for it and having at least one test and attempt to revisit if it's a fatal issue somehow (which seems doubtful)","msgtype":"m.text"},"ts":1502707106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll create an issue for it. Any idea who to cc? mkwst & jyasskin as they're the other users of AbortSignal I guess","msgtype":"m.text"},"ts":1502707147000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Domenic and maybe bterlson and wycats?","msgtype":"m.text"},"ts":1502707271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1502707281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger: I saw filed on the 18th and fixed on the 10th","msgtype":"m.text"},"ts":1502707763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Doh","msgtype":"m.text"},"ts":1502707808000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"foolip: thanks for taking care of DOMRectList PRs","msgtype":"m.text"},"ts":1502707821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: Short answer: I don't have strong feelings about the timing semantics of the signal. I think your suggestion around timing makes sense, but I think WebAuthn will be fine either way.","msgtype":"m.text"},"ts":1502708854000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So, +1 to consistency, but I'm happy to defer to folks with opinions if there's a good reason for the current ordering.","msgtype":"m.text"},"ts":1502708894000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: ta!","msgtype":"m.text"},"ts":1502709017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"While I'm here: annevk, how would you feel about not treating `gopher` as a totally special scheme anymore?","msgtype":"m.text"},"ts":1502709066000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: doesn't seem worth the churn, but okay if everyone wants that","msgtype":"m.text"},"ts":1502709132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sounds reasonable. It's not a valuable change in any real sense, but I don't like that Chrome's URL library has special cases for `gopher`. It would be nicer to remove them, given that we're never ever going to add support for the underlying protocol.","msgtype":"m.text"},"ts":1502709266000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah, I never quite understood why that existed to be fair","msgtype":"m.text"},"ts":1502709324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wow, I mean thanks","msgtype":"m.text"},"ts":1502709842000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"annevk: Want to approve https://github.com/w3c/web-platform-tests/pull/6858 ?","msgtype":"m.text"},"ts":1502710164000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: if https://lists.w3.org/Archives/Public/public-review-announce/2017Aug/0004.html passes, are you going to trim http://www.w3.org/1999/xhtml ?","msgtype":"m.text"},"ts":1502710204000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: no problem, and welcome back!","msgtype":"m.text"},"ts":1502710378000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1502710409000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: wanna stamp https://github.com/w3c/web-platform-tests/pull/6870?","msgtype":"m.text"},"ts":1502710512000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"done","msgtype":"m.text"},"ts":1502710602000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: tack","msgtype":"m.text"},"ts":1502710628000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"jgraham: I rejected it","msgtype":"m.text"},"ts":1502710717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's fine too","msgtype":"m.text"},"ts":1502710740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good ðŸ˜Š","msgtype":"m.text"},"ts":1502710758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: that namespace document should also have a big fat warning not to copy the address bar","msgtype":"m.text"},"ts":1502710853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: otherwise it goes pretty quickly from follow your nose to fall on your nose","msgtype":"m.text"},"ts":1502710915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed!","msgtype":"m.text"},"ts":1502710923000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"JakeA: can you squash and merge yourself these days?","msgtype":"m.text"},"ts":1502711066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/w3c/web-platform-tests/pull/6736 is good to go, just needs a new commit title/body","msgtype":"m.text"},"ts":1502711093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can!","msgtype":"m.text"},"ts":1502711109000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Will do that now","msgtype":"m.text"},"ts":1502711112000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: FWIW, telemetry says that on Firefox release 55, of 4.9 million sessions opted into opt-in telemetry, 714 had the ISO-2022-JP decoder instantiated at least once","msgtype":"m.text"},"ts":1502711585000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: well, at least it's more than <isindex>...","msgtype":"m.text"},"ts":1502711663000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: between 0.01 and 0.02% if I did that right","msgtype":"m.text"},"ts":1502711691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: seems above treshold","msgtype":"m.text"},"ts":1502711695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's the threshold?","msgtype":"m.text"},"ts":1502711793000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: for Chrome it's 0.003% iirc, but I believe they stopped using that (not sure in favor of what, but likely more conservative)","msgtype":"m.text"},"ts":1502711994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I don't think Mozilla has a number","msgtype":"m.text"},"ts":1502712007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1502712023000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in favor of better understanding of compat impact. in some cases things can be successfully removed with higher usage. usage number alone is not enough information","msgtype":"m.text"},"ts":1502712637000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TimothyGu: make sure to add yourself to https://heycam.github.io/webidl/#acknowledgements next time","msgtype":"m.text"},"ts":1502714698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: and maybe fix the glaring Oxford comma bug while there","msgtype":"m.text"},"ts":1502714733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay I will","msgtype":"m.text"},"ts":1502717110000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: https://gist.github.com/annevk/4287452653921b2b7de35e4208b4a985 now has some draft text for data URL processing","msgtype":"m.text"},"ts":1502717256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: need to clean it up a bit still and decide where to put it","msgtype":"m.text"},"ts":1502717265000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is ;base64 only searched at the end of the mime type? e.g. data:text/plain;base64;charset=UTF-8,5Lit5paH works in Chrome and Firefox","msgtype":"m.text"},"ts":1502718163000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: oh, I thought that only worked in a subset of UAs","msgtype":"m.text"},"ts":1502718246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: should have tested first I guess","msgtype":"m.text"},"ts":1502718256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: it doesn't work in Safari","msgtype":"m.text"},"ts":1502718345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to be exact firefox ignores anything that comes after ;base64 in that case, but it still reads the data in base64","msgtype":"m.text"},"ts":1502718355000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1502718358000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: the RFC also requires it to be last","msgtype":"m.text"},"ts":1502718377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"writes test that can run in Edge","msgtype":"m.emote"},"ts":1502718385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay more incompatibility","msgtype":"m.text"},"ts":1502718458000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: Edge supports it","msgtype":"m.text"},"ts":1502718522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Iâ€™ve not been involved at all with the https://lists.w3.org/Archives/Public/public-review-announce/2017Aug/0004.html plans so I donâ€™t know if they include trimming http://www.w3.org/1999/xhtml","msgtype":"m.text"},"ts":1502718524000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TimothyGu: supporting that is worse though as there's much more edge cases that way","msgtype":"m.text"},"ts":1502718555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah well, too bad most browsers already support it","msgtype":"m.text"},"ts":1502718629000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I hope they don't substring","msgtype":"m.text"},"ts":1502718660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure what to do then","msgtype":"m.text"},"ts":1502718672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hey, got a weird case and need your thoughts. What would a property return on an element when its in a data url like data:text/html;charset=utf-8,<a href%3Dfoo>foobar</a>. e.g. what should document.querySelector('a').href return ?","msgtype":"m.text"},"ts":1502718946000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"TimothyGu: yeah, they do substring matching","msgtype":"m.text"},"ts":1502719016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":\\","msgtype":"m.text"},"ts":1502719050000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"AutomatedTester: typically the input value","msgtype":"m.text"},"ts":1502719055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AutomatedTester: because it cann be resolved","msgtype":"m.text"},"ts":1502719061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AutomatedTester: well, if it's a URL attribute anyway","msgtype":"m.text"},"ts":1502719076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ahh cool, thank you","msgtype":"m.text"},"ts":1502719136000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"TimothyGu: hmm, not quite substring either, data:x;base64x,WA ends up with length 2","msgtype":"m.text"},"ts":1502719171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: so I guess it's ends with ;base64 or contains ;base64; now","msgtype":"m.text"},"ts":1502719203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds that the FAQ started at http://web.archive.org/web/20070821014820/http://blog.whatwg.org/faq/","msgtype":"m.emote"},"ts":1502722303000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"TimothyGu: https://github.com/whatwg/fetch/pull/579 if you want to review (there should be Preview/Diff links in a bit)","msgtype":"m.text"},"ts":1502722387000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"updates OP with a TODO list","msgtype":"m.emote"},"ts":1502722793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will do.","msgtype":"m.text"},"ts":1502725543000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"anybody have any idea why typeof document.all returns \"undefined\" on both Chrome and Firefox? bug or just plain weirdness with document.all?","msgtype":"m.text"},"ts":1502725584000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: https://github.com/tc39/ecma262/pull/673","msgtype":"m.text"},"ts":1502728221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TimothyGu: oh wow, we get to introduce you to https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all","msgtype":"m.text"},"ts":1502728368000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: it looks like the base64 RFC doesn't have an algorithm, or is it hidden somewhere?","msgtype":"m.text"},"ts":1502728797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think you have to infer it from the description per usual","msgtype":"m.text"},"ts":1502728887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sigh","msgtype":"m.text"},"ts":1502728893000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess we can create an algorithm and say it's compatible with the RFC or something","msgtype":"m.text"},"ts":1502728936000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"BTW we can just return null instead of throwing an DOMException to keep it at the Infra level","msgtype":"m.text"},"ts":1502728949000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we already have an algorithm","msgtype":"m.text"},"ts":1502728983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's how we define window.atob() as I've said a few times","msgtype":"m.text"},"ts":1502728994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we just need to make that reusable","msgtype":"m.text"},"ts":1502729001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I discovered this morning implementations share the code path","msgtype":"m.text"},"ts":1502729021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sorry, poor choice of words \"create\"","msgtype":"m.text"},"ts":1502729041000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I was just kind of hoping we could avoid the layering question by letting the RFC do the work","msgtype":"m.text"},"ts":1502729087000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hah, I've yet to find that RFC","msgtype":"m.text"},"ts":1502729259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: Infra seems fine btw, it also has things like namespaces, so a base64-with-errors seems reasonable","msgtype":"m.text"},"ts":1502729367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"more like base64-with-some-errors","msgtype":"m.text"},"ts":1502729385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: does blink have usage data about alert/confirm/prompt ?","msgtype":"m.text"},"ts":1502732320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes... around 1% or 2% IIRC for alert","msgtype":"m.text"},"ts":1502733876000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: I misremembered, it's lower. https://www.chromestatus.com/metrics/feature/timeline/popularity/950 + https://www.chromestatus.com/metrics/feature/timeline/popularity/951 + https://www.chromestatus.com/metrics/feature/timeline/popularity/952","msgtype":"m.text"},"ts":1502733953000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ahaa, even alert() is quite low","msgtype":"m.text"},"ts":1502734012000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk/Domenic: wat","msgtype":"m.text"},"ts":1502750959000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"}
]