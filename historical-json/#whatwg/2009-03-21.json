[
{"content":{"body":"the script decoding stuff seems wrong","msgtype":"m.text"},"ts":1237593720000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"HTTP should take precedence over BOMs","msgtype":"m.text"},"ts":1237593780000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"also, it seems if that algorithm allowed for passing in a charset it could be used by HTML5 as well","msgtype":"m.text"},"ts":1237594080000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"http://reports.graymattergravy.com/2009/03/16/html-5-ogg/","msgtype":"m.text"},"ts":1237594800000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"the algorithm for <script> is similar but not quite","msgtype":"m.text"},"ts":1237595460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i'm pretty sure the bom overrides the mime type","msgtype":"m.text"},"ts":1237595461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"file a bug with a test case if it doesn't :-)","msgtype":"m.text"},"ts":1237595462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are you saying scripts work different from text/html?","msgtype":"m.text"},"ts":1237595760000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"because for text/html you specify that HTTP overrides BOM","msgtype":"m.text"},"ts":1237595761000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"points to the topic","msgtype":"m.emote"},"ts":1237595762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i sort of doubt impl are consistent on that and it seems icky","msgtype":"m.text"},"ts":1237595820000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"oh well, will test some day","msgtype":"m.text"},"ts":1237595821000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"hangs his sense of logic on the hook outside and enters to say...","msgtype":"m.emote"},"ts":1237597980000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Hixie, is it really necessary to have the BOM override HTTP for script encoding detection, despite that being inconsistent with everything else?","msgtype":"m.text"},"ts":1237597981000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: isn't that what happens now for <script>?","msgtype":"m.text"},"ts":1237599720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: anne asked the same question","msgtype":"m.text"},"ts":1237599721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: i thought i had just used the same algorithm as <script>","msgtype":"m.text"},"ts":1237599780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lachy: if it's wrong, file a bug","msgtype":"m.text"},"ts":1237599781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I thought the way browsers determined the encoding of external scripts was to first check the HTTP Content-Type header, or else use the BOM if present, or else use the document's encoding.","msgtype":"m.text"},"ts":1237600920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wonders why IE8 occasionally, but not consistently, displays acid2 as <http://web.mit.edu/jwalden/www/ie8-acid2-fail.png>","msgtype":"m.emote"},"ts":1237614780000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(that's a remote desktop setup, which might have an effect)","msgtype":"m.text"},"ts":1237614840000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"roc: any idea if jruderman is online anywhere?","msgtype":"m.text"},"ts":1237623300000,"senderName":"olliej","senderId":"olliej@irc"},
{"content":{"body":"right now?","msgtype":"m.text"},"ts":1237623301000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yeah","msgtype":"m.text"},"ts":1237623360000,"senderName":"olliej","senderId":"olliej@irc"},
{"content":{"body":"no idea really","msgtype":"m.text"},"ts":1237623361000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: bah, i expect you to know all :D","msgtype":"m.text"},"ts":1237623362000,"senderName":"olliej","senderId":"olliej@irc"},
{"content":{"body":"it is Saturday night here you know :-)","msgtype":"m.text"},"ts":1237623420000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: psh, details","msgtype":"m.text"},"ts":1237623780000,"senderName":"olliej","senderId":"olliej@irc"},
{"content":{"body":"maybe I need to point out that some of us aren't online much on weekends due to having families and being old","msgtype":"m.text"},"ts":1237623840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=484406 is somewhat interesting","msgtype":"m.text"},"ts":1237629540000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"Anyone got any thoughts on creating a html5lib.serialize function?","msgtype":"m.text"},"ts":1237632540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: doesn't html5lib already contain a function for doing serialization?","msgtype":"m.text"},"ts":1237632660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Only by calling about ten functions","msgtype":"m.text"},"ts":1237632661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: so  html5lib.serialize would basically be a convenience wrapper that executes the existing code?","msgtype":"m.text"},"ts":1237632780000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah","msgtype":"m.text"},"ts":1237632781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: Like html5lib.parse is one for parsing","msgtype":"m.text"},"ts":1237632840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1237632841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The only fun thing is you need to know what format the tree is in","msgtype":"m.text"},"ts":1237632842000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Like, is it dom, is it etree, etc.)","msgtype":"m.text"},"ts":1237632843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1237632844000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That can be worked around by just doing stuff like hasattr","msgtype":"m.text"},"ts":1237632845000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah, yeah","msgtype":"m.text"},"ts":1237632900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(And hoping people don't do really whacky OO stuff subclassing stuff)","msgtype":"m.text"},"ts":1237632901000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1237632902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"people do whacky stuff","msgtype":"m.text"},"ts":1237632903000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in general","msgtype":"m.text"},"ts":1237632904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Probably better allow it to be explicitly stated the format, but try sniffing if it isn't","msgtype":"m.text"},"ts":1237632905000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"my experience in product-dev orgs is that engineers always swear \"no sane user will ever do that\".. and as soon as the product is actually deployed, we have actual users (customers) doing just what engineering claimed they'd have to be insane to do","msgtype":"m.text"},"ts":1237633020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: anyway, sounds like something that would be great to have, and that nobody would argue against","msgtype":"m.text"},"ts":1237633080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Damnit! I was hoping you guys would give me a reason not to do it!","msgtype":"m.text"},"ts":1237633081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That means I've got another thing on my to-do list!","msgtype":"m.text"},"ts":1237633082000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Just do it.","msgtype":"m.text"},"ts":1237633140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"give up on adonais and move all your energy to work exclusively on things that I personally find most useful","msgtype":"m.text"},"ts":1237633200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's my recommendation for you","msgtype":"m.text"},"ts":1237633201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: html5lib.serialise(input, tree=\"simpletree\", format=\"html\", **serializer_opts) should probably be the signature","msgtype":"m.text"},"ts":1237633560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we should also have html5lib.sanitize","msgtype":"m.text"},"ts":1237633561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I don't know if that should return a tree or text","msgtype":"m.text"},"ts":1237633562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham! hey","msgtype":"m.text"},"ts":1237633920000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so you've been up in the great sunny north for how long now?","msgtype":"m.text"},"ts":1237633980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"3 months?","msgtype":"m.text"},"ts":1237633981000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wondering how you are liking it so far","msgtype":"m.text"},"ts":1237633982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"working mostly with zcorpan?","msgtype":"m.text"},"ts":1237633983000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Hej.","msgtype":"m.text"},"ts":1237634100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, working with zcorpan a bit. ","msgtype":"m.text"},"ts":1237634101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's pretty nice here although they seem to want to stop me getting an internet connection really bad, which sucks","msgtype":"m.text"},"ts":1237634160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"huh?","msgtype":"m.text"},"ts":1237634161000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"who wants you to do that?","msgtype":"m.text"},"ts":1237634162000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean the swedes not opera","msgtype":"m.text"},"ts":1237634163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1237634164000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1237634165000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1237634166000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I tried and they claimed that I han't been in the country long enough (or rather that my job wasn't yet considered permanant) and so I was too much of a credit risk","msgtype":"m.text"},"ts":1237634220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1237634221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"idiots","msgtype":"m.text"},"ts":1237634222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"god","msgtype":"m.text"},"ts":1237634223000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, you are coming to them with money in hand to spend","msgtype":"m.text"},"ts":1237634280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1237634281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"With thatt in mind I am going to drop offline for a moment to see if I can get this silly 3G dongle thing working under linux","msgtype":"m.text"},"ts":1237634282000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: go for it","msgtype":"m.text"},"ts":1237634340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"#Holy crap it works. Will the miracles never end?","msgtype":"m.text"},"ts":1237634580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: \"3G dongle thing\" is an HSDPA modem?","msgtype":"m.text"},"ts":1237634820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://gsnedders.html5.org/outliner/","msgtype":"m.text"},"ts":1237634940000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: Seeming you might be interested, I saw Bill Manhire and Simon Armitage speaking yesterday","msgtype":"m.text"},"ts":1237635060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Primarily reading their poetry","msgtype":"m.text"},"ts":1237635061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"virtuelv: Because there isn't really anything non-scientific about using a process that allows for the possibility of a creative insight producing a better result than incremental improvements to the existing model","msgtype":"m.text"},"ts":1237642380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would only be non-scientific if you insisted that some design was superior inthe face of data to the contrary and without a hypothesis as to why the data was wrong","msgtype":"m.text"},"ts":1237642440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It would be non-scientific if you didn't have any data at all","msgtype":"m.text"},"ts":1237642500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Myabe. But that is different to the Google situation","msgtype":"m.text"},"ts":1237642560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(unless the complaint is that there should have been a designer whose work was considered perfect, even in the face of user feedback to the contrary)","msgtype":"m.text"},"ts":1237642620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(which seems unlikely)","msgtype":"m.text"},"ts":1237642621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"My interpretation of the complaint is that (some) designers need to be able to design creatively and artistically, without being bogged down in the scientific details at every stage","msgtype":"m.text"},"ts":1237642800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Which seems perfectly scientific","msgtype":"m.text"},"ts":1237642801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(if you remove the word \"scientific\" from your last sentence)","msgtype":"m.text"},"ts":1237642860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's how a great deal of theoretical physics works, for example","msgtype":"m.text"},"ts":1237642861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's only non-scientific if you come up with something that either cannot be tested or which you refuse to test","msgtype":"m.text"},"ts":1237642920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm trying to think of a better word than \"scientific\" but I'm not sure what it is","msgtype":"m.text"},"ts":1237642921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe \"engineeristic\" or something","msgtype":"m.text"},"ts":1237642922000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or \"exclusively data-focused\" or something","msgtype":"m.text"},"ts":1237643040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"data focused\" seems fair","msgtype":"m.text"},"ts":1237643100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"scrolls back to try to understand context for \"data focused\"....","msgtype":"m.emote"},"ts":1237643220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(it is easy to imagine the same problem in other situations to get an idea of how frustrating it might be, for example the same book being sold with slightly different word choices to see which sells better)","msgtype":"m.text"},"ts":1237643280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(That example would only work if people read the book before deciding whether to buy it)","msgtype":"m.text"},"ts":1237643340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(You could, however, publish the same book with several different covers and see which sells better)","msgtype":"m.text"},"ts":1237643400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though in the case of e.g. Harry Potter books they use different covers to increase the range of their target market, which is a separate issue)","msgtype":"m.text"},"ts":1237643460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has seen Discworld books with 'adult' covers too, and remembers that he used to find the original illustrated Discworld book covers to be hideous and disturbing to such an extent that he didn't like looking at them","msgtype":"m.emote"},"ts":1237643640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: I guess it should be serialize and not serialise","msgtype":"m.text"},"ts":1237647480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: To be internally consistency","msgtype":"m.text"},"ts":1237647540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*consistent","msgtype":"m.text"},"ts":1237647541000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Call it tostring() instead","msgtype":"m.text"},"ts":1237647660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"commits to html5lib for the first time in ages","msgtype":"m.emote"},"ts":1237648740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: Challenge: find number of uppercase ASCII characters in tag names as a percentage of all characters in tag names.","msgtype":"m.text"},"ts":1237651800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: In some unknown number of pages from dmoz.org with five million things that look kind of like tags, I see 11723600 lowercase characters and 1547593 uppercase","msgtype":"m.text"},"ts":1237652460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: thx","msgtype":"m.text"},"ts":1237652461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(and 59370 digits)","msgtype":"m.text"},"ts":1237652462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders who drhowarddrfine is… seems to have a very, very, very anti-MS POV","msgtype":"m.emote"},"ts":1237662000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wonders where his POV is being expressed","msgtype":"m.emote"},"ts":1237662120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"All over the web","msgtype":"m.text"},"ts":1237662121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Just google the alias","msgtype":"m.text"},"ts":1237662122000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Worse than that rudd-o guy?","msgtype":"m.text"},"ts":1237662420000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1237662421000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is he the one who was vocal about Ogg?","msgtype":"m.text"},"ts":1237662540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1237662600000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"IE is the root of all evil, and target was deprecated for security reasons. Right.","msgtype":"m.text"},"ts":1237662720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also, he can ask Ian Hicks, Hixie, Simone Pieter among other people who will back him up.","msgtype":"m.text"},"ts":1237662780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1237662840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Simone","msgtype":"m.text"},"ts":1237662841000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Simone and Anne are helping ensure HTML5 isn't a male-dominated spec","msgtype":"m.text"},"ts":1237662960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Next is what, Georgia Snedders?","msgtype":"m.text"},"ts":1237662961000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmm... http://twitter.com/NickHodge/statuses/1364909394","msgtype":"m.text"},"ts":1237663380000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Isn't the svg in acid3 standalone svg?","msgtype":"m.text"},"ts":1237663680000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmmm, how should i solve this ?","msgtype":"m.text"},"ts":1237667160000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"http://html5.validator.nu/?doc=http%3A%2F%2Fblog.dieweltistgarnichtso.net%2F&showimagereport=yes","msgtype":"m.text"},"ts":1237667161000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"i use ins to group inserted paragraphs","msgtype":"m.text"},"ts":1237667220000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"why can't that be valid ?","msgtype":"m.text"},"ts":1237667221000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: It is valid, as far as I can tell","msgtype":"m.text"},"ts":1237668480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm more or less certain it is","msgtype":"m.text"},"ts":1237668540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, since the content model of the <ins> element ist transparent, i would think that too. maybe the validator has a hickup ?","msgtype":"m.text"},"ts":1237668660000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: The validator has quite a few bugs :)","msgtype":"m.text"},"ts":1237668661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"LOL","msgtype":"m.text"},"ts":1237668720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Apparently I haven't talked to Hixie in \"a couple years or more\"","msgtype":"m.text"},"ts":1237668721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"url?","msgtype":"m.text"},"ts":1237668722000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"http://codingforums.com/showpost.php?p=796317&postcount=39","msgtype":"m.text"},"ts":1237668723000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1237668900000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Help, my menu bar has vanished","msgtype":"m.text"},"ts":1237669020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in Opera)","msgtype":"m.text"},"ts":1237669021000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, hit alt+f4 !","msgtype":"m.text"},"ts":1237669440000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"gsnedders: should you be including <1. Untitled Section> in your outliner when you encounter a sectioning content element that contains no headers?","msgtype":"m.text"},"ts":1237672260000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: It is a section with no heading, so yes, it should appear in the outline","msgtype":"m.text"},"ts":1237672320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The fact it has no heading is irrelevant","msgtype":"m.text"},"ts":1237672321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: okay, riddle me this batman: suppose I have blag software that displays posts; it puts each post in an <article> with a <h1>post title</h1> at the top","msgtype":"m.text"},"ts":1237672440000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gsnedders: blag posts sometimes contain headers","msgtype":"m.text"},"ts":1237672500000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"if I want to number those latter headers from <h1>, is there a way to do that without using <section>?","msgtype":"m.text"},"ts":1237672501000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and without generating phantom headers in an outline when the post is super-simple?","msgtype":"m.text"},"ts":1237672502000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I don't see one","msgtype":"m.text"},"ts":1237672503000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"<http://whereswalden.com/> and <http://gsnedders.html5.org/outliner/process.py?url=http%3A%2F%2Fwhereswalden.com%2F> are the case in point","msgtype":"m.text"},"ts":1237672560000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"http://pastebin.mozilla.org/635906 is the relevant PHP","msgtype":"m.text"},"ts":1237672680000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gsnedders: also, I think your outliner is not \"ignoring any sections created for nav and aside elements and any of their descendants\"","msgtype":"m.text"},"ts":1237672860000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1237673100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I suppose that if you want subsections you should just use section elements there, because putting the whole post as a section seems wrong","msgtype":"m.text"},"ts":1237673101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1237673280000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"so this suggests there's no good way to make copy-pastability for content which might or might not contain headers","msgtype":"m.text"},"ts":1237673281000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"nav seems to broken","msgtype":"m.text"},"ts":1237673282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"As far as I'm concerned, I'm creating an outline per spec","msgtype":"m.text"},"ts":1237673340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So ask Hixie :P","msgtype":"m.text"},"ts":1237673341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nav/aside is impl. bug I think","msgtype":"m.text"},"ts":1237673342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so I guessed :-)","msgtype":"m.text"},"ts":1237673343000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"No, nav/aside is right","msgtype":"m.text"},"ts":1237673400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Append the outline of the sectioning content element being exited to the current section. (This does not change which section is the last section in the outline.)\"","msgtype":"m.text"},"ts":1237673401000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://hg.gsnedders.com/anolis/file/b6d93515d41e/anolislib/processes/outliner.py","msgtype":"m.text"},"ts":1237673460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, I was misreading 4.4.10.2","msgtype":"m.text"},"ts":1237673520000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"My entire impl has quote from spec for every line of code, a quite a few asserts were the spec states that something is true","msgtype":"m.text"},"ts":1237673580000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*and","msgtype":"m.text"},"ts":1237673581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So I doubt there are really many impl. bugs :)","msgtype":"m.text"},"ts":1237673582000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: How do you handle spec changes? Update code every time, or keep a \"last synced with spec av rev x\" or?","msgtype":"m.text"},"ts":1237674180000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: The spec has had one minor change since I wrote it around a year ago, so I don't really handle them at all :P","msgtype":"m.text"},"ts":1237674240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Brushing aside the personal attacks by small and narrow minds ...\" - brushing aside personal attacks by using more personal attacks?","msgtype":"m.text"},"ts":1237674840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1237674841000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"\"Brushing aside the personal attacks with a small and narrow mind ...\" ","msgtype":"m.text"},"ts":1237674900000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"in virtually every other programming language available to application developers today, failing to write the ‘code’ to the code’s specification results in the application simply not working\" - not in e.g. C or C++, where you get unspecified behaviour that often actually works perfectly well in practice","msgtype":"m.text"},"ts":1237675020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"curly quotes seem to mess up irssi","msgtype":"m.text"},"ts":1237675080000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Not to mention javascript :)","msgtype":"m.text"},"ts":1237675081000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"nor in Java, where you can misuse concurrency and get undefined behaviour","msgtype":"m.text"},"ts":1237675140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"if you try to use multithreading without understanding it","msgtype":"m.text"},"ts":1237675141000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"you'll get undefined behavior no matter what language you use","msgtype":"m.text"},"ts":1237675142000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Dashiva: JS isn't really the same issue - it just has a relaxed specification that allows you to write a lot of things (e.g. missing semicolons) which are weird but still perfectly legal","msgtype":"m.text"},"ts":1237675200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"No, you still have stuff like function expressions inside conditionals etc","msgtype":"m.text"},"ts":1237675201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"And HTML comments working as real comments, even outside HTML files...","msgtype":"m.text"},"ts":1237675202000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It doesn't say \"you MUST use semicolons\" and then ignore missing semicolons","msgtype":"m.text"},"ts":1237675203000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: That's more about the specification not matching reality, rather than it telling you you must do something and then not caring when you don't","msgtype":"m.text"},"ts":1237675260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I bit myself in java once, I had a class that called a method in its constructor. A subclass included that method, accessing a field in the subclass.","msgtype":"m.text"},"ts":1237675261000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: I suppose so. But js is a rather moving target then :)","msgtype":"m.text"},"ts":1237675320000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"jcranmer: Are there many languages with the same strict concurrency specifications as Java?","msgtype":"m.text"},"ts":1237675321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I imagine the C++0x memory model comes close","msgtype":"m.text"},"ts":1237675380000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I never understood why i++ + i++ is undefined (or is it implementation specific? does it matter?)","msgtype":"m.text"},"ts":1237675381000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: it's because doing an increment is relatively expensive","msgtype":"m.text"},"ts":1237675382000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"is thinking of http://java.sun.com/docs/books/jls/third_edition/html/memory.html#17.4","msgtype":"m.emote"},"ts":1237675440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: For the same reason that f(i++, i++) is undefined, I expect","msgtype":"m.text"},"ts":1237675441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: well, that also has the issue of calling conventions","msgtype":"m.text"},"ts":1237675442000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Dashiva: which is that different compilers and different architectures might prefer to evaluate expressions in different orders, for efficiency","msgtype":"m.text"},"ts":1237675443000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"x86 puts the latter arguments on the stack first","msgtype":"m.text"},"ts":1237675444000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Dashiva: and so the rule is you can't rely on the order","msgtype":"m.text"},"ts":1237675500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so f(i++, i++) on an x86 machine would evaluate the second argument firs","msgtype":"m.text"},"ts":1237675501000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"er, first","msgtype":"m.text"},"ts":1237675502000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I guess that matters much more when you get close to metal, unlike in JS","msgtype":"m.text"},"ts":1237675503000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"JS (with JIT) is close to the metal :-)","msgtype":"m.text"},"ts":1237675560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so C/C++ makes guarantees at statement (with the exception of a few operators) level as opposed to expression level","msgtype":"m.text"},"ts":1237675561000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Dashiva: (It's undefined, not implementation-defined, and in practice implementations will generate totally bogus code for that expression when you have optimisations turned on)","msgtype":"m.text"},"ts":1237675680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"i = i++; is the archetypal expression","msgtype":"m.text"},"ts":1237675681000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Do you know of any cases where implementation defined is actually relied on?","msgtype":"m.text"},"ts":1237675740000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Things like sizeof(int) are implementation defined, and people rely on that","msgtype":"m.text"},"ts":1237675741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(People often rely on undefined behaviour too, e.g. writing \"int i; float f; i = *(int*)(float*)&f;\")","msgtype":"m.text"},"ts":1237675800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just use a union :-)","msgtype":"m.text"},"ts":1237675860000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"No, just use memcpy :-)","msgtype":"m.text"},"ts":1237675861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"union { int int_val; float float_val } num;","msgtype":"m.text"},"ts":1237675862000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"memcpy(&i, &f, 4);","msgtype":"m.text"},"ts":1237675863000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but what if sizeof(int) != 4?","msgtype":"m.text"},"ts":1237675864000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"static_assert(sizeof(int) = 4 && sizeof(float) == 4);","msgtype":"m.text"},"ts":1237675920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/=/==/","msgtype":"m.text"},"ts":1237675921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Float.floatToIntBits :)","msgtype":"m.text"},"ts":1237675922000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"All compilers optimise that memcpy into nothingness","msgtype":"m.text"},"ts":1237675923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"notes that said usecase for unions is actually mentioned in a porting-from-C++-to-Java guide","msgtype":"m.emote"},"ts":1237675924000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"(assuming f is in memory, not in a float register)","msgtype":"m.text"},"ts":1237675925000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't think the C/C++ standards (or at least non-latest versions of them) allow the union trick","msgtype":"m.text"},"ts":1237675980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"because they say a value can only be accessed as the type it was declared as, or as (unsigned) char, or a few minor exceptions","msgtype":"m.text"},"ts":1237676040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"was recently in a conversation where he found it surprisingly hard to convince people that using memcpy was a good idea, since it's efficient in practice and clearly guaranteed to work in the spec and less fiddly than the dodgy unions :-)","msgtype":"m.emote"},"ts":1237676100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"reinterpret_cast ?","msgtype":"m.text"},"ts":1237676280000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"That's the same as C-style casts","msgtype":"m.text"},"ts":1237676340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: Float.floatToIntBits looks like a function call, and function calls are expensive, so that's no good :-p","msgtype":"m.text"},"ts":1237676400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if the JIT would optimize that out","msgtype":"m.emote"},"ts":1237676460000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"If you have a million positive floats to sort, it's nice that C(++) lets you pretend they're integers and sort them more efficiently","msgtype":"m.text"},"ts":1237676520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ponders","msgtype":"m.emote"},"ts":1237676580000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"would that actually work?","msgtype":"m.text"},"ts":1237676581000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"It's also nice to be able to do \"memcpy(&i, &f, 4); ++i; memcpy(&f, &i, 4);\" to get the next highest float","msgtype":"m.text"},"ts":1237676582000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jcranmer: Yes, because ordering is preserved if you reinterpret floats as sign-and-magnitude ints","msgtype":"m.text"},"ts":1237676640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jcranmer: (and it's preserved if you reinterpret positive floats as two's-complement ints)","msgtype":"m.text"},"ts":1237676641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"22:42 < Philip`> \"in virtually every other programming language available to application developers today, failing to write  the 'code' to the code's specification results in the application simply not working\" - not in e.g. C or  C++, where you get unspecified behaviour that often actually works perfectly well in practice","msgtype":"m.text"},"ts":1237679280000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1237679281000,"senderName":"takkaria","senderId":"takkaria@irc"}
]