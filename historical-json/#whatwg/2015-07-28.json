[
{"content":{"body":"hallvors: Protip, submodules are the devil and nobody should ever use them.","msgtype":"m.text"},"ts":1438061571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git-subtree is a little better, but I'm honestly doing fine with \"just git clone the other project in, then delete its .git folder\"","msgtype":"m.text"},"ts":1438061600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: if it's possible to close a component for new bugs, would be good for WebAppsWG/Fullscreen","msgtype":"m.text"},"ts":1438068808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: Fullscreen is GitHub-only now","msgtype":"m.text"},"ts":1438068824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, the Fullscreen component should be closed for new bugs now","msgtype":"m.text"},"ts":1438070985000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Anyone else update https://wiki.whatwg.org/wiki/Specs/todo from time to time?","msgtype":"m.text"},"ts":1438071637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I added SVG since it's apparently not maintained much","msgtype":"m.text"},"ts":1438071649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't update that but can help with it going forward","msgtype":"m.text"},"ts":1438071771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: cool","msgtype":"m.text"},"ts":1438071796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'd imagine heycam|away might not agree SVG should be included there. Or ed either","msgtype":"m.text"},"ts":1438071823000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I thought they were actually somewhat actively working on an sorta living SVG spec these days","msgtype":"m.text"},"ts":1438071864000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: https://svgwg.org/svg2-draft/","msgtype":"m.text"},"ts":1438071934000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and https://svgwg.org/specs/paths/","msgtype":"m.text"},"ts":1438071954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wrote a summary of the custom elements meeting: https://annevankesteren.nl/2015/07/shadow-dom-custom-elements-update","msgtype":"m.text"},"ts":1438079660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would add some links but I didn't see any links to minutes come by","msgtype":"m.text"},"ts":1438079686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Aww, missed the twelve year anniversary of my blog","msgtype":"m.text"},"ts":1438079748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: congrats on that 12-year milestone","msgtype":"m.text"},"ts":1438080713000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: minutes from the f2f at at https://docs.google.com/document/d/1KSwKrTU2d0uJCf55tV-jur_0sYxCNMuM7Dl3vqb0bu4/edit?pli=1","msgtype":"m.text"},"ts":1438080728000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and at https://www.w3.org/2015/07/21-webapps-minutes.html","msgtype":"m.text"},"ts":1438080733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I think maybe also at https://www.w3.org/2015/07/22-webapps-minutes.html","msgtype":"m.text"},"ts":1438080744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or for the W3C links, http instead of https","msgtype":"m.text"},"ts":1438080761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess the \"spans midnight\" command was forgotten","msgtype":"m.text"},"ts":1438080864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438080898000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but there's not much in that https://www.w3.org/2015/07/22-webapps-minutes.html anwyay","msgtype":"m.text"},"ts":1438080912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: \"several focus events that fire synchronously\"?","msgtype":"m.text"},"ts":1438080927000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: in some browsers anyway you can get blur events fired when a focused element is removed from the tree","msgtype":"m.text"},"ts":1438081137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: same for focusout and there should be some trick for getting that with focusin/focus","msgtype":"m.text"},"ts":1438081156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1438081403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nox: regarding https://github.com/whatwg/dom/issues/59#issuecomment-124966988","msgtype":"m.text"},"ts":1438081590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: how can the previous sibling change if node === child?","msgtype":"m.text"},"ts":1438081601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One of these is adopted, so loses its siblings?","msgtype":"m.text"},"ts":1438081628000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: say we have X, Y, Z as siblings, in order","msgtype":"m.text"},"ts":1438081693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: if Y == node == child","msgtype":"m.text"},"ts":1438081699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: X is the previous sibling","msgtype":"m.text"},"ts":1438081706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Z is the reference child marker","msgtype":"m.text"},"ts":1438081713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Y is removed","msgtype":"m.text"},"ts":1438081718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: then Y is inserted before Z","msgtype":"m.text"},"ts":1438081727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: why would X change?","msgtype":"m.text"},"ts":1438081734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"looks at the issue","msgtype":"m.emote"},"ts":1438081748000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh you are correct","msgtype":"m.text"},"ts":1438081823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We need to set the marker before adopting","msgtype":"m.text"},"ts":1438081830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks, that seems to be all","msgtype":"m.text"},"ts":1438081854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Np :)","msgtype":"m.text"},"ts":1438081866000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: have you not hit the problem in Servo where the DOM Standard has basically the wrong internal notifications for remove/insert?","msgtype":"m.text"},"ts":1438082286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://github.com/whatwg/dom/issues/34","msgtype":"m.text"},"ts":1438082315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1438082359000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But that's all a mess in Servo anyway, sadly :/","msgtype":"m.text"},"ts":1438082387000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe I better fix that then so it doesn't become a problem","msgtype":"m.text"},"ts":1438082394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1438082397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's more like it!","msgtype":"m.text"},"ts":1438082399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is CSS basically the only aspect of Servo that's saner than contemporary browsers?","msgtype":"m.text"},"ts":1438082420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the DOM isn't that bad, overall, but there's a lot of work still","msgtype":"m.text"},"ts":1438082488000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I should start looking into 34 since it keeps coming up with custom elements too","msgtype":"m.text"},"ts":1438082524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems higher priority than merging in parts of Shadow DOM","msgtype":"m.text"},"ts":1438082549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"DOM is getting better and better in Servo.","msgtype":"m.text"},"ts":1438083603000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: nox: could you review https://github.com/whatwg/dom/issues/34#issuecomment-125571750 perhaps? Although I guess I should ask bz to be sure","msgtype":"m.text"},"ts":1438084113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't realize that was such a \"trivial\" issue to fix","msgtype":"m.text"},"ts":1438084125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure I get what it is about.","msgtype":"m.text"},"ts":1438084166000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Is it about insertion/removal steps?","msgtype":"m.text"},"ts":1438084173000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: about them not running for descendants at the moment","msgtype":"m.text"},"ts":1438084185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure we want that.","msgtype":"m.text"},"ts":1438084222000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"You need it if you want to implement e.g. <iframe> properly","msgtype":"m.text"},"ts":1438084243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Say you have <p><iframe></iframe></p>","msgtype":"m.text"},"ts":1438084253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I remove <p>","msgtype":"m.text"},"ts":1438084255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<iframe> doesn't use insertion/removing steps.","msgtype":"m.text"},"ts":1438084256000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yes it does","msgtype":"m.text"},"ts":1438084259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You now need to destroy the <iframe>'s document and global object","msgtype":"m.text"},"ts":1438084276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It does things on insertion/removal, but IIRC it doesn't explicitly mention this thing.","msgtype":"m.text"},"ts":1438084279000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"For that <p>'s descendants need to be modified","msgtype":"m.text"},"ts":1438084289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"notified*","msgtype":"m.text"},"ts":1438084296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Of course, my Internet doesn't want to work…","msgtype":"m.text"},"ts":1438084302000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Why is it always when conversations are interesting that the thing breaks?","msgtype":"m.text"},"ts":1438084318000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1438084330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: <iframe> links to https://html.spec.whatwg.org/multipage/infrastructure.html#remove-an-element-from-a-document","msgtype":"m.text"},"ts":1438084383000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's not DOM's removing steps, AFAICT.","msgtype":"m.text"},"ts":1438084391000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: eventually it will be","msgtype":"m.text"},"ts":1438084402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: how else would the world be tied together?","msgtype":"m.text"},"ts":1438084411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What do yomou vimean","msgtype":"m.text"},"ts":1438084421000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Wow, what do you mean*?","msgtype":"m.text"},"ts":1438084428000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: a bunch of HTML is basically monkey patching DOM due to missing stuff","msgtype":"m.text"},"ts":1438084434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mmmh…","msgtype":"m.text"},"ts":1438084459000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'm pretty sure there are occurences of insertion steps that you don't want as descendants.","msgtype":"m.text"},"ts":1438084471000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I'm not sure what that means, but tell me this, how would you implement the \"removed from a document\" requirements using the current set of primitives in the DOM?","msgtype":"m.text"},"ts":1438084505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: <img> for example,","msgtype":"m.text"},"ts":1438084507000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I would keep current \"insertion steps\" as \"insertion steps in a parent\",","msgtype":"m.text"},"ts":1438084532000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and I would introduce the concept of \"insertion steps in a document\".","msgtype":"m.text"},"ts":1438084541000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The latter being called on all inclusive descendants.","msgtype":"m.text"},"ts":1438084554000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that's effectively what this is","msgtype":"m.text"},"ts":1438084559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: just not scoped to documents, because the notifications in browsers aren't either","msgtype":"m.text"},"ts":1438084572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what you mean.","msgtype":"m.text"},"ts":1438084586000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: if you internet connection is up you might want to follow the links at the top of the issue","msgtype":"m.text"},"ts":1438084608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: you have both Gecko and Blink folks explaining their internal callbacks","msgtype":"m.text"},"ts":1438084623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My problem with this is that you then need to sometimes check whether the node in the insertion and removal steps is actually a top-level node.","msgtype":"m.text"},"ts":1438084664000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's why I would rather have two different things.","msgtype":"m.text"},"ts":1438084671000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: given that's more complicated and doesn't match existing browsers I doubt that's a better setup","msgtype":"m.text"},"ts":1438084766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: is this based on the subset of the DOM Servo implements today?","msgtype":"m.text"},"ts":1438084802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: For example, I care that an <img> was removed as a descendant because I might take this as an opportunity to free memory or whatnot, but I care for different reasons if it is actually removed directly because I might need to do some things if it is removed from a <picture>.","msgtype":"m.text"},"ts":1438084874000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Currently Servo has bind_to_tree and unbind_to_tree and children_changed.","msgtype":"m.text"},"ts":1438084902000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The first two sound the same as in the first link in the issue, the latter behaves more or less like childList mutations.","msgtype":"m.text"},"ts":1438084930000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, bind_to_tree / unbind_to_tree are what this bug is about","msgtype":"m.text"},"ts":1438084948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: children_changed is that mutation observers give","msgtype":"m.text"},"ts":1438084973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I know, I'm saying they should correspond to \"inserted/removed from a document\" and that \"insertion/removing steps\" should be something else.","msgtype":"m.text"},"ts":1438084984000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't see why we'd have four concepts where Servo and every other browser has two","msgtype":"m.text"},"ts":1438085012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"The element's parent is a picture element and a source element is inserted as a previous sibling.\" That sounds complicated to implement if you always need to check in bind_to_tree whether the node as a parent or not.","msgtype":"m.text"},"ts":1438085018000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If a removed <source> element has still a parent when calling unbind_to_tree on it, that means it was removed as a descendant,","msgtype":"m.text"},"ts":1438085045000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"if it doesn't have a parent anymore, it was the actual node removed.","msgtype":"m.text"},"ts":1438085058000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Won't conflating the two still need to repeat that every time when actually specifying the steps?","msgtype":"m.text"},"ts":1438085078000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Some algorithms might need such a check, sure","msgtype":"m.text"},"ts":1438085121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's why I don't think it's a good idea to conflate them.","msgtype":"m.text"},"ts":1438085152000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If that's your only concern I think we'll manage","msgtype":"m.text"},"ts":1438085232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How would you reformulate \"If a source element is inserted as a child of a media element that has no src attribute and whose networkState has the value NETWORK_EMPTY, the user agent must invoke the media element's resource selection algorithm.\" when conflating the two?","msgtype":"m.text"},"ts":1438085250000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"We can always separate node and descendant notification later on...","msgtype":"m.text"},"ts":1438085252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"If the parent passed to insertion steps is equal to the parent of the <source> inserted element, and the parent is a media element (…), the user agent must invoke (…)\"?","msgtype":"m.text"},"ts":1438085291000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"seems reasonable","msgtype":"m.text"},"ts":1438085317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems confusing to me.","msgtype":"m.text"},"ts":1438085327000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"if it's common I imagine we might have a shorthand for such a check","msgtype":"m.text"},"ts":1438085337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it's super common though","msgtype":"m.text"},"ts":1438085350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the more common case is about document / out-of-document","msgtype":"m.text"},"ts":1438085368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which makes me wonder, anyone know how fast the \"in composed tree\" check is with the new slots proposal?","msgtype":"m.text"},"ts":1438085458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"Specifications may define insertion steps for all or some nodes. The algorithm is passed newNode as indicated in the insert algorithm below.\"","msgtype":"m.text"},"ts":1438085526000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Then that needs to change too and be passed the parent like in removing steps.","msgtype":"m.text"},"ts":1438085539000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Otherwise you will never know if the node was directly inserted or only as a descendant.","msgtype":"m.text"},"ts":1438085562000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, it needs an inclusiveAncestorNode","msgtype":"m.text"},"ts":1438085635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why inclusive?","msgtype":"m.text"},"ts":1438085661000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I would just mimic \"Specifications may define removing steps for all or some nodes. The algorithm is passed removedNode, oldParent, and oldPreviousSibling, as indicated in the remove algorithm below.\"","msgtype":"m.text"},"ts":1438085699000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Without oldPreviousSibling because I don't think that's useful for insertion steps.","msgtype":"m.text"},"ts":1438085740000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So \"Specifications may define insertion steps for all or some nodes. The algorithm is passed newNode and parent as indicated in the insert algorithm below.\"","msgtype":"m.text"},"ts":1438085793000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: why do you need parent actually? wouldn't that just be newNode.parent?","msgtype":"m.text"},"ts":1438085845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No,","msgtype":"m.text"},"ts":1438085855000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: if I insert a <picture> with an <img> inside,","msgtype":"m.text"},"ts":1438085863000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't want that to be considered as a \"relevant mutation\" for the <img> node.","msgtype":"m.text"},"ts":1438085886000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: <img> would get a callback for being inserted","msgtype":"m.text"},"ts":1438085902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it shouldn't change the state of the <picture>.","msgtype":"m.text"},"ts":1438085913000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that's why browsers hand out these notifications twice I think","msgtype":"m.text"},"ts":1438085955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what you mean.","msgtype":"m.text"},"ts":1438085965000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: If I remove a form from a document,","msgtype":"m.text"},"ts":1438085975000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't want the form-associated elements to trigger the parts of their removing steps that alter the form.","msgtype":"m.text"},"ts":1438086010000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I need to know whether an element was inserted/removed itself or as a descendant.","msgtype":"m.text"},"ts":1438086030000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just passing newNode to the insertion steps doesn't allow that.","msgtype":"m.text"},"ts":1438086051000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: how would that work for a descendant <iframe> of the <form>?","msgtype":"m.text"},"ts":1438086057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't see how that is related.","msgtype":"m.text"},"ts":1438086070000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I don't see how insertion steps are related to removing a form","msgtype":"m.text"},"ts":1438086084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Forget about the form, I'm trying to find a better example.","msgtype":"m.text"},"ts":1438086108000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":" annevk: thanks for the comment on 'delegatesFocus' issue. What's your feeling about how 'delegatesFocus' thing fits in shadow DOM v1?","msgtype":"m.text"},"ts":1438086109000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/#relevant-mutations","msgtype":"m.text"},"ts":1438086133000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"kochi: dunno, it wasn't really discussed in the meeting","msgtype":"m.text"},"ts":1438086136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: UI input in general is kind of a mess :/","msgtype":"m.text"},"ts":1438086157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Am I correct in saying this link does not say anything about inserting in/removing from a document, right?","msgtype":"m.text"},"ts":1438086168000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: If I remove a <picture> that has an <img> child,","msgtype":"m.text"},"ts":1438086190000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err,","msgtype":"m.text"},"ts":1438086198000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"If I insert a <picture> that has an <img> child in a document,","msgtype":"m.text"},"ts":1438086207000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"how do I not update the image data of the <img> when its insertion steps are invoked, given I can't know whether they were invoked because the <img> itself was inserted or because its <picture> parent was?","msgtype":"m.text"},"ts":1438086262000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"kochi: and given that most of focus stuff is unexplained when it comes to composed trees... seems hard to add something new","msgtype":"m.text"},"ts":1438086272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Let's say I have an element <foo> which insertion steps say \"foo inserted in bar\" should be logged to the console if its new parent is a <bar> element,","msgtype":"m.text"},"ts":1438086368000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: if <img>'s callbacks run removedNode would be <picture>, which is still <img>'s parent so it has no reason to do anything?","msgtype":"m.text"},"ts":1438086371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I insert \"<bar><foo/></bar>\" in the document,","msgtype":"m.text"},"ts":1438086380000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"if the insertion steps are invoked for all descendants with only the node, \"foo inserted in bar\" will be logged and that would be wrong.","msgtype":"m.text"},"ts":1438086407000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I'm talking about insertion here.","msgtype":"m.text"},"ts":1438086428000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The removal steps can distinguish the two because they are passed oldParent.","msgtype":"m.text"},"ts":1438086440000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: are you assuming the callback needs to be passed the this object?","msgtype":"m.text"},"ts":1438086492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand what you mean.","msgtype":"m.text"},"ts":1438086509000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that it needs a reference to the element for which it was invoked?","msgtype":"m.text"},"ts":1438086528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm saying insertion steps, like removing steps, should be passed the parent of the actually-inserted/removed node.","msgtype":"m.text"},"ts":1438086530000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"why isn't passing the actually-inserted node enough?","msgtype":"m.text"},"ts":1438086552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, currently shadow DOM spec says focus is based on tree-of-trees, not explained in terms of composed tree.","msgtype":"m.text"},"ts":1438086559000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Because of what I just explained.","msgtype":"m.text"},"ts":1438086561000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"you can just query its parent, no?","msgtype":"m.text"},"ts":1438086563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Let's say I have an element <foo> which insertion steps say \"foo inserted in bar\" should be logged to the console if its new parent is a <bar> element, I insert \"<bar><foo/></bar>\" in the document,  if the insertion steps are invoked for all descendants with only the node, \"foo inserted in bar\" will be logged and that would be wrong.\"","msgtype":"m.text"},"ts":1438086579000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'm saying that insertion steps as defined currently aren't good enough to be invoked on all descendants.","msgtype":"m.text"},"ts":1438086594000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Because contrary to removing steps, you can't include a step that disambiguates insertion-as-actually-inserted-node from insertion-as-descendant-of-actually-inserted-node.","msgtype":"m.text"},"ts":1438086633000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"In your case <foo> is the object for which the callback is invoked, newNode is <bar>, so <foo> knows it's not inserted since then newNode would be <foo>","msgtype":"m.text"},"ts":1438086715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What?","msgtype":"m.text"},"ts":1438086727000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Aren't we talking about running these steps for all the descendants?","msgtype":"m.text"},"ts":1438086741000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yes, but newNode wouldn't change","msgtype":"m.text"},"ts":1438086752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Insertion steps have no context object currently AFAICT.","msgtype":"m.text"},"ts":1438086777000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It's just \"Run the insertion steps with newNode.\"","msgtype":"m.text"},"ts":1438086809000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah, hence I asked before if you were saying that \"it needs a reference to the element for which it was invoked?\" because that I agree with","msgtype":"m.text"},"ts":1438086813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. If we actually have two bits of data that makes sense,","msgtype":"m.text"},"ts":1438086831000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"now I get why you mentioned \"inclusive ancestor node\".","msgtype":"m.text"},"ts":1438086839000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: All is right with the world then. :)","msgtype":"m.text"},"ts":1438086846000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Good :-)","msgtype":"m.text"},"ts":1438086864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure we want a context object though, judging from how it's currently written,","msgtype":"m.text"},"ts":1438086871000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just waiting for a +1 from bz at this point","msgtype":"m.text"},"ts":1438086882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was under the impression that DOM allows you to have some global insertion steps,","msgtype":"m.text"},"ts":1438086884000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, new parameter is probably better","msgtype":"m.text"},"ts":1438086888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like something that describes insertion steps whichever the combination of inserted node and parent.","msgtype":"m.text"},"ts":1438086909000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: since in the custom element story these callbacks are per element in the registry and not necessarily associated with instances","msgtype":"m.text"},"ts":1438086967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So no context object right?","msgtype":"m.text"},"ts":1438086982000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I would imagine we pass \"currentNode\" and \"newNode\" or some such; I don't think parent makes much sense, since that's newNode.parent","msgtype":"m.text"},"ts":1438087023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: but I guess I should study what existing libraries do","msgtype":"m.text"},"ts":1438087042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure we would ever need newNode, and it would keep the symmetry with removing steps.","msgtype":"m.text"},"ts":1438087065000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's why I suggested a parent, but either way it's fine with me.","msgtype":"m.text"},"ts":1438087076000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1438087104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Given you are cleaning this, might as well clean the order of mutation observers as I mentioned in #60. :P","msgtype":"m.text"},"ts":1438087108000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh wait, didn't see your reply on this commit.","msgtype":"m.text"},"ts":1438087131000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you sure we don't need oldPreviousSibling?","msgtype":"m.text"},"ts":1438087133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not sure, but I will explain why I said that:","msgtype":"m.text"},"ts":1438087146000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I'm happy to make that change myself","msgtype":"m.text"},"ts":1438087151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was under the impression that the removing steps always let you get oldNextSibling too (given nodes were removed between the two),","msgtype":"m.text"},"ts":1438087225000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"but I forgot that nodes might have been added through replaceChild,","msgtype":"m.text"},"ts":1438087247000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"anyway, I don't see why you would ever need the previous sibling in the case of insertion, but I guess it wouldn't hurt to be really symmetric.","msgtype":"m.text"},"ts":1438087319000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't think browsers have it for insertion (and there you can just get it). I'm pretty sure it's there for removal though","msgtype":"m.text"},"ts":1438087350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll try my hand at fixing #60, I'm curious and want to use bikeshed.","msgtype":"m.text"},"ts":1438087465000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1438087544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Such a relieve that fixing insertion/removal is actually this trivial. I was preparing myself for a multiple-days-long-rewrite...","msgtype":"m.text"},"ts":1438087602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was told from Hayato that the focus navigation order of distributed trees were changed to document order rather than composed tree order to explain <details> <summary>. https://bugs.webkit.org/show_bug.cgi?id=92050","msgtype":"m.text"},"ts":1438087629000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: okay, but does that mean that shadow tree elements cannot have focus at all?","msgtype":"m.text"},"ts":1438087812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: because that seems unlikely","msgtype":"m.text"},"ts":1438087817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: and that would need to be explained in some way","msgtype":"m.text"},"ts":1438087827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't understand your question... maybe I should have said 'tree-of-trees' order rather than 'document order'?","msgtype":"m.text"},"ts":1438087908000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: maybe, although tree-of-trees kind of indicates you can focus nodes not rendered anywhere, but maybe that is already true?","msgtype":"m.text"},"ts":1438088009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think inert nodes are not focusable, and will not be visited via TAB navigation.","msgtype":"m.text"},"ts":1438088086000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"maybe tree-of-trees -> \"shadow-including document\" at some point","msgtype":"m.text"},"ts":1438088102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tree-of-trees is rather weird","msgtype":"m.text"},"ts":1438088115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: anyway, either way the current focus model doesn't accommodate shadow trees, agreed?","msgtype":"m.text"},"ts":1438088168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: reviewing https://html.spec.whatwg.org/multipage/interaction.html#focus nothing seems to consider them anyway","msgtype":"m.text"},"ts":1438088249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: currently in shadow DOM spec, \"focus navigation\" and \"active element\" is patched against HTML spec, what do you think is missing still?","msgtype":"m.text"},"ts":1438088303000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: how does http://w3c.github.io/webcomponents/spec/shadow/#focus-navigation patch HTML?","msgtype":"m.text"},"ts":1438088346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so you want the shadow DOM spec to be actually patcheable to HTML spec?  say, patch to HTML spec \"6.4.5 Sequential focus navigation\"?","msgtype":"m.text"},"ts":1438088503000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: yes","msgtype":"m.text"},"ts":1438088579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: the goal here is that ShadowRoot et al become just as normal as Text","msgtype":"m.text"},"ts":1438088613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: this requires a massive amount of changes since introducing a new kind of node is expensive","msgtype":"m.text"},"ts":1438088634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: but if we want to write tests and build new things on top, this is what we have to do","msgtype":"m.text"},"ts":1438088653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, let me understand the goal more.  currently ShadowRoot is a DocumentFragment, and \"Text\" is a text node, right?","msgtype":"m.text"},"ts":1438088794000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: yup","msgtype":"m.text"},"ts":1438088837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can phrase it differently perhaps. We have a bunch of specifications and algorithms that assume there is no Shadow DOM. Now there is Shadow DOM. We need to update the bunch of specifications and algorithms to take that into account.","msgtype":"m.text"},"ts":1438088902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah yeah, the \"in a document\" thing that Hayato has been working on is a part of it.","msgtype":"m.text"},"ts":1438088956000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Yeah, Hixie proposed a set of changes for that one too I believe","msgtype":"m.text"},"ts":1438088980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Another thing is firing \"scoped events\" vs firing \"unscoped events\"","msgtype":"m.text"},"ts":1438089025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so then preparing a rewrite of some sections of HTML spec (esp. 6.4.5 Sequential focus navigation et al.) to take shadow DOM into account to see how the \"diff\" from the current version is the step that I can take?","msgtype":"m.text"},"ts":1438089146000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"to see how the \"diff\" from the current version look like","msgtype":"m.text"},"ts":1438089201000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: yeah, first explain how Shadow DOM focus works in general","msgtype":"m.text"},"ts":1438089201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: then introduce a new feature on top","msgtype":"m.text"},"ts":1438089211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay, let me try.","msgtype":"m.text"},"ts":1438089243000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I'm not sure how difficult it is, as focus in the HTML spec is already a beast :)","msgtype":"m.text"},"ts":1438089301000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"That is kind of why I would like to see HTML + Shadow DOM focus explained before we add a new feature on top","msgtype":"m.text"},"ts":1438089374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: now I think I understand \"ShadowRoot et al become just as normal as Text\" a little bit more  :)","msgtype":"m.text"},"ts":1438089511000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"it's hard to become a first-class citizen.","msgtype":"m.text"},"ts":1438089568000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"annevk: thanks for your help!","msgtype":"m.text"},"ts":1438089610000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: thanks for taking it on :-)","msgtype":"m.text"},"ts":1438089621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://twitter.com/kubosho_/status/625978108189880320","msgtype":"m.text"},"ts":1438089958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://heycam.github.io/webidl/#dfn-create-frozen-array seems to only provide shallow immutability - if it contains e.g. dictionaries, their contents can be mutated freely. Is that a bug? Should it freeze recursively?","msgtype":"m.text"},"ts":1438091912000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: not sure, Domenic or heycam|away or bz (not in this channel) might be able to help","msgtype":"m.text"},"ts":1438092085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"johnme: prolly easiest way for a quick response is to file a bug","msgtype":"m.text"},"ts":1438092107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, I'll do that","msgtype":"m.text"},"ts":1438092131000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: note also that frozen only ever freezes properties, this is really a bit of a hack","msgtype":"m.text"},"ts":1438092161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems the goal of FrozenArray was to be able to expose objects in an immutable manner, e.g. so that the same object can be returned each time","msgtype":"m.text"},"ts":1438092238000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"so it seems it would make more sense if the immutability was recursive","msgtype":"m.text"},"ts":1438092258000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: it doesn't make the objects immutable though, so it's unclear whether this trick works for other kind of objects","msgtype":"m.text"},"ts":1438092371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given objects aren't immutable in a FrozenArray, why would dictionaries?","msgtype":"m.text"},"ts":1438092397000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"is it too late to change the spec so that objects in a FrozenArray are immutable?","msgtype":"m.text"},"ts":1438092429000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"It's not clear how you'd spec it other than restricting what kind of objects you can put in there","msgtype":"m.text"},"ts":1438092457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or only allowing primitives...","msgtype":"m.text"},"ts":1438092486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I was hoping objects in a FrozenArray would themselves be frozen (have non-writable properties), though that begs the question of whether to freeze objects that can be accessed from the object's properties/methods","msgtype":"m.text"},"ts":1438092600000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"annevk: and if so, how many levels deep this should apply","msgtype":"m.text"},"ts":1438092620000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: Non-writable properties doesn't make them immutable, does it?","msgtype":"m.text"},"ts":1438092624000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"johnme: e.g. if you have a Headers object there, you'd still be able to invoke headersInstance.set(...) and such","msgtype":"m.text"},"ts":1438092656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To me the change to FrozenArray just meant that you couldn't alter the array shape, not anything else.","msgtype":"m.text"},"ts":1438092665000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"johnme: freeze() is really for some security research from Mark Miller","msgtype":"m.text"},"ts":1438092700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You don't remove stuff from it, you don't add more things into it, but the things inside you do whatever you want with them.","msgtype":"m.text"},"ts":1438092700000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"johnme: it was used here to make the array immutable, with the hope of later using an actual immutable array","msgtype":"m.text"},"ts":1438092712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"my use case is adding a sequence of NotificationAction dictionaries to NotificationOptions, that I'd then like to expose on Notification as a FrozenArray<NotificationAction>","msgtype":"m.text"},"ts":1438092795000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"But I guess I'll have to split it into a NotificationActionInit dictionary and a NotificationAction interface with readonly attributes","msgtype":"m.text"},"ts":1438092833000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: filing a bug on IDL seems like the easiest first step","msgtype":"m.text"},"ts":1438092842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok :)","msgtype":"m.text"},"ts":1438092852000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: but yeah, I thought Chrome/Blink folks also had some reluctance with returning plain objects, but maybe that changed","msgtype":"m.text"},"ts":1438092879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there an example idl for an reflected attribtue that is restrict to valid values only?","msgtype":"m.text"},"ts":1438093272000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: usually that's just readonly attribute DOMString attrName;","msgtype":"m.text"},"ts":1438093299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: with invocation of that prose turning it into enum behavior","msgtype":"m.text"},"ts":1438093341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: https://html.spec.whatwg.org/multipage/forms.html#attr-keygen-keytype and https://html.spec.whatwg.org/multipage/forms.html#dom-keygen-keytype for a somewhat simple example","msgtype":"m.text"},"ts":1438093526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1438093941000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"annevk: for the referrer policy thing, we'd mark the attribute as reflected as well, right?","msgtype":"m.text"},"ts":1438094009000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: yeah","msgtype":"m.text"},"ts":1438094031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: the only difference would be that it's the referrerPolicy IDL attribute reflecting the referrerpolicy content attribute (different names)","msgtype":"m.text"},"ts":1438094075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhm","msgtype":"m.text"},"ts":1438094144000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"that sounds like something you'd put in prose, no?","msgtype":"m.text"},"ts":1438094150000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"jochen__: https://html.spec.whatwg.org/multipage/forms.html#dom-fs-formenctype","msgtype":"m.text"},"ts":1438094177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: yeah","msgtype":"m.text"},"ts":1438094180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that tweet, the guy just seems to be describing the search syntax he uses when he wants to find out information about an html element","msgtype":"m.text"},"ts":1438094264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, figured, seems kind involved","msgtype":"m.text"},"ts":1438094282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kinda*","msgtype":"m.text"},"ts":1438094287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438094297000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://twitter.com/codepo8/status/626038604964364289","msgtype":"m.text"},"ts":1438097584000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"having a hard time seeing that post as anything but a troll","msgtype":"m.text"},"ts":1438097596000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"meh, it's typical ppk","msgtype":"m.text"},"ts":1438097636000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So you're in agreement","msgtype":"m.text"},"ts":1438097653000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sadly it seems to be working if the twitter threads starting up is any indication","msgtype":"m.text"},"ts":1438097698000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess I should stop looking at them","msgtype":"m.text"},"ts":1438097702000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yes, there probably should be /more/ focus on fixing bugs in existing features… but that doesn't mean stopping development of stuff going forward","msgtype":"m.text"},"ts":1438097773000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: if I want to check that something is in the range 0 to N and is not 5, should I use RangeError for both checks?","msgtype":"m.text"},"ts":1438097846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: It's all irrelevant. One person saying \"let's stop making more features\" isn't enough to counteract the huge pressure to keep adding new features","msgtype":"m.text"},"ts":1438098018000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yep... I'm suffering from \"someone is wrong on the internet!\" syndrome","msgtype":"m.text"},"ts":1438098048000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Also, black-and-white positions rarely move the needle","msgtype":"m.text"},"ts":1438098053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and his argument isn't even internally consistent; he cites \"offline\" as a \"experience\" thing when it's actually a \"feature\" thing at this stage","msgtype":"m.text"},"ts":1438098065000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, at least you haven't spent this time implementing new features","msgtype":"m.text"},"ts":1438098096000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Plus, I remember in 2007 people arguing that browsers should agree a common timeline on features that they would all polish before moving on","msgtype":"m.text"},"ts":1438098101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I expect this will work as well now as it did then","msgtype":"m.text"},"ts":1438098117000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Except ppk will get a few more hits on his site","msgtype":"m.text"},"ts":1438098132000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I remember that Google was going to drop h264","msgtype":"m.text"},"ts":1438098140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: I'm going to assume I should use a RangeError","msgtype":"m.text"},"ts":1438098150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1438098153000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I remember that Ms2ger was going to spec DOM Parsing & Serialization","msgtype":"m.text"},"ts":1438098205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lol","msgtype":"m.text"},"ts":1438098234000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, still think he should","msgtype":"m.text"},"ts":1438098340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I imagine the promise looked like google.drop_h264().then(()=>Ms2ger.write_parsing_and_serialization())","msgtype":"m.text"},"ts":1438098457000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But we didn't support ES6 yet then so we just got a SyntaxError","msgtype":"m.text"},"ts":1438098497000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Kind of confusing for an instance to start with a capital","msgtype":"m.text"},"ts":1438098497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"More like google.addEventListener(\"drop_h264\", function() { Ms2ger.write_parsing_and_serialization() }), clearly :)","msgtype":"m.text"},"ts":1438098524000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think the \"multiple browsers have to implement to be a real standard\" keeps things from moving forward too fast... real threat is if one browser has so much market share they can force others to implement things at a reckless pace","msgtype":"m.text"},"ts":1438098549000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: Take that up with Ms2ger","msgtype":"m.text"},"ts":1438098573000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: also different people have different views of reckless… is a few failing I-think-edge-cases-but-nobody-has-started-using-it-yet tests reason to withold shipping? is one or two more likely tests failing reason to, etc?","msgtype":"m.text"},"ts":1438098688000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yea... which is why the conditions for \"at least 2 agree\" consensus state is nice for throttling things","msgtype":"m.text"},"ts":1438098726000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we've had plenty of examples of shipping \"recklessly\"","msgtype":"m.text"},"ts":1438098868000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"definitely","msgtype":"m.text"},"ts":1438098877000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: sounds good yes","msgtype":"m.text"},"ts":1438098921000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, at 2015-07-27 04:50 UTC, MikeSmith said: botie now understands \"tell\"","msgtype":"m.text"},"ts":1438098922000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"mathiasbynens: you want to study https://html.spec.whatwg.org/multipage/webappapis.html#dom-document-open","msgtype":"m.text"},"ts":1438102881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: in particular look at the crazy that is step 15","msgtype":"m.text"},"ts":1438102894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: if you want to answer that Twitter conversation yourself","msgtype":"m.text"},"ts":1438102918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice: https://twitter.com/w3tmemes/status/626078922980110336","msgtype":"m.text"},"ts":1438104100000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: woah. so both Chromium and WebKit are violating the spec here?","msgtype":"m.text"},"ts":1438104595000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1438104605000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mathiasbynens: not sure, they might do it slightly differently","msgtype":"m.text"},"ts":1438104609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: replacing globals is rather involved...","msgtype":"m.text"},"ts":1438104620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: would be interesting to figure out what everyone is really doing","msgtype":"m.text"},"ts":1438104637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i based ^ on the following quick test: data:text/html,<script>a=42</script>","msgtype":"m.text"},"ts":1438104655000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"and then using DevTools to `document.write(a)`","msgtype":"m.text"},"ts":1438104664000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Fx is the odd one out","msgtype":"m.text"},"ts":1438104680000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Well, I think both WebKit/Blink are doing some work on their Window object bindings, so you might just be observing that","msgtype":"m.text"},"ts":1438104754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Could also be something else, hard to say without more tests","msgtype":"m.text"},"ts":1438104784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: IIRC Gecko and Trident (and Presto) have followed the spec and Webkit (and then also blink) was against the spec","msgtype":"m.text"},"ts":1438105142000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk, does Firefox support SVGs?","msgtype":"m.text"},"ts":1438105580000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"(In notification images)","msgtype":"m.text"},"ts":1438105586000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: I'm not sure","msgtype":"m.text"},"ts":1438105600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: we support them for favicon finally","msgtype":"m.text"},"ts":1438105612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, interesting, I don't think we support that either","msgtype":"m.text"},"ts":1438105643000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: yeah, WHATWG specifications look boring in Chrome","msgtype":"m.text"},"ts":1438105681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: except for HTML, probably because Hixie doesn't insist (yet)","msgtype":"m.text"},"ts":1438105694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: note that usage of SVG there predates Firefox supporting it","msgtype":"m.text"},"ts":1438105713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sure. we do get a lot of feedback about wanting to generate icons on the fly in a Service Worker, SVG might be a solution for that","msgtype":"m.text"},"ts":1438105741000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I suspect you'll get \"WorkerCanvas\" way before \"WorkerDOM\", but who knows","msgtype":"m.text"},"ts":1438105778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, that'd be great","msgtype":"m.text"},"ts":1438105791000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: thanks for helping out with the review btw","msgtype":"m.text"},"ts":1438105933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, John sits right next to me, making it easy to chat :)","msgtype":"m.text"},"ts":1438106071000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk, svg in favicons is WontFix for IE: https://connect.microsoft.com/IE/feedback/details/782416/svg-favicon-support","msgtype":"m.text"},"ts":1438106662000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk, the Chrome bug is https://crbug.com/294179, WebKit bug http://wkbug.com/136059","msgtype":"m.text"},"ts":1438106694000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk, supporting this in favicons is *very* similar for us to supporting it for notification images","msgtype":"m.text"},"ts":1438106715000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"https://wpdev.uservoice.com/forums/257854-internet-explorer-platform/suggestions/6509196-svg-favicons seems like the new place to be","msgtype":"m.text"},"ts":1438106874000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, cheers! I updated our bug with the latest status","msgtype":"m.text"},"ts":1438107023000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: meh, IE wontfixed \"XHR2\" too","msgtype":"m.text"},"ts":1438114450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hehehe","msgtype":"m.text"},"ts":1438114751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyone have thoughts on portably testing exception messages? https://lists.w3.org/Archives/Public/public-test-infra/2015JulSep/0002.html","msgtype":"m.text"},"ts":1438121731000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"jyasskin_w: Ms2ger does","msgtype":"m.text"},"ts":1438123504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: Is my proposal on that thread right? Is there a better way?","msgtype":"m.text"},"ts":1438123550000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"and jgraham, as you know","msgtype":"m.text"},"ts":1438123554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep.","msgtype":"m.text"},"ts":1438123559000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1438123561000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"I'd rather spec the messages","msgtype":"m.text"},"ts":1438123598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Interesting, but I'm not sure we can. Different platforms have different information available, and I'd like them to be free to help their developers as much as they can.","msgtype":"m.text"},"ts":1438123823000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"e.g. platforms may or may not expose the exact GATT error message. It'd be nice to let them show it if they have it, but conform if they don't.","msgtype":"m.text"},"ts":1438123906000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"slightlyoff says Chrome has a principled objection to specifying messages.","msgtype":"m.text"},"ts":1438124074000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"if you don't spec something properly, web pages end up relying on the behavior of the browser the developer happens to use. /me agrees with Ms2ger","msgtype":"m.text"},"ts":1438124153000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"specifically messages shown to end users","msgtype":"m.text"},"ts":1438124164000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"These are API-accessible messages","msgtype":"m.text"},"ts":1438124181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, then I have a principled objection against testing them","msgtype":"m.text"},"ts":1438124185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"we are likely to change them over time and won't spec UI","msgtype":"m.text"},"ts":1438124190000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"oh... api accessible....hrm","msgtype":"m.text"},"ts":1438124212000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"We do have a way to send a different message to the user vs developer, but most of the messages are the .message field.","msgtype":"m.text"},"ts":1438124220000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"But yeah, I don't think that you should simultaneously say they can't be interoperable and must be tested","msgtype":"m.text"},"ts":1438124222000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"howso?","msgtype":"m.text"},"ts":1438124226000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"We must test UI, but UI isn't interoperable.","msgtype":"m.text"},"ts":1438124237000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"(and that's OK)","msgtype":"m.text"},"ts":1438124252000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Right, but we don't test UI in web-platform-tests","msgtype":"m.text"},"ts":1438124256000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And these messages are primarily UI. They do have to be API-accessible so they can be sent back to servers with onerror, but they're for developer consumption, not for testing. If there's a reason for folks to switch on them, that should be reflected in .name, not .message.","msgtype":"m.text"},"ts":1438124284000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"We're not going to write the web bluetooth tests twice, and we're going to test UI somewhere, so if we can't include the UI test in web-platform-tests, then the Web Bluetooth tests won't be upstreamed.","msgtype":"m.text"},"ts":1438124333000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"That would be sad.","msgtype":"m.text"},"ts":1438124348000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"Your position makes no sense to me","msgtype":"m.text"},"ts":1438124365000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sebmaster: annevk: web-platform-tests does not test the parsed href?","msgtype":"m.text"},"ts":1438124384000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why bother testing if they're not supposed to be relied upon?","msgtype":"m.text"},"ts":1438124387000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: We want the developer-facing UI to keep working.","msgtype":"m.text"},"ts":1438124411000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"Anything that's not tested won't keep working.","msgtype":"m.text"},"ts":1438124417000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"jeeez it implicitly assembles the href using a different algorithm than the URL spec does !?!","msgtype":"m.text"},"ts":1438124430000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: test here: https://github.com/w3c/web-platform-tests/blob/master/url/a-element.html#L47","msgtype":"m.text"},"ts":1438124464000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"but yeah, it assembles somehow :D","msgtype":"m.text"},"ts":1438124471000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"Sebmaster: https://github.com/w3c/web-platform-tests/blob/master/url/urltestparser.js#L18-L26","msgtype":"m.text"},"ts":1438124511000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this is bad","msgtype":"m.text"},"ts":1438124514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"isn't the whole file bug about serialization not inserting the //s in the current spec?","msgtype":"m.text"},"ts":1438124523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nah not serialization","msgtype":"m.text"},"ts":1438124564000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"hmm no your patch is in parsing","msgtype":"m.text"},"ts":1438124567000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"parsing i think","msgtype":"m.text"},"ts":1438124570000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"hmm then i need to go find the failing test case again","msgtype":"m.text"},"ts":1438124573000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but i guess it'd rather fit into serialization","msgtype":"m.text"},"ts":1438124586000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"jyasskin_w: FWIW you can't publish a spec at W3C in an actual WG without a testsuite","msgtype":"m.text"},"ts":1438124660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it seems likely you'll have to do that work at some point","msgtype":"m.text"},"ts":1438124675000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: there was of course no plan to","msgtype":"m.text"},"ts":1438124677000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Sebmaster: right so the failing test is parsing \"/path/to/docroot/index.html\" against \"file:/path/to/docroot/index.html\"","msgtype":"m.text"},"ts":1438124678000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sebmaster: in whatwg-url that results in a href of file:/path/to/docroot/index.html","msgtype":"m.text"},"ts":1438124701000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: there's a smaller issue here; which is what we should do about developer-facing strings","msgtype":"m.text"},"ts":1438124710000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Sebmaster: whereas it should result in file:///path/to/docroot/index.html","msgtype":"m.text"},"ts":1438124717000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jgraham: which I don't have the same objection to as end-user-facing UI","msgtype":"m.text"},"ts":1438124721000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: Ah, I misunderstood you then.","msgtype":"m.text"},"ts":1438124728000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"no, I misunderstood","msgtype":"m.text"},"ts":1438124737000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"my fault","msgtype":"m.text"},"ts":1438124739000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Sebmaster: seems like a serialization patch would be better (but there are no tests)","msgtype":"m.text"},"ts":1438124741000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: since the path in that case would just be /path/to/docroot/index.html, this should probably go into serialization","msgtype":"m.text"},"ts":1438124748000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438124749000,"senderName":"Sebmaster","senderId":"Sebmaster@irc"},
{"content":{"body":"nooooo tesssssstsss -_-","msgtype":"m.text"},"ts":1438124758000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hallvors: Got any good examples of error message strings causing compat problems?","msgtype":"m.text"},"ts":1438124796000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'd also like to understand the value of i18n of developer-facing strings","msgtype":"m.text"},"ts":1438124827000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I'm not sure it's something we do much of today","msgtype":"m.text"},"ts":1438124838000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"but I'm ignorant there","msgtype":"m.text"},"ts":1438124843000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"Yeah, I don't know either.","msgtype":"m.text"},"ts":1438124862000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sicking and I always had the idea to add some machine-readable unique standardized string","msgtype":"m.text"},"ts":1438124871000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"error.cause === \"could_not_parse_base_url\"","msgtype":"m.text"},"ts":1438124898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"corresponding to 2.2 in https://url.spec.whatwg.org/#constructors","msgtype":"m.text"},"ts":1438124910000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or a guid","msgtype":"m.text"},"ts":1438124914000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't think we can implement stable message strings in Chrome on multiple platforms without dropping lots of information. e.g. ChromeOS exposes different error conditions than MacOS. Neither documents their error conditions, either.","msgtype":"m.text"},"ts":1438124971000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"Then it seems like you are going to end up changing your expectations here for every OS upgrade","msgtype":"m.text"},"ts":1438125024000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Absolutely. That's why my first patch supported regular expressions, so we can keep the actual test somewhat stable over time. But skipping the message tests isn't going to stop developers from depending on them, either.","msgtype":"m.text"},"ts":1438125090000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"Anyway, if you want to supply a patch that allows you to attach arbitary information to a particular test object and transfer it in the result; something like test.add_data(name, data) I guess I would accept that. You could output that data in expectation files in Chromium. But I think you're letting yourself in for a world of pain if later someone does the same thing for something that isn't stable in Chrome and can't be compared using expectation ","msgtype":"m.text"},"ts":1438125280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Thanks. I should go back to blink-dev to see if folks there have more thoughts. I'm not certain this is the right interface either, but I do think we need _something_.","msgtype":"m.text"},"ts":1438125473000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"},
{"content":{"body":"I think fundamentally if you want to do this you need your test harness to support test-specific logic that can be used to whitelist the cases where you want to compare the proprietary bits","msgtype":"m.text"},"ts":1438125718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the blink test harness just does byte-by-byte comparisons with expectation files, that's not good enough","msgtype":"m.text"},"ts":1438125756000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right, it'll break too often, including if we just have different-but-stable messages on two platforms. On the other hand, test.add_data(name, data) does give us the flexibility to write any assertions we need in the harness.","msgtype":"m.text"},"ts":1438125956000,"senderName":"jyasskin_w","senderId":"jyasskin_w@irc"}
]