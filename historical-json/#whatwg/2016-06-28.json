[
{"content":{"body":"is there a stage-4 proposal list?","msgtype":"m.text"},"ts":1467094209000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"KevinMarks_: why should it call out ETag?","msgtype":"m.text"},"ts":1467095372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, conditional get applies to both etag and last modified","msgtype":"m.text"},"ts":1467097818000,"senderName":"KevinMarks","senderId":"KevinMarks@irc"},
{"content":{"body":"KevinMarks: the conditional request logic is mostly based on request headers","msgtype":"m.text"},"ts":1467097877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KevinMarks: the only reason Last-Modified is mentioned is because that header is safelisted for CORS","msgtype":"m.text"},"ts":1467097893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"KevinMarks: not entirely sure why ETag isn't, but I'm not sure it matters much","msgtype":"m.text"},"ts":1467097935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: do you have an opinion on https://github.com/whatwg/html/pull/1449#issuecomment-228803521 ?","msgtype":"m.text"},"ts":1467105248000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"since there is machinery already for reflecting enumerated attributes for both impl and testing i don't think making this case-sensitive is necessarily simpler to implement and test","msgtype":"m.text"},"ts":1467105354000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: stepping on the value space seems a bigger problem","msgtype":"m.text"},"ts":1467105592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: and the long term confusion that causes, e.g., with HTTP methods","msgtype":"m.text"},"ts":1467105619000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah i agree that that is a problem","msgtype":"m.text"},"ts":1467105753000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: quick question: related to the recent change of offsetParent to unclosed node","msgtype":"m.text"},"ts":1467108104000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"zcorpan: if we traverse up the layout tree and find a fixed position element, which is \"closed\" to the context object, and if it end up that the nearest unclosed one is <body>","msgtype":"m.text"},"ts":1467108221000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"zcorpan: then it should return null, not <body>, right?","msgtype":"m.text"},"ts":1467108266000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"hmm, https://github.com/w3c/csswg-drafts/issues/159 has some follow-up question.","msgtype":"m.text"},"ts":1467108420000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"is reading the thread","msgtype":"m.emote"},"ts":1467108660000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: possibly the spec is not yet what we want it to be. i also don't understand shadow dom well enough yet to be able to say what does and doesn't make sense :-)","msgtype":"m.text"},"ts":1467110134000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'm not a frontend engineer so I'm not sure whether the offsetParent usages of what @platosha put in the thread is popular in the wild or not, but my gut feeling is that the spec still needs some tweaks.","msgtype":"m.text"},"ts":1467113900000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: ok. happy to tweak the spec as necessary","msgtype":"m.text"},"ts":1467114325000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: the problem is that what is the expected answer for web developers :)","msgtype":"m.text"},"ts":1467114436000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467114446000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"> we can remove the \"gone async\" concept","msgtype":"m.text"},"ts":1467116234000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1467116240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Actually making the patch is the hard part","msgtype":"m.text"},"ts":1467116263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, maybe thinking it all through is too","msgtype":"m.text"},"ts":1467116275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since I keep hitting new things","msgtype":"m.text"},"ts":1467116282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I posted comments on the thread.  In \"the nearest ancestor unclosed element\", does \"ancestor\" mean box tree based one? (I'm not familiar with CSS terminology yet)","msgtype":"m.text"},"ts":1467116354000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"if so, an element with fixed position does not have an ancestor, right?","msgtype":"m.text"},"ts":1467116383000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: i think the walk is supposed to be on the DOM tree per spec","msgtype":"m.text"},"ts":1467116463000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, then returning document.body for the case sounds correct, if we follow the spec strictly.","msgtype":"m.text"},"ts":1467116598000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"nox: SimonSapin: what about calc(10% - 10px) ? (which quirk?)","msgtype":"m.text"},"ts":1467116742000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Line height calculation quirk.","msgtype":"m.text"},"ts":1467116770000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: https://quirks.spec.whatwg.org/#the-line-height-calculation-quirk \"","msgtype":"m.text"},"ts":1467116771000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"The border-right-width, border-left-width, padding-right and padding-left properties have a used value of zero.","msgtype":"m.text"},"ts":1467116772000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1467116774000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"This is 0 if containing block is 100px wide.","msgtype":"m.text"},"ts":1467116785000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"But should that trigger the quirk?","msgtype":"m.text"},"ts":1467116791000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"i suppose so, per the current spec :-) but i'm happy to disable the quirk when calc() is used","msgtype":"m.text"},"ts":1467116835000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nox: we should (by which I mean do you wanna?) write test cases and see what other impls do","msgtype":"m.text"},"ts":1467116872000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"zcorpan: I think we could just say \"have a computed value that is definitely zero\", if current browsers don't trigger quirk in such a case.","msgtype":"m.text"},"ts":1467116905000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"SimonSapin: We should indeed. I may do it when I'm done with my webrender stuff.","msgtype":"m.text"},"ts":1467116918000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"As long as \"is definitely zero\" is well-defined","msgtype":"m.text"},"ts":1467116939000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes of course.","msgtype":"m.text"},"ts":1467116949000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"s/definitely zero/0px or 0%/","msgtype":"m.text"},"ts":1467116954000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"http://w3c-test.org/quirks-mode/percentage-height-calculation.html has tests for this quirk but they do not match the current spec, they match a previous version of the spec. i had to change the spec to make <body> fill the viewport","msgtype":"m.text"},"ts":1467116960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"bbiab","msgtype":"m.emote"},"ts":1467116968000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin: Fair enough.","msgtype":"m.text"},"ts":1467117034000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"SimonSapin: the line-height calculation quirk should maybe take writing modes into account","msgtype":"m.text"},"ts":1467122150000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: maybe... if impls do","msgtype":"m.text"},"ts":1467123631000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"If impls need to change I'd rather remove the quirk than make it nicer","msgtype":"m.text"},"ts":1467123692000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: i think these two quirks are ones that can't be removed. note they are also present in limited-quirks which is probably a bigger set of pages than those that are in quirks mode","msgtype":"m.text"},"ts":1467125343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SimonSapin, we're talking about this because even Servo hit webcompat issues from not implementing the quirk, right?","msgtype":"m.text"},"ts":1467125840000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"mathiasbynens: did you ever propose some way to get the length of a JS string in code points?","msgtype":"m.text"},"ts":1467128217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no actual proposal, but I may have started an es-discuss thread about it","msgtype":"m.text"},"ts":1467130806000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"seems more useful than .at() ;P","msgtype":"m.text"},"ts":1467130825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: agreed","msgtype":"m.text"},"ts":1467130854000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Domenic: https://esdiscuss.org/topic/how-to-count-the-number-of-symbols-in-a-string","msgtype":"m.text"},"ts":1467130856000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"(…and `codePointAt`, hah!)","msgtype":"m.text"},"ts":1467130871000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Domenic: really depends on the use case though — some systems count code points, others grapheme clusters","msgtype":"m.text"},"ts":1467130925000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"right yeah","msgtype":"m.text"},"ts":1467130931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I was mostly thinking about this HTML issue https://github.com/whatwg/html/issues/1467","msgtype":"m.text"},"ts":1467130955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the latter is probably more useful in general, but then again the “new” ES2015 APIs all deal with code points","msgtype":"m.text"},"ts":1467130956000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"If we changed textarea[maxlength] to validate code point length then having something in the JS API you could compare it to would make sense","msgtype":"m.text"},"ts":1467130982000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1467131006000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"[...string].length lol","msgtype":"m.text"},"ts":1467131018000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, there’s always [...string].length","msgtype":"m.text"},"ts":1467131019000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"GMTA","msgtype":"m.text"},"ts":1467131022000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"probably shorter than anything we come up with","msgtype":"m.text"},"ts":1467131024000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://esdiscuss.org/topic/how-to-count-the-number-of-symbols-in-a-string#content-11 is fairly compelling too","msgtype":"m.text"},"ts":1467131058000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467131188000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Domenic: thx for reviewing as=\"\". will check again later tonight or tomorrow. :-)","msgtype":"m.text"},"ts":1467131558000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1467131567000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"zcorpan: Ms2ger: yeah, the removing bit is just wishful thinking. It's for the writing mode sensitivity we should write test cases","msgtype":"m.text"},"ts":1467132989000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"https://github.com/whatwg/html/commit/b063361829de68dc0907ecc0764e2582c105cf05 has some of the navigate restructuring I'm planning < Manishearth","msgtype":"m.text"},"ts":1467134384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Needs a lot of polish still","msgtype":"m.text"},"ts":1467134400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And even that is just a rather minor step of a whole lot of changes that are needed 😕","msgtype":"m.text"},"ts":1467134439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: is step 9.b.i of ReadableByteStreamControllerEnqueue() correct? https://streams.spec.whatwg.org/#readable-byte-stream-controller-enqueue","msgtype":"m.text"},"ts":1467140804000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: seems like it should be asserting its a default reader and not that the reader is unlocked?","msgtype":"m.text"},"ts":1467140818000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so it is definitely a default reader; an assert might help. now trying to figure out if the assertion of it being unlocked is false...","msgtype":"m.text"},"ts":1467140888000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the style in other places has been to assert the default reader there","msgtype":"m.text"},"ts":1467140904000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"other places in the streams spec","msgtype":"m.text"},"ts":1467140909000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no, I think it's correct. there are 3 cases: default reader, byob reader, no reader","msgtype":"m.text"},"ts":1467140946000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: like step 6.a of https://streams.spec.whatwg.org/#readable-byte-stream-controller-commit-pull-into-descriptor","msgtype":"m.text"},"ts":1467140950000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: step 8 => default reader. 9a => byob reader. 9b => no reader","msgtype":"m.text"},"ts":1467140966000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh, I see... ok... thanks!","msgtype":"m.text"},"ts":1467140981000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think there should be some de-indenting and maybe an additional assert","msgtype":"m.text"},"ts":1467140982000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I will do a clarifying PR","msgtype":"m.text"},"ts":1467140987000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what is the purpose of the SameRealmTransfer in ReadableByteStreamControllerEnqueue?  I thought we were trying to avoid copying the buffer","msgtype":"m.text"},"ts":1467141357000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: transfer, not copy!","msgtype":"m.text"},"ts":1467141368000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: where else is this concept used?","msgtype":"m.text"},"ts":1467141404000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in HTML a bunch","msgtype":"m.text"},"ts":1467141417000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: postMessage","msgtype":"m.text"},"ts":1467141421000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1467141433000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: the whole goal here is to make the original thing that script has a hold of detached?","msgtype":"m.text"},"ts":1467141454000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: exactly, yeah","msgtype":"m.text"},"ts":1467141480000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://blog.domenic.me/reading-from-files/ kind of goes over it, in a more abstract setting","msgtype":"m.text"},"ts":1467141538000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1467141562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"leaves a big TODO comment there for now.","msgtype":"m.emote"},"ts":1467141572000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1467141591000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the js engine guys pointed me to a serialize/deserialize thing... but I don't think thats what we want here","msgtype":"m.text"},"ts":1467141675000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"since thats a copy","msgtype":"m.text"},"ts":1467141678000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"agree","msgtype":"m.text"},"ts":1467141682000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"this should probably be pretty simple; Mozilla's lth was leading the charge on an ArrayBuffer.transfer method proposal","msgtype":"m.text"},"ts":1467141703000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess it's in nightlies https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer","msgtype":"m.text"},"ts":1467141726000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah that wasn't lth though","msgtype":"m.text"},"ts":1467141746000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: this is only needed for ArrayBuffers in streams spec?","msgtype":"m.text"},"ts":1467141776000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: in the streams spec, only ArrayBuffers are transferred, if that's what you're asking","msgtype":"m.text"},"ts":1467141798000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1467141804000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: should step 8.b here say \"set ready\" instead of \"let ready\"?  since ready was already declared further up","msgtype":"m.text"},"ts":1467143381000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://streams.spec.whatwg.org/#readable-byte-stream-controller-fill-pull-into-descriptor-from-queue","msgtype":"m.text"},"ts":1467143383000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep","msgtype":"m.text"},"ts":1467143399000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: want me to write an issue or do you have time to just fix it?","msgtype":"m.text"},"ts":1467143562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: fixed :)","msgtype":"m.text"},"ts":1467143570000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1467143606000,"senderName":"wanderview","senderId":"wanderview@irc"}
]