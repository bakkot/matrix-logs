[
{"content":{"body":"marcosc: ping","msgtype":"m.text"},"ts":1429492225000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just landed","msgtype":"m.text"},"ts":1429492234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Stallman is on the plane here","msgtype":"m.text"},"ts":1429492398000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what?","msgtype":"m.text"},"ts":1429494117000,"senderName":"theseb","senderId":"theseb@irc"},
{"content":{"body":"Is this a place for asking questions about MIME Sniffing doc?","msgtype":"m.text"},"ts":1429515438000,"senderName":"yongc","senderId":"yongc@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1429516238000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"GPHemsley, ^","msgtype":"m.text"},"ts":1429516240000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"1. In step 8 \"\"While sequence[s] is not equal to the U+002F SOLIDUS    character (\"/\"), continuously execute the following steps\". So for the content-type \"type; parm=value\" will set type as \"type;parm=value\" if there is no ''/\" used type,parm,value.","msgtype":"m.text"},"ts":1429516608000,"senderName":"yongc","senderId":"yongc@irc"},
{"content":{"body":"2. In step 8.2 \"If sequence[s] is undefined, return undefined\", what's the undefined for sequence[s] mean? Non US-ASCII character?","msgtype":"m.text"},"ts":1429516608000,"senderName":"yongc","senderId":"yongc@irc"},
{"content":{"body":"I imagine \"read past the end of the sequence\"","msgtype":"m.text"},"ts":1429516854000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"@Ms2ger, Thanks, from RFC2045, seems \"/\" is mandatory","msgtype":"m.text"},"ts":1429517691000,"senderName":"yongc","senderId":"yongc@irc"},
{"content":{"body":"Perhaps, but that doesn't mean it'll always be there","msgtype":"m.text"},"ts":1429517723000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm, but the doc doesn't handle this.","msgtype":"m.text"},"ts":1429517886000,"senderName":"yongc","senderId":"yongc@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1429531839000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yes, \"type;parm=value\" will eventually terminate at step 8.2 and return undefined.","msgtype":"m.text"},"ts":1429531936000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"yongc: ^","msgtype":"m.text"},"ts":1429531948000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Ms2ger: ^","msgtype":"m.text"},"ts":1429531951000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Does the spec explain somewhere that indexing a sequence at EOF yields \"undefined\"?","msgtype":"m.text"},"ts":1429531993000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Let sequence be the byte sequence of the MIME type, where sequence[s] is byte s in sequence and sequence[0] is the first byte in sequence.\"","msgtype":"m.text"},"ts":1429532054000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"That's intended to imply that if there is no byte s in sequence, then sequence[s] is undefined.","msgtype":"m.text"},"ts":1429532107000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"A byte sequence is a list of one or more bytes, such that the position of the first byte and the position of the last byte are unambiguously identifiable.\"","msgtype":"m.text"},"ts":1429532151000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Perhaps that definition could be extended, if necessary","msgtype":"m.text"},"ts":1429532166000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"intended to imply\" doesn't sound great","msgtype":"m.text"},"ts":1429532169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hasn't actually read the text to see if you actually mean \"unambiguously states\"","msgtype":"m.emote"},"ts":1429532194000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Well, I'm just spelling out my intention of what I meant.","msgtype":"m.text"},"ts":1429532207000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"jgraham: I'll leave it to others to determine whether it matches what I wrote. ;)","msgtype":"m.text"},"ts":1429532229000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"https://mimesniff.spec.whatwg.org/#parse-a-mime-type","msgtype":"m.text"},"ts":1429532261000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Well based on what you have written in channel, it doesn't","msgtype":"m.text"},"ts":1429532262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If it doesn't, then what behavior would be expected?","msgtype":"m.text"},"ts":1429532307000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I have no idea. It seems to be entirely undefined. Maybe your printer is supposed to catch fire?","msgtype":"m.text"},"ts":1429532340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or do you mean \"expected by the web\"?","msgtype":"m.text"},"ts":1429532362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So, it's undefined that it's undefined?","msgtype":"m.text"},"ts":1429532367000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1429532381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1429532384000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Do you think the definition of \"byte sequence\" is an appropriate place to define it?","msgtype":"m.text"},"ts":1429532430000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(Because I use the construct a lot throughout)","msgtype":"m.text"},"ts":1429532439000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"s/the/this/","msgtype":"m.text"},"ts":1429532444000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It seems like you need to define it where you define the indexing operation","msgtype":"m.text"},"ts":1429532449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dang, ok","msgtype":"m.text"},"ts":1429532457000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I mean you should probably define indexing notation in a single place in the spec","msgtype":"m.text"},"ts":1429532589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1429532631000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Or define a <dfn>element of</dfn> operation on sequences that works like indexing but without brackets","msgtype":"m.text"},"ts":1429532634000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=28519","msgtype":"m.text"},"ts":1429532635000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Domenic: I guess SharedArrayBuffer and friends is becoming more real...  have you looked at it in relation to streams API?","msgtype":"m.text"},"ts":1429538491000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, seems like it would allow a .read(view) that modifies view in-place instead of returning a promise fulfilled with a new view backed by the same memory.","msgtype":"m.text"},"ts":1429540157000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that was actually the original plan (more or less) until we realized it would cause user-observable data races","msgtype":"m.text"},"ts":1429540223000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"now that everyone's like \"oh those are fiiiiine\" then i guess we can do it, for SAB.","msgtype":"m.text"},"ts":1429540242000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: or are these races something the SAB spec hasn't thought of?","msgtype":"m.text"},"ts":1429544182000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: SAB is specifically designed to allow races to be exposed to the web","msgtype":"m.text"},"ts":1429544197000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"because that's the only way you can compile C++ to asm.js","msgtype":"m.text"},"ts":1429544212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: btw, in this update to the memory promise issue gist... can you explain how that lets the chain get dropped?  it seems obervable .then requires the chain to be maintained:  https://gist.github.com/wanderview/16f2839ba57514a625c4#comment-1435869","msgtype":"m.text"},"ts":1429544216000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: there's no return, so no chain actually gets set up","msgtype":"m.text"},"ts":1429544249000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think there might be a solution that allows both, have yet to test it","msgtype":"m.text"},"ts":1429544271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the last promise could be elided... but doesn't the chain have to exist?","msgtype":"m.text"},"ts":1429544279000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I mean... if thats the case we could just collapse promises between the first and last","msgtype":"m.text"},"ts":1429544299000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no? there's no way to create a chain if there's no returns","msgtype":"m.text"},"ts":1429544302000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there are also uses for shared memory, but it should be seen as a wart still","msgtype":"m.text"},"ts":1429544312000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"wanderview: maybe i am confused what you meant by the chain has to exist","msgtype":"m.text"},"ts":1429544322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"shared locks and transferance is nice","msgtype":"m.text"},"ts":1429544323000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Domenic: oh... I thought you just did the if(!chunk) done() step... didn't see you dropped the other return","msgtype":"m.text"},"ts":1429544337000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1429544346000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"shared read locks would make me really happy","msgtype":"m.text"},"ts":1429544356000,"senderName":"bradleymeck","senderId":"bradleymeck@irc"},
{"content":{"body":"Domenic: when I talked to bz about this issue he seemed to think the observable .then was the root of the problem...","msgtype":"m.text"},"ts":1429544373000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it might be","msgtype":"m.text"},"ts":1429544377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think there might be a way to use observable .then to collapse the chain \"as you build it\", but if there's not, then we'll just have to get rid of observable .then I think.","msgtype":"m.text"},"ts":1429544395000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we're on #extwebsummit for the little thing we're doing here","msgtype":"m.text"},"ts":1429549292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://mobile.twitter.com/ramunas_m/status/590241532613156864","msgtype":"m.text"},"ts":1429565001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is that true?","msgtype":"m.text"},"ts":1429565015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"End of an era. Opera software sacks 70 employees. Desktop team in Oslo is pretty much disbanded.\"","msgtype":"m.text"},"ts":1429565068000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That was a long time coming, if so","msgtype":"m.text"},"ts":1429565098000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: I don't know, but I was there for two Opera \"rightsizings\" and each time the press reported the end of the company","msgtype":"m.text"},"ts":1429566209000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: true","msgtype":"m.text"},"ts":1429566242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the press loves to report the end of things as well the amazing launch of some new vaporware","msgtype":"m.text"},"ts":1429566394000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hi, in html5lib python, is there a way to avoid applying a filter on <pre><code> elements ?","msgtype":"m.text"},"ts":1429569656000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"ok I'm having a clue","msgtype":"m.text"},"ts":1429570011000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"don't forget to share your clue with everyone else","msgtype":"m.text"},"ts":1429570066000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp-: y u no come to extensible web summit","msgtype":"m.text"},"ts":1429570089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we are talking about custome elements","msgtype":"m.text"},"ts":1429570099000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i have a bad habit of missing events that i haven't heard of :(","msgtype":"m.text"},"ts":1429570167000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"caitp, basically it would look like: http://dpaste.com/06EZMCC","msgtype":"m.text"},"ts":1429570623000,"senderName":"aleray","senderId":"aleray@irc"}
]