[
{"content":{"body":"well, so far tricky01.dat is living up to its name","msgtype":"m.text"},"ts":1402621862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"test 1 was a huge pain to fix","msgtype":"m.text"},"ts":1402621866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and now test 2 is failing","msgtype":"m.text"},"ts":1402621871000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.libpng.org/pub/png/libpng-1.4.0-manual.pdf that's one funny-looking \"libpng.txt\"","msgtype":"m.text"},"ts":1402623544000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"good grief","msgtype":"m.text"},"ts":1402625283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tricky01 sure is living up to its name","msgtype":"m.text"},"ts":1402625290000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the scariest part has got to be the \"01\"","msgtype":"m.text"},"ts":1402627083000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"yeah, though sadly there's no 02","msgtype":"m.text"},"ts":1402627101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wait, you *like* scary testsuites?","msgtype":"m.text"},"ts":1402627199000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"uh, yeah, they're awesome","msgtype":"m.text"},"ts":1402627239000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-D","msgtype":"m.text"},"ts":1402627242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok test 8 in trick01 is just wrong. it's missing a bunch of parse errors.","msgtype":"m.text"},"ts":1402627917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: question about file:///opt/workspace/picture-element/index.html#parse-srcset-attr","msgtype":"m.text"},"ts":1402639429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1402639440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yep?","msgtype":"m.text"},"ts":1402639449000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://picture.responsiveimages.org/#parse-srcset-attr","msgtype":"m.text"},"ts":1402639454000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/nolanw/HTMLReader","msgtype":"m.text"},"ts":1402639469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how many languages are left without a decent HTML parser these days","msgtype":"m.text"},"ts":1402639480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: \"descriptors\" vs \"descriptor list\"","msgtype":"m.text"},"ts":1402639490000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Swift?","msgtype":"m.text"},"ts":1402639501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It would still be good if libxml2 added support I think, due to all the binding support for it all over","msgtype":"m.text"},"ts":1402639508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: heh","msgtype":"m.text"},"ts":1402639511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh on me :) I hadn't actually looked at that page before I made that comment..","msgtype":"m.text"},"ts":1402639542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean it's not Swift but it's not what I was expecting","msgtype":"m.text"},"ts":1402639561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \"descriptor list\" is set to \"descriptors\" in step 9","msgtype":"m.text"},"ts":1402639577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1402639583000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks again","msgtype":"m.emote"},"ts":1402639588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I shouldn't try to read specs with my screen dimmed way down to save battery","msgtype":"m.text"},"ts":1402639657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: wait though","msgtype":"m.text"},"ts":1402639663000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"9. Add candidate: Add url to raw candidates, associated with descriptors.","msgtype":"m.text"},"ts":1402639669000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that part is clear","msgtype":"m.text"},"ts":1402639703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i'll probably tweak this to be less confusing, there's a bug about running the parser for each candidate as they are parsed instead of first adding to raw candidates","msgtype":"m.text"},"ts":1402639705000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok","msgtype":"m.text"},"ts":1402639722000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that won't effect me at least because I parse them right away anyway","msgtype":"m.text"},"ts":1402639754000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't ever actually store the URLs","msgtype":"m.text"},"ts":1402639767000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402639791000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so is something not clear still?","msgtype":"m.text"},"ts":1402639806000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: anyway I think it would be worth making descriptors -> list descriptor list more clear","msgtype":"m.text"},"ts":1402639846000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or really, I don't understand why you're using both","msgtype":"m.text"},"ts":1402639857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why not just consistently use one or the other?","msgtype":"m.text"},"ts":1402639868000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah so when i fix the bug i can get rid of \"raw candidates\" completely","msgtype":"m.text"},"ts":1402639954000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, ok","msgtype":"m.text"},"ts":1402639978000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i haven't touched it yet because it's editorial so low prio","msgtype":"m.text"},"ts":1402640010000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1402640025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: so anyway my other question is, why does the parsing algorithm allow for multiple descriptors in image candidate strings at all?","msgtype":"m.text"},"ts":1402640136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: for future compat","msgtype":"m.text"},"ts":1402640165000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1402640171000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I'm pretty skeptical about the value of writing future compat into specs","msgtype":"m.text"},"ts":1402640207000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., hearing that it, is reminds me of ARIA allowing multiple roles in @role values","msgtype":"m.text"},"ts":1402640252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess that's an unfair comparison","msgtype":"m.text"},"ts":1402640266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: how are you going to address the integrity attribute?","msgtype":"m.text"},"ts":1402640289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: context: http://w3c.github.io/webappsec/specs/subresourceintegrity/","msgtype":"m.text"},"ts":1402640304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aria should have banned multiple roles for authors but the parsing was good","msgtype":"m.text"},"ts":1402640305000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so as long you're going to be making editorial changes, you might consider adding a note about that future-compat reason","msgtype":"m.text"},"ts":1402640312000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok thx","msgtype":"m.text"},"ts":1402640335000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I think somebody mentioned that to me the other day and my thought was, that should be in the HTML spec if they want it to be part of the language","msgtype":"m.text"},"ts":1402640399000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I think that what somebody mentioned to me was actually another attribute from a different webappsec spec that's also not in HTML yet","msgtype":"m.text"},"ts":1402640462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402640476000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it was \"nonce\"","msgtype":"m.text"},"ts":1402640482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: kinda seems like they're making a habit of it","msgtype":"m.text"},"ts":1402640505000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I propose that they open bugs against the HTML spec for those","msgtype":"m.text"},"ts":1402640532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if Hixie even knows about them yet","msgtype":"m.text"},"ts":1402640542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: the integrity thing might end up as a srcset descriptor later :-)","msgtype":"m.text"},"ts":1402640551000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess he knows about \"nonce\"","msgtype":"m.text"},"ts":1402640553000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh, that's CSP stuff?","msgtype":"m.text"},"ts":1402640565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, we should open bugs for that","msgtype":"m.text"},"ts":1402640572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: can't tell if you're trolling but I hope so","msgtype":"m.text"},"ts":1402640604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: no","msgtype":"m.text"},"ts":1402640625000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh geez","msgtype":"m.text"},"ts":1402640635000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how else would you do it if you want to use integrity + srcset?","msgtype":"m.text"},"ts":1402640651000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1402640662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well then :-P","msgtype":"m.text"},"ts":1402640670000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"because I don't really know anything about the \"integrity\" attribute so I don't count","msgtype":"m.text"},"ts":1402640695000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"incidentally, \"SRI\" doesn't seem like such a great choice for a shortname","msgtype":"m.text"},"ts":1402640743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: maybe ask Mike West if he can raise the bugs","msgtype":"m.text"},"ts":1402640763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since he's a friendly and clueful","msgtype":"m.text"},"ts":1402640774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"notices http://w3c.github.io/webappsec/specs/subresourceintegrity/#the-noncanonical-src-attribute-todo ... ","msgtype":"m.emote"},"ts":1402640808000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26081","msgtype":"m.text"},"ts":1402640815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"damn man, these specs","msgtype":"m.text"},"ts":1402640825000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Nonce sources require a new attribute to be added to both script and style elements: nonce.\"","msgtype":"m.text"},"ts":1402640854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"really?","msgtype":"m.text"},"ts":1402640858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm not as concerned with WebAppSec","msgtype":"m.text"},"ts":1402640867000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: now WebPerf...","msgtype":"m.text"},"ts":1402640880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no comment there","msgtype":"m.text"},"ts":1402640894000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: I'm glad you have the patience and perseverence there","msgtype":"m.text"},"ts":1402640917000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I haven't really joined the WebPerf list, maybe I should...","msgtype":"m.text"},"ts":1402640948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's actually not a large amount of traffic on that list","msgtype":"m.text"},"ts":1402640977000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"considering the state of things, I guess that's probably bad","msgtype":"m.text"},"ts":1402640996000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, there should be more traffic there","msgtype":"m.text"},"ts":1402641008000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I wonder in what universe it's OK that we have experienced spec writers writing stuff like \"Nonce sources require a new attribute to be added to both script and style elements: nonce.\" into specs, and not actually attempting to normatively define the \"nonce\" attribute nor raise an HTML bug so that Hixie can properly define it","msgtype":"m.text"},"ts":1402641193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(end rant)","msgtype":"m.text"},"ts":1402641201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"speaking of which, as far as I can see, dglazkov has not gotten around to normatively defining the \"is\" attribute","msgtype":"m.text"},"ts":1402641261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or actually I think he's essentially said that it doesn't need to be normatively defined","msgtype":"m.text"},"ts":1402641291000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1402641294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(end follow-up rant)","msgtype":"m.text"},"ts":1402641322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"goes back to working on picture validation","msgtype":"m.emote"},"ts":1402641338000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sends an email about noncanonical-src","msgtype":"m.emote"},"ts":1402641483000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: you could complain about the former on public-webappsec⊙wo and the latter on public-webapps⊙wr","msgtype":"m.text"},"ts":1402641777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: the latter seems useful to complain about","msgtype":"m.text"},"ts":1402641789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: \"I think the noncanonical-src feature is going to be insanely complicated to get right.\" probably requires some justification as I think this might have been prototyped in Blink already","msgtype":"m.text"},"ts":1402641846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you have a pointer?","msgtype":"m.text"},"ts":1402641920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm, possibly pretending that it is a redirect might dodge complications. but it's not clear what was intended from the handwavy spec text","msgtype":"m.text"},"ts":1402642029000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"funny how sometimes browsers just ignore the spec (e.g. r8678)","msgtype":"m.text"},"ts":1402642113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: you mean, everybody ignores it consistently but nobody bothers to file a bug?","msgtype":"m.text"},"ts":1402642254000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah. or more likely in this case they don't realise that they were violating the spec","msgtype":"m.text"},"ts":1402642293000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i.e. they implement what they think the spec says, but it's not literally what the spec says","msgtype":"m.text"},"ts":1402642331000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1402642550000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I guess it's pretty hard for an editor to catch that kind of potential problem ahead of time","msgtype":"m.text"},"ts":1402642681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402642725000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: so another piece of feedback on picture is that I think you should consider making the parsing algorithms error-reporting","msgtype":"m.text"},"ts":1402645020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: as in, the thing of defining certain cases as parse errors but not requiring implementations to report them","msgtype":"m.text"},"ts":1402645072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: can you file a bug? https://github.com/ResponsiveImagesCG/picture-element/issues","msgtype":"m.text"},"ts":1402645123000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402645130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1402645134000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: i guess the algorithm for a validator needs to be a bit different since it will want to look at the whole value for sizes while a browser will want to abort parsing asap","msgtype":"m.text"},"ts":1402645245000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: right. And in the case of srcset, handling the parse errors makes the implementation somewhat more complicated. e.g., if you're not reporting errors, your implementation of the splitting loop can just handle commas and whitespace there exactly the same","msgtype":"m.text"},"ts":1402645662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1402645686000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: fwiw I really like the wording of your definition of \"parse error\" in the URL spec","msgtype":"m.text"},"ts":1402645952000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"a non-fatal mismatch between input and requirements\"","msgtype":"m.text"},"ts":1402645969000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders why it's not called a \"warning\" ......","msgtype":"m.emote"},"ts":1402646499000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: it's an error because it violates authoring requirements","msgtype":"m.text"},"ts":1402646700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathonNeal: yes","msgtype":"m.text"},"ts":1402649422000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"JonathanNeal:yes","msgtype":"m.text"},"ts":1402649442000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"Hixie: The tests in general are known to not be parse error complete","msgtype":"m.text"},"ts":1402650023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Patches welcome","msgtype":"m.text"},"ts":1402650039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jungkees: when do you expect to simply reference Fetch?","msgtype":"m.text"},"ts":1402655364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll be working on it next week","msgtype":"m.text"},"ts":1402655412000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: cool, it's starting to become a bit confusing","msgtype":"m.text"},"ts":1402655471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alright. Let's get it done sooner","msgtype":"m.text"},"ts":1402655645000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: do you have anything particular that I need to be aware of? Re the design of Request/Response that we came up within the SW spec","msgtype":"m.text"},"ts":1402655692000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: I've noticed that AbstractResponse has gone some such","msgtype":"m.text"},"ts":1402655721000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: one thing seems to be that we want to move client/context to Request","msgtype":"m.text"},"ts":1402655732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: indeed, there's only a single Response class now","msgtype":"m.text"},"ts":1402655743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: the constructors are a bit different aligned with the discussions JakeA and I had","msgtype":"m.text"},"ts":1402655779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: toBlob() is now body.to(\"blob\")","msgtype":"m.text"},"ts":1402655810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alright. I'll catch up things from the Fetch spec esp. the API part","msgtype":"m.text"},"ts":1402655815000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: I think best would be to just depend on those objects, just like you depend on other bits from Fetch","msgtype":"m.text"},"ts":1402655848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Agreed. I'll have that in mind and will update the text","msgtype":"m.text"},"ts":1402655969000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: Let's get it shaped next week. I'll ask things while working on it","msgtype":"m.text"},"ts":1402655992000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: sounds good","msgtype":"m.text"},"ts":1402656002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: for .client I figured we want to define some kind of tuple thing","msgtype":"m.text"},"ts":1402656028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: (Client or Window or WorkerGlobalScope)","msgtype":"m.text"},"ts":1402656040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: though maybe if it's the current global we could just make it null","msgtype":"m.text"},"ts":1402656067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might be okay","msgtype":"m.text"},"ts":1402656073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I found in HTTP fetch, it's being used to see whether the request came from SW context or not. What's the other use of .client in fetch algorithms?","msgtype":"m.text"},"ts":1402656772000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: CSP / Mixed Content / ... specs make use of client","msgtype":"m.text"},"ts":1402656951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: in combination with context","msgtype":"m.text"},"ts":1402656986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: however, maybe you are right and that only makes sense in SW to be exposed","msgtype":"m.text"},"ts":1402657012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: would make my life easier","msgtype":"m.text"},"ts":1402657038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah guess so","msgtype":"m.text"},"ts":1402657060000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: One quest about the queuing a task out of my own curiosity","msgtype":"m.text"},"ts":1402657099000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: the argument for putting them on Request would be that they are there in the model, exposing them elsewhere in SW is somewhat odd","msgtype":"m.text"},"ts":1402657107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: sure","msgtype":"m.text"},"ts":1402657139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is it technically wrong to queue a task from already async step? or is it a anti-practice?","msgtype":"m.text"},"ts":1402657140000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: the only reason you queue a task is to sync state with the main thread","msgtype":"m.text"},"ts":1402657183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: so you have an async algorithm (that runs separately from the main thread by definition (although not formally defined yet)); and at some point you need to change a property and dispatch an event in the main thread, for that you'd queue a task","msgtype":"m.text"},"ts":1402657226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: if you just want to run some steps from an algorithm that's async, you just run them, you don't queue a task for that","msgtype":"m.text"},"ts":1402657252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. thanks for the explanation","msgtype":"m.text"},"ts":1402657299000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: I'll open an issue for context/client","msgtype":"m.text"},"ts":1402657516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure","msgtype":"m.text"},"ts":1402657537000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"darobin: FWIW I disagree that shallow liking is more informative than shallow disliking. I think both indicate \"I have a mild emotional reaction to this\"","msgtype":"m.text"},"ts":1402657927000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"[dislike]","msgtype":"m.text"},"ts":1402657960000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it depends what you mean by \"more informative\"","msgtype":"m.text"},"ts":1402657980000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it does not carry more information if you're bit counting, but \"like\" carries all the information that it needs to IMHO, whereas \"dislike\" doesn't","msgtype":"m.text"},"ts":1402658012000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"No, that's what I disagree with","msgtype":"m.text"},"ts":1402658026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"if I propose something and you say you like it, that's all I need to know; if you say you dislike it then I want to know more","msgtype":"m.text"},"ts":1402658032000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"only one of those cases calls for change","msgtype":"m.text"},"ts":1402658076000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"No, because if you are making a proposal that is itself a call for change","msgtype":"m.text"},"ts":1402658094000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"change *to the proposal*","msgtype":"m.text"},"ts":1402658120000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Knowing that people \"like\" a proposal isn't useful if you don't also know that they have thought through the consequences of that proposal rather than just having a shallow reaction to it","msgtype":"m.text"},"ts":1402658136000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A good example of what jgraham means is parent selectors back when they were not feasible, you get a lot of popular support, but that doesn't mean it's good","msgtype":"m.text"},"ts":1402658627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, but those are two completely different metrics","msgtype":"m.text"},"ts":1402659367000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it is useful to know that people like the use cases you liberate","msgtype":"m.text"},"ts":1402659378000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that's an entirely different data point from the fact that people have thought it through","msgtype":"m.text"},"ts":1402659401000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Apparently there's still promise-skeptics","msgtype":"m.text"},"ts":1402662438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I sort of that thought that after the async/await syntax was unveiled all debate would be over","msgtype":"m.text"},"ts":1402662488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So naïve","msgtype":"m.text"},"ts":1402662502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you people the people who aren't happy with the performance of the implementations in spidermonkey/v8?","msgtype":"m.text"},"ts":1402662521000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"*g*","msgtype":"m.text"},"ts":1402662522000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"or some other kind of skepticism","msgtype":"m.text"},"ts":1402662527000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Not sure","msgtype":"m.text"},"ts":1402662630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's mostly, as far as I can tell, the node.js people who are upset with the performance of native promises and prefer something like bluebird or just callbacks, awful as they are","msgtype":"m.text"},"ts":1402662712000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but maybe there's more to it :>","msgtype":"m.text"},"ts":1402662723000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: you should know by now that for any proposal, there will in perpetuity be some skeptics — it's sort of its own Rule 34","msgtype":"m.text"},"ts":1402662800000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but less enticing","msgtype":"m.text"},"ts":1402662846000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: for some people, I have my doubts that they're not more enticed","msgtype":"m.text"},"ts":1402662873000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well, at least it's constructive, if you squint really hard","msgtype":"m.text"},"ts":1402662947000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I try not to squint too hard anywhere in the vicinity of Rule 34, even if a variant","msgtype":"m.text"},"ts":1402663011000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"obscures the view too much?","msgtype":"m.text"},"ts":1402663268000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well played caitp, well played","msgtype":"m.text"},"ts":1402664030000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Domenic: not sure what you're talking about","msgtype":"m.text"},"ts":1402668724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: what properties are there for network errors?","msgtype":"m.text"},"ts":1402668730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven't looked into it hard yet; will do so. But e.g. how many places in the spec cause network errors? A property could distinguish those.","msgtype":"m.text"},"ts":1402668759000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no we don't distinguish network errors","msgtype":"m.text"},"ts":1402668769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so for example it would be *very* useful for the dev to know that they were blocked by CSP","msgtype":"m.text"},"ts":1402668794000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I don't think we want to reveal that","msgtype":"m.text"},"ts":1402668808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-/","msgtype":"m.text"},"ts":1402668812000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: you can use CSP's error reporting feature though","msgtype":"m.text"},"ts":1402668815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think people will end up filtering on error strings in that case","msgtype":"m.text"},"ts":1402668824000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or mixed content...","msgtype":"m.text"},"ts":1402668852000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or cors...","msgtype":"m.text"},"ts":1402668866000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"or too many redirects","msgtype":"m.text"},"ts":1402668878000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we don't expose those errors now anywhere, I'm not sure why fetch() would be any different","msgtype":"m.text"},"ts":1402669045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because it's supposed to be better than XHR?","msgtype":"m.text"},"ts":1402669066000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not sure we want to reveal more sensitive information","msgtype":"m.text"},"ts":1402669128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but if you get that past security guys, we could make network error more granular I guess","msgtype":"m.text"},"ts":1402669466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's better, but no less secure","msgtype":"m.text"},"ts":1402669672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: your fetch example gets even better with the new small functions","msgtype":"m.text"},"ts":1402672416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: arrow functions?","msgtype":"m.text"},"ts":1402672468000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: fetch(url).then((response) => response.body.to(\"json\")).then((json) => /* yey! */ )","msgtype":"m.text"},"ts":1402672488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and the parens aren't even needed)","msgtype":"m.text"},"ts":1402672497000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: fetch(url).then(response => response.body.to(\"json\")).then(json => /* yey! */ )","msgtype":"m.text"},"ts":1402672519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1402672526000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and then you shorten response to r, etc. :-)","msgtype":"m.text"},"ts":1402672545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder when Chrome's planning to ship arrow functions…","msgtype":"m.text"},"ts":1402672556000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"prolly before async/await","msgtype":"m.text"},"ts":1402672630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arrow functions are in progress by one of the igalia guys","msgtype":"m.text"},"ts":1402672658000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the status of that isnt actually recorded on the launchbug, iirc","msgtype":"m.text"},"ts":1402672692000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i believe it's his first v8 contribution though so it's taking a bit of time","msgtype":"m.text"},"ts":1402672695000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: I closed a bunch of SW issues btw","msgtype":"m.text"},"ts":1402672732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe we should organize a virtual meeting day where we go through all the things again here on #whatwg","msgtype":"m.text"},"ts":1402672757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I saw, cheers! I'm on I/O lockdown for the next few days, although it means there'll be a session on serviceworker (and a video)","msgtype":"m.text"},"ts":1402672792000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"also JakeA, you ruined my \"Notifications\" tab on Twitter","msgtype":"m.text"},"ts":1402672806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha, people like fetch","msgtype":"m.text"},"ts":1402672818000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Yeah, those meeting were really productive, if they're even half as productive via IRC they're worth doing","msgtype":"m.text"},"ts":1402672835000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: heh, I saw you guys are going to announce <meta name=brand-color>","msgtype":"m.text"},"ts":1402672836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: major spoilers on blink-dev","msgtype":"m.text"},"ts":1402672845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yey more meta tags","msgtype":"m.text"},"ts":1402672878000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is yey British yay?","msgtype":"m.text"},"ts":1402672889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, maybe, or maybe I've just been spelling it wrong all my life","msgtype":"m.text"},"ts":1402672923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"http://www.urbandictionary.com/define.php?term=yey","msgtype":"m.text"},"ts":1402672929000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*every* letter combination < 8 chars means drugs/blowjobs on urban dictionary","msgtype":"m.text"},"ts":1402672988000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"what else are you going to use cant for?","msgtype":"m.text"},"ts":1402673144000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: are you keeping track somewhere of concept operations on a stream?","msgtype":"m.text"},"ts":1402673217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if you copy an object that holds onto a stream, you want to tee the stream, no?","msgtype":"m.text"},"ts":1402673264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not yet","msgtype":"m.text"},"ts":1402673269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I am not sure but probably.","msgtype":"m.text"},"ts":1402673286000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: where is your structured clone repo? i wanna solve promises there and then move on to streams","msgtype":"m.text"},"ts":1402673310000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://github.com/dslomov-chromium/ecmascript-structured-clone","msgtype":"m.text"},"ts":1402673330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: ask dslomov for edit rights","msgtype":"m.text"},"ts":1402673373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: meh just wanna figure out strategy in the issue tracker first","msgtype":"m.text"},"ts":1402673393000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: https://github.com/dslomov-chromium/ecmascript-structured-clone/issues/5","msgtype":"m.text"},"ts":1402673413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I'll add <!-- XXX streams --> markers in the Fetch source code so we can look through this stuff later","msgtype":"m.text"},"ts":1402673498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we are getting very close to the point where we are going to make an attempt to implement Request/Response and FetchBodyStream et al btw","msgtype":"m.text"},"ts":1402673544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep, I'm full speed on streams now, as I want to be not-too-far-behind","msgtype":"m.text"},"ts":1402673578000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Would be great if node.append() could take a stream & progressively parse","msgtype":"m.text"},"ts":1402673585000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"just wanna prioritize things that might affect fetch etc. first, so that's why i think the cloning/transferring is top priority","msgtype":"m.text"},"ts":1402673615000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JakeA: I think that should work the other way around","msgtype":"m.text"},"ts":1402673631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as in pipe a stream to an element?","msgtype":"m.text"},"ts":1402673672000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: have a convenience method on an iterable that invokes node.append() with the next iterable as soon as it is there","msgtype":"m.text"},"ts":1402673698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we'll have things like that on promises too","msgtype":"m.text"},"ts":1402673707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: otherwise you put all the complexity in node.append() and methods all over the place, where that isn't really justified","msgtype":"m.text"},"ts":1402673725000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"promise.callWithValue(node.append) or some such","msgtype":"m.text"},"ts":1402673860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, I was looking for something that'd hook into the html parser that's used to load the page, since we don't expose that to js at the moment.","msgtype":"m.text"},"ts":1402673900000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"As in, you can't provide \"<p>hello \" and \" world</p>\" as seperate chunks at the moment","msgtype":"m.text"},"ts":1402673940000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"separate*","msgtype":"m.text"},"ts":1402673954000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but the browser handles it fine during page load","msgtype":"m.text"},"ts":1402673988000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That's called document.write()","msgtype":"m.text"},"ts":1402674059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1402674161000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"element.write() would do it","msgtype":"m.text"},"ts":1402674250000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: are you cautiously planning promises v2? Lots of https://github.com/kriskowal/q/wiki/API-Reference seems ready for inclusion","msgtype":"m.text"},"ts":1402674278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The case I'm thinking of is fetch('some-largish-content.html').then(streamDataToElement)","msgtype":"m.text"},"ts":1402674305000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: maybe, although async/await removes a lot of the need.","msgtype":"m.text"},"ts":1402674437000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: .finally is my only high-priority thing","msgtype":"m.text"},"ts":1402674454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: how would you rewrite get for instance?","msgtype":"m.text"},"ts":1402674467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and also maybe a version of .allSettled, or .any","msgtype":"m.text"},"ts":1402674481000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: (await promise).property","msgtype":"m.text"},"ts":1402674487000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"var method = (async fetch(url)).method","msgtype":"m.text"},"ts":1402674490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh await, doh","msgtype":"m.text"},"ts":1402674500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah nice","msgtype":"m.text"},"ts":1402674505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: should I ping es-discuss with https://github.com/dslomov-chromium/ecmascript-structured-clone/issues/6 or will you?","msgtype":"m.text"},"ts":1402675967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll do it. I wonder how well it will go over to say \"discuss this over on that other forum, not on this mailing list\" :P","msgtype":"m.text"},"ts":1402676178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well they are typically ignoring anything structured clone so I expect not too much trouble","msgtype":"m.text"},"ts":1402676224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what about #jslang? they seem to have time to talk about things","msgtype":"m.text"},"ts":1402676475000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: oh there will be patches","msgtype":"m.text"},"ts":1402678553000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: just as soon as i figure out how the heck to push a pull request","msgtype":"m.text"},"ts":1402678567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or whatever is the terminology you kids use these days","msgtype":"m.text"},"ts":1402678579000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1402678583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You're not *that* much older than me","msgtype":"m.text"},"ts":1402678670000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not gsnedders :p","msgtype":"m.text"},"ts":1402678676000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1402678710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i even have a few extra tests","msgtype":"m.text"},"ts":1402678852000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML parser talk is one of my favorite pastimes","msgtype":"m.text"},"ts":1402679050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(context: es-discuss)","msgtype":"m.text"},"ts":1402679060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how is <module> still not dead","msgtype":"m.text"},"ts":1402679141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what exactly was <module> supposed to be? i've been researching it a bit and haven't really had that cleared up","msgtype":"m.text"},"ts":1402679176000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=25868","msgtype":"m.text"},"ts":1402679199000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because I think there are potential plans for our product to make use of it, and i want to make sure those plans disappear if they're terrible ideas","msgtype":"m.text"},"ts":1402679203000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"just use <script type=module>","msgtype":"m.text"},"ts":1402679251000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which isn't valid yet but almost certainly will be","msgtype":"m.text"},"ts":1402679265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i dunno how we're going to fix the problem of non-js modules","msgtype":"m.text"},"ts":1402679274000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"holy cow, i finally hit a test that checks <noscript>","msgtype":"m.text"},"ts":1402679291000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was wondering if that'd ever come up","msgtype":"m.text"},"ts":1402679298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure if it's still in the cards, but for the next iteration of angular, initially we were doing this weird thing involving es6 modules + html imports, somehow coupled together, I can't recall how that hack worked","msgtype":"m.text"},"ts":1402679321000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but iirc the module tag was involved somewhere in there","msgtype":"m.text"},"ts":1402679347000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or at least a fake version of it","msgtype":"m.text"},"ts":1402679355000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1402679660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1402679662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"html5lib tests assume that you parse scripts","msgtype":"m.text"},"ts":1402679668000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1402679983000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"introduces a new #script-off directive for tests","msgtype":"m.emote"},"ts":1402680046000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: to get back to your streaming thing, it seems like you want a streaming HTML parser in JavaScript","msgtype":"m.text"},"ts":1402680283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: however, HTML cannot be streamed at the moment, so we might have to \"fork\" the parser (by adding a mode) to make such a thing actually feasible","msgtype":"m.text"},"ts":1402680313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: as for why it cannot be streamed, check out <table><x></table>","msgtype":"m.text"},"ts":1402680329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it can be streamed, just not in a naive way like xml or json","msgtype":"m.text"},"ts":1402680509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it would be kind of nice to provide naive HTML streaming at some point","msgtype":"m.text"},"ts":1402680591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in what contexgt?","msgtype":"m.text"},"ts":1402680604000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Jake's example was loading some data over the network and incrementally streaming the data into the page","msgtype":"m.text"},"ts":1402680630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like, XHR -> innerHTML","msgtype":"m.text"},"ts":1402680643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1402680645000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes","msgtype":"m.text"},"ts":1402680649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we could provide that","msgtype":"m.text"},"ts":1402680667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just have XHR have a method like \"xhr.sendOutputTo(element)\"","msgtype":"m.text"},"ts":1402680684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"xhr.pipe(node)","msgtype":"m.text"},"ts":1402680701000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but i don't know if we want to be encouraging treating HTML in that way","msgtype":"m.text"},"ts":1402680701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"better to stream the data in an app-internal format, then create the HTML on the client","msgtype":"m.text"},"ts":1402680719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: ^","msgtype":"m.text"},"ts":1402680738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really like the sendOutputTo()","msgtype":"m.text"},"ts":1402680752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems like you want to provide the underlying primitive so people can build their own setups","msgtype":"m.text"},"ts":1402680763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, probably not high-priority, but worth thinking about","msgtype":"m.text"},"ts":1402680791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the underlying primitive is \"insertAdjacentHTML\"","msgtype":"m.text"},"ts":1402680818000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i guess you need to handle mid-token streaming","msgtype":"m.text"},"ts":1402680844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you need to keep the parser alive somehow","msgtype":"m.text"},"ts":1402680853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah that could get complicated","msgtype":"m.text"},"ts":1402680868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway the solution is to not stream HTML, imho","msgtype":"m.text"},"ts":1402680873000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can you actually stream JSON, currently? because you could see that as being pretty useful","msgtype":"m.text"},"ts":1402680922000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you can certainly write a streaming parser","msgtype":"m.text"},"ts":1402680942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but do progress events actually give you chunks of data?","msgtype":"m.text"},"ts":1402680960000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: structured cloning of promises is happening btw: https://github.com/dslomov-chromium/ecmascript-structured-clone/issues/6","msgtype":"m.text"},"ts":1402680981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: hopefully you don't have to define it in HTML, but I thought I'd let you know","msgtype":"m.text"},"ts":1402680994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1402681033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wow, that's ambititous","msgtype":"m.text"},"ts":1402681045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cloning without neutering","msgtype":"m.text"},"ts":1402681049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ambitious, even","msgtype":"m.text"},"ts":1402681061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/XML/2014/03/xproc-charter.html","msgtype":"m.text"},"ts":1402681099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wtf is \"XXX-undefined-error\"","msgtype":"m.text"},"ts":1402681633000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've reached the point where i'm finding more bugs in the tests than in my implementation","msgtype":"m.text"},"ts":1402681779000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's a good sign","msgtype":"m.text"},"ts":1402681783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-python/search?q=XXX-undefined-error&ref=cmdform","msgtype":"m.text"},"ts":1402681863000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402681884000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well it seems in this case it was a bogus error","msgtype":"m.text"},"ts":1402681894000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as was a later one \"unknown-doctype element\"","msgtype":"m.text"},"ts":1402681904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"finally hit a test of the  Script data double escape start state","msgtype":"m.text"},"ts":1402681953000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, the later script states aren't so well tested","msgtype":"m.text"},"ts":1402682017000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"later additions I mean","msgtype":"m.text"},"ts":1402682028000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well the order i'm doing the tests in is pretty random","msgtype":"m.text"},"ts":1402682040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Since they postdate Philip` generating a whole load of tests","msgtype":"m.text"},"ts":1402682043000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i mean, i did tricky01.dat before tests1.dat","msgtype":"m.text"},"ts":1402682049000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tricky01, btw, was by far the most tricky to fix so far!","msgtype":"m.text"},"ts":1402682066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it found bugs in my dom implementation, in my test logic, in the AAA, everything","msgtype":"m.text"},"ts":1402682092000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think those tests were mainly from abarth","msgtype":"m.text"},"ts":1402682206000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yay for tricky01.dat!","msgtype":"m.text"},"ts":1402682328000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"damnit, there's a bug SOMEWHERE in the script states","msgtype":"m.text"},"ts":1402682643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how the heck am i supposed to find that","msgtype":"m.text"},"ts":1402682648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Rewrite it all","msgtype":"m.text"},"ts":1402682729000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ERROR http://localhost:8000/resources/testharness.js:1840 - TypeError: location is null","msgtype":"m.text"},"ts":1402682771000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Uh","msgtype":"m.text"},"ts":1402682774000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's not good","msgtype":"m.text"},"ts":1402682777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Servo? ;)","msgtype":"m.text"},"ts":1402682837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think I saw you mention that before","msgtype":"m.text"},"ts":1402682852000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Hixie: I imagine a page loads by streaming html text to a parser which creates nodes and updates them as the stream is read. Curious about opening that up to developers by piping an html stream into an element","msgtype":"m.text"},"ts":1402682855000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the problem is that the parser works on a Document","msgtype":"m.text"},"ts":1402682892000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: Gecko :(","msgtype":"m.text"},"ts":1402682901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: whereas innerHTML is on an element","msgtype":"m.text"},"ts":1402682901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: what you could do is load the page in an iframe, then put all the content in a <div>, and as soon as that is parsed, move the <div> into wherever you want hte content streamed","msgtype":"m.text"},"ts":1402682932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"JakeA: but honestly, the solution is to generate the html client-side","msgtype":"m.text"},"ts":1402682945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: wouldn't streaming html into a fragment be very similar to the initial page load?","msgtype":"m.text"},"ts":1402683044000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the HTML parser parses into a Document","msgtype":"m.text"},"ts":1402683069000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"innerHTML does all the parsing into a Document, then moves it into the element all at once","msgtype":"m.text"},"ts":1402683089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: is that how it's implemented or just how it's specced","msgtype":"m.text"},"ts":1402683141000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"both","msgtype":"m.text"},"ts":1402683180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i know","msgtype":"m.text"},"ts":1402683183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Fair enough","msgtype":"m.text"},"ts":1402683226000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"woah, i found one of these tests that had a bogus output","msgtype":"m.text"},"ts":1402683802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how did that not get caught by all the browsers using these tests","msgtype":"m.text"},"ts":1402683827000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1402683842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hides head in shame","msgtype":"m.emote"},"ts":1402683845000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(it was in one of my new tests)","msgtype":"m.text"},"ts":1402683849000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Silly","msgtype":"m.text"},"ts":1402683856000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh hey","msgtype":"m.text"},"ts":1402683967000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i hadn't implemented in-template yet","msgtype":"m.text"},"ts":1402683973000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<table><template><td></template></table> - currently this is a parse error because \"Generate Implied End Tags\" doesn't do table-related (e.g. </td>) tags","msgtype":"m.text"},"ts":1402687674000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should i have </template> \"Generate implied end tags harder\" so this is not a parse error?","msgtype":"m.text"},"ts":1402687686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402687736000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"lets make the parser do even more stuff that the author didn't explicitly ask it to do","msgtype":"m.text"},"ts":1402687752000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Sarcasm: less helpful than you'd think. What a surprise.","msgtype":"m.text"},"ts":1402687801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"was it sarcasm?","msgtype":"m.text"},"ts":1402687842000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Based on what I remember of your opinions, you telling Hixie to \"make the parser do even mroe stuff that the author didn't explicitly ask it to do\" does sound like a serious response.  Pretty sure you meant the exact opposite, which makes it sarcastic.","msgtype":"m.text"},"ts":1402688114000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you caught me :(","msgtype":"m.text"},"ts":1402688146000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I am not sure how to be helpful with discussions like that, other than to try and nudge things in the right direction. unless you think sarcasm might nudge it in the wrong direction, that would be less helpful","msgtype":"m.text"},"ts":1402688286000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It would be better to just be direct. \"No, I don't think the parser should do even more stuff the author didn't explicitly ask it to do\"","msgtype":"m.text"},"ts":1402688321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"being direct is kind of like, there's a phrase for it but it's kind of inappropriate","msgtype":"m.text"},"ts":1402688382000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not very colourful, there's no vibrancy or life to it","msgtype":"m.text"},"ts":1402688395000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"??? That's just a direct answer to the question.","msgtype":"m.text"},"ts":1402688398000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not as fun =)","msgtype":"m.text"},"ts":1402688399000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Point isn't to have fun, it's to have a technical discussion. You can be as sarcastic and fun as you like during the non-technical conversations that go on. ^_^","msgtype":"m.text"},"ts":1402688423000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: I've decided I'm not going to reply to all questions asked on Twitter, just the trickier ones","msgtype":"m.text"},"ts":1402688589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Favorite answer I gave so far has to be https://twitter.com/annevk/status/477535987783192576","msgtype":"m.text"},"ts":1402688665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hah, yes","msgtype":"m.text"},"ts":1402688852000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"no opinions on the </td> thing?","msgtype":"m.text"},"ts":1402690695000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(note that i'm not talking about changing what the parser does, so caitp's comment kinda misses the point)","msgtype":"m.text"},"ts":1402690721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i'm just talking about what's a parse error)","msgtype":"m.text"},"ts":1402690727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I don't understand why that shouldn't be a parse error","msgtype":"m.text"},"ts":1402690801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you were saying \"should we generate end tags, or should we call it an error\"","msgtype":"m.text"},"ts":1402690812000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: because </td> is optional","msgtype":"m.text"},"ts":1402690815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: \"generate end tags\" is a term of art that doesn't affect the parsing","msgtype":"m.text"},"ts":1402690831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: it only affects whether it's an error","msgtype":"m.text"},"ts":1402690835000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it affects the behaviour","msgtype":"m.text"},"ts":1402690845000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: so is <template><dt></template> an error?","msgtype":"m.text"},"ts":1402690849000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: if you're going to be so critical, it would help if you would at least learn about what you're criticising","msgtype":"m.text"},"ts":1402690853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: no","msgtype":"m.text"},"ts":1402690856000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: that's why i'm suggesting we change it","msgtype":"m.text"},"ts":1402690870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd be surprised if that was a parse error","msgtype":"m.text"},"ts":1402690873000,"senderName":"jcgregorio","senderId":"jcgregorio@irc"},
{"content":{"body":"Hixie: sounds good to me","msgtype":"m.text"},"ts":1402690875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402690878000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think anything you've said invalidates what I'm saying --- error throwing or not throwing is behaviour","msgtype":"m.text"},"ts":1402690881000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: there's no throwing","msgtype":"m.text"},"ts":1402690894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: the DOM is the same either way","msgtype":"m.text"},"ts":1402690899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's not the point, really","msgtype":"m.text"},"ts":1402690901000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"when I say throw, I'm not always talking about a JS context","msgtype":"m.text"},"ts":1402690912000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: can we just talk about this in terms of the HTML parser then?","msgtype":"m.text"},"ts":1402690928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: arbitrary terms are confusing for everyone","msgtype":"m.text"},"ts":1402690940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: IDL for Headers initialization: http://logs.glob.uno/?c=mozilla%23content&s=13+Jun+2014&e=13+Jun+2014#c218158","msgtype":"m.text"},"ts":1402690964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in terms of the HTML parser, you're saying \"should we do the crazy work necessary to hide the error in a way which doesn't really reflect what the author wrote, OR should we consider it an error (this does not mean an Exception)\"","msgtype":"m.text"},"ts":1402690990000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyways, I would opt for the latter, preferably with a message for developers","msgtype":"m.text"},"ts":1402691023000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: what are you talking about? It does reflect what the author wrote. Many end tags are optional in HTML","msgtype":"m.text"},"ts":1402691052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is one of the problems with HTML, not one of the solutions --- why should the template tag hang onto old badness?","msgtype":"m.text"},"ts":1402691079000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: if you don't like the format, use XML, but changing it's inherent consistency is just creating more badness imo","msgtype":"m.text"},"ts":1402691120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think those optional tags are widely used anyways, I mean yeah the plural of anecdote is not data, but I read a lot of peoples code, and I've yet to see anything like that in use","msgtype":"m.text"},"ts":1402691178000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: seems ok. not sure i have much to contribute.","msgtype":"m.text"},"ts":1402691180000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"caitp: we're not doing any different work. We're going to be closing these tags anyway (we already do). The question is just, should we report missing end tags in this one specific situation as an error or not, given that they are optional elsewhere, and that we don't report an error even here for some other elements with optional end tags.","msgtype":"m.text"},"ts":1402691209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and besides, if new HTML features start getting rid of old badness, maybe eventually, the old badness can be discarded entirely","msgtype":"m.text"},"ts":1402691213000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"implied end tags are used all _over_ the place","msgtype":"m.text"},"ts":1402691231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"especially the table ones, which is what we're talking about","msgtype":"m.text"},"ts":1402691248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: great","msgtype":"m.text"},"ts":1402691257000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm sure they are, but how many of them are used in template contexts","msgtype":"m.text"},"ts":1402691257000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"however, everything here is about <template> contexts, which are used almost nowhere.","msgtype":"m.text"},"ts":1402691260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"exactly","msgtype":"m.text"},"ts":1402691270000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I use optional end tags all the time","msgtype":"m.text"},"ts":1402691288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whenever I have to write a <table> it's such a blessing","msgtype":"m.text"},"ts":1402691306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or <li> with nested <p> for that matter","msgtype":"m.text"},"ts":1402691315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if \"use\" means \"include\" or \"omit\"","msgtype":"m.emote"},"ts":1402691321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Using the optionality aspect.","msgtype":"m.text"},"ts":1402691332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, \"omit\".","msgtype":"m.text"},"ts":1402691337000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno, I'm aware of those optional end tags and I literally never use them, because there's no way to logically consider stuff using those a well-formed consistent document","msgtype":"m.text"},"ts":1402691433000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...okay.","msgtype":"m.text"},"ts":1402691446000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's nonsense, but sure, whatever.","msgtype":"m.text"},"ts":1402691458000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not nonsense --- for a language to be simple, it must be consistent","msgtype":"m.text"},"ts":1402691491000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"this is why people suck at english, it's not consistent at all","msgtype":"m.text"},"ts":1402691498000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"You didn't say \"simple\". You said \"well-formed consistent\".","msgtype":"m.text"},"ts":1402691513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And a markup language that defines a tree structure with implied end tags is plenty \"well-formed consistent\".","msgtype":"m.text"},"ts":1402691535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a markup language \"should\" be simple","msgtype":"m.text"},"ts":1402691537000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the structure \"should\" be easy to reason about","msgtype":"m.text"},"ts":1402691551000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...are you trying to talk about the AAA and table fixup?","msgtype":"m.text"},"ts":1402691571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because that's not at all relevant to what's been under discussion today.","msgtype":"m.text"},"ts":1402691583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hixie puts two things foreward, I favour one over the other","msgtype":"m.text"},"ts":1402691604000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that is relevant, and not at all invalidated by intentionally misunderstanding things =)","msgtype":"m.text"},"ts":1402691618000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"optional end tags do not in any way reduce the precision of the language or ability to reason about it","msgtype":"m.text"},"ts":1402691644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"their rules are simple, and well-defined","msgtype":"m.text"},"ts":1402691653000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're not actually","msgtype":"m.text"},"ts":1402691673000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Well, I wouldn't call <p> auto-closing \"simple\", but they're at least well-defined.","msgtype":"m.text"},"ts":1402691676000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The rest, yeah.","msgtype":"m.text"},"ts":1402691679000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"they're easy for _you_, they're less easy for _other_ people","msgtype":"m.text"},"ts":1402691682000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"<li>, <dt>, <tr>, all those auto-closing rules are super simple.","msgtype":"m.text"},"ts":1402691701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boe can't even name all 3 of those elements","msgtype":"m.text"},"ts":1402691714000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"let alone all of the other ones with similar rules","msgtype":"m.text"},"ts":1402691718000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"boe\"?","msgtype":"m.text"},"ts":1402691724000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are you going to tell me that Boe can't be an HTML author because he can't reason about all this nonsense?","msgtype":"m.text"},"ts":1402691729000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"<p> auto-closing is simple. The <p> closes when it comes across something that isn't allowed in the <p>.","msgtype":"m.text"},"ts":1402691730000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The list of \"things that aren't allowed in <p>\" isn't trivial.","msgtype":"m.text"},"ts":1402691745000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the fact that \"things aren't allowed in a <p>\" exists at all","msgtype":"m.text"},"ts":1402691755000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"is totally bogus","msgtype":"m.text"},"ts":1402691756000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: sure, it's the same list that someone needs to know to use HTML whether or not </p> is implied.","msgtype":"m.text"},"ts":1402691765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: Are you saying that Boe literally doesn't know what the <li> element is?","msgtype":"m.text"},"ts":1402691771000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: ???","msgtype":"m.text"},"ts":1402691782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Boe probably can't name <tt> or <em> or know the difference between <ol> or <ul>","msgtype":"m.text"},"ts":1402691802000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Boe doesn't know what <tbody> means","msgtype":"m.text"},"ts":1402691808000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Who is this Boe?","msgtype":"m.text"},"ts":1402691810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if you don't know that <h1> isn't allowed in <p>, then you have bigger problems than not knowing that </p> will get implied if you put <h1> in <p>","msgtype":"m.text"},"ts":1402691815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Boe is a hypothetical author who is new to this language","msgtype":"m.text"},"ts":1402691820000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: <figure>, yay nay?","msgtype":"m.text"},"ts":1402691825000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: how about <p>","msgtype":"m.text"},"ts":1402691828000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: yay nay what?","msgtype":"m.text"},"ts":1402691833000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't figure that should be allowed (directly) in <p>","msgtype":"m.text"},"ts":1402691836000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it doesn't make any sense","msgtype":"m.text"},"ts":1402691842000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: Sounds like Boe hasn't completed the first part of their \"Learn you an HTML for great justice\" course.","msgtype":"m.text"},"ts":1402691846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"semantically it doesn't make much sense, sure","msgtype":"m.text"},"ts":1402691852000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: On the allowed list, or not?","msgtype":"m.text"},"ts":1402691854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"as far as layout goes it doesn't make much sense","msgtype":"m.text"},"ts":1402691867000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: a paragraph cannot contain a figure, no","msgtype":"m.text"},"ts":1402691869000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but even so, there's no reason why the language shouldn't allow for it","msgtype":"m.text"},"ts":1402691879000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"That's non-obvious to me.","msgtype":"m.text"},"ts":1402691883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and no reason why the language should re-arrange it","msgtype":"m.text"},"ts":1402691886000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Thus my statement that \"the list of things not allowed in <p> is non-obvious\".","msgtype":"m.text"},"ts":1402691897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i am happy to concede that","msgtype":"m.text"},"ts":1402691901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: my point is just that that is a bigger problem than </p> implied end tags","msgtype":"m.text"},"ts":1402691913000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: and once you've solved that problem, you've solved the implied end tag problem also","msgtype":"m.text"},"ts":1402691923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, it's the same problem, no?","msgtype":"m.text"},"ts":1402691924000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you need the same information, yes","msgtype":"m.text"},"ts":1402691931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the fact that we re-arrange these things is because mistakes were made and now nobody wants to fix them for fear of upsetting people","msgtype":"m.text"},"ts":1402691931000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"The content model of <p> is non-obvious, is what I\"m saying. ^_^","msgtype":"m.text"},"ts":1402691938000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: We know that you don't understand what the words \"legacy compat\" mean. You don't need to keep reinforcing that.","msgtype":"m.text"},"ts":1402691965000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: we've given you several ideas for how you can try to address this problem, repeatedly whining here isn't productive to your goals","msgtype":"m.text"},"ts":1402691965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if every new feature to the platform has to accommodate those old mistakes, then HTML is fundamentally and permanently broken","msgtype":"m.text"},"ts":1402691973000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"They do, and it is, and yet we persist.","msgtype":"m.text"},"ts":1402691991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: lots of HTML is non-obvious, unfortunately, yeah :-(","msgtype":"m.text"},"ts":1402691991000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: i am happy to concede that HTML is fundamentally and permanently broken","msgtype":"m.text"},"ts":1402692008000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Not challenging that.  Just saying, that particular thing is non-obvious, where you said it was simple. ^_^","msgtype":"m.text"},"ts":1402692010000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: also, wildly successful","msgtype":"m.text"},"ts":1402692013000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, I know what legacy compat means and I understand it Tab, what I don't understand is the strong desire to keep it that way, even for new things","msgtype":"m.text"},"ts":1402692020000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: i said the auto-closing rule is simple","msgtype":"m.text"},"ts":1402692034000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new things shouldn't be held back by old brokenness","msgtype":"m.text"},"ts":1402692037000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"If you don't understand why legacy compat is important, then you don't understand \"legacy compat\".","msgtype":"m.text"},"ts":1402692038000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"even if it makes things inconsistent, so what","msgtype":"m.text"},"ts":1402692042000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: Only by referencing complicated things!","msgtype":"m.text"},"ts":1402692045000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that it relies on less simple stuff, is a secondary issue :-)","msgtype":"m.text"},"ts":1402692047000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"new stuff should use a simpler, less whacky model","msgtype":"m.text"},"ts":1402692055000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that's my opinion, you're welcome to disagree and I suspect you do","msgtype":"m.text"},"ts":1402692070000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I don't need full transitive closure on \"simplicity\", but at least a few hops. ^_^","msgtype":"m.text"},"ts":1402692073000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: all of this stuff eventually relies on electronics and microelectronics and i don't understand any of that, but it doesn't mean the higher layers aren't simple :-)","msgtype":"m.text"},"ts":1402692077000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1402692081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, I understand why it's important to people who find it important","msgtype":"m.text"},"ts":1402692109000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: new stuff should use as simple and as less wacky a model as it can while still standing a chance of being deployed","msgtype":"m.text"},"ts":1402692121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't believe that NEW things, which don't exist as far as legacy clients are considered, should have to accomodate those old rules","msgtype":"m.text"},"ts":1402692135000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"The people who find it important are the users who look at the trillion existing pages, and the browser vendors serving those users.","msgtype":"m.text"},"ts":1402692137000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: but there's no point us doing something that doesn't stand a chance of getting deployed","msgtype":"m.text"},"ts":1402692145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Spec authors bemoaning complexity are nothing compared to them.","msgtype":"m.text"},"ts":1402692154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what makes you think it wouldn't be deployed","msgtype":"m.text"},"ts":1402692156000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"authors literally don't care","msgtype":"m.text"},"ts":1402692161000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(i'm an author and i care)","msgtype":"m.text"},"ts":1402692169000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: browser vendors have told me they would not deploy breaking changes","msgtype":"m.text"},"ts":1402692186000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you care about the sloppy version of table content breaking <template> tags when oyu can easily type the other 4 characters to make it work?","msgtype":"m.text"},"ts":1402692204000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not a breaking change, legacy browsers aren't going to fall apart because the html parser treats <template> content differently","msgtype":"m.text"},"ts":1402692242000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not sloppy","msgtype":"m.text"},"ts":1402692258000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is sloppy","msgtype":"m.text"},"ts":1402692263000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not sloppy","msgtype":"m.text"},"ts":1402692266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's well-defined and unambiguous","msgtype":"m.text"},"ts":1402692281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the act of being unwilling to explicitly specify the end of the nodes content","msgtype":"m.text"},"ts":1402692291000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"this is sloppy in and of itself","msgtype":"m.text"},"ts":1402692296000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and we're not talking about treating <template> content differently; as mentioned before, this entire discussion involves zero changes to the DOM. We're only talking about how many errors are reported.","msgtype":"m.text"},"ts":1402692315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1402692320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are \"// foo\" comments sloppy?","msgtype":"m.text"},"ts":1402692328000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't think you can compare a programming language to a markup language","msgtype":"m.text"},"ts":1402692347000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"they serve different purposes and different authors","msgtype":"m.text"},"ts":1402692370000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think you'd have a problem if say, scope in a language which didn't care about indentation could have an optional \"end\" marker","msgtype":"m.text"},"ts":1402692424000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hah, I specify the end of my <li> *by putting another <li> in* (or a </ul>, etc).","msgtype":"m.text"},"ts":1402692424000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are csv files sloppy?","msgtype":"m.text"},"ts":1402692429000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's not sloppy, that's just omitting unnecessary crap.","msgtype":"m.text"},"ts":1402692433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, arguably CSV files are sloppy, is that a real question?","msgtype":"m.text"},"ts":1402692444000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: yeah, that's why I mentioned <p> in <p>","msgtype":"m.text"},"ts":1402692453000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: Yeah, that part of the rules is easy; it's all the other things that auto-close <p>.","msgtype":"m.text"},"ts":1402692503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<div> implies a </p>, etc.","msgtype":"m.text"},"ts":1402692511000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, if you consider CSV files \"sloppy\" then by that definition HTML is \"sloppy\". But by that definition, \"sloppy\" is also \"good\", so I'm fine with it.","msgtype":"m.text"},"ts":1402692515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"> make language needlessly more complicated","msgtype":"m.text"},"ts":1402692518000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"> features that most people never use","msgtype":"m.text"},"ts":1402692534000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: CSV is loads worse","msgtype":"m.text"},"ts":1402692550000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there's no HTML<del>5</del> spec/WHATWG of CSV","msgtype":"m.text"},"ts":1402692569000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"there's no spec of CSV period, it's pretty vendor-specific","msgtype":"m.text"},"ts":1402692597000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: it's not \"needless\", it makes the language easier to author and more compatible with legacy UAs and content. It's not features that most people never use, tag omission is extremely widely used.","msgtype":"m.text"},"ts":1402692615000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean, there's http://tools.ietf.org/html/rfc4180","msgtype":"m.text"},"ts":1402692620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CSV is like maildir^N","msgtype":"m.text"},"ts":1402692624000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it means typing fewer characters, this does not make it easier to author","msgtype":"m.text"},"ts":1402692629000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I used that when writing my CSV parser.","msgtype":"m.text"},"ts":1402692642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it makes it harder to read and write, because this is a markup language where we have start tags and end tags denoting when content starts and ends","msgtype":"m.text"},"ts":1402692645000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I mean rfc822-style has more damn meaning than CSV has","msgtype":"m.text"},"ts":1402692659000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"then some markers are optional sometimes","msgtype":"m.text"},"ts":1402692661000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"this is weird and confusing","msgtype":"m.text"},"ts":1402692664000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and then, parsers have to rearrange stuff sometimes","msgtype":"m.text"},"ts":1402692673000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"this is weird and confusing","msgtype":"m.text"},"ts":1402692676000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"<table> <tr> <td> A <td> B <tr> <td> C <td> D </table> is a hell of a lot easier to maintain than <table> <tbody> <tr> <td> A </td> <td> B </td> </tr> <tr> <td> C </td> <td> D </td> </tr> </tbody> </table>","msgtype":"m.text"},"ts":1402692676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's profoundly broken","msgtype":"m.text"},"ts":1402692679000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there is nothing good about any of this","msgtype":"m.text"},"ts":1402692685000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1402692694000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(you just have to pick between actual mail/news format and deb822, based on the context)","msgtype":"m.text"},"ts":1402692695000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you're ignoring our arguments, so i'm done here","msgtype":"m.text"},"ts":1402692699000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Complaining about the rearranging is very different from complaining about omitted end tags.","msgtype":"m.text"},"ts":1402692699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not ignoring your argument","msgtype":"m.text"},"ts":1402692708000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: yeah, there's lots of legacy crap :-(","msgtype":"m.text"},"ts":1402692715000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: you're repeating arguments that have been countered, without taking into account the countering arguments, so, yeah.","msgtype":"m.text"},"ts":1402692784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they haven't been countered","msgtype":"m.text"},"ts":1402692797000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I can't think of anything besides <h[1-n]> | <hr> w/ <p> on the TOS (normal notation) and </[something-higher-up-the-stack]> that should actually force a </p>","msgtype":"m.text"},"ts":1402692818000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you haven't shown me how someone would consider your whacky markup \"simple\" or \"useful\" and not \"confusing\"","msgtype":"m.text"},"ts":1402692831000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or, well, I guess with only inliney stuff on the stack","msgtype":"m.text"},"ts":1402692844000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"not, say, in a mid-paragraph <article>","msgtype":"m.text"},"ts":1402692868000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: Besides several people literally saying \"I find it simple, useful, and not confusing\"?","msgtype":"m.text"},"ts":1402692952000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"otherwise, you start needing ways to mark paragraphs as \"wait no this paragraph isn't actually interrupted by that display formula/example code/etc.\", no?","msgtype":"m.text"},"ts":1402692971000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"what was \"it\" again?","msgtype":"m.text"},"ts":1402692997000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"look, it's not that I don't respect Ian or his opinion, but I think his opinion on the simplicity of HTML might not be as useful as he thinks, since he's so close to it","msgtype":"m.text"},"ts":1402692999000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you have to look at the 12 year old kids, the college and highschool students, the secretaries, the soccer moms","msgtype":"m.text"},"ts":1402693028000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I just treat some part of HTML as similar to Python (I use indentation in my HTML in the same way) or like a streaming format where you only indicate boundaries.","msgtype":"m.text"},"ts":1402693032000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"their opinions on simplicity matter here","msgtype":"m.text"},"ts":1402693032000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"SamB: a \"paragraph\" in HTML is just a run of text. If it contains a figure, it's not a paragraph, it's two paragraphs and a figure. Yes, this is not quite what English majors would have you say, but there we have it.","msgtype":"m.text"},"ts":1402693034000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"look at the algorithm for parsing HTML","msgtype":"m.text"},"ts":1402693051000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: the long and short of it is you're 23 years too late for this argument.","msgtype":"m.text"},"ts":1402693053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is that not crazy to you?","msgtype":"m.text"},"ts":1402693055000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: All those kids seems to get it fine. The omitting rules got added *because* people were omitting them and browsers were accommodating them.","msgtype":"m.text"},"ts":1402693059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(nobody is arguing that HTML parsing is simple.)","msgtype":"m.text"},"ts":1402693070000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: Most of HTML parsing's complexity is in <script>.","msgtype":"m.text"},"ts":1402693073000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"a good chunk of it is","msgtype":"m.text"},"ts":1402693079000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i agree","msgtype":"m.text"},"ts":1402693081000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"With a bit of crazy from things showing up in <table> that shouldn't be there.","msgtype":"m.text"},"ts":1402693084000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: yeah, when I said \"mark paragraphs as\", I mean if you want to format it traditionally, you need ways to mark <p> nodes as actually part of a larger paragraph","msgtype":"m.text"},"ts":1402693092000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: nah, that's not complex, it's just long. The complexity is in the AAA.","msgtype":"m.text"},"ts":1402693093000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and noah's ark","msgtype":"m.text"},"ts":1402693097000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and foster parenting","msgtype":"m.text"},"ts":1402693102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Long\" and \"complex\" are pretty similarly bad for understanding. ^_^","msgtype":"m.text"},"ts":1402693115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: ah if you want to mark english-major paragraphs, use <div>, not <p>","msgtype":"m.text"},"ts":1402693117000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the adoption agency is crazy","msgtype":"m.text"},"ts":1402693117000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i don't think it's limited to that","msgtype":"m.text"},"ts":1402693121000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I think TeX actually keeps track of the tightness of the last line of the previous chunk of paragraph","msgtype":"m.text"},"ts":1402693122000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: fair enough","msgtype":"m.text"},"ts":1402693123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"A lot of CSS Syntax I was able to \"simplify\" just by making it shorter.","msgtype":"m.text"},"ts":1402693126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the adoption agency is the least crazy of the four utterly crazy options we had at our disposal, sadly","msgtype":"m.text"},"ts":1402693142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hmm, how'd the CSS look to get proper indentation then?","msgtype":"m.text"},"ts":1402693152000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'd hate to see the alternatives then, because the adoption agency makes me really sad","msgtype":"m.text"},"ts":1402693167000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I guess you'd use :first and :last?","msgtype":"m.text"},"ts":1402693173000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: \"proper\" indentation of paragraphs is no indentation, so... :-)","msgtype":"m.text"},"ts":1402693179000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: What sort of indentation are you looking for?","msgtype":"m.text"},"ts":1402693184000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I mean if for some reason you were trying to vaguely approximate traditional typesetting","msgtype":"m.text"},"ts":1402693219000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: yeah, the alternatives were so much worse. One dependended on the TCP packet boundaries. Another required changes to CSS to not render styles that didn't map to the tree. The last involved the tree structure actually being a graph.","msgtype":"m.text"},"ts":1402693224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: there's some discussion of this stuff on ln.hixie.ch if you go back far enough","msgtype":"m.text"},"ts":1402693244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in terms of the overall shape more so than particular fonts","msgtype":"m.text"},"ts":1402693274000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: you'd probably wrap the first part of the paragraph in a <p> in the <div> and style it using div>p:first-child","msgtype":"m.text"},"ts":1402693275000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyways, I understand why you don't want to change the AAA stuff at this point, maybe that ship sailed a long time ago","msgtype":"m.text"},"ts":1402693278000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but I think, just maybe, for new tags like <template>, we could do better","msgtype":"m.text"},"ts":1402693299000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: people copy-and-paste their existing content into new contexts","msgtype":"m.text"},"ts":1402693319000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: what do you mean?","msgtype":"m.text"},"ts":1402693323000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: they don't want it to change behaviour","msgtype":"m.text"},"ts":1402693323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you mean <template> itself shouldn't force </template> ?","msgtype":"m.text"},"ts":1402693337000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"otherwise, I think you're doomed","msgtype":"m.text"},"ts":1402693347000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"that's probably the only real negotiable here","msgtype":"m.text"},"ts":1402693361000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I don't think it should force </template>, I don't think it should have any concept of content that is allowed to be in it","msgtype":"m.text"},"ts":1402693378000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the only case where it should force </template> is at the end of the document","msgtype":"m.text"},"ts":1402693392000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"SamB: It doesn't force </template>, iirc. You can nest templates.","msgtype":"m.text"},"ts":1402693402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: cool","msgtype":"m.text"},"ts":1402693409000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"caitp: not even </[something further up the stack]>?","msgtype":"m.text"},"ts":1402693428000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"not even","msgtype":"m.text"},"ts":1402693445000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that could be done, but it sounds pretty crazy to me","msgtype":"m.text"},"ts":1402693458000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"function C() { function D() { }","msgtype":"m.text"},"ts":1402693485000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"what should happen","msgtype":"m.text"},"ts":1402693488000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"In what language?","msgtype":"m.text"},"ts":1402693501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in ECMAScript, since we're here =)","msgtype":"m.text"},"ts":1402693510000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I forget whether it hoists D out of C or not, but it's definitely allowed.","msgtype":"m.text"},"ts":1402693535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not allowed, C hasn't been closed","msgtype":"m.text"},"ts":1402693545000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Oh, didn't see that that's the point you were making.","msgtype":"m.text"},"ts":1402693572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the one higher in the stack doesn't get closed first","msgtype":"m.text"},"ts":1402693593000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"...yes?","msgtype":"m.text"},"ts":1402693599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is logical and makes sense","msgtype":"m.text"},"ts":1402693599000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Why would you think it would be?","msgtype":"m.text"},"ts":1402693603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: btw i think you're confusing the idea of what is valid with the idea of how the parser works","msgtype":"m.text"},"ts":1402693605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Both C and D use } to close, so } isn't equivalent to \"</[something further up the stack]>\".","msgtype":"m.text"},"ts":1402693633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: it's important that we say that e.g. <h1><h2>foo</h2></h1> is invalid, since that's what validators use to flag mistakes to the author","msgtype":"m.text"},"ts":1402693651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It might make sense for EOF to auto-close C (CSS does this), but that's it.","msgtype":"m.text"},"ts":1402693658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: just like how type checking compilers say there's a problem when you add a string to an integer","msgtype":"m.text"},"ts":1402693662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: quality assurance tools are important","msgtype":"m.text"},"ts":1402693669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"quality assurance tools are important, no argument there =)","msgtype":"m.text"},"ts":1402693694000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but ideally they'll tell you to close your tags explicitly instead of making the parser acommodate your awful markup","msgtype":"m.text"},"ts":1402693715000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the two parts of that sentence are unrelated","msgtype":"m.text"},"ts":1402693730000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: gosh darn it, I'm still 2/3rds your age! :P","msgtype":"m.text"},"ts":1402693752000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"Your page is bad, and we wont' display it until you fix it\" was already tried. It was a complete and utter failure.","msgtype":"m.text"},"ts":1402693759000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"which was that? you can write some pretty bad xhtml pages that will still render _something_","msgtype":"m.text"},"ts":1402693792000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: yeah, </$FOO> only grabs the first $FOO","msgtype":"m.text"},"ts":1402693820000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i think you can find a happy medium between \"abort on error\" and \"don't rearrange peoples gunk\"","msgtype":"m.text"},"ts":1402693884000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: No, XHTML just fails. It fails hard. If you see it render \"something\", that's because it's not XHTML. It's HTML that you are writing in an XHTML-like syntax.  Maybe you don't *realize* it's HTML, maybe you dont' know that what you did triggered HTML parsing, but it happened.","msgtype":"m.text"},"ts":1402693890000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not one or the other, you know?","msgtype":"m.text"},"ts":1402693895000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: what should happen if the page has  <table><tr><td>A</td></tr>B<tr><td>C</td></tr></table>","msgtype":"m.text"},"ts":1402693940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"layout would come up with something to do with the text node","msgtype":"m.text"},"ts":1402693965000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we could find out","msgtype":"m.text"},"ts":1402693987000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"how about <p>A<b>B<i>C</b>D</i>E</p> ?","msgtype":"m.text"},"ts":1402694026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://jsfiddle.net/azjVF/ try it for yourself","msgtype":"m.text"},"ts":1402694161000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if layout engines can figure out what to do with it, I'm not convinced the parser should have to","msgtype":"m.text"},"ts":1402694252000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: WebKit and I presume Blink render up to the error","msgtype":"m.text"},"ts":1402694252000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"THEY ARE VIOLATING THE SPEC","msgtype":"m.text"},"ts":1402694265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: You only have to abort normal parsing, you don't have to discard what you've already parsed","msgtype":"m.text"},"ts":1402694267000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"THE INTENTION","msgtype":"m.text"},"ts":1402694282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're not though.","msgtype":"m.text"},"ts":1402694288000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders is actually right on this. you're allowed to keep what you parsed so far and render it.","msgtype":"m.text"},"ts":1402694313000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because otherwise SAX parsers could never follow the spec — and their existance was a goal.","msgtype":"m.text"},"ts":1402694314000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: you say this like I'm always wrong!","msgtype":"m.text"},"ts":1402694329000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no, the \"actually\" was more about TabAtkins than you :-)","msgtype":"m.text"},"ts":1402694344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I choose to interpret it like gsnedders did.","msgtype":"m.text"},"ts":1402694363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Damn it guys!","msgtype":"m.text"},"ts":1402694371000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"gsnedders is actually right on this (unlike his usual wrong-as-hell self)\"","msgtype":"m.text"},"ts":1402694380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: i'm gonna have a bunch of fixes to the tests","msgtype":"m.text"},"ts":1402694402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"I know it's hard to believe, what with it being gsnedders and all, who's wrong all the time.\"","msgtype":"m.text"},"ts":1402694404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: how do you want them?","msgtype":"m.text"},"ts":1402694405000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"strict parsing is pretty nasty for file formats authored by humans rather than machines","msgtype":"m.text"},"ts":1402694411000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: a pull request, which I presume is what you and jgraham were discussing while I was watching X-Men.","msgtype":"m.text"},"ts":1402694424000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"But hey, even a wrong clock is right twice a day.\"","msgtype":"m.text"},"ts":1402694435000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: for the whole batch at once?","msgtype":"m.text"},"ts":1402694442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Though that, sadly, is way more right than gsnedders is on a given day.\"","msgtype":"m.text"},"ts":1402694453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Are they all just fixing them to match the spec?","msgtype":"m.text"},"ts":1402694462000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"which make xhtml not terrible for machine-generated markup, but useless for the rest","msgtype":"m.text"},"ts":1402694466000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gsnedders: also adding a few features to the test format","msgtype":"m.text"},"ts":1402694477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: (#script-on / #script-off, to indicate if scripting is enabled or not)","msgtype":"m.text"},"ts":1402694491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I'd rather that was kept as a separate PR","msgtype":"m.text"},"ts":1402694498000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402694501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I agree it's needed)","msgtype":"m.text"},"ts":1402694505000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"also a few new tests","msgtype":"m.text"},"ts":1402694512000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"minor variations on existing ones","msgtype":"m.text"},"ts":1402694516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"most of the changes are fixing the #errors sections","msgtype":"m.text"},"ts":1402694527000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Keep them in a separate commit, but they can probably piggy-back one of those PRs","msgtype":"m.text"},"ts":1402694550000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wish there was a way i could convince google search to blacklist scrape-and-paste sites, it's getting pretty bad particularly for SO","msgtype":"m.text"},"ts":1402694567000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I tend not to be too fussed unless I disagree with the code :)","msgtype":"m.text"},"ts":1402694569000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402694590000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: git add --patch may be useful, allows you to select specific changes when committing","msgtype":"m.text"},"ts":1402694598000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i type -p, i assumed it meant \"pick\"","msgtype":"m.text"},"ts":1402694627000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: why the hell do I ever know what it is an abbr for?","msgtype":"m.text"},"ts":1402694651000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"blimey template.dat is long","msgtype":"m.text"},"ts":1402694687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno, you typed it :P","msgtype":"m.text"},"ts":1402694701000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gsnedders: k, i'll probably get back to you when i'm ready","msgtype":"m.text"},"ts":1402694710000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: to figure out how to do it :-)","msgtype":"m.text"},"ts":1402694715000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The split between files is pretty random, as I've mentioned before :)","msgtype":"m.text"},"ts":1402694718000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"these tests have been invaluable so far","msgtype":"m.text"},"ts":1402694762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We need more! And a way to check they're right and stay right!","msgtype":"m.text"},"ts":1402694782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mumbles mumbles mumbles","msgtype":"m.emote"},"ts":1402694791000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well, that's kind of what i'm doing.","msgtype":"m.text"},"ts":1402694799000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is your impl actually going to strictly stay up to date with the spec?","msgtype":"m.text"},"ts":1402694832000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"dunno, but since it's going to be used by the spec pipeline, it has a higher chance than average of keeping up to date","msgtype":"m.text"},"ts":1402694930000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec's a bit inconsistent about how many parse errors you get with an unexpected EOF","msgtype":"m.text"},"ts":1402695612000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i'm not gonna fix it","msgtype":"m.text"},"ts":1402695617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(e.g. <template><script> -> 2, <template><table> -> 1)","msgtype":"m.text"},"ts":1402695630000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Only in the template case? It certainly used to be the case you only got one","msgtype":"m.text"},"ts":1402695781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, it's templates that mess this up i think","msgtype":"m.text"},"ts":1402695833000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually","msgtype":"m.text"},"ts":1402695910000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1402695911000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<table><script> -> 2 also, as far as i can tell","msgtype":"m.text"},"ts":1402695919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<template><template><template> -> 3","msgtype":"m.text"},"ts":1402695931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git add -p is an immediately sufficient answer to \"why does git give you access to the staging area\"","msgtype":"m.text"},"ts":1402695963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<dummy><table><template><table><template><table><script> gives you four EOF messages","msgtype":"m.text"},"ts":1402696866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but can you guess which four? :-)","msgtype":"m.text"},"ts":1402696872000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: Preach it.","msgtype":"m.text"},"ts":1402696940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I use git-cola to do the same by click-selecting lines","msgtype":"m.text"},"ts":1402698490000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Hixie: I now want to see if there's an upper-bound on the number of EOF errors… :)","msgtype":"m.text"},"ts":1402700067000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: well each <template> gives one, so not strictly","msgtype":"m.text"},"ts":1402700764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: but if you count all those as one... then yeah, probably","msgtype":"m.text"},"ts":1402700773000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"target=_blank needs to be shot into the sun","msgtype":"m.text"},"ts":1402700823000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"preferably hard enough that it shoots out the other side of the sun, so it can fall into the sun a second time","msgtype":"m.text"},"ts":1402700835000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: strictly, because why would I care about anything but being technically correct? :)","msgtype":"m.text"},"ts":1402700911000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"All other forms of correct are just secondary to that.","msgtype":"m.text"},"ts":1402700925000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hahaha. So apparently here any vehicle over 3m tall must have a sign in the cab giving the height… in feet and inches.","msgtype":"m.text"},"ts":1402701099000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok who was the joker who put \"Not Known\" as the parse error","msgtype":"m.text"},"ts":1402701500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ezyang","msgtype":"m.text"},"ts":1402701573000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"We only sorted out the format of the errors about a year ago, before them all that was checked was number","msgtype":"m.text"},"ts":1402701616000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh my version way back when didn't haver errors?","msgtype":"m.text"},"ts":1402701956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It may well have","msgtype":"m.text"},"ts":1402702098000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But no impl paid attention to the format, just the number","msgtype":"m.text"},"ts":1402702112000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So they ceased being at all meaningful except for the number","msgtype":"m.text"},"ts":1402702123000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"well that's all that's meaningful now, still, no?","msgtype":"m.text"},"ts":1402702181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In *theory* we should now have (col, row): [meaningless]","msgtype":"m.text"},"ts":1402702216000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1402702223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well i'm not doing that, and a lot of them don't have that :-)","msgtype":"m.text"},"ts":1402702232000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"As I said, in theory. :)","msgtype":"m.text"},"ts":1402702240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"also, the ones that do have col,row almost always have the row off by one","msgtype":"m.text"},"ts":1402702248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"compared to what mine outputs","msgtype":"m.text"},"ts":1402702252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zero/one-base?","msgtype":"m.text"},"ts":1402702261000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"no, i think they're both 1-based, but i for \"<foo>\" i output the error at 1,6, and the tests have it at 1,5","msgtype":"m.text"},"ts":1402702295000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"after the token, vs on the last character of the token","msgtype":"m.text"},"ts":1402702303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(mine leads to a better experience when integrated with an IDE, imho)","msgtype":"m.text"},"ts":1402702325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e., we give the position of the next character to be consumed?","msgtype":"m.text"},"ts":1402702355000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i do, you give the position of the last consumed character","msgtype":"m.text"},"ts":1402702380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but really the positions are debatable","msgtype":"m.text"},"ts":1402702402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, the position of a missing doctype is before the token that discovers it, for example","msgtype":"m.text"},"ts":1402702412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not after it","msgtype":"m.text"},"ts":1402702415000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so we give the position of what the spec calls the \"current input character\"?","msgtype":"m.text"},"ts":1402702446000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"which seems sensible from an API POV","msgtype":"m.text"},"ts":1402702455000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah, i think so","msgtype":"m.text"},"ts":1402702486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway, that's not documented","msgtype":"m.text"},"ts":1402702496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"My memory of these things is not great, but I think to remember when we started hacking we just cared about parse errors as a boolean; if it expected any and we reported any, it was good","msgtype":"m.text"},"ts":1402702497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so it doesn't exist :-P","msgtype":"m.text"},"ts":1402702499000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Indeed. :)","msgtype":"m.text"},"ts":1402702508000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: i'm updating the tests to have an accurate number, at least","msgtype":"m.text"},"ts":1402702514000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I haven't really touched any HTML parsing code for a long time now. WebVTT was fun to do. Hopefully some other other format comes along at some point","msgtype":"m.text"},"ts":1402702563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebVTT was actually really nice. Wrote it while hanging out with MikeSmith eating cookies and drinking tea in his neighbourhood","msgtype":"m.text"},"ts":1402702611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: speaking of html5lib, what do I need to get code-review of anything nowadays? bah!","msgtype":"m.text"},"ts":1402703406000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"blimey","msgtype":"m.text"},"ts":1402703449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i pass 8109 tests, but \"<a><b><b><p></a>\" is enough to take me down","msgtype":"m.text"},"ts":1402703458000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The AAA really needs more test coverage. :(","msgtype":"m.text"},"ts":1402703477000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(hard, to, that's a null deref crash)","msgtype":"m.text"},"ts":1402703478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"too","msgtype":"m.text"},"ts":1402703482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem with the AAA is that it's like the bidi model and margin collapsing and the inline box model","msgtype":"m.text"},"ts":1402703507000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at any given time, nobody actually understands it","msgtype":"m.text"},"ts":1402703515000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1402703518000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"for brief periods of time, there'll be one person who actually groks it","msgtype":"m.text"},"ts":1402703526000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but they don't grok it for long enough to write many tests","msgtype":"m.text"},"ts":1402703540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because otherwise they'll go mad","msgtype":"m.text"},"ts":1402703549000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I remember when I was fixing CSS 2.1 tests originally by various Opera people","msgtype":"m.text"},"ts":1402703579000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I reached the bidi ones and just nope'd straight outta there","msgtype":"m.text"},"ts":1402703589000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1402703593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the trick with bidi ones","msgtype":"m.text"},"ts":1402703597000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is to write it all on pieces of paper","msgtype":"m.text"},"ts":1402703601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and cut them up","msgtype":"m.text"},"ts":1402703602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then do it by hand that way","msgtype":"m.text"},"ts":1402703605000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(seriously)","msgtype":"m.text"},"ts":1402703608000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: Ummm. Good question","msgtype":"m.text"},"ts":1402703640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sleep","msgtype":"m.emote"},"ts":1402703650000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think in one of the cases I went, \"oh, hey fantasai… see these tests you wrote years ago? yeah, could you fix them?\"","msgtype":"m.text"},"ts":1402703652000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: I only really care about my PRs, I can review other people's code. :P","msgtype":"m.text"},"ts":1402703708000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: What I really want is a formal model of the spec so I can just model things as satisfaction problems and get tests like that :)","msgtype":"m.text"},"ts":1402703794000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"good luck","msgtype":"m.text"},"ts":1402703865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really all I need is a decent formal model that I'm relatively sure matches the spec","msgtype":"m.text"},"ts":1402703901000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"crap now i only pass 6928 tests","msgtype":"m.text"},"ts":1402703903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what did i do!","msgtype":"m.text"},"ts":1402703905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you broke stuff!","msgtype":"m.text"},"ts":1402703918000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"damn it Hixie, you're meant to be the all-knowing master of HTML, and you can't even parse it? pff!","msgtype":"m.text"},"ts":1402703938000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ohhhh.... i had a bogus assert","msgtype":"m.text"},"ts":1402703973000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where the spec says \"if any\", it really means \"if any\", not \"there will be one and you should assert there is one\"","msgtype":"m.text"},"ts":1402703989000,"senderName":"Hixie","senderId":"Hixie@irc"}
]