[
{"content":{"body":"Domenic: CSP implications","msgtype":"m.text"},"ts":1494476364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess github needs a way to add a comment when assigning a review","msgtype":"m.text"},"ts":1494477706000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I guess we can always just manually add a separate comment","msgtype":"m.text"},"ts":1494477732000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So, how dead is TPAC going to be if nobody from Europe or the Middle East shows up? I imagine it'll still be pretty busy given the number of local people…","msgtype":"m.text"},"ts":1494480672000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=563283 says that other browsers supported the precombining the sound marks when encoding half-width Katakana to ISO-2022-JP","msgtype":"m.text"},"ts":1494483570000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: so other browsers changed, too, in the last 7 years?","msgtype":"m.text"},"ts":1494483605000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I think it might be that he was seeing something else","msgtype":"m.text"},"ts":1494486025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1494486035000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Safari performs some flavor of Unicode normalization","msgtype":"m.text"},"ts":1494486037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: for form submission","msgtype":"m.text"},"ts":1494486042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I think Chrome removed that post-fork, but not immediately","msgtype":"m.text"},"ts":1494486053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be interesting to know if HFS+ is to blame for Safari doing that","msgtype":"m.text"},"ts":1494486097000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i.e. to protect the non-Mac world from copied and pasted HFS+ file names","msgtype":"m.text"},"ts":1494486119000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or the OS doing that to all text fields?","msgtype":"m.text"},"ts":1494486131000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: https://bugs.webkit.org/show_bug.cgi?id=159891 has information on it","msgtype":"m.text"},"ts":1494486165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there was a bad time in 2003, 2004 or so when Preview was exporting decomposed text to the clipboard for a while","msgtype":"m.text"},"ts":1494486169000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: does NFC do the same thing that bug is talking about?","msgtype":"m.text"},"ts":1494486205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: if not, I don't know what's going on","msgtype":"m.text"},"ts":1494486217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure. I guess it's time to test","msgtype":"m.text"},"ts":1494486371000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: NFKC roughly does","msgtype":"m.text"},"ts":1494486519000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but not NFC","msgtype":"m.text"},"ts":1494486531000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. let's have another look at the test case","msgtype":"m.text"},"ts":1494486543000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the Mozilla test case tests input that needs NFKC, not NFC, to combine the sound marks","msgtype":"m.text"},"ts":1494486632000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hmm, maybe ap was wrong","msgtype":"m.text"},"ts":1494486692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: IE10 on Windows 7 does the NFKC thing for half-width Katakana","msgtype":"m.text"},"ts":1494487621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so Edge has a different encoder? Or different test from mine?","msgtype":"m.text"},"ts":1494487772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Edge (Anniversary Update) also does the NFKC thing","msgtype":"m.text"},"ts":1494487818000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I tested https://hsivonen.com/test/moz/iso-2022-jp-form-submission.htm with U+FF76 U+FF9E","msgtype":"m.text"},"ts":1494487862000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: what about https://dump.testsuite.org/encoding/iso-2022-jp/encode.html?","msgtype":"m.text"},"ts":1494487953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I didn't test what happens with decomposed full-width Katakana","msgtype":"m.text"},"ts":1494487959000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1494487963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I get a mangled query string in Edge","msgtype":"m.text"},"ts":1494488106000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"mangled query in IE11 on Windows 7, too","msgtype":"m.text"},"ts":1494488208000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but if I look at what the query should be if it hadn't lost its escape characters, it seems like it didn't to the NFKC thing","msgtype":"m.text"},"ts":1494488282000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so, yeah, difference in MS browsers between form and query","msgtype":"m.text"},"ts":1494488296000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hooray","msgtype":"m.text"},"ts":1494488301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"let's test full-width katakana then","msgtype":"m.text"},"ts":1494488322000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no NFKC for full-width in IE11 for Windows 7","msgtype":"m.text"},"ts":1494488461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so, uconv wasn't alone but really matches Microsoft for form submission","msgtype":"m.text"},"ts":1494488491000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now I feel bad about regressing this","msgtype":"m.text"},"ts":1494488583000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"although it annoys me that all this time goes into the least useful (on the Web) encoder","msgtype":"m.text"},"ts":1494488604000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so: Microsoft and uconv both precombine the sound marks to their bases as in NFKC but map lone sound marks to their non-combining versions (unlike NFKC)","msgtype":"m.text"},"ts":1494488792000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: I'm kind of surprised you draw the line at \"can't use my laptop on the flight.\"","msgtype":"m.text"},"ts":1494489360000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Isn't the expansion of radial-gradient() wrong in https://drafts.csswg.org/css-images-3/#radial-gradients?","msgtype":"m.text"},"ts":1494492048000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"AFAICT, the expansion says that everything before colour stops can be omitted, that doesn't seem to reflect the rest of the spec.","msgtype":"m.text"},"ts":1494492102000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: it's still unclear to me how this changed in Chrome and Safari","msgtype":"m.text"},"ts":1494492161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: was ap wrong and are they actually doing NFKC or NFKD or some such?","msgtype":"m.text"},"ts":1494492177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I guess I can try to test Safari TP with your form thingy","msgtype":"m.text"},"ts":1494492199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: with your test and \"ｶﾞ\" as input I still get 4 bytes in Chrome and Safari and 2 bytes in Firefox","msgtype":"m.text"},"ts":1494492406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: so it's not clear we really regressed much","msgtype":"m.text"},"ts":1494492424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so Safari doesn't combine them. OK.","msgtype":"m.text"},"ts":1494492710000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: just to be totally safe, the output I get is QUERY_STRING = q=%1B%24B%25%2B%21%2B%1B%28B","msgtype":"m.text"},"ts":1494492762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"From which I determined %25%2B%21%2B to be the four relevant bytes","msgtype":"m.text"},"ts":1494492792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1494492819000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is the way the gb18030 decoder emits an ASCII character for the second byte in a 4-byte GB18030 sequence that decodes to a null code point a new thing in the spec or a pre-existing browser behavior","msgtype":"m.text"},"ts":1494492904000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in a stream of bytes that could by their values be part of multiple 4-byte sequences, it changes how the 4-byte sequences align to bytes","msgtype":"m.text"},"ts":1494492958000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you mean it should maybe emit ASCII U+FFFD ASCII instead?","msgtype":"m.text"},"ts":1494493168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I think that might be new, it's part of making sure you cannot mask ASCII characters used in parser operations","msgtype":"m.text"},"ts":1494493205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if it's new, it might have undesirable side effects","msgtype":"m.text"},"ts":1494493229000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(at least sound like it, it's too long ago that I actually know for sure)","msgtype":"m.text"},"ts":1494493232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it's time for cross-browser testing","msgtype":"m.text"},"ts":1494493243000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm going to consider this a spec bug","msgtype":"m.text"},"ts":1494494016000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hopes it's easy to fix","msgtype":"m.emote"},"ts":1494494136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I proposed an easy fix that masks an ASCII byte but only when it is known to be surrounded by non-ASCII bytes: https://github.com/whatwg/encoding/issues/110","msgtype":"m.text"},"ts":1494495152000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: but if N is non-ASCII then attribute=\"i amN\"Nbroken\"","msgtype":"m.text"},"ts":1494495247000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: maybe not a problem here because the ASCII range is rather limited, iirc, but still","msgtype":"m.text"},"ts":1494495274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the ASCII bytes are always ASCII digits","msgtype":"m.text"},"ts":1494495314000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, I suppose if you emit two errors at a time, I can build some more state into the decoder and make the error emission happen separately","msgtype":"m.text"},"ts":1494495378000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in any case, it seems that the decoder getting misaligned in a way that doesn't happen in current impls is bad","msgtype":"m.text"},"ts":1494495417000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, not matching impls is bad; masking ASCII digits makes me a little uncomfortable since it's an exception to a rule, but probably okay...","msgtype":"m.text"},"ts":1494495483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so, it looks like the euc-kr decoder in uconv composes Hangul Compatibility Jamo into Hangul Syllables","msgtype":"m.text"},"ts":1494497420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does any other browser do *that*","msgtype":"m.text"},"ts":1494497427000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: is https://hsivonen.com/test/moz/gb18030-alignment.htm 8 bytes?","msgtype":"m.text"},"ts":1494497476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: or 16?","msgtype":"m.text"},"ts":1494497508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: 16","msgtype":"m.text"},"ts":1494497516000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so browsers just eat all ASCII digits atm","msgtype":"m.text"},"ts":1494497528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1494497535000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: did you test ASCII but not ASCII digit in the fourth place there?","msgtype":"m.text"},"ts":1494497611000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I didn't","msgtype":"m.text"},"ts":1494497619000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"seems indeed relevant to test","msgtype":"m.text"},"ts":1494497625000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"uconv seems to bake \\u3164\\u3131\\u314f\\u3138 into \\uAC07, but NFKC says \\u1160\\uac00\\u1104","msgtype":"m.text"},"ts":1494497790000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I'll create a test for that then","msgtype":"m.text"},"ts":1494497926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: seems that's interoperable at least","msgtype":"m.text"},"ts":1494498526000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: if you're not worried about consuming ASCII digits I'd suggest we just consume them all","msgtype":"m.text"},"ts":1494498571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: works for me","msgtype":"m.text"},"ts":1494499068000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: https://hsivonen.com/test/moz/compatibility-jamo.htm Firefox differs from IE and Chromium. What does Safari do?","msgtype":"m.text"},"ts":1494499098000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Output is 갇 and ㅤㄱㅏㄷ","msgtype":"m.text"},"ts":1494499136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1494499141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so same as Chromium and IE","msgtype":"m.text"},"ts":1494499147000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Rendering is different between Safari and IRCCloud running in Firefox though","msgtype":"m.text"},"ts":1494499170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is <positive-integer> defined in any CSS spec?","msgtype":"m.text"},"ts":1494499182000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: do you mean Safari renders the compatibility jamo as a syllable block?","msgtype":"m.text"},"ts":1494499271000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"https://irccloud.mozilla.com/file/RII3aZeG/Safari%20TP.png","msgtype":"m.text"},"ts":1494499313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: ^","msgtype":"m.text"},"ts":1494499324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wow. what's that first glyph on the last row?","msgtype":"m.text"},"ts":1494499342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"anyway, it seems that the spec is fine here and uconv has unnecessary complexity","msgtype":"m.text"},"ts":1494499362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: right, that's the one that was bugging me","msgtype":"m.text"},"ts":1494499383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE, Chromium, Firefox and irssi render the first code point as a space","msgtype":"m.text"},"ts":1494499446000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: it's U+3164 HANGUL FILLER","msgtype":"m.text"},"ts":1494499500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unicode.org doesn't provide a glyph for it","msgtype":"m.text"},"ts":1494499503000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: in Safari's DOM inspector it doesn't render either","msgtype":"m.text"},"ts":1494499519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes. it's a control for marking the start of a syllable block","msgtype":"m.text"},"ts":1494499526000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the glyph resembles HANGUL LETTER SSANGHIEUH","msgtype":"m.text"},"ts":1494499603000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"anyway, probably not something I need to care about","msgtype":"m.text"},"ts":1494499621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TIL: https://www.iana.org/assignments/charset-reg/CP50220","msgtype":"m.text"},"ts":1494501007000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"references the whatwg wiki!","msgtype":"m.text"},"ts":1494501063000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I think that happened back when I was trying to turn IANA into The Thing","msgtype":"m.text"},"ts":1494501228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: realized there's another interesting case","msgtype":"m.text"},"ts":1494501365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: the fourth byte is neither a digit nor ascii","msgtype":"m.text"},"ts":1494501378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Firefox ends up with an extra U+FFFD, Chrome and Safari do not","msgtype":"m.text"},"ts":1494501402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: although it's not entirely clear to me how Firefox does it like that, hmm","msgtype":"m.text"},"ts":1494501503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh maybe that has more to do with Firefox's two byte error handling","msgtype":"m.text"},"ts":1494501535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"trivia: previously, the maximal length of a byte sequence corresponding to a single U+FFFD was 3 bytes. this spec change makes it 4 bytes","msgtype":"m.text"},"ts":1494504553000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(previously per spec that is)","msgtype":"m.text"},"ts":1494504565000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: even in UTF-8?","msgtype":"m.text"},"ts":1494504660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess so","msgtype":"m.text"},"ts":1494504686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good question for a pub quiz","msgtype":"m.text"},"ts":1494504721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: even in UTF-8, indeed","msgtype":"m.text"},"ts":1494504784000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"updates documentation in 4 places where this fact is stated","msgtype":"m.emote"},"ts":1494504848000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I suspect I'll land the fix Monday to give everyone some time to comment in case we overlooked something","msgtype":"m.text"},"ts":1494504994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1494505450000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Domenic: I'm happy that I managed to use serialize/deserialize correctly. It seemed intimidating at first but was actually pretty straight-forward","msgtype":"m.text"},"ts":1494506252000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Now I kind of want to put that testimonial in the spec","msgtype":"m.text"},"ts":1494508482000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good times https://github.com/w3c/webrtc-pc/pull/1108#issuecomment-300694559","msgtype":"m.text"},"ts":1494508581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1494508795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1494508809000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: you should open an issue against them on behalf of Chrome, saying you can't both implement their requirements and say, SharedArrayBuffer, as you don't know what the intersection looks like","msgtype":"m.text"},"ts":1494508923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Commented at https://github.com/w3c/webrtc-pc/pull/1171","msgtype":"m.text"},"ts":1494509025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: comments on merged pulls are easy to ignore.","msgtype":"m.text"},"ts":1494512055000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: with out-of-process iframe elements (and therefore distinct event loops), how does Chrome prevent duplicate alert()s?","msgtype":"m.text"},"ts":1494512521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no real idea... @avidrissman on GitHub knows I am sure, as he's overhauling Chrome's alert() handling","msgtype":"m.text"},"ts":1494513332000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: risk of theft/damage is way more of a concern than using a laptop in flight imo","msgtype":"m.text"},"ts":1494519469000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic: I would love @whatwg/navigate with all the relevant engineers, but maybe too many problems right now to bother lots of people with","msgtype":"m.text"},"ts":1494519470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: I had previously basically agreed to continue to go to meetings arranged prior to November","msgtype":"m.text"},"ts":1494519484000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: It's not in https://drafts.csswg.org/indexes/#types so I guess not.  What spec did you find it in?","msgtype":"m.text"},"ts":1494522047000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nox: No, the r-g() grammar is right. What makes you think the initial part can't be omitted?","msgtype":"m.text"},"ts":1494522087000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: The previous grammar in the spec.","msgtype":"m.text"},"ts":1494525484000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Err, no, I'm saying it can't, but the expanded grammar says it does.","msgtype":"m.text"},"ts":1494525512000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://drafts.csswg.org/css-images-3/#radial-gradients","msgtype":"m.text"},"ts":1494525522000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"[ <ending-shape> || <size> ]? [ at <position> ]? ,\"","msgtype":"m.text"},"ts":1494525530000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah, both parts are optional.","msgtype":"m.text"},"ts":1494525538000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"becomes in note below:","msgtype":"m.text"},"ts":1494525540000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"https://irccloud.mozilla.com/pastebin/t05NdVBb/","msgtype":"m.text"},"ts":1494525544000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: If both parts are optional, why is there a mandatory comma?","msgtype":"m.text"},"ts":1494525562000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"There's not - https://drafts.csswg.org/css-values/#comb-comma","msgtype":"m.text"},"ts":1494525605000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":O TIL","msgtype":"m.text"},"ts":1494525630000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: Thanks.","msgtype":"m.text"},"ts":1494525636000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1494525644000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What about the <positive-integer> thing?","msgtype":"m.text"},"ts":1494525650000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The optional-comma thing in CSS grammars isn't well-known, and it's only about 2 years old anyway, but by golly does it make certain types of grammars much simpler to write.)","msgtype":"m.text"},"ts":1494527040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I find that the occasional confusion from someone not knowing about it is well worth the simplification and increased comprehensibility of the resulting grammars.)","msgtype":"m.text"},"ts":1494527069000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Has anyone else had trouble testing shared workers, where it seems like the request to the worker file is just not being made?","msgtype":"m.text"},"ts":1494528529000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I should ask the testing channel","msgtype":"m.text"},"ts":1494528552000,"senderName":"Domenic","senderId":"Domenic@irc"}
]