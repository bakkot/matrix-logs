[
{"content":{"body":"does it make sense to talk about the relevant realm/relevant settings object from the definition prose of a static operation? It seems like that is something that should be well-defined, but not entirely sure how to best write it, since there is no platform object or |this| value...","msgtype":"m.text"},"ts":1573499499000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: generally you should use \"current settings object\" in that situation. It will be identical to \"the realm of the static function being called\"","msgtype":"m.text"},"ts":1573501604000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(which could be different from \"the realm of the constructor, which is the thisArg\", in cases like `otherWindow.CSS.escape.call(window.CSS)`)","msgtype":"m.text"},"ts":1573501650000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: do you think \"site\" should be \"scheme-and-registrable domain\" or should it be \"scheme-and-registrable-domain or origin\"?","msgtype":"m.text"},"ts":1573502211000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Going to try the former for now","msgtype":"m.text"},"ts":1573502258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, okay. So even if you call my_iframe.contentWindow.SomeInterface.staticOperation() current settings object would still be the iframes settings object?","msgtype":"m.text"},"ts":1573502509000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: yep","msgtype":"m.text"},"ts":1573502553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1573502563000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Domenic: or origin, otherwise whatâ€™d we call that?","msgtype":"m.text"},"ts":1573502910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agent cluster key? Unsure how broadly applicable the agent cluster key concept is...","msgtype":"m.text"},"ts":1573502931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think that is the concept","msgtype":"m.text"},"ts":1573502964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I am a bit confused... the only use of the \"site\" concept directly is possibly for agent cluster key, I think. Everything else wants to compare origins for (schemeless) same-siteness","msgtype":"m.text"},"ts":1573502988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: without or origin same origin is not a subset","msgtype":"m.text"},"ts":1573503004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given that I'm not sure I see as much value in defining \"site\" and \"schemless site\"","msgtype":"m.text"},"ts":1573503006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right, \"same site\" would need to inspect origin stuff","msgtype":"m.text"},"ts":1573503019000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: gotta go, will elaborate tomorrow","msgtype":"m.text"},"ts":1573503054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"K. Will start by defining \"same site\" and \"schemelessly same site\" on origins; I think I understand the requirements there at least.","msgtype":"m.text"},"ts":1573503080000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do you happen to know if we have a convenient incantation for \"first party context\" vs \"third party context\", i.e. if settings object's origin is (not) the same as the top-level origin. It's something we check in a lot of places in chrome, but I haven't been able to find any specs yet that actually include such checks...","msgtype":"m.text"},"ts":1573503466000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: not off the top of my head, sorry...","msgtype":"m.text"},"ts":1573503483000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"np, thanks anyway","msgtype":"m.text"},"ts":1573503515000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":" `If |environment|'s [=environment settings object/origin=] is not [=same origin=] with |browsing context|'s [=top-level browsing context=]'s [=active document=]'s [=relevant settings object=]'s [=environment settings object/origin=],` does what I want I think, but it seems like there must be a beter way...","msgtype":"m.text"},"ts":1573508784000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"  ","msgtype":"m.text"},"ts":1573508784000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: I think you can just go \"active document's origin\"","msgtype":"m.text"},"ts":1573510726000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what definition of \"origin\" would that be?","msgtype":"m.text"},"ts":1573510872000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"ah, never mind, I see","msgtype":"m.text"},"ts":1573510971000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"I didn't realize the generic definition for \"origin\" was monkey patching the definition of Document...","msgtype":"m.text"},"ts":1573511071000,"senderName":"Mek","senderId":"Mek@irc"}
]