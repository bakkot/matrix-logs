[
{"content":{"body":"Domenic: plinss just landed code for recognizing headings that are definitions.  I'll shortly be adding the code to Bikeshed to make it work properly, too.","msgtype":"m.text"},"ts":1438647239000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"littledan: Node.js adding self first makes the most sense to me. Then we can figure out if that's worth harmonizing over.","msgtype":"m.text"},"ts":1438668360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Fetch and I think also HTML have header definitions","msgtype":"m.text"},"ts":1438668388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: though I think HTML also has one case where a single heading contains multiple definitions (for h1, h2, etc., ironically)","msgtype":"m.text"},"ts":1438668418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, so now the IETF approved http://tools.ietf.org/html/rfc7159 that's the only RFC defining the MIME type, but it seems they at least aligned with the definition from Ecma, although I haven't read closely...","msgtype":"m.text"},"ts":1438680275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: does not seem to be much in https://lists.w3.org/Archives/Public/public-editing-tf/ or https://github.com/w3c/editing","msgtype":"m.text"},"ts":1438681349000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sees Ryosuke Niwa, Arthur Barstow and Florian Rivoal among the posters","msgtype":"m.emote"},"ts":1438681427000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: https://github.com/w3c/editing/issues/56 is the most interesting","msgtype":"m.text"},"ts":1438681432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll watch that","msgtype":"m.text"},"ts":1438681519000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Looks like Ryosuke-san has some healthy skepticism","msgtype":"m.text"},"ts":1438681560000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1438681697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for doing the bugzilla hygiene","msgtype":"m.text"},"ts":1438682632000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: made it possible to see all bugs on a single page again","msgtype":"m.text"},"ts":1438682827000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: not really impressed by how Web Components folks just moved all over Template bugs without any additional triage","msgtype":"m.text"},"ts":1438682870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but most was spammy stuff from the widget","msgtype":"m.text"},"ts":1438682896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah that Templates move was kind of quick-and-dirty","msgtype":"m.text"},"ts":1438683324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: what do you think about forking https://github.com/ayg/editing to https://github.com/whatwg/editing now that https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html is gone?","msgtype":"m.text"},"ts":1438685993000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: we should ask ayg if he would be willing to move the repository","msgtype":"m.text"},"ts":1438686050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, there's certainly no rush","msgtype":"m.text"},"ts":1438686079000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: and maybe we should include rniwa/ehsan in that email to get a feeling for what everyone else feels","msgtype":"m.text"},"ts":1438686119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well \"everyone\"","msgtype":"m.text"},"ts":1438686124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least those that did some work on this in the past","msgtype":"m.text"},"ts":1438686138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"overall though I'd be supportive of that, certainly if this new Editing TF is not actually doing any hard work","msgtype":"m.text"},"ts":1438686167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well perhaps they are doing good work, but just not taking ownership of execCommand()","msgtype":"m.text"},"ts":1438686238000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"or contenteditable...","msgtype":"m.text"},"ts":1438686415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or designMode","msgtype":"m.text"},"ts":1438686423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you don't take ownership of the primitives that exist, you're bound to create a shit show","msgtype":"m.text"},"ts":1438686439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Speaking of editing, https://www.indiegogo.com/projects/prosemirror/ is pretty interesting","msgtype":"m.text"},"ts":1438688194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: it seems ayg is still around","msgtype":"m.text"},"ts":1438688209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep, and with no love for execCommand() :)","msgtype":"m.text"},"ts":1438688275000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, I wonder what his answer is to \"what about Servo?\"","msgtype":"m.text"},"ts":1438688314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i remember creating a rich text editor using javascript & dom many years ago, without using execCommand. that sure was a lot of work","msgtype":"m.text"},"ts":1438688332000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"I'm assuming Edge simply has IE's old code without all the ridiculous switch statements","msgtype":"m.text"},"ts":1438688338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: he already answered in https://github.com/w3c/clipboard-apis/issues/16#issuecomment-127570472","msgtype":"m.text"},"ts":1438688359000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"ah I see","msgtype":"m.text"},"ts":1438688409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be great if the editing api was more low level","msgtype":"m.text"},"ts":1438688670000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"a sane API which execCommand can be built on top of would be nice","msgtype":"m.text"},"ts":1438688699000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"contenteditable is so incredibly buggy in all browsers","msgtype":"m.text"},"ts":1438688702000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"(not just execCommand)","msgtype":"m.text"},"ts":1438688743000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"for example, in certain situations elements can \"leak\" outside of the element that has contenteditable","msgtype":"m.text"},"ts":1438688782000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"so i think the behaviour of contenteditable must either be very well defined, or provide a much lower level api","msgtype":"m.text"},"ts":1438688858000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"annevk, MikeSmith: What am I supposed to be migrating?","msgtype":"m.text"},"ts":1438689839000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: the idea is to slowly move over to GitHub","msgtype":"m.text"},"ts":1438689882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1438689891000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: as you can see in e.g., URL and DOM","msgtype":"m.text"},"ts":1438689893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dislike GitHub issues","msgtype":"m.emote"},"ts":1438689898000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"are plural","msgtype":"m.emote"},"ts":1438689904000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: I assume there's justification for this?","msgtype":"m.text"},"ts":1438689958000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I don't have a long form argument handy","msgtype":"m.text"},"ts":1438690062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I noticed also that the editor has been removed from the header?","msgtype":"m.text"},"ts":1438690085000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: in general we notice more participation on GitHub and due to GitHub's tight integration of PRs, issues, and commits, it also makes things easier to track","msgtype":"m.text"},"ts":1438690098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: yes, we did that because some people felt having a name there might be unwelcoming to contributions of others, there's some other arguments too","msgtype":"m.text"},"ts":1438690148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1438690167000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: if specifications are more community owned, it doesn't make much sense to have a single name at the top","msgtype":"m.text"},"ts":1438690205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are all of our specs by definition community-owned?","msgtype":"m.text"},"ts":1438690238000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"it makes even less sense to list 10+ names at the top the way some W3C specs do","msgtype":"m.text"},"ts":1438690252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"IMHO name(s)-at-the-top-of-the-spec often creates perverse incentivies","msgtype":"m.text"},"ts":1438690289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1438690312000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: what else would they be if not community-owned?","msgtype":"m.text"},"ts":1438690330000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"GPHemsley: they are in the public domain","msgtype":"m.text"},"ts":1438690337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: and maintained by the WHATWG","msgtype":"m.text"},"ts":1438690345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I always saw it as \"who's the expert on this spec?\" or \"who do I talk to to clarify what this spec means?\"","msgtype":"m.text"},"ts":1438690346000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"dunno how other folks do it","msgtype":"m.text"},"ts":1438690350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, annevk: That sounds like by definition, then","msgtype":"m.text"},"ts":1438690357000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: it would actually be a bad thing if it encouraged that kind of line of reasoning","msgtype":"m.text"},"ts":1438690385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1438690401000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: what you describe is what the Participate links are for, really","msgtype":"m.text"},"ts":1438690403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"GPHemsley: although it's great to have a couple of people own the spec and sort through things, having all conversations flow through that group alone seems damaging long term","msgtype":"m.text"},"ts":1438690417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, in that case, then, I guess... patches welcome ;)","msgtype":"m.text"},"ts":1438690459000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"MikeSmith: yeah, in the W3C you often have people volunteer to have their name on the spec, and only for that...","msgtype":"m.text"},"ts":1438690472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep","msgtype":"m.text"},"ts":1438690484000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"although I appear to have turned github issues off for mimesniff","msgtype":"m.text"},"ts":1438690492000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I'm happy to make the changes I made elsewhere at some point directly if you don't mind","msgtype":"m.text"},"ts":1438690497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it looks like you can still do pull requests even with issues turned off","msgtype":"m.text"},"ts":1438690521000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"the fringe WGs in the Linked-Data/Semantic-Web area are full of that \"I'm here to get my name on a spec\"-think","msgtype":"m.text"},"ts":1438690529000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they're also specs that few people look at, so... *shrug*","msgtype":"m.text"},"ts":1438690559000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: re \"having all conversations flow through that group alone seems damaging long term\", yeah, hypothetically speaking","msgtype":"m.text"},"ts":1438690581000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hypothetically speaking, if an active editor were to sorta to go away and do other things for 10 months or whatever, on a spec that's never really been a community product in the same way most of our other ones now are","msgtype":"m.text"},"ts":1438690655000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just sayin'","msgtype":"m.text"},"ts":1438690659000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that would be less than ideal, if that were to ever happen","msgtype":"m.text"},"ts":1438690677000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"especially if it were to happen with a really important spec","msgtype":"m.text"},"ts":1438690689000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so let's just hope that never happens I guess","msgtype":"m.text"},"ts":1438690713000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: indeed :-)","msgtype":"m.text"},"ts":1438690795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let's hope such a spec would at least have an open-source publication pipeline","msgtype":"m.text"},"ts":1438691007000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I haven't migrated off anolis yet, either","msgtype":"m.text"},"ts":1438691009000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"If Hixie is actually blocking any work then it seems possible to address the situation","msgtype":"m.text"},"ts":1438691348000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk for execCommand editor, wee :)","msgtype":"m.text"},"ts":1438694338000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: \"maintainer\"","msgtype":"m.text"},"ts":1438694359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"PRs appreciated\"","msgtype":"m.text"},"ts":1438694366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If Aryeh is indeed giving up...","msgtype":"m.text"},"ts":1438694380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think he definitely isn't interested in editing, he said as much when I asked about the spec in an email a few years ago","msgtype":"m.text"},"ts":1438694410000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: your list seems about right","msgtype":"m.text"},"ts":1438696324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I think Domenic is only interested in elements and attributes, but I guess we might as well make it complete","msgtype":"m.text"},"ts":1438696341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: and yeah, breaking invariants elsewhere was my worry too","msgtype":"m.text"},"ts":1438696370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: to avoid that you need to go with the HTML/XML union","msgtype":"m.text"},"ts":1438696388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice to see Aryeh back around some, the last few days","msgtype":"m.text"},"ts":1438696486000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah, that should at least reduce the risk, even if it's still the case that there are things that can't be roundtripped in XML and/or HTML","msgtype":"m.text"},"ts":1438696516000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, whoever designed that...","msgtype":"m.text"},"ts":1438696549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: maybe you can just add use counters for the things you'd like and I can sit back and do nothing? :)","msgtype":"m.text"},"ts":1438696561000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"still catching up on the morning email...","msgtype":"m.text"},"ts":1438696576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: any idea what the union would look like, is it just a short blacklist for the first code point and another short blacklist for the rest, or something more complicated?","msgtype":"m.text"},"ts":1438696607000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: more complicated","msgtype":"m.text"},"ts":1438696635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: you need to validate against XML, if that fails, validate against HTML, if that fails, throw","msgtype":"m.text"},"ts":1438696648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: if at any point you succeed you have a winning name","msgtype":"m.text"},"ts":1438696664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so more exception handling code in some of the most most called methods there are...","msgtype":"m.text"},"ts":1438696682000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, seems unlikely","msgtype":"m.text"},"ts":1438696694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although you could code it more efficiently that that of course","msgtype":"m.text"},"ts":1438696704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"by branching","msgtype":"m.text"},"ts":1438696711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might not affect perf at all since it's in an unlikely branch, but still not great","msgtype":"m.text"},"ts":1438696723000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"so let's just wait for Domenic to read some more email :)","msgtype":"m.text"},"ts":1438696738000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"although apparently it's more efficient to create a bunch of elements through appending to DocumentFragment and then cloning that then invoking createElement() a whole lot","msgtype":"m.text"},"ts":1438696788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, yeah, at some point the overhead of bindings just ruins everything I guess","msgtype":"m.text"},"ts":1438696829000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah I guess so","msgtype":"m.text"},"ts":1438696838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe we should have API that allow you to create lots of elements in a single call, without parsing?","msgtype":"m.text"},"ts":1438696850000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"probably not","msgtype":"m.text"},"ts":1438696939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WebAssembly can also take some of this away I'm told","msgtype":"m.text"},"ts":1438696967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"eyerolls at the wasm panacea","msgtype":"m.emote"},"ts":1438697006000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just allowing everything sounds better","msgtype":"m.text"},"ts":1438697013000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what would the use counter do?","msgtype":"m.text"},"ts":1438697021000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I was thinking measure how often an exception is thrown where it no longer would be, but I'm not sure what to do with the result if it's anything but ~0.001%","msgtype":"m.text"},"ts":1438697231000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"0.1% could mean that we'll now make 0.1% of pages work better, who knows","msgtype":"m.text"},"ts":1438697251000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"hmm yeah i would be surprised if it is >0% though, so that seems like a reasonable thing","msgtype":"m.text"},"ts":1438697276000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"depending on exceptions being thrown is unusual, but given a common enough API it enters the realm of the possible","msgtype":"m.text"},"ts":1438697335000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"But I dunno, just trying it would answer the question much faster :)","msgtype":"m.text"},"ts":1438697364000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"zcorpan wanted to do this at some point btw","msgtype":"m.text"},"ts":1438697403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O is TimBL actually posting on blink-dev as 0123456789abcedf⊙gc ?","msgtype":"m.text"},"ts":1438697404000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I'm not sure why he didn't","msgtype":"m.text"},"ts":1438697407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I didn't see that","msgtype":"m.text"},"ts":1438697422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in the <keygren> thread","msgtype":"m.text"},"ts":1438697432000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"It's his picture and name, but could just as well be an impostor I guess","msgtype":"m.text"},"ts":1438697472000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"That sounds quite unlikely","msgtype":"m.text"},"ts":1438697512000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think that's him","msgtype":"m.text"},"ts":1438697543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Odd","msgtype":"m.text"},"ts":1438697613000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Domenic: what does this mean? https://lists.w3.org/Archives/Public/public-webapps/2015JulSep/0232.html","msgtype":"m.text"},"ts":1438698011000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nothing","msgtype":"m.text"},"ts":1438698113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1438698127000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I do hope that if IDL is formalized we could actually have a \"copy\" operation that just creates a new instance and copies over all internal slots","msgtype":"m.text"},"ts":1438698309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so you can just write \"copy\" in your spec and it means something when applied to an object","msgtype":"m.text"},"ts":1438698337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe, such an operation is rarely useful (never used in ES)","msgtype":"m.text"},"ts":1438699392000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What does no-backref do?","msgtype":"m.text"},"ts":1438699633000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: something I should probably patch into dfn.js","msgtype":"m.text"},"ts":1438700071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: partially because ES doesn't define structured cloning as it should","msgtype":"m.text"},"ts":1438700111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1438700124000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's quite a lot of objects that are copied in some manner, though arguably such a generic definition might give the wrong results for elements and such, that don't necessarily want all their internal slots copied","msgtype":"m.text"},"ts":1438700179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Another interesting thing, we gave up on DOM Parsing & Serialization, but the W3C stopped maintaining their copy too","msgtype":"m.text"},"ts":1438701227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does github's bug tracker have anything like needinfo in bugzilla?","msgtype":"m.text"},"ts":1438708055000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: closest is @ mention in a comment I believe","msgtype":"m.text"},"ts":1438708080000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"which is quite different","msgtype":"m.text"},"ts":1438708147000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess \"no\" then :-)","msgtype":"m.text"},"ts":1438708165000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I mean, needinfos end up to a queue which you can check easily","msgtype":"m.text"},"ts":1438708202000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I assume @ stuff don't end up to any queue","msgtype":"m.text"},"ts":1438708221000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you miss some bugmail, you really miss it","msgtype":"m.text"},"ts":1438708240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: they show up here: https://github.com/notifications","msgtype":"m.text"},"ts":1438708261000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"probably too easy to clear something from the list, though","msgtype":"m.text"},"ts":1438708283000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wait what? I need to read bugmail _and_ clear that list","msgtype":"m.text"},"ts":1438708324000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1438708326000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though, perhaps there is some pref","msgtype":"m.text"},"ts":1438708352000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1438708497000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I personally ignore that notifications page... but its kind of queue like","msgtype":"m.text"},"ts":1438708509000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hello, I was wondering why isn't there encoding spec for iso-8859-1 on whatwg.org?","msgtype":"m.text"},"ts":1438710206000,"senderName":"ajankovic","senderId":"ajankovic@irc"},
{"content":{"body":"you can assign github issues and see all issues assigned to you","msgtype":"m.text"},"ts":1438710286000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"again not quite the same","msgtype":"m.text"},"ts":1438710289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ajankovic: there is. It is an alias of windows-1252.","msgtype":"m.text"},"ts":1438710338000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I saw there is an alias for it but those two are not the same?","msgtype":"m.text"},"ts":1438710391000,"senderName":"ajankovic","senderId":"ajankovic@irc"},
{"content":{"body":"ajankovic: it turns out they are in shipping software","msgtype":"m.text"},"ts":1438710405000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(or there could be a bug in encoding spec, but this particular issue has the feel of something that's already been discussed a lot.)","msgtype":"m.text"},"ts":1438710462000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ajankovic: I think the way to show they are different would be to create a document, with <meta charset=\"windows-1252\">, containing one of the bytes in https://encoding.spec.whatwg.org/index-windows-1252.txt, and show that it is not displayed in browsers according to that table","msgtype":"m.text"},"ts":1438710643000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sorry, with <meta charset=\"iso-8859-1\">","msgtype":"m.text"},"ts":1438710666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks, I was led here by the issue in Go language implementation of character conversion which uses whatwg specs to generate character conversion tables, I guess whatwg is web centric and I need better precision than that for my project","msgtype":"m.text"},"ts":1438710935000,"senderName":"ajankovic","senderId":"ajankovic@irc"},
{"content":{"body":"ajankovic: well, interoperability with the web is the primary use case for a lot of encoding software. I would suggest interoping with the web if at all possible.","msgtype":"m.text"},"ts":1438711004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ajankovic: otherwise you will interpret one of those bytes differently than web browsers do, which is a recipe for lots of bugs being filed on your software :)","msgtype":"m.text"},"ts":1438711024000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I am dealing with character conversions for sms messages","msgtype":"m.text"},"ts":1438711151000,"senderName":"ajankovic","senderId":"ajankovic@irc"},
{"content":{"body":"ajankovic, I'm so sorry","msgtype":"m.text"},"ts":1438711485000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: thank you that was my first laugh today","msgtype":"m.text"},"ts":1438711568000,"senderName":"ajankovic","senderId":"ajankovic@irc"},
{"content":{"body":"ajankovic: And it will be your last too.","msgtype":"m.text"},"ts":1438711589000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sorry.","msgtype":"m.text"},"ts":1438711594000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes, all i can offer at this point are condolences.","msgtype":"m.text"},"ts":1438711613000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ajankovic, more seriously, the whatwg spec is not very likely to  be useful for you","msgtype":"m.text"},"ts":1438711653000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: you around by any chance?","msgtype":"m.text"},"ts":1438713848000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: a little","msgtype":"m.text"},"ts":1438716061000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I decided to write a fetch issue... I'll let annevk set me straight in the morning","msgtype":"m.text"},"ts":1438716090000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks, though","msgtype":"m.text"},"ts":1438716110000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: I don't really understand \"terms defined by this specification\". E.g. in https://domenic.github.io/streaming-mediastreams/#index-defined-here it says this spec defines \"stream\" which feels a bit ridiculous.","msgtype":"m.text"},"ts":1438716156000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It's an argument to a method.","msgtype":"m.text"},"ts":1438716189000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes. Which is why saying that the definition of \"stream\" is that argument is pretty silly.","msgtype":"m.text"},"ts":1438716205000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe only exported definitions should appear there?","msgtype":"m.text"},"ts":1438716228000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Arguments are exported. ^_^","msgtype":"m.text"},"ts":1438716238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"O__________o","msgtype":"m.text"},"ts":1438716245000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"can i turn that off","msgtype":"m.text"},"ts":1438716251000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Everything is exported by default except \"dfn\" type arguments.","msgtype":"m.text"},"ts":1438716264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why do you want to?","msgtype":"m.text"},"ts":1438716267000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"now anytime someone does <a>stream</a> in a Bikeshed spec they'll get this spec's method argument!?","msgtype":"m.text"},"ts":1438716279000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I want method arguments to be refactorable at will, not something people take dependencies on","msgtype":"m.text"},"ts":1438716300000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: I was thinking again about a fetch option that causes failure on !ok","msgtype":"m.text"},"ts":1438716302000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"method argument names, that is","msgtype":"m.text"},"ts":1438716308000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I got bitten by a server 500 getting cached","msgtype":"m.text"},"ts":1438716326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"No, it's pretty hard to reference an argument. Almost impossible to do accidentally.","msgtype":"m.text"},"ts":1438716329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You have to write either {{foo()/arg}} or {{arg!!argument}} (or the equivalents in longhand).","msgtype":"m.text"},"ts":1438716375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: yea... seems annoying... I imagine best practice might become to put a thing on the promise chain to turn bad status codes into a rejection","msgtype":"m.text"},"ts":1438716420000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"i would really rather them not be there ever. if they have to be then maybe nest them under the relevant constructor or method name? My index is clogged up with argument stuff I don't care about using up all the good terms.","msgtype":"m.text"},"ts":1438716455000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: *That* is something I can do.","msgtype":"m.text"},"ts":1438716479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Tho what do you mean by \"using up all the good terms\"?","msgtype":"m.text"},"ts":1438716486000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fwiw, here's my fetch issue: https://github.com/whatwg/fetch/issues/101","msgtype":"m.text"},"ts":1438716505000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I look at the list of terms defined and I think \"wow this spec defines stream, cool\"","msgtype":"m.text"},"ts":1438716523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll file an issue for nesting","msgtype":"m.text"},"ts":1438716529000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I've wanted to nest values underneath properties for a while; nesting arguments underneath their function should work the same.","msgtype":"m.text"},"ts":1438716554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I still think, given that argument names don't have any normative value, they should not be defined by specs","msgtype":"m.text"},"ts":1438716678000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, should not be listed as officially defined by specs","msgtype":"m.text"},"ts":1438716689000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I've had use-cases for referring to them; given that, they need to be an anchor.  But I agree that they probably shouldn't be exported by default.  (That won't remove them from the index.)  (Tho maybe it should.)","msgtype":"m.text"},"ts":1438716943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":) yes IMO it should","msgtype":"m.text"},"ts":1438716969000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That would mean that a lot of dfn-type definitions would stop showing up, tho maybe that would be a clue for people to export them.","msgtype":"m.text"},"ts":1438716993000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1438717140000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I pretty much only use <dfn>s right now when I should be exporting them a lot more","msgtype":"m.text"},"ts":1438717150000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I have different problems though with Web IDL vs. JS :-/","msgtype":"m.text"},"ts":1438717182000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why do we use <div class=\"note\"> instead of <aside class=\"note\"> in specs?","msgtype":"m.text"},"ts":1438723142000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: github uses tags for things like that","msgtype":"m.text"},"ts":1438727104000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"Domenic: Our markup standards are a carry-over from pre-html?","msgtype":"m.text"},"ts":1438727107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, pre html5","msgtype":"m.text"},"ts":1438727113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm kind of what i figured, but a bit sad.","msgtype":"m.text"},"ts":1438727128000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyone have opinions on me auto-formatting IDL blocks like https://github.com/tabatkins/bikeshed/issues/449 suggests?","msgtype":"m.text"},"ts":1438727265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm pretty sure the syntax highlighting is doable with a minimum of effort (all the structures already exist, I just need to tag them with classes and style them).","msgtype":"m.text"},"ts":1438727302000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I object to the alignment. The coloring seems fine though.","msgtype":"m.text"},"ts":1438728553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cvrebert, at 2015-08-02 06:51 UTC, MikeSmith said: no, the SVG reference is one thing that should not be updated.","msgtype":"m.text"},"ts":1438732196000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"Any w3C peeps able to look up who's a GitHub Collaborator on https://github.com/w3c/css-validator ?","msgtype":"m.text"},"ts":1438732502000,"senderName":"cvrebert","senderId":"cvrebert@irc"}
]