[
{"content":{"body":"annevk: yeah I will undo it manually","msgtype":"m.text"},"ts":1446691590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: so I think I undid it, and also disabled that account","msgtype":"m.text"},"ts":1446691886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checking bugzilla, it seems that was the only bug he/she changed","msgtype":"m.text"},"ts":1446691918000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hi, out of curiosity has there ever been a discussion on adding an insertAfter method similar to the insertBefore method to the native DOM API? so that we don't have to manually add the function described at http://stackoverflow.com/questions/4793604/how-to-do-insert-after-in-javascript-without-using-a-library if not using a library","msgtype":"m.text"},"ts":1446693096000,"senderName":"cluelesscoder","senderId":"cluelesscoder@irc"},
{"content":{"body":"I guess it's not necessary if you figure out the next sibling and insertBefore always","msgtype":"m.text"},"ts":1446693452000,"senderName":"cluelesscoder","senderId":"cluelesscoder@irc"},
{"content":{"body":"cluelesscoder: isn't that node.append()? https://dom.spec.whatwg.org/#dom-parentnode-append","msgtype":"m.text"},"ts":1446701338000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"cluelesscoder: miketaylr: or just after()","msgtype":"m.text"},"ts":1446708190000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"oh right, nice.","msgtype":"m.text"},"ts":1446708311000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"annevk: I don't really see a reason to change the title of Encoding...","msgtype":"m.text"},"ts":1446708743000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, it seems somewhat clear that all the other encodings are a bit secondary","msgtype":"m.text"},"ts":1446708850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I don't see a strong reason to change it, but I also don't really have a strong reason not to (other than consistency with other WHATWG specification names)","msgtype":"m.text"},"ts":1446708908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I mean sticking with what already works seems like the best position. No need to change references etc. Changing a title is fairly disruptive.","msgtype":"m.text"},"ts":1446709767000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's no actual evidence of confusion either this is just feedback from W3C AC Forum upon the PR transition for the fork.","msgtype":"m.text"},"ts":1446709799000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1446709995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To be fair, they did give feedback to us, not www-international","msgtype":"m.text"},"ts":1446710025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: thank you, closed https://github.com/whatwg/encoding/issues/11","msgtype":"m.text"},"ts":1446710998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"live webvtt viewer in firefox continually uses CPU which makes my laptop hot and noisy :-( don't know what's up with that","msgtype":"m.text"},"ts":1446713942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Link","msgtype":"m.text"},"ts":1446716292000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1446716293000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://zcorpan.github.io/live-webvtt-viewer/","msgtype":"m.text"},"ts":1446716662000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: ^ (sorry for delay)","msgtype":"m.text"},"ts":1446716958000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: np","msgtype":"m.text"},"ts":1446717056000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Just having it open doesn't seem to use cpu for me. Try the performance inspector in devtools? It's a little hard to figure out what it's on about, but you might see something obvious?","msgtype":"m.text"},"ts":1446717246000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hmmm. seems it happens when editing and then clicking \"save to address bar\", firefox paints a lot after that","msgtype":"m.text"},"ts":1446717404000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"putting a breakpoint in onhashchange suggests it only runs that once","msgtype":"m.text"},"ts":1446717589000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"File a bug?","msgtype":"m.text"},"ts":1446717787000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yep sure","msgtype":"m.text"},"ts":1446717796000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=1221942","msgtype":"m.text"},"ts":1446718898000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mkwst: pretty sure bifurcation and rlbmoz are the same","msgtype":"m.text"},"ts":1446719260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and I thought the idea was to just put it in Fetch directly","msgtype":"m.text"},"ts":1446719287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't want a separate normative document. I do want something I can point agl to, and I don't think he's going to be thrilled with a diff to a spec he's probably never read. :)","msgtype":"m.text"},"ts":1446720162000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: okay","msgtype":"m.text"},"ts":1446720216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: convincing agl seems worthwhile","msgtype":"m.text"},"ts":1446720231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought about it a bit on the flight back, and I think I'm convinced. I don't have any time to actually implement an experiment, which is a bit frustrating.","msgtype":"m.text"},"ts":1446720327000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"but I'll at least help Richard document it, and start some discussion with folks who care.","msgtype":"m.text"},"ts":1446720348000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"wonders what https://twitter.com/mad_p/status/662199914420563968 is about","msgtype":"m.emote"},"ts":1446720355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: we have someone who can implement in Q1","msgtype":"m.text"},"ts":1446720374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: Richard assured me he has the relevant powers to make things happen","msgtype":"m.text"},"ts":1446720405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Can Richard find someone to work on Chrome too? I'm buried. :)","msgtype":"m.text"},"ts":1446720460000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1446720467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so, https://github.com/whatwg/fetch/issues/39","msgtype":"m.text"},"ts":1446720549000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I want to know whether to kill the entire feature or whether some of it has merit","msgtype":"m.text"},"ts":1446720568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looking at it right now, but I have lost any and all context I might once have had. :)","msgtype":"m.text"},"ts":1446720573000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: a lot of the background is https://github.com/slightlyoff/ServiceWorker/issues/412","msgtype":"m.text"},"ts":1446720653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: starting from https://github.com/slightlyoff/ServiceWorker/issues/412#issuecomment-58646963","msgtype":"m.text"},"ts":1446720667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: in addition to that, we have the possibility of limiting to CORS / same-origin","msgtype":"m.text"},"ts":1446720822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(sifting through email to find the thread that led me to comment on the bug)","msgtype":"m.text"},"ts":1446721012000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: So, my main concern is with 'only-if-cached'. I think the others are probably fine.","msgtype":"m.text"},"ts":1446721249000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I don't think CORS helps, as CORS just means that the server gave permission to read the data. It doesn't give the reader permission to know that the data is there to be read.","msgtype":"m.text"},"ts":1446721294000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yeah, I guess only same-origin would help","msgtype":"m.text"},"ts":1446721314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Same-origin means that the reader has server logs to fall back on to determine that the user read the data already. Cross-origin loses that benifit.","msgtype":"m.text"},"ts":1446721318000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Running to a thing. Back in ~30m.","msgtype":"m.text"},"ts":1446721329000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: right, but at least if you restrict to same-origin you cannot use it as a supercookie","msgtype":"m.text"},"ts":1446721356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it seems force-cache has similar issues since force-cache plus a timer is effectively equivalent to only-if-cached","msgtype":"m.text"},"ts":1446721381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So yeah, I guess those two should be removed","msgtype":"m.text"},"ts":1446721565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And I guess I should also remove them from the model for now, I don't think any specification relies on them and I don't think we'd want any specification to rely on them","msgtype":"m.text"},"ts":1446721691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though if force-cache has that problem... So would first doing a request using mode \"default\" and then doing one with \"reload\" and timing the difference...","msgtype":"m.text"},"ts":1446722139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Once timing attacks are okay you can probe the cache pretty effectively, and probably more effectively due to these parameters existing","msgtype":"m.text"},"ts":1446722178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So perhaps restricting it to same-origin would still be best... As long as user agents clear that at the same rate as cookies we wouldn't expose anything new","msgtype":"m.text"},"ts":1446722231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^","msgtype":"m.text"},"ts":1446722261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good to me. In terms of what I've heard developers asking for, they're more interested in bypassing the cache than going cache-only","msgtype":"m.text"},"ts":1446722523000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's somewhat annoying that even offering that makes timing attacks easier","msgtype":"m.text"},"ts":1446722571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although cache-only would be nice for web fonts, to emulate font-display:optional","msgtype":"m.text"},"ts":1446722571000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: isn't this just as easy with ?blahblah on the end of the URL?","msgtype":"m.text"},"ts":1446722658000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: in practice it might be","msgtype":"m.text"},"ts":1446722685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not sure if that's sufficient to convince the security teams","msgtype":"m.text"},"ts":1446722702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: blink folks are asking if we've gotten a TAG review for notifications. I couldn't find one, so shall I go ahead and file one at https://github.com/w3ctag/spec-reviews/issues ?","msgtype":"m.text"},"ts":1446724940000,"senderName":"johnme","senderId":"johnme@irc"},
{"content":{"body":"johnme: sure","msgtype":"m.text"},"ts":1446724950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you have a strong preference document.URL, now's your chance: https://code.google.com/p/chromium/issues/detail?id=259920","msgtype":"m.text"},"ts":1446725374000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"My preference is Punycode since we use ASCII for the path too","msgtype":"m.text"},"ts":1446726086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Can I assume that you want https state to move to the document as well? (regarding https://github.com/whatwg/html/pull/273)?","msgtype":"m.text"},"ts":1446726245000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: yes","msgtype":"m.text"},"ts":1446726347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok. :(","msgtype":"m.text"},"ts":1446726359000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: again, I'm sorry","msgtype":"m.text"},"ts":1446726370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Naah. No big deal. It's bz's fault, really.","msgtype":"m.text"},"ts":1446726383000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1446726420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: can you explain why region id should be parser-internal only? i've heard feedback that it would be nice to be able to style different regions with css, which makes perfect sense to me","msgtype":"m.text"},"ts":1446726424000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I suspect this is fallout from Brendan Eich's document.write() debacle","msgtype":"m.text"},"ts":1446726436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: what do you think about my cache analysis above?","msgtype":"m.text"},"ts":1446726462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: and JakeA's remark?","msgtype":"m.text"},"ts":1446726468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm less concerned about timing attacks than I am about 100% reliable queries.","msgtype":"m.text"},"ts":1446726492000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So, yeah, I think your comments are accurate.","msgtype":"m.text"},"ts":1446726502000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"But I don't think they're fatal to force-cache.","msgtype":"m.text"},"ts":1446726520000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Okay, well, I'm happy to just remove the one problematic one and see what happens when someone tries to ship it","msgtype":"m.text"},"ts":1446726555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that's a reasonable approach.","msgtype":"m.text"},"ts":1446726566000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"zcorpan: can ::cue-region take an id?","msgtype":"m.text"},"ts":1446726995000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: not currently","msgtype":"m.text"},"ts":1446727016000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK, and there wasn't any other way to use the ID than to get the region at the time I was thinking about this.","msgtype":"m.text"},"ts":1446727038000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"In which case just associating them and removing the indirection from the API seemed nice","msgtype":"m.text"},"ts":1446727052000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1446727069000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I'm re-reading bz's comments on the CSP list bug again, and I don't think I understand what he wants. I've given you a patch that just moves the thing from Window to Document, but he's suggesting that we can avoid patching `document.open()` and etc.","msgtype":"m.text"},"ts":1446727179000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I don't see how to do that.","msgtype":"m.text"},"ts":1446727186000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: document.open() doesn't change the document, it only changes the global","msgtype":"m.text"},"ts":1446727632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: so you can avoid patching document.open() if you store stuff on the document","msgtype":"m.text"},"ts":1446727643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah, I see. Thanks.","msgtype":"m.text"},"ts":1446727680000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I think bz was just pointing out the various ways we could go about this and where he'd like to avoid adding complexity","msgtype":"m.text"},"ts":1446727709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: which to me read that he wanted this on document","msgtype":"m.text"},"ts":1446727721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup, which is fine. I'm happy to do it that way, I just want to give you a patch you'll accept rather than iterating for a few more days. :)","msgtype":"m.text"},"ts":1446727746000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I'll follow it up with a patch to move HTTPS state.","msgtype":"m.text"},"ts":1446728371000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: note that I left feedback in https://github.com/whatwg/html/pull/273","msgtype":"m.text"},"ts":1446733616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: not sure if you saw, given the follow up PRs","msgtype":"m.text"},"ts":1446733626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks for the ping. How do you stay on top of PRs? I imagine you have more notifications coming in than I do, but I find it hard to know what I ought to be looking at.","msgtype":"m.text"},"ts":1446733797000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: GitHub has randomly chosen to send me some updates to my work email, some to home email, some to chromium.org. I don't get it.","msgtype":"m.text"},"ts":1446733821000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'm not sure how, but this one I have as an open tab since you've been working on it today and I've been reviewing it today and I just got back from lunch...","msgtype":"m.text"},"ts":1446733859000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I only use the web UI for GitHub","msgtype":"m.text"},"ts":1446733889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no email","msgtype":"m.text"},"ts":1446733894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I try to use the web UI, but I feel like I'm missing things constantly. *shrug*","msgtype":"m.text"},"ts":1446733938000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Like, this PR doesn't show up in \"notifications\". Which makes no sense. I have to cli","msgtype":"m.text"},"ts":1446733966000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"That is sad","msgtype":"m.text"},"ts":1446733981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have to click through \"Pull Requests\", which is fine, I suppose, but I want one place to look at things I need to care about.","msgtype":"m.text"},"ts":1446733987000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"To be fair, when you push changes and don't add comments I don't think I get notified either","msgtype":"m.text"},"ts":1446734009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I try to go through outstanding PRs somewhat regularly since it's not nice to keep folks waiting","msgtype":"m.text"},"ts":1446734036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: about rel=noopener http://logs.glob.uno/?c=mozilla%23content&s=5+Nov+2015&e=5+Nov+2015#c338410","msgtype":"m.text"},"ts":1446734122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Wonderful. I guess I should hop back into #content.","msgtype":"m.text"},"ts":1446734267000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: rel=noopener is straightforward. How do you feel about the window.open pieces of Charlie's old proposal?","msgtype":"m.text"},"ts":1446734296000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"annevk: I guess I should just ask bz. :/","msgtype":"m.text"},"ts":1446734307000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: not sure about those","msgtype":"m.text"},"ts":1446734380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: we need to credit Scott Beardsley for rel=noopener https://lists.w3.org/Archives/Public/public-whatwg-archive/2015May/0046.html","msgtype":"m.text"},"ts":1446734395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: I suspect bz would be fine with such features if he was fine with this one","msgtype":"m.text"},"ts":1446734434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should pay attention to whatwg@. :/","msgtype":"m.text"},"ts":1446734472000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: refresh that earlier URL for more from bz","msgtype":"m.text"},"ts":1446734540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: discussing window.open() at the end","msgtype":"m.text"},"ts":1446734550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: you can also join the channel on Mozilla IRC of course","msgtype":"m.text"},"ts":1446734558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you have some idea when chrome will implement/ship https://github.com/whatwg/fetch/pull/146?","msgtype":"m.text"},"ts":1446734888000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: would be nice to align our changes if we can to minimize compat issues","msgtype":"m.text"},"ts":1446734904000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: Would you prefer `window.open` to change in the same PR as `rel=noopener`?","msgtype":"m.text"},"ts":1446738407000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: given https://github.com/whatwg/html/issues/313 does it need to change?","msgtype":"m.text"},"ts":1446739188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: if it's a separate feature, separate might be better, but I can't really see the changes in front of me so use your best judgment I guess","msgtype":"m.text"},"ts":1446739225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*shrug* It's pretty related. I'll send you a patch, you can tell me to split it up.","msgtype":"m.text"},"ts":1446739245000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"mkwst: I'm away for a couple hours starting now","msgtype":"m.text"},"ts":1446739288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: on leave today and can't reach github for some reason, will pick this up tomorrow","msgtype":"m.text"},"ts":1446739303000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yup. My day's pretty much over as well. No rush on the review.","msgtype":"m.text"},"ts":1446739312000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"@annevk does the fetch api allow one to intercept a 401?","msgtype":"m.text"},"ts":1446742169000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I don't seem to be able to do it, though I think the service worker does.","msgtype":"m.text"},"ts":1446742198000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: in theory, yes","msgtype":"m.text"},"ts":1446747072000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: if you set the window argument to null, iirc","msgtype":"m.text"},"ts":1446747085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: but this was all defined fairly recently so I'm not sure implementations caught up yet","msgtype":"m.text"},"ts":1446747101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, ok. will try that.","msgtype":"m.text"},"ts":1446747106000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I am noticing that I don't actually seem to get the preflight requests coming to my server.","msgtype":"m.text"},"ts":1446747132000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: there's no preflights same-origin","msgtype":"m.text"},"ts":1446747162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: fetch(..., { window:null } ) is it, but again, I doubt that's implemented","msgtype":"m.text"},"ts":1446747183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a request from localhost going to joe.example ( both on the same machine, but the domain names are different )","msgtype":"m.text"},"ts":1446747214000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"ok will try with {","msgtype":"m.text"},"ts":1446747285000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"      headers = { \"Accept\" = rdfMimeTypes },","msgtype":"m.text"},"ts":1446747286000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"      requestCache = RequestCache.reload,","msgtype":"m.text"},"ts":1446747286000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"      window = null","msgtype":"m.text"},"ts":1446747287000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1446747289000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"( that's scalajs )","msgtype":"m.text"},"ts":1446747297000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"what is mode = cors","msgtype":"m.text"},"ts":1446747321000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"for ?","msgtype":"m.text"},"ts":1446747325000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Reading cross-origin responses that implement the CORS protocol","msgtype":"m.text"},"ts":1446747343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"requestCache is not a thing...","msgtype":"m.text"},"ts":1446747364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure if scalajs is really the same as this API if that is a thing...","msgtype":"m.text"},"ts":1446747380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have just read through the fetch spec and tried to add the typesafety to your api","msgtype":"m.text"},"ts":1446747467000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"https://github.com/read-write-web/rww-scala-js/blob/2874afd344590aa1d147efe63eec2431ad8789c8/src/main/scala/org/scalajs/dom/experimental/Fetch.scala#L307","msgtype":"m.text"},"ts":1446747468000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"so that others developers won't have to keep hunting down typos","msgtype":"m.text"},"ts":1446747513000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"so { mode = cors } would allow me to intercept cors answers?","msgtype":"m.text"},"ts":1446747553000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: s/intercept/read/ yes","msgtype":"m.text"},"ts":1446747675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: and also s/answers/responses/","msgtype":"m.text"},"ts":1446747684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, nice. So that would allow me to avoid an extra connection for a 401 perhaps by authenticating immediately...","msgtype":"m.text"},"ts":1446747722000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"but why is window = null important? Or is it just meant to be called like that from the ServiceWorker ?","msgtype":"m.text"},"ts":1446747776000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"( My ServiceWorker seems to get the 401 )","msgtype":"m.text"},"ts":1446747810000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"\"any window; // can only be set to null\", is presumably why","msgtype":"m.text"},"ts":1446747849000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"bblfish: if you are invoking things from the service worker and not passing a request through you don't need window = null since it's the default there","msgtype":"m.text"},"ts":1446747852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: a service worker has no window","msgtype":"m.text"},"ts":1446747861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yep. Just wondering why it's important to have window = null if it is a JS in a window doing it.","msgtype":"m.text"},"ts":1446747894000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: when you use fetch() in a document environment (or when you pass a request through) it defaults to the window of that document and is the place to show dialogs in","msgtype":"m.text"},"ts":1446747898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: mostly because that's the default behavior","msgtype":"m.text"},"ts":1446747920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"If init's window member is present and it is not null, throw a TypeError.\" hah, i'm sure there's a good reason for this but it seems kind of wacky at the moment","msgtype":"m.text"},"ts":1446747924000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ah ok. Thought it might be a security thing","msgtype":"m.text"},"ts":1446747934000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"caitp: IDL doesn't allow accepting null as the sole value","msgtype":"m.text"},"ts":1446747959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: note that omitting the argument / passing undefined gives you a different behavior","msgtype":"m.text"},"ts":1446747974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, but having it be the sole acceptable value is just kind of weird","msgtype":"m.text"},"ts":1446747981000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: we may at some point decide to allow users to pass in different Windows, although it doesn't seem likely","msgtype":"m.text"},"ts":1446748001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: well, maybe from a service worker it is somewhat likely that you'd be able to pass in an existing ClientWindow or some such","msgtype":"m.text"},"ts":1446748032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dunno","msgtype":"m.text"},"ts":1446748040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well using the  48.0.2555.0 canary (64-bit) and it does not send an options","msgtype":"m.text"},"ts":1446748493000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"even though the host is different from the Referrer","msgtype":"m.text"},"ts":1446748516000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Firefox developer edition does not either","msgtype":"m.text"},"ts":1446748539000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"I wonder if this is an issue because both are running on localhost.","msgtype":"m.text"},"ts":1446748561000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"neither seem to give the expected result on window=null","msgtype":"m.text"},"ts":1446748682000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"but that may be me...","msgtype":"m.text"},"ts":1446748730000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"ok, so ServiceWorkers are a way out until window=null works reliably then I suppose.","msgtype":"m.text"},"ts":1446748812000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"@annevk should I file a bug about the browsers not sending a preflight on my setup? I'll try running my code on another machine first perhaps just to see if that makes the difference.","msgtype":"m.text"},"ts":1446748897000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: it depends, are you actually making a request that warrants a preflight?","msgtype":"m.text"},"ts":1446748971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the options request is sent depending on what is in the request, and where the request is going","msgtype":"m.text"},"ts":1446748972000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It's a GET","msgtype":"m.text"},"ts":1446748990000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: yeah and it seems you only use a safe header, Accept, so you won't trigger a preflight","msgtype":"m.text"},"ts":1446749012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah good.","msgtype":"m.text"},"ts":1446749027000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: try set a random header, e.g., bblfish: good times","msgtype":"m.text"},"ts":1446749033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: you'll get a preflight then","msgtype":"m.text"},"ts":1446749040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, well that's better. I was worried that all this may be extreemly costly in requests","msgtype":"m.text"},"ts":1446749068000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"if my code knew the server accepted a WWW-Authenticate for the GET, could I send that and not trigger a preflight?","msgtype":"m.text"},"ts":1446749102000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"mhh, the other way aroudn, client sends Authenticate:  (I think, was just about to write that code )","msgtype":"m.text"},"ts":1446749133000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"\"Authorization\"","msgtype":"m.text"},"ts":1446749198000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: that requires a preflight","msgtype":"m.text"},"ts":1446749378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: https://fetch.spec.whatwg.org/#simple-header is the safelist","msgtype":"m.text"},"ts":1446749402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also depends on the origin you're sending from/talking to, and if it's the same request being sent multiple times, the preflight can be cached","msgtype":"m.text"},"ts":1446749455000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if you're testing on local host, it could be that it's not really a corss origin request?","msgtype":"m.text"},"ts":1446749487000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I keep shifting shift-cmd and deleting everything on each reload.","msgtype":"m.text"},"ts":1446749648000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"ah yes, this time mozilla sent the preflight.","msgtype":"m.text"},"ts":1446749914000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Yep I get an error in chrome \"Fetch API cannot load https://joe.example:8443/2013/card. Request header field authorization is not allowed by Access-Control-Allow-Headers in preflight response.\"","msgtype":"m.text"},"ts":1446750125000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"there you go","msgtype":"m.text"},"ts":1446750183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, so I see why ServiceWorkers can be useful here: they can caputre the 401 and authorize.","msgtype":"m.text"},"ts":1446750241000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"it's just a pitty that they require the whole application to be reloaded.","msgtype":"m.text"},"ts":1446750282000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"it would be nice if all the constants such as modes and all those I have collected in https://github.com/read-write-web/rww-scala-js/blob/2874afd344590aa1d147efe63eec2431ad8789c8/src/main/scala/org/scalajs/dom/experimental/Fetch.scala#L307","msgtype":"m.text"},"ts":1446750336000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"were documented as to their meaning in the fetch spec.","msgtype":"m.text"},"ts":1446750349000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"otherwise, thanks for the help. I can try implementing Signature authentication with web crypto now.","msgtype":"m.text"},"ts":1446750403000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"will only be able to run my app in bleeding edge browsers in the end though, but well...","msgtype":"m.text"},"ts":1446750498000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Hello","msgtype":"m.text"},"ts":1446751897000,"senderName":"axisv","senderId":"axisv@irc"}
]