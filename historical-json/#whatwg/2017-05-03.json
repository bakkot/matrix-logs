[
{"content":{"body":"jyasskin: can you elaborate?","msgtype":"m.text"},"ts":1493770937000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"browser changes its Accept header\" means the service worker manipulates Accept?","msgtype":"m.text"},"ts":1493770954000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: When a page requests an image, say, it sets an Accept header of `image/png,image/svg+xml`. The SW uses cache.get(request) to cache it, and the server returns a Vary:Accept header. Then, a later browser version updates its Accept header to `image/webp,image/png,image/svg+xml`, and https://w3c.github.io/ServiceWorker/#query-cache-algorithm skips","msgtype":"m.text"},"ts":1493788618000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"the cache entry in the \"For each f in varyHeaders\" loop.","msgtype":"m.text"},"ts":1493788619000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I'm not sure if there's a way to get there for entries that are cached in the 'install' step, without explicitly setting the Accept header.","msgtype":"m.text"},"ts":1493788673000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"s/cache.get/cache.add/","msgtype":"m.text"},"ts":1493788708000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"annevk: checking just in case: Was it a deliberate decision to go with Blink and Presto (and presumably WebKit; can someone check?) and not with IE/Edge and Gecko for bogus Shift_JIS byte sequences? https://hsivonen.com/test/moz/bogus_shift_jis.htm","msgtype":"m.text"},"ts":1493795974000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Indeed Edge still has the alleged IE6 behavior. I didn't bother testing with IE6, because my https setup is XP-incompatible and I no longer have a plain-http place for test cases. (Oops.)","msgtype":"m.text"},"ts":1493796116000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes, that was deliberate","msgtype":"m.text"},"ts":1493796277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK.","msgtype":"m.text"},"ts":1493796286000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I can dig up a bug number if you want","msgtype":"m.text"},"ts":1493796288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Encoding used to define the Gecko/IE behavior","msgtype":"m.text"},"ts":1493796299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'd be curious to see if emk commented on the bug","msgtype":"m.text"},"ts":1493796323000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hmm, change was made in https://github.com/whatwg/encoding/commit/651f672ee988702da03f56ad8bdfda00b51a21ea","msgtype":"m.text"},"ts":1493796359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Going to require some more digging to find corresponding discussion","msgtype":"m.text"},"ts":1493796373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=747762 was after-the-fact discussion","msgtype":"m.text"},"ts":1493796522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. commented there.","msgtype":"m.text"},"ts":1493796945000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I can't find the original discussion, but it seems emk agreed in part and later I added EUDC handling back","msgtype":"m.text"},"ts":1493796971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: adding that back happened in https://www.w3.org/Bugs/Public/show_bug.cgi?id=24130","msgtype":"m.text"},"ts":1493797030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I take it that since emk filed a counter-bug only for point #3, points #1 and #2 were indeed ok enough","msgtype":"m.text"},"ts":1493797097000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"This is probably the riskiest change in behavior arising from encoding_rs so far","msgtype":"m.text"},"ts":1493797368000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I tried searching a bit more, but I can't find anything that lead to the original removal of the quirks","msgtype":"m.text"},"ts":1493797686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe it was based on something at Opera","msgtype":"m.text"},"ts":1493797855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do remember Opera's encoding engineer not liking PUA so much","msgtype":"m.text"},"ts":1493797881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: thanks for commenting on that issue","msgtype":"m.text"},"ts":1493797897000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I wonder what Peter's up to now","msgtype":"m.text"},"ts":1493797910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: np.","msgtype":"m.text"},"ts":1493797976000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I take it that CYRILLIC SMALL LETTER SHORT U has taken the place of a box drawing character in koi8-u after Web Platform Tests were made","msgtype":"m.text"},"ts":1493797985000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rather unusual to have to edit a Web Platform Test for this stuff instead of just deleting the failure expectations :-)","msgtype":"m.text"},"ts":1493798013000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: almost time for https://i.imgur.com/7drHiqrh.jpg?","msgtype":"m.text"},"ts":1493798131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: unfortunately, we need some kind of meme for \"No\" arising from key Rust features being nightly-only","msgtype":"m.text"},"ts":1493798792000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So how do I go about making new DOMMatrix(\"matrix(1,0,0,1,0,0)\") throw in workers? annevk Domenic","msgtype":"m.text"},"ts":1493801345000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"check if current global object is not the primary global interface?","msgtype":"m.text"},"ts":1493801374000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \"If current global object is not a Window object and init is a string, then throw a TypeError.\"","msgtype":"m.text"},"ts":1493801413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1493801425000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Out of curiosity, why is this forbidden?","msgtype":"m.text"},"ts":1493801432000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/w3c/fxtf-drafts/issues/122","msgtype":"m.text"},"ts":1493801631000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Fun.","msgtype":"m.text"},"ts":1493801710000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: Will constructors forever be specified by extended attributes btw?","msgtype":"m.text"},"ts":1493801724000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan: You need prose only because extended attributes can't themselves have extended attributes, right?","msgtype":"m.text"},"ts":1493801742000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, webidl doesn't support this case with syntax","msgtype":"m.text"},"ts":1493801787000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Are there plans to make constructors not rely on extended attributes anymore?","msgtype":"m.text"},"ts":1493801809000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just curious because in Servo I would like to be able to mark some of them as non-throwing, and I can't do that currently.","msgtype":"m.text"},"ts":1493801830000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there has been talk about more or less radically changing webidl sytnax, but not much progress on that lately. i guess there's a big cost to doing that","msgtype":"m.text"},"ts":1493801891000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ok, thanks.","msgtype":"m.text"},"ts":1493801926000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: \"Key Rust features?\"","msgtype":"m.text"},"ts":1493801948000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that sounds like something you should file an issue for against IDL","msgtype":"m.text"},"ts":1493801998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Why?","msgtype":"m.text"},"ts":1493802011000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I hadn't considered the argument that since constructor is an extended attribute we can't have nice things","msgtype":"m.text"},"ts":1493802020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: IDL has no notion of whether things throw or not.","msgtype":"m.text"},"ts":1493802023000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: others might not have either","msgtype":"m.text"},"ts":1493802026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1493802031000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Will do then","msgtype":"m.text"},"ts":1493802034000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: IDL should maybe have a notion about throwing at some point I think, it's nice to be able to assert things like that","msgtype":"m.text"},"ts":1493802061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Did we ever consider having [Abstract] too btw?","msgtype":"m.text"},"ts":1493802082000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"E.g. on Node, which doesn't exist on its own.","msgtype":"m.text"},"ts":1493802092000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: probably worth filing an issue for if there are use cases, even if just codegen use cases","msgtype":"m.text"},"ts":1493802120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1493802137000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I don't recall a discussion myself, just with you here","msgtype":"m.text"},"ts":1493802138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I'll do some filing today,","msgtype":"m.text"},"ts":1493802145000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"when grid-template-areas parsing make me too miserable. :P","msgtype":"m.text"},"ts":1493802157000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No small feat for a parser to do that given you worked on one for HTML","msgtype":"m.text"},"ts":1493802213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah ah, true.","msgtype":"m.text"},"ts":1493802286000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Just complaining because I was having fun and short compile times in Servo's network code, until I got abducted by stylo's team.","msgtype":"m.text"},"ts":1493802317000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Where is the last discussion on whether <link> should work like a hyperlink? https://github.com/whatwg/html/issues/2617","msgtype":"m.text"},"ts":1493805550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: SIMD","msgtype":"m.text"},"ts":1493805894000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: so encoding_rs cannot ride the trains because it relies on Rust SIMD?","msgtype":"m.text"},"ts":1493805948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not unless we change policy, no","msgtype":"m.text"},"ts":1493805971000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: where did we decide on this policy? Searching for Rust SIMD yields very few emails","msgtype":"m.text"},"ts":1493806021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I intend to propose a policy change, but I want to have concrete numbers when I do so)","msgtype":"m.text"},"ts":1493806027000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: the relevant policy is that Firefox uses release-channel rustc","msgtype":"m.text"},"ts":1493806053000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I don't recall if it was a publicly-recorded discussion","msgtype":"m.text"},"ts":1493806079000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh, SIMD is relatively new to Rust new?","msgtype":"m.text"},"ts":1493806095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Peter at http://www.bridgetech.tv/ still maybe","msgtype":"m.text"},"ts":1493806134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: no, but the person who was developing it left to Google and then the feature got limboed. The person working on it now isn't doing it as a day job.","msgtype":"m.text"},"ts":1493806147000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: yeah I think so","msgtype":"m.text"},"ts":1493806149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guess he hasn’t worked on encoding-related stuff in a long time and probably doesn’t miss it :)","msgtype":"m.text"},"ts":1493806203000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TIL Palantir contributes to Rust","msgtype":"m.text"},"ts":1493806249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: I'm -1 on requiring nightly.","msgtype":"m.text"},"ts":1493806266000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"We should instead push harder for simd stabilisation.","msgtype":"m.text"},"ts":1493806279000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: he was a big Unicode fan, but maybe","msgtype":"m.text"},"ts":1493806283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: And serde too.","msgtype":"m.text"},"ts":1493806287000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"being a Unicode fan doesn't imply that on misses encodings. esp. ones other than UTF-8 :-)","msgtype":"m.text"},"ts":1493806357000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: I wish Mozilla would hire him to make a Rust version of ICU","msgtype":"m.text"},"ts":1493806391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Do you mean that the simd crate original author left for Google?","msgtype":"m.text"},"ts":1493806422000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that's my understanding. Have I understood incorrectly_","msgtype":"m.text"},"ts":1493806440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"AFAIK you can leave for Google and still have a FOSS life, if you mean huonw he was appled away.","msgtype":"m.text"},"ts":1493806456000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I was mistaken, then.","msgtype":"m.text"},"ts":1493806475000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Just a big corp away. :)","msgtype":"m.text"},"ts":1493806490000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: What's the relation between encoding_rs and whatwg btw?","msgtype":"m.text"},"ts":1493806555000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: encoding_rs implements a WHATWG spec and the developer of encoding_rs has a GitHub badge when commenting on WHATWG specs.","msgtype":"m.text"},"ts":1493806606000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ah ah ok.","msgtype":"m.text"},"ts":1493806628000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Was just curious why you people were discussing about it here.","msgtype":"m.text"},"ts":1493806644000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hsivonen: Any clue what's the status for simd in Rust currently? I stopped following this discussion a while ago.","msgtype":"m.text"},"ts":1493806665000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: my understanding is that there was enough agreement for BurntSushi to start implementing what was discussed, and he is working on it alone","msgtype":"m.text"},"ts":1493806712000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1493806760000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: the discussion was here, because I asked about the spec not having a particular pair of IE/Gecko quirks","msgtype":"m.text"},"ts":1493806766000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Quirks, always missing quirks.","msgtype":"m.text"},"ts":1493806788000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"what does \"non-conforming\" mean in the HTML spec?","msgtype":"m.text"},"ts":1493813166000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"KiChjang: it generally means a document-conformance requirement","msgtype":"m.text"},"ts":1493813404000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what does it mean for a document to conform?","msgtype":"m.text"},"ts":1493813431000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"it means the document does not violate any requirements in the spec","msgtype":"m.text"},"ts":1493813562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the document-conformance requirements are stated in order to prevent documents from using certain markup cases that have unintended bad effects","msgtype":"m.text"},"ts":1493813621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"see https://validator.w3.org/nu/about.html#why-validate for a short version","msgtype":"m.text"},"ts":1493813650000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"see https://html.spec.whatwg.org/multipage/introduction.html#syntax-errors for a longer explanation","msgtype":"m.text"},"ts":1493813739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and https://html.spec.whatwg.org/multipage/introduction.html#restrictions-on-content-models-and-on-attribute-values for yet more details","msgtype":"m.text"},"ts":1493813743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the shortest answer is:","msgtype":"m.text"},"ts":1493813874000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> There are some markup cases defined as errors because they are potential problems for accessibility, usability, interoperability, security, or maintainability—or because they can result in poor performance, or that might cause your scripts to fail in ways that are hard to troubleshoot.","msgtype":"m.text"},"ts":1493813876000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Along with those, some markup cases are defined as errors because they can cause you to run into potential problems in HTML parsing and error-handling behavior—so that, say, you’d end up with some unintuitive, unexpected result in the DOM.","msgtype":"m.text"},"ts":1493813893000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: you closed https://github.com/whatwg/html/issues/2443 but as far as I can tell the specification doesn't do case-insensitive matching","msgtype":"m.text"},"ts":1493815322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I'm reworking the choosing a browsing context algorithm and it seems to just do string comparison","msgtype":"m.text"},"ts":1493815345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/multipage/browsers.html#valid-browsing-context-name-or-keyword allows case-insensitive. I guess I didn't look closely at \"The rules for choosing a browsing context given a browsing context name\"","msgtype":"m.text"},"ts":1493815577000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Okay, I'm going to reopen that issue and address it in my patch then","msgtype":"m.text"},"ts":1493815643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds good. thanks!","msgtype":"m.text"},"ts":1493815714000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jyasskin: yea, I guess the service worker script would have to be smart enough to re-cache in that case","msgtype":"m.text"},"ts":1493817678000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Whoa, rewriting those rules took long","msgtype":"m.text"},"ts":1493820022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm just being curious but,","msgtype":"m.text"},"ts":1493828782000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: any clue was grid-template-areas uses strings instead of separating each row by `/` or something?","msgtype":"m.text"},"ts":1493828799000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"s/was/why/","msgtype":"m.text"},"ts":1493828803000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Largely a historical artifact.","msgtype":"m.text"},"ts":1493828888000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Curiosity satisfied, thanks.","msgtype":"m.text"},"ts":1493829076000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"JakeA: our plan to do a different useCache setting for importScripts... is that easily applied to dependent module records?  or will module workers still only check the top level script?","msgtype":"m.text"},"ts":1493829131000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Does the HTML standard address what happens to focus when the user agent looses focus?","msgtype":"m.text"},"ts":1493829260000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Trying to mitigate password skimming using motion sensors. Turns out that some browsers still consider you're focused in the top-level browsing context when you're actually typing your 1password code. :(","msgtype":"m.text"},"ts":1493829470000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"visibility state doesn't seem to help here either (page is still visible).","msgtype":"m.text"},"ts":1493829575000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Is there something else I should be looking at?","msgtype":"m.text"},"ts":1493829585000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: IntersectionObserver?","msgtype":"m.text"},"ts":1493829609000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or maybe that doesn't help either","msgtype":"m.text"},"ts":1493829636000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that tells you whether an element is in the viewport or not, right?","msgtype":"m.text"},"ts":1493829692000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yea, I got confused about your use case","msgtype":"m.text"},"ts":1493829703000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I assumed visibility state was good enough, but it's not. :(","msgtype":"m.text"},"ts":1493829740000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: sorry, I think I'm a little tired","msgtype":"m.text"},"ts":1493829821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: are there no <script type=module> web-platform-tests atm?","msgtype":"m.text"},"ts":1493830152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's a decent amount, from an initial Microsoft import. There are some bugs we're discovering, both in the tests and the spec; we are trying to upstream as we implement in Chrome.","msgtype":"m.text"},"ts":1493830187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: interesting, I'll note that in https://bugzilla.mozilla.org/show_bug.cgi?id=1330900 as it seems our implementation didn't trigger any change in results","msgtype":"m.text"},"ts":1493830229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: from https://bugzilla.mozilla.org/show_bug.cgi?id=1330900#c5 it seems like they are not being run because modules are preffed off?","msgtype":"m.text"},"ts":1493830265000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"blames being tired","msgtype":"m.emote"},"ts":1493830304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: well, we can flip prefs when running WPT tests","msgtype":"m.text"},"ts":1493830322000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"although I don't see that bug doing it","msgtype":"m.text"},"ts":1493830351000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Get some sleep annevk :). Sorry for my late-shifted schedule these days.","msgtype":"m.text"},"ts":1493830418000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: I'm having trouble bending my brain round your message… sorry if this doesn't answer your question: I expect module script static imports to behave like importScripts in regards to cache usage & byte checking","msgtype":"m.text"},"ts":1493831099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ok... I just didn't know how easy that was to do with the module spec, etc... I noticed there are different paths in SW spec for classic vs module","msgtype":"m.text"},"ts":1493831148000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Yeah, it's going to take some work with the html spec I think. https://github.com/w3c/ServiceWorker/issues/908 is kinda related","msgtype":"m.text"},"ts":1493831223000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah, ok","msgtype":"m.text"},"ts":1493831239000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm, since pages seem to misuse Promises, somehow thinking that they are asynchronous, I wonder if there was some way to start to paint between microtasks","msgtype":"m.text"},"ts":1493843037000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that would be quite evil, sure","msgtype":"m.text"},"ts":1493843046000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I'm surprised to see that https://w3c.github.io/mediacapture-main/#overconstrainederror-object is defining a new Error subclass instead of a DOMException. Should other specs consider doing that too?","msgtype":"m.text"},"ts":1493848149000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: no. The issue is they need more information fields than just name/message, apparently.","msgtype":"m.text"},"ts":1493848234000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We'd like to make that easier in IDL (e.g. `exception Foo : DOMException { ... }` or something) but haven't so far.","msgtype":"m.text"},"ts":1493848251000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, I see.","msgtype":"m.text"},"ts":1493848272000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]