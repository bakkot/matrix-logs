[
{"content":{"body":"\"Anne's behavior is quite similar to crismannoble's but crismannoble is more of a whiner.\"","msgtype":"m.text"},"ts":1369096948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Anne is an awesome Javascripter who loves pushing code. Anne is an early-week worker who seems to work best in the wee hours.\"","msgtype":"m.text"},"ts":1369096962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Listen up TC39!","msgtype":"m.text"},"ts":1369096970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, you high?","msgtype":"m.text"},"ts":1369097654000,"senderName":"sgalineau","senderId":"sgalineau@irc"},
{"content":{"body":"Heh, just playing with http://osrc.dfm.io/","msgtype":"m.text"},"ts":1369098144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, my IRC bouncer gets confused sometimes about whether it should append an \"|away\"","msgtype":"m.text"},"ts":1369098295000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins, there is no such functionality in Web IDL yet","msgtype":"m.text"},"ts":1369098304000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: So if I want to use a Map for CSSStyleRule#vars, what should I do?","msgtype":"m.text"},"ts":1369098335000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, do you want this Map to dynamically reflect the variable declarations, and to affect the declarations when you set properties on it?","msgtype":"m.text"},"ts":1369098412000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1369098419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, then I think you don't want a Map, since you can't \"watch\" the map for changes","msgtype":"m.text"},"ts":1369098455000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Well, apparently I don't want a naked getter/setter object either","msgtype":"m.text"},"ts":1369098481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, oh, why not?","msgtype":"m.text"},"ts":1369098490000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk can explain better, but I think it's because just using an \"object map\" is subject to trickiness with things defined on the prototype chain, including Object.prototype.","msgtype":"m.text"},"ts":1369098523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Someone can add Object.prototype.foo and it'll show up on el.style.vars.foo, even though there's no var-foo rule.","msgtype":"m.text"},"ts":1369098545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: basically what we did for dataset is disliked by TC39","msgtype":"m.text"},"ts":1369098587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, I'm not sure there is a better solution currently","msgtype":"m.text"},"ts":1369098603000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"The better solution is to magic up a Map.","msgtype":"m.text"},"ts":1369098612000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: a Map does not have the .vars.x functionality","msgtype":"m.text"},"ts":1369098632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Also, using a Map probably is better in general, because you interoperate with the rest of the collection API stuff.)","msgtype":"m.text"},"ts":1369098634000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Map just has get() and set() methods, right?","msgtype":"m.text"},"ts":1369098641000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: it only has .vars.get(\"x\")","msgtype":"m.text"},"ts":1369098643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Right, but .vars.get('x') wouldn't kill me.","msgtype":"m.text"},"ts":1369098646000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in that case just create your own Map like URLQuery does","msgtype":"m.text"},"ts":1369098667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the problem is that Map is being thought of as an interface that you want to use for vars, but ES6's Map is a concrete class","msgtype":"m.text"},"ts":1369098673000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: you need to do that anyway since you need the serialization stuff to happen","msgtype":"m.text"},"ts":1369098680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and a class that doesn't allow watching it for changes","msgtype":"m.text"},"ts":1369098685000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: whereas Map is just in/out","msgtype":"m.text"},"ts":1369098687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: But I want it to be a Map for the purpose of working with the iterable functions, getting the rest of the Map extras, etc.","msgtype":"m.text"},"ts":1369098730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"URLQuery can't quite do that yet, because MultiMap doesn't exist.","msgtype":"m.text"},"ts":1369098742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I assume it's planned to do that.","msgtype":"m.text"},"ts":1369098750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I guess, if MultiMap ever exists :)","msgtype":"m.text"},"ts":1369098761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and if that matches)","msgtype":"m.text"},"ts":1369098770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this sounds very similar to the problem of Arrays","msgtype":"m.text"},"ts":1369098774000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ah, it will.  And I think we did a good job with it.","msgtype":"m.text"},"ts":1369098779000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: It's identical to that problem.","msgtype":"m.text"},"ts":1369098783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's no Array interface that we can use for things like NodeList","msgtype":"m.text"},"ts":1369098785000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: yeah, I guess you want [MapClass] or some such","msgtype":"m.text"},"ts":1369098787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup yup.","msgtype":"m.text"},"ts":1369098792000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it would be great if there were native ES6 functionality for Array-likes, Map-likes, ...","msgtype":"m.text"},"ts":1369098805000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: or map CSSVariables { ... }","msgtype":"m.text"},"ts":1369098816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sure, but I'd like there to be a blessed way of doing similar things in plain JS","msgtype":"m.text"},"ts":1369098839000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"annevk, so that it's obvious what an IDL map should correspond to","msgtype":"m.text"},"ts":1369098848000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: There is, at least for Maps.","msgtype":"m.text"},"ts":1369098851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, oh yes?","msgtype":"m.text"},"ts":1369098855000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"In teh constructor, run Map.call(this)","msgtype":"m.text"},"ts":1369098858000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: I thought you could put Array on the prototype chain?","msgtype":"m.text"},"ts":1369098863000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You'll get a mapdata set up, etc.","msgtype":"m.text"},"ts":1369098866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And also put Map on the prototype chain to get the methods.","msgtype":"m.text"},"ts":1369098878000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, you can, but I don't think that's going to get you the \"platform object wants to monitor the object for changes\" functionality","msgtype":"m.text"},"ts":1369098880000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: We can just define our own methods, which do some work and then defer to Map.prototype.add or whatever.","msgtype":"m.text"},"ts":1369098913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: you'll have to implement the methods yourself, always, I think, it's just that you want to share the methods","msgtype":"m.text"},"ts":1369098918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: share the extra methods :)","msgtype":"m.text"},"ts":1369098933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ok, but also prevent Map.prototype.set from working","msgtype":"m.text"},"ts":1369098937000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ah right, yes.","msgtype":"m.text"},"ts":1369098945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1369098946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, you can't even defer to Map.prototype.get, since your mapdata is magically populated.","msgtype":"m.text"},"ts":1369098959000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think you want to wrap a Map object that is hidden from the outside","msgtype":"m.text"},"ts":1369098965000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and that wrapper object has the same-feeling interface to a Map","msgtype":"m.text"},"ts":1369098974000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"But this really shouldn't be a hard spec problem, any more than saying that the properties on an object are magically populated, like you can do today.","msgtype":"m.text"},"ts":1369098982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but forwards to the Map object inside it, as well as doing whatever other dynamic things it wants","msgtype":"m.text"},"ts":1369098988000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: And, ideally, is detectably a Map using the standard testing methods.","msgtype":"m.text"},"ts":1369099003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, we need to get it right :-)","msgtype":"m.text"},"ts":1369099006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, that might be a problem","msgtype":"m.text"},"ts":1369099014000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins: once we know what's right, specifying it is not really a problem","msgtype":"m.text"},"ts":1369099021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you want to identify it has implementing this Map-like interface, but not being a Map object itself","msgtype":"m.text"},"ts":1369099030000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"because it's not one of these concrete Map objects really","msgtype":"m.text"},"ts":1369099054000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"goes to read the ES spec around Maps real quick.","msgtype":"m.emote"},"ts":1369099055000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If I'm right, the ideal way is to just define that the mapdata is magical, populated by something per-spec, and mutations to it have some spec effect as well.","msgtype":"m.text"},"ts":1369099106000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and the default Map object behaviour that ES has just has no other spec effect?","msgtype":"m.text"},"ts":1369099232000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1369099240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sounds reasonable on first read","msgtype":"m.text"},"ts":1369099254000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"The spec for .get() just grabs from the [[MapData]] internal property.  We can hook this; the normal Map constructor initializes it to empty, but we could just define that it's instead filled with something specific.","msgtype":"m.text"},"ts":1369099467000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The spec for .set() appends tuples to [[MapData]], but that could be generalized or overridden to allow a hook for specs.","msgtype":"m.text"},"ts":1369099494000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, so it would be nice if there were a plain JS way of doing this hooking. otherwise I can imagine complaints that we shouldn't be doing more messing with internal [[Properties]] like this","msgtype":"m.text"},"ts":1369099509000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Everything else is defined in terms of get/set or just reading from [[MapData]] directly.","msgtype":"m.text"},"ts":1369099515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: Certainly.  I'll bug es-discuss.","msgtype":"m.text"},"ts":1369099528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1369099535000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wonders if Arrays could be specced similarly","msgtype":"m.emote"},"ts":1369099548000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: Bugging done.  Comment if you'd like.","msgtype":"m.text"},"ts":1369102324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Man, this comment syntax in VTT is annoying.","msgtype":"m.text"},"ts":1369114184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, the parser not having conformance requirements is annoying.","msgtype":"m.text"},"ts":1369114211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: shouldn't \"reconsume the current input token\" be called \"unconsume the current input token\"","msgtype":"m.text"},"ts":1369120630000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wonder what is happening to public-webapps: http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0762.html","msgtype":"m.text"},"ts":1369128228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not April 1...","msgtype":"m.text"},"ts":1369128237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: heh, I had to respond to that","msgtype":"m.text"},"ts":1369128491000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Hixie: fail https://www.w3.org/Bugs/Public/show_bug.cgi?id=22106","msgtype":"m.text"},"ts":1369132628000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sooo... anyone looked at the Web Audio API? The \"Required Support for Alternate Names\" seems like an epic f'up. https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AlternateNames","msgtype":"m.text"},"ts":1369136454000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"there is a lot of badness in that spec","msgtype":"m.text"},"ts":1369136635000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Well if they got past the whole \"the spec is the WebKit implementation\" thing, that's a win at least","msgtype":"m.text"},"ts":1369136690000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: but the spec doesn't even match WebKit","msgtype":"m.text"},"ts":1369139127000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: there's a bunch of Mozilla guys on that already","msgtype":"m.text"},"ts":1369143090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"marcosc: long and short of it is that Google managed to get some crappy API shipped on iPhone via Apple so now we're stuck with it...","msgtype":"m.text"},"ts":1369143139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is there actually a web api that has worked out OK?","msgtype":"m.text"},"ts":1369143197000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: yeah, but why not then stick with the old names","msgtype":"m.text"},"ts":1369143198000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1369143201000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"why have two names for things","msgtype":"m.text"},"ts":1369143206000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"it's confusing","msgtype":"m.text"},"ts":1369143210000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"It seems like every single one we have decided was horrible just after it shipped","msgtype":"m.text"},"ts":1369143220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"they have noteOn() and start(), and they don't even work as the spec says","msgtype":"m.text"},"ts":1369143228000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"jgraham: are TextEncoder and TextDecoder bad?","msgtype":"m.text"},"ts":1369143232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Dunno, does anyone ship them?","msgtype":"m.text"},"ts":1369143247000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: think so","msgtype":"m.text"},"ts":1369143252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"marcosc: because the old names suck and methods are cheap?","msgtype":"m.text"},"ts":1369143271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"cheap\" lest anyone thinks we should boil the ocean","msgtype":"m.text"},"ts":1369143306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: don't we usually realise they're horrible and then ship them anyway?","msgtype":"m.text"},"ts":1369143815000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Did someone mention webrtc?","msgtype":"m.text"},"ts":1369143886000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)..... :(","msgtype":"m.text"},"ts":1369143898000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"that's beyond horrible","msgtype":"m.text"},"ts":1369143902000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Well there's usually a race between realising they're horrible and shipping them","msgtype":"m.text"},"ts":1369143930000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But somehow never between fixing them and shipping them","msgtype":"m.text"},"ts":1369143948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok, so lesson here is not to bother fixing","msgtype":"m.text"},"ts":1369143974000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"\"jQuery will fix it\" :D","msgtype":"m.text"},"ts":1369143989000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"The W3C - jQuery will fix it (TM)","msgtype":"m.text"},"ts":1369144012000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1369144016000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I like it","msgtype":"m.text"},"ts":1369144017000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"fires marcosc ","msgtype":"m.emote"},"ts":1369144050000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You can't fire me! I quit!","msgtype":"m.text"},"ts":1369144099000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1369144102000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"marcosc: To paraphrase mpilgrim, I think the moral of the story is that it’s time for us to find a new hobby. Preferably one that doesn’t involve angle brackets. Or computers. Or electricity.","msgtype":"m.text"},"ts":1369144113000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that would be nice","msgtype":"m.text"},"ts":1369144299000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"hsivonen: I am being asked if CC-BY addresses all the use cases in http://www.w3.org/2011/03/html-license-options.html#usecases, do you know if that happens to be the case?","msgtype":"m.text"},"ts":1369149199000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hsivonen: I think it's the case, but I'm wondering if it's something you've checked","msgtype":"m.text"},"ts":1369149332000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin - it's something I've checked, and in general it does, with the only possible source of conflicts has to do with *GPL open source where the \"BY\" requirement is unable to be passed on. But in practice *GPL open source projects seem to get around this somehow.","msgtype":"m.text"},"ts":1369151179000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"theoretically CC0 is best for this reason - it cleanly satisfies all the use cases","msgtype":"m.text"},"ts":1369151194000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that being said, CC-BY is an excellent step forward here, and I think one that everyone who needs those use-cases will be able to work with.","msgtype":"m.text"},"ts":1369151236000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the \"BY\" clause seems to make it a \"less scary\" option to some W3C folks, so if that's what it takes, to take a big step toward open licensing, I think it is worth it.","msgtype":"m.text"},"ts":1369151279000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: thanks, that's what I thought","msgtype":"m.text"},"ts":1369152119000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin - hence why I'm ok supporting the CC-BY experiment for HTML5 extension specifications in the HTMLWG charter","msgtype":"m.text"},"ts":1369152148000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"note that for the code-related parts I think that in general they should fall under the W3C Software License irrespective of whether they appear in the body of the spec or not","msgtype":"m.text"},"ts":1369152149000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin - that's an interesting exception clause. Perhaps we can similarly say that code-related parts in anything CC-BY we publish are subject themselves to CC0.","msgtype":"m.text"},"ts":1369152180000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"any code examples, any algorithms","msgtype":"m.text"},"ts":1369152196000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"that could probably be done without much of a problem assuming CC-BY is accepted","msgtype":"m.text"},"ts":1369152208000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"that would address the \"only possible source of conflicts\" case I noted above","msgtype":"m.text"},"ts":1369152218000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1369152222000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I've asked team-legal about the current situation regarding the Software License as it's not at all clear from the current copyright document","msgtype":"m.text"},"ts":1369152249000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Does the HTML parser count as a code part?","msgtype":"m.text"},"ts":1369152274000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I doubt any interpretation would agree, but it certainly has crossed my mind :)","msgtype":"m.text"},"ts":1369152307000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: I just copied the naming from HTML's parser. ^_^","msgtype":"m.text"},"ts":1369154395000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1369154605000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"alert(\"hello world\")","msgtype":"m.text"},"ts":1369155828000,"senderName":"testtest","senderId":"testtest@irc"},
{"content":{"body":"Hello world","msgtype":"m.emote"},"ts":1369155971000,"senderName":"window","senderId":"window@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1369156008000,"senderName":"testtest","senderId":"testtest@irc"},
{"content":{"body":"annevk, where art thou?","msgtype":"m.text"},"ts":1369157120000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"miketaylr: i am sure you were referring to anne in your tweet","msgtype":"m.text"},"ts":1369157303000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"goes to see what Mike is tweeting about","msgtype":"m.emote"},"ts":1369157333000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: https://twitter.com/miketaylr/status/336894563497160704","msgtype":"m.text"},"ts":1369157360000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"hallvors: ALSO HAI LONG TIME NO SEE","msgtype":"m.text"},"ts":1369157365000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"nimbu: you can't prove that!","msgtype":"m.text"},"ts":1369157379000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"nimbu: thanks :-D although I'm seeing you on Twitter all the time so it's more a case of \"long see no time\"!","msgtype":"m.text"},"ts":1369157417000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ahahah","msgtype":"m.text"},"ts":1369157432000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1369157447000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Sounds more like gsnedders","msgtype":"m.text"},"ts":1369157506000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but 15 YO","msgtype":"m.text"},"ts":1369157520000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"on xhmlt2","msgtype":"m.text"},"ts":1369157528000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Could be Hixie except for the 15 part :)","msgtype":"m.text"},"ts":1369157529000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1369157536000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"miketaylr: put all of us out of our misery by revealing the redacted","msgtype":"m.text"},"ts":1369157553000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"http://ln.hixie.ch/?start=1042630901&count=1","msgtype":"m.text"},"ts":1369157557000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"interesting exercise to come up with a list of all the people in the world who were digging XHTML at 15","msgtype":"m.text"},"ts":1369157575000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ahahaha omg","msgtype":"m.text"},"ts":1369157575000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"has plenty of misery but doubts that knowing who miketaylr was talking about will reduce it much","msgtype":"m.emote"},"ts":1369157597000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"OH: \"Updated Candidate Recommendation of XPath and XQuery Functions and Operators 3.0\"","msgtype":"m.text"},"ts":1369157617000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i want to tweet this","msgtype":"m.text"},"ts":1369157637000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"hixie's view of xhmlt2","msgtype":"m.text"},"ts":1369157644000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"good old times :)","msgtype":"m.text"},"ts":1369157663000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"lol structurally sound <l>ine element","msgtype":"m.text"},"ts":1369157664000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"It does sound like satire now","msgtype":"m.text"},"ts":1369157672000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I believe he was serious when he wrote it","msgtype":"m.text"},"ts":1369157683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"didn't write XHTML until it was out of fashion","msgtype":"m.emote"},"ts":1369157688000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"\"I've gone over two years now without using it. I know this, because I set about, two years ago, to see if I could find a use case for the style attribute, and I never found one. \"","msgtype":"m.text"},"ts":1369157692000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"omg all gold here.","msgtype":"m.text"},"ts":1369157695000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"ahahah","msgtype":"m.text"},"ts":1369157697000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Kind of puts paid to the idea that he can't change his mind","msgtype":"m.text"},"ts":1369157705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, Hixie still thinks that about the style attribute","msgtype":"m.text"},"ts":1369157742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i would agree if he thinks so about css","msgtype":"m.text"},"ts":1369157758000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"That there isn't a use case for it?","msgtype":"m.text"},"ts":1369157777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1369157784000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*if*","msgtype":"m.text"},"ts":1369157787000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well no I think he still believes exactly what he wrote there","msgtype":"m.text"},"ts":1369157802000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That it is always possible to work without an inline style attribute","msgtype":"m.text"},"ts":1369157820000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or at least, to the extent it isn't, that represents deficiencies in CSS","msgtype":"m.text"},"ts":1369157847000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not that I can find the mail right now","msgtype":"m.text"},"ts":1369157960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ha.","msgtype":"m.text"},"ts":1369157972000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"Hixie prefers people who have class to people who have only style. Who would disagree with that?","msgtype":"m.text"},"ts":1369157994000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"I remember the time he only allowed style=\"\" on font elements","msgtype":"m.text"},"ts":1369158004000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"that's a fontastic idea","msgtype":"m.text"},"ts":1369158032000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ahahahahahhaha hallvors","msgtype":"m.text"},"ts":1369158052000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"cringes","msgtype":"m.emote"},"ts":1369158058000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"O DEAR LORD Ms2ger","msgtype":"m.text"},"ts":1369158064000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1369158065000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"is apparently too tired to stop making stupid jokes","msgtype":"m.emote"},"ts":1369158094000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"it is a great joake hallvors","msgtype":"m.text"},"ts":1369158132000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"I'll licence the word fontastic to you any day Divya ;)","msgtype":"m.text"},"ts":1369158164000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"immediately using this license hallvors THNX","msgtype":"m.text"},"ts":1369158183000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"marcosc: i've whined about it (web audio), but seemingly without success. please bring it up on the list (asking for the new names to be removed)","msgtype":"m.text"},"ts":1369160096000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I will","msgtype":"m.text"},"ts":1369160141000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"I'm putting together a demo","msgtype":"m.text"},"ts":1369160146000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1369160146000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"to show that it's borked","msgtype":"m.text"},"ts":1369160154000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"... but I literally just bought Dead Space and Dead Space 2 for EU10 on Steam... so I'm gonna go play! :D","msgtype":"m.text"},"ts":1369160212000,"senderName":"marcosc","senderId":"marcosc@irc"},
{"content":{"body":"Wonder if Hixie is at Google I/O or something.","msgtype":"m.text"},"ts":1369164789000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"#googleio was last week","msgtype":"m.text"},"ts":1369165093000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I believe Hixie is away for a few days","msgtype":"m.text"},"ts":1369165202000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or s/days/weeks/ perhaps","msgtype":"m.text"},"ts":1369165215000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Monthish","msgtype":"m.text"},"ts":1369165257000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Which is \"a few weeks\", more or less :p","msgtype":"m.text"},"ts":1369165334000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(days was a misleadingly small unit)","msgtype":"m.text"},"ts":1369165367000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yuhong: he's on (or at least was on) vacation","msgtype":"m.text"},"ts":1369165427000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I wanted to mention that the crash in http://ln.hixie.ch/?start=1115899732&count=1","msgtype":"m.text"},"ts":1369165517000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Was later rediscovered in http://blogs.norman.com/2011/security-research/drag-and-drop-vulnerability-in-ms11-050 and it turned out to be a exploitable crash fixed in MS11-050.","msgtype":"m.text"},"ts":1369165560000,"senderName":"Yuhong","senderId":"Yuhong@irc"}
]