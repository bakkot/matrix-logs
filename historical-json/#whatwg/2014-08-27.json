[
{"content":{"body":"annevk: ideas on how to procede for https://www.w3.org/Bugs/Public/show_bug.cgi?id=12230 ?","msgtype":"m.text"},"ts":1409097837000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"regarding progressive images, is there a user agent that downloads only the first scan of a progressive JPEG when bandwith is contrained?","msgtype":"m.text"},"ts":1409101734000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"the second time the FF DA it could stop downloading stuff. but then that implies range requests.","msgtype":"m.text"},"ts":1409101773000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"well, if the connection is ultra slow it could RST","msgtype":"m.text"},"ts":1409101801000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"i already experimented with creating thumbnails that way","msgtype":"m.text"},"ts":1409101839000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"IZE_TARGET=$(od -t x1 <\"$1\" |grep 'ff da' |head -n2 |tail -n1 |cut -d' ' -f1)","msgtype":"m.text"},"ts":1409101840000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"head -c\"$SIZE_TARGET\" <\"$1\"","msgtype":"m.text"},"ts":1409101847000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"env printf '\\xff\\xd9' # add End Of Image (EOI) JPEG marker","msgtype":"m.text"},"ts":1409101853000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"works quite well!","msgtype":"m.text"},"ts":1409101865000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"http://kaioa.com/k/test/choppy/index.html","msgtype":"m.text"},"ts":1409102438000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie: related to https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/07v_yMErc_A from abarth (against the intent to implement for the table sortint API), I wonder if in the future we'll continue the policy of dropping a feature if  multiple vendors declinine to natively implement it","msgtype":"m.text"},"ts":1409108141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: If we want web-components libraries to have something standard to implement and expose, we'd still need a spec that defines the standard behavior","msgtype":"m.text"},"ts":1409108212000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why would web components libraries care about a standard, they'd have no reason to be interoperable with each other","msgtype":"m.text"},"ts":1409108351000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the linked sortable-table component is certainly not compliant with the standard, it's just another cute javascript library, which is yet another piece of third party code that application developers don't want to use and probably won't","msgtype":"m.text"},"ts":1409108434000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"standards make sense for interop, but when interop doesn't matter, there isn't much point","msgtype":"m.text"},"ts":1409108477000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: the other reason for having the standard is to have sane behavior that's has some discussion and some level of agreement behind it","msgtype":"m.text"},"ts":1409108821000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/the other/one other/","msgtype":"m.text"},"ts":1409108841000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and to ensure interoperability for the case where some UAs do implement it natively","msgtype":"m.text"},"ts":1409108888000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so devs can code against the same API","msgtype":"m.text"},"ts":1409108897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure, that makes sense when some vendors take the plunge and implement","msgtype":"m.text"},"ts":1409109022000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but if nobody does, then all the discussion in the world doesn't matter, because what ends up happening is people just hack stuff together using the tools that they know","msgtype":"m.text"},"ts":1409109053000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there will be common patterns of behaviour, but there won't be concensus","msgtype":"m.text"},"ts":1409109060000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"they won't be interchangeable","msgtype":"m.text"},"ts":1409109070000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and that's the status quo, we already have that","msgtype":"m.text"},"ts":1409109095000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"what we don't have is an environment where I can write a rich application without relying on scripting","msgtype":"m.text"},"ts":1409109130000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Life! Seriously, I just want to code.","msgtype":"m.text"},"ts":1409111753000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well, Mozilla would probably be more open to implementing experimental features like that, I mean they've already got support for microdata and I can't think of any other implementations","msgtype":"m.text"},"ts":1409112110000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"or any apps that really need it","msgtype":"m.text"},"ts":1409112125000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: do you have an opinion on how far along the table sort polyfill should be before I throw it on GitHub?","msgtype":"m.text"},"ts":1409112179000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don't think it really matters, there's no reason you can't just put up a bikeshed and start getting people to look at it and see what's missing/broken/wrong","msgtype":"m.text"},"ts":1409112231000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"good point, but if it’s about getting attention, should i wait till tomorrow 9 PST?","msgtype":"m.text"},"ts":1409112285000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I dunno, planning on tweeting it or something?","msgtype":"m.text"},"ts":1409112375000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"If tweeting means interested devs, opinions, etc.","msgtype":"m.text"},"ts":1409112430000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Devs bring action. Action brings features.","msgtype":"m.text"},"ts":1409112843000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: what is correct behavior here per spec? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3134","msgtype":"m.text"},"ts":1409115672000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"from memory, i'd expect it to nuke the document, then alert \"foo\"","msgtype":"m.text"},"ts":1409115733000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hm actually","msgtype":"m.text"},"ts":1409115760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"step 15 says to create a new Window object","msgtype":"m.text"},"ts":1409115766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so maybe not","msgtype":"m.text"},"ts":1409115768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nuke the document and alert \"undefined\"?","msgtype":"m.text"},"ts":1409115783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"didn't that come up last week? we determined blink was doing the wrong thing and gecko was doing it right","msgtype":"m.text"},"ts":1409116032000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, I came to that conclusion","msgtype":"m.text"},"ts":1409116055000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Sorry if I’m late to the party, but does http://lists.w3.org/Archives/Public/www-validator/2014Aug/0026.html mean we could automate document validation? I’m guessing this has been possible for a long time and I was just not privy to it.","msgtype":"m.text"},"ts":1409119518000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hixie: yeah it's not clear to me if creating a new Window means the old variables go away, but i guess they should","msgtype":"m.text"},"ts":1409120080000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Hixie: see https://miketaylr.com/posts/2014/08/document-writing-zeptos.html","msgtype":"m.text"},"ts":1409120116000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Creating a new Window doesn't make the variables *go away*, they're still there on the old Window. Throwing out the old Window, on the other hand ...","msgtype":"m.text"},"ts":1409120307000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"SamB__: can you get back to the old window? or keep a kungfu deathgrip of it somehow?","msgtype":"m.text"},"ts":1409120410000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3134","msgtype":"m.text"},"ts":1409120505000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"%3C%21DOCTYPE%20html%3E%0A%3Cscript%3E%0Avar%20x%20%3D%20%27foo%27%3B%0Aonload%20%3D%20function%28%29%20%7B%0Adocument%2Ewrite%28%27%3Cscript%3Ealert%28window%2Ex%29%3C%5C%2Fscript%3E%27%29%3B%0A%7D%0A%3C%2Fscript%3E%","msgtype":"m.text"},"ts":1409120505000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"there's no way from JS to ever actually hold a reference to a Window","msgtype":"m.text"},"ts":1409120587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can only ever hold a WindowProxy","msgtype":"m.text"},"ts":1409120592000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1409120682000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"how do I know there's a window at all?","msgtype":"m.text"},"ts":1409120698000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"(maybe you meant to say \"another window\"?)","msgtype":"m.text"},"ts":1409120748000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"Hixie: the Chromium team doesn’t seem to think native table sorting is a good idea :( https://groups.google.com/a/chromium.org/d/topic/blink-dev/07v_yMErc_A/discussion","msgtype":"m.text"},"ts":1409120816000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"can't you just use SQL for that","msgtype":"m.text"},"ts":1409120839000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"it was a long-shot to get support for that because the status quo has been good enough for so long, so nobody is really surprised that it got rejected, but it's understandably disappointing for people","msgtype":"m.text"},"ts":1409121259000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"x is still in scope after document.write() has returned though","msgtype":"m.text"},"ts":1409121432000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"yeah, if code is still running for a given Window, that Window is still alive: it's the frickin global scope!","msgtype":"m.text"},"ts":1409121553000,"senderName":"SamB__","senderId":"SamB__@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3135","msgtype":"m.text"},"ts":1409121722000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"JonathanNeal: yeah this is first time I've done a public announcement about the vnu.jar file being available, but I've been working on it for a while and made it available previously but just without announcing it","msgtype":"m.text"},"ts":1409123438000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JonathanNeal: Jörn Zaefferer's been providing https://github.com/jzaefferer/grunt-html for a while, which uses that jar file","msgtype":"m.text"},"ts":1409123587000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JonathanNeal: I think a big part of the reason I initially created the file is that Jorn wanted something to use for automating testing of HTML files for JQuery UI testing","msgtype":"m.text"},"ts":1409123733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"stop everything -- a bug reporter says, \"I have now invested quite a lot effort into this bug, time has come for you to act\"","msgtype":"m.text"},"ts":1409123863000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"adds that to w3c bugzilla quips","msgtype":"m.emote"},"ts":1409123950000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"acts","msgtype":"m.emote"},"ts":1409124179000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"-> RESO WONTFIX","msgtype":"m.text"},"ts":1409124183000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: which bug?","msgtype":"m.text"},"ts":1409124464000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25376","msgtype":"m.text"},"ts":1409125014000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: whoa! it looks like CORS breaks the rule that ED is newer than TR!","msgtype":"m.text"},"ts":1409126872000,"senderName":"hsivonen_","senderId":"hsivonen_@irc"},
{"content":{"body":"hsivonen, the ED is at http://fetch.spec.whatwg.org/ ;)","msgtype":"m.text"},"ts":1409126924000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: oh.","msgtype":"m.text"},"ts":1409126986000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: have the CORS bits changed since TR?","msgtype":"m.text"},"ts":1409126994000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"No idea","msgtype":"m.text"},"ts":1409127000000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: sorry, I didn't see your message yesterday","msgtype":"m.text"},"ts":1409127822000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'm not entirely sure what I want, I filed another bug where I thought I figured out the underlying problem, but even then I'm not sure","msgtype":"m.text"},"ts":1409127846000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"wanderview: filed a ticket to allow ServiceWorker over http on localhost https://bugzilla.mozilla.org/show_bug.cgi?id=1059174","msgtype":"m.text"},"ts":1409132814000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Is Firefox going to make fetch available on window.fetch?","msgtype":"m.text"},"ts":1409133394000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think annevk might be out today","msgtype":"m.text"},"ts":1409149271000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ahh ok, no worries","msgtype":"m.text"},"ts":1409149291000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we can ask nsm when the US west coast wakes up","msgtype":"m.text"},"ts":1409149310000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: does this pref work for allowing http?  dom.workers.serviceWorkers.testing.enabled","msgtype":"m.text"},"ts":1409149858000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we also have this:  https://bugzilla.mozilla.org/show_bug.cgi?id=1003991","msgtype":"m.text"},"ts":1409149870000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: worried that a developer may enable that for testing but forget to unset it, leaving their browser less secure. Same with the devtools-open thing, not sure the browser should be less secure because devtools are open. A flag with comma separated origins (or similar) would work","msgtype":"m.text"},"ts":1409150029000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: in Chrome, we're going to allow serviceworkers on localhost by default, but a way to whitelist particular domains would be useful too","msgtype":"m.text"},"ts":1409150080000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, the dom.workers.serviceWorkers.testing.enabled pref is not something to recommend in general and should eventually go away","msgtype":"m.text"},"ts":1409150100000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohh, does that exist currently?","msgtype":"m.text"},"ts":1409150118000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it does I think","msgtype":"m.text"},"ts":1409150128000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think the localhost approach has merit... I left both bugs open... we can do one or both... I'll ask nsm what he thinks","msgtype":"m.text"},"ts":1409150189000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"cool!","msgtype":"m.text"},"ts":1409150224000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it doesn't show in about:config, but I think you can add it there","msgtype":"m.text"},"ts":1409150248000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"gotcha, cheers","msgtype":"m.text"},"ts":1409150325000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: It's dom.serviceWorkers.testing.enabled - and it works. Cheers!","msgtype":"m.text"},"ts":1409150625000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"great!","msgtype":"m.text"},"ts":1409150652000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wow, https://www.w3.org/Bugs/Public/show_bug.cgi?id=25376 he is saying just plain false things in his last comment","msgtype":"m.text"},"ts":1409153036000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well they seem to have made up their mind about it, anyway","msgtype":"m.text"},"ts":1409153596000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"JakeA: I have some answers to some of your questions...","msgtype":"m.text"},"ts":1409153671000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we are going to fix console.log() to work on SharedWorker/ServiceWorker before  Sep 30, but possibly not before your demo... this will probably broadcast to same-origin devtools web console for now... full worker support in devtools is in progress, but will take longer","msgtype":"m.text"},"ts":1409153732000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we do plan to expose window.fetch()","msgtype":"m.text"},"ts":1409153755000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we also plan to support http SW on localhost, although it might not be available till after Sep 30","msgtype":"m.text"},"ts":1409153808000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hope that helps!","msgtype":"m.text"},"ts":1409153813000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: at least the part where he says \"I'm at the end of my wisdom now\" seems like it might be non-false","msgtype":"m.text"},"ts":1409154357000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: Cool! I'm giving the talk later in the year too, so I'll update it as things progress","msgtype":"m.text"},"ts":1409154357000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that's cool, cheers!","msgtype":"m.text"},"ts":1409154358000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Something up with irc.w3.org?","msgtype":"m.text"},"ts":1409157669000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And with that, it's back","msgtype":"m.text"},"ts":1409157686000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What is the origin of the bizarrely verbose x-www-form-urlencode?  Is Ian Hickson to blame?","msgtype":"m.text"},"ts":1409163568000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"And what's with the decade+ of the x- prefix","msgtype":"m.text"},"ts":1409163579000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"Probably IETF","msgtype":"m.text"},"ts":1409163609000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Late-90s: \"What content type should we use for our beta product?\" \"We haven't issued an RFC yet, so you should call it x-something until you're ready to document it\" (one week later) \"we have an install base of 250 million and can't break compatibility\" \"d'oh\"","msgtype":"m.text"},"ts":1409163960000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Seems like an inherent, natural, and built-in problem of the x- prefix","msgtype":"m.text"},"ts":1409164173000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"I mean, what's the problem with dropping it and supporting the x- prefix for legacy compatability","msgtype":"m.text"},"ts":1409164219000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"For what benefit? Agreed that 'x-' now has no meaning, but it's harmless and supporting two variants is more work for what benefit?","msgtype":"m.text"},"ts":1409164264000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I don't know, clarity, semantic importance, accordance with specification","msgtype":"m.text"},"ts":1409164310000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"\"more work\" is a pretty odd defense","msgtype":"m.text"},"ts":1409164335000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"more work for whom?","msgtype":"m.text"},"ts":1409164368000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"Presumably, every web server vendor needs to add support for both. Then after some period of time browser vendors could consider no longer sending the x-, at the risk of breaking some web sites.","msgtype":"m.text"},"ts":1409164503000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1409164633000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"Yeah, so you are proposing changing every server in the world in order to drop two characters from an opaque string","msgtype":"m.text"},"ts":1409164653000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The cost/benefit there is terrible","msgtype":"m.text"},"ts":1409164672000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even if it wasn't there's simply no way to make it happen","msgtype":"m.text"},"ts":1409164689000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lol, you people are mad. Are you finding it an unreasonable burdeon to impart on web server vendors to \"add support\" to specification? It's the entirety of their service","msgtype":"m.text"},"ts":1409164706000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"Even things that have high cost and relatively little usage are almost impossible to change","msgtype":"m.text"},"ts":1409164726000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"e.g. we have been unsuccessful at dropping attribute nodes and so far seem unsuccessful at dropping mutation events","msgtype":"m.text"},"ts":1409164754000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sample: We have literally no way of imparting burdens on web server vendors","msgtype":"m.text"},"ts":1409164859000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Even if we did, this wouldn't solve that problem","msgtype":"m.text"},"ts":1409164870000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lots of individual applications will have code that specifically looks at MIME types","msgtype":"m.text"},"ts":1409164896000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Changing those individual applications is straight up impossible","msgtype":"m.text"},"ts":1409164931000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure user agents should have catered to that either","msgtype":"m.text"},"ts":1409164971000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"In IDB, you can do index.openCursor(range), but if that index is build of multiple properties, as in entryStore.createIndex(name, ['a', 'b']), what is 'range' acting on?","msgtype":"m.text"},"ts":1409165049000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but at least that argument holds some weight compared to \"but it would be more work\"","msgtype":"m.text"},"ts":1409165052000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"built*","msgtype":"m.text"},"ts":1409165061000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: The index keys","msgtype":"m.text"},"ts":1409165087000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"the \"change ever server in the world\" argument is nearly equally ridiculous though","msgtype":"m.text"},"ts":1409165104000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"JakeA: Want a more clarifying example?","msgtype":"m.text"},"ts":1409165109000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Sample: so when do browser vendors get to stop sending the 'x-' ?","msgtype":"m.text"},"ts":1409165131000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"whenever they choose to. probably not for a long time. but developers can make the decision when they reasonably expect to talk to modern webservers. in the exact same manner they make the decision not to cater to IE8","msgtype":"m.text"},"ts":1409165184000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"jsbell: I understand that if entryStore.createIndex(name, 'name'), then index.openCursor(IDBKeyRange.only('george')) gets me the entries where the 'name' property equals 'george'. But what if it's entryStore.createIndex(name, ['name', 'age'])? What does index.openCursor(IDBKeyRange.only('george')) do now?","msgtype":"m.text"},"ts":1409165244000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jsbell: And what if I wanted to get the entries with name 'george' and age 30","msgtype":"m.text"},"ts":1409165285000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jakeA: Since you didn't specify multiEntry, the keys in the index will be arrays e.g. ['alice', 30], ['bob', 40]","msgtype":"m.text"},"ts":1409165288000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"JakeA: So you'd need to do e.g. index.openCursor(IDBKeyRange.only(['alice', 30]))","msgtype":"m.text"},"ts":1409165318000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Aha!","msgtype":"m.text"},"ts":1409165330000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: or index.openCursor(IDBKeyRange.lowerBound(['alice'])) to start getting all the alice records, and manually stop when you run out.","msgtype":"m.text"},"ts":1409165361000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"if it would enter a specification there could at least be progress. it's as if the argument is entirely about \"bad enough\".  x-IllIlIIlIllllI would be \"too bad\" but \"x-web-world-form-encodeuricomponent\" may not be. what about not playing \"bad enough\"","msgtype":"m.text"},"ts":1409165384000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"jsbell: multiEntry fails if it's a compound key, right?","msgtype":"m.text"},"ts":1409165414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jakeA: Or compute a range of \"first alice\" through \"last possible alice\" which is slightly nontrivial, see https://gist.github.com/inexorabletash/5462871","msgtype":"m.text"},"ts":1409165414000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"its funny that the original argument is \"too much work for servers\", with no consideration to the PEOPLE (developers) who need to know and account for standards. where is the \"too much work\" exactly","msgtype":"m.text"},"ts":1409165447000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"JakeA: right, or you'd get an index entry for 'alice' and another index entry for 30, which is kinda weird. That said, https://www.w3.org/Bugs/Public/show_bug.cgi?id=21836","msgtype":"m.text"},"ts":1409165564000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: excellent, thanks!","msgtype":"m.text"},"ts":1409165623000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: happy to help","msgtype":"m.text"},"ts":1409165673000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: it'd be great to do a deep dive article on IDB in the nature of http://www.html5rocks.com/en/tutorials/es6/promises/ - I might give that a ago towards the end of the year, prepare for big questions","msgtype":"m.text"},"ts":1409165780000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'd love to help, let me know if it materializes.","msgtype":"m.text"},"ts":1409165853000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: comparing your string prefix code with https://github.com/dfahlander/Dexie.js/blob/b0cbae793de7177491ba9f6e0854673c27279168/src/Dexie.js#L1449 - Dexie's seems simpler, any idea how it works?","msgtype":"m.text"},"ts":1409165993000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'm pedantic and handle numbers, dates and arrays, not just strings. Also...","msgtype":"m.text"},"ts":1409166029000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I mean just the string bit","msgtype":"m.text"},"ts":1409166040000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: presumably it fails on strings that actually end with U+FFFF, let me squint at it a bit...","msgtype":"m.text"},"ts":1409166136000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Glad it's not painfully obvious","msgtype":"m.text"},"ts":1409166157000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: any thought on my final statement regarding supporting a more sane and less legacy mime type or is your defense impenetrable?","msgtype":"m.text"},"ts":1409166243000,"senderName":"Sample","senderId":"Sample@irc"},
{"content":{"body":"JakeA: yeah, so if 'abc' were your prefix, that'd compute a range of 'abc' ... 'abc\\uFFFF' which would exclude 'abc\\uFFFF\\uFFFF'","msgtype":"m.text"},"ts":1409166337000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: that's good enough for me in this case, cheers!","msgtype":"m.text"},"ts":1409166567000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: can we get a .keys() on http://fetch.spec.whatwg.org/#headers?","msgtype":"m.text"},"ts":1409167933000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The chrome impl has forEch currently","msgtype":"m.text"},"ts":1409168133000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think he wanted something about es6 iterators to be available","msgtype":"m.text"},"ts":1409168171000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I didn't quite follow what he wanted","msgtype":"m.text"},"ts":1409168185000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, worried that's coming too late","msgtype":"m.text"},"ts":1409168186000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":".keys() seems reasonable to me... although you can't observe the absolute ordering of the headers with it","msgtype":"m.text"},"ts":1409168241000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1409168269000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"only an issue with multiple headers of the same name","msgtype":"m.text"},"ts":1409168294000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea... I only mention it because the spec says we have to maintain the absolute ordering... but then has no way to observe it","msgtype":"m.text"},"ts":1409168315000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The ES6ism would probably be: let keys = []; for (let header of headers) keys.push(header[0]);","msgtype":"m.text"},"ts":1409168379000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ah, so duplicate keys in the array","msgtype":"m.text"},"ts":1409168411000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I suppose you could get the right order then","msgtype":"m.text"},"ts":1409168426000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"although that is weird given you can't get at the per-key value","msgtype":"m.text"},"ts":1409168428000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409168433000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you'd be getAll(key)[blah]","msgtype":"m.text"},"ts":1409168465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"es6 iterators will fix that","msgtype":"m.text"},"ts":1409168493000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1409168498000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Map.prototype.entries() would be the thing to copy to get key/value pairs","msgtype":"m.text"},"ts":1409168506000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"--> food","msgtype":"m.text"},"ts":1409168524000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Ideally that interface should have keys()/values()/entries()/forEach()/[Symbol.iterator]()","msgtype":"m.text"},"ts":1409168563000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think annevk wanted some IDL thing that will automatically implement those","msgtype":"m.text"},"ts":1409168574000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Probably the way forward would be to prod him for exactly what he wants and then have someone do the WebIDL pull request","msgtype":"m.text"},"ts":1409168619000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but be careful exposing stuff without a solid spec because e.g. if you made keys() return an array that would be unlike all other ES6 things","msgtype":"m.text"},"ts":1409168655000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(which just expose a custom iterator)","msgtype":"m.text"},"ts":1409168658000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"forEach for example needs to conform to the forEach((key, value, headers) => {}, thisArg) signature","msgtype":"m.text"},"ts":1409168703000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess the Cache/CacheStorage keys() are already non-standard as they return a Promise<sequence<>>","msgtype":"m.text"},"ts":1409168732000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409168751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that is where ES7-timeframe async iterators would come in","msgtype":"m.text"},"ts":1409168776000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh right, I remembered why I came to this tab","msgtype":"m.text"},"ts":1409168808000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wanted to complain about how the ARIA spec is a big mix of \"maybe authors will be expected to do this if they have a good reason\"","msgtype":"m.text"},"ts":1409168833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"and authors are expected to have valid reason to provide a WAI-ARIA role even on elements that would not normally be repurposed\" :-S","msgtype":"m.text"},"ts":1409168864000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: is there a reason why e.g. myHR.getAttribute(\"role\") is null insteadof \"separator\"? That is, lots of elements have implicit (or \"strong native\") ARIA roles, but we don't reflect them in their DOM attributes","msgtype":"m.text"},"ts":1409169322000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, OK, maybe it's because of the fact that strong native ARIA things are supposed to be non-overridable","msgtype":"m.text"},"ts":1409169345000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and the default implicit ARIA things need to be the default if you remove the attribute","msgtype":"m.text"},"ts":1409169360000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: nevermind! I think it makes sense now.","msgtype":"m.text"},"ts":1409169370000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yup, I want that","msgtype":"m.text"},"ts":1409169740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what kind of text do you envision writing. i.e. how much work do spec-writers have to do.","msgtype":"m.text"},"ts":1409169807000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's a bug for that :p","msgtype":"m.text"},"ts":1409169877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tries to find it","msgtype":"m.emote"},"ts":1409169905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://www.w3.org/Bugs/Public/show_bug.cgi?id=26183 is the bug on what I'd like","msgtype":"m.text"},"ts":1409169987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: not sure how attainable it is","msgtype":"m.text"},"ts":1409169991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: but basically it comes down to the minimum amount of information you would need from an object to get all those methods","msgtype":"m.text"},"ts":1409170026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: while not caring about perf I guess","msgtype":"m.text"},"ts":1409170031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe, given an internal list, you need to define the hooks length(list) and get(itemKind, list) for itemKind of \"key\", \"value\", \"key+value\"; the rest is boilerplate","msgtype":"m.text"},"ts":1409171024000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"(to match the ES6 iterators with regards to liveness etc)","msgtype":"m.text"},"ts":1409171165000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"*sigh*, and then there's the /empty/ case Domenic points out in the bug comment. Bleah.","msgtype":"m.text"},"ts":1409171251000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I don't think we should do live iterators in any case on the platform","msgtype":"m.text"},"ts":1409171280000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Even for live NodeLists","msgtype":"m.text"},"ts":1409171288000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I suppose DOMTokenList should be set-like","msgtype":"m.text"},"ts":1409171651000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: yeah, misnamed","msgtype":"m.text"},"ts":1409171899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: I'm trying to at least make the underlying terminology for those objects is correct, though I only started doing so recently so there's probably room for improvement","msgtype":"m.text"},"ts":1409171941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" /\\ sure","msgtype":"m.text"},"ts":1409171956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: if you want the feature, defend it :-)","msgtype":"m.text"},"ts":1409173090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: can you clarify what exactly it is you changed in https://gist.github.com/caitp/71a97bcb41fdb145b688 ? trying to manually do the diff is giving me a headache","msgtype":"m.text"},"ts":1409173452000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the use of phrases like \"12.7 Repeat while group cursor is not null\" rather than \"Label: <do a thing>\" + \"If <x> jump to <label>\"","msgtype":"m.text"},"ts":1409173524000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"for instance","msgtype":"m.text"},"ts":1409173585000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but that's not really the important part (although it is nice to see the pattern that is happening on the first step rather than down 15 steps)","msgtype":"m.text"},"ts":1409173645000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the important thing is the changes to indentation and nested numbering, makes it so much easier to visualize.","msgtype":"m.text"},"ts":1409173659000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: ok that didn't really respond to comment 2 then, ok","msgtype":"m.text"},"ts":1409176093000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: responded on the bug","msgtype":"m.text"},"ts":1409176097000,"senderName":"Hixie","senderId":"Hixie@irc"}
]