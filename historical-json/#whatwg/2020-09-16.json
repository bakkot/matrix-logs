[
{"content":{"body":"I mean, I was reading today that in ECMAScript if the onrejected is not provided there is a default happening.","msgtype":"m.text"},"ts":1600214550000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Probably there is a default behavior happening in WebIDL also.","msgtype":"m.text"},"ts":1600214595000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"I mean actually this \"PerformPromiseThen\" in the last bullet of \"react to a promise\" https://heycam.github.io/webidl/#dfn-perform-steps-once-promise-is-settled is actually an Operation from ECMAScript","msgtype":"m.text"},"ts":1600214697000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"So it is the same as \"promise.then(resolveFunction, undefined)\" when promise gets rejected, that means the default behavior is invoket.","msgtype":"m.text"},"ts":1600214772000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"no, the subitems in step 3 are a spec-level algorithm that gets converted into a ES-level function on step 4, and that is passed to PerformPromiseThen","msgtype":"m.text"},"ts":1600214869000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"OK, this is invoked https://tc39.es/ecma262/#sec-createbuiltinfunction with (undefined, <<>>)","msgtype":"m.text"},"ts":1600214989000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"whenever you see \"steps\" in a web spec, you can probably substitute that with function/closure","msgtype":"m.text"},"ts":1600215058000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"onRejectedSteps is the algorithm in the substeps, not its return value","msgtype":"m.text"},"ts":1600215070000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"Aha, it is a list of steps to be performed later","msgtype":"m.text"},"ts":1600215144000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"A callback.","msgtype":"m.text"},"ts":1600215176000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1600215183000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"This is so spaghetti, my head hurts :D","msgtype":"m.text"},"ts":1600215211000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"interacting with ES internals sometimes gets like that, and especially for promises :)","msgtype":"m.text"},"ts":1600215275000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"So what happens then. The promise gets rejected with let's say TypeError (during byte reading).","msgtype":"m.text"},"ts":1600215386000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"const result = response.text() = readAllBytesPromise.then(resolve, onRejected)","msgtype":"m.text"},"ts":1600215948000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The promise gets rejected and onRejected is called with TypeError argument. The result is another promise which gets resolved with the return of onRejected function.","msgtype":"m.text"},"ts":1600215996000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"The function 3. in https://heycam.github.io/webidl/#dfn-perform-steps-once-promise-is-settled returns undefined.","msgtype":"m.text"},"ts":1600216188000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"So the result of the entire operation is a promise that gets resolved with undefined.","msgtype":"m.text"},"ts":1600216188000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"This is what you said 45 min ago.","msgtype":"m.text"},"ts":1600216240000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"OK, go to sleep now. Bye.","msgtype":"m.text"},"ts":1600216253000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"Good morning annevk! https://github.com/whatwg/html/pull/5574/files has been updated with your previously requested changes, for when you get a chance","msgtype":"m.text"},"ts":1600244691000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I'll have another look in a bit","msgtype":"m.text"},"ts":1600245586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1600245604000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"MikeSmith: Domenic: now that you have made these major changes to Wattsi, I'm wondering if we can change <span> to <a> and data-x to lt...","msgtype":"m.text"},"ts":1600245614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes please","msgtype":"m.text"},"ts":1600245637000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"MikeSmith: Domenic: making the source even more similar to Bikeshed would be quite nice","msgtype":"m.text"},"ts":1600245639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yea we can do that","msgtype":"m.text"},"ts":1600250272000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all","msgtype":"m.text"},"ts":1600250278000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"could have done it all in those same HTML/Wattsi commits, but seemed better to get those landed first","msgtype":"m.text"},"ts":1600250314000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"baby steps","msgtype":"m.text"},"ts":1600250343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, especially with a patch as big as that spec patch was â€” one problem was that any time almost any other commit got merged to master, I needed to rebase that whole patch","msgtype":"m.text"},"ts":1600250402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"..which was a bit troublesome and also error-prone","msgtype":"m.text"},"ts":1600250422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess <span> to <a> and data-x to lt will be big patches too","msgtype":"m.text"},"ts":1600250469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, I don't know how feasible it is to write a script that does the transformation, but that might be worth doing given the rebasing","msgtype":"m.text"},"ts":1600250600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"andreubotella, have you maybe verified my/our conclusion? Is it a bug in the fetch and/or WebIDL specs?","msgtype":"m.text"},"ts":1600251635000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"croraf: since the note to that algorithm says it's equivalent to Promise.prototype.then, and it seems to be used elsewhere as if it's equivalent, I'd say that's a bug in WebIDL","msgtype":"m.text"},"ts":1600251728000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'll look at it again later and file the issue","msgtype":"m.text"},"ts":1600251739000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"andreubotella, cool","msgtype":"m.text"},"ts":1600251950000,"senderName":"croraf","senderId":"croraf@irc"},
{"content":{"body":"thanks for the review annevk, already applied/commented/resubmitted :)","msgtype":"m.text"},"ts":1600259562000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: MikeSmith: I'm unsure about data-x -> lt since it won't work like Bikeshed does since Bikeshed contains cross-linking.","msgtype":"m.text"},"ts":1600262860000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Also we wouldn't want to turn what are currently data-x into visible-to-the-external-world data-lt=\"\"","msgtype":"m.text"},"ts":1600262880000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/Bikeshed contains cross-linking/Bikeshed does cross-spec linking/","msgtype":"m.text"},"ts":1600262944000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: thoughts on https://github.com/heycam/webidl/pull/883#issuecomment-692972245 ?","msgtype":"m.text"},"ts":1600267554000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: that looks about right, though I haven't thought about this in the context of the cross-origin isolated permission/capability","msgtype":"m.text"},"ts":1600267918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: good point about lt; I guess we should do <a> first and then figure out whether we want to stop using data-x or not","msgtype":"m.text"},"ts":1600267979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone know a better page than https://developer.mozilla.org/en-US/docs/Web/API/Document/domain for explaining document.domain and its evilness? The context is writing a web-developer-facing article about origin isolation and how using it will disable document.domain.","msgtype":"m.text"},"ts":1600291589000,"senderName":"Domenic","senderId":"Domenic@irc"}
]