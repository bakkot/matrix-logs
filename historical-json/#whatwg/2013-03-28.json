[
{"content":{"body":"morning","msgtype":"m.text"},"ts":1364460848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: becoming a little more like dglazkov every day","msgtype":"m.text"},"ts":1364461089000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1364461194000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can we expect you to go through the religious stage (\"God morning\") and the English stage (\"Good morning, what?\") on your journey?","msgtype":"m.text"},"ts":1364461689000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure, I'd have to ask dglazkov","msgtype":"m.text"},"ts":1364461882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I fixed testharness.js btw","msgtype":"m.text"},"ts":1364463342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks","msgtype":"m.text"},"ts":1364463350000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Or, I think I did. Let me know if you still have problems","msgtype":"m.text"},"ts":1364463359000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thanks zcorpan for testing that","msgtype":"m.text"},"ts":1364464887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1364464903000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Am I the only one not okay with Hallvord leaving large parts of copy and paste undefined?","msgtype":"m.text"},"ts":1364464912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really want to do the explaining again :-(","msgtype":"m.text"},"ts":1364464942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought leaving large swaths of details undefined was Clearly Bad...","msgtype":"m.text"},"ts":1364465007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which parts is he leaving undefined?","msgtype":"m.text"},"ts":1364465025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hasn't followed this spec at all","msgtype":"m.emote"},"ts":1364465037000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Whoa, so it's 2013 and tantek's name still gets messed up on http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/","msgtype":"m.text"},"ts":1364465071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: \"implementations may sanitize pasting\" (which is pretty much required)","msgtype":"m.text"},"ts":1364465110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(paraphrasing)","msgtype":"m.text"},"ts":1364465121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1364465173000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it should clearly have requirements there about things that must be stripped","msgtype":"m.text"},"ts":1364465198000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess there could be an interop problem if a site assumes that there will never be certain kinds of input based on testing one browser","msgtype":"m.text"},"ts":1364465265000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So yeah, I agree, that should be defined","msgtype":"m.text"},"ts":1364465274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Can you maybe tell him on the list?","msgtype":"m.text"},"ts":1364465754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Done","msgtype":"m.text"},"ts":1364465785000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1364465807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello, i'm looking for some clarity on the behaviour for HTTP redirects that specify a relative URL","msgtype":"m.text"},"ts":1364467239000,"senderName":"jonathanj","senderId":"jonathanj@irc"},
{"content":{"body":"jonathanj: allowed per HTTP/1.1-bis, has pretty much always worked in practice","msgtype":"m.text"},"ts":1364467422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thank you, i guess i was reading the old internet","msgtype":"m.text"},"ts":1364468048000,"senderName":"jonathanj","senderId":"jonathanj@irc"},
{"content":{"body":"tobie: odinho: has this happened? http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/0858.html","msgtype":"m.text"},"ts":1364476891000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not yet.","msgtype":"m.text"},"ts":1364476930000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: so if i want to submit some tests right now, i should use dvcs?","msgtype":"m.text"},"ts":1364476959000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yup/","msgtype":"m.text"},"ts":1364476985000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"s/\\//./","msgtype":"m.text"},"ts":1364476997000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1364477001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That *does* seem like makework","msgtype":"m.text"},"ts":1364477010000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: what does?","msgtype":"m.text"},"ts":1364477039000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Submitting to dvcs now and then moving to github later","msgtype":"m.text"},"ts":1364477055000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess it depends what you mean by makework","msgtype":"m.text"},"ts":1364477096000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"moving stuff to github won't take more or less time depending on how many tests are in the submission folder.","msgtype":"m.text"},"ts":1364477180000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"pushing to dvcs won't give a critic review","msgtype":"m.text"},"ts":1364477246000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: ETA on moving to github?","msgtype":"m.text"},"ts":1364477372000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what's the WebApps process for CfC?","msgtype":"m.text"},"ts":1364477406000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: i think no objections past the deadline (22 march) means the CfC passes","msgtype":"m.text"},"ts":1364477446000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok. cool. Well","msgtype":"m.text"},"ts":1364477453000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: but maybe you should ask AB","msgtype":"m.text"},"ts":1364477468000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah. We should do this asap/","msgtype":"m.text"},"ts":1364477480000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Not sure whether Robin has import script we can use.","msgtype":"m.text"},"ts":1364477509000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Also curious as to whether we can preserve versioning history somehow.","msgtype":"m.text"},"ts":1364477539000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"He does and we can. I don't know if his script does or not though","msgtype":"m.text"},"ts":1364477567000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's pretty cool. I didn't know we could do that when merging into an existing repo.","msgtype":"m.text"},"ts":1364477604000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"13:36 < ArtB> I don't see any objections so yes","msgtype":"m.text"},"ts":1364477714000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"[the CfC has passed]","msgtype":"m.text"},"ts":1364477721000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*poof*","msgtype":"m.emote"},"ts":1364477972000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie: One approach would be to use subtree-merge for example: http://git-scm.com/book/ch6-7.html","msgtype":"m.text"},"ts":1364478034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm swamped atm, so if anyone wants to move that forward, please be my guest.","msgtype":"m.text"},"ts":1364478270000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I thin it makes sense to sync with darobin. Which I think means \"after Easter\"","msgtype":"m.text"},"ts":1364478474000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for great joy: gmail seems to have stopped randomly scrolling the page around whenever i focus the compose box","msgtype":"m.text"},"ts":1364479896000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the Future is now","msgtype":"m.text"},"ts":1364481044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well almost","msgtype":"m.text"},"ts":1364481047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where's the implementation report for http://www.w3.org/TR/2013/REC-role-attribute-20130328/ ?","msgtype":"m.text"},"ts":1364482532000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1364484954000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: is it too late for this? https://www.w3.org/Bugs/Public/show_bug.cgi?id=21424","msgtype":"m.text"},"ts":1364488676000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: nah, it's a first draft","msgtype":"m.text"},"ts":1364488705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: though I think the TC39 crowd prefers using these keywords now","msgtype":"m.text"},"ts":1364488727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pretty exciting for a first draft :)","msgtype":"m.text"},"ts":1364488729000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I tried to get it right :)","msgtype":"m.text"},"ts":1364488739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wat","msgtype":"m.text"},"ts":1364488739000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: e.g. delete is favored over remove","msgtype":"m.text"},"ts":1364488759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don’t understand. why break back-compat if it can so easily be avoided?","msgtype":"m.text"},"ts":1364488812000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"arv might know","msgtype":"m.text"},"ts":1364488958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, keywords as property names is fine","msgtype":"m.text"},"ts":1364489138000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"and used in ES6 standard library","msgtype":"m.text"},"ts":1364489148000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"matjas: back compat? All browsers support ES5","msgtype":"m.text"},"ts":1364489172000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"We have always been at war with Eurasia","msgtype":"m.text"},"ts":1364489236000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"arv: older browsers don’t, and by naming a property `catch` you force people to wrap their code using Futures in `try/catch` if they don’t want it to break horribly in those older environments","msgtype":"m.text"},"ts":1364489566000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"arv: …as `foo.catch` is a SyntaxError as per ES3","msgtype":"m.text"},"ts":1364489585000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Use foo['catch'] if you care","msgtype":"m.text"},"ts":1364489603000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"…not looking forward to that","msgtype":"m.text"},"ts":1364489629000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: Design for the future, not for the past","msgtype":"m.text"},"ts":1364489705000,"senderName":"arv","senderId":"arv@irc"},
{"content":{"body":"arv: sure, but i’m not talking about changing the [API] design, just renaming a property","msgtype":"m.text"},"ts":1364489806000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"oh well :)","msgtype":"m.text"},"ts":1364489862000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"This is only a problem if there's some yet-to-be-designed web API which is implementable as a polyfill itself in browsers that only support ES3 and that API uses Futures. Plausible but there is the workaround.","msgtype":"m.text"},"ts":1364489941000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Same debate happened with IndexedDB re: IDBCursor.continue().","msgtype":"m.text"},"ts":1364489989000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Dangit, and I'd just gotten comfortable saying \"... or some hypothetical standard futures/promises/deferreds API\"","msgtype":"m.text"},"ts":1364490070000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1364490100000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Presumably one can use Futures directly?","msgtype":"m.text"},"ts":1364490124000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That is presumably one can do something like make a library that implements Future XHR using DOM Futures?","msgtype":"m.text"},"ts":1364490188000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then the DOM Futures part of that could be \"polyfilled\" in javascript","msgtype":"m.text"},"ts":1364490246000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it doesn't depend on a hypothetical future DOM API","msgtype":"m.text"},"ts":1364490262000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/it/the problem described/","msgtype":"m.text"},"ts":1364490274000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"indeed it doesn’t. my point was that any JS file that contains `foo.catch` outside of a try/catch will throw a SyntaxError in ES3 environments","msgtype":"m.text"},"ts":1364490374000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"even if the code path itself won’t ever be reached in that browser, e.g. `if (false) { foo.catch; }`","msgtype":"m.text"},"ts":1364490405000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"I think my point is: if that \"Future XHR\" is just something you've invented for your own use but not a standard API you're polyfilling, and yet you expect to use it on ES3 browsers, you're inventing your own problem. Indeed it would be nice to have your cake and eat it, but see arv's last point.","msgtype":"m.text"},"ts":1364490430000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: this is not about _using_ Futures in ES3 environments","msgtype":"m.text"},"ts":1364490500000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"jsbell: it’s about being able to have a <script> that contains e.g. `if (featureDetect) { useFutures(); }` without it throwing an error in ES3 (graceful degradation)","msgtype":"m.text"},"ts":1364490563000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"jsbell: yes, it’s possible, but it requires using `foo['catch']` instead of `foo.catch` every time, or wrapping everything in a try/catch","msgtype":"m.text"},"ts":1364490595000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"understood and no disagreement","msgtype":"m.text"},"ts":1364490625000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"matjas: I think in part that ship has sailed with continue, URLQuery.delete, and now catch","msgtype":"m.text"},"ts":1364494292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: is this IE6 still?","msgtype":"m.text"},"ts":1364494313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, dfn.js calls a getCookie function which isn't defined in my browser","msgtype":"m.text"},"ts":1364495029000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"Hixie_: ^^","msgtype":"m.text"},"ts":1364495056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr: cannot fix that unfortunately","msgtype":"m.text"},"ts":1364495125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also is the <!-- help --> asking for help with the intro to dom futures?","msgtype":"m.text"},"ts":1364495149000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: will file a bug on HTML so Hixie_ gets to it at some point after adding thenable to Futures","msgtype":"m.text"},"ts":1364495154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr: kinda, there's a ton out there, but if someone could write up a nice intro that'd be sweet, otherwise I'll get to it eventually","msgtype":"m.text"},"ts":1364495182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"someone should tell matjas that |try { obj.delete; } catch (e) { }| is a syntax error at parse time, not runtime, in es3","msgtype":"m.text"},"ts":1364496259000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"you can't try-catch away syntax errors","msgtype":"m.text"},"ts":1364496275000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Futures in DOM now support thenable","msgtype":"m.text"},"ts":1364496726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"basically by hooking directly into JavaScript internals","msgtype":"m.text"},"ts":1364496744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dom.spec.whatwg.org/#concept-resolver-resolve fun starts at step 3","msgtype":"m.text"},"ts":1364496772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"totally don't \"get\" futures; as far as I knew it was just a crazy bad idea on a blog somewhere, then suddenly it appeared in the spec","msgtype":"m.text"},"ts":1364499286000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"dfn.js users have to provide a getCookie() API","msgtype":"m.text"},"ts":1364501436000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"comments out the call for now","msgtype":"m.emote"},"ts":1364501470000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: Futures/Deferreds/Promises are a great abstraction that captures a lot of concepts better than Events do, and which is used *all over* a lot of modern APIs.  We're just finally settling on a design.","msgtype":"m.text"},"ts":1364502453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i haven't even seen an example of a problem with events, much less one that having a second, inconsistent interface solves--and it introduces all kinds of problems (two completely separate interfaces, which will make the platform badly inconsistent and fragmented)","msgtype":"m.text"},"ts":1364502971000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it would need to solve some significant problems to be worth that","msgtype":"m.text"},"ts":1364503055000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"events are pretty terrible","msgtype":"m.text"},"ts":1364503219000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"not at all","msgtype":"m.text"},"ts":1364503238000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(afk, work)","msgtype":"m.text"},"ts":1364503248000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Then you're not looking.  Some examples:","msgtype":"m.text"},"ts":1364503473000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Events fire once, and if you miss them, you're SOL.  This means that some cases have to be architected very carefully to avoid race issues.  Futures work identically whether they're pending or completed, so there's no need to worry about that.","msgtype":"m.text"},"ts":1364503515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: The design of events means that, if you have an operation that you need to wait on the result of, you need to return a value whose sole purpose is to be an event target.  Futures make this less awkward, as the returned value is, in a more immediate sense, the value.","msgtype":"m.text"},"ts":1364503661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Events don't have a useful algebra to build up from.  You can't easily combine events together, or only do something when all of a list of events are finished, etc.  Futures let you do this really easily.","msgtype":"m.text"},"ts":1364503717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And can be handled by a standard library, eventually.)","msgtype":"m.text"},"ts":1364503733000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: It's much easier and more readable to chain Futures (do async thing A, when it's done do async thing B, when it's done do async thing C) than to do the same with events.","msgtype":"m.text"},"ts":1364503830000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Those are the big things, I think.  Several things are equal or easier to read/write in Futures than in Events, Futures can be composed in powerful and simple ways, and Futures readily handle the reasonably common case where a value may be either pending *or* completed.","msgtype":"m.text"},"ts":1364503934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"14:37 < jgraham> 13:36 < ArtB> I don't see any objections so yes 14:37 < jgraham> [the CfC has passed]   *dance *dance :D/-<","msgtype":"m.text"},"ts":1364505881000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Hm... I don't see my +1 email for that, maybe I forgot sending it :P Ohwell.","msgtype":"m.text"},"ts":1364506359000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Hixie_: could you make getCookie() optional via an existence check?","msgtype":"m.text"},"ts":1364507656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: it's not needed for the core functionality as none of my specs provide that","msgtype":"m.text"},"ts":1364507675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: and they work but get a console error","msgtype":"m.text"},"ts":1364507684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: yeah, need to add Future.when() at least","msgtype":"m.text"},"ts":1364507753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or .all()","msgtype":"m.text"},"ts":1364507761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whatever the most popular name is","msgtype":"m.text"},"ts":1364507769000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i commented it out","msgtype":"m.text"},"ts":1364507840000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that works :)","msgtype":"m.text"},"ts":1364507854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, .all() and .first() or whatever.","msgtype":"m.text"},"ts":1364507882000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is getting tired of making changes to the spec that do nothing but move prose into webidl","msgtype":"m.emote"},"ts":1364507963000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Gecko is implementing Web IDL / winter is coming","msgtype":"m.text"},"ts":1364508313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Winter is coming? We haven't even had spring yet!","msgtype":"m.text"},"ts":1364509139000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can only do meterological complaints, not pop culture references","msgtype":"m.emote"},"ts":1364509260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Was a touch of spring on the west coast of Ireland, -- but back here in Oslo it's still bad.","msgtype":"m.text"},"ts":1364509272000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Well today it was \"OK\". But which is mean +4C maximum. And now it is -5C. And my garden is still under 30cm of snow.","msgtype":"m.text"},"ts":1364509416000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you forgot that Web IDL originates from Australia","msgtype":"m.text"},"ts":1364510736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: events firing once is a non-issue; that's a well-understood, solved issue in the whole platform","msgtype":"m.text"},"ts":1364511224000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i see no difference between returning an event target and returning some other object that's called something else","msgtype":"m.text"},"ts":1364511273000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: It's hardly well-understood or solved.  We have several bad instances of it in HTML (often due to legacy), and we create new ones as we go along, like Font Load Events.","msgtype":"m.text"},"ts":1364511291000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can easily handle things like \"wait for all events\" with DOM Events without making up something completely different","msgtype":"m.text"},"ts":1364511299000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"events are pretty bad. requestAnimationFrame just avoids the completely, for instance (the original moz proposal used them and it sucked)","msgtype":"m.text"},"ts":1364511329000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"don't understand chaining (need code examples)","msgtype":"m.text"},"ts":1364511330000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"No, you can't, at least not without manually coordinating across event callbacks by decrementing a global variable or something.","msgtype":"m.text"},"ts":1364511332000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"building a \"do something when certain events are all received\" is hardly a problem that needs a whole new incompatible inconsistent API for (and that's my main issue--ugly API fragmentation with interfaces that are utterly different in design and style)","msgtype":"m.text"},"ts":1364511413000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also, confusion about something that seemed like a random blog suggestion suddenly appearing in the spec--i didn't see any discussion on this on any of the relevant lists that I know of, it just sort of materialized","msgtype":"m.text"},"ts":1364511453000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ugly API fragmentation?  you must be new here :-)","msgtype":"m.text"},"ts":1364511460000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"not really :)","msgtype":"m.text"},"ts":1364511469000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"https://github.com/slightlyoff/DOMFuture/blob/master/README.md has code examples using XHR","msgtype":"m.text"},"ts":1364511473000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i've seen enough ugly API fragmentation in web APIs to be wary of introducing more of it, especially at such a core level","msgtype":"m.text"},"ts":1364511484000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wow there's some bad logic in this page","msgtype":"m.text"},"ts":1364511584000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"Making matters worse, the callback and event names don't even match! Clearly DOM needs a better way to do things.\" things are inconsistent, therefore we need a totally different api!","msgtype":"m.text"},"ts":1364511610000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"don't see any practical examples of chaining on that page","msgtype":"m.text"},"ts":1364512143000,"senderName":"zewt","senderId":"zewt@irc"}
]