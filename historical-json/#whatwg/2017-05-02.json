[
{"content":{"body":"Domenic: It seems a little surprising that moduleMap keys on URL and not URL + credentials. Or am I thinking about this wrongly?","msgtype":"m.text"},"ts":1493728473000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: Eg, if I'm deliberately trying to fetch a module with credentials, I may end up getting a non-credentialed version because some unrelated script imported it earlier without credentials","msgtype":"m.text"},"ts":1493728598000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it doesn't seem overly problematic","msgtype":"m.text"},"ts":1493729326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and it's unclear whether the added complexity of the alternative is worth it","msgtype":"m.text"},"ts":1493729345000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Well, it just caught me out when I was creating a demo of script modules, but maybe it won't happen in the real world.","msgtype":"m.text"},"ts":1493729417000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: did you want both separately?","msgtype":"m.text"},"ts":1493729491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, but I was creating a demo where one script didn't have credentials and the next one did, so it isn't a real world example","msgtype":"m.text"},"ts":1493729561000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Surprised me though","msgtype":"m.text"},"ts":1493729583000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we also do this for SharedWorker, even across non-module/module boundaries","msgtype":"m.text"},"ts":1493729636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's a little surprising, but I'm not sure it's worth making the key more complicated","msgtype":"m.text"},"ts":1493729655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess I expected it to work like the <img> cache","msgtype":"m.text"},"ts":1493729716000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"In terms of using creds as part of the key anyway","msgtype":"m.text"},"ts":1493729751000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: does a VARY header effect the moduleMap?","msgtype":"m.text"},"ts":1493730586000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nope","msgtype":"m.text"},"ts":1493730704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess module map is not long lived?","msgtype":"m.text"},"ts":1493730865000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: indeed, lifetime of the thing it's attached to","msgtype":"m.text"},"ts":1493731212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: considering being a total jerk and manually overriding the webrtc url in Specref. :D","msgtype":"m.text"},"ts":1493735862000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: I think I finally understand response filtering in Fetch, but it took me a while. It also threw a couple implementors for a loop, so I'm trying to see if we can make it any more clear","msgtype":"m.text"},"ts":1493737698000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"but I recognize that it's actually a kind of complicated behavior, so I don't know if I'll really be able to improve on what we have already","msgtype":"m.text"},"ts":1493737737000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: if you can that'd be great","msgtype":"m.text"},"ts":1493737767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jugglinmike: annevk: did you guys come to a conclusion about the desired behavior?","msgtype":"m.text"},"ts":1493737788000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah, no, wanderview--I didn't raise this with annevk","msgtype":"m.text"},"ts":1493737806000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I gotta go and I haven't seen an issue...","msgtype":"m.text"},"ts":1493737833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this is the test that wanderview, Mek, and I all agreed was \"correct\" on Friday https://github.com/w3c/web-platform-tests/compare/master...bocoup:sw-resp-tainting","msgtype":"m.text"},"ts":1493737840000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I might be able to reply later today, but no guarantees","msgtype":"m.text"},"ts":1493737843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohh, okay","msgtype":"m.text"},"ts":1493737850000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: oh right, I did look at that, and it looked reasonable, but a description of what I'm looking at would've helped","msgtype":"m.text"},"ts":1493737881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think the issue is that the spec actually might say the opposite of what we all thought was correct","msgtype":"m.text"},"ts":1493737907000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I haven't been able to write a coherent issue because I'm not so confident that anything is wrong here... Just a little confusing","msgtype":"m.text"},"ts":1493737912000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Yeah, wanderview's point was that a \"basic filtered\" response shouldn't be considered a \"filtered response\" at all","msgtype":"m.text"},"ts":1493737961000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"or rather, that was surprising to me","msgtype":"m.text"},"ts":1493737972000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I would expect step 14 of main fetch to increase the tainting level if the request tainting is greater than the response tainting","msgtype":"m.text"},"ts":1493737995000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway, we should probably put this all in an issue","msgtype":"m.text"},"ts":1493738001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hmm, yeah, does a synthetic response have any filter applied to it?","msgtype":"m.text"},"ts":1493738061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, issue would be good I guess","msgtype":"m.text"},"ts":1493738068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ahh, wanderview that's the ticket. There may be a problem where the outer fetch needs *more* filtering","msgtype":"m.text"},"ts":1493738083000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Okay, that's the insight I needed to write something coherent","msgtype":"m.text"},"ts":1493738094000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I'll get on that now","msgtype":"m.text"},"ts":1493738098000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: thats essentially the way I wrote it in gecko... https://dxr.mozilla.org/mozilla-central/source/dom/fetch/InternalRequest.h#363","msgtype":"m.text"},"ts":1493738141000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and in the synthesized case it gets used here: https://dxr.mozilla.org/mozilla-central/source/dom/workers/ServiceWorkerEvents.cpp#232","msgtype":"m.text"},"ts":1493738169000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jugglinmike: thanks for working through this","msgtype":"m.text"},"ts":1493738569000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"My pleasure (as unlikely as that may sound)","msgtype":"m.text"},"ts":1493738589000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Domenic: can't remember if you were part of this conversation...are <script type=module>s supposed to work in XHTML?","msgtype":"m.text"},"ts":1493749581000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yeah, just like <script>","msgtype":"m.text"},"ts":1493749647000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"igrigorik: JakeA: annevk: FYI, I've filed an issue for the question from the other day- https://github.com/w3c/preload/issues/92","msgtype":"m.text"},"ts":1493754619000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Domenic: I worry that Object.prototype.toString is too performance-sensitive for a usecounter","msgtype":"m.text"},"ts":1493755953000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Domenic: I know Angular hammers it pretty hard","msgtype":"m.text"},"ts":1493755963000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"aklein: yeah, that's fair","msgtype":"m.text"},"ts":1493755965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but I definitely share the intuition that passing around the builtin prototype objects should be rare","msgtype":"m.text"},"ts":1493756001000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"how would one even get a handle on one?","msgtype":"m.text"},"ts":1493756009000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"I mean, by accident","msgtype":"m.text"},"ts":1493756015000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"do you know more about the [LenientThis] thing bz was talking about?","msgtype":"m.text"},"ts":1493756034000,"senderName":"aklein","senderId":"aklein@irc"},
{"content":{"body":"Have Service Workers run into trouble yet where a browser changes its Accept header, and all cached responses with \"Vary: accept\" get invalidated?","msgtype":"m.text"},"ts":1493764672000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]