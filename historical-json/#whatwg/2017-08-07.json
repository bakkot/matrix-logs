[
{"content":{"body":"grazie","msgtype":"m.text"},"ts":1502064479000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Hey all *.spec.whatwg.org seems to be down, is this a known issue?","msgtype":"m.text"},"ts":1502064757000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"curl: (7) Failed to connect to html.spec.whatwg.org port 443: Connection refused","msgtype":"m.text"},"ts":1502064779000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: I'm going to say yes, assuming it's the same issue as w3c-test.org","msgtype":"m.text"},"ts":1502068935000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(though the symptoms are different)","msgtype":"m.text"},"ts":1502068954000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hmm w3c-test.org was down for me yesterday, while whatwg.org starts not working today","msgtype":"m.text"},"ts":1502068968000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"well then... MikeSmith?","msgtype":"m.text"},"ts":1502069059000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"if w3c-test.org is down it’s my fault, if whatwg.org is down it’s Hixie’s fault","msgtype":"m.text"},"ts":1502071688000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh both are down","msgtype":"m.text"},"ts":1502071703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I pinged Hixie about whatwg.org","msgtype":"m.text"},"ts":1502071766000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"did not hear back from him yet","msgtype":"m.text"},"ts":1502071773000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah about w3c-test.org we changed the commands for starting it","msgtype":"m.text"},"ts":1502071865000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*the commands for starting wptserve","msgtype":"m.text"},"ts":1502071887000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I need to update my init script","msgtype":"m.text"},"ts":1502071896000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"GPHemsley: I run w3c-test.org, Hixie runs whatwg.org","msgtype":"m.text"},"ts":1502087575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: ah OK I see now","msgtype":"m.text"},"ts":1502089519000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"whatwg.org is down?","msgtype":"m.text"},"ts":1502098972000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah known","msgtype":"m.text"},"ts":1502099103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd look at the logs, but they're down too","msgtype":"m.text"},"ts":1502099125000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think it was reported here yet, but I might have missed something","msgtype":"m.text"},"ts":1502099162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If a video stops because it reaches the end of the video, does it also get a 'pause' event?","msgtype":"m.text"},"ts":1502101982000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Wow, even Live DOM Viewer is down","msgtype":"m.text"},"ts":1502103429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's serious now","msgtype":"m.text"},"ts":1502103439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Everything seems back up","msgtype":"m.text"},"ts":1502108068000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wow that just happened then since I pushed something a minute or two ago and it failed","msgtype":"m.text"},"ts":1502108107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello, i have a problem with my implementation of microdata and google's image search service, is this the right place to ask things about it?","msgtype":"m.text"},"ts":1502109997000,"senderName":"rnd123","senderId":"rnd123@irc"},
{"content":{"body":"Domenic: if the UA is consuming a ReadableStream with a js internal source... is the UA allowed to \"steal\" or transfer the Uint8Array buffer to avoid copying?  I assume its not since in theory the js internal source could still be holding on to it?","msgtype":"m.text"},"ts":1502112242000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess maybe the UA could do some kind of copy-on-write sort of thing","msgtype":"m.text"},"ts":1502112290000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think Domenic was thinking of a special stream type or option to enable transferring","msgtype":"m.text"},"ts":1502112295000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"there is byob streams... but I think this is different, maybe?","msgtype":"m.text"},"ts":1502112316000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah they're different","msgtype":"m.text"},"ts":1502112325000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we're not really in a position to do the no-copying optimization stealing the buffer would allow... but if it wasn't permitted by the spec then I would feel better about not implementing it :-)","msgtype":"m.text"},"ts":1502112350000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think it's complicated if you have an object stream and you want to specify which parts are transferrable","msgtype":"m.text"},"ts":1502112354000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: It'd be great if it was supported if all parts of the stream were behind the scenes","msgtype":"m.text"},"ts":1502112405000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we definitely support it for native sourced streams","msgtype":"m.text"},"ts":1502112429000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"eg, piping three items of the cache to a single transform stream that doesn't have a chunk handler","msgtype":"m.text"},"ts":1502112431000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or will","msgtype":"m.text"},"ts":1502112441000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1502112469000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess we would not support the appending without copying, though","msgtype":"m.text"},"ts":1502112490000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I may be wrong https://streams.spec.whatwg.org/#dfnReturnLink-1","msgtype":"m.text"},"ts":1502112534000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  I guess you mean if the Uint8Array chunk was marked as \"originally came from native code\" and we never dirtied that bit by going through a js handler... then we could steal it","msgtype":"m.text"},"ts":1502112537000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh, that link wasn't charable","msgtype":"m.text"},"ts":1502112550000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"shareable","msgtype":"m.text"},"ts":1502112553000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: https://streams.spec.whatwg.org/#transfer-array-buffer","msgtype":"m.text"},"ts":1502112561000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"looks like transferring happens by default with bytestreams","msgtype":"m.text"},"ts":1502112583000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"did not know","msgtype":"m.text"},"ts":1502112587000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh, ok","msgtype":"m.text"},"ts":1502112602000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"rnd123: probably not, I'd look at the URLs over at http://schema.org/docs/about.html","msgtype":"m.text"},"ts":1502112606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ok, I should feel bad we will be copying then","msgtype":"m.text"},"ts":1502112620000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: do we at least invoke detach on the input buffer?","msgtype":"m.text"},"ts":1502112721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I assume so... I would have to check with till","msgtype":"m.text"},"ts":1502112738000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: this is only with {type: 'bytes'}","msgtype":"m.text"},"ts":1502112756000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: the bit I am talking about is specific to the fetch body stream being consumed by respondWith() or Cache.put()","msgtype":"m.text"},"ts":1502112774000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: yea, but these native APIs will fail for non-byte streams anyway","msgtype":"m.text"},"ts":1502112806000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: would it not still be observable? I might be missing something though","msgtype":"m.text"},"ts":1502112818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: is that per spec? I thought fetch would allow a non-byte stream as long as it returned bytes","msgtype":"m.text"},"ts":1502112846000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: yea, it should detach... but that is handled in the js engine part of streams and not in the DOM integration code I'm looking at","msgtype":"m.text"},"ts":1502112853000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks annevk","msgtype":"m.text"},"ts":1502112887000,"senderName":"rnd123","senderId":"rnd123@irc"},
{"content":{"body":"JakeA: its likely I am confused and you are correct","msgtype":"m.text"},"ts":1502112899000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that's not the way it usually goes","msgtype":"m.text"},"ts":1502112911000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I meant UA consumption requires Uint8Array","msgtype":"m.text"},"ts":1502112912000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, but the transfer only happens if it was created like new ReadableStream({ start, pull, type: 'bytes' })","msgtype":"m.text"},"ts":1502112948000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"at this time of day you are better caffeinated than I am...","msgtype":"m.text"},"ts":1502112949000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1502112953000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: so it would have to be a selective optimization... I wonder if the \"type\" option was added later...","msgtype":"m.text"},"ts":1502112972000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"otherwise I assume it copies","msgtype":"m.text"},"ts":1502112973000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: Chrome currently throws if you set \"type\" to \"bytes\"","msgtype":"m.text"},"ts":1502113020000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Not implemented","msgtype":"m.text"},"ts":1502113027000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh, I see... its a property on the source... not an option passed to the ReadableStream construcotr","msgtype":"m.text"},"ts":1502113060000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I was getting confused by \"type\" not being in this line: https://streams.spec.whatwg.org/#rs-constructor","msgtype":"m.text"},"ts":1502113075000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I agree it feels more like an option","msgtype":"m.text"},"ts":1502113105000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but then I guess it also describes the unerlyingSource","msgtype":"m.text"},"ts":1502113115000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I think it fits with the underlying source","msgtype":"m.text"},"ts":1502113126000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"native\" sources in theory always have it set","msgtype":"m.text"},"ts":1502113138000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so its exposing that part of their optimizations to js sources","msgtype":"m.text"},"ts":1502113148000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we don't throw on type bytes","msgtype":"m.text"},"ts":1502113241000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess in that case the buffer must appear transferred","msgtype":"m.text"},"ts":1502113297000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, we try to do it: http://searchfox.org/mozilla-central/source/js/src/builtin/Stream.cpp#801","msgtype":"m.text"},"ts":1502113338000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"maybe there is a test...","msgtype":"m.text"},"ts":1502113363000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: maybe this tests it? http://searchfox.org/mozilla-central/source/testing/web-platform/tests/streams/readable-byte-streams/general.js#816","msgtype":"m.text"},"ts":1502113589000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"its confusing because it also uses a byob stream","msgtype":"m.text"},"ts":1502113650000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"we seem to pass that test, though","msgtype":"m.text"},"ts":1502113701000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: filed a bug to track this optimization in the future: https://bugzilla.mozilla.org/show_bug.cgi?id=1388050","msgtype":"m.text"},"ts":1502113990000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"cheers!","msgtype":"m.text"},"ts":1502114017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: thoughts on how to capture https://github.com/w3c/requestidlecallback/issues/61 in the API guidelines?","msgtype":"m.text"},"ts":1502122626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: make your prose closely resemble an implementation in an imperative programming language and stay away from stack inspection and such?","msgtype":"m.text"},"ts":1502122714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been searching for 5 minutes to try to find the license / copyright notice for HTML (so I can link to it as a GOOD example of a spec that allows forking).  Am I just blind?  I'm surprised it's so hard to find.","msgtype":"m.text"},"ts":1502124273000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"There's one line at the very bottom of the spec (at the end of acknowledgements), is that it?","msgtype":"m.text"},"ts":1502124311000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"For some reason I thought html was CC0?","msgtype":"m.text"},"ts":1502124350000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"annevk/foolip: ^","msgtype":"m.text"},"ts":1502124359000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: HTML isn't for historical reasons iiuc","msgtype":"m.text"},"ts":1502124397000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rbyers: HTML is complicated","msgtype":"m.text"},"ts":1502124401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rbyers: DOM is though","msgtype":"m.text"},"ts":1502124402000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ah, figures.  I'll use DOM as a better example.  Thanks :-)","msgtype":"m.text"},"ts":1502124416000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: everything else under WHATWG would be a good example","msgtype":"m.text"},"ts":1502124418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Sorry about the failure on DOM - I spotted the issue on Friday and fixed it, but it looks like I didn't push my code. :( Fixing it again now on my desktop, but I have a quick question.","msgtype":"m.text"},"ts":1502127775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Any opinion on using unicode characters for doing the deduping? I'm trying to make it much less likely that things will collide with intended URLs; in particular, that some of the multiple refs for a \"foo\" term collide with the refs for a \"foo-0\" term.","msgtype":"m.text"},"ts":1502127834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm thinking about appending circled-digits for the dedup process.","msgtype":"m.text"},"ts":1502127856000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, should windows opened by clients.openWindow be considered script-created (and thus be able to close themselves) or not?","msgtype":"m.text"},"ts":1502132277000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"From a quick test it seems neither chrome nor firefox considers them script created currently (although chrome allows self.close() if no navigation occured after opening, while firefox doesn't seem to allow self.close() even in that case)","msgtype":"m.text"},"ts":1502132311000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"JakeA: would you expect to get DOMContentLoaded much sooner with your blog when streams+sw are enabled?","msgtype":"m.text"},"ts":1502140366000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: maybe due to the script and styles being cached. But in terms of html delivery it shouldn't be that much faster","msgtype":"m.text"},"ts":1502140440000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: with streams enabled I see DOMContentLoaded dropping from ~150ms to ~35ms...","msgtype":"m.text"},"ts":1502140495000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that's really cool… but I can't explain how streams cause that. If the CSS and JS is removed from the cache, is it still as fast?","msgtype":"m.text"},"ts":1502140630000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, I more suspect something is broken... but let me check... (I'm really annoyed our network monitor pretends things coming from cache/SW are zero time)","msgtype":"m.text"},"ts":1502140692000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: hmm... deleting the css and js files made DOMContentLoaded go up to 320ms... so maybe this is legit","msgtype":"m.text"},"ts":1502140786000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: chrome on my machine gives DOMContentLoaded ~30ms as well... but I don't know how to test without streams there","msgtype":"m.text"},"ts":1502140807000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: looks like most of the added time was the \"include\" call","msgtype":"m.text"},"ts":1502140862000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"anyway, I guess the good news is it works","msgtype":"m.text"},"ts":1502141011000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\\o/ is this in nightly?","msgtype":"m.text"},"ts":1502141534000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not in nightly yet... a preliminary build","msgtype":"m.text"},"ts":1502141622000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA/wanderview: either of you have opinions on wether clients.openWindow opened windows should be considered \"created by script\", and thus be able to self.close() themselves?","msgtype":"m.text"},"ts":1502141659000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"JakeA: also there is probably a bug somewhere... the image on your blog and the bg image on surma's site did not load a couple times","msgtype":"m.text"},"ts":1502141676000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but it was pretty intermittent","msgtype":"m.text"},"ts":1502141682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Mek: I wasn't aware of that restriction or feature... so don't really have an opinion... at first glance it seems \"created by script\", though","msgtype":"m.text"},"ts":1502141736000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I have to run to dinner...","msgtype":"m.text"},"ts":1502141746000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1502141750000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: okay, thanks","msgtype":"m.text"},"ts":1502141773000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"actually, the browsing context wouldn't be an auxiliary browsing context so the html \"script-closable\" defintion wouldn't care if it was created by script or not...","msgtype":"m.text"},"ts":1502141907000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"annevk: just a heads up will be about a week before I can revisit https://github.com/whatwg/html/issues/2886","msgtype":"m.text"},"ts":1502147177000,"senderName":"domfarolino","senderId":"domfarolino@irc"}
]