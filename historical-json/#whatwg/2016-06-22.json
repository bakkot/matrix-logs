[
{"content":{"body":"oninput event must work for contenteditable=true right?","msgtype":"m.text"},"ts":1466565683000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"heycam: any idea what this HTML comment is doing here? https://github.com/heycam/webidl/blob/1d575a6/index.xml#L461","msgtype":"m.text"},"ts":1466585811000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: that was from me half-arsing the raises()/setraises()/getraises() annotation removal","msgtype":"m.text"},"ts":1466585866000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it can be removed","msgtype":"m.text"},"ts":1466585869000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"same with any of the <!--JAVA ... --> sections","msgtype":"m.text"},"ts":1466585874000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes, kicked those out already","msgtype":"m.text"},"ts":1466585884000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"cool :)","msgtype":"m.text"},"ts":1466585887000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"must go to dinner now","msgtype":"m.emote"},"ts":1466585889000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"bon appetit","msgtype":"m.text"},"ts":1466585902000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"My nexus 5x has that","msgtype":"m.text"},"ts":1466602400000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Did the MS people end up publishing a table layout spec?","msgtype":"m.text"},"ts":1466602457000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"There is no headphone jack on iPhone 6?","msgtype":"m.text"},"ts":1466602543000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: there's a rumor about the next iPhone","msgtype":"m.text"},"ts":1466602612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand the parallel with floppy drives. I wouldn't use floppies when the drives got removed. I've never had a headset that wouldn't use a jack.","msgtype":"m.text"},"ts":1466602650000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Moz shipped me a usb headset","msgtype":"m.text"},"ts":1466602686000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I ordered a Bose headset.","msgtype":"m.text"},"ts":1466602848000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No USB thingie on it.","msgtype":"m.text"},"ts":1466602853000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: nice. confirmed those two cases. is there a diff for this latest change?","msgtype":"m.text"},"ts":1466604964000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there is not, because I squashed the commits and force-pushed to the fork of the parser repo","msgtype":"m.text"},"ts":1466605174000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1466605246000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: now i'm curious what the flub was :-)","msgtype":"m.text"},"ts":1466605305000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: <!--<!---> or <!--<!----> or <!--<!-----> etc caused the parser to never end the comment and return to the data state :)","msgtype":"m.text"},"ts":1466605803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1466605869000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: curious, are the currently any APIs which need to refer to relevant realm ?","msgtype":"m.text"},"ts":1466628376000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, we have an example of navigator.getBattery in https://html.spec.whatwg.org/multipage/webappapis.html#realms-settings-objects-global-objects","msgtype":"m.text"},"ts":1466628405000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that is an example","msgtype":"m.text"},"ts":1466628439000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it is not a hypothetical example","msgtype":"m.text"},"ts":1466628453000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: customElements does a similar thing; window1.customElements.define.call(window2.customElements, ...) will define the element in window2","msgtype":"m.text"},"ts":1466628523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and the spec actually uses relevant realm? I was just surprised to see 4th global type :)","msgtype":"m.text"},"ts":1466628577000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thanks for adding the example to the spec","msgtype":"m.text"},"ts":1466628593000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://html.spec.whatwg.org/multipage/webappapis.html#realms-settings-objects-global-objects:the-iframe-element","msgtype":"m.text"},"ts":1466628594000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"type\", 4th way to refer to a global","msgtype":"m.text"},"ts":1466628616000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, it's been kind of implicit; \"relevant\" was the most-often-used term I believe, so we settled on that","msgtype":"m.text"},"ts":1466628638000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And yeah I figured after I spent all the time sucking this information from bz's mind I was going to make sure it was at least somewhat more accessible for the next person","msgtype":"m.text"},"ts":1466628696000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: Some of the WebIDL grammar gets mixed up for macros by Bikeshed (e.g. -?([1-9][0-9]*|0[Xx][0-9A-Fa-f]+|0[0-7]*)). Is there an undocumented way to escape these in groups (e.g. insert them in a <pre> element or something) or am I out of luck and will need to escape all of them separately (e.g.: -?(\\[1-9]\\[0-9]*|0[Xx][0-9A-Fa-f]+|0\\[0-7]*))?","msgtype":"m.text"},"ts":1466629026000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: <pre> can be used","msgtype":"m.text"},"ts":1466629204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: you can also use a custom element and put it in the \"opaque elements\" list","msgtype":"m.text"},"ts":1466629212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: https://github.com/whatwg/streams/blob/master/index.bs#L26","msgtype":"m.text"},"ts":1466629227000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: Unfortunately macro replacement happens at the text level (pre-parsing) because you can use macros in attribute values, or insert markup with them. So I don't have any implicit escaping.  That said, I already skip over macro-looking things that only contain digits, and I can skip ones that also contain a dash.","msgtype":"m.text"},"ts":1466629244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Unfortunately macros are in the set of things that this doesn't work for.","msgtype":"m.text"},"ts":1466629257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh hmm i guess i am unfamiliar with macros","msgtype":"m.text"},"ts":1466629287000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There are a few markup shorthands that have this problem too, if they'd interfere with HTML parsing, like the <<grammar-term>> one.","msgtype":"m.text"},"ts":1466629334000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I should probably have switched macros to a much harder-to-collide syntax early on. Maybe I can still do this?)","msgtype":"m.text"},"ts":1466629348000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're almost never used in the body of things, just in boilerplate.","msgtype":"m.text"},"ts":1466629370000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I just pushed that, so the ones that are just [0-9] no longer need escaping.","msgtype":"m.text"},"ts":1466629555000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The ones for hex digits still do, tho.","msgtype":"m.text"},"ts":1466629560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sorry, one of my daughters woke up. She's back to sleep now.","msgtype":"m.text"},"ts":1466629613000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"So yeah, they wouldn't really be macros if they happened on a constructed tree, right?","msgtype":"m.text"},"ts":1466629688000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Thanks for fixing the [0-9] case.","msgtype":"m.text"},"ts":1466629703000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll do the other ones by hand.","msgtype":"m.text"},"ts":1466629715000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Exactly. (Unfortunately.)","msgtype":"m.text"},"ts":1466629756000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it would make sense to make the macro syntax a bit more out of the ordinary.","msgtype":"m.text"},"ts":1466629827000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I've idly contemplated writing an HTML parser just so I could hook these things into it and do *no* non-Markdown manipulations on the raw text.","msgtype":"m.text"},"ts":1466629852000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But I can't really estimate the risk of breaking things.","msgtype":"m.text"},"ts":1466629853000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But that's quite a bit of work. :/","msgtype":"m.text"},"ts":1466629858000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Writing my own HTML serializer was worth it, at least.)","msgtype":"m.text"},"ts":1466629876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You lost me at \"*no* non-Markdown.\"","msgtype":"m.text"},"ts":1466629908000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Markdown-related things still have to happen at the textual level, I think.  But everything else could move to post-parsing if not for it confusing the HTML parser.","msgtype":"m.text"},"ts":1466629962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK. Read it three times and I think now I sort of get it.","msgtype":"m.text"},"ts":1466629965000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm not familiar enough with the architecture of Bikeshed to comment on this, tbh.","msgtype":"m.text"},"ts":1466630043000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah that's fine, I'm just thinking aloud. ^_^","msgtype":"m.text"},"ts":1466630062000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Merged your changes and I no longer have macro issues at all.","msgtype":"m.text"},"ts":1466630194000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1466630203000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh yeah! It requires the text to be all-uppercase, so all those hex character-classes aren't hitting it. ^_^","msgtype":"m.text"},"ts":1466630344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yup. :)","msgtype":"m.text"},"ts":1466630375000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/zuhGICmX/","msgtype":"m.text"},"ts":1466630405000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Hmmmm","msgtype":"m.text"},"ts":1466630429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How... is that not hit before.","msgtype":"m.text"},"ts":1466630442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: now getting the above. The src is super, super messy, still, so that might be the cause.","msgtype":"m.text"},"ts":1466630452000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: current src file: https://github.com/tobie/webidl/blob/bikeshed/index.bs","msgtype":"m.text"},"ts":1466630631000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, I spotted the problem, but it's in the \"how the fuck did this ever work\" category, so ???","msgtype":"m.text"},"ts":1466630650000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1466630715000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"non-normative IDL is a rather new feature no?","msgtype":"m.text"},"ts":1466631115000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yeah, brand new, but also I *tested* this.","msgtype":"m.text"},"ts":1466631227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or... maybe I didn't. Maybe I only tested the highlighting of normal IDL?","msgtype":"m.text"},"ts":1466631251000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That seems unlikely.","msgtype":"m.text"},"ts":1466631259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I dunno.","msgtype":"m.text"},"ts":1466631260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, works now.","msgtype":"m.text"},"ts":1466631375000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1466631957000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: Thoughts as to how best handle ES object internal properties (e.g.: [[DefineOwnProperty]])?","msgtype":"m.text"},"ts":1466634373000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Slots in an object are recognized as an IDL type, so you can do {{[[foo]]}}.","msgtype":"m.text"},"ts":1466634480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"awesome. Thanks!","msgtype":"m.text"},"ts":1466634502000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Of course, your usage is generic, not referring to any actual existing slot, so that's not going to help you. ^_^","msgtype":"m.text"},"ts":1466634566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But escaping it with \\ works in that case.","msgtype":"m.text"},"ts":1466634709000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1466634749000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1466634752000,"senderName":"tobie","senderId":"tobie@irc"}
]