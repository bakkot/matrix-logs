[
{"content":{"body":"Domenic: yeah that’s a good call indeed","msgtype":"m.text"},"ts":1547686615000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: why is the normal caching approach not good?","msgtype":"m.text"},"ts":1547712341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In https://heycam.github.io/webidl/#legacy-platform-object-set , what's the \"If O and Receiver are the same object, then:\" check for?","msgtype":"m.text"},"ts":1547719598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I keep forgetting what Receiver is, sorry","msgtype":"m.text"},"ts":1547719963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Having read up on it, I'm not quite sure, but it seems easy enough to test with Reflect.set() or some such?","msgtype":"m.text"},"ts":1547720268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is, to see if it's what implementations do","msgtype":"m.text"},"ts":1547720280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what do the w3c.json files do? I cargo-culted one at https://github.com/WICG/kv-storage/blob/master/w3c.json but am unclear why I did that","msgtype":"m.text"},"ts":1547735797000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk, shouldn't the \"UTF-8 decode\" algorithms return one of the Infra string types rather than a tream?","msgtype":"m.text"},"ts":1547735820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"stream","msgtype":"m.text"},"ts":1547735823000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://github.com/whatwg/encoding/issues/128 handles some of that","msgtype":"m.text"},"ts":1547735908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I feel like I had a large-ish issue about my confusion about how to use those algorithms","msgtype":"m.text"},"ts":1547735933000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: in general I hope we can also say that Encoding stream and scalar value string autocast","msgtype":"m.text"},"ts":1547735942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like how most call sites seem to expect them to return a string but they return a stream","msgtype":"m.text"},"ts":1547735943000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, there it is. https://github.com/whatwg/fetch/issues/661","msgtype":"m.text"},"ts":1547735955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: since it mostly doesn't matter","msgtype":"m.text"},"ts":1547735960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(My issue is not really the same thing, but is impacted.)","msgtype":"m.text"},"ts":1547735995000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Generally we handle not-directly exposed streams in a rather hand-wavy way","msgtype":"m.text"},"ts":1547736033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it's also not clear to me we want all the complexity of encoding_rs in standards, where we end up with synchronous and asynchronous algorithms and such","msgtype":"m.text"},"ts":1547736058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think ideally we'd confine the hand-waviness to some specific operations","msgtype":"m.text"},"ts":1547736094000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess this is a long way of saying that I wouldn't mind improvements, if someone were to offer them","msgtype":"m.text"},"ts":1547736108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's really confusing that you can synchronously read from a fetch body by treating it as an Encoding Standard byte stream, but it might be asynchronously filled by JS code.","msgtype":"m.text"},"ts":1547736124000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'm not sure how to improve things though, it's just too big.","msgtype":"m.text"},"ts":1547736151000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Well, I'd expect that you'd wait for it to be done streaming in that case first though","msgtype":"m.text"},"ts":1547736159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fetch has some primitives around waiting for things, but it's been a while","msgtype":"m.text"},"ts":1547736179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess one improvement I suggest in my thread is to have versions of the Encoding Standard algorithms that operate only on static byte sequences / strings, and use those wherever we can. Then we can see what the problematic cases are, where we're actually operating on something that could change over time, and get a better idea of what we need to do there.","msgtype":"m.text"},"ts":1547736222000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There are probably less disruptive ways to accomplish that though.","msgtype":"m.text"},"ts":1547736278000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd be happy to review patches, but it's not really a priority for me","msgtype":"m.text"},"ts":1547736762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: another look at https://github.com/whatwg/html/pull/4214 would be great","msgtype":"m.text"},"ts":1547755207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, right...","msgtype":"m.text"},"ts":1547755222000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"How does this help with BC groups?","msgtype":"m.text"},"ts":1547755242000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: currently we tie event loops to browsing contexts at times","msgtype":"m.text"},"ts":1547755273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: doesn’t really make much sense","msgtype":"m.text"},"ts":1547755291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that is bad","msgtype":"m.text"},"ts":1547755312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It seems like it might be possible to make the association be with agents without it being 1:1","msgtype":"m.text"},"ts":1547755376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I.e. allow many agents -> 1 event loop","msgtype":"m.text"},"ts":1547755380000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You mostly want to go agent -> event loop","msgtype":"m.text"},"ts":1547755387000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But why though? Wouldn’t that also go against ECMAScript’s requirements on agents?","msgtype":"m.text"},"ts":1547755705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A smaller delta from the existing spec would make me more comfortable. Let me check the ES requirements.","msgtype":"m.text"},"ts":1547755781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"No, ES requirements are not relevant because [[CanBlock]] is always false for window agents","msgtype":"m.text"},"ts":1547755830000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://tc39.github.io/ecma262/#sec-forward-progress second para","msgtype":"m.text"},"ts":1547755849000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1547755939000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm so we’d have diff relationship reqs for diff agents? Hmm","msgtype":"m.text"},"ts":1547755948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"User agents are pretty close to this being 1:1 too","msgtype":"m.text"},"ts":1547755975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We already have different relationship requirements for different agents","msgtype":"m.text"},"ts":1547757254000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I thought UAs did pretty serious coalescing","msgtype":"m.text"},"ts":1547757271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe same-site across BCGs, but that’s not observable so I’d rather have stronger guarantees in the spec","msgtype":"m.text"},"ts":1547761051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also to ensure it does not become observable","msgtype":"m.text"},"ts":1547761074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I might be okay with allowing some coalescing though if impls want that","msgtype":"m.text"},"ts":1547761104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: about the w3c.json file, it’s documented at https://w3c.github.io/w3c.json.html but I don’t know myself what tools if any actually do anything with it. It’s something Robin came up with a long time ago.","msgtype":"m.text"},"ts":1547763515000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess in the future I'll omit it until someone tells me what tools use it","msgtype":"m.text"},"ts":1547763651000,"senderName":"Domenic","senderId":"Domenic@irc"}
]