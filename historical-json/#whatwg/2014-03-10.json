[
{"content":{"body":"smola_: java -cp /opt/workspace/checker/dependencies/galimatias-0.0.2.jar io.mola.galimatias.cli.CLI \"foo\" -> \"Error: Missing scheme\"","msgtype":"m.text"},"ts":1394419056000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"smola_: why doesn't it just handle that as a relative URL?","msgtype":"m.text"},"ts":1394419082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh I guess it has not base URL in scope","msgtype":"m.text"},"ts":1394419196000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems like in the case of examining a URL in isolation, it shouldn't require a base URL","msgtype":"m.text"},"ts":1394419281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm per the URL spec \"foo bar\" (with a base URL in scope) and \"http://example.com/foo bar\" are not parse errors?","msgtype":"m.text"},"ts":1394420121000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1394421286000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"found io.mola.galimatias.StrictErrorHandler","msgtype":"m.emote"},"ts":1394421341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, do you have an actual motto and/or slogan?","msgtype":"m.text"},"ts":1394427887000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"smola_: you around? when you have time I wanted to chat with you about handling of relative URLs in galimatias","msgtype":"m.text"},"ts":1394445207000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/web-platform-tests mentions references to http://w3c-test.org/... under Publication but the links seem to be stale. Is there a replacement or something?","msgtype":"m.text"},"ts":1394448730000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"I'm particulary interested in https://w3c-test.org/web-platform-tests/submissions/","msgtype":"m.text"},"ts":1394448761000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"Why?","msgtype":"m.text"},"ts":1394448850000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://w3c-test.org/web-platform-tests/submissions/ is only to aid reviews","msgtype":"m.text"},"ts":1394448862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes, I have a review I'd like to demo.","msgtype":"m.text"},"ts":1394448874000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"And your PR isn't on there?","msgtype":"m.text"},"ts":1394448887000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hm, I can't connect to it.","msgtype":"m.text"},"ts":1394448936000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"davve: w3c-test.org is migrating to wptserve","msgtype":"m.text"},"ts":1394448969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, that's now?","msgtype":"m.text"},"ts":1394448978000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://w3c-test.org/submissions has some submissions","msgtype":"m.text"},"ts":1394448981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not mine though. (r/938)","msgtype":"m.text"},"ts":1394449038000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"I think you will have to talk to denis/MikeSmith","msgtype":"m.text"},"ts":1394449059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Try #testing on irc.w3.org","msgtype":"m.text"},"ts":1394449071000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Thanks.","msgtype":"m.text"},"ts":1394449087000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"davve: yeah let's deal with it on #testing. though I'm away from my PC for the next two hours","msgtype":"m.text"},"ts":1394449784000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"davve, what's the number of your PR?","msgtype":"m.text"},"ts":1394449814000,"senderName":"deniak","senderId":"deniak@irc"},
{"content":{"body":"I got it","msgtype":"m.text"},"ts":1394449861000,"senderName":"deniak","senderId":"deniak@irc"},
{"content":{"body":"http://w3c-test.org/submissions/718/","msgtype":"m.text"},"ts":1394449904000,"senderName":"deniak","senderId":"deniak@irc"},
{"content":{"body":"deniak: thanks. davve should probably be added so he can do wc-test:mirror himself next time. he works for opera","msgtype":"m.text"},"ts":1394449993000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we can certainly add davve, though if we add him he normally won't need to do w3c-test:mirror since he'll be in the admins list :)","msgtype":"m.text"},"ts":1394450174000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"davve: your PR should be automatically mirrored from now on","msgtype":"m.text"},"ts":1394450264000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Thanks all!","msgtype":"m.text"},"ts":1394452411000,"senderName":"davve","senderId":"davve@irc"},
{"content":{"body":"x-frame-options, CORS, x-xss-protection, strict-transport-security, public-key-pins, content-security-policy, x-content-type-options am i missing any other security related headers? (draft specs OK)","msgtype":"m.text"},"ts":1394452969000,"senderName":"wirepair","senderId":"wirepair@irc"},
{"content":{"body":"er minus Authorization from that list","msgtype":"m.text"},"ts":1394453130000,"senderName":"wirepair","senderId":"wirepair@irc"},
{"content":{"body":"does the URL spec really require that parsing \"foo\" results in a failure instead of a URL?","msgtype":"m.text"},"ts":1394458681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: without a base URL, I think it does","msgtype":"m.text"},"ts":1394458761000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"the idea being that the result of parsing is always an absolute URL","msgtype":"m.text"},"ts":1394458790000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: ok","msgtype":"m.text"},"ts":1394458810000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but maybe there is a use case for parsing relative URLs independently of a base, and change the spec","msgtype":"m.text"},"ts":1394458817000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I guess there's not, in that a relative URL has to have something to be relative against","msgtype":"m.text"},"ts":1394458871000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I think in practice all non-absolute URLs are used in some context where they're relative to something","msgtype":"m.text"},"ts":1394458943000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"otherwise they don't really mean anything","msgtype":"m.text"},"ts":1394458954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think they do, in the browsers","msgtype":"m.text"},"ts":1394459137000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"In other contexts maybe not. Should an HTTP server use the URLÂ parser to parse the request?","msgtype":"m.text"},"ts":1394459204000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"true that's a different case","msgtype":"m.text"},"ts":1394459302000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually in that case we just need to provide a separate thing to parse abs_path, not any relative URL http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2","msgtype":"m.text"},"ts":1394462199000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"The only reason to parse something to a relative url is so that you can get some work done \"eagerly\", and then canonicalize it against a base url later when you actually want to use it.  Relative urls aren't actually useful for anything, as far as I can tell, by themselves.","msgtype":"m.text"},"ts":1394470982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: without a base url, you can't know what \"foo\" means. Consider if the base URL is \"http://example.com/\" vs if it's \"about:blank\".","msgtype":"m.text"},"ts":1394471741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: looks like inert=\"\" was added just so you could do <dialog> without <dialog>.","msgtype":"m.text"},"ts":1394471960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: i guess i'll drop it for now","msgtype":"m.text"},"ts":1394471970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: cool, thanks","msgtype":"m.text"},"ts":1394471999000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: is there some way to use <dialog> such that you get a centered window on a desktop browser, but a fullscreen window on a small-screen device like mobile?","msgtype":"m.text"},"ts":1394472075000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hopefully that would be the default behaviour","msgtype":"m.text"},"ts":1394472089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at lease for showModal()","msgtype":"m.text"},"ts":1394472093000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't have per-device default CSS currently","msgtype":"m.text"},"ts":1394472107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: what would you have happen on a tablet?","msgtype":"m.text"},"ts":1394472157000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: i.e. is it a dimension-based decision?","msgtype":"m.text"},"ts":1394472168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: what should happen if you make a desktop window narrower?","msgtype":"m.text"},"ts":1394472176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ugh, dropping a piece of <dialog> functionality is bad.  <dialog> is not the primitive, it's just a convenient package for several things all together.","msgtype":"m.text"},"ts":1394472186000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: yes, i think it's a screen-size thing","msgtype":"m.text"},"ts":1394472202000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: having to implement inert=\"\" as it was specced would be a performance drag","msgtype":"m.text"},"ts":1394472224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: the primitivies for <dialog> is already there. Just use CSS and JS","msgtype":"m.text"},"ts":1394472241000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: we can always introduce an API that just makes a subtree non-inert without <dialog> if there's a use case for that","msgtype":"m.text"},"ts":1394472243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: Except for the inertness of the rest of the document.","msgtype":"m.text"},"ts":1394472259000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: k. i can add an @media rule to the default style sheet. What should the cut-off be?","msgtype":"m.text"},"ts":1394472270000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: That's fine, I just don't like excessively magical things.","msgtype":"m.text"},"ts":1394472276000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: no idea","msgtype":"m.text"},"ts":1394472278000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: nothing magical here, it's all specced :-)","msgtype":"m.text"},"ts":1394472298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: true, the find-as-you-type inertness is magical still","msgtype":"m.text"},"ts":1394472304000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: You know that's not the definition of \"magic\" I'm using. ^_^","msgtype":"m.text"},"ts":1394472317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the \"supress mouse/touch events\" isn't really magical though","msgtype":"m.text"},"ts":1394472318000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"TabAtkins: not really sure what you mean by \"magic\" then","msgtype":"m.text"},"ts":1394472327000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: (dialog also stops tab from moving focus into the inert section, fwiw)","msgtype":"m.text"},"ts":1394472370000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Probably best understood as an analogy to axioms.  You try to make your axioms as simple as possible, and build on top of them.  The axioms are ultimately unexplained and taken as Truth within your system, but everything else is explainable with them.","msgtype":"m.text"},"ts":1394472394000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: true","msgtype":"m.text"},"ts":1394472415000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the spec explains it all.","msgtype":"m.text"},"ts":1394472415000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You're misinterpreting still.","msgtype":"m.text"},"ts":1394472438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is an analogy. ^_^","msgtype":"m.text"},"ts":1394472458000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah. i don't understand this whole \"explain things\" thing","msgtype":"m.text"},"ts":1394472460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the more i try to understand it the less i get it","msgtype":"m.text"},"ts":1394472469000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i like the \"use cases\" approach much more","msgtype":"m.text"},"ts":1394472475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Here, being \"unexplained\" means \"being able to do something that you can't otherwise do\".","msgtype":"m.text"},"ts":1394472476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's the \"can't otherwise\" part i have a problem with","msgtype":"m.text"},"ts":1394472488000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"An unreproducible ability is an axiom.","msgtype":"m.text"},"ts":1394472489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do you \"explain\" the javascript \"if\" statement?","msgtype":"m.text"},"ts":1394472495000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You don't - \"if\" is a primitive.","msgtype":"m.text"},"ts":1394472505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do you \"explain\" the screen?","msgtype":"m.text"},"ts":1394472507000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you \"explain\" tab focus?","msgtype":"m.text"},"ts":1394472523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Chill for a sec, you're jumping way ahead.","msgtype":"m.text"},"ts":1394472533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we have zillions of primitives. Why are some \"magic\" and some \"not\"?","msgtype":"m.text"},"ts":1394472537000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just don't get it","msgtype":"m.text"},"ts":1394472548000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems completely arbitary","msgtype":"m.text"},"ts":1394472553000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All primitives are magic, that's the point.  The two words are synomyms for this purpose.","msgtype":"m.text"},"ts":1394472553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. Then magic is good?","msgtype":"m.text"},"ts":1394472561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think abstractions are good. they make platforms simpler to use.","msgtype":"m.text"},"ts":1394472585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No.  Small magic is good.  Orthogonal magic is good.  Giant chunks of interrelated magic that solves a narrow use-case is bad.","msgtype":"m.text"},"ts":1394472587000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1394472594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then what's the problem?","msgtype":"m.text"},"ts":1394472597000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"At least, those giant chunks are bad *when they're irreducible*.","msgtype":"m.text"},"ts":1394472601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dialog is hardly narrow.","msgtype":"m.text"},"ts":1394472602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The things that dialog can do are useful elsewhere.","msgtype":"m.text"},"ts":1394472616000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"like where? if there's a use case, then we can support them.","msgtype":"m.text"},"ts":1394472627000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We've learned *so many times* that when you design an irreducible system, you can only design in so much flexibility.","msgtype":"m.text"},"ts":1394472639000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"As soon as an author needs to stretch it a little bit further than what you've designed in, they're screwed, and have to rebuild the entire thing from the ground up.","msgtype":"m.text"},"ts":1394472662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we've learnt *so many times* that when you design without strictly looking at use cases, you get horribly unusable platforms","msgtype":"m.text"},"ts":1394472675000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The smaller the primitives are, the more reducible to base concepts everything is, the less levels you have to move down.","msgtype":"m.text"},"ts":1394472681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes, these two facts are not in conflict.","msgtype":"m.text"},"ts":1394472689000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the smaller the primtives are, the harder it is to implement anything, and the less likely any specific use case is to be well supported.","msgtype":"m.text"},"ts":1394472705000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Which is why you find good use-cases, figure out how to solve them, then carve up the solution into separable pieces.","msgtype":"m.text"},"ts":1394472737000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1394472749000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what we did here","msgtype":"m.text"},"ts":1394472751000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least, what we did once i dropped inert","msgtype":"m.text"},"ts":1394472756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"before that we had done it, then had inert hanging on the side for no good reason","msgtype":"m.text"},"ts":1394472766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, you're still left with <dialog> as the smallest piece.","msgtype":"m.text"},"ts":1394472767000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1394472772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Which is a pretty fucking big piece.","msgtype":"m.text"},"ts":1394472775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we \"find good use-cases, figure out how to solve them, then carve up the solution into separable pieces\"","msgtype":"m.text"},"ts":1394472788000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You're stuck on step 2 - <dialog> is a good solution to a common use-case.","msgtype":"m.text"},"ts":1394472806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and we end up with <dialog>, <form method=dialog>, the top layer, focus, etc.","msgtype":"m.text"},"ts":1394472809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what concretely do you think should be done here?","msgtype":"m.text"},"ts":1394472826000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You haven't carved it up sufficiently yet.  Too much of the ability is still tied to the tagname.","msgtype":"m.text"},"ts":1394472829000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do i know when it's carved up sufficiently?","msgtype":"m.text"},"ts":1394472846000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think i've finally figured out why i dislike this \"explain it\" approach rather than the \"use case\" approach. The \"explain it\" approach feels like too much has to be done on faith. It isn't an actionable design strategy. With the use case approach, I collect the use cases, then I design, and I know I'm done when all the use cases are handled.","msgtype":"m.text"},"ts":1394472917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's hard to tell, but a good rule of thumb is when someone can, without heroic efforts, create something equivalent while using a <div>.","msgtype":"m.text"},"ts":1394472918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so \"if\" isn't sufficiently carved up because you can't build it with a <div>?","msgtype":"m.text"},"ts":1394472938000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Dude, really?","msgtype":"m.text"},"ts":1394472947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm clearly talking about HTML here.","msgtype":"m.text"},"ts":1394472952000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well then give me an actionable answer!","msgtype":"m.text"},"ts":1394472954000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not a language-specific one","msgtype":"m.text"},"ts":1394472958000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I gave you a rule-of-thumb.","msgtype":"m.text"},"ts":1394472966000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it sucks","msgtype":"m.text"},"ts":1394472970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't do lang=\"\" with <div> either","msgtype":"m.text"},"ts":1394472978000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is lang=\"\" not sufficiently carved up?","msgtype":"m.text"},"ts":1394472990000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sigh.","msgtype":"m.text"},"ts":1394472990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right now i have a design philosophy that's easy to follow and works in all spaces.","msgtype":"m.text"},"ts":1394473005000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Let me be more specific.  My rule-of-thumb is talking about *HTML elements*.","msgtype":"m.text"},"ts":1394473006000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this \"explain\" thing doesn't.","msgtype":"m.text"},"ts":1394473011000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It doesn't work ina ll spaces, is the thing.","msgtype":"m.text"},"ts":1394473019000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so unless you have a way to define this \"Explain\" thing in generic terms that works for any language, i'm gonna stick with use cases.","msgtype":"m.text"},"ts":1394473033000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It works well sometimes, when your answer happens to land on something small and factorable.  It fails badly when your answer ends up being something large.","msgtype":"m.text"},"ts":1394473038000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what's the failure with <dialog>?","msgtype":"m.text"},"ts":1394473053000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Like AppCache, which works fine for the cases it was designed for, but can't be used outside of those, without severe distortion.","msgtype":"m.text"},"ts":1394473057000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yep, appcache is a good example of how you have to collect use cases. but \"explain it\" with the exact same use cases wouldn't have done any better.","msgtype":"m.text"},"ts":1394473088000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We haven't hit an obvious failure yet, but <dialog> is a bundle of seperable powers.  The moment someone is designing something and could use one of those powers, but doesn't need or want the rest of the <dialog> suite, that's a failure.","msgtype":"m.text"},"ts":1394473101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fwiw, inert wasn't really the primitive that really let you build <dialog>. Since <dialog> made the parent chain of the <dialog> element inert too. It also seems like inert was a bit of a magical thing on its own","msgtype":"m.text"},"ts":1394473103000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: \"Explain it\" is what's driving Service Worker.","msgtype":"m.text"},"ts":1394473122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: Sure, not disputing that.","msgtype":"m.text"},"ts":1394473128000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, how well is that going again?","msgtype":"m.text"},"ts":1394473134000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Well?","msgtype":"m.text"},"ts":1394473140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"where's the spec?","msgtype":"m.text"},"ts":1394473148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Over in github?","msgtype":"m.text"},"ts":1394473153000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what other vendors are on board?","msgtype":"m.text"},"ts":1394473154000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: (and actually, service worker isn't just based on \"explain it\", it's based on additional use cases too.)","msgtype":"m.text"},"ts":1394473169000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Um, of course it's based on use-cases.  The point is that it's attempting to address those use-cases by designing smaller interlocking pieces, so that when someone has a *new* use-case, it's likely they can repurpose one of the existing pieces.","msgtype":"m.text"},"ts":1394473218000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Rather than having to reinvent everything themselves.","msgtype":"m.text"},"ts":1394473238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's no more chance that it'll fit new use cases than appcache will.","msgtype":"m.text"},"ts":1394473267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"appcache fits some new use cases fine.","msgtype":"m.text"},"ts":1394473271000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and others it fails utterly.","msgtype":"m.text"},"ts":1394473276000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's an interesting hypothesis you have, but one that I'm very confident will be wrong.","msgtype":"m.text"},"ts":1394473301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the \"explain it\" approach is basically \"i'm going to make something that fits those use cases and happens to fit my preferred aesthetic for language design\"","msgtype":"m.text"},"ts":1394473324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Big\" solutions fail, because they're inflexible.  \"Small\" solutions suck, because they're too fiddly to work with.  You have to hit somewhere in the middle, and you have an unfortunate tendency to swerve toward the \"big\" side of things, and then not understand anyone's arguments for shrinking them down a bit.","msgtype":"m.text"},"ts":1394473373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(there's not really any core primitives in service workers, btw, as far as i can tell. It's just as much a \"Big\" solution. It just happens to be a different one, one similar to something I suggest we extend appcache to do.)","msgtype":"m.text"},"ts":1394473392000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"big\" is another word for \"simple\" in this context","msgtype":"m.text"},"ts":1394473425000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to which i say: guilty as charged :-)","msgtype":"m.text"},"ts":1394473433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not \"unfortuate\", it's \"the whole point\"","msgtype":"m.text"},"ts":1394473448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Simple for the things it was designed to do, yes.  And as soon as you step outside the circle that it's carved out, there's nothing underneath you.  You have to rebuild from a very low level.","msgtype":"m.text"},"ts":1394473465000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah... that's just nonsense.","msgtype":"m.text"},"ts":1394473486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The ideal thing exists in layers, with small primitives at the bottom, larger things built out of those, and still larger things built out of *those*.","msgtype":"m.text"},"ts":1394473491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you're describing <dialog> here.","msgtype":"m.text"},"ts":1394473502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That way, if something isn't doing it for you, you can just skip one layer down and build back up.","msgtype":"m.text"},"ts":1394473503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but you're not describing service workers.","msgtype":"m.text"},"ts":1394473511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, dialog is \"give your tag a particular name, and it gains this suite of interconnected powers\".","msgtype":"m.text"},"ts":1394473531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's a high-level object.","msgtype":"m.text"},"ts":1394473535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dialog> is layered on a focus model, a rendering model, a form submission model.","msgtype":"m.text"},"ts":1394473542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is service workers layered on?","msgtype":"m.text"},"ts":1394473555000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We're getting somewhere!","msgtype":"m.text"},"ts":1394473556000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've been here the whole time dude","msgtype":"m.text"},"ts":1394473565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"All of those models exist in specs, and can't be easily interacted with by authors.  The hooks that <dialog> gets for interacting with them *are the types of things I'm talking about when I say \"magic\"*.","msgtype":"m.text"},"ts":1394473590000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if authors ever need to interact with them, then we can provide targetted small APIs to deal with those use cases.","msgtype":"m.text"},"ts":1394473620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we don't randomly go about adding APIs that make the platform harder to extend, harder to implement, harder to refactor, etc, just in case","msgtype":"m.text"},"ts":1394473641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's irresponsible platform design","msgtype":"m.text"},"ts":1394473651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The problem is that I know you're going to be resistant to adding those, because you'll point to <dialog> and say it can already be done.","msgtype":"m.text"},"ts":1394473667000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i am offended","msgtype":"m.text"},"ts":1394473676000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"given a use case, i am trivial to convince","msgtype":"m.text"},"ts":1394473683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And when you do propose some API, it wont' be something that'll work with <dialog> - you wont' be able to tweak <dialog>'s own interaction.","msgtype":"m.text"},"ts":1394473701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what i resist, is adding unnecessary cruft","msgtype":"m.text"},"ts":1394473703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what _are_ you talking about","msgtype":"m.text"},"ts":1394473714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's lots of APIs in HTML that tweak existing features.","msgtype":"m.text"},"ts":1394473723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"look at the forms API extensions!","msgtype":"m.text"},"ts":1394473729000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd be super happy to be convinced otherwise, but you've pushed against things like this for years. :/","msgtype":"m.text"},"ts":1394473730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"pushing against things is a spec writer's job","msgtype":"m.text"},"ts":1394473739000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if as a spec writer you don't push against things, you just end up with a messy spec with zillions of messy interconnected features.","msgtype":"m.text"},"ts":1394473761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm aware of this.","msgtype":"m.text"},"ts":1394473776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"then why \":/\" instead of \":-)\" ?","msgtype":"m.text"},"ts":1394473799000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"As much as I'm casting you into an unfair light, you're casting me in one too, implying that I just want to put a bunch of useless/messy stuff into a spec.","msgtype":"m.text"},"ts":1394473804000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm just arguing against what you're saying, not what you're doing","msgtype":"m.text"},"ts":1394473820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe me too?","msgtype":"m.text"},"ts":1394473865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no, you're calling out things i've done by name.","msgtype":"m.text"},"ts":1394473882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"you've pushed against things like this for years\"","msgtype":"m.text"},"ts":1394473887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"you'll point to <dialog> and say it can already be done\"","msgtype":"m.text"},"ts":1394473900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"you wont' be able to tweak <dialog>'s own interaction\"","msgtype":"m.text"},"ts":1394473905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"dialog is ...\"","msgtype":"m.text"},"ts":1394473915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You have done that.  You continue to claim that <dialog> is a reasonable primitive.","msgtype":"m.text"},"ts":1394473919000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"there's nothing underneath you\"","msgtype":"m.text"},"ts":1394473931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That one wasn't addressing you.","msgtype":"m.text"},"ts":1394473940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It was the generic \"you\".","msgtype":"m.text"},"ts":1394473949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it was in the context of me saying i designed simple APIs, and you said \"Simple for the things it was designed to do, yes.  And as soon as you step outside the circle that it's carved out, there's nothing underneath you\" (yes, the \"you\" is not me, it's the user of my APIs)","msgtype":"m.text"},"ts":1394473990000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1394474010000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(but saying there's nothing under my APIs for my users to fall back to seems like a specific statement of my actions, not my words)","msgtype":"m.text"},"ts":1394474021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in what sense is <dialog> _not_ a reasonable primitive? My argument is \"here are the use cases: [...]. <dialog> handles the use cases.\" Your argument is \"<dialog> isn't <div>\".","msgtype":"m.text"},"ts":1394474060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"More precisely, \"<dialog> isn't <div>+ some CSS/JS abilities, wrapped up in a convenient package\".","msgtype":"m.text"},"ts":1394474099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dialog> has magical positioning rules that only it gets to use, by virtue of having a particular tagname.","msgtype":"m.text"},"ts":1394474120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dialog> has magical form interaction that only it gets to use, by virtue of ahving a particular tagname.","msgtype":"m.text"},"ts":1394474134000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Focus interaction, etc.","msgtype":"m.text"},"ts":1394474140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my point is that i don't understand what design philosophy is leading to age\".","msgtype":"m.text"},"ts":1394474141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"uh","msgtype":"m.text"},"ts":1394474145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my point is that i don't understand what design philosophy is leading to \"<dialog> isn't <div>+ some CSS/JS abilities, wrapped up in a convenient package\" being even considered a target.","msgtype":"m.text"},"ts":1394474167000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I just pointed it out.","msgtype":"m.text"},"ts":1394474178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If I want to make an element that gets positioned in a way similar to <dialog>, but I dont' want the rest of <dialog>'s stuff, I can't do it.","msgtype":"m.text"},"ts":1394474195000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"<dialog> has magical positioning rules that only it gets to use, by virtue of having a particular tagname\" is a statement of fact, but it doesn't have any explanation as to why that is bad.","msgtype":"m.text"},"ts":1394474204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Same with form interaction, focus interaction, etc.","msgtype":"m.text"},"ts":1394474205000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"why would you _want_ to do that?","msgtype":"m.text"},"ts":1394474211000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't make <em> out of <div> either, so what?","msgtype":"m.text"},"ts":1394474223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because we've never designed a positioning scheme in the past that hasn't been used for a remarkable variety of crazy things we never anticipated, and I don't expect <dialog>'s positioning rules to be any different.","msgtype":"m.text"},"ts":1394474248000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you mean the alignment scheme?","msgtype":"m.text"},"ts":1394474265000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Flip it around - why do *you* think that no one will ever design anything that wants to be positioned like <dialog> is?","msgtype":"m.text"},"ts":1394474275000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the alignment scheme is specifically designed to be reusable. I'm just waiting for hte CSSWG to take it over. There's even a note in the spec about it.","msgtype":"m.text"},"ts":1394474290000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think \"no one will ever design anything that wants to be positioned like <dialog> is\". That's why I made the scheme reusable.","msgtype":"m.text"},"ts":1394474314000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I distinctly recall bug conversations in which you found it acceptable for the CSS positioning algorithms to have a branch where they ask if the thing being positioned is a <dialog>.","msgtype":"m.text"},"ts":1394474354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i have a theory as to the difference in our approaches. I design things so that they have lots of extension points, but I don't expose them until they are needed. You think every extension point should be exposed immediately. Is that right?","msgtype":"m.text"},"ts":1394474373000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not really sure what precise positioning logic you mean. There's at least three separate things going on with <dialog> and positioning/CSS.","msgtype":"m.text"},"ts":1394474406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you mean 'align-point', it's designed to be reusable. If you mean the top layer, it's designed to be reusable. The rest is mostly just glue.","msgtype":"m.text"},"ts":1394474443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, 'anchor-point', not 'align-point'.","msgtype":"m.text"},"ts":1394474468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Not necessarily immediately, but definitely way sooner than you do.  Standards are slow enough that by the time you notice, address, and implement something that's \"needed\", it's already several years after the point someone first needed it.","msgtype":"m.text"},"ts":1394474479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How do you know what to expose?","msgtype":"m.text"},"ts":1394474491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Historical supposition, mostly.  And when you don't know, you seek out preliminary data and carve things up as soon as you've got a good enough idea.","msgtype":"m.text"},"ts":1394474526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<dialog> has dozens of potential extension points, by design. Which should I expose, and more importantly, for each one, why that one and not another?","msgtype":"m.text"},"ts":1394474530000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't list those off the top of my head right now. ^_^","msgtype":"m.text"},"ts":1394474547000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i can. and i have already exposed those i think make sense, and for the rest, i'm waiting for author experience with <dialog>.","msgtype":"m.text"},"ts":1394474570000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just like with appcache, once it was shipped, i started designing alternatives (though alex took over, so i didn't bother going on my own path with it)","msgtype":"m.text"},"ts":1394474594000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But the couple of CSS bits are definitely one.  I recall you having to be convinced about them being separable things, rather than <dialog>-specific things.","msgtype":"m.text"},"ts":1394474599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/alternatives/extensions/","msgtype":"m.text"},"ts":1394474601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you recall incorrectly.","msgtype":"m.text"},"ts":1394474613000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anchor-point and the top layer were both extensible from the start.","msgtype":"m.text"},"ts":1394474626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/designing/exposing/, i guess would be a better change.","msgtype":"m.text"},"ts":1394474649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's possible I misinterpreted the conversations, or that you had a more subtle point in the arguments than I could tell.","msgtype":"m.text"},"ts":1394474656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(though i have to say, service workers really doesn't strike me as something that exposes extensions at all. It seems like exactly like everything you're arguing against.)","msgtype":"m.text"},"ts":1394474677000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder if it's just that i'm not vocal about the extension points i design into my systems, so you somehow _think_ that they're designed in a hermetically inseparable way, rather than seeing them as groups of separable solutions.","msgtype":"m.text"},"ts":1394474727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in which case, you really should just give me more credit. I _have_ been doing this for like 15 years now.","msgtype":"m.text"},"ts":1394474739000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, if you don't tell us anything, how are we supposed to know?","msgtype":"m.text"},"ts":1394474750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"read the spec? :-)","msgtype":"m.text"},"ts":1394474755000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And length of experience is hardly an argument for good design, as I'm sure you know. ^_^","msgtype":"m.text"},"ts":1394474768000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not saying my length of experience is an argument for good design, just that it's an argument for not assuming bad design, and checking first instead. :-)","msgtype":"m.text"},"ts":1394474792000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm just asking for the same courtesty - I and some others on our team have been designing APIs for many years as well, and have a good intuition for when something is going to be useful as a separable ability, even if we don't have convincingly articulated use-cases yet.","msgtype":"m.text"},"ts":1394474937000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you're not \"just asking\" for that. You're asking for changes to specific things in the HTML spec. This all started from \"Ugh, dropping a piece of <dialog> functionality is bad\".","msgtype":"m.text"},"ts":1394474988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I haven't said anything one way or the other about anything you've designed.","msgtype":"m.text"},"ts":1394474996000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because I _do_ extend you that courtesy.","msgtype":"m.text"},"ts":1394475019000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"My reaction was that I know inertness is a usefully seperable ability, and \"inert\" was a way to get that.  It might not be a very *good* way to separate it, and that's fine, but having *some* way to do it is useful.","msgtype":"m.text"},"ts":1394475054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And your reaction that there isn't a need for it is why I pushed back.","msgtype":"m.text"},"ts":1394475068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you could definitely convey that in a more productive fashion than \"ugh\" and \"trust me, I have been designing APIs for many years, and have a good intuition for when something is going to be useful as a separable ability\"","msgtype":"m.text"},"ts":1394475097000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lots of people say \"trust me, i need this\". And the way that I know who to trust, is that I trust the ones who can articulate a convincing use case.","msgtype":"m.text"},"ts":1394475147000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sorry that I made an off-the-cuff comment, and a statement that mirrored your own justification of your design skills. ^_^","msgtype":"m.text"},"ts":1394475178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"apology accepted :-)","msgtype":"m.text"},"ts":1394475202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Nope, retracted now.","msgtype":"m.text"},"ts":1394475220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"now, since i _do_ trust your judgement, maybe you can help me with something I was going to ask sicking (but looks like we scared him off). Do you think, on mobile, we should make all <dialog>s full-screen, or just modal ones?","msgtype":"m.text"},"ts":1394475286000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Good question, and I'm not quite sure.","msgtype":"m.text"},"ts":1394475316000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'd probably want to think about some specific examples of <dialog>s in a mobile environment.","msgtype":"m.text"},"ts":1394475344000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And how ones designed only for the desktop worked.","msgtype":"m.text"},"ts":1394475363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the only native non-modal dialog i can think of in a mobile environment would be a speedometer app i have that overlays a window on top of other apps","msgtype":"m.text"},"ts":1394475384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Actually, it might come down to how the positioning model works with the virtual viewport.","msgtype":"m.text"},"ts":1394475387000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't <select>s work kinda like non-fullsceen dialogs on mobile?","msgtype":"m.text"},"ts":1394475515000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does @media max-width give you the width of the fake viewport, on mobile? or of the device?","msgtype":"m.text"},"ts":1394475516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the fake viewport, right?","msgtype":"m.text"},"ts":1394475533000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Which one are you calling fake?","msgtype":"m.text"},"ts":1394475575000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It gives you the viewport that the page lays out in.","msgtype":"m.text"},"ts":1394475583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1394475591000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The device-* queries are based on the screen.","msgtype":"m.text"},"ts":1394475593000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the \"real\" viewport is the one that is physically visible","msgtype":"m.text"},"ts":1394475602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the one that changes during pinch-zoom","msgtype":"m.text"},"ts":1394475609000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Fake, in that case.","msgtype":"m.text"},"ts":1394475636000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1394475640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1394475642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham's argument is somewhat convincing - <dialog> *is* something like the <select> popup.","msgtype":"m.text"},"ts":1394475728000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"On the other hand, we dont' know how to interact with it, unlike <select> with its very restricted content model.","msgtype":"m.text"},"ts":1394475752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok. filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=24991 on this, if anyone has any opinions.","msgtype":"m.text"},"ts":1394475759000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And making it full-screen means you can't use non-modal <dialog> for small, less-important things.","msgtype":"m.text"},"ts":1394475784000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, since non-model dialogs can be relatively unimportant on desktop, we should allow them the same ability on mobile, and not fullscreen them.","msgtype":"m.text"},"ts":1394475812000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1394475874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I ran into an issue of needing a toplayer API just this weekend. I want to show an info bar at the top of the screen outside the <dialog>, but the ::backdrop is always on top and <dialog> is positioned absolute so I can't get out without negative positioning which is awful. I need to be able to do document.toplayer.add(infobar) just like <dialog> does","msgtype":"m.text"},"ts":1394480111000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"internally","msgtype":"m.text"},"ts":1394480111000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"why isn't position:absolute inside the dialog enough?","msgtype":"m.text"},"ts":1394480155000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because the dialog is also position: absolute, so my position is relative to it","msgtype":"m.text"},"ts":1394480171000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"position:fixed?","msgtype":"m.text"},"ts":1394480180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't want fixed, it shouldn't scroll with the page","msgtype":"m.text"},"ts":1394480190000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"oh you want it at the top of the page, no the screen?","msgtype":"m.text"},"ts":1394480200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1394480203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1394480204000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"Gmail does this, the little yellow bar with info.","msgtype":"m.text"},"ts":1394480214000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"that goes under dialogs though doesn't it?","msgtype":"m.text"},"ts":1394480224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not if the infobar is related to the dialog","msgtype":"m.text"},"ts":1394480233000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"i thought the infobars related to the dialogs went inside the dialogs","msgtype":"m.text"},"ts":1394480248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's a design choice","msgtype":"m.text"},"ts":1394480258000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"I should be able to put it at the top of the screen","msgtype":"m.text"},"ts":1394480265000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"(document really)","msgtype":"m.text"},"ts":1394480272000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"kinda weird design choice, but granted.","msgtype":"m.text"},"ts":1394480297000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"file a bug on anne i guess","msgtype":"m.text"},"ts":1394480304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1394480309000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"(what i think would be the way to fix this would be to add a way in css to position:absolute but set the containing block to something else than the default)","msgtype":"m.text"},"ts":1394480387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that way you could put the butter bar info inside the dialog in question, but have it positioned properly)","msgtype":"m.text"},"ts":1394480408000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so maybe file a bug on the CSS side rather than on the top layer)","msgtype":"m.text"},"ts":1394480472000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"+1 to that idea Hixie!","msgtype":"m.text"},"ts":1394480540000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Been on my radar for a while too - plan to do something about that in Positioning.","msgtype":"m.text"},"ts":1394481208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's not something we can easily do","msgtype":"m.text"},"ts":1394483168000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"the containing block is the thing that handles your layout, we can't have you be in one place and do layout with another without a bunch of system changes","msgtype":"m.text"},"ts":1394483210000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"it's much simpler to just add toplayer.add() which both explains <dialog> and gives you the same power as other platforms (ex. android lets you put whatever you want on top)","msgtype":"m.text"},"ts":1394483250000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"(we can do the positioning thing someday perhaps too)","msgtype":"m.text"},"ts":1394483315000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"author needs really have to come ahead of implementor needs :-)","msgtype":"m.text"},"ts":1394483385000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if we designed features around what would be easy to implement, authors would have a heck of a time using them","msgtype":"m.text"},"ts":1394483403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem here isn't that you can't put things on top -- you can. If it's in the dialog, it's on top.","msgtype":"m.text"},"ts":1394483429000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's that you can't position it.","msgtype":"m.text"},"ts":1394483433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm sure Android lets you position things too :-)","msgtype":"m.text"},"ts":1394483441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"after all, how do we explain positioning if you can't set the containing block?","msgtype":"m.text"},"ts":1394483466000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aaaand now google has made search results completely unreadable","msgtype":"m.text"},"ts":1394487922000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's pretty neat how google can single-handedly make the internet worse at a whim, and there's nothing anyone can do about it","msgtype":"m.text"},"ts":1394487941000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: What's wrong with them today?","msgtype":"m.text"},"ts":1394487999000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Breaking a fundamental invariant in layout that the thing that sizes you and the thing you're positioned relative to are the same is different than explaining what already happens","msgtype":"m.text"},"ts":1394488082000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"We probably should have an onlayout and expose setRect() / setClip() etc. so you can implement a layout algorithm yourself","msgtype":"m.text"},"ts":1394488103000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"+1 to something like that.","msgtype":"m.text"},"ts":1394488124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and in terms of the author, I the author, want a single global info bar that's always on top. It shouldn't be inside the <dialog>.","msgtype":"m.text"},"ts":1394488158000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"I think we need to (1) expose a simple constraint-based layout engine to CSS, and (2) expose some more fundamental layout/painting primitives to JS directly.  (1) will let you do a lot of customized layouts on your own pretty easily, and (2) is the escape hatch for when everything else fails.","msgtype":"m.text"},"ts":1394488176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"eah","msgtype":"m.text"},"ts":1394488186000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1394488190000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"https://zewt.org/~glenn/ugly%20google.png","msgtype":"m.text"},"ts":1394488247000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"removed the underlining from the link in each result, so now it's a floaty, undelimited mess","msgtype":"m.text"},"ts":1394488273000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'm not sure it would be too difficult to expose such a layout hook, we have to figure out how it interacts with the existing layout though since you have a cycle (script wants layout info, and layout algorithm wants script's layout rects)","msgtype":"m.text"},"ts":1394488275000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"the CSS algorithms are designed to avoid the cycle, but they hooking your stuff that way would mean running script inside our C++ layout logic :/","msgtype":"m.text"},"ts":1394488317000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"zewt: The link is the big blue text.  I'm not sure how that's unreadable.","msgtype":"m.text"},"ts":1394488943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's no other text that big or that blue.","msgtype":"m.text"},"ts":1394488953000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: first text below each gap.","msgtype":"m.text"},"ts":1394488962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"esprehn: Android addresses this - it gives you stale data during the before-paint callback.","msgtype":"m.text"},"ts":1394488991000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i know, but that isn't a delimiter to my mental parser","msgtype":"m.text"},"ts":1394489042000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: interesting. The problem there is we don't definite when layout (or how much of it) we really do. So different browsers would give different stale results","msgtype":"m.text"},"ts":1394489068000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"esprehn: Yeah, it'd require more parsing.","msgtype":"m.text"},"ts":1394489082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, more speccing.","msgtype":"m.text"},"ts":1394489086000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"exposing when layout happens sounds ... hairy","msgtype":"m.text"},"ts":1394489136000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(but then I'm not that familiar with that part of the platform)","msgtype":"m.text"},"ts":1394489175000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It is somewhat hairy, but not intractable.","msgtype":"m.text"},"ts":1394489186000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And required, in the end, if we want to give authors real ability to design their own layout systems.","msgtype":"m.text"},"ts":1394489201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fun part is exposing it in a way that doesn't harm efforts to do parallel layout.","msgtype":"m.text"},"ts":1394489219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"esprehn: i wasn't suggesting uncoupling the sizing and positioned-relative-to aspects","msgtype":"m.text"},"ts":1394489243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, literally breaking the element out of its container to attach it to something else, in the layout tree, is more tractable.","msgtype":"m.text"},"ts":1394489274000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"someone jog my memory--what's the entry point to get the currently-selected radio box (without iterating over inputs by hand)","msgtype":"m.text"},"ts":1394489276000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"esprehn: i was suggesting just changing the containing block to something other than the weird one you're forced to have via 'position'","msgtype":"m.text"},"ts":1394489277000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah okay, that seems reasonable","msgtype":"m.text"},"ts":1394489299000,"senderName":"esprehn","senderId":"esprehn@irc"},
{"content":{"body":"(am I imagining that that existed)","msgtype":"m.text"},"ts":1394489715000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wtf is the origin of a blob: url?","msgtype":"m.text"},"ts":1394489742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec says \"This scheme should have an origin policy and a lifetime stipulation, to allow safe access to binary data from web applications\" but I can't find anywhere where they actually define it??","msgtype":"m.text"},"ts":1394489768000,"senderName":"Hixie","senderId":"Hixie@irc"}
]