[
{"content":{"body":"TabAtkins, have a sec to look at a css compatibility issue?","msgtype":"m.text"},"ts":1511222866000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"TabAtkins, ^^^ https://jsfiddle.net/9c2qvh6h/2/","msgtype":"m.text"},"ts":1511222938000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Yeah, I guess those properties aren't on our list of things that work for ::first-letter.","msgtype":"m.text"},"ts":1511223151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Your note implies that stroke works in ::first-letter, but it doesn't seem to for me.)","msgtype":"m.text"},"ts":1511223164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Version 62.0.3202.94 (Official Build) (64-bit), with experimental properties enabled","msgtype":"m.text"},"ts":1511223304000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"win10","msgtype":"m.text"},"ts":1511223316000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Ah, I'm on 61  but with a pending update. I'll reboot and try again.","msgtype":"m.text"},"ts":1511223570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i.e. \"Experimental Web Platform features\"...same if enabled","msgtype":"m.text"},"ts":1511223583000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1511223591000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Nah, still not getting stroke to work on ::first-letter. Mind updating the fiddle to a version that shows off stroke working but not fill, just to make sure I'm not messing up something obvious?","msgtype":"m.text"},"ts":1511223774000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmmm....looks same in chromium build from today...-webkit-text-stroke-color/width work on ::first-letter","msgtype":"m.text"},"ts":1511223921000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"(By the by, it's cool and awesome that WK invented *two* different non-standard ways to fill text, one for colors and a completely different one for images.)","msgtype":"m.text"},"ts":1511223987000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"same symptom for me for months...just got around to documenting and saying something","msgtype":"m.text"},"ts":1511223989000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Again, tho, could you update the fiddle to a state that works for you, so I can check on my own. ^_^","msgtype":"m.text"},"ts":1511224009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"indeed :/","msgtype":"m.text"},"ts":1511224011000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"wfm on edge & gecko...stroke/fill wfm on non-first letter on blink, stroke wfm on first-letter on blink, but not fill","msgtype":"m.text"},"ts":1511224228000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"talking the -webkit compat properties, not the \"standard\" ones nobody supports yet","msgtype":"m.text"},"ts":1511224308000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"::first-letter fills parse ok in inspector, but don't paint accordingly","msgtype":"m.text"},"ts":1511224437000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"a-ja: Seriously for real, just update the fiddle so I can look at the exact same thing you're looking at.","msgtype":"m.text"},"ts":1511224495000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, nothing really to change, but just made heading bigger so it's more obvious","msgtype":"m.text"},"ts":1511224618000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"https://jsfiddle.net/9c2qvh6h/5/","msgtype":"m.text"},"ts":1511224646000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"That fiddle still does not style the ::first-letter stroke.","msgtype":"m.text"},"ts":1511224673000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm...inherits for me, in chromium, canary, dev, beta, & release","msgtype":"m.text"},"ts":1511224873000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"I mean there is literally no property in the ::first-letter block that styles the stroke.","msgtype":"m.text"},"ts":1511224905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Given that you're talking about the fact that Chrome apparently has stroking work in ::first-letter but not filling, I'm still unsure what you're looking at.","msgtype":"m.text"},"ts":1511224955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What I see: the code sets fill and stroke styles on h1, then only sets fill styles on h1::first-letter.  The result is filled green and stroked pink.","msgtype":"m.text"},"ts":1511225088000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What you seem to be saying: stroking on ::first-letter works, filling on ::first-letter doesn't.","msgtype":"m.text"},"ts":1511225106000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1511225114000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Your code sample doesn't demonstrate that, so I'm extremely confused.","msgtype":"m.text"},"ts":1511225119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"show me that under heading \"Pseudo ::first-letter element\" in inspector...can't understand why you're not seeing it","msgtype":"m.text"},"ts":1511225345000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"*shows","msgtype":"m.text"},"ts":1511225352000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Again, I'm talking about the *code in the jsfiddle CSS panel*. It does not style the stroke for the ::first-letter.","msgtype":"m.text"},"ts":1511225710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The first letter is pink-stroked, like the rest of the word, in my browser.)","msgtype":"m.text"},"ts":1511225721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"correct....as it should, inherits","msgtype":"m.text"},"ts":1511225767000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"sure. but this does not demonstrate what you're trying to say, which is that stroke works on ::first-letter but fill doesn't.","msgtype":"m.text"},"ts":1511225797000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you're not seeing h1.compatibility::first-letter {","msgtype":"m.text"},"ts":1511225871000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"  -webkit-text-fill-color: blue;","msgtype":"m.text"},"ts":1511225871000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"That's not a stroke property!","msgtype":"m.text"},"ts":1511225897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no, it's not","msgtype":"m.text"},"ts":1511225913000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"it's a fill property","msgtype":"m.text"},"ts":1511225922000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"That correctly shows that Chrome does not pay attention to fill properties in ::first-letter. It says nothing about whether Chrome honors stroke properties.","msgtype":"m.text"},"ts":1511225933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you just said the first-letter is pink stroked...so apparently it does","msgtype":"m.text"},"ts":1511226035000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"but not fill","msgtype":"m.text"},"ts":1511226044000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"The pink stroke is set in the same rule as the green fill, the plain `h1.compatibility` rule.","msgtype":"m.text"},"ts":1511226097000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and inherits to firstt-letter","msgtype":"m.text"},"ts":1511226131000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"https://jsfiddle.net/9c2qvh6h/7/  <- has stroke explicitly on first-letter rather than inheriting...no difference","msgtype":"m.text"},"ts":1511226274000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"You're setting it to the exact same value! You can't tell whether it has an effect or not!?!","msgtype":"m.text"},"ts":1511226326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need you to set the stroke color to something *not* pink, in the `h1.compatibility::first-letter` rule, and confirm that when you do that, you see the first letter's stroke change to the not-pink color.","msgtype":"m.text"},"ts":1511226414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then show me that fiddle. ^_^","msgtype":"m.text"},"ts":1511226419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://jsfiddle.net/9c2qvh6h/9/","msgtype":"m.text"},"ts":1511226526000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Thanks. ^_^ So in yours, the C has an orange stroke and green fill?","msgtype":"m.text"},"ts":1511226548000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"green fill, pink stroke","msgtype":"m.text"},"ts":1511226619000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"blue fill, orange stroke in edge & gecko","msgtype":"m.text"},"ts":1511226793000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"https://jsfiddle.net/9c2qvh6h/10/   <= has paragraph text updated to match what i'm seeing now","msgtype":"m.text"},"ts":1511227046000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Ah, ok, yes, that confirms that we're seeing the same thing, finally.","msgtype":"m.text"},"ts":1511227234000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so, maybe 2 probs...need both -webkit stroke & fill props in first-letter special cases...and differences in inheritance","msgtype":"m.text"},"ts":1511227254000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"TabAtkins, depending on bg colors, have to use shadows to work around it now","msgtype":"m.text"},"ts":1511227423000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"and that's kinda fugly","msgtype":"m.text"},"ts":1511227453000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"on the positive side...you support drop caps on 1st-letter!!!","msgtype":"m.text"},"ts":1511227579000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Hello, can I ask a question regarding a status of isProtocolHandlerRegistered in the custom handlers specification?","msgtype":"m.text"},"ts":1511240436000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"I found that isProtocolHandlerRegistered in the html5.2 specification though, it looks the latest specification of whatwg doesn't include it.","msgtype":"m.text"},"ts":1511240436000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"- https://www.w3.org/TR/html52/webappapis.html#dom-navigatorcontentutils-isprotocolhandlerregistered","msgtype":"m.text"},"ts":1511240436000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"- https://html.spec.whatwg.org/multipage/system-state.html#custom-handlers","msgtype":"m.text"},"ts":1511240437000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"So I wonder if isProtocolHandler is added to the specification or will be added to whatwg. Anyone know about it?","msgtype":"m.text"},"ts":1511240439000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"gyuyoung: isProtocolHandlerRegistered is part of the registerContentHandler() feature that was removed from HTML a couple months ago","msgtype":"m.text"},"ts":1511241585000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the fact that the W3C copy still has it is a bug","msgtype":"m.text"},"ts":1511241607000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you care to get that fixed, you can file a bug in the issue tracker for the W3C copy","msgtype":"m.text"},"ts":1511241638000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks for the change that dropped registerContentHandler()","msgtype":"m.emote"},"ts":1511241672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/whatwg/html/commit/b143dbc2d16f3473fcadee377d838070718549d3","msgtype":"m.text"},"ts":1511241733000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Thank you for the information. If specfication still has it, I wanted to implement it on Chromium.","msgtype":"m.text"},"ts":1511244830000,"senderName":"gyuyoung","senderId":"gyuyoung@irc"},
{"content":{"body":"so","msgtype":"m.text"},"ts":1511267146000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"'If any of the strings in scriptURL’s path contains either ASCII case-insensitive \"%2f\" or ASCII case-insensitive \"%5c\", reject promise with a TypeError and abort these steps.'","msgtype":"m.text"},"ts":1511267151000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"what makes these (urlencoded) slashes so special?","msgtype":"m.text"},"ts":1511267184000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(https://w3c.github.io/ServiceWorker/#start-register-algorithm)","msgtype":"m.text"},"ts":1511267210000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: prolly worth raising an issue on; should at least have a note, but might just be bogus","msgtype":"m.text"},"ts":1511268081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gyuyoung: isProtocolHandlerRegistered() has some privacy issues","msgtype":"m.text"},"ts":1511268107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interestingly enough, the /","msgtype":"m.text"},"ts":1511268122000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"/\\ test is mentioned twice","msgtype":"m.text"},"ts":1511268130000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"in point 3 and point 7","msgtype":"m.text"},"ts":1511268143000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"gyuyoung: makes fingerprinting a little easier, which I think is why it was blocked, though arguably that's also exposed through just following a link with a protocol handler","msgtype":"m.text"},"ts":1511268147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ondras: different URLs","msgtype":"m.text"},"ts":1511268150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1511268161000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"and both are forbidden from having encoded slashes","msgtype":"m.text"},"ts":1511268180000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"service worker question: is it possible to delay the .register() promise until the worker is installed, i.e. its \"install\" event finishes?","msgtype":"m.text"},"ts":1511270148000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: I don't think so","msgtype":"m.text"},"ts":1511270181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay, thanks","msgtype":"m.text"},"ts":1511270197000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Philip`: do you happen to have an image that has a width and height but cannot decode?","msgtype":"m.text"},"ts":1511271809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmmh, [cache, response] = await Promise.all([caches.open(), fetch(request)])","msgtype":"m.text"},"ts":1511272914000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"sounds like a more \"performant\" version of the traditional nested recipe","msgtype":"m.text"},"ts":1511272926000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is something like this encouraged/useless/incorrect ?","msgtype":"m.text"},"ts":1511272950000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: https://jakearchibald.com/2014/offline-cookbook/#cache-network-race","msgtype":"m.text"},"ts":1511273050000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1511273117000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"yet not exactly the one I posted","msgtype":"m.text"},"ts":1511273123000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"this example has match/fetch in parallel","msgtype":"m.text"},"ts":1511273133000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I used \"only\" open/fetch, so this would be the cache miss scenario","msgtype":"m.text"},"ts":1511273145000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"For the record, \"agent\" is a spectacularly poor choice of name","msgtype":"m.text"},"ts":1511273845000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'd love to know why they went with that too","msgtype":"m.text"},"ts":1511273897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Continent was much nicer","msgtype":"m.text"},"ts":1511273905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"They could have picked almost any other term and it wouldn't have been so confusing.","msgtype":"m.text"},"ts":1511274179000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: do you have any thoughts on whatwg mailing list message titled \"How to handle Session Expiry in ServiceWorker\"?","msgtype":"m.text"},"ts":1511275139000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: seems like maybe a legit issue, but the reporter is banned from the github repo","msgtype":"m.text"},"ts":1511275156000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ^^^","msgtype":"m.text"},"ts":1511275170000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: anything involving credentials should involve UX so I don't see why credentials.get would just work","msgtype":"m.text"},"ts":1511275312000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: https://w3c.github.io/webappsec-credential-management/#framework-credential-management even says it's restricted to windows","msgtype":"m.text"},"ts":1511275348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1511277201000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: with Bikeshed for a W3C FPWD, how do I control what shows up in the “Status of the document” section?","msgtype":"m.text"},"ts":1511298407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specifically, is there some way to get it to generate appropriate boilerplate?","msgtype":"m.text"},"ts":1511298495000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right now it shows nothing at all","msgtype":"m.text"},"ts":1511298508000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"fg","msgtype":"m.text"},"ts":1511298512000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1511298516000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm this is for a Web Payments WG publication and I see bikeshed/boilerplate/web-payments/status-FPWD.include but it’s not being used for some reason","msgtype":"m.text"},"ts":1511298645000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'll check when I get back to my house","msgtype":"m.text"},"ts":1511299261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks ー I got it working by putting a <div data-fill-with=\"status\"></div> element in there","msgtype":"m.text"},"ts":1511299318000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno if that’s the right/best-practice way to do it or not, but it worked :)","msgtype":"m.text"},"ts":1511299347000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That should be in their header boilerplate...","msgtype":"m.text"},"ts":1511299349000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(it is the right way to include a status, but it should be in the boilerplate so you don't have to write it in manually)","msgtype":"m.text"},"ts":1511299400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, if you've opened a bug/issue/whatever about the ::first-letter fill stroke thing we discussed yesterday...url please.  tks","msgtype":"m.text"},"ts":1511299565000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"I have not, I'm not sure what you wanted. It's a proprietary property, there's no spec about whether it should work in ::first-letter or not.","msgtype":"m.text"},"ts":1511299643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, the -webkit properties are in the compatibility spec","msgtype":"m.text"},"ts":1511299704000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"(Also I'm on vacation and very carefully control what sort of with I allow myself to do)","msgtype":"m.text"},"ts":1511299717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, haven't paid a ton of attention to the compat spec","msgtype":"m.text"},"ts":1511299735000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though i'm aware that what properties work on ::first-letter is up to vendor","msgtype":"m.text"},"ts":1511299744000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"TabAtkins, sry....enjoy your turkey day","msgtype":"m.text"},"ts":1511299767000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"I mean, if we allow 'color', there's no good reason to not allow fill/stroke","msgtype":"m.text"},"ts":1511299795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, topic for next week :)","msgtype":"m.text"},"ts":1511299871000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"annevk: I guess credentials.get() has a \"silent\" mediation mode... would be it make sense for that to be used in the service worker with out a window?","msgtype":"m.text"},"ts":1511305893000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think 'yes'. mkwst is probably a good person to check with though.","msgtype":"m.text"},"ts":1511305987000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]