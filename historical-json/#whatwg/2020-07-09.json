[
{"content":{"body":"annevk: is there any easy way to use names or IDs instead of indices for https://github.com/web-platform-tests/wpt/pull/24518#issuecomment-656128128 ? Otherwise I have to rewrite everything as promise_test since with 4 embeds floating around frames[0] will not be correct","msgtype":"m.text"},"ts":1594313157000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm I guess the tests will run in order so I can just use frames[2] and frames[3]","msgtype":"m.text"},"ts":1594313202000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Pretty fragile though","msgtype":"m.text"},"ts":1594313208000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it seems window[name] might work for <embed>","msgtype":"m.text"},"ts":1594313273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah yeah, it does, I was trying id=\"\" and assuming it would be the same","msgtype":"m.text"},"ts":1594313309000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1594313319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But that will not return its browsing context I think","msgtype":"m.text"},"ts":1594313328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe if you set window.name, hmm","msgtype":"m.text"},"ts":1594313356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems to work","msgtype":"m.text"},"ts":1594313364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"http://localhost:8080/#dom-window-nameditem-filter bullet 2","msgtype":"m.text"},"ts":1594313412000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe \"To determine the value of a named property name in a Window object window\" needs some work then","msgtype":"m.text"},"ts":1594313415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or rather https://html.spec.whatwg.org/#dom-window-nameditem-filter","msgtype":"m.text"},"ts":1594313423000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but why would it contain a browsing context?","msgtype":"m.text"},"ts":1594313434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh wait, it's a child browsing context with a name","msgtype":"m.text"},"ts":1594313458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1594313459000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1594313460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah I think you're right that the spec is wrong...","msgtype":"m.text"},"ts":1594313485000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I was thinking named objects would return <embed> but the first bullet applies too","msgtype":"m.text"},"ts":1594313486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It does?","msgtype":"m.text"},"ts":1594313492000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, because <embed> creates a child browsing context","msgtype":"m.text"},"ts":1594313504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The first bullet is about window.name I thought","msgtype":"m.text"},"ts":1594313506000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah no","msgtype":"m.text"},"ts":1594313535000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://html.spec.whatwg.org/#creating-browsing-contexts:browsing-context-name","msgtype":"m.text"},"ts":1594313536000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I feel dirty","msgtype":"m.text"},"ts":1594313551000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1594313561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you're playing with <embed>","msgtype":"m.text"},"ts":1594313571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think I blame name=\"\"","msgtype":"m.text"},"ts":1594313585000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not only does it do weird stuff to the global object of the embedder","msgtype":"m.text"},"ts":1594313593000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It also proxies to setting the window.name","msgtype":"m.text"},"ts":1594313598000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Which is itself a terrible feature","msgtype":"m.text"},"ts":1594313604000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"should WebIDL callbacks be propagating the active script or module for dynamic import?","msgtype":"m.text"},"ts":1594314660000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(answered at https://github.com/tc39/ecma262/pull/2086#issuecomment-656257061)","msgtype":"m.text"},"ts":1594317325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ty","msgtype":"m.text"},"ts":1594317709000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"request to bikeshed a name: for incumbents, what do you call the point in time where the incumbent is captured as part of the callback interface type in WebIDL?","msgtype":"m.text"},"ts":1594339094000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"\"the time at which it is passed to an API responsible for its eventually being scheduled and run\" is a mouthful","msgtype":"m.text"},"ts":1594339118000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"best idea i have so far is \"origination\"","msgtype":"m.text"},"ts":1594339164000,"senderName":"shu","senderId":"shu@irc"}
]