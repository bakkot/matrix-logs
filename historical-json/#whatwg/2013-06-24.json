[
{"content":{"body":"zewt: You should see the spec for FFTactics, particularly the interactions of Quick and reaction abilities with the turn order.","msgtype":"m.text"},"ts":1372055609000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does Firefox' \"show windows and tabs from last time\" funtion the same as Chrome's \"Continue where I left off\", i.e. session cookies are kept after a browser restart?","msgtype":"m.text"},"ts":1372058992000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-1 -1 2 2\"><style>svg { background:url(\"\") } </style><circle r=\"1\"/></svg>","msgtype":"m.text"},"ts":1372059082000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, that's fun","msgtype":"m.text"},"ts":1372059143000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"looks like presto and gecko don't use the background","msgtype":"m.text"},"ts":1372059160000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, doesn't seem to work in Firefox, but I wonder if the <svg> were inline whether we paint backgrounds there?","msgtype":"m.text"},"ts":1372059169000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"zcorpan_, oh but then url(\"\") wouldn't be an SVG document anyway","msgtype":"m.text"},"ts":1372059175000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Mmm, so if we cannot use the mark session cookie to be deleted on browser restart, I wonder how we need to deal with this for our certificate/token functionality.","msgtype":"m.text"},"ts":1372059324000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"does ie10 still not support data urls from the address bar?","msgtype":"m.text"},"ts":1372059743000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"or is that on purpose?","msgtype":"m.text"},"ts":1372059750000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hsivonen: fyi all the w3c vnu backends are now running under Java7","msgtype":"m.text"},"ts":1372061257000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for the last day or so","msgtype":"m.text"},"ts":1372061280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with no apparent problems so far","msgtype":"m.text"},"ts":1372061291000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan_: about http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Jun/0174.html you're already working on a spec that relates to?","msgtype":"m.text"},"ts":1372062132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(ViewportObserver API proposal)","msgtype":"m.text"},"ts":1372062145000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh CSSOM View?","msgtype":"m.text"},"ts":1372062173000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: right","msgtype":"m.text"},"ts":1372062177000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372062180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there some overlap with the thing in the Web Performance WG?","msgtype":"m.text"},"ts":1372062243000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/ResourcePriorities/Overview.html","msgtype":"m.text"},"ts":1372062249000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe that's a different solution to the same use case","msgtype":"m.text"},"ts":1372062315000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1372062349000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i haven't looked into it yet","msgtype":"m.text"},"ts":1372062365000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i wonder what <svg lazyload> is supposed to do","msgtype":"m.text"},"ts":1372062376000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<script lazyload>? please no","msgtype":"m.text"},"ts":1372062390000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"man the name \"Resource Priorities\" for that spec seems like not such a great choice","msgtype":"m.text"},"ts":1372062399000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh I though it was just for images","msgtype":"m.text"},"ts":1372062413000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"have they scope-creeped it out to everything else already?","msgtype":"m.text"},"ts":1372062440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems so","msgtype":"m.text"},"ts":1372062446000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"geez","msgtype":"m.text"},"ts":1372062452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or just applied it to all the tags that load something, and some others too","msgtype":"m.text"},"ts":1372062488000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1372062498000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just now seeing the actual <script src=\"Analytics.js\" lazyload ></script> in there","msgtype":"m.text"},"ts":1372062526000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"974 ftw","msgtype":"m.text"},"ts":1372062574000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't remember anybody actually ever describing a problem around this for anything other than images","msgtype":"m.text"},"ts":1372062712000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what's the current thinking on naming of methods with both singular and plural forms?","msgtype":"m.text"},"ts":1372063059000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"e.g. elementFromPoint (already exists) and elementsFromPoint","msgtype":"m.text"},"ts":1372063131000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"GPHemsley: I think the problem http://wiki.whatwg.org/wiki/Contexts has now is that <object> is always object-src per CSP. So either HTML has something special for it sniffing-wise, or the table is simply wrong.","msgtype":"m.text"},"ts":1372065491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=444380","msgtype":"m.text"},"ts":1372066894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you should have said that you have authority because you're on the TAG :-)","msgtype":"m.text"},"ts":1372067092000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"why is memory an issue for svg but not for html?","msgtype":"m.text"},"ts":1372067115000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"SVG files have a tendency to have most of their information in an attribute value...","msgtype":"m.text"},"ts":1372067289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't buy it would be twice the memory though. You'd just to design a better storage solution.","msgtype":"m.text"},"ts":1372067313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would buy that it sucks and maybe is not worth it...","msgtype":"m.text"},"ts":1372067341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-media-annotation/2013Jun/0008.html may have been a bit much, but geez...","msgtype":"m.text"},"ts":1372068248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Unfortunately, your comment about callback syntax is out of scope of this 3rd Last Call.\"","msgtype":"m.text"},"ts":1372072667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Don't worry, it'll be in scope for the fourth","msgtype":"m.text"},"ts":1372072952000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It seems we're implementing something much simpler anyway so maybe most of that work needs to ignored in the end anyway?","msgtype":"m.text"},"ts":1372074056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: how could you forget about <!DOCTYPE &amp;> & <!--&amp;--> & <?&amp;> & <!&amp;> & <p &amp;=\"foo\"> & <foo&amp;> & <svg><![CDATA[&amp;]]></svg> & ..... ???","msgtype":"m.text"},"ts":1372074152000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1372074190000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I knew I shouldn't have responded to that message","msgtype":"m.text"},"ts":1372074222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmmm. looks like Glenn made MediaList a constructor, but i see no discussion about that","msgtype":"m.text"},"ts":1372076260000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"and a MediaList object created with the constructor can't be used for anything","msgtype":"m.text"},"ts":1372076442000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ms2ger: poke https://bitbucket.org/ms2ger/anolis/pull-request/10/use-for-the-toc-in-w3c_compat-since-csswgs/diff","msgtype":"m.text"},"ts":1372077194000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I'm flying to the Netherlands... \"You are required to enter Advance Passenger Information (API) for your trip\" I wonder what the Netherlands thinks they do not know about me...","msgtype":"m.text"},"ts":1372078601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Following the link reveals nothing. klm.com is such a great website.","msgtype":"m.text"},"ts":1372078753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_, gah.","msgtype":"m.text"},"ts":1372079190000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Later this week, I think","msgtype":"m.text"},"ts":1372079195000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: great :-) i'm not in a rush, i was just looking through my open tabs","msgtype":"m.text"},"ts":1372079322000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hmm, i tried to implement a new option for xref.py, but i get this error: anolis: error: unrecognized arguments: --xref-use-a","msgtype":"m.text"},"ts":1372080068000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Did you  add it to ./anolis?","msgtype":"m.text"},"ts":1372080110000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"aha. i didn't","msgtype":"m.text"},"ts":1372080220000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: <object> is complex, because it basically has to be sniffed twice.","msgtype":"m.text"},"ts":1372081462000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: http://www.whatwg.org/specs/web-apps/current-work/#object-type-detection","msgtype":"m.text"},"ts":1372081535000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yay, single-page","msgtype":"m.text"},"ts":1372081603000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yeah, sorry","msgtype":"m.text"},"ts":1372081658000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"didn't click :)","msgtype":"m.emote"},"ts":1372081667000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: object-src really seems to be more suited towards the plugin type of <object>","msgtype":"m.text"},"ts":1372081686000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: (And <applet> doesn't really need to be sniffed, because it's always Java.)","msgtype":"m.text"},"ts":1372081712000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hmm, looks like i did a mistake. https://bitbucket.org/zcorpan/anolis/commits/featurebranches - how do i make the xref_use_a branch include only the last commit (compared to the default branch)?","msgtype":"m.text"},"ts":1372081980000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ms2ger: ^","msgtype":"m.text"},"ts":1372082206000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1372082258000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_, so you want it on top of 5ce506b ?","msgtype":"m.text"},"ts":1372082293000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, i guess. unless it's better if i sync with upstream first","msgtype":"m.text"},"ts":1372082420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"No, that's fine","msgtype":"m.text"},"ts":1372082450000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hg up 5ce506b5da30d429083217fce4695013bf012a39","msgtype":"m.text"},"ts":1372082512000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hg branch <foo>","msgtype":"m.text"},"ts":1372082520000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hg di -r 0c807914e393f0bcd87da4f3779c20f6955e70bc:7890a059a0a30f4887cc4044587c5216f2120b1a | patch -p1","msgtype":"m.text"},"ts":1372082554000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hg comm -m \"bar\"","msgtype":"m.text"},"ts":1372082572000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1372082574000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And then strip the original","msgtype":"m.text"},"ts":1372082582000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<foo> should be something like xref_use_a_2 ?","msgtype":"m.text"},"ts":1372082604000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I suppose so, yes","msgtype":"m.text"},"ts":1372082618000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok, i'll try","msgtype":"m.text"},"ts":1372082640000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks like pretty much all existing npm modules dealing with HTML entities are broken","msgtype":"m.text"},"ts":1372082771000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"GPHemsley: I guess what I'm saying is that the sniffing cannot be reconciled with CSP contexts and is sort of a separate thing later on","msgtype":"m.text"},"ts":1372082822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"only 1 lib has the complete list of HTML5 entities as per http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json, and none of them support astral symbols at all","msgtype":"m.text"},"ts":1372082831000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"may need to write my own","msgtype":"m.text"},"ts":1372082838000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Ms2ger: looks like it did the trick. thanks!","msgtype":"m.text"},"ts":1372082838000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1372082840000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"</rant>","msgtype":"m.text"},"ts":1372082841000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: For <object> or for everything? I think we could make it work, if we allow context switching.","msgtype":"m.text"},"ts":1372082903000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: We'll likely need it for the browsing context anyway.","msgtype":"m.text"},"ts":1372082927000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I guess the alternative is that you say <object> uses the \"<object> context\" which implies object-src for CSP purposes and complicated rules for sniffing purposes","msgtype":"m.text"},"ts":1372083025000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: however, it's not entirely clear to me whether Fetch and sniffing ought to be merged in this way","msgtype":"m.text"},"ts":1372083046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: sniffing might actually be okay as a local per API endpoint affair","msgtype":"m.text"},"ts":1372083067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, although for images you always want to sniff... Ugh.","msgtype":"m.text"},"ts":1372083088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1372083101000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Maybe some contexts should leave it up to the caller and others do it automatically?","msgtype":"m.text"},"ts":1372083181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. for connect-src you want to leave it up to the caller... For object-src prolly too given the complexity.","msgtype":"m.text"},"ts":1372083200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And also, we could leave it always up to the caller and define something like \"image fetch\" that does the right for images.","msgtype":"m.text"},"ts":1372083245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not clear on what the issue/potential conflict is here. The contexts are just a tunnel with which to travel when fetching a resource. It's OK if sniffing branches, because it's downstream from fetch.","msgtype":"m.text"},"ts":1372083430000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Oh, I see the issue. The \"trigger\" part. Hmm...","msgtype":"m.text"},"ts":1372083556000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"API, does a, Fetch (potentially blocked due to CSP), then potentially Sniff (depending on API), ...","msgtype":"m.text"},"ts":1372083592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What are some of the possible APIs we're discussing here?","msgtype":"m.text"},"ts":1372083616000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"So CSP and Fetch need to become integrated, sniffing seems like a convenience","msgtype":"m.text"},"ts":1372083631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: everything on the platform that does a Fetch, simple example is <img>","msgtype":"m.text"},"ts":1372083650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Right, but what is the \"API\"? HTML?","msgtype":"m.text"},"ts":1372083679000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: <img> is an API, background-image is another","msgtype":"m.text"},"ts":1372083723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1372083731000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And when would the Sniff part differ by API?","msgtype":"m.text"},"ts":1372083756000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Presumably all APIs of a given context are dealing with the same realities on the Web","msgtype":"m.text"},"ts":1372083795000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"<img> does sniffing for images. XMLHttpRequest only sometimes ignores Content-Type, but does no real sniffing.","msgtype":"m.text"},"ts":1372083796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, the connection context is one that requires a little more thought","msgtype":"m.text"},"ts":1372083815000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"But I think the rest are fairly established","msgtype":"m.text"},"ts":1372083874000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"No, e.g. <script> and Worker both mostly ignore Content-Type, but Worker also ignores encoding","msgtype":"m.text"},"ts":1372083921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Both are script-src though.","msgtype":"m.text"},"ts":1372083930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(The connection context was added to provide a home in the table for connect-src.)","msgtype":"m.text"},"ts":1372083948000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And object-src covers <applet>/<object>/<embed>, which have vastly different sniffing rules","msgtype":"m.text"},"ts":1372083957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<applet> doesn't really need sniffing, AFAICT. It's always Java.","msgtype":"m.text"},"ts":1372083980000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Whereas in your table <object> is sometimes tied with image which is just wrong","msgtype":"m.text"},"ts":1372083985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: it's also always object-src","msgtype":"m.text"},"ts":1372083997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the sniffing for <object> is a superset of the sniffing for <embed>","msgtype":"m.text"},"ts":1372084014000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"As I said, the sniffing is distinct","msgtype":"m.text"},"ts":1372084019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it's not clear that if we introduce a new similar context we want the same sniffing.","msgtype":"m.text"},"ts":1372084049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. for <script> we added Worker but wanted different rules.","msgtype":"m.text"},"ts":1372084059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So what do you propose?","msgtype":"m.text"},"ts":1372084135000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I think we should marry CSP contexts and Fetch. Then for sniffing we should find the right level of abstraction.","msgtype":"m.text"},"ts":1372084236000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think for most cases handling the sniffing where the fetching for the API is defined is fine, as it's e.g. done for <object> today. We might want to introduce something like \"image fetch\" as there are many APIs that fetch images.","msgtype":"m.text"},"ts":1372084276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So where does that leave http://mimesniff.spec.whatwg.org/#context-specific-sniffing ?","msgtype":"m.text"},"ts":1372084364000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(which was the whole reason I compiled the contexts list)","msgtype":"m.text"},"ts":1372084391000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Those look like useful shorthands for the various APIs we have today, no? Although maybe some just want to inline that so the badness doesn't leak further...","msgtype":"m.text"},"ts":1372084478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And in some cases they might not be okay, e.g. the example of <script> vs Worker","msgtype":"m.text"},"ts":1372084504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Basically script does not do sniffing. It simply does not look at content-type at all.","msgtype":"m.text"},"ts":1372084523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, except to determine the encoding, in case of <script> (not Worker).","msgtype":"m.text"},"ts":1372084544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So what determines the script type? The type hint?","msgtype":"m.text"},"ts":1372084585000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"The API.","msgtype":"m.text"},"ts":1372084620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Keep in mind that I'm totally fine with defining a sniffing algorithm to not actually do any sniffing.)","msgtype":"m.text"},"ts":1372084638000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Is Worker always JavaScript?","msgtype":"m.text"},"ts":1372084659000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(How do you call Worker, anyway?)","msgtype":"m.text"},"ts":1372084672000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"new Worker(\"url\")","msgtype":"m.text"},"ts":1372084702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: yes","msgtype":"m.text"},"ts":1372084704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So isn't that a connection context, not a script context?","msgtype":"m.text"},"ts":1372084729000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: For Sniff, maybe. Not for CSP.","msgtype":"m.text"},"ts":1372084809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, I see","msgtype":"m.text"},"ts":1372084822000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1372084864000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Well, I suppose CSP doesn't have to map cleanly onto the contexts... The CSP directives kinda form their own contexts anyway","msgtype":"m.text"},"ts":1372084982000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"They apply at different levels anyway","msgtype":"m.text"},"ts":1372085030000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: Are you OK with the \"How to use a context\" steps?","msgtype":"m.text"},"ts":1372085043000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"It seems you'd sniff before handling, no?","msgtype":"m.text"},"ts":1372085085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Potentially as one-step (e.g. as many image libraries do)","msgtype":"m.text"},"ts":1372085097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, it seems you can only set the no-sniff flag after you actually fetched it","msgtype":"m.text"},"ts":1372085141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"Handle\" refers to http://mimesniff.spec.whatwg.org/#handling-a-resource","msgtype":"m.text"},"ts":1372085160000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: And Sniff allows the UA to decide that they don't want to sniff based on the URL before the type is determined.","msgtype":"m.text"},"ts":1372085196000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(Like a nosniff whitelist)","msgtype":"m.text"},"ts":1372085220000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Again, if you don't fetch it, you don't have a resource","msgtype":"m.text"},"ts":1372085255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure I understand what you're getting at","msgtype":"m.text"},"ts":1372085410000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"If you don't have a resource, you can abort the steps","msgtype":"m.text"},"ts":1372085424000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"s/can //","msgtype":"m.text"},"ts":1372085444000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Step 2","msgtype":"m.text"},"ts":1372085464000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"2. \"Set no-sniff flag on resource\" 3. \"Fetch resource\"","msgtype":"m.text"},"ts":1372085718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You cannot do 2 without 3","msgtype":"m.text"},"ts":1372085724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1372085752000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1372085753000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"ok, so you're prefer steps 3 and 4 to be switched?","msgtype":"m.text"},"ts":1372085824000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk: FWIW I got the API thing from KLM too. Couldn't tell if I had filled it in right since it didn't really day what was required. Katie assumed that the mail was a scam.","msgtype":"m.text"},"ts":1372085879000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: a scam that points to your actual booking?","msgtype":"m.text"},"ts":1372085911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, yeah it quickly became clear it wasn't","msgtype":"m.text"},"ts":1372085928000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"GPHemsley: I think I'm a bit at a loss as to what the benefit of the sniffing contexts is","msgtype":"m.text"},"ts":1372085931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But she has been trained to assume that unexpected mails asking for personal information aren't to be trusted","msgtype":"m.text"},"ts":1372085955000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"GPHemsley: there's a clear outcome of the CSP object-src context and why <object> needs to mention it","msgtype":"m.text"},"ts":1372085956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: it's not obvious that refactoring <object> with these sniffing contexts would be a win for the <object> spec","msgtype":"m.text"},"ts":1372085977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: fair enough","msgtype":"m.text"},"ts":1372086002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure I'm following. I compiled this list based on the existing concepts in HTML and CSS, in order to facilitate having different sniffing algorithms for each. The addition of CSP was per your request.","msgtype":"m.text"},"ts":1372086057000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: \"existing concepts\"?","msgtype":"m.text"},"ts":1372086105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes, these concepts are implicitly defined by the various parts of the HTML spec which detail sniffing. I just put a name on them.","msgtype":"m.text"},"ts":1372086134000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"And invented some more?","msgtype":"m.text"},"ts":1372086160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which ones do you consider \"invented\"?","msgtype":"m.text"},"ts":1372086188000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"script","msgtype":"m.text"},"ts":1372086269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plugin?","msgtype":"m.text"},"ts":1372086297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, OK, the contexts weren't all based on explicit sniffing instructions in HTML. They were compiled based on every possible fetch point.","msgtype":"m.text"},"ts":1372086376000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"So, I'm behind the goal of getting CSS and HTML to agree on how to fetch an image and sniff the hell out of it.","msgtype":"m.text"},"ts":1372086378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But most of the other stuff defined in HTML is really HTML-specific and does not warrant abstraction I think.","msgtype":"m.text"},"ts":1372086410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, the mimesniff spec has been created much to abstract sniffing out of the HTML spec.","msgtype":"m.text"},"ts":1372086473000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"But all the sniffing algorithms need to be explicitly referenced by a calling spec.","msgtype":"m.text"},"ts":1372086541000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"\"Abstract sniffing out\" by itself is not enough of a goal. Having someone else maintain most of the details might be one. Having more specs use it might be another.","msgtype":"m.text"},"ts":1372086660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But too much abstraction comes at a cost.","msgtype":"m.text"},"ts":1372086669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What is the cost here?","msgtype":"m.text"},"ts":1372086711000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Shifting text around for no benefit is costly as people who once understood what's going on have to relearn.","msgtype":"m.text"},"ts":1372086759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if it does not need to be referenced by other specs moving it away further from where the text is required can make the algorithm harder to follow (though sometimes easier)","msgtype":"m.text"},"ts":1372086812000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You seem to be speaking in hypotheticals.","msgtype":"m.text"},"ts":1372086876000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: I have some experience shifting bits around and I'm questioning some of what you're doing here","msgtype":"m.text"},"ts":1372087034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: I don't think you've clearly illustrated the benefit other than \"the goal of Sniff is to further abstract HTML\" which I don't think is a worthy goal","msgtype":"m.text"},"ts":1372087056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yet you described two other possible goals that you do think are worthy, and would be fulfilled by the same outcome.","msgtype":"m.text"},"ts":1372087401000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"The only benefit is the image stuff, but I thought we already had that particular invocation point long ago...","msgtype":"m.text"},"ts":1372087540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it may have been partly my fault for encouraging you in this direction though. My apologies. That was mostly due to CSP/Fetch convergence which is necessary. (CSP necessitates changes to the Fetch algorithm.)","msgtype":"m.text"},"ts":1372087770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Peanut gallery:","msgtype":"m.text"},"ts":1372087983000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is matches() safe to unprefix?","msgtype":"m.text"},"ts":1372087994000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: implementation of http://dev.w3.org/2006/webapi/selectors-api2/ ?","msgtype":"m.text"},"ts":1372088043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1372088047000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: with relative selectors and all?","msgtype":"m.text"},"ts":1372088097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's pretty interesting; I would have expected find/findAll to happen first","msgtype":"m.text"},"ts":1372088116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That IDL should use different variable names for querySelector and find...","msgtype":"m.text"},"ts":1372088137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We've had mozMatchesSelector since forever","msgtype":"m.text"},"ts":1372088139000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not sure how close it is to the spec","msgtype":"m.text"},"ts":1372088146000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that's way different","msgtype":"m.text"},"ts":1372088152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Want to comment in bug 886308?","msgtype":"m.text"},"ts":1372088225000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1372088238000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ta","msgtype":"m.text"},"ts":1372088252000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"GPHemsley: so in general what you want is to make the minimal number of changes, until there's sort of sufficient build up of reasons for why the organisation of things should change; and to me it's not the case we're there for sniffing","msgtype":"m.text"},"ts":1372088314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess bz meant requiring type for XSLT, as data:text/xml,<?xml-stylesheet href=\"data:text/css,:root{background:lime}\"?><test/> works fine.","msgtype":"m.text"},"ts":1372093321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there a default display for WebVTT voice objects?","msgtype":"m.text"},"ts":1372094708000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"tooltips don't work in a video element currently","msgtype":"m.text"},"ts":1372094720000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"reyre: What do you mean by \"default display\"?","msgtype":"m.text"},"ts":1372097089000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: how should voice cues be displayed by default? should they be displayed? i.e. currently a voice tag is translated to a span with a title attribute that is the voice of the speaker","msgtype":"m.text"},"ts":1372097133000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"which would usually mean you could mouse over and see a tooltip","msgtype":"m.text"},"ts":1372097140000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"is that what we want?","msgtype":"m.text"},"ts":1372097158000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"Ah, I dunno.","msgtype":"m.text"},"ts":1372097168000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or would it make more sense to have something like \"Title: Text\"","msgtype":"m.text"},"ts":1372097174000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"TabAtkins: okay, i'll send an email to the mailing list, maybe we need some discussion about it or something","msgtype":"m.text"},"ts":1372097238000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"That should be easy enough to do, btw, though I'm not sure that the ::cue() syntax allows it right now.  Something like ::cue(voice::before) { content: attr(title) \": \"; }","msgtype":"m.text"},"ts":1372097245000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah an author could do that, but do we want a default display or something ?","msgtype":"m.text"},"ts":1372097280000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"Dunno!","msgtype":"m.text"},"ts":1372097286000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay :)","msgtype":"m.text"},"ts":1372097289000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1372104252000,"senderName":"haelwenn","senderId":"haelwenn@irc"},
{"content":{"body":"i want to add the twitter:domain thing on the wiki can someone do it or can someone create an account for me (username: lanodan)","msgtype":"m.text"},"ts":1372104303000,"senderName":"haelwenn","senderId":"haelwenn@irc"},
{"content":{"body":"are you all AFK/away ?","msgtype":"m.text"},"ts":1372104397000,"senderName":"haelwenn","senderId":"haelwenn@irc"},
{"content":{"body":"i give you a minute","msgtype":"m.text"},"ts":1372104411000,"senderName":"haelwenn","senderId":"haelwenn@irc"},
{"content":{"body":"ok the minute is pass i'll send an email","msgtype":"m.text"},"ts":1372104491000,"senderName":"haelwenn","senderId":"haelwenn@irc"},
{"content":{"body":"I guess there's a bunch of us just reading, I'm new here and don't have access to anything :-)","msgtype":"m.text"},"ts":1372104520000,"senderName":"jorgepedret","senderId":"jorgepedret@irc"},
{"content":{"body":"I believe we're moving to just allowing anything in <meta> anyway, so the wiki will become obsolete.","msgtype":"m.text"},"ts":1372104584000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rafaelw: ping (at your leisure)","msgtype":"m.text"},"ts":1372114299000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hixie: poing.","msgtype":"m.text"},"ts":1372116137000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1372116166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm trying to integrate the template parser thing","msgtype":"m.text"},"ts":1372116176000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i've got some questions :-)","msgtype":"m.text"},"ts":1372116203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure.","msgtype":"m.text"},"ts":1372116220000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"one is, if you have <table><template>text</template</table>, am i missing something, or do the suggested changes not handle the text right?","msgtype":"m.text"},"ts":1372116231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems like you'll end up in table text mode","msgtype":"m.text"},"ts":1372116243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which will then trigger the foster parenting","msgtype":"m.text"},"ts":1372116267000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rather than the template parenting","msgtype":"m.text"},"ts":1372116274000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i think we should probably just define an \"insert\" algorithm that handles the foster and template parenting hacks rather than doing it as now with \"comefrom\"-style programming, fwiw. but that's an editorial thing.)","msgtype":"m.text"},"ts":1372116351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when do you end up in table text mode?","msgtype":"m.text"},"ts":1372116427000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"<table>text","msgtype":"m.text"},"ts":1372116432000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but which token put you in table text mode?","msgtype":"m.text"},"ts":1372116451000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"the \"t\"","msgtype":"m.text"},"ts":1372116456000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, i see, <template> will be the current node in the template case","msgtype":"m.text"},"ts":1372116468000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, interesting","msgtype":"m.text"},"ts":1372116473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh that _is_ interesting","msgtype":"m.text"},"ts":1372116498000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nope. the <template> put you in \"template contents\" mode.","msgtype":"m.text"},"ts":1372116510000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"that means we never get to foster parent text _or_ comment nodes","msgtype":"m.text"},"ts":1372116512000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: yeah, got it","msgtype":"m.text"},"ts":1372116522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: so, next question; is the lack of foreign content support intentional?","msgtype":"m.text"},"ts":1372116543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or is it magically supported some way i can't tell :-)","msgtype":"m.text"},"ts":1372116552000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what looks like isn't supported?","msgtype":"m.text"},"ts":1372116562000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"like, <html><svg><template>","msgtype":"m.text"},"ts":1372116572000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, in that case, it's a <template> in the svg namespace.","msgtype":"m.text"},"ts":1372116603000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Which doesn't do much interesting.","msgtype":"m.text"},"ts":1372116611000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1372116619000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's intentional?","msgtype":"m.text"},"ts":1372116623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We can still make the call that <template> is even more magical and behaves the same in svg & mathml.","msgtype":"m.text"},"ts":1372116629000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I'd say: not addressed yet.","msgtype":"m.text"},"ts":1372116646000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"ok, cool","msgtype":"m.text"},"ts":1372116651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1372116652000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"We discussed this with Tab and kind of concluded that that could be left to the svg/mathml to champion.","msgtype":"m.text"},"ts":1372116669000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"sgtm","msgtype":"m.text"},"ts":1372116686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"svg/mathml *folks*","msgtype":"m.text"},"ts":1372116687000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"Anything else?","msgtype":"m.text"},"ts":1372116691000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I'll review Robin's changes right now.","msgtype":"m.text"},"ts":1372116698000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"not right now, but i'm still looking :-)","msgtype":"m.text"},"ts":1372116703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me know =-)","msgtype":"m.text"},"ts":1372116721000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"i think i might end up doing a separate merge from darobin's, i'm finding too many things i disagree with at an editorial level","msgtype":"m.text"},"ts":1372116732000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. having the template parenting use comefrom-style prose as well as foster parenting doing that makes the whole insertion thing really hard to follow now","msgtype":"m.text"},"ts":1372116755000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i think i should merge it all into one clear algorithm","msgtype":"m.text"},"ts":1372116768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still just going through trying to understand it, right now, though","msgtype":"m.text"},"ts":1372116783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: oh, another question; is there some reason for section 7.2 in https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#creating-an-element-for-a-token ?","msgtype":"m.text"},"ts":1372116919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the bit that talks about ownerDocument?","msgtype":"m.text"},"ts":1372116925000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems like every node will be inserted into another node, which forces the ownerDocument anyway, no?","msgtype":"m.text"},"ts":1372116938000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or is there some way you can end up with orphan nodes?","msgtype":"m.text"},"ts":1372116947000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the issue is that the node needs to be constructed into the correct document.","msgtype":"m.text"},"ts":1372116965000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"If it's constructed in a \"live\" document, even transiently, it can have side effects.","msgtype":"m.text"},"ts":1372116977000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"ah, interesting","msgtype":"m.text"},"ts":1372116985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The goal of template content is that it's inner.","msgtype":"m.text"},"ts":1372116986000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"inert.","msgtype":"m.text"},"ts":1372116989000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1372116996000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rafaelw: Given that I'm an SVG folk, I think I should champion it.  ^_^","msgtype":"m.text"},"ts":1372117433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I definitely know I'd like to be able to use <template> in SVG.","msgtype":"m.text"},"ts":1372117453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"should be simpler for svg than html, no crazy parsing rules to deal with","msgtype":"m.text"},"ts":1372117454000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, except for shunting into a separate doc","msgtype":"m.text"},"ts":1372117477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, those salt-of-the-earth SVG folk. Good people.","msgtype":"m.text"},"ts":1372117482000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"I've always assumed that <template> would work in SVG, happy if you'll hande the details, TabAtkins","msgtype":"m.text"},"ts":1372117491000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"btw did we ever come to a decision on how this works i xml?","msgtype":"m.text"},"ts":1372117503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in","msgtype":"m.text"},"ts":1372117505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Don't think so?","msgtype":"m.text"},"ts":1372117746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, the spec has some to say about XHTML, but not XML in general.","msgtype":"m.text"},"ts":1372117811000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(also XSLT & XPath)","msgtype":"m.text"},"ts":1372117824000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"xhtml and xml are basically the same thing for these purposes","msgtype":"m.text"},"ts":1372117993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the spec doesn't answer this question for you?","msgtype":"m.text"},"ts":1372118080000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"looks like the answer is, yes, we concluded that we were changing the xml parser :-)","msgtype":"m.text"},"ts":1372118167000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to have special rules specefically for nodes in[4~ the HTML namespace","msgtype":"m.text"},"ts":1372118191000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which isn't really new, it's just pushing what we had already a little further","msgtype":"m.text"},"ts":1372118207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yep. this was basically henri's requirement for supporting the whole plan.","msgtype":"m.text"},"ts":1372118228000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"(which i also happen to agree with(.","msgtype":"m.text"},"ts":1372118256000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":").","msgtype":"m.text"},"ts":1372118263000,"senderName":"rafaelw","senderId":"rafaelw@irc"},
{"content":{"body":"given that i am the last one to this party, it having been specced in both webapps and the htmlwg before i'd even begun, i wonder if i'm still the one who's gonna get the blunt end of the criticsm from the xml community...","msgtype":"m.text"},"ts":1372118344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: How can you even ask that question?  Of course you will.","msgtype":"m.text"},"ts":1372118383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]