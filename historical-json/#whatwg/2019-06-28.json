[
{"content":{"body":"The \"await a stable state\" dfn in HTML mentions \"When an algorithm running in parallel is .....\". However, when we use \"await a stable state\" in https://html.spec.whatwg.org/multipage/images.html#updating-the-image-data, that algorithm is not running in parallel at that time right?","msgtype":"m.text"},"ts":1561695155000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Seems like we're running \"synchronously\" on the \"main thread\", and then we queue a microtask to simply resume the algorithm's \"synchronous steps\" later, before going in parallel in step 23","msgtype":"m.text"},"ts":1561695309000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: update the image data is not always invoked synchronously necessarily, though it's really too vague","msgtype":"m.text"},"ts":1561706435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: that is, \"A user agent that obtains images on demand must update the image data of an img element whenever it needs the image data\" could be a thing the compositor thread invokes I suppose?","msgtype":"m.text"},"ts":1561706475000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: (not that the spec defines a compositor)","msgtype":"m.text"},"ts":1561706486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yikes. i see i see","msgtype":"m.text"},"ts":1561706518000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: there's a lot of \"topic: img\" and it could really do with refactoring...","msgtype":"m.text"},"ts":1561706743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: as with other parts of the HTML spec figuring out fact from fiction is the annoying bit","msgtype":"m.text"},"ts":1561706773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hah, that's the impression I get too. makes me want to do something like a feature freeze and a huge rewrite, but ya know, time...","msgtype":"m.text"},"ts":1561706929000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: feature freeze would give us time","msgtype":"m.text"},"ts":1561706985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is true","msgtype":"m.text"},"ts":1561707009000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"JakeA: so \"run module script\" does script + microtasks","msgtype":"m.text"},"ts":1561715039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so if you race the return value of run module script with the equivalent of Promise.resolve().then(), would that work?","msgtype":"m.text"},"ts":1561715078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and reject if the evaluationPromise is not fulfilled by then","msgtype":"m.text"},"ts":1561715109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: By the time our algorithm gets evaluationPromise, any microtasks will already have been processed, right?","msgtype":"m.text"},"ts":1561715384000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So if it's \"pending\", that means it has a top-level await that wasn't simply a microtask","msgtype":"m.text"},"ts":1561715423000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: from what you're telling me that sounds correct, I haven't checked myself","msgtype":"m.text"},"ts":1561715476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess my suggestion would only aid in not checking internal state in that case, but we could spell the equivalency out in a note I suppose","msgtype":"m.text"},"ts":1561715518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the main problem with checking internal state that I see is that JS is more often refactored than you'd think","msgtype":"m.text"},"ts":1561715565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: All we need is a way to query if the script has 'evaluated' (or whatever it's called in a post top-level-await world). But yeah, problematic if that property moves around.","msgtype":"m.text"},"ts":1561715790000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: thanks for the rapid fix! But can you please avoid mentioning folks in commit messages? it can cause useless notification (especially if there are forks)","msgtype":"m.text"},"ts":1561724302000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"GitHub should just stop supporting that at this point","msgtype":"m.text"},"ts":1561725413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Wishful thinking :P","msgtype":"m.text"},"ts":1561731321000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"JakeA: so about the problem in the SW+WebView question https://stackoverflow.com/questions/56719340/fetch-request-immediately-failing-in-service-worker-running-through-android-we, it turned out to be a bug https://bugs.chromium.org/p/chromium/issues/detail?id=977784","msgtype":"m.text"},"ts":1561755279000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"already fixed in 76","msgtype":"m.text"},"ts":1561755411000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes! I only found out later today too. I wonder why I couldn't recreate it","msgtype":"m.text"},"ts":1561756601000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: dunno but reading through the bug comments, seems like maybe thereare some additional conditions needed to reproduce","msgtype":"m.text"},"ts":1561758417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]