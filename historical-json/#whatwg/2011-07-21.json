[
{"content":{"body":"Augh, I need to move off of Aurora.  twice-a-day restarts are killing me.","msgtype":"m.text"},"ts":1311206460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I thought we only updated once a day","msgtype":"m.text"},"ts":1311215820000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"there's no shipped way to save a canvas across page loads and sessions, right?","msgtype":"m.text"},"ts":1311221220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since nobody saves imagedata to web storage?","msgtype":"m.text"},"ts":1311221221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could get an image from the canvas and store that, I suppose","msgtype":"m.text"},"ts":1311221400000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"like the data: URL?","msgtype":"m.text"},"ts":1311221460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess","msgtype":"m.text"},"ts":1311221461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1311221462000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"that's pretty messed up","msgtype":"m.text"},"ts":1311221463000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i guess it would work","msgtype":"m.text"},"ts":1311221464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder what the perf implications would be","msgtype":"m.text"},"ts":1311221465000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if i have two <div>s with similar but not identical content that overlap","msgtype":"m.text"},"ts":1311222900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i want to fade from one to the other","msgtype":"m.text"},"ts":1311222960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a way to do it that doesn't involve the areas that are the same changing coloru at all?","msgtype":"m.text"},"ts":1311222961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: layer one over the other, transition opacity of the top one from 100% to 0%","msgtype":"m.text"},"ts":1311225060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"only works for opaque images","msgtype":"m.text"},"ts":1311225120000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: I assume from Hixie's example that both divs in question have or can be given an opaque background","msgtype":"m.text"},"ts":1311225300000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i assumed the more complex case since i figured he knew how to use opacity :)","msgtype":"m.text"},"ts":1311225360000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm, maybe they overlap but not 100%","msgtype":"m.text"},"ts":1311225420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and he wants to change which is \"on top\"","msgtype":"m.text"},"ts":1311225421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that would be less obvious","msgtype":"m.text"},"ts":1311225422000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh yes","msgtype":"m.text"},"ts":1311227280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"make works again","msgtype":"m.text"},"ts":1311227281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"macports however is still broken","msgtype":"m.text"},"ts":1311227340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man some of these lion changes are quite buggy","msgtype":"m.text"},"ts":1311227760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. the flickering when you switch from one terminal to another if you have different settings for blur for active vs inactive windows","msgtype":"m.text"},"ts":1311227820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or this crazy sheering effect in the screen saver prefs \"shuffle photos\" sheet","msgtype":"m.text"},"ts":1311228000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://trac.webkit.org/browser/trunk/Source/WebCore/dom/TreeWalker.cpp#L139 how does the \"sibling = sibling->previousSibling();\" line matter?","msgtype":"m.text"},"ts":1311228840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"look like sibling will be set by the for loop right after","msgtype":"m.text"},"ts":1311228900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://trac.webkit.org/browser/trunk/Source/WebCore/dom/TreeWalker.cpp#L139 how does the \"sibling = sibling->previousSibling();\" line matter?","msgtype":"m.text"},"ts":1311231600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"look like sibling will be set by the for loop right after","msgtype":"m.text"},"ts":1311231601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, ^^","msgtype":"m.text"},"ts":1311231602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which \"sibling = sibling->previousSibling()\" line?","msgtype":"m.text"},"ts":1311231660000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"163","msgtype":"m.text"},"ts":1311231720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I see at least two lines that say that)","msgtype":"m.text"},"ts":1311231721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that loop is a little mysterious to me","msgtype":"m.text"},"ts":1311231780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"glad I am not the only one","msgtype":"m.text"},"ts":1311231781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the \"NodeFilter::FILTER_REJECT\", nothing updates node","msgtype":"m.text"},"ts":1311231782000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it seems like that would cause an infinite loop","msgtype":"m.text"},"ts":1311231840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"likewise for NodeFilter::FILTER_SKIP in the case where sibling has no children","msgtype":"m.text"},"ts":1311231900000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"maybe break actually breaks out of the loop instead of the switch statement","msgtype":"m.text"},"ts":1311231901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or is intended to","msgtype":"m.text"},"ts":1311231902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or something","msgtype":"m.text"},"ts":1311231903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in both of those cases you want the previousSibling","msgtype":"m.text"},"ts":1311231904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, nevermind","msgtype":"m.text"},"ts":1311231960000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"RefPtr<Node> sibling = node->previousSibling() is the initializer","msgtype":"m.text"},"ts":1311231961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the for loop has no increment step","msgtype":"m.text"},"ts":1311231962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and the loop condition is sibling not being null","msgtype":"m.text"},"ts":1311231963000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so it totally makes sense","msgtype":"m.text"},"ts":1311231964000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but how does line 163 make sense?","msgtype":"m.text"},"ts":1311231965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the for loop overwrites that, no?","msgtype":"m.text"},"ts":1311232020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no","msgtype":"m.text"},"ts":1311232740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: the for loop's assignment to sibling is the initializer, not the increment","msgtype":"m.text"},"ts":1311232741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: so it only sets sibling the first time before entering the loop","msgtype":"m.text"},"ts":1311232742000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ah thanks","msgtype":"m.text"},"ts":1311232800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-treewalker-parentnode","msgtype":"m.text"},"ts":1311240840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Would be nice to auto feed concept-node-filter with whatToShow and filter somehow","msgtype":"m.text"},"ts":1311240841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe besides \"active flag\" I should just define whatToShow and filter as concepts and then say that the attributes on the objects map to those concepts?","msgtype":"m.text"},"ts":1311240900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It has to be something like that; the current way is way verbose","msgtype":"m.text"},"ts":1311240960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1311240961000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"not sure when I'll get to it btw","msgtype":"m.text"},"ts":1311241560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got up a little too early and am now gonna relax for a while :)","msgtype":"m.text"},"ts":1311241620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but feedback welcome","msgtype":"m.text"},"ts":1311241621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"any ideas why Access-Control-Allow-Origin doesn't have subdomain wildcards?","msgtype":"m.text"},"ts":1311241800000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"hmm, maybe I can just convince the server to send the right header for whichever subdomain","msgtype":"m.text"},"ts":1311241801000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"ivan`: the design of CORS assumes that it is applied to dynamic content, so it's OK to require the headers to vary, too. By not allowing wild-carding, the programmer is forced to think more and is assumed to be less likely to declare bad policies","msgtype":"m.text"},"ts":1311244500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ivan`: the result is, though, that CORS really sucks for static resources like images or fonts","msgtype":"m.text"},"ts":1311244501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you want anything more granular than the blanket anything-goes wildcard * that is","msgtype":"m.text"},"ts":1311244502000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"this would become a lot less painful if Apache shipped with a mod_cors","msgtype":"m.text"},"ts":1311244560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: thank you","msgtype":"m.text"},"ts":1311246360000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"I was worried about that header getting cached","msgtype":"m.text"},"ts":1311246420000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"and then later I learned I could also just look at Origin","msgtype":"m.text"},"ts":1311246421000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"anyway, now I see that it doesn't get cached, obviously","msgtype":"m.text"},"ts":1311246600000,"senderName":"ivan`","senderId":"ivan`@irc"},
{"content":{"body":"hi guys","msgtype":"m.text"},"ts":1311262680000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"hej","msgtype":"m.text"},"ts":1311262740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where would I post bug reports about this (i.e. which bugzilla component): http://validator.nu/?doc=http%3A%2F%2Fjsbin.com%2Fetabil%2F3","msgtype":"m.text"},"ts":1311262741000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: do you mean the spelling bug \"Namspaces\"?","msgtype":"m.text"},"ts":1311262920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no, data-[ is a valid data-attribute name","msgtype":"m.text"},"ts":1311262921000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"and so are data-$, data-%, etc.","msgtype":"m.text"},"ts":1311262922000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Oh, I thought you meant that the line numbers were wrong :)","msgtype":"m.text"},"ts":1311262980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"basically anything that is a non-space character in available unicode that is not a control character and not [\\0\"'/=]","msgtype":"m.text"},"ts":1311262981000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: that's not what the spec said last time I looked","msgtype":"m.text"},"ts":1311262982000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks again","msgtype":"m.emote"},"ts":1311263040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#embedding-custom-non-visible-data-with-the-data-*-attributes","msgtype":"m.text"},"ts":1311263041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.w3.org/TR/html5/syntax.html#attributes-0 <-- ?","msgtype":"m.text"},"ts":1311263042000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"\"▶  A custom data attribute is an attribute in no namespace whose name starts with the string \"data-\", has at least one character after the hyphen, is XML-compatible, and contains no characters in the range U+0041 to U+005A (LATIN CAPITAL LETTER A to LATIN CAPITAL LETTER Z).\"","msgtype":"m.text"},"ts":1311263043000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Attribute names are said to be XML-compatible if they match the Name production defined in XML, they contain no U+003A COLON characters (:), and their first three characters are not an ASCII case-insensitive match for the string \"xml\".\"","msgtype":"m.text"},"ts":1311263100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dpy: what Philip` said","msgtype":"m.text"},"ts":1311263101000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What source are you quoting?","msgtype":"m.text"},"ts":1311263102000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"that link?","msgtype":"m.text"},"ts":1311263103000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: http://www.whatwg.org/specs/web-apps/current-work/#embedding-custom-non-visible-data-with-the-data-*-attributes","msgtype":"m.text"},"ts":1311263104000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and http://www.whatwg.org/specs/web-apps/current-work/#xml-compatible","msgtype":"m.text"},"ts":1311263105000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"So the stuff on w3.org is outdated?","msgtype":"m.text"},"ts":1311263160000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Well yes, but more to the point it's the wrong part of the spec","msgtype":"m.text"},"ts":1311263161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.w3.org/TR/html5/elements.html#embedding-custom-non-visible-data-with-the-data-attributes is the relevant part","msgtype":"m.text"},"ts":1311263220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In general anything on TR/ is outdated","msgtype":"m.text"},"ts":1311263221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"which hasn't changed since the obsolete TR/","msgtype":"m.text"},"ts":1311263222000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And, increasingly, it seems that anything on the W3C site will be outdated","msgtype":"m.text"},"ts":1311263223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What does TR stand for if I may ask?","msgtype":"m.text"},"ts":1311263224000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: Technical Reports officially","msgtype":"m.text"},"ts":1311263225000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Temporally Retarded","msgtype":"m.text"},"ts":1311263226000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1311263227000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"TRash","msgtype":"m.text"},"ts":1311263280000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Still, I think it is strange that two parts of the spec (at one point) seems to be ambiguous","msgtype":"m.text"},"ts":1311263340000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"but I probably misread","msgtype":"m.text"},"ts":1311263341000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1311263400000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: you quoted a part about attributes in general. data-* attributes have more specific rules on top of the general stuff","msgtype":"m.text"},"ts":1311263401000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah, the part I read was about the syntax","msgtype":"m.text"},"ts":1311263402000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"The \"Writing HTML documents\" section says the form that attributes take, but you're only allowed to use attributes that are explicitly defined in the semantics","msgtype":"m.text"},"ts":1311263403000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, I understand","msgtype":"m.text"},"ts":1311263404000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"too bad,  would've been nice to be able to write things like:  data-$foo=   or data-foo[0]=","msgtype":"m.text"},"ts":1311263460000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"which is a finite set of attributes plus a particular infinite subset of the ones start with \"data-\"","msgtype":"m.text"},"ts":1311263461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so the attribute \"data-$\" is no different to the attribute \"$$$\"","msgtype":"m.text"},"ts":1311263520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(in terms of conformance, at least)","msgtype":"m.text"},"ts":1311263521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(unless I'm mistaken)","msgtype":"m.text"},"ts":1311263522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I fixed the typo in version control. Will deploy at some point but not now.","msgtype":"m.text"},"ts":1311263700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"okay..   show set [:ANY:] on unicode.org was not a good idea","msgtype":"m.text"},"ts":1311264540000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: Hah, indeed.","msgtype":"m.text"},"ts":1311265320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Please show me 10000 characters.\"","msgtype":"m.text"},"ts":1311265321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Why is data-a:0  not a valid attribute name?","msgtype":"m.text"},"ts":1311265560000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Because : makes the name not xml-compatible.","msgtype":"m.text"},"ts":1311265561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Philip` gave the description of \"xml-compatiable\" from the spec about 45min ago.)","msgtype":"m.text"},"ts":1311265620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, the html specs send me to the #NT-Name anchor of XML","msgtype":"m.text"},"ts":1311265621000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Just do data-a_0","msgtype":"m.text"},"ts":1311265622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and a:0 is a valid name according to that production","msgtype":"m.text"},"ts":1311265623000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#xml-compatible","msgtype":"m.text"},"ts":1311265680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it even explicitly states in text: \"author should not use the colon in XML names except for namespace purposes, but XML processors must accept the colon as a name character\"","msgtype":"m.text"},"ts":1311265681000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"\"... they contain no U+003A COLON characters (:)\"","msgtype":"m.text"},"ts":1311265682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(from #xml-compatible)","msgtype":"m.text"},"ts":1311265683000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I stand corrected","msgtype":"m.text"},"ts":1311265740000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"I overlooked that by clicking through","msgtype":"m.text"},"ts":1311265741000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"seems that some people are trying very hard to not try to put indexed values in a data-attribute name","msgtype":"m.text"},"ts":1311265742000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"and that's exactly what I would like to be able to do","msgtype":"m.text"},"ts":1311265800000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"No, it's an incidental consequence of making the attribute xml-compatible.","msgtype":"m.text"},"ts":1311265801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What's the situation where you're trying to do that?","msgtype":"m.text"},"ts":1311265802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Use an underscore.","msgtype":"m.text"},"ts":1311265803000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the problem with the underscore is that it's typically also allowed in names where I don't expected indexed values","msgtype":"m.text"},"ts":1311265860000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"my software would not be able to distinguish between them","msgtype":"m.text"},"ts":1311265861000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"I think the usual assumption for structured data is that you can do it with JSON, like data-whatever=\"[1,2,3]\" instead of data-whatever[0]=\"1\" ...","msgtype":"m.text"},"ts":1311265862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Make those names use - instead.","msgtype":"m.text"},"ts":1311265863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: yes, but that get's hairy when we're not simply talking 1, 2 3","msgtype":"m.text"},"ts":1311265864000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"wonders what is not hairy munging text from an attibute name but is hairy parsing its value","msgtype":"m.emote"},"ts":1311265920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have three independent pieces of JSON, which are much easier to read when stored in three attributes than as a single JSON list crammed into a single attribute","msgtype":"m.text"},"ts":1311266040000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"* Microsoft will be submitting tests for SCA (Structured Cloning Algorithm, Forms, Async Script, Drag & Drop and Sandbox).","msgtype":"m.text"},"ts":1311266041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"better set aside some reviewing time","msgtype":"m.text"},"ts":1311266042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Really [[1,2,3], [2,,5,6], [7,8,9]] doesn't seem that hard to read","msgtype":"m.text"},"ts":1311266043000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And it is even easy to parse","msgtype":"m.text"},"ts":1311266100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: now replace each of the characters by a nested JSON structure","msgtype":"m.text"},"ts":1311266101000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: If you have nested structures anyway, having an array of three of them doesn't seem at all bad compared to having three seperately","msgtype":"m.text"},"ts":1311266102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"like: [{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"},{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"},{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"},{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"},{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"}]","msgtype":"m.text"},"ts":1311266160000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"and compare this with:","msgtype":"m.text"},"ts":1311266161000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"foo[0]={\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"}","msgtype":"m.text"},"ts":1311266162000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"foo[1]={\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"}","msgtype":"m.text"},"ts":1311266163000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"+ '    '","msgtype":"m.text"},"ts":1311266164000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"jgraham: well, it is if you keep in mind that it is likely for one of these to change and you need to resolve conflicts","msgtype":"m.text"},"ts":1311266220000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Well if you really care you can write {0:{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"},\\n1:{\"foo\":[\"X\",\"Y\",\"Z\"],\"bar\":[...]\"}}","msgtype":"m.text"},"ts":1311266221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If your users aren't experiences programmers, I'd rather have them solve 2 attributes that are in conflict, than bore them with the details of JSON","msgtype":"m.text"},"ts":1311266280000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"I am having great difficulty in seeing how having three attributes containing JSON is easier than having one attribute contaning JSON","msgtype":"m.text"},"ts":1311266281000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I expect my users to understand html5, not JSON","msgtype":"m.text"},"ts":1311266340000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"now they are required to understand JSON","msgtype":"m.text"},"ts":1311266341000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"to solve a merge conflict","msgtype":"m.text"},"ts":1311266342000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"I totally don't understand how they could not need to understand JSON if the data they are merging is in JSON","msgtype":"m.text"},"ts":1311266400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"plus I liked the idea: one data-attribute = one property","msgtype":"m.text"},"ts":1311266401000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"not: some data attributes define multiple properties","msgtype":"m.text"},"ts":1311266402000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: What happens if your data structure ends up nesting more deeply?","msgtype":"m.text"},"ts":1311266460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well you can do it your way if you like. But you have to use syntax that doesn't conflict with XML","msgtype":"m.text"},"ts":1311266461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you don't need to understand the details of a syntax to point out which line you want to keep and which you don't","msgtype":"m.text"},"ts":1311266462000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"like: it's easier to read something, than it is to write it","msgtype":"m.text"},"ts":1311266463000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"TabAtkins: they are always singly lined, and should not get too complicated (otherwise something else is probably smelly)","msgtype":"m.text"},"ts":1311266520000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"hopes you are not planning to use this for anything important","msgtype":"m.emote"},"ts":1311266521000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because expecting people to edit data in a format they don't understand","msgtype":"m.text"},"ts":1311266522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's not gonna work","msgtype":"m.text"},"ts":1311266523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm obviously not able to do much about the status quo...   I'm clearly not allowed to do it the way I like...","msgtype":"m.text"},"ts":1311266580000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"So anyway, point is, you're free to embed things however you like if you use xml-compatible names (which happens to exclude some of the more natural ways to write what you want).  It may be a better idea to just embed json, but whatever.","msgtype":"m.text"},"ts":1311266581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I agree with you","msgtype":"m.text"},"ts":1311266582000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Though I don't like it, it seems the only viable alternative, given the great lengths the specification has gone to prevent what I want to do","msgtype":"m.text"},"ts":1311266640000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: You're making it sound like the spec went out of its way to prevent you from making it easy to solve your case.  It didn't.  It just said that custom attributes have to obey the same syntax rules as every other attribute in the language.","msgtype":"m.text"},"ts":1311266700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I would have rather seen a more liberal approach: You can use anything, except these...","msgtype":"m.text"},"ts":1311266701000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Rather then: you can't use anything except these...","msgtype":"m.text"},"ts":1311266702000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"then=than","msgtype":"m.text"},"ts":1311266703000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"If you get an identical set of allowed characters either way, it seems irrelevant whether the set is specified additively rather than subtractively.","msgtype":"m.text"},"ts":1311266760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't take it personal. I'm feeling it as though it was a partical design choice. I may not agree with it, but it's fact now, so I might just as wel accept the situation","msgtype":"m.text"},"ts":1311266761000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"TabAtkins: \" It just said that custom attributes have to obey the same syntax rules as every other attribute in the language.\" <-- this is not true. non-data HTML5 attributes are much less restricted","msgtype":"m.text"},"ts":1311266820000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Huh?  How so?","msgtype":"m.text"},"ts":1311266880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Non-data attributes are entirely restricted because you can't use any of them at all (except the finite set listed in the spec)","msgtype":"m.text"},"ts":1311266881000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So any future attribute can still be written like: foo[2]=   and current parsers need to accept it","msgtype":"m.text"},"ts":1311266882000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"That's only possible in the case that the spec changes the rules and allows a non-XML-compatible attribute name.","msgtype":"m.text"},"ts":1311266883000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: I'm talking about restrictions toward the future","msgtype":"m.text"},"ts":1311266884000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"TabAtkins: Where do you read that a non-data attribute must be xml compatible","msgtype":"m.text"},"ts":1311266940000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1311266941000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"It wouldn't make much sense for the spec to impose restrictions on itself, given that it's the spec and can just change those restrictions later.","msgtype":"m.text"},"ts":1311266942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dpy: Every attribute is XML-compatible.","msgtype":"m.text"},"ts":1311266943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dpy: Also, informally, keeping the language such that it generates the same DOM in HTML and XHTML as much as possible has been a strong goal.","msgtype":"m.text"},"ts":1311267000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Parsers accept data-foo[2]=\"...\" exactly the same way as foo[2]=\"...\", and expose it as e.dataset[\"foo[2]\"] etc - the only restrictions are for conformance (to discourage dangerous or XML-incompatible syntax))","msgtype":"m.text"},"ts":1311267001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/)//","msgtype":"m.text"},"ts":1311267002000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I should I read that?  That I can use it safely, or that I can't?","msgtype":"m.text"},"ts":1311267120000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"You, as an author, are required to not do it.","msgtype":"m.text"},"ts":1311267121000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Browsers are required to accept to it.","msgtype":"m.text"},"ts":1311267122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/to it/it/","msgtype":"m.text"},"ts":1311267123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't want to have a broken app, if something in the spec changes and the browsers no longer accept my data-attributes","msgtype":"m.text"},"ts":1311267180000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"the usual contradiction. heh","msgtype":"m.text"},"ts":1311267181000,"senderName":"zewt-","senderId":"zewt-@irc"},
{"content":{"body":"(Because every possible sequence of bits is an HTML document, though possibly an invalid one, and must have rules on how to process it.)","msgtype":"m.text"},"ts":1311267182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, this is the old: be strict in what you produce, be unstrict in what you accept","msgtype":"m.text"},"ts":1311267240000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Is it possible to insert a link <a href=\"something\">..</a> with css? When I do it with :after {content: 'somehtml'} it displays as text","msgtype":"m.text"},"ts":1311267241000,"senderName":"oal","senderId":"oal@irc"},
{"content":{"body":"Basically, yeah.","msgtype":"m.text"},"ts":1311267242000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oal, only in Opera","msgtype":"m.text"},"ts":1311267243000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oal: No.  Linking is an HTML behavior that can't be controlled with CSS.","msgtype":"m.text"},"ts":1311267244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And Prince, I think","msgtype":"m.text"},"ts":1311267300000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ok :/","msgtype":"m.text"},"ts":1311267301000,"senderName":"oal","senderId":"oal@irc"},
{"content":{"body":"If it was argued sufficiently convincingly that allowing non-XML-compatible characters in attribute names would be the best solution to some use cases, and if people were in a fed-up-with-XML mood and didn't mind abandoning the pretence of supporting it as an equal to text/html, then the conformance requirements could be relaxed and nothing else would change","msgtype":"m.text"},"ts":1311267420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hurray!","msgtype":"m.text"},"ts":1311267421000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"(since browsers will already parse it in the expected way)","msgtype":"m.text"},"ts":1311267422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Middle dot to the rescue:","msgtype":"m.text"},"ts":1311267423000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"data-foo·0=\"bar\"","msgtype":"m.text"},"ts":1311267424000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"is allowed","msgtype":"m.text"},"ts":1311267425000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"That's disgusting :-p","msgtype":"m.text"},"ts":1311267426000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gross","msgtype":"m.text"},"ts":1311267427000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"now don't you guys dare take this away from me!","msgtype":"m.text"},"ts":1311267428000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1311267429000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"It seems bad to use non-ascii characters in an attribute, since you can't type them on your keyboard without an OS escape sequence, but whatever.  ^_^","msgtype":"m.text"},"ts":1311267430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, retrieving the attribute will be more difficult.","msgtype":"m.text"},"ts":1311267480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mm, can you use entities in attribute names?","msgtype":"m.text"},"ts":1311267481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: they aren't really meant to be typed, so people can't accidentally type them.. which may even be a good thing","msgtype":"m.text"},"ts":1311267482000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Ms2ger: Don't think so.","msgtype":"m.text"},"ts":1311267483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dpy: I thought you wanted inexperienced people to edit these things by hand","msgtype":"m.text"},"ts":1311267540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip: read: delete stuff","msgtype":"m.text"},"ts":1311267541000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Philip`: but it may be a bad idea tomorrow morning","msgtype":"m.text"},"ts":1311267542000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Ms2ger: No but you could always write <script>document.write('<div data-foo\\xb7')</script>=\"...data...\"></div> if you want to avoid non-ASCII source","msgtype":"m.text"},"ts":1311267600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"glares at Philip` ","msgtype":"m.emote"},"ts":1311267660000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oops, I forgot the 0 in there","msgtype":"m.text"},"ts":1311267720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham, congrats on the labs release!","msgtype":"m.text"},"ts":1311267721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://plus.google.com/112095156983892490612/posts/EMADdvHSRbH","msgtype":"m.text"},"ts":1311268080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotta love the rhetoric in the comments","msgtype":"m.text"},"ts":1311268081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm surprised.  Julian's suggestion seems reasonable.","msgtype":"m.text"},"ts":1311268200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Okay, maybe it's just best to go with   data-foo_0, foo.bar_0, foo.bar.xyz_0  and just prohibit my users to use the underscore _  (they'll just have to use the full stop as a delimiter)","msgtype":"m.text"},"ts":1311268201000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"dpy: Or the dash.","msgtype":"m.text"},"ts":1311268260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the dash is interpreted","msgtype":"m.text"},"ts":1311268261000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"His suggestion is basically what is being done, no?","msgtype":"m.text"},"ts":1311268262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bunch of new features do not appear in the W3C draft","msgtype":"m.text"},"ts":1311268263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data-foo-0 becomes foo0, right?","msgtype":"m.text"},"ts":1311268264000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Only if you use the dataSet accessor.","msgtype":"m.text"},"ts":1311268265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"dataset.foo0","msgtype":"m.text"},"ts":1311268266000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"just as data-foo-bar becomes fooBar","msgtype":"m.text"},"ts":1311268267000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"But if you're using dataSet, you can't access anything with a period in it.","msgtype":"m.text"},"ts":1311268320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"huh?","msgtype":"m.text"},"ts":1311268321000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"checks","msgtype":"m.emote"},"ts":1311268322000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"Or rather, you'd need to access it like an array.  dataSet['foo.bar']","msgtype":"m.text"},"ts":1311268323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though, actually... let me check the spec real quick about data-foo_0","msgtype":"m.text"},"ts":1311268380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(dataset, not dataSet)","msgtype":"m.text"},"ts":1311268381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"dpy: No, data-foo-0 is not changed.","msgtype":"m.text"},"ts":1311268382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1311268383000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's still dataset['foo-0']","msgtype":"m.text"},"ts":1311268384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nods to dglazkov ","msgtype":"m.emote"},"ts":1311268440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Or rather, data-foo_0 is still dataset['foo_0']","msgtype":"m.text"},"ts":1311268441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, both.","msgtype":"m.text"},"ts":1311268442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ANYWAY, you only drop the dash if the following character is a lowercase letter (and then you uppercase that letter)","msgtype":"m.text"},"ts":1311268500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1311268501000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"I'll report that back to my team","msgtype":"m.text"},"ts":1311268502000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"annevk: Not really.  The HTMLWG hasn't branched properly, it's forced Hixie to branch and then keep the branch in line with trunk.","msgtype":"m.text"},"ts":1311268560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: tnx","msgtype":"m.text"},"ts":1311268561000,"senderName":"dpy","senderId":"dpy@irc"},
{"content":{"body":"If we did a proper branch, a lot would be easier (and the HTMLWG branch would be immediately obsolete).","msgtype":"m.text"},"ts":1311268562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and keep maintaining it as Julian suggests?","msgtype":"m.text"},"ts":1311268620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds like a bad idea","msgtype":"m.text"},"ts":1311268621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If the HTMLWG is maintaining a frozen branch, it's not really important.","msgtype":"m.text"},"ts":1311268622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't see how it would be better","msgtype":"m.text"},"ts":1311268680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Less work for Hixie, more time to do something useful?","msgtype":"m.text"},"ts":1311268800000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was just typing that.","msgtype":"m.text"},"ts":1311268801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"finally beat TabAtkins to something","msgtype":"m.emote"},"ts":1311268860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: regarding rhetoric, Leigh Klotz is an XForms guy, right?","msgtype":"m.text"},"ts":1311268920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"think so, yes","msgtype":"m.text"},"ts":1311268921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In other words, \"someone who's bitter about the fact that browsers are the only relevant user of HTML\".","msgtype":"m.text"},"ts":1311268980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"guesses one significant danger is more time being wasted by people who read and/or implement the W3C version of the spec without realising it's obsolete","msgtype":"m.emote"},"ts":1311268981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, it does not seem like a smart thing","msgtype":"m.text"},"ts":1311269040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to let that run wild","msgtype":"m.text"},"ts":1311269041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The alternative is dealing with the HTMLWG continually trying to an LC.","msgtype":"m.text"},"ts":1311269042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if the W3C wants to move on they should focus more on tests and less on process","msgtype":"m.text"},"ts":1311269100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or change the process","msgtype":"m.text"},"ts":1311269101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tests and implementations are the bottleneck to move HTML5 forward there, nothing else","msgtype":"m.text"},"ts":1311269102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they are always the bottleneck","msgtype":"m.text"},"ts":1311269103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Weren't they going to hire people to write tests from the HTML5 T-shirt sales?","msgtype":"m.text"},"ts":1311269160000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well they said they would use them to fund testsuite development","msgtype":"m.text"},"ts":1311269220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not exactly how","msgtype":"m.text"},"ts":1311269221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe nobody has bought them since they're waiting for the Living Standard T-shirts","msgtype":"m.text"},"ts":1311269222000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So maybe they are saving it all for a big testsuite-development party","msgtype":"m.text"},"ts":1311269223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"With champagne and caviar","msgtype":"m.text"},"ts":1311269224000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"damnit","msgtype":"m.text"},"ts":1311269280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this stuff requires subsubsteps","msgtype":"m.text"},"ts":1311269281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham is gonna kill me","msgtype":"m.text"},"ts":1311269282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You should do it like ES","msgtype":"m.text"},"ts":1311269283000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's really better :)","msgtype":"m.text"},"ts":1311269284000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do they do break?","msgtype":"m.text"},"ts":1311269340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't recall. But usually you can avoid it if you structure the loop correctly","msgtype":"m.text"},"ts":1311269341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, when we go to PR?","msgtype":"m.text"},"ts":1311269342000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"example:","msgtype":"m.text"},"ts":1311269400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: Any earlier and we wouldn't be able to afford real champagne","msgtype":"m.text"},"ts":1311269401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"  while node is not null","msgtype":"m.text"},"ts":1311269402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    sibling = node nextSibling/previousSibling","msgtype":"m.text"},"ts":1311269403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"    if sibling","msgtype":"m.text"},"ts":1311269404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"      node = sibling","msgtype":"m.text"},"ts":1311269405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"      break (back to outer loop)","msgtype":"m.text"},"ts":1311269406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Split it into a separate function and do a 'return'?","msgtype":"m.text"},"ts":1311269407000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"while node is not null and (random boolean) is true","msgtype":"m.text"},"ts":1311269408000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"... (random boolean) = false","msgtype":"m.text"},"ts":1311269409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"eww","msgtype":"m.text"},"ts":1311269460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1311269461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well anything is better than \"and terminate these sub sub steps\"","msgtype":"m.text"},"ts":1311269462000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"goto","msgtype":"m.text"},"ts":1311269463000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"break;","msgtype":"m.text"},"ts":1311269464000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well annevk uses goto as well","msgtype":"m.text"},"ts":1311269465000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well, break with label","msgtype":"m.text"},"ts":1311269466000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's annoying that C++ lack break with label","msgtype":"m.text"},"ts":1311269520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but spec English doesn't have to lack break with label","msgtype":"m.text"},"ts":1311269521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has occasionally done \"for (i = 0; i < 100; ++i) { for (j = 0; j < 100; ++j) { ... if (whatever) i = 100; /* break out of outer loop */ } }\"","msgtype":"m.emote"},"ts":1311269522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but then felt unbearably dirty)","msgtype":"m.text"},"ts":1311269523000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And you should","msgtype":"m.text"},"ts":1311269524000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(and usually rewrote it as function with 'return' since that's the least nasty unstructured control flow statement)","msgtype":"m.text"},"ts":1311269580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"separate algorithms work I guess, but it seems so pointless","msgtype":"m.text"},"ts":1311269760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or maybe I should go the Ms2ger route","msgtype":"m.text"},"ts":1311269820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with a silly variable","msgtype":"m.text"},"ts":1311269821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Silly? That's me :)","msgtype":"m.text"},"ts":1311269822000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh wait, that does not work","msgtype":"m.text"},"ts":1311269823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well i would have to check it in several other places too, that would suck","msgtype":"m.text"},"ts":1311269880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man this sucks","msgtype":"m.text"},"ts":1311270060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because I can http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-treewalker-firstchild","msgtype":"m.text"},"ts":1311271800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1311272940000,"senderName":"nmadzharov","senderId":"nmadzharov@irc"},
{"content":{"body":"is  handleEvent( Event evt) { if(evt.isMouseEvent()) MouseEvent me = (MouseEvent) evt; } a common way to implement the function?","msgtype":"m.text"},"ts":1311273120000,"senderName":"nmadzharov","senderId":"nmadzharov@irc"},
{"content":{"body":"I presume you're talking about something other than JS.","msgtype":"m.text"},"ts":1311273540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://trevorparscal.com/stuff/msiejs/msiejs-diagram.png","msgtype":"m.text"},"ts":1311274080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My favorite part is the \"Murderer\".","msgtype":"m.text"},"ts":1311274260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1311274261000,"senderName":"nmadzharov","senderId":"nmadzharov@irc"},
{"content":{"body":"HTML5 job in close to Boston,MA? Relocation expenses paid. Very high pay. Opportunity to work on  networking web app. PM me if you're interested.","msgtype":"m.text"},"ts":1311275220000,"senderName":"versatiletech","senderId":"versatiletech@irc"},
{"content":{"body":"Ooh, got a coons patch working!","msgtype":"m.text"},"ts":1311276180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.xanthir.com/etc/scaling-algorithms.html","msgtype":"m.text"},"ts":1311276181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: seems like http://dev.w3.org/csswg/cssom-view/#dom-document-caretpositionfrompoint mentions still caretRange which is already removed from the interface","msgtype":"m.text"},"ts":1311276420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, http://lists.w3.org/Archives/Public/www-style/2011Jun/0604.html","msgtype":"m.text"},"ts":1311276660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1311277080000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: did I capture this right? http://wiki.whatwg.org/wiki/Component_Model_Use_Cases#Rendering_Form_Controls_with_SVG","msgtype":"m.text"},"ts":1311279900000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: you know the css in html is normative, right? :-)","msgtype":"m.text"},"ts":1311280380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov, looks good to me!","msgtype":"m.text"},"ts":1311280560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1311280620000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: If I did, I wouldn't've said the opposite.","msgtype":"m.text"},"ts":1311280680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"XForms extensions supports svg styled form controls :p","msgtype":"m.text"},"ts":1311280681000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"dglazkov: those use cases look much better than the old use cases document","msgtype":"m.text"},"ts":1311280740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"s/extensions/extension/","msgtype":"m.text"},"ts":1311280741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though it is hard to see how the \"Desirable Properties\" follow from the use cases","msgtype":"m.text"},"ts":1311280742000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"dglazkov: it would be nice if the \"Desirable Properties\" section said which use case requires which property and why, or better yet, list under each use case what this specific use case implies about desirable properties for a solution","msgtype":"m.text"},"ts":1311280920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hmm.  Is it possible to add a function to Number that operates on the value?","msgtype":"m.text"},"ts":1311284040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Number.prototype.add(that) { return this+that; } doesn't work.","msgtype":"m.text"},"ts":1311284041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: this is a Number object in that situation","msgtype":"m.text"},"ts":1311284100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: this.valueOf() gives you the Number primitive","msgtype":"m.text"},"ts":1311284160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm, I'm getting a screwy result here that's probably unrelated...","msgtype":"m.text"},"ts":1311284280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh jeez, I see what I did wrong.  Never mind.","msgtype":"m.text"},"ts":1311284640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hi","msgtype":"m.text"},"ts":1311284700000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"Iam still reading webdev books but I can't any discussion about integration concepts of HTML5 standards, where I can find that stuff? thx","msgtype":"m.text"},"ts":1311284820000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"+find","msgtype":"m.text"},"ts":1311284821000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"What do you mean?","msgtype":"m.text"},"ts":1311284822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Tab: information integration from old websites maybe","msgtype":"m.text"},"ts":1311284880000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"I still don't understand what you mean.  Could you rephrase in different words?","msgtype":"m.text"},"ts":1311285000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1311285060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with Lion my connection is dropped way more often","msgtype":"m.text"},"ts":1311285061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bah","msgtype":"m.text"},"ts":1311285062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IRC connection at least","msgtype":"m.text"},"ts":1311285063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Tab: I use to work with html5 but Iam not so experienced with it, still reading books, now friends ask me how those old html4 / xhtml sites will be integrated to the new html5 type of website.","msgtype":"m.text"},"ts":1311285120000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"metron, you can just add features incrementally.  HTML5 features work in HTML4 pages and vice versa.","msgtype":"m.text"},"ts":1311285240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Tab: just by doing all changes manually? just renaming elements and stuff like that?","msgtype":"m.text"},"ts":1311285241000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"It's all totally compatible.","msgtype":"m.text"},"ts":1311285242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Use whatever features are useful to you, you don't have to rewrite your pages if you don't want to.","msgtype":"m.text"},"ts":1311285243000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Aryeh: ok, hmm","msgtype":"m.text"},"ts":1311285300000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"see metron html5 aims to be backwards compatible with existing content","msgtype":"m.text"},"ts":1311285301000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"html5 acknoledges previously existing elements even when those elements are no longer in html5","msgtype":"m.text"},"ts":1311285360000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"With HTML5, anything goes. Uppercase, lowercase, quoted, unquoted, self-closing or not; its entirely up to you.","msgtype":"m.text"},"ts":1311285361000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"i'm just getting started with it, but so far it sure is a beauty to work with :D","msgtype":"m.text"},"ts":1311285420000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"the easisest way to start switching to html5, change doctype to <!DOCTYPE HTML5>","msgtype":"m.text"},"ts":1311285480000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"D^mien: k","msgtype":"m.text"},"ts":1311285481000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1311285482000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"A good book that got me started was HTML5 for webdesigners by Jeremy Keith","msgtype":"m.text"},"ts":1311285483000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"and find a good validator/linter","msgtype":"m.text"},"ts":1311285540000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"I think I'll use netbeans, it was very useful for me with php5.3","msgtype":"m.text"},"ts":1311285600000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"euh D^mien","msgtype":"m.text"},"ts":1311285660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doctype is <!DOCTYPE HTML>","msgtype":"m.text"},"ts":1311285661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"D^mien: good to know about, thx","msgtype":"m.text"},"ts":1311285662000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"no 5","msgtype":"m.text"},"ts":1311285663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha ya","msgtype":"m.text"},"ts":1311285664000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"duh","msgtype":"m.text"},"ts":1311285665000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1311285666000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"^^","msgtype":"m.text"},"ts":1311285667000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"thanks for clearing that up, forgot no5","msgtype":"m.text"},"ts":1311285668000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1311285669000,"senderName":"D^mien","senderId":"D^mien@irc"},
{"content":{"body":"Is it just me or is Daring Fireball reading like Fox News when it comes to Google?","msgtype":"m.text"},"ts":1311285780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"D^mien: Maybe I should read that book you suggested","msgtype":"m.text"},"ts":1311285840000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"shit","msgtype":"m.text"},"ts":1311286260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"flamed on G+","msgtype":"m.text"},"ts":1311286261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"never did that on Facebook","msgtype":"m.text"},"ts":1311286262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You can edit your posts, right?","msgtype":"m.text"},"ts":1311286440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: d'oh!","msgtype":"m.text"},"ts":1311286560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: url!","msgtype":"m.text"},"ts":1311286561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"grabs popcorn","msgtype":"m.emote"},"ts":1311286562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: sounds good!","msgtype":"m.text"},"ts":1311286620000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"not that bad","msgtype":"m.text"},"ts":1311286920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://plus.google.com/112095156983892490612/posts/EMADdvHSRbH","msgtype":"m.text"},"ts":1311286921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Julian brought his splitting argument up again, I sneered about HTTP going so fast","msgtype":"m.text"},"ts":1311286922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(HTTP is now split into 7-10 drafts or so)","msgtype":"m.text"},"ts":1311286980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(a giant mess if you ask me, I can never find what I'm looking for)","msgtype":"m.text"},"ts":1311286981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTTP is a disaster","msgtype":"m.text"},"ts":1311286982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I like how that RDF thread goes on again about how the toolchain will save you","msgtype":"m.text"},"ts":1311287100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"RDF equally a disaster","msgtype":"m.text"},"ts":1311287160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"RDF might even be worse","msgtype":"m.text"},"ts":1311287161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Web developers hardly use tools","msgtype":"m.text"},"ts":1311287162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And pretty much requiring them to use tools will just mean less people develop, which seems bad","msgtype":"m.text"},"ts":1311287163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what i like about the rdf tool thing is the way the dude was like \"write a script? hello no, you'd write sparql instead!\"","msgtype":"m.text"},"ts":1311287164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how is that not a script!","msgtype":"m.text"},"ts":1311287165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's because the standards are so bad that you have to implement a whole browser before you can start making tools.","msgtype":"m.text"},"ts":1311287220000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Most web authors use tools of some kind, like CMSes.","msgtype":"m.text"},"ts":1311287221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"people totally use tools all the time","msgtype":"m.text"},"ts":1311287222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's like your server-side code IDE has to integrate the whole client side too","msgtype":"m.text"},"ts":1311287223000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"but you cannot rely on a tool to save a technology that is too complicated to hang-author","msgtype":"m.text"},"ts":1311287224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hand","msgtype":"m.text"},"ts":1311287225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"web developers hardly use tools because largely the tools suck, heh","msgtype":"m.text"},"ts":1311287226000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"works with xml","msgtype":"m.text"},"ts":1311287227000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"been getting better lately but at a snail's pace and still far from a mature environment","msgtype":"m.text"},"ts":1311287280000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"nobody touches multi-megabyte XML files by hand","msgtype":"m.text"},"ts":1311287281000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"and XML has been a failure on the web :-)","msgtype":"m.text"},"ts":1311287282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you could have stopped at \"failure\"","msgtype":"m.text"},"ts":1311287283000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but not a failure as technology in general","msgtype":"m.text"},"ts":1311287284000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"RDF is certainly successful, though, even if it's not successful on the public web.","msgtype":"m.text"},"ts":1311287285000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"zewt, there are perfectly fine XML parsers and yet people seem to do it with regexp every now and then","msgtype":"m.text"},"ts":1311287286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"crazy people","msgtype":"m.text"},"ts":1311287287000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"annevk: unfortunately, you can't spec away incompetence","msgtype":"m.text"},"ts":1311287288000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1311287340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you just have to take that into account","msgtype":"m.text"},"ts":1311287341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can. but that means your spec has to include fail-fast, fail-hard provisions. which may be good for quality, but usually not for adoption.","msgtype":"m.text"},"ts":1311287342000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"no it doesn't","msgtype":"m.text"},"ts":1311287400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSS is a great example","msgtype":"m.text"},"ts":1311287401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it handles typos fine, without hard-failure","msgtype":"m.text"},"ts":1311287402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"only local failure","msgtype":"m.text"},"ts":1311287460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which leads/has lead to different browser behavior depending on how it dealt with your typo","msgtype":"m.text"},"ts":1311287461000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"I've been trying to get people to call this 'argumentum ad adminiculum'","msgtype":"m.text"},"ts":1311287462000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"because it's a fallacy that comes up over and over and over again","msgtype":"m.text"},"ts":1311287520000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"\"it's ok that it's crazy-complex, because people don't author things, tools do\"","msgtype":"m.text"},"ts":1311287521000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"The_8472: CSS's typo recovery is very well-defined.  Differing behavior is bugs.","msgtype":"m.text"},"ts":1311287522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, tell that to those years of browser hacks relying on inconsistent handling.","msgtype":"m.text"},"ts":1311287523000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"cool, Norm Walsh shows QR codes on printed pages","msgtype":"m.text"},"ts":1311287580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober: i usually reply \"and who authors the tools?\"","msgtype":"m.text"},"ts":1311287581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: exactly. it's turtles all the way down","msgtype":"m.text"},"ts":1311287582000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: of course, even for formats which are always output by tools (binary formats), you still have people writing tools that do it wrong, heh","msgtype":"m.text"},"ts":1311287583000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not sure if QR codes are still cool, but it's definitely better than URLs users have to type over","msgtype":"m.text"},"ts":1311287584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The_8472: that's the cause of a bad spec, not a necessary feature of error recovery","msgtype":"m.text"},"ts":1311287585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"QR is totally last year","msgtype":"m.text"},"ts":1311287586000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"annevk: were qr codes ever cool?","msgtype":"m.text"},"ts":1311287587000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"The_8472: Um, they're still bugs.  I don't see what point you're trying to make.","msgtype":"m.text"},"ts":1311287588000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(parsing AVIs in the wild? good luck)","msgtype":"m.text"},"ts":1311287589000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: true, true","msgtype":"m.text"},"ts":1311287590000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"of course, that was never really a well-specified format to begin with","msgtype":"m.text"},"ts":1311287640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins, the point? that browser hacks wouldn't have existed if browsers were fail-hard and we might have seen actual feature-detecting emerging much earlier.","msgtype":"m.text"},"ts":1311287641000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"The_8472: People would've just done browser hacks based upon other nbugs.","msgtype":"m.text"},"ts":1311287700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*bugs","msgtype":"m.text"},"ts":1311287701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dude, you kidding?  Fail-hard CSS would have frozen the technology very early on.  Local-fail is a necessary part of how CSS allows new tech.","msgtype":"m.text"},"ts":1311287702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think java is a good example for tools alleviating *some* complexity. you can write java without IDEs. but having one to back you up is a huge boon if you have to work with other people's code. it being very computer-friendly (static typing allowing lots of analysis) helps of course","msgtype":"m.text"},"ts":1311287703000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"TabAtkins, i'm talking about syntax. not about permitted values.","msgtype":"m.text"},"ts":1311287760000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"They're one and the same.  An unknown property is the same as a syntax error.","msgtype":"m.text"},"ts":1311287761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"permitted values is just a matter of well-defined forwards-compatibility","msgtype":"m.text"},"ts":1311287762000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"writing java without an IDE is a fast path to migraines","msgtype":"m.text"},"ts":1311287763000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(but only because java code tends to be split into 10x as many files as necessary, often in directory structures ten levels deep)","msgtype":"m.text"},"ts":1311287820000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"well-defined forwards-compatibility is basically the same as fail-local","msgtype":"m.text"},"ts":1311287821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can have well-defined forwards-compatibility in syntax, in values, in semantics, etc","msgtype":"m.text"},"ts":1311287880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"xml has forwards-compatibility with namespaces and yet is fail-hard on its core syntax (preventing tag-soup)","msgtype":"m.text"},"ts":1311287881000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"but in each case, it's a matter of handling a current failure in a graceful and predictable but non-fatal way","msgtype":"m.text"},"ts":1311287882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: right, and that means it doesn't have well-defined forwards-compatibility for syntax changes","msgtype":"m.text"},"ts":1311287883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"have there been any major syntax changes in html?","msgtype":"m.text"},"ts":1311287940000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"The_8472: Adding more self-closing tags, adding foreign content… IE allowing ` as an attribute quote char, Opera allowing far more whitespace chars in tags.","msgtype":"m.text"},"ts":1311288000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The_8472: yes","msgtype":"m.text"},"ts":1311288001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: e.g. we added inline svg/mathml","msgtype":"m.text"},"ts":1311288002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see, none of those things are essential features that really improve the language","msgtype":"m.text"},"ts":1311288003000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"namespaces could have done that in the case of xml. in fact, they do exactly that","msgtype":"m.text"},"ts":1311288060000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Um, really?","msgtype":"m.text"},"ts":1311288061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Never being allowed to add more self-closing tags is a good thing?","msgtype":"m.text"},"ts":1311288062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1311288063000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"Well, I'd have to disagree with that.","msgtype":"m.text"},"ts":1311288064000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if by selfclosing you mean things like <p>","msgtype":"m.text"},"ts":1311288065000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"The_8472: the point is not that there are syntax changes that people want to add to xml but can't in a backwards-compatible way, the point is that if there were, it wouldn't matter, because it would be impossible to add them","msgtype":"m.text"},"ts":1311288066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I mean things like <source>.","msgtype":"m.text"},"ts":1311288067000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or <img>, for an older example.","msgtype":"m.text"},"ts":1311288120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Where there's no closing tag.","msgtype":"m.text"},"ts":1311288121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The_8472: XML 1.0 Fifth Edition is a backwards incompatible change in XML, likewise XML 1.1","msgtype":"m.text"},"ts":1311288122000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"1.1 -> goes into the header -> is an extension point","msgtype":"m.text"},"ts":1311288180000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"not a backwards-compatible one","msgtype":"m.text"},"ts":1311288181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"obviously it would be nuts using a 1.0 parser on 1.1 code.","msgtype":"m.text"},"ts":1311288182000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"so much so that 1.1 was basically killed in favour of 1.0 5th ed","msgtype":"m.text"},"ts":1311288183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not \"obviously\" at all.","msgtype":"m.text"},"ts":1311288184000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: And 5th ed?","msgtype":"m.text"},"ts":1311288185000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"people use html4-era parsers on html5-era pages all the time","msgtype":"m.text"},"ts":1311288186000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's what backwards-compatibility enables","msgtype":"m.text"},"ts":1311288240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except that svg doesn't work. so it fails in unpredictable ways, depending on how complete the environment is in which you run it","msgtype":"m.text"},"ts":1311288300000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"that's because html4 didn't define parsing","msgtype":"m.text"},"ts":1311288360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when we add new syntax in a future revision, we'll be able to exactly predict the failure modes","msgtype":"m.text"},"ts":1311288361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the thing is you can't assume anything will work at all. user might have javascript off. or it might be an old parser. or it might not support a random feature. so you have to test with all browser versions","msgtype":"m.text"},"ts":1311288420000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"i'm just saying that fail-hard prevents having well-defined forwards-compatibility","msgtype":"m.text"},"ts":1311288421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not arguing that having well-defined forwards-compatibility makes everything bug-free","msgtype":"m.text"},"ts":1311288480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or that web development is easy because of having well-defined forwards-compatibility","msgtype":"m.text"},"ts":1311288481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, ok. it does make moving forward easier. but it causes quite some headaches too. and imo in some places fail-hard is useful","msgtype":"m.text"},"ts":1311288540000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"there are times fail-hard is useful, but they're rare on the web","msgtype":"m.text"},"ts":1311288541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can't speak about headaches","msgtype":"m.text"},"ts":1311288542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"q.v. the /topic","msgtype":"m.text"},"ts":1311288543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what you ment with \"fail-hard\"?","msgtype":"m.text"},"ts":1311288780000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"almost done with DOM Traversal o_O","msgtype":"m.text"},"ts":1311288781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"metron: handling an error by entirely refusing to process the resource","msgtype":"m.text"},"ts":1311288782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, except for like introductory text and stuff","msgtype":"m.text"},"ts":1311288783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"metron: JS and XML are examples of fail-hard languages at the syntax level","msgtype":"m.text"},"ts":1311288784000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and a few more methods, and getting killed by jgraham for using hard-to-read-algorithms","msgtype":"m.text"},"ts":1311288840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well here's a shocker","msgtype":"m.text"},"ts":1311288841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec doesn't seem to require that browsers let users follow hyperlinks","msgtype":"m.text"},"ts":1311288842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or even encourage it","msgtype":"m.text"},"ts":1311288900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"am i missing something i wrote somewhere?","msgtype":"m.text"},"ts":1311288901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it has text for <area> and <link>...","msgtype":"m.text"},"ts":1311288902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"implemented <a> with a table the other day","msgtype":"m.text"},"ts":1311288960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mhh... replace capital punishment with the task to rewrite the spec to derive everything from tables.","msgtype":"m.text"},"ts":1311289260000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"it's actually a reference to an old joke; the claim was a table (an ordinary non-computer one) with quotation marks around it was a conforming HTML4 user agent","msgtype":"m.text"},"ts":1311289320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not just any able, dbaron's desk at harvard ;-)","msgtype":"m.text"},"ts":1311289321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is confused","msgtype":"m.emote"},"ts":1311289380000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1311289381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The_8472: HTML4 includes only one testable requirement on browsers","msgtype":"m.text"},"ts":1311289500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: which is that <q> elements must be surrounded by quotation marks","msgtype":"m.text"},"ts":1311289501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The_8472: so an ordinary desk with a pair of quotation marks engraved in it is a compliant HTML4 browser","msgtype":"m.text"},"ts":1311289502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, semantic lawyering.","msgtype":"m.text"},"ts":1311289560000,"senderName":"The_8472","senderId":"The_8472@irc"},
{"content":{"body":"not just semantic lawyering. it has also made it near impossible to write test suites for html4.","msgtype":"m.text"},"ts":1311289561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(fixing this is one of the greatest achievments of the new html spec)","msgtype":"m.text"},"ts":1311289562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, The_8472, the other testable requirement was that it treat SGML-equivalent streams the same... but doing nothing all the time is treating them the same","msgtype":"m.text"},"ts":1311290640000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"ah yes","msgtype":"m.text"},"ts":1311290700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a requirement which, incidentally, no browser ever implemented","msgtype":"m.text"},"ts":1311290701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Except for dbaron's desk.","msgtype":"m.text"},"ts":1311291420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not a browser","msgtype":"m.text"},"ts":1311291480000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Okay, granted.","msgtype":"m.text"},"ts":1311291481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dunno, did html4 define what a browser is?","msgtype":"m.text"},"ts":1311291540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#traversal","msgtype":"m.text"},"ts":1311291660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still need TreeWalker previousNode/nextNode","msgtype":"m.text"},"ts":1311291661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought XLink will do that for us?!","msgtype":"m.text"},"ts":1311291900000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"if XLink is not out already it is on its way","msgtype":"m.text"},"ts":1311291960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is some legacy DOM API that ended up in Acid3 but was not really fully defined","msgtype":"m.text"},"ts":1311291961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now it is, presumably with new bugs","msgtype":"m.text"},"ts":1311291962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hober: (fwiw, i filed a bug on that circle ordering thing. i have the same problem around the same number of circles.)","msgtype":"m.text"},"ts":1311292020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: k, so I'll change my mind with XLink","msgtype":"m.text"},"ts":1311292500000,"senderName":"metron","senderId":"metron@irc"},
{"content":{"body":"metron, rule of thumb: specs where the initial letter is an \"X\" are not really making it these days","msgtype":"m.text"},"ts":1311292560000,"senderName":"annevk","senderId":"annevk@irc"}
]