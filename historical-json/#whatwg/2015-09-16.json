[
{"content":{"body":"TabAtkins: Okay, like this now?","msgtype":"m.text"},"ts":1442361733000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1442361760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hurray!","msgtype":"m.text"},"ts":1442361858000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"TabAtkins: Thx for bring up https://github.com/whatwg/html/issues/127 – I assume it's no coincidence following our chat the other day?","msgtype":"m.text"},"ts":1442362102000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: Correct, it's a direct result of that chat.","msgtype":"m.text"},"ts":1442362521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Exciting :)","msgtype":"m.text"},"ts":1442362565000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I'm curious if you have any <s>bikeshed</s> advice on what a polyfill would look like.","msgtype":"m.text"},"ts":1442362605000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Give me your best/worst :D","msgtype":"m.text"},"ts":1442362625000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"document.addEventListener('DOMContentLoaded', Promise.resolve); ?","msgtype":"m.text"},"ts":1442362664000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: The problem is not knowing whether the event already fired.","msgtype":"m.text"},"ts":1442362677000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Async code","msgtype":"m.text"},"ts":1442362680000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"document.ready = new Promise(function (resolve) { document.addEventListener('DOMContentLoaded', resolve); }); ?","msgtype":"m.text"},"ts":1442362712000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"In addition to async code, also async code that loads more async code (<script async> conveniently holds back window.onload, but that doesn't apply to any script added to the DOM later)","msgtype":"m.text"},"ts":1442362733000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: That code will be pending indefinitely if run after the event already fired.","msgtype":"m.text"},"ts":1442362757000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: is `readyState` part of the official API?","msgtype":"m.text"},"ts":1442362840000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I think it is?","msgtype":"m.text"},"ts":1442362873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The question is also, if you check it, is it safe to always add a new event or is there a grey area where it's not ready but also won't take new events.","msgtype":"m.text"},"ts":1442362927000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"document.ready = new Promise(function (resolve) { document.readyState === 'complete’ ? resolve() : document.addEventListener('DOMContentLoaded', resolve); }); - though you may want to expand on it to clear out the event object.","msgtype":"m.text"},"ts":1442362936000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yes, readyState is specified on Document in HTML.","msgtype":"m.text"},"ts":1442362946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`document.ready = new Promise(function (resolve) { document.readyState === 'complete’ ? resolve() : document.addEventListener('DOMContentLoaded', resolve); });` though you may want to expand on it to clear out the event object.","msgtype":"m.text"},"ts":1442362961000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"window.onload has this with performance.loadEventStart where I believe you can't attach new events from within an onload handler, but it's also not finished yet. Though I guess window.onload (the hidden event) is right before it, not after.","msgtype":"m.text"},"ts":1442362991000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Sorry that came twice, irccloud told me the previous one was not sent.","msgtype":"m.text"},"ts":1442363028000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: Hm.. yeah. I suppose it is relatively straight forward with dom ready","msgtype":"m.text"},"ts":1442364608000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: What about window.onload though?","msgtype":"m.text"},"ts":1442364614000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I haven't found a way to do that short using performance.timing.loadEventEnd – which isn't very available yet.","msgtype":"m.text"},"ts":1442364642000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"or loadEventStart I suppose","msgtype":"m.text"},"ts":1442364671000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Well, I may have mispoke earlier, but this should do it: http://stackoverflow.com/questions/11528132/determining-whether-the-window-has-loaded-without-using-any-global-variables/11543156#11543156","msgtype":"m.text"},"ts":1442364672000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"There sure is a lot of click bate and confusion out on stackoverflow. Lots of questions about how to detect window load, all saying to check readyState or use jQuery. Which is irrelevant to the question.","msgtype":"m.text"},"ts":1442364999000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Why not just load the polyfill script in your <head>","msgtype":"m.text"},"ts":1442365023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's a fair requirement once there is somewhat of an established standard. But for individual libraries it seems odd to have to require them to put something arbitrary in a head script.","msgtype":"m.text"},"ts":1442365082000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"E.g. imagine the next version of google analytics or jquery requiring you put something in <head>","msgtype":"m.text"},"ts":1442365130000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yea, it’s unlikely. It was hard enough for html5shiv.","msgtype":"m.text"},"ts":1442365188000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"In my case it's two fold. In production there's an async loaded module that collects Navigation Timing, which can sort of get away by checking or polling performance.timing.loadEvent* since it itself won't do anything if nav timing is unsupported. The other is random experiments that are loaded from a user space, which don't have the ability to modify the","msgtype":"m.text"},"ts":1442365274000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"main page.","msgtype":"m.text"},"ts":1442365274000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Sure, I thought you were talking about a polyfill, not a library.","msgtype":"m.text"},"ts":1442365332000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But a polyfill has to be willing to work with what it has, and can’t guaruntee markup position.","msgtype":"m.text"},"ts":1442365381000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"wonders if he's an idiot or if he's found a bug in AAA","msgtype":"m.emote"},"ts":1442366118000,"senderName":"gsnedder1","senderId":"gsnedder1@irc"},
{"content":{"body":"JonathanNeal: Yeah, sorry for the confusion. I mean more that if there's a polyfill, it'd be slightly more feasible to have it load from a certain position. Whereas in the here and now, ad-hoc libraries loaded without guarantees need something potentially more solid.","msgtype":"m.text"},"ts":1442366800000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Though yeah,ideally the polyfill would be embeddable as small micro library in any other library that needs it.","msgtype":"m.text"},"ts":1442366832000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"They need something that, to borrow an expression, does the right thing.","msgtype":"m.text"},"ts":1442366843000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: You don't want \"complete\" (that's the load event), you want \"interactive\" (that'd DOMContentReady).","msgtype":"m.text"},"ts":1442366904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JonathanNeal: You don't want \"complete\" (that's the load event), you want \"interactive\" (that'd DOMContentReady).","msgtype":"m.text"},"ts":1442366920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"^ yes, as referenced in the stackoverflow I shared.","msgtype":"m.text"},"ts":1442366924000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ah, sorry, didn't read.","msgtype":"m.text"},"ts":1442366929000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My fault for mispeaking to begin with.","msgtype":"m.text"},"ts":1442366948000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"But “interactive” and “complete” should provide the events you are looking for Krinkle. If I were to write a polyfill, I might use readystatechange to try and be clever.","msgtype":"m.text"},"ts":1442367063000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"^ https://developer.mozilla.org/en-US/docs/Web/API/Document/readyState","msgtype":"m.text"},"ts":1442367070000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: but those relate to the html payload, not the subresources.","msgtype":"m.text"},"ts":1442367091000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"window load, not document read/load","msgtype":"m.text"},"ts":1442367103000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Read the definition for “complete” in that MDN link I just shared.","msgtype":"m.text"},"ts":1442367114000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1442367129000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I guess I was thrown off because it's on the document","msgtype":"m.text"},"ts":1442367139000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"cool :)","msgtype":"m.text"},"ts":1442367157000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"DOMComplete in Nav Timing is not the same as document.readyState=complete, then.","msgtype":"m.text"},"ts":1442367200000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Hm.. the spec describes it as when readyState reaches \"complete\"","msgtype":"m.text"},"ts":1442367237000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"does some field tests","msgtype":"m.emote"},"ts":1442367244000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Domenic: have at it https://github.com/whatwg/html-build/commit/a2135b8e7f136138edd48c9cfb980f585c683243","msgtype":"m.text"},"ts":1442367252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Nope. no bug in the AAA.","msgtype":"m.text"},"ts":1442367409000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm just an idiot.","msgtype":"m.text"},"ts":1442367413000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Krinkle: what are the two events you want? document.ready and ?","msgtype":"m.text"},"ts":1442367499000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"DOMContentLoaded and window.onload","msgtype":"m.text"},"ts":1442367513000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"What we'll name the promises I don't mind. Though having \"DOMContentLoaded\" be \"document.ready\" would be a huge plus since that's become an idiom on the web that people identify with.","msgtype":"m.text"},"ts":1442367564000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"The name of the Promise property, I mean. Just best guess.","msgtype":"m.text"},"ts":1442367610000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"document.ready and document.load ?","msgtype":"m.text"},"ts":1442367615000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yeah, though I can imagine there would be confusion.","msgtype":"m.text"},"ts":1442368540000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Taking it off window seems nice, though I'm not sure why or if that's inline with other things happening in dom","msgtype":"m.text"},"ts":1442368555000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"http://codepen.io/Krinkle/pen/pjgGEY?editors=001","msgtype":"m.text"},"ts":1442368562000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: https://gist.github.com/jonathantneal/fba8689eaa288aeee11b","msgtype":"m.text"},"ts":1442368638000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"That gives you what you want, I think. Rather than muck around with names, I just used the ones onreadystate already gives us, which are actually quite easy to remember.","msgtype":"m.text"},"ts":1442368815000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yeah, once you understand.","msgtype":"m.text"},"ts":1442368853000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I can't believe I never understood readyState until now","msgtype":"m.text"},"ts":1442368860000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: nit pick, but I believe that leaves the handler of interactive behind if complete is reached","msgtype":"m.text"},"ts":1442368902000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"may be pass an array of regex instead.","msgtype":"m.text"},"ts":1442368938000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"or*","msgtype":"m.text"},"ts":1442368955000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Um, no it should fire even if complete is reached first.","msgtype":"m.text"},"ts":1442368962000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"You could run that code in your browser right now and your window would be complete and document.interactive would also be resolved.","msgtype":"m.text"},"ts":1442368996000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1442369007000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I mean the event handler if 'interactive' will linger if 'complete' is already reached, unlike the other two which go out of their way to clean up","msgtype":"m.text"},"ts":1442369033000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"spent 8 hours doing code review today.","msgtype":"m.emote"},"ts":1442369076000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yes, fixed.","msgtype":"m.text"},"ts":1442369109000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1442369160000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: 8 hours of code review sounds grim","msgtype":"m.text"},"ts":1442369164000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"My brain practically runs JS native now","msgtype":"m.text"},"ts":1442369182000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: so besides requiring an include polyfill, does that cover your use cases? Kind of nice and consistent to reuse the readystate names, I think.","msgtype":"m.text"},"ts":1442369299000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I'm letting in sink in. It's too simple.","msgtype":"m.text"},"ts":1442369322000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I demand an uglier implementation","msgtype":"m.text"},"ts":1442369336000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"So yeah, ES7(array) and ES6(Promise) aside, I'm thinking how far back this will run in browsers.","msgtype":"m.text"},"ts":1442369415000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Down to say IE8 (no further)","msgtype":"m.text"},"ts":1442369464000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"attachEvent naturally, but that's simple","msgtype":"m.text"},"ts":1442369473000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"especially since https://github.com/jquery/jquery/blob/1.11-stable/src/core/ready.js is much more elaborate and that's only for dom.interactive essentially","msgtype":"m.text"},"ts":1442369682000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"mmhmm","msgtype":"m.text"},"ts":1442371062000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I agree with zcorpan_ that we should not do onload, just DOMContentLoaded.","msgtype":"m.text"},"ts":1442372355000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"JonathanNeal: Hm.. should that event listener be for readystatechange instead of DOMContentLoaded at https://gist.github.com/jonathantneal/fba8689eaa288aeee11b ?","msgtype":"m.text"},"ts":1442379503000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"What are you talking about, it is! :P","msgtype":"m.text"},"ts":1442379534000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Thanks Krinkle","msgtype":"m.text"},"ts":1442379740000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: I'm trying it out at the moment and find some issues.","msgtype":"m.text"},"ts":1442379853000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"So the assumption that DOMComplete/document.readyState=complete/window.onload are the same is incorrect.","msgtype":"m.text"},"ts":1442379881000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It is correct in the sense that very little happens in the browser","msgtype":"m.text"},"ts":1442379889000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"However the userland is notably different because readyState=complete is before the loadEvent starts/ends","msgtype":"m.text"},"ts":1442379905000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"which means it can't be used for a lot of things, such as collecting performance.timing (my current usecase)","msgtype":"m.text"},"ts":1442379921000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Because the last two properties (loadEventStart/End) would still be 0","msgtype":"m.text"},"ts":1442379953000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Right now we use a mixture of $(window).on('load') and polling performance.timing.loadEventEnd in an interval loop","msgtype":"m.text"},"ts":1442379983000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"You mean readyState “complete” !== window.load?","msgtype":"m.text"},"ts":1442380008000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1442380013000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It's a little bit before it","msgtype":"m.text"},"ts":1442380021000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Does “complete” fire after all the assets have loaded, like “load\"?","msgtype":"m.text"},"ts":1442380035000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I believe so, but I'm not sure.","msgtype":"m.text"},"ts":1442380044000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"So I think for most purposes it is conceptually the same, but it can be more than one event look tick away from the real onload","msgtype":"m.text"},"ts":1442380073000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"We've gone over many iterations and the current code looks like this. I'm working on refactoring this pretty much from the ground up. https://github.com/wikimedia/mediawiki-extensions-NavigationTiming/blob/master/modules/ext.navigationTiming.js#L160-L178","msgtype":"m.text"},"ts":1442380160000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I really want to get rid of that polling loop","msgtype":"m.text"},"ts":1442380168000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"before we loaded scripts asynchronously it was: $(window).on('load', function () {setTimeout(collectNavTiming); }); which reliably got everything.","msgtype":"m.text"},"ts":1442380238000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"http://codepen.io/Krinkle/pen/rOxRjm?editors=001","msgtype":"m.text"},"ts":1442380275000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"It makes sense that it might be one tick before the real onload.","msgtype":"m.text"},"ts":1442380350000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"If for no other reason that it happens “deeper”","msgtype":"m.text"},"ts":1442380373000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"It seems fragile to rely on the fact that setTimeout() from document readyState==complete is after window.onload callbacks finish","msgtype":"m.text"},"ts":1442380491000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I'll give it a try and run it in some browsers","msgtype":"m.text"},"ts":1442380497000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"zcorpan_: https://bugzilla.mozilla.org/show_bug.cgi?id=1203404","msgtype":"m.text"},"ts":1442382948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: hey can you explain to me what \"ln -s ../link-fixup.js $HTML_TEMP/wattsi-output/multipage-html/\" does in the build script?","msgtype":"m.text"},"ts":1442387632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: hmm, back in 30-60min or so","msgtype":"m.text"},"ts":1442387650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I'd like to figure out how we can have link-fixup.js only appear in /multipage/ since now we duplicate the file and that's not needed","msgtype":"m.text"},"ts":1442387682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: on the server that is","msgtype":"m.text"},"ts":1442387690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: alternatively I guess we change wattsi to just point to /link-fixup.js","msgtype":"m.text"},"ts":1442387822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: or maybe generate link-fixup.js just like it does for fragment-links.js","msgtype":"m.text"},"ts":1442387837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks. see https://www.w3.org/Bugs/Public/show_bug.cgi?id=16673 -- i suppose it was a mistake to hook into the dispatch flag?","msgtype":"m.text"},"ts":1442388002000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":":facepalm:","msgtype":"m.text"},"ts":1442389017000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"^ re: do not cc the entire list","msgtype":"m.text"},"ts":1442389057000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: ?","msgtype":"m.text"},"ts":1442389314000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nvm :)","msgtype":"m.text"},"ts":1442389369000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"zcorpan_: yeah, you want to calculate them when the event object is created","msgtype":"m.text"},"ts":1442389691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm yes that does make more sense","msgtype":"m.text"},"ts":1442390180000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"looks at https://w3c.github.io/uievents/#interface-MouseEvent","msgtype":"m.emote"},"ts":1442390312000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I think we really want to merge CSSOM into that","msgtype":"m.text"},"ts":1442390344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: it doesn't make much sense to define MouseEvent in two different places","msgtype":"m.text"},"ts":1442390357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I ended up filing an issue against html-build to sort out the file duplication","msgtype":"m.text"},"ts":1442390384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I've figured out how it could be fixed, just need agreement","msgtype":"m.text"},"ts":1442390398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, in step 9 here https://html.spec.whatwg.org/#concept-media-load-algorithm the fetch algorithm will always be called with a URL unless the source was a data-uri, a blob, or a file object correct? So, that means that for a lot of scenarios the fetch algorithm's mode is remote \"fork\" will be executed and so, if you want to do anything other than play/pause/stop the video you must include crossorigin either set to anonymous or use-creden","msgtype":"m.text"},"ts":1442391582000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: data and blob URLs go through Fetch","msgtype":"m.text"},"ts":1442393424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: \"mode is object\" is about objectSrc","msgtype":"m.text"},"ts":1442393439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: afaik","msgtype":"m.text"},"ts":1442393451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, so setting objectSrc via JS will cause mode is local to be followed by the fetch algorithm but, blob and data will still go through the mode is remote path?","msgtype":"m.text"},"ts":1442393521000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"referring to this part: https://html.spec.whatwg.org/#concept-media-load-resource","msgtype":"m.text"},"ts":1442393639000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: blob and data URLs, I think so yes","msgtype":"m.text"},"ts":1442393646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I guess a File object is a blob as well right?","msgtype":"m.text"},"ts":1442393670000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so essentially the Fetch algorithm will always follow the mode is remote path unless the objectSrc was set by JS","msgtype":"m.text"},"ts":1442393715000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: a File is a subclass of Blob","msgtype":"m.text"},"ts":1442393720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: reading this I think that's the case, though admittedly it's not entirely clear to me either","msgtype":"m.text"},"ts":1442393762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: philipj would know","msgtype":"m.text"},"ts":1442393768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: soemthing about Blob/File?","msgtype":"m.text"},"ts":1442393794000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yes, so it will essentially receive the same treatment although, I reckon in most scenarios, JS will handle the File upload process and then probably set the objectSrc in which case it will go down the mode is local path","msgtype":"m.text"},"ts":1442393800000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"If we're talking about media elements, then s/objectSrc/srcObject/g","msgtype":"m.text"},"ts":1442393853000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: so, trying to understand when the fetch algorithm will go down the mode is remote path and when it will go down the mode is local path","msgtype":"m.text"},"ts":1442393900000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so, it seems to state that is the media element is a URL it will go down remote else local","msgtype":"m.text"},"ts":1442393918000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so the question is, is the only way for it to not be a URL to set the objectSrc/srcObject via JS","msgtype":"m.text"},"ts":1442393960000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"and that is the only way Fetch will ever follow the mode is local path","msgtype":"m.text"},"ts":1442393979000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"philipj: referring to this part of the spec https://html.spec.whatwg.org/#concept-media-load-resource","msgtype":"m.text"},"ts":1442394073000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: are you trying to implement srcObject in a browser, and if so which one?","msgtype":"m.text"},"ts":1442394101000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: oh no :) just trying to wrap my mind around it and understand the crossorigin attribute's role here","msgtype":"m.text"},"ts":1442394141000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so I haven't tried to implement this yet, but basically there's a fork point in the resource selection algorithm, which I'm sure you've found","msgtype":"m.text"},"ts":1442394185000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"it kinda seems that anytime you want to do more with the video data other than simply play/pause/stop you wanna specify the crossorigin attribute","msgtype":"m.text"},"ts":1442394212000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"and if it's a src object, then there's no networking involved, nor do I think the crossorigin attribute could have any effect","msgtype":"m.text"},"ts":1442394239000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"agreed, so this point \"If mode is object\"","msgtype":"m.text"},"ts":1442394257000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: well, only if your URLs are actually cross-origin does crossorigin=\"\" have any effect","msgtype":"m.text"},"ts":1442394264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the spec now says \"The resource described by the current media resource, if any, contains the media data. It is CORS-same-origin.\"","msgtype":"m.text"},"ts":1442394281000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"schalkneethling: if you just have same-origin URLs you can do anything you want and you won't need it","msgtype":"m.text"},"ts":1442394284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oooh, I thought you needed to specify crossorigin=anonymous for same origin","msgtype":"m.text"},"ts":1442394318000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"if you wanted to do stuff on a canvas","msgtype":"m.text"},"ts":1442394327000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"does this mean, it will load subtitle tracks as well as long as those reside on the same origin","msgtype":"m.text"},"ts":1442394345000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"in-band text tracks aren't actually well implemented, but yes, same-origin media resources would give you full access to the text tracks","msgtype":"m.text"},"ts":1442394391000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"hmmmm, ok. so then essentially for same origin there is no need to use crossorigin but, for cross-origin you need to use crossorigin and set it to use-credentials","msgtype":"m.text"},"ts":1442394435000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"but then the use case for anonymous becomes kinda foggy","msgtype":"m.text"},"ts":1442394451000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"perhaps I do not understand what those credentials are?","msgtype":"m.text"},"ts":1442394476000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"This \"A media provider object is an object that can represent a https://html.spec.whatwg.org/#media-resource, separate from a https://html.spec.whatwg.org/#url. https://html.spec.whatwg.org/#mediastream objects, https://html.spec.whatwg.org/#mediasource objects, https://html.spec.whatwg.org/#blob objects, and https://html.spec.whatwg.org/#file objects are all https://html.spec.whatwg.org/#media-provider-object.\" seems to suggest that the","msgtype":"m.text"},"ts":1442395158000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so, crossorigin is not a concern when using either of those types as a source","msgtype":"m.text"},"ts":1442395230000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"but when specifying the value for either the src or source attribute/element crossorigin does come into play if that src is not of the same origin","msgtype":"m.text"},"ts":1442395311000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so, that leaves anonymous which is a little dubious","msgtype":"m.text"},"ts":1442395337000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: credentials are just cookies, that may have been set for the domain in question","msgtype":"m.text"},"ts":1442395968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah so srcObject is the type of object","msgtype":"m.text"},"ts":1442395972000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"and currentSrc is the actual location of the data object","msgtype":"m.text"},"ts":1442396017000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"annevk: are non-tag members welcome to comment on https://github.com/w3ctag/spec-reviews/issues/76?","msgtype":"m.text"},"ts":1442396083000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so, anonymous might say something like \"load this URL but ignore any cookies set for this domain\" whereas use-credentials will say \"load this URL and pass along/use/expose any cookies that has been set for this domain\"","msgtype":"m.text"},"ts":1442396085000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so in essence, anonymous is a security measure to prevent credentials/cookies leaking across domains","msgtype":"m.text"},"ts":1442396128000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"JakeA: well I'm not a member, so yes","msgtype":"m.text"},"ts":1442396230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't understand timbl's comment, it seems to be some combination of \"the default for withCredentials is wrong\", but the end seems to be questioning the need for CORS in anonymous requests entirely… am I reading it right?","msgtype":"m.text"},"ts":1442396261000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: he wants something different from the current protocol","msgtype":"m.text"},"ts":1442396375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what he wants is give me the best response for a given URL","msgtype":"m.text"},"ts":1442396388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: without knowing whether that requires credentials or not","msgtype":"m.text"},"ts":1442396400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: per CORS that requires up to two fetches (three perhaps if a preflight is required) since you don't know if the resource \"supports credentials\" or not","msgtype":"m.text"},"ts":1442396462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: he doesn't like it","msgtype":"m.text"},"ts":1442396472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and I'm just pointing out that you'll have the same problem with anything the resource might vary on","msgtype":"m.text"},"ts":1442396491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Aren't the isindex tests wrong?","msgtype":"m.text"},"ts":1442396513000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: credentials:\"ideally\" - I guess the two request thing is less of an issue in HTTP/2, but I'm not sold on the feature, it's not something I've ever needed.","msgtype":"m.text"},"ts":1442396543000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"gsnedders: http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cisindex%20action%3D%22x%22%3E","msgtype":"m.text"},"ts":1442396555000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh, document-fragment context.","msgtype":"m.text"},"ts":1442396587000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"JakeA: yeah, I don't think this is going to result in something, someone can write a library I suppose","msgtype":"m.text"},"ts":1442396591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: pretty easy to write a varyCredentialsFetch()","msgtype":"m.text"},"ts":1442396618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: blink has dropped isindex special parsing, if you mean that","msgtype":"m.text"},"ts":1442396623000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: No I mean '<isindex action=\"x\">' as a table fragment.","msgtype":"m.text"},"ts":1442396665000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: his final paragraph… is he looking for a way to get data from a response that doesn't explicitly allow it? (there's an internal devrel thread making this claim, and I'm not confident)","msgtype":"m.text"},"ts":1442396687000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: his final paragraph is just saying that if we need CORS (which we do) we should do whatever it takes to make his scenario work","msgtype":"m.text"},"ts":1442396810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: his claim about the proxy server is wrong though, I guess I should point that out","msgtype":"m.text"},"ts":1442396821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: i don't follow. which test are you talking about?","msgtype":"m.text"},"ts":1442396849000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: https://github.com/html5lib/html5lib-tests/pull/67/files#diff-654b5264d16ae0fd0b3d27f971f2d57cR259","msgtype":"m.text"},"ts":1442396883000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Cheers!","msgtype":"m.text"},"ts":1442396884000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan_: I understand that the <hr> and <input> being siblings of <form> comes from the <table> context, but I don't think that's what it's supposed to do.","msgtype":"m.text"},"ts":1442396948000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it's not what gecko does, at least. http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3634","msgtype":"m.text"},"ts":1442397032000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: I see \"Pop that form element off the stack of open elements.\" for \"form\" start tag in \"in table\" insertion mode.","msgtype":"m.text"},"ts":1442397064000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"But that's not the code path that code takes, AFAICT.","msgtype":"m.text"},"ts":1442397102000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"<table><isindex> (non-fragment) is another interesting case","msgtype":"m.text"},"ts":1442397110000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: My Safari does as in the test.","msgtype":"m.text"},"ts":1442397112000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1442397196000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: philipj is my \"thought process\" re anonymous vs use-credentials correct in that anonymous will prevent leaking of credentials across domains by only \"exposing\" credentials for same origin requests and not cross-origin?","msgtype":"m.text"},"ts":1442397245000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"for <table><isindex> webkit foster-parents the form and pops the form so the hr is a sibling","msgtype":"m.text"},"ts":1442397246000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: \"If foster parenting is enabled and target is a table, tbody, tfoot, thead, or tr element:\"","msgtype":"m.text"},"ts":1442397280000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan_: But target is not a table element, right?","msgtype":"m.text"},"ts":1442397295000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: are you discussing the <table>.innerHTML = '<isindex>' case?","msgtype":"m.text"},"ts":1442397353000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Yes.","msgtype":"m.text"},"ts":1442397372000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"so, you could do a cross-origin fetch and set crossorigin=anonymous and that way cookies are not shared with the third party","msgtype":"m.text"},"ts":1442397379000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so anonymous means make anonymous cross-origin requests and use-credentials identifies you to the third party by sharing credential cookies","msgtype":"m.text"},"ts":1442397450000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"BTW, thanks a million for all your assistance so far","msgtype":"m.text"},"ts":1442397655000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: it only identifies you if the third party had set a cookie for you before (or HTTP authentication or some existing TLS pool thingie)","msgtype":"m.text"},"ts":1442397680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and only if you use \"use-creentials\" not \"anonymous\"","msgtype":"m.text"},"ts":1442397739000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1442397788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if set to anonymous it will not use these credentials","msgtype":"m.text"},"ts":1442397792000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"so if they are required, the requst will fail","msgtype":"m.text"},"ts":1442397801000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"*request","msgtype":"m.text"},"ts":1442397811000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"ok, I reckon I am getting to grips with this ;)","msgtype":"m.text"},"ts":1442397823000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"maybe, depends on how the server responds","msgtype":"m.text"},"ts":1442397825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1442397843000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"nox: /override target/ is only set in AAA, afaict, and that does not apply here","msgtype":"m.text"},"ts":1442397887000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nox: so target is the current node, which is <html> in the fragment case, right?","msgtype":"m.text"},"ts":1442397906000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Yes.","msgtype":"m.text"},"ts":1442397913000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"so many things to keep track of in the html parser :-(","msgtype":"m.text"},"ts":1442397937000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nox: ok so then \"Let adjusted insertion location be inside target, after its last child (if any).\"","msgtype":"m.text"},"ts":1442398014000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"though the algorithm under \"If foster parenting is enabled and target is a table, tbody, tfoot, thead, or tr element\" has steps for the fragment case","msgtype":"m.text"},"ts":1442398130000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"i suppose you can get there with <table>.innerHTML = '<tbody><p>'","msgtype":"m.text"},"ts":1442398245000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: Yes.","msgtype":"m.text"},"ts":1442398338000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan_: Are you going to take care of it?","msgtype":"m.text"},"ts":1442398357000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: i can PR the test, sure","msgtype":"m.text"},"ts":1442398492000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: so this all then relates to https://fetch.spec.whatwg.org/#http-access-control-allow-credentials","msgtype":"m.text"},"ts":1442398633000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: it does yes, it maps to https://fetch.spec.whatwg.org/#concept-request-credentials-mode as I mentioned earlier","msgtype":"m.text"},"ts":1442398717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, must have missed that","msgtype":"m.text"},"ts":1442398744000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1442398745000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"zcorpan_: Thanks.","msgtype":"m.text"},"ts":1442398772000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/html5lib/html5lib-tests/pull/68","msgtype":"m.text"},"ts":1442398960000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Cool.","msgtype":"m.text"},"ts":1442399446000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"zcorpan_: nox: also need to figure out <menuitem> at some point","msgtype":"m.text"},"ts":1442399711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: nox: whether it should remain void","msgtype":"m.text"},"ts":1442399716000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: back now","msgtype":"m.text"},"ts":1442402051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"was out to dinner and such with N","msgtype":"m.text"},"ts":1442402059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: is the file/symlink thing resolved for now? or you still need me to do something?","msgtype":"m.text"},"ts":1442402102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw, the whatwg logo now has a permanent IPFS hash","msgtype":"m.text"},"ts":1442402136000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://ipfs.pics/pic.php?id=QmbvGcNxAgVDpUBccHnNdxhj5VFaSaPgSXqLsEkj4wWL2i","msgtype":"m.text"},"ts":1442402142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"whatwg ye shall hereby be called QmbvGcNxAgVDpUBccHnNdxhj5VFaSaPgSXqLsEkj4wWL2i for posterity","msgtype":"m.text"},"ts":1442402187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"part of the idea of ipfs.pics is that once you upload an image that and it gets a hash, other images services can also store a copy of the image, with that same hash","msgtype":"m.text"},"ts":1442402296000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and so if ipfs.pics goes away, you can still address it by that same hash from any other place that has it","msgtype":"m.text"},"ts":1442402352000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: also if/when you have a moment, maybe reply to this tweet https://twitter.com/tjconceptdk/status/644066686342164480","msgtype":"m.text"},"ts":1442402579000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"he seems like a clueful guy who would genuinely appreciate the info","msgtype":"m.text"},"ts":1442402631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so is the Fetch standard a recommendation and implemented in user agents? Here is states that the spec does not use the \"fetch\" algorithm yet: https://html.spec.whatwg.org/#resource-sharing-check","msgtype":"m.text"},"ts":1442402687000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: did I not point you to https://github.com/whatwg/html/issues/95?","msgtype":"m.text"},"ts":1442402797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what is IPFS?","msgtype":"m.text"},"ts":1442402811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I filed an issue on whatwg/html-build, would appreciate your opinion","msgtype":"m.text"},"ts":1442402826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, so it is in process","msgtype":"m.text"},"ts":1442402867000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"IPFS is an amibitious plan to create permanance/persistence for the Web in the face of domains expiring and people abandoing sites, etc.","msgtype":"m.text"},"ts":1442402902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: replied to the tweet","msgtype":"m.text"},"ts":1442402940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it works in part by assigning hashes to the state of each particular resource at any particular time","msgtype":"m.text"},"ts":1442402949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh my","msgtype":"m.text"},"ts":1442402959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://ipfs.io/#how-it-works","msgtype":"m.text"},"ts":1442403027000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"IPFS combines a distributed hashtable, an incentivized block exchange, and a self-certifying namespace. IPFS has no single point of failure, and nodes do not need to trust each other.\"","msgtype":"m.text"},"ts":1442403048000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: as far what \"ln -s ../link-fixup.js $HTML_TEMP/wattsi-output/multipage-html/\" does in the build, it makes a symlink that gets moved/copied into output/multipage along with the rest of the contents of that folder. Such that after the move, it just points to ./output/multipage/../link-fixup.js ーwhich is of course ./outline/link-fixup.js","msgtype":"m.text"},"ts":1442403123000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I will look at the issue","msgtype":"m.text"},"ts":1442403146000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: could you merge WHATWG -> HTML - <img> into WHATWG -> HTML?","msgtype":"m.text"},"ts":1442403911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: or perhaps it's best to simply close it as well and transfer the bugs?","msgtype":"m.text"},"ts":1442403939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I think we should move the bugs and then close it","msgtype":"m.text"},"ts":1442404191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can do that","msgtype":"m.text"},"ts":1442404193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan is OK with this?","msgtype":"m.text"},"ts":1442404202000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh cool","msgtype":"m.text"},"ts":1442404206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I haven't asked, I assume so","msgtype":"m.text"},"ts":1442404211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wat?","msgtype":"m.text"},"ts":1442404216000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: closing HTML - <img> component and moving the remaining bugs to the HTML component","msgtype":"m.text"},"ts":1442404239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: we transfer W3C bugzilla HTML <img> bugs to HTML componeentn","msgtype":"m.text"},"ts":1442404241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok sure","msgtype":"m.text"},"ts":1442404328000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but why","msgtype":"m.text"},"ts":1442404328000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"easier for other people to find the bugs?","msgtype":"m.text"},"ts":1442404349000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah","msgtype":"m.text"},"ts":1442404358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: they're not linked from the specification currently for instance","msgtype":"m.text"},"ts":1442404367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1442404563000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: would appreciate feedback on this ~ https://sneethling.pastebin.mozilla.org/8846545","msgtype":"m.text"},"ts":1442405071000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"thx!","msgtype":"m.text"},"ts":1442405072000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"schalkneethling: the Fetch standard is not in process","msgtype":"m.text"},"ts":1442405206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"schalkneethling: integration into HTML is","msgtype":"m.text"},"ts":1442405211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aha, my bad","msgtype":"m.text"},"ts":1442405218000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"will update","msgtype":"m.text"},"ts":1442405223000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"use-URL-credentials is not code","msgtype":"m.text"},"ts":1442405250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I am using that to liberally I realized ;p","msgtype":"m.text"},"ts":1442405272000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"related to IPFS, https://github.com/substack/html-version-spec/blob/master/readme.markdown#html-version-spec is a related idea/proposal worth reading","msgtype":"m.text"},"ts":1442405305000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not a Fetch header, just a header","msgtype":"m.text"},"ts":1442405307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"This specification builds on existing work in subresource integrity, link relation types for simple version navigation, and meta-version to provide a comprehensive versioning system for secure, signed, and permanent single-page web applications.\"","msgtype":"m.text"},"ts":1442405326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks MikeSmith","msgtype":"m.text"},"ts":1442405453000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"other than those two points, looking good annevk?","msgtype":"m.text"},"ts":1442405691000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1442405743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, would it make sense to assert at the start of (my implementation of) https://dom.spec.whatwg.org/#concept-event-dispatch that eventPhase is NONE and currentTarget is null?","msgtype":"m.text"},"ts":1442405753000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmmm, sounds like there are some things you are not sure about","msgtype":"m.text"},"ts":1442405777000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"Ms2ger: seems reasonable","msgtype":"m.text"},"ts":1442405787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Great, thanks","msgtype":"m.text"},"ts":1442405797000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"schalkneethling: well, it's not really clear who this is for and the bits you explain about CORS are only a small part of the story so it's not particularly clear why you picked those bits and not the others, etc.","msgtype":"m.text"},"ts":1442405841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, it would be aimed at web developers using the video element and perhaps not being familiar with the crossorigin attribute","msgtype":"m.text"},"ts":1442405886000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"and a little broad overview of how it forms part of the larger framework of loading resources","msgtype":"m.text"},"ts":1442405916000,"senderName":"schalkneethling","senderId":"schalkneethling@irc"},
{"content":{"body":"dang we were getting close to having only 300 open bugs before","msgtype":"m.text"},"ts":1442407315000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"now 318","msgtype":"m.text"},"ts":1442407325000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/buglist.cgi?component=HTML&list_id=59532&product=WHATWG&resolution=---","msgtype":"m.text"},"ts":1442407327000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: you ruined it!","msgtype":"m.text"},"ts":1442407419000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, annevk, fyi, we're killing the notification center (bell icon in the system tray), and notifications will either auto-dismiss after 8/25 (undecided) seconds or stay on-screen forever","msgtype":"m.text"},"ts":1442407552000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I blame you and zcorpan_","msgtype":"m.text"},"ts":1442407571000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"beverloo: even on OS X?","msgtype":"m.text"},"ts":1442407587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: glad to hear that","msgtype":"m.text"},"ts":1442407588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes, annevk","msgtype":"m.text"},"ts":1442407595000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Chrome OS keeps it as part of the OS, Android uses the OS' notification center, it's gone on Win/Mac/Linux","msgtype":"m.text"},"ts":1442407611000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: how does that work? You simply don't integrate with the OS?","msgtype":"m.text"},"ts":1442407623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"usage statistics were in the realms of \"it pretty much doesn't exist\"","msgtype":"m.text"},"ts":1442407628000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I think the notification center approach is bad UX in practice","msgtype":"m.text"},"ts":1442407633000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yes, we found it to not work","msgtype":"m.text"},"ts":1442407641000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"annevk, indeed. We're keeping our own toasts for now and won't (yet) move them to the OS' notification center after","msgtype":"m.text"},"ts":1442407673000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"it's something we're looking at, but are yet undecided on. there's a huge variety in feature support on different platforms, and we'd be giving up all our flexibility","msgtype":"m.text"},"ts":1442407709000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: very sad there's no integration into the OS on desktop, especially Windows... I guess that's to be expected when all your devs use Linux though.","msgtype":"m.text"},"ts":1442407713000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(which is not necessarily a bad thing)","msgtype":"m.text"},"ts":1442407722000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Well, OK, now that you said your last line it sounds much more reasonable","msgtype":"m.text"},"ts":1442407732000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, we're actually looking at that, especially with Windows 10's new notification center :)","msgtype":"m.text"},"ts":1442407747000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1442407756000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"beverloo: somewhat related to this, I been wanting to say that I find Gmail's currently-deployed notification behavior to not be so great, in that when I click a Gmail notification, it focuses a new window (instead of, say, some state of my existing gmail inbox tab), and then when I click a link from that gmail window, the window gets pushed down and the new page opens in my main browser window with all","msgtype":"m.text"},"ts":1442407997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my tabs","msgtype":"m.text"},"ts":1442408003000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: so if you're okay with path-absolute URLs, no changes to Wattsi would be required...","msgtype":"m.text"},"ts":1442408012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we'd just update source","msgtype":"m.text"},"ts":1442408020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, agreed","msgtype":"m.text"},"ts":1442408048000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I can't say much about it, but we're talking :)","msgtype":"m.text"},"ts":1442408052000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: and when I do that N number of times, I end up with N different useless windows sitting open in the background (which I then need to go back and manually close each one)","msgtype":"m.text"},"ts":1442408058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"beverloo: k","msgtype":"m.text"},"ts":1442408062000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ah that's true. I guess I am OK with that.","msgtype":"m.text"},"ts":1442408357000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: combined with your patch to remove the images.whatwg.org thing I think we're all set then","msgtype":"m.text"},"ts":1442408545000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: guess I'll wait for that to land first","msgtype":"m.text"},"ts":1442408551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I think the vast majority are right. It's not impossible one or two slipped through.","msgtype":"m.text"},"ts":1442411420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: was https://github.com/validator cloning HTML intentional?","msgtype":"m.text"},"ts":1442411512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah that was just for me to create a PR against mkwst's fork","msgtype":"m.text"},"ts":1442411619000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will delete that validator fork now","msgtype":"m.text"},"ts":1442411640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sento time; back in ~2hrs","msgtype":"m.text"},"ts":1442412114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders: One was wrong, zcorpan made a PR.","msgtype":"m.text"},"ts":1442412562000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Anyone use @htmlstandard recently? Just got an email from Twitter about potential account abuse...","msgtype":"m.text"},"ts":1442413009000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: jgraham merged it hours ago :P","msgtype":"m.text"},"ts":1442413094000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hah, didn't even notice.","msgtype":"m.text"},"ts":1442413113000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: it was me, trying to add it to tweetdeck","msgtype":"m.text"},"ts":1442413367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: Are some svg attributes supposed to be dropped?","msgtype":"m.text"},"ts":1442413409000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: Yes. Loads were removed ages from the spec.","msgtype":"m.text"},"ts":1442413440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Never mind, completely misread the step.","msgtype":"m.text"},"ts":1442413444000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Is filterres special?","msgtype":"m.text"},"ts":1442413456000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"special how?","msgtype":"m.text"},"ts":1442413514000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Appearing out of nowhere like a wild pokémon.","msgtype":"m.text"},"ts":1442413525000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: https://github.com/html5lib/html5lib-tests/blob/master/tree-construction/tests11.dat#L155","msgtype":"m.text"},"ts":1442413553000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I probably fucked up one of the merges. :)","msgtype":"m.text"},"ts":1442413589000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: fucked up the merge.","msgtype":"m.text"},"ts":1442413610000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Just not here, I guess?","msgtype":"m.text"},"ts":1442413623000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Not just here*","msgtype":"m.text"},"ts":1442413627000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: https://github.com/html5lib/html5lib-tests/pull/69","msgtype":"m.text"},"ts":1442413727000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: tl;dr: it's an attribute that got dropped","msgtype":"m.text"},"ts":1442413728000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: TL;DR LGTM. :P","msgtype":"m.text"},"ts":1442413855000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: soz, trying to do ten things at once :P","msgtype":"m.text"},"ts":1442413871000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, or was the test supposed to check that filterres doesn't become filterRes?","msgtype":"m.text"},"ts":1442413882000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1442413930000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Fixed.","msgtype":"m.text"},"ts":1442413939000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"hmm, yeah, we probably ought have tests checking they don't get changed","msgtype":"m.text"},"ts":1442413988000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bah, I did the wrong thing in the merge, I guess.","msgtype":"m.text"},"ts":1442413994000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because Blink just removed them from the tests altogether","msgtype":"m.text"},"ts":1442414004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'd suggest having the not-converted attributes in a different tests, though.","msgtype":"m.text"},"ts":1442414019000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I leave that as an exercice to the next person. :P","msgtype":"m.text"},"ts":1442414053000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Good morning/afternoon/evening WHATWG crew o/","msgtype":"m.text"},"ts":1442414785000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"I was thinking, we could have something related to a kitchen sink as logo for @htmlstandard","msgtype":"m.text"},"ts":1442415313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/could/MUST/ :)","msgtype":"m.text"},"ts":1442415737000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: I think there's a few places where attributes have states, and then whatever is the current state is called the mode...","msgtype":"m.text"},"ts":1442417461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I haven't seen mode anywhere else","msgtype":"m.text"},"ts":1442417506000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"e.g. \"If an HTML element's translate attribute is in the yes state\"","msgtype":"m.text"},"ts":1442417566000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maps to a *separate* concept of translation mode","msgtype":"m.text"},"ts":1442417581000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but the attribute has a state, not a mode","msgtype":"m.text"},"ts":1442417589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And there's an explicit mapping between the attribute states and the translate modes","msgtype":"m.text"},"ts":1442417607000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"mode being the current state of the element's crossorigin content attribute\"","msgtype":"m.text"},"ts":1442417613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah the current spec has this confusion, i agree","msgtype":"m.text"},"ts":1442417634000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but it is very confusing","msgtype":"m.text"},"ts":1442417637000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and doesn't match any other attributes","msgtype":"m.text"},"ts":1442417658000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess I can just rename it all to state, I don't care strongly","msgtype":"m.text"},"ts":1442417676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes please :)","msgtype":"m.text"},"ts":1442417702000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: before I do that, did you review the changes? If so I'll rebase first","msgtype":"m.text"},"ts":1442417747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Meh never mind","msgtype":"m.text"},"ts":1442417800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah looks good","msgtype":"m.text"},"ts":1442417846000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: heh, my own noexport patch made rebasing harder","msgtype":"m.text"},"ts":1442418507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: anyway, rebasing is done, I didn't squash yet since I guess we are not done yet...","msgtype":"m.text"},"ts":1442418523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ergh. I hate how practically impossible it is to state what meta elements have any affect on SEO.","msgtype":"m.text"},"ts":1442418690000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: sorry, will try to finish review within the next few hours...","msgtype":"m.text"},"ts":1442418707000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no worries","msgtype":"m.text"},"ts":1442418733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Cookies respect SOP by design\" oh public-webappsec...","msgtype":"m.text"},"ts":1442419561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: The saga continues. I've fixed support for IE8 by using attachEvent which works as expected. However the only one broken still is Android 2.3 (ugh). It doesn't implement readystatechange. It does implement DOMContentLoaded, but that's when interactive happens, not complete.","msgtype":"m.text"},"ts":1442421702000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"And in fact it also has readyState (property) incorrect, it uses \"loading\" and \"loaded\". Not interactive or complete. And it","msgtype":"m.text"},"ts":1442421723000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"'s loaded matches \"interactive\"","msgtype":"m.text"},"ts":1442421734000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Progress at http://codepen.io/Krinkle/pen/rOxRjm?editors=001","msgtype":"m.text"},"ts":1442421839000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"or here https://gist.github.com/Krinkle/fc0b4d4626f2409219ee","msgtype":"m.text"},"ts":1442421905000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"test","msgtype":"m.text"},"ts":1442422530000,"senderName":"Matt5ander5","senderId":"Matt5ander5@irc"},
{"content":{"body":"Domenic: what about https://github.com/whatwg/html/pull/144#issuecomment-140643963?","msgtype":"m.text"},"ts":1442423314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Krinkle: so are you planning on working on source maps? Since we have this repo...","msgtype":"m.text"},"ts":1442423354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm waiting for reply from the mailing list","msgtype":"m.text"},"ts":1442424238000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: source map mailing list?","msgtype":"m.text"},"ts":1442424259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1442424264000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"They don't seem to be interested.","msgtype":"m.text"},"ts":1442424268000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"https://groups.google.com/forum/#!topic/mozilla.dev.js-sourcemap/SD8sZ_7VFpw","msgtype":"m.text"},"ts":1442424308000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"annevk: I suppose we can delete the repo fo rnow","msgtype":"m.text"},"ts":1442424430000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: Andoird 2.3 is still a thing","msgtype":"m.text"},"ts":1442424485000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1442424487000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Krinkle: maybe that's better so nobody gets the impression we step on their turf","msgtype":"m.text"},"ts":1442424508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, fine by me :)","msgtype":"m.text"},"ts":1442424520000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: Enough of a thing that we support it.","msgtype":"m.text"},"ts":1442424539000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"And adding a primitive like this requires support there, otherwise random things will start to fail there.","msgtype":"m.text"},"ts":1442424558000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"We've dropped support for IE6 and IE7 in 2014","msgtype":"m.text"},"ts":1442424585000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Oh good.","msgtype":"m.text"},"ts":1442424592000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"for JS runtime at least (we \"support\" that fact that it isn't supported by cutting the mustard)","msgtype":"m.text"},"ts":1442424604000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"We still support them for basic stylesheet and content accessibility","msgtype":"m.text"},"ts":1442424623000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Because IE is very UX intrusive when it comes to exceptions.","msgtype":"m.text"},"ts":1442424654000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: removed, let me know if you need it back or want to work on something else","msgtype":"m.text"},"ts":1442424686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JonathanNeal: It's been a while since I evaluated Android usage though. Let me take a peek","msgtype":"m.text"},"ts":1442424715000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: This is last month's Wikimedia global page-view traffic browser usage: https://docs.google.com/spreadsheets/d/1n9FhSqcBGM9iKXrlHsP0EZI0gU89Rmz5m51uglUGVjs/edit#gid=0","msgtype":"m.text"},"ts":1442424737000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Traditionally our cut off for dropping support is about 0.1%","msgtype":"m.text"},"ts":1442424933000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"that's up form 0.01% in 2005. We've become laxer and more willing to drop support. Mostly because we now have a more mature non-js mode.","msgtype":"m.text"},"ts":1442424959000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Looks like Android 2 is at 0.69% (109M views in August '15)","msgtype":"m.text"},"ts":1442425163000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"JonathanNeal: So back to the load promise, I think I'll just bite the bullet and try and ship this as part of the first script payload (which runs before window onload for sure)","msgtype":"m.text"},"ts":1442425910000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"The one from your gist?","msgtype":"m.text"},"ts":1442425925000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"And have it be defined as window.onload ->setTimeout->resolve.","msgtype":"m.text"},"ts":1442425927000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Can't use readystatechange because Android 2.3. And I don't see any way to determine whether readyState=complete in Android","msgtype":"m.text"},"ts":1442425960000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"it only implements the non-standard readyState \"loaded\" which an equivelant to \"interactive\"","msgtype":"m.text"},"ts":1442425977000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"in Android the current code in the gist just remained unresolved.","msgtype":"m.text"},"ts":1442426018000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"What about using the window.onload event then?","msgtype":"m.text"},"ts":1442426075000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Well, I can only do that if it hasn't happend yet","msgtype":"m.text"},"ts":1442426087000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I don't have a way to determine whether it has","msgtype":"m.text"},"ts":1442426094000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Unrelated, these new CSS syntax goodies like `@nest` rules, `:matches`, and `@apply` really chip away at the usability of Sass.","msgtype":"m.text"},"ts":1442426404000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"That's the point, yeah.","msgtype":"m.text"},"ts":1442426450000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Preprocessors exist largely because CSS hasn't been extensible.  As we fix that, the set of things that preprocessors provide will shrink.","msgtype":"m.text"},"ts":1442426482000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They'll still be useful, just not for a bunch of basic stuff, as we'll be able to move those into either core CSS or at least small JS libraries.","msgtype":"m.text"},"ts":1442426505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Does JS really make more sense than preprocessing the CSS?","msgtype":"m.text"},"ts":1442426553000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: oh, I thought you already duped all of them. But I guess not the issues. Seems reasonable, although I personally find it satisfying when my commit message contains a nice long string of \"Fixes #123. Fixes #124. Fixes #231.\" :)","msgtype":"m.text"},"ts":1442426911000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: It's easy than a build step. That's basically ReSpec's value proposition over Bikeshed.","msgtype":"m.text"},"ts":1442426977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"All my current fun with CSS is mostly down to prefixes, different browsers supporting different stuff in short-hands, and other fun with legacy browsers.","msgtype":"m.text"},"ts":1442427078000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't even know how to fix most of that, precicely because legacy.","msgtype":"m.text"},"ts":1442427094000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"This fetch change is so good, look at all this extra precision being added.","msgtype":"m.text"},"ts":1442428176000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I wish I had time to review the fetch change","msgtype":"m.text"},"ts":1442428615000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hm.. interesting. So the pre* specs are together now in resource-hints. That's a nice simplification.","msgtype":"m.text"},"ts":1442430001000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Domenic: annevk: ok i've looked through the fetch PR editorially. i'd also like to review that there isn't something in the old text that is lost, which is non-obvious","msgtype":"m.text"},"ts":1442435836000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]