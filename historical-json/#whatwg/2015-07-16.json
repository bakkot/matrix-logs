[
{"content":{"body":"For a moment I thought inclusive siblings would let me get rid of contiguous Text nodes, but alas...","msgtype":"m.text"},"ts":1437026938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In the category everything old is new again: https://github.com/whatwg/fetch/issues/83","msgtype":"m.text"},"ts":1437031004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: https://fetch.spec.whatwg.org/#client-request is the set of terms of we have today","msgtype":"m.text"},"ts":1437034885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: we could rename resource request to subresource request, but that still wouldn't include workers","msgtype":"m.text"},"ts":1437034904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: we could make it include workers, and then name the other type \"non-worker subresource request\"?","msgtype":"m.text"},"ts":1437034927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, why fetch couldn't return document directly like xhr does? is there something prevents res.document() to work?","msgtype":"m.text"},"ts":1437038341000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"hgl: we mostly decided we didn't want the Fetch layer to depend upon the HTML parser","msgtype":"m.text"},"ts":1437038425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and all of DOM)","msgtype":"m.text"},"ts":1437038433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"once streams are out I'm sure something will come along that plugs all these pieces together","msgtype":"m.text"},"ts":1437038461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, just saw issue #16 too on github too. thanks for the explanation. makes sense.","msgtype":"m.text"},"ts":1437038479000,"senderName":"hgl","senderId":"hgl@irc"},
{"content":{"body":"annevk: what is your opinion on custom ctors ?","msgtype":"m.text"},"ts":1437039250000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I would love it if we could make them work as I think that's ultimately what developers want, a mapping between markup and JS objects","msgtype":"m.text"},"ts":1437039316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and anything that doesn't expose the constructor will have a hard time competing with libraries that do manage to expose the constructor down the line","msgtype":"m.text"},"ts":1437039353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1437039374000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(even harder if the JavaScript language evolves and adds features that depend on the constructor)","msgtype":"m.text"},"ts":1437039383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and can you imagine what the spec would look like for this, for all sorts of edge cases?","msgtype":"m.text"},"ts":1437039399000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"my worry is really in the spec level","msgtype":"m.text"},"ts":1437039416000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps I worry too much","msgtype":"m.text"},"ts":1437039438000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"For the HTML parser it seems doable, since there's already a script-synchronization point. Although obviously it requires work and careful checks...","msgtype":"m.text"},"ts":1437039455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For cloneNode() and such I have not tried to figure out the implications yet. I know mutation events were hard, but I am convinced we could define how they work today if we needed to. That kind of complexity becomes more trivial with the algorithms we have written down today.","msgtype":"m.text"},"ts":1437039537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, getting all the browser code in line...","msgtype":"m.text"},"ts":1437039554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic has some kind of intermediate proposal that does not expose constructors for now (the browser still allocates the objects), but would allow them to be added in the future. Basically an element registry that only exposes a \"get\", not a \"set\"...","msgtype":"m.text"},"ts":1437039628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(And on top of that you'd keep lifecycle callbacks, perhaps generalized to all elements rather than just custom elements.)","msgtype":"m.text"},"ts":1437039659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think that might be a nice way to ship custom elements without solving the hard problem, while keeping the door open for solving it later...","msgtype":"m.text"},"ts":1437039704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so DOM spec, including Range, and anything using Range might need some tweaks.","msgtype":"m.text"},"ts":1437039872000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"since suddenly after using certain range methods, the world around you might look totally different","msgtype":"m.text"},"ts":1437039903000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, if we do custom constructors in v1 and not Domenic's way out we'd have to do that","msgtype":"m.text"},"ts":1437040018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Define cloning in a way that makes it clear it operates on a live tree and then define everything that needs to do cloning in terms of that somehow...","msgtype":"m.text"},"ts":1437040062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: hey, are you awake?","msgtype":"m.text"},"ts":1437047334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I was wondering, for https://github.com/whatwg/fetch/issues/55 we wanted to introduce the \"obsolete flag\"","msgtype":"m.text"},"ts":1437047351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: however, couldn't we simply check if the used flag is set even if the body is null?","msgtype":"m.text"},"ts":1437047373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: ^^","msgtype":"m.text"},"ts":1437047381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so this problem is created by the transfer of body? If so, I agree with you, move the bodyUsed check before the if-body-not-null","msgtype":"m.text"},"ts":1437047944000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah, it seems we only ever set the used flag if input's body was non-null to begin with","msgtype":"m.text"},"ts":1437047995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"alright, I'll fix that","msgtype":"m.text"},"ts":1437048041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then next Wednesday we can worry about the rest :-)","msgtype":"m.text"},"ts":1437048051000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: unfortunately i'm not going to make the Wednesday as I have a flight to Austin for TXJS, but the other people in the room know more than me about streams anyway","msgtype":"m.text"},"ts":1437048144000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I see, will you be there Monday?","msgtype":"m.text"},"ts":1437048170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yep, and Tuesday","msgtype":"m.text"},"ts":1437048184000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I was kind of hoping we could cover cancelable stuff too","msgtype":"m.text"},"ts":1437048191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: for custom elements?","msgtype":"m.text"},"ts":1437048196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: especially if sleevi is there the security concerns around cancelation and streams in general","msgtype":"m.text"},"ts":1437048224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know much about custom elements, so dunno if it's worth me going to that meeting, but I'll be in the vicinity","msgtype":"m.text"},"ts":1437048228000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: guess we'll mostly hang out Monday then; I'm in town Sunday too","msgtype":"m.text"},"ts":1437048255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I arrive 14:35 on Sunday, so definately time for food & drinks Sunday evening if you're around","msgtype":"m.text"},"ts":1437048382000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"sounds good","msgtype":"m.text"},"ts":1437048393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I was going to allow not teeing a request if you disable redirects and disable dialogs and such (through setting request's window to \"no-window\") but it mentions something about the Headers maybe changing...","msgtype":"m.text"},"ts":1437049325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm kind of glad I leave notes for myself, but they could be a little clearer","msgtype":"m.text"},"ts":1437049343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah okay, I think I figured it out...","msgtype":"m.text"},"ts":1437049420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it was a rare morning and i indeed was asleep","msgtype":"m.text"},"ts":1437054028000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1437054176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is anyone working on wpt tests for the fetch spec yet?","msgtype":"m.text"},"ts":1437058109000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not that I know of","msgtype":"m.text"},"ts":1437058119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I created some tests for nosniff...","msgtype":"m.text"},"ts":1437058132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Any volunteers for converting Fetch to bikeshed?","msgtype":"m.text"},"ts":1437060368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not me, but whoever does it make sure to insert plenty of typos in the manual id=some-section that Bikeshed will ask you to write. TabAtkins ;)","msgtype":"m.text"},"ts":1437060459000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Fetch is only half as long as DOM, easy-peasy.","msgtype":"m.text"},"ts":1437060550000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Judging by my past performance, should only take a month. ^_^","msgtype":"m.text"},"ts":1437060566000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do Web IDL :P","msgtype":"m.text"},"ts":1437061387000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"IDL in bikeshed would be great","msgtype":"m.text"},"ts":1437061486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"idl.spec.whatwg.org would be even better...","msgtype":"m.text"},"ts":1437061494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see https://compat.spec.whatwg.org/ is now live, do you know who'll be editing it, for the most part?","msgtype":"m.text"},"ts":1437061577000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"miketaylr I think","msgtype":"m.text"},"ts":1437061624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1437061629000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Is this the first step towards Gecko following Edge in pretending to be Chrome?","msgtype":"m.text"},"ts":1437061647000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, just trying to finish up some other junk this week before having more time","msgtype":"m.text"},"ts":1437061652000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"philipj: but contributions welcome ^_^","msgtype":"m.text"},"ts":1437061665000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: I'll just file the bugs and tell you the commas are in the wrong places ;)","msgtype":"m.text"},"ts":1437061693000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: not so much pretending to be chrome, just trying to make the mobile web work","msgtype":"m.text"},"ts":1437061695000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"heh fair","msgtype":"m.text"},"ts":1437061698000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"the Asian web especially","msgtype":"m.text"},"ts":1437061709000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Gecko does pretty well in the West, but in Japan and China things are... rough.","msgtype":"m.text"},"ts":1437061735000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: yeah, but so far both browsers who began adding some webkit things ended up either being Chromium (Opera) or pretending to be as well as possible (Edge)","msgtype":"m.text"},"ts":1437061763000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah.","msgtype":"m.text"},"ts":1437061782000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"i remember when we tried the same thing at opera","msgtype":"m.text"},"ts":1437061788000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"starting with webkit prefixes...","msgtype":"m.text"},"ts":1437061796000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"iirc, for the same reasons: japan compat","msgtype":"m.text"},"ts":1437061815000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"I happen to think that would be great, chuck away all the prefixes except those webkit ones that are required, and forget about the IE and Gecko code paths in existing content","msgtype":"m.text"},"ts":1437061817000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"A lot of work though, and likely a rough transition :/","msgtype":"m.text"},"ts":1437061842000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"to the extent possible i'd like to define supporting these things in terms of mappings to existing standard stuff","msgtype":"m.text"},"ts":1437061858000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Plus nothing but hate from developers who will promise to block you forever","msgtype":"m.text"},"ts":1437061860000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"sort of like polyfills i guess","msgtype":"m.text"},"ts":1437061863000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"heh, i'm familiar with developer hate","msgtype":"m.text"},"ts":1437061891000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"miketaylr: some things can probably simply be defined in terms of JavaScript entirely, definitely webkitMatchesSelector could","msgtype":"m.text"},"ts":1437061914000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1437061922000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"but then an alias is trivial in prose too","msgtype":"m.text"},"ts":1437061923000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"In any event, best of luck, you won't get any hate from me, unless you put the commas in the wrong places :)","msgtype":"m.text"},"ts":1437061942000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"hehe, thanks","msgtype":"m.text"},"ts":1437061948000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"So basically T[] is used in HTML and CSSOM","msgtype":"m.text"},"ts":1437064036000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Better than I expected","msgtype":"m.text"},"ts":1437064043000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm, I wonder where we documented why mutation events are problematic","msgtype":"m.text"},"ts":1437066355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/public-webapps/2011JulSep/0779.html is it btw","msgtype":"m.text"},"ts":1437067329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"execCommand() woof","msgtype":"m.text"},"ts":1437067858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess that's subsumed under editing though which i already knew about","msgtype":"m.text"},"ts":1437067878000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wanderview: so technically 2.2 'request's mode is not \"no-cors\" and response's type is \"opaque\".' is a bit of a hack","msgtype":"m.text"},"ts":1437067902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: if APIs truly worked on the response (and knew not to poke at the internal response), they would basically fail for those too","msgtype":"m.text"},"ts":1437067965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: actually, I guess it's a nice convenience since it gives the API less response types to distinguish, meh","msgtype":"m.text"},"ts":1437067994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is that still at https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html these days?","msgtype":"m.text"},"ts":1437068038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No love for that...","msgtype":"m.text"},"ts":1437068043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's got to be somewhere else...","msgtype":"m.text"},"ts":1437068156000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://w3c.github.io/editing/ has pointers","msgtype":"m.text"},"ts":1437068191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah this is the evolution thereof https://w3c.github.io/editing/execCommand.html","msgtype":"m.text"},"ts":1437068232000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks pretty bad this arbitrary splitting on features","msgtype":"m.text"},"ts":1437068245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Meh","msgtype":"m.text"},"ts":1437068275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I keep trying to tell people to focus on the model, but...","msgtype":"m.text"},"ts":1437068291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. the beforeinput/input thing is completely unclear about how these events get triggered and how that relates to the event loop and other things going on","msgtype":"m.text"},"ts":1437068484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Made with love by the libuv team. — libuv is for C projects that miss the joy of javascript callback hell.\"","msgtype":"m.text"},"ts":1437069276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha never seen that before","msgtype":"m.text"},"ts":1437069605000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ugh, doing WebIDL is on my list, yeah.","msgtype":"m.text"},"ts":1437069727000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Kinda considering taking a week or two off of work and just spending a few hours a day doing Bikeshed things.","msgtype":"m.text"},"ts":1437069741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And the rest video games.","msgtype":"m.text"},"ts":1437069745000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: considering auto-adding the commit id to a <meta> when you generate, if you do so from a git repo.  Makes it easier to look up historical revisions without having to do sleuthing to try and match up the commit.  Good/bad idea?","msgtype":"m.text"},"ts":1437070117000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1437070210000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Already doing similar things for streams","msgtype":"m.text"},"ts":1437070218000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"via a custom macro or something?","msgtype":"m.text"},"ts":1437070231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, https://github.com/whatwg/streams/blob/master/deploy.sh#L52-L53","msgtype":"m.text"},"ts":1437070252000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's still some references issues with bikeshed","msgtype":"m.text"},"ts":1437071415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But overall I like it better than Anolis","msgtype":"m.text"},"ts":1437071438000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It helps that it's maintained :)","msgtype":"m.text"},"ts":1437071470000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Yeah, I'm still not 100% happy with my handling of IDL, but I'm gradually iterating it towards goodness.","msgtype":"m.text"},"ts":1437071761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: also WHATWG vs W3C normative references is a bit of a pain","msgtype":"m.text"},"ts":1437071811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ugh, I know.","msgtype":"m.text"},"ts":1437071818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: but maybe that's mostly specref","msgtype":"m.text"},"ts":1437071819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it's specref. Tobie's trying to be even-handed.","msgtype":"m.text"},"ts":1437071831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is frustrating when it's wrong. ^_^","msgtype":"m.text"},"ts":1437071837000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But then I have mikewest on the other side preferring W3C refs for something or other, which I've so far mostly ignored.","msgtype":"m.text"},"ts":1437071863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mkwst: really? :/","msgtype":"m.text"},"ts":1437071883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am disappoint","msgtype":"m.text"},"ts":1437071892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heretic!","msgtype":"m.text"},"ts":1437071915000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"TabAtkins: to get a \"webapps\" bikeshed group/template... send you a PR or ...?","msgtype":"m.text"},"ts":1437071981000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: Yup. Probably just fork off of the csswg ones or something.","msgtype":"m.text"},"ts":1437072003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kk. Don't hold your breath tho.","msgtype":"m.text"},"ts":1437072059000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"No skin off my nose.","msgtype":"m.text"},"ts":1437072086000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam|away: \"behahvior\"","msgtype":"m.text"},"ts":1437072201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hober: othermaciej: any chance we can get you guys to comment on https://lists.w3.org/Archives/Public/public-webapps/2015JulSep/0159.html ?","msgtype":"m.text"},"ts":1437082569000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ok","msgtype":"m.text"},"ts":1437083248000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Domenic: I don't think our position has changed much since https://lists.w3.org/Archives/Public/public-webapps/2015AprJun/0225.html (see II.B. & II.C. in that email)","msgtype":"m.text"},"ts":1437083466000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: OK, got it. Note that upgrading and synchronous constructors are somewhat orthogonal. But if you guys think sync constructors are OK, could you maybe help me with https://lists.w3.org/Archives/Public/public-webapps/2015JulSep/0180.html ?","msgtype":"m.text"},"ts":1437083572000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i'll take a look","msgtype":"m.text"},"ts":1437083700000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Domenic: we'll look at it more closely and we'll send an update about our issue stances in general (maybe not til Monday in the worst case but def before the meeting)","msgtype":"m.text"},"ts":1437084322000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: awesome, thank you.","msgtype":"m.text"},"ts":1437084334000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"what would one expect from docFrag.querySelector(':root')?","msgtype":"m.text"},"ts":1437088975000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"css selectors 4 says \"an element that is the root of the document\"","msgtype":"m.text"},"ts":1437089128000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"does a DocumentFragment count? :)","msgtype":"m.text"},"ts":1437089144000,"senderName":"danbeam","senderId":"danbeam@irc"},
{"content":{"body":"danbeam: DocumentFragment isn't an element.","msgtype":"m.text"},"ts":1437090271000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So the answer is null, or whatever querySelector returns when it doesn't find anything.","msgtype":"m.text"},"ts":1437090288000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]