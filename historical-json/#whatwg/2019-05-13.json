[
{"content":{"body":"can anyone please point me to a RFC where the SameSite attribute is defined?","msgtype":"m.text"},"ts":1557728411000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"the recent Chrome cookie treatment recommends putting SameSite=None on cookies that are to be used as 3rd party, but MDN says that None is not a valid value","msgtype":"m.text"},"ts":1557728441000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.3.7","msgtype":"m.text"},"ts":1557728609000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: thanks! this is only a draft, right? how does one find what draft is the proper draft? :)","msgtype":"m.text"},"ts":1557728668000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: that's the most current one. If you click on \"Tracker\" at the top of the draft then you can find the history/status","msgtype":"m.text"},"ts":1557728712000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"In particular, it's been there in some form since 2014 though the first document to call it SameSite is draft-west-first-party-cookies-05 in 2016","msgtype":"m.text"},"ts":1557728793000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: nice, thanks. still a bit overwhelming, but I will try to understand the timeline at the top :)","msgtype":"m.text"},"ts":1557728802000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"my current issue is the 'None' value","msgtype":"m.text"},"ts":1557728819000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"that is recommended by Google","msgtype":"m.text"},"ts":1557728829000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(but rejected by Chrome up to 66)","msgtype":"m.text"},"ts":1557728841000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7 defines the meaning of None","msgtype":"m.text"},"ts":1557728932000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"ondras: it was only implemented in Chrome in https://chromium-review.googlesource.com/c/chromium/src/+/1573081","msgtype":"m.text"},"ts":1557728940000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"ondras: which per https://chromiumdash.appspot.com/commits?commit=324657c38b04e13532d952c90674bc453b634706&platform=Linux is only in 76","msgtype":"m.text"},"ts":1557728971000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1557728981000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"to be released in July","msgtype":"m.text"},"ts":1557728988000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"but support for non-{lax,strict} values was added in https://chromium.googlesource.com/chromium/src/+/5fbb75e93162093522879e707a13295b7452ef06%5E%21/#F2","msgtype":"m.text"},"ts":1557729010000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"so if I start sending samesite=none, chrome66 and older will reject those","msgtype":"m.text"},"ts":1557729027000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: do you have any idea how much market share Chrome <66 has?","msgtype":"m.text"},"ts":1557729095000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1557729100000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but i suppose that might include older android devices/browsers","msgtype":"m.text"},"ts":1557729128000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"that are extremely popular here in Czech Republic :/","msgtype":"m.text"},"ts":1557729137000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ah…","msgtype":"m.text"},"ts":1557729177000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"my initial plan was to start adding somesite=none to our cookies that are to be used in a 3rd party manner","msgtype":"m.text"},"ts":1557729211000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but I will have to re-consider","msgtype":"m.text"},"ts":1557729222000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: I suppose some telemetry would be useful for your case","msgtype":"m.text"},"ts":1557729344000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"perhaps","msgtype":"m.text"},"ts":1557729653000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"or, well, not forcing the None value when it even is not yet accepted as a RFC? :)","msgtype":"m.text"},"ts":1557729692000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: I would strongly encourage looking at implementation status rather than RFC approval as if a feature is ready","msgtype":"m.text"},"ts":1557729793000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":":/ okay","msgtype":"m.text"},"ts":1557729823000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"it's pretty common for a standardized feature to get hung up on approval due to bureaucratic matters","msgtype":"m.text"},"ts":1557729851000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"is this the case?","msgtype":"m.text"},"ts":1557729979000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"that, I don't know :)","msgtype":"m.text"},"ts":1557729989000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"the draft we are talking about, https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-5.4, it defines a storage model","msgtype":"m.text"},"ts":1557730212000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I might not be good at reading RFCs","msgtype":"m.text"},"ts":1557730221000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"but it looks to me like the model says \"samesite=none\" equals to no samesite attribute","msgtype":"m.text"},"ts":1557730236000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(step 13)","msgtype":"m.text"},"ts":1557730260000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"do I interpret this correctly?","msgtype":"m.text"},"ts":1557730269000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"I think so","msgtype":"m.text"},"ts":1557730276000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"okay. so this is the behavior chrome76 is not going to follow?","msgtype":"m.text"},"ts":1557730295000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Why do you say Chrome 76 isn't going to follow that behavior?","msgtype":"m.text"},"ts":1557730375000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: because they are going to implement \"no samesite attribute equals to samesite=lax\"","msgtype":"m.text"},"ts":1557730398000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"or that is what I understood","msgtype":"m.text"},"ts":1557730410000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: implementing ≠ enabling by default","msgtype":"m.text"},"ts":1557730577000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"ondras: from https://web.dev/samesite-cookies-explained/ it just seems like 76 adds a flag. there's probably going to be a bit of time before Lax is made the default","msgtype":"m.text"},"ts":1557730608000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"ondras: also, the proposed change to make lax default is captured in https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3.1","msgtype":"m.text"},"ts":1557730705000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"I expect it to be quite a while before these changes to the default are implemented","msgtype":"m.text"},"ts":1557730743000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: okay, thanks for explanation","msgtype":"m.text"},"ts":1557730870000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"@ondras What do you mean by rejected? From the article: \"any clients that do not recognize SameSite=None as of yet should ignore it and carry on as if the attribute was not set.\" - by which it means, the browser hasn't been updated so still uses the less secure default, which will work third party.","msgtype":"m.text"},"ts":1557742906000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"oliverdunk: well Chrome up to 66 ignores (does not store) cookies with SameSite=xyz (or None or any other non-Lax non-Strict value)","msgtype":"m.text"},"ts":1557743080000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"https://medium.com/compass-security/samesite-cookie-attribute-33b3bfeaeb95","msgtype":"m.text"},"ts":1557743176000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"this article describes the behavior; probably with chrome 62 or 63","msgtype":"m.text"},"ts":1557743193000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"my further testing on browserstack confirmed the said behavior up to 66","msgtype":"m.text"},"ts":1557743207000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: Gotcha, so Chrome didn't have that behaviour until the patch you linked. You should get in touch with the article's authors as it seems like an important thing to note :)","msgtype":"m.text"},"ts":1557743840000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"oliverdunk: okay, why not","msgtype":"m.text"},"ts":1557744689000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"oliverdunk: please ping me once the agreement thing is sorted and I'll get back to the DOM PR, leaving it for now","msgtype":"m.text"},"ts":1557749128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No worries, will do!","msgtype":"m.text"},"ts":1557758174000,"senderName":"oliverdunk","senderId":"oliverdunk@irc"},
{"content":{"body":"he did anyone see this q -> https://freenode.logbot.info/whatwg/20190511#c2171308 - maybe @annevk or @Domenic knows?","msgtype":"m.text"},"ts":1557758967000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: I had a really hard time understanding that... could you try something more brief?","msgtype":"m.text"},"ts":1557758988000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sure... so, back in original proposals Dimiti and team worked out complex multi-shadow root ideas","msgtype":"m.text"},"ts":1557759030000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"then at some point the decision was 'nah, let's just have one and it would throw if you did another'","msgtype":"m.text"},"ts":1557759049000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"but there's also no way to remove it and native ones can look like they have none but throw (iirc)","msgtype":"m.text"},"ts":1557759098000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"there was some discussion about how you would go about trying several things and the question was asked 'why is it that way' and.. I honestly couldn't recall beyond what I just said.  Why can you not delete or remove a shadow root?","msgtype":"m.text"},"ts":1557759223000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I looked, but I couldn't find anything beyond those early discussions which never asked _this_ question, but were based on you can only have one, not many","msgtype":"m.text"},"ts":1557759315000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"any better?","msgtype":"m.text"},"ts":1557759340000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"\"why can you not delete or remove a shadow root\", is the question?","msgtype":"m.text"},"ts":1557759773000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Are you asking about your own shadow root, or someone else's?","msgtype":"m.text"},"ts":1557759781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"can you help me understand the distinction?","msgtype":"m.text"},"ts":1557760178000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"how do I know about ownership? unless you mean author defined (any author) vs native?","msgtype":"m.text"},"ts":1557760211000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I mean custom element author vs. custom element user.","msgtype":"m.text"},"ts":1557761256000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bkardell: a lot of this boils down to more choices meaning more complexity","msgtype":"m.text"},"ts":1557761396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: and cutting down on complexity that wasn't justified to the extent people needed it to be","msgtype":"m.text"},"ts":1557761420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: it's not really \"nah\", it's that doing it requires answering \"how\" and that not necessarily being straightforward","msgtype":"m.text"},"ts":1557761494000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no I just meant 'nah' was the decision on multi-root designs for the time being - those discussions I recall - but I don't recall why there is no corresponding way to detach/remove one","msgtype":"m.text"},"ts":1557761644000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: that was not a \"nah\" decision, there were a lot of complexity arguments put forward","msgtype":"m.text"},"ts":1557761667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think maybe something is getting lost/overread... 'nah' is just intended as 'we decided not to for now' and nothing more","msgtype":"m.text"},"ts":1557761717000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"\"nah\" makes it sound like it wasn't duly considered","msgtype":"m.text"},"ts":1557761733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1557761736000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"ok, sorry, didn't intend to give that impression, was trying to be brief","msgtype":"m.text"},"ts":1557761749000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Whereas there are good reasons not to go there","msgtype":"m.text"},"ts":1557761752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, no I agree - there was a lot of complexity in those proposals","msgtype":"m.text"},"ts":1557761777000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"but I don't recall one about whether you could remove the one we decided to have - but you can't","msgtype":"m.text"},"ts":1557761815000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"that is what I am asking about - do you recall discussions on that? I can't find any","msgtype":"m.text"},"ts":1557761832000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"and I can't recall","msgtype":"m.text"},"ts":1557761839000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I can see issues, e.g., it's no longer clear how ShadowRoot.prototype.innerHTML works","msgtype":"m.text"},"ts":1557761891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A ShadowRoot not having a host would likely complicate other algorithms too","msgtype":"m.text"},"ts":1557761926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but wouldn't removing it just cause it to be freed?","msgtype":"m.text"},"ts":1557761953000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: that doesn't sound like JavaScript","msgtype":"m.text"},"ts":1557761975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm... I am confused by the appropriate level of detail I should be providing to be clear possibly","msgtype":"m.text"},"ts":1557762056000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"like element.removeShadowRoot() (or better name) could return no ref to the removed root - are you saying that doesn't sound like JavaScript?","msgtype":"m.text"},"ts":1557762160000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yes, because it already has a ref","msgtype":"m.text"},"ts":1557762408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"got it","msgtype":"m.text"},"ts":1557762548000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"sorry, I see what you mean now","msgtype":"m.text"},"ts":1557762558000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Domenic, hey, did you end up working on IDL/kv-storage?","msgtype":"m.text"},"ts":1557762810000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no, after seeing you'd already done most of the work, it felt less urgent... I guess it'd still be worthwhile for one of us to factor out the module pieces that could land sooner, leaving the rest in prose? I dunno.","msgtype":"m.text"},"ts":1557763868000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bkardell: I wasn't around for early discussions, so if the question is \"do you recall such discussions\" I don't. (What I meant by brevity is mostly stating concrete questions.)","msgtype":"m.text"},"ts":1557763898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bkardell: if the question is \"why can you not delete or remove a shadow root\", it depends on you. A custom element user removing a shadow root is an encapsulation violation. A custom element author removing a shadow root doesn't seem to add much over allowing them to just replace the contents with whatever they want.","msgtype":"m.text"},"ts":1557763941000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"A custom element author removing a shadow root doesn't seem to add much over allowing them to just replace the contents with whatever they want.\" - yeah, I agree","msgtype":"m.text"},"ts":1557764017000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1557764035000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"@Domenic on asking concrete questions, will try to do so in the future :)","msgtype":"m.text"},"ts":1557764623000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"TabAtkins: $ bikeshed update / Updating via manifest... / Local data is already up-to-date (2019-05-06 04:51:06.668829). Done!","msgtype":"m.text"},"ts":1557765661000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Where are my updated dfns :((","msgtype":"m.text"},"ts":1557765666000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh jeez, my computer just have fallen over at work.","msgtype":"m.text"},"ts":1557765717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And between vacation, IO, and sick wife, I haven't been to the office since then","msgtype":"m.text"},"ts":1557765756000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I need to figure out how to put this on something external. 😑","msgtype":"m.text"},"ts":1557765784000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I should be able to run it manually from my laptop tho, I'll check on that in a sec","msgtype":"m.text"},"ts":1557765973000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"haha I see","msgtype":"m.text"},"ts":1557766398000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Okay, data should be pushed up now.","msgtype":"m.text"},"ts":1557766542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Remember that you can always run `bikeshed update --skip-manifest`, if you want to force a full update manually without relying on the manifest data.)","msgtype":"m.text"},"ts":1557766635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(But thank you for the ping anyway.)","msgtype":"m.text"},"ts":1557766679000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, I did not know that, although I suppose I could have checked the docs","msgtype":"m.text"},"ts":1557766718000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or `bikeshed update -h` ^_^","msgtype":"m.text"},"ts":1557766884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: btw, the more I touch specs, the more I appreciate bikeshed, it's really nice :)","msgtype":"m.text"},"ts":1557782207000,"senderName":"ecobos","senderId":"ecobos@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1557782214000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there a way in spec land to determine whether an image was created/inserted by the parser as opposed to by script etc? I know <script>a have a parser inserted flag, but seems images do not.","msgtype":"m.text"},"ts":1557788726000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"<script>s*","msgtype":"m.text"},"ts":1557788982000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: no","msgtype":"m.text"},"ts":1557790691000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: One thing with Chromium’s LazyLoad impl is that scripts created in any way that’s not by the parser naturally (i.e., by some script) will never be lazy loaded when loading=auto. I’m wondering if it is reasonable to express this in spec by saying something to the effect of “if the image was not created by the parser, set loading attr to eager”.","msgtype":"m.text"},"ts":1557791547000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"This may help address some of JakeA’s concerns, but would introduce the concept of being able to determine how the img was created","msgtype":"m.text"},"ts":1557791596000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: would it be good enough to make new Image() set the loading attribute?","msgtype":"m.text"},"ts":1557791631000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"similar to new Audio()","msgtype":"m.text"},"ts":1557791641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but if web compat needs document.createElement('img') to be eager, but parsed <img> not, then sure","msgtype":"m.text"},"ts":1557791732000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]