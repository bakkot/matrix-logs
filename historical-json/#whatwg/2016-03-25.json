[
{"content":{"body":"Domenic: if there's ever a time where you want to have a look at the Generic Sensor API and comment, now (i.e. within the next 2 weeks or so) we would be about right.","msgtype":"m.text"},"ts":1458865807000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"https://w3c.github.io/sensors/ for the Generic Sensor ED and https://w3c.github.io/ambient-light/ for a first concrete sensor building on top of it.","msgtype":"m.text"},"ts":1458865866000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"slightlyoff: ta","msgtype":"m.text"},"ts":1458882337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: no review?","msgtype":"m.text"},"ts":1458882343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, after reading https://github.com/whatwg/fetch/issues/66 I'm wondering if fetch responses with redirect: 'manual' might expose the response body some time in the future?","msgtype":"m.text"},"ts":1458882891000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"Hmm, https://github.com/heycam/webidl/issues/101","msgtype":"m.text"},"ts":1458883011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: only if we design a protocol for the server to opt into","msgtype":"m.text"},"ts":1458883062000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: something like CORS, but for redirects","msgtype":"m.text"},"ts":1458883078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even for same-origin requests?","msgtype":"m.text"},"ts":1458883142000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"background: we have some REST API use cases in which the option to let the client opt out of redirects & access the response body instead would simplify caching","msgtype":"m.text"},"ts":1458883358000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"gwicke: yes","msgtype":"m.text"},"ts":1458883617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: https://fetch.spec.whatwg.org/#atomic-http-redirect-handling","msgtype":"m.text"},"ts":1458883642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the example cited there is a cross-origin redirect; I have trouble seeing the issue if it's all within the same origin","msgtype":"m.text"},"ts":1458883720000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"gwicke: could be similar for same-origin with it redirecting to some token URL that you didn't expect would be exposed","msgtype":"m.text"},"ts":1458883832000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm, okay","msgtype":"m.text"},"ts":1458883916000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"using redirects to hide such information from XSS feels a bit odd, but the restriction makes sense with that goal as a background","msgtype":"m.text"},"ts":1458884073000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1458884076000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"gwicke: it's because we never exposed redirects that exposing them now would cause problems, that kind of design was really the goal I think","msgtype":"m.text"},"ts":1458884280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: we just didn't expose redirects quickly enough","msgtype":"m.text"},"ts":1458884298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gwicke: but maybe it's kind of nice that we didn't","msgtype":"m.text"},"ts":1458884307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's too late in any case if we assume that sites rely on this quirk for XSS protection","msgtype":"m.text"},"ts":1458884518000,"senderName":"gwicke","senderId":"gwicke@irc"},
{"content":{"body":"right, that's what I meant","msgtype":"m.text"},"ts":1458885242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello #whatwg","msgtype":"m.text"},"ts":1458905874000,"senderName":"Guest45222","senderId":"Guest45222@irc"},
{"content":{"body":"looking at the spec around location interface and wondering the root cause of location's properties being unforgeable. I've seen lots of comments saying that it's for security purposes but no clear evidence to me.","msgtype":"m.text"},"ts":1458906000000,"senderName":"Guest45222","senderId":"Guest45222@irc"},
{"content":{"body":"some evidence on google books but not mush http://bit.ly/1RD3PsH","msgtype":"m.text"},"ts":1458906144000,"senderName":"march__","senderId":"march__@irc"},
{"content":{"body":"*much","msgtype":"m.text"},"ts":1458906148000,"senderName":"march__","senderId":"march__@irc"},
{"content":{"body":"march__: that's the reason","msgtype":"m.text"},"ts":1458906995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"march__: plugins would read those properties and expect them to be accurate","msgtype":"m.text"},"ts":1458907006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"march__: [Unforgeable] also makes them own properties, which is important for all the security checks in Location object's internal methods","msgtype":"m.text"},"ts":1458907043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How do you set something permanently on your PATH?","msgtype":"m.text"},"ts":1458910913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyone still familiar with the HTML parser that knows how to fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=28433?","msgtype":"m.text"},"ts":1458911325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks annevk for answer, this is exactly what i want to do : fool a script so it thinks that it's running somewhere else.","msgtype":"m.text"},"ts":1458912131000,"senderName":"march__","senderId":"march__@irc"},
{"content":{"body":"my last hope is https://github.com/hackvertor/MentalJS/blob/master/javascript/Mental.js","msgtype":"m.text"},"ts":1458912178000,"senderName":"march__","senderId":"march__@irc"},
{"content":{"body":"but it's quite ugly, too bad we can't sandbox properly third party scripts","msgtype":"m.text"},"ts":1458912420000,"senderName":"march__","senderId":"march__@irc"},
{"content":{"body":"annevk: I nominate zcorpan for becoming the parser person :P","msgtype":"m.text"},"ts":1458914527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nice to see the bugzilla count down as much as itâ€™s gone down","msgtype":"m.text"},"ts":1458916349000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: https://html.spec.whatwg.org/multipage/semantics.html#htmlhyperlinkelementutils seems to duplicate https://url.spec.whatwg.org/#api","msgtype":"m.text"},"ts":1458916740000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Is that intended?","msgtype":"m.text"},"ts":1458916744000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Are there differences?","msgtype":"m.text"},"ts":1458916757000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin, https://github.com/whatwg/url/issues/62","msgtype":"m.text"},"ts":1458917323000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Feature request: add https://tc39.github.io/ecma262/ to Shepherd.","msgtype":"m.text"},"ts":1458950360000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]