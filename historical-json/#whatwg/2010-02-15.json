[
{"content":{"body":"this style sheets blocking scripts stuff is a huge pain","msgtype":"m.text"},"ts":1266192420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should they block appendChild()ed scripts?","msgtype":"m.text"},"ts":1266192421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or only parser-inserted scripts?","msgtype":"m.text"},"ts":1266192422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: linking the design principles will be persuasive to some but may just set off others, so if your goal is persuasion I'd suggest dropping those","msgtype":"m.text"},"ts":1266193020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"someone objected to hidden=\"\"?! o_O","msgtype":"m.text"},"ts":1266193200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the one thing that is clearly and unambiguously an accessibility improvement?","msgtype":"m.text"},"ts":1266193260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is it?  I mean, in real life, don't UAs for blind users screen-scrape graphical browsers and therefore ignore display:none anyway?","msgtype":"m.text"},"ts":1266193440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, ignore things that are display:none, as visual browsers do.","msgtype":"m.text"},"ts":1266193441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"one would hope so","msgtype":"m.text"},"ts":1266193500000,"senderName":"NickYoung","senderId":"NickYoung@irc"},
{"content":{"body":"Some people actually believe in aural stylesheets, don't they?  :)","msgtype":"m.text"},"ts":1266193501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: relying on the style sheet for anything that critical is not a long-term solution","msgtype":"m.text"},"ts":1266193620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure why not, since realistically, that's what authors do.  So everyone will have to support it anyway.  Not that I object to the attribute, it's one of the syntactic-sugar things in HTML5 that it's nice to think about actually being able to use in ten years or so.","msgtype":"m.text"},"ts":1266193680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Are there *any* new features that hasn't had any objections?","msgtype":"m.text"},"ts":1266193740000,"senderName":"daedb_","senderId":"daedb_@irc"},
{"content":{"body":"that's circular thinking. Authors can't do anything _but_ use CSS at the moment.","msgtype":"m.text"},"ts":1266193741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"daedb_: there's a lot of them that haven't been noticed by the people complaining, i think","msgtype":"m.text"},"ts":1266193742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, I mean, so many authors rely so heavily on CSS to make their sites even basically functional that I can't imagine assistive technology would ever be able to get away with ignoring it.","msgtype":"m.text"},"ts":1266193800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Of course, in well-written HTML, you're better off just ignoring the CSS.  I once had a blind user in #mediawiki asking how to turn off all CSS on his wiki for blind users.","msgtype":"m.text"},"ts":1266193860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"HTML5 has added numerous features to try to reduce the need for CSS","msgtype":"m.text"},"ts":1266193861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(for that kind of semantic-level stuff)","msgtype":"m.text"},"ts":1266193862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I got into a discussion with him about AT, actually.  He said Windows AT is horrible and ridiculously expensive, Linux AT is horrible but at least free, and Mac AT is awesome and comes with the OS, IIRC.","msgtype":"m.text"},"ts":1266193920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hixie: Maybe that's true, I've just become even more cynical after seeing all the \"remove X new feature/element\" bugs and discussions that I have a complete lack of surprise when new objections come up.","msgtype":"m.text"},"ts":1266193921000,"senderName":"daedb_","senderId":"daedb_@irc"},
{"content":{"body":"AryehGregor: don't say that near the accessibility people, they'll say your blind user was biased against AT users","msgtype":"m.text"},"ts":1266193980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(seriously, any time VO is brought up, the \"experts\" dismiss it as a toy)","msgtype":"m.text"},"ts":1266193981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"VO?  Is that Mac's accessibility thing?","msgtype":"m.text"},"ts":1266194040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I would expect Mac to have good built-in accessibility, actually.  It's the sort of thing Apple does well.","msgtype":"m.text"},"ts":1266194041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"VoiceOver","msgtype":"m.text"},"ts":1266194042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Whereas I'd also totally expect Windows to have cruddy built-in stuff so everyone has to pay a fortune to get their OS working at a basic level.","msgtype":"m.text"},"ts":1266194043000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh i agree","msgtype":"m.text"},"ts":1266194100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And I'd also expect Linux to have something built-in that's sort of workable but not really very good.  So my expectations were totally satisfied.  :P","msgtype":"m.text"},"ts":1266194101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and that has totally been my experience in practice, playing with the various ATs, too","msgtype":"m.text"},"ts":1266194102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but we're not \"experts\", so our experiences and opinions are worthless","msgtype":"m.text"},"ts":1266194103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1266194340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: yt?","msgtype":"m.text"},"ts":1266194341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: currently datetime in HTML requires the colon in timezone. In uF wiki it’s recommended to drop colon to avoid confusing timezone and time","msgtype":"m.text"},"ts":1266199200000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"http://microformats.org/wiki/value-class-pattern#Date_and_time_parsing","msgtype":"m.text"},"ts":1266199201000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I’m guessing that HTML spec won’t include colonless style…","msgtype":"m.text"},"ts":1266199320000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I've never seen this happen in a Google cache result: http://74.125.113.132/search?q=cache:6v10d8GH4KEJ:aryeh.name/+aryeh+gregor&cd=7&hl=en&ct=clnk&gl=us","msgtype":"m.text"},"ts":1266200340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The thing at the top sort of got squished into the page.","msgtype":"m.text"},"ts":1266200400000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh, I see, it's not an iframe or anything, they just inject everything into the page as a div.","msgtype":"m.text"},"ts":1266200401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So my styling of <body> threw it off.","msgtype":"m.text"},"ts":1266200402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Freaky.","msgtype":"m.text"},"ts":1266200460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Great use-case for srcdoc=\"\".  ;)","msgtype":"m.text"},"ts":1266200461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Huh, that's new.  Cache results always *used* to be iframed, iirc.","msgtype":"m.text"},"ts":1266203220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie, here now","msgtype":"m.text"},"ts":1266206820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wait, Hixie's a cat now?","msgtype":"m.text"},"ts":1266206940000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Hixie: \"someone objected to hidden=\"\"?! o_O\" yeah, that's what I said. It's why I volunteered to write the counter-proposal--hidden=\"\" is one of the most no-brainer of HTML5 improvements over HTML4.","msgtype":"m.text"},"ts":1266216480000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"othermaciej: hmm. I aim to be persuasive to those who can be persuaded. I'd like to think that, regardless of someone's stance on the Design Principles document *as a whole*, that they still find the specific principles I cite to be reasonable.","msgtype":"m.text"},"ts":1266216840000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"If not, I'm not sure if anything I can write will have any effect.","msgtype":"m.text"},"ts":1266216841000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"That said, if I can reword things so that I make the same points in a way where I don't have to cite the principles, and if that's worth doing in the first place, I could do that, sure.","msgtype":"m.text"},"ts":1266216900000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"how. lots of process email over the weekend...","msgtype":"m.text"},"ts":1266217080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/how/wow/","msgtype":"m.text"},"ts":1266217140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, am here now","msgtype":"m.text"},"ts":1266221700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reading da email","msgtype":"m.text"},"ts":1266221701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dev.w3.org/csswg/cssom/#serialize-a-css-value","msgtype":"m.text"},"ts":1266224640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone with ideas how to rewrite that in a more extensible way?","msgtype":"m.text"},"ts":1266224641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's value primitives, e.g. CSS <uri> value, CSS <number> value, etc.","msgtype":"m.text"},"ts":1266224700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then properties combine those in weird ways","msgtype":"m.text"},"ts":1266224701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. comma-separated, space-separated","msgtype":"m.text"},"ts":1266224760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some values nest in function-like values, e.g. rect(<number>, ...)","msgtype":"m.text"},"ts":1266224761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could just declare CSS a mess and do something else :)","msgtype":"m.text"},"ts":1266226380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then you'd just be moving onto a less important mess :-)","msgtype":"m.text"},"ts":1266226560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"looks like the W3C is still in the mobile adaptation land: http://www.w3.org/2010/02/mbui/cfp","msgtype":"m.text"},"ts":1266226980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does anyone have keygen test cases?","msgtype":"m.text"},"ts":1266227100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks like googling for keygen is useless, because the work has been taken by the warez d00dz","msgtype":"m.text"},"ts":1266227160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/work/word/","msgtype":"m.text"},"ts":1266227161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: I like \"James Graham did most of the work [...] the system is relatively fragile\" :)","msgtype":"m.text"},"ts":1266227220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"does anyone have an example of great video use in a Wikipedia article?","msgtype":"m.text"},"ts":1266230040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Polar_bear is the best example I've found so far (the play-fight video; the nursing video is badly encoded)","msgtype":"m.text"},"ts":1266230460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, it seems implementations preserve more information than needed","msgtype":"m.text"},"ts":1266232680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. absolute length values are not normalized","msgtype":"m.text"},"ts":1266232681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay. http://jilion.com/sublime/video now works in Firefox","msgtype":"m.text"},"ts":1266232920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't work in Opera :-(","msgtype":"m.text"},"ts":1266233040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: very nice :o","msgtype":"m.text"},"ts":1266233760000,"senderName":"Necrathex","senderId":"Necrathex@irc"},
{"content":{"body":"firefox seems rather slow though (compared to chromium)","msgtype":"m.text"},"ts":1266233761000,"senderName":"Necrathex","senderId":"Necrathex@irc"},
{"content":{"body":"hsivonen: also works on the iPhone - that's nice!","msgtype":"m.text"},"ts":1266234300000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"though I'm not sure how the source selection picks it since there is no media query or anything else on it ","msgtype":"m.text"},"ts":1266234360000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"works fine for me on Firefox 3.7","msgtype":"m.text"},"ts":1266234420000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy, it seems to use a script, presumably with UA sniffing, for the source selection.","msgtype":"m.text"},"ts":1266235140000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"since it's using <source title=\"http://...\"> rather than <source src=\"http://...\">. I'm guessing it changes the title attributes to src attributes based on the detection","msgtype":"m.text"},"ts":1266235200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"thanks for tracking it down - I admit I couldn't be bothered ;-)","msgtype":"m.text"},"ts":1266235201000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ah, that's a good point","msgtype":"m.text"},"ts":1266235202000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"that might explain why it doesn't work in Opera, if they haven't done good UA sniffing","msgtype":"m.text"},"ts":1266235203000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I wonder if media queries would really help in this case","msgtype":"m.text"},"ts":1266235204000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"they also aren't using whatever prefix Opera supports for rounder corners","msgtype":"m.text"},"ts":1266235260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"vendor prefixes for the lose","msgtype":"m.text"},"ts":1266235261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I've promised to give my lecture about HTML5 again tomorrow at my alma mater","msgtype":"m.text"},"ts":1266235320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder how much I should edit my slides from the last year...","msgtype":"m.text"},"ts":1266235321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1266235322000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I'm going to have a similar challenge next week :)","msgtype":"m.text"},"ts":1266235380000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"I think I'll zap the drag&drop demo","msgtype":"m.text"},"ts":1266235381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"maybe I should also zap the postMessage demo and show pieces of code instead","msgtype":"m.text"},"ts":1266235382000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also, it would be nice to have a less violent canvas demo than Wolf3D","msgtype":"m.text"},"ts":1266235440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess I should talk and show more <video> stuff","msgtype":"m.text"},"ts":1266235441000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I should say something about microdata and RDFa","msgtype":"m.text"},"ts":1266235442000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but I don't really know what to say without getting too much into politics","msgtype":"m.text"},"ts":1266235500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"just talk about the benefits of Microdata, and don't focus on RDFa much at all","msgtype":"m.text"},"ts":1266235680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that reminds me, I need to write up my proposal for Web Directions South later. The deadline for that is coming up soon","msgtype":"m.text"},"ts":1266235920000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"'s canvas demo is entirely non-violent, because he was too lazy to implement guns","msgtype":"m.emote"},"ts":1266235921000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I thought you at least had a multiplayer version somewhere?","msgtype":"m.text"},"ts":1266235980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, on my hard disk somewhere, but that didn't have guns either","msgtype":"m.text"},"ts":1266235981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: what's wrong with violent demos? :)","msgtype":"m.text"},"ts":1266236040000,"senderName":"ment","senderId":"ment@irc"},
{"content":{"body":"(Just walking, and text chat)","msgtype":"m.text"},"ts":1266236041000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah, I thought you hadn't implemented that.","msgtype":"m.text"},"ts":1266236042000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But what the use of a multiplayer FPS without guns is I'm not sure","msgtype":"m.text"},"ts":1266236100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Second life in the browser?","msgtype":"m.text"},"ts":1266236101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You could have an FPS with only melee weapons","msgtype":"m.text"},"ts":1266236102000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what canvas 3D demo should I show?","msgtype":"m.text"},"ts":1266236160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Could do something like Second Life, but I'm not sure what the point would be","msgtype":"m.text"},"ts":1266236161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(preferrably something that doesn't hang my Intel GPU)","msgtype":"m.text"},"ts":1266236162000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(since Second Life already exists)","msgtype":"m.text"},"ts":1266236220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so no complex shaders","msgtype":"m.text"},"ts":1266236221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(and being in a web browser would just make it technologically worse)","msgtype":"m.text"},"ts":1266236222000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: You mean WebGL, rather than 3D emulated in the 2D context?","msgtype":"m.text"},"ts":1266236280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: WebGL, yes","msgtype":"m.text"},"ts":1266236281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Does it work at all on your GPU?","msgtype":"m.text"},"ts":1266236282000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"maybe I should have a 2D game demo for the 2D context instead of Wolf3D","msgtype":"m.text"},"ts":1266236283000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: it does","msgtype":"m.text"},"ts":1266236284000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't remember when Intel started having GLSL support","msgtype":"m.emote"},"ts":1266236285000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: sicking's shader-based fractals hang the intel GPU, though","msgtype":"m.text"},"ts":1266236340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: Aren't you already working on some game that is quite like a number of existing games?","msgtype":"m.text"},"ts":1266236400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe there are some X3DOM examples that could work? (since they don't rely on fancy shaders, and demonstrate the ability to provide APIs that are more user-friendly than raw OpenGL)","msgtype":"m.text"},"ts":1266236401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does Opera support Drag&Drop yet?","msgtype":"m.text"},"ts":1266236402000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: No","msgtype":"m.text"},"ts":1266236403000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yes, but it's not being artificially worsened by putting it in a web browser for no reason :-)","msgtype":"m.text"},"ts":1266236460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe I'll throw in geolocation and Web Workers now that HTML5 proper doesn't contain everything I talked about last year anyway","msgtype":"m.text"},"ts":1266236640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hasn't used SL-style programs since Alpha World on a dialup modem, where they hadn't even implemented teleportation so he had to run 10km to reach his house on the outskirts of the city, and where one day somebody discovered the .ini file that controls your avatar so everyone in the world changed themselves into chess pieces and lamp posts and floor tiles","msgtype":"m.emote"},"ts":1266236641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe they're a bit more advanced now?","msgtype":"m.text"},"ts":1266236642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen, where are you presenting?","msgtype":"m.text"},"ts":1266236760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://noppa.tkk.fi/noppa/kurssi/t-111.5360/esite","msgtype":"m.text"},"ts":1266236820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: Floor tiles? How does that work?","msgtype":"m.text"},"ts":1266236880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: The world consisted entirely of a flat infinite plane of grass, plus a load of objects (textured meshes) that users could create and move and rotate and slightly script","msgtype":"m.text"},"ts":1266237000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so floors were built out of lots and lots of flat square floor tiles","msgtype":"m.text"},"ts":1266237060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and there was nothing stopping you picking one of those objects as your avatar","msgtype":"m.text"},"ts":1266237061000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: So your avatar was a bunch of flat squares?","msgtype":"m.text"},"ts":1266237062000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No, a single flat square","msgtype":"m.text"},"ts":1266237120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That's what I thought when you first mentioned it.","msgtype":"m.text"},"ts":1266237121000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That must make seeing other people fun","msgtype":"m.text"},"ts":1266237122000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The developers fixed it after a few days, sadly :-(","msgtype":"m.text"},"ts":1266237123000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so you could only be the normal human shape","msgtype":"m.text"},"ts":1266237124000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I have trouble finding WebGL demos that show something that's obviously not 2D canvas emulating 3D","msgtype":"m.text"},"ts":1266237720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"device-min-width makes some sense for <source media>","msgtype":"m.text"},"ts":1266237960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/sdk/demos/google/shiny-teapot/index.html is probably most obviously using WebGL and not just emulating stuff in the 2D API","msgtype":"m.text"},"ts":1266238140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"For all of Shelley's talk about FUD, this message seems like a quite good candidate: http://lists.w3.org/Archives/Public/public-html/2010Feb/0423.html","msgtype":"m.text"},"ts":1266238800000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"hmm, <canvas> exposes system colors, is that a privacy leak?","msgtype":"m.text"},"ts":1266238920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it may be, if you set your system colours to hex-encoded versions of your credit-card numbers and SSN","msgtype":"m.text"},"ts":1266239100000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"it seems system colors are lost with .fillStyle","msgtype":"m.text"},"ts":1266239220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least per spec","msgtype":"m.text"},"ts":1266239221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in opera they're always lost it seems","msgtype":"m.text"},"ts":1266239222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What about the text api?","msgtype":"m.text"},"ts":1266239223000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"system colors can presumably be used via fillStyle as another means to uniquely pin down people","msgtype":"m.text"},"ts":1266239340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unless we somehow forbid them in <canvas> and always return them as keywords through DOM APIs","msgtype":"m.text"},"ts":1266239400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's annoying that when you try to do something relatively simple (serialization of <color>) so many side-issues come up","msgtype":"m.text"},"ts":1266239401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure how much of a privacy leak it is tbh","msgtype":"m.text"},"ts":1266239520000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"not a whole lot for sure","msgtype":"m.text"},"ts":1266239580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could possibly pin down the identity of some people with system colours, but you couldn't pin down the identity of everybody","msgtype":"m.text"},"ts":1266239581000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"no, but lots of other variables can be used","msgtype":"m.text"},"ts":1266239582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as most people don't bother changing system colours or use one of a set of pre-defined defaults","msgtype":"m.text"},"ts":1266239583000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"I wouldn't worry about privacy leak, rather that it lets people create more authentic-looking fake chrome","msgtype":"m.text"},"ts":1266239640000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"But I suppose they can do that already?","msgtype":"m.text"},"ts":1266239700000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"they can do that by just using the system colors","msgtype":"m.text"},"ts":1266239701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's the whole point of system colors","msgtype":"m.text"},"ts":1266239702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking at http://www.w3.org/TR/html5-diff/ and noticed 3.1 figure example has <legend> (plus <figcaption> should be in the list)","msgtype":"m.text"},"ts":1266240780000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"annevk: want me to file a bug somewhere?","msgtype":"m.text"},"ts":1266240781000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: TR/ means out-of-date (unless we published very recently)","msgtype":"m.text"},"ts":1266240840000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah, it’s Aug 2009 :) no similar use of bugtracker for TR/ stuff then huh?","msgtype":"m.text"},"ts":1266240900000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"we don't fix /TR/ drafts","msgtype":"m.text"},"ts":1266240901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"see the editor's draft","msgtype":"m.text"},"ts":1266240902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1266240903000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(not even typos are fixed, though sometimes that happens and it will be annotated with \"edited in place\" or some such, mostly restricted to actual RECs)","msgtype":"m.text"},"ts":1266240960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks for explaining the distinction—I trusted the Googl & it let me down","msgtype":"m.text"},"ts":1266240961000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"It's a feature, really","msgtype":"m.text"},"ts":1266241200000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"At least that's what W3C says","msgtype":"m.text"},"ts":1266241201000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I should have read the header more carefully","msgtype":"m.text"},"ts":1266241202000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"it's a bit annoying really","msgtype":"m.text"},"ts":1266241260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"snapshots work when you do things in private","msgtype":"m.text"},"ts":1266241261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but when everything is in public and process happens daily, it's sort of a weird thing","msgtype":"m.text"},"ts":1266241320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and rather arbitrary","msgtype":"m.text"},"ts":1266241321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Especially when there are multiple drafts that need to be in sync","msgtype":"m.text"},"ts":1266241380000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"It only works for private things if you don't care about the fact that all external feedback will be out of date","msgtype":"m.text"},"ts":1266241560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"protecting against system colors would be rather hard for the canvas case btw","msgtype":"m.text"},"ts":1266241561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would either have to forbid them completely or mark the <canvas> as unsafe or some such","msgtype":"m.text"},"ts":1266241562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"could the canvas spec not mandate that the user is informed when system colours are accessed and can allow/deny it when it occurs?","msgtype":"m.text"},"ts":1266241740000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1266241741000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fair enough :)","msgtype":"m.text"},"ts":1266241742000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"(becuase in general you can't mandate UI)","msgtype":"m.text"},"ts":1266241743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva: People can make perfectly authentic-looking fake chrome by screenshotting Windows","msgtype":"m.text"},"ts":1266241800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"But in this specific case it would also be bad because, well, who wants to be asked a question like that","msgtype":"m.text"},"ts":1266241801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'warning, this page is trying to look authentic, which may compromise your system security. Do you wish the page to look half decent? <yes>, <no>'","msgtype":"m.text"},"ts":1266241802000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"this stuff is such a mess","msgtype":"m.text"},"ts":1266241803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that wouldn't go down well :)","msgtype":"m.text"},"ts":1266241860000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"anyway, hopefully webkit/gecko people have something to say about it: http://www.w3.org/mid/op.u758kvnh64w2qv@annevk-t60","msgtype":"m.text"},"ts":1266241861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Since this kind of attack is only statistical anyway and most people have UIs that look like the default windows UI you may as well just use the default windows UI look","msgtype":"m.text"},"ts":1266241920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/use/fake/","msgtype":"m.text"},"ts":1266241921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can check their UA string if you want to be more specific about which version of Windows they use","msgtype":"m.text"},"ts":1266241980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Indeed. And if for some reason you want to invest more effort than will result in payback you can determine OS X from the UA string too","msgtype":"m.text"},"ts":1266242040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and fake than when needed","msgtype":"m.text"},"ts":1266242041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But colours seem like one of the less important parts of UI spoofing - modern UI doesn't even use flat colours, so you care about gradients and shapes and hover effects and fonts","msgtype":"m.text"},"ts":1266242042000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is following foolip’s Chinese proverb","msgtype":"m.emote"},"ts":1266242160000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"TabAtkins, instead of #rrggbbaa we'll get .color.red .color.alpha etc. hopefully","msgtype":"m.text"},"ts":1266242340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which can be set as well)","msgtype":"m.text"},"ts":1266242341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hum, so the camelData supports multiple hyphens","msgtype":"m.text"},"ts":1266242342000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"camel?","msgtype":"m.text"},"ts":1266242343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Like two-hump camels?","msgtype":"m.text"},"ts":1266242344000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"data--whatnot------doquery","msgtype":"m.text"},"ts":1266242345000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"data-Whatnot-----Doquery","msgtype":"m.text"},"ts":1266242346000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That'll work too.  I'd still like to be able use #rrggbbaa in my stylesheets, though, rather than having to swap over to rgba() syntax and spend a few seconds converting from hex to dec.","msgtype":"m.text"},"ts":1266242400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wouldn't #rrggbbaa conflict with the current required parsing of bogus colour strings?","msgtype":"m.text"},"ts":1266242401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, i see, no real opinion on adding extra syntax","msgtype":"m.text"},"ts":1266242402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: Possibly.  Nuts to them, though.e","msgtype":"m.text"},"ts":1266242460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`, it would fail in older browsers and work in newer","msgtype":"m.text"},"ts":1266242461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`, which is how CSS extensions are supposed to work so that seems ok","msgtype":"m.text"},"ts":1266242462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interestingly, in some cases it would \"fail\" by parsing as a different color.  Though I think it likely that it would just parse as the non-a version.","msgtype":"m.text"},"ts":1266242520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolip: do you have any advice about hcard in microdata when you want to link the name? itemprop=\"fn\" on separate wrapper?","msgtype":"m.text"},"ts":1266242521000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Though :gasp: :shock: :horror: that might require some grammar changes.","msgtype":"m.text"},"ts":1266242522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't see why changing the grammar is such a huge deal","msgtype":"m.text"},"ts":1266242523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's totally not.  Bert's just stupid conservative.  >_<","msgtype":"m.text"},"ts":1266242580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we should just do it when it makes sense","msgtype":"m.text"},"ts":1266242581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean that <body bgcolor=#aabbccdd> already has a specific meaning, which presumably is relied on by some pages and can't be changed, and it would be weird if CSS specified a different meaning for the same colour syntax","msgtype":"m.text"},"ts":1266242700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Seems it's equivalent to #aabcdd)","msgtype":"m.text"},"ts":1266242701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it doesn't seem too weird to me given that's just legacy","msgtype":"m.text"},"ts":1266242880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has anyone done microformats in microdata? <meta content=\"\"> in spec’s hcard example isn’t working for me in foolip’s interpreter…","msgtype":"m.text"},"ts":1266243120000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"You have a name on it, right?","msgtype":"m.text"},"ts":1266243180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sorry, not name.  itemprop.","msgtype":"m.text"},"ts":1266243240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What browser?","msgtype":"m.text"},"ts":1266243300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Some move <meta> into <head> so it won't parse right","msgtype":"m.text"},"ts":1266243301000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins: yep <meta itemprop=\"type\" content=\"work\"> for hcard","msgtype":"m.text"},"ts":1266243360000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Philip`: Chrome 5 Mac","msgtype":"m.text"},"ts":1266243361000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"will check dom…","msgtype":"m.text"},"ts":1266243362000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(although hold on, this is in http://foolip.org/microdatajs/live/ so that shouldn’t matter, no?)","msgtype":"m.text"},"ts":1266243420000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"(I assume it still uses your browser to parse the HTML)","msgtype":"m.text"},"ts":1266243421000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ah, you’re right","msgtype":"m.text"},"ts":1266243480000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"the doc currently has 12 <head>s O_o","msgtype":"m.text"},"ts":1266243481000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Philip`: is there a way around that? apart from not using content=\"\"?","msgtype":"m.text"},"ts":1266243540000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"You could wait until everyone fixes their parsers","msgtype":"m.text"},"ts":1266243600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"would be nice if CSS made it more clear what was syntax-level and what's part of the model","msgtype":"m.text"},"ts":1266243601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"otherwise you have to not use <meta>, as far as I'm aware","msgtype":"m.text"},"ts":1266243602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"You can use <span itemprop style=display:none;>content</span> for now, if you have to.","msgtype":"m.text"},"ts":1266243603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hrm, sucks that there’s no equivalent of uF’s value-title pattern","msgtype":"m.text"},"ts":1266243660000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"The equivalent is <meta>, I thought","msgtype":"m.text"},"ts":1266243661000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1266243662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this is kind of a common need once you’re not using English","msgtype":"m.text"},"ts":1266243663000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"heh. I want to reply ‘a method that works,’ but half the uF tools can’t use value-title either","msgtype":"m.text"},"ts":1266243720000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"It works in the future!","msgtype":"m.text"},"ts":1266243721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks for that :P","msgtype":"m.text"},"ts":1266243722000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"And a method that works now is what I just described with <span>.","msgtype":"m.text"},"ts":1266243723000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It works in browsers with HTML5 parsers","msgtype":"m.text"},"ts":1266243780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"srsly thank you both for the info and the workaround","msgtype":"m.text"},"ts":1266243781000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"which is, admittedly, none","msgtype":"m.text"},"ts":1266243782000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, 1 if you set a pref.","msgtype":"m.text"},"ts":1266243783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That doesn't count :-p","msgtype":"m.text"},"ts":1266243784000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"living in the future is harder than the 1960’s made it out to be","msgtype":"m.text"},"ts":1266243785000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Really? Everyone here today managed it","msgtype":"m.text"},"ts":1266243840000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And we don't even get flying cars.  HUUUUGE disappointment.","msgtype":"m.text"},"ts":1266243841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if people predicting flying cars ever looked at traffic accident statistics","msgtype":"m.emote"},"ts":1266243842000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"one more q, are there any other tools for microdata apart from foolip’s that you know of?","msgtype":"m.text"},"ts":1266243900000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"where's the htmlwg wiki again?","msgtype":"m.text"},"ts":1266243901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bookmarklets, H2VX-equivalent convertors etc…","msgtype":"m.text"},"ts":1266243960000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"boblet: http://philip.html5.org/demos/microdata/demo.html","msgtype":"m.text"},"ts":1266243961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boblet: Would you be happy with ancient obsolete ones?","msgtype":"m.text"},"ts":1266243962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I’m always happy with your stuff","msgtype":"m.text"},"ts":1266243963000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I never am :-)","msgtype":"m.text"},"ts":1266243964000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh, know the feeling","msgtype":"m.text"},"ts":1266244020000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"cool that gives me another data point. no converting tools that output a vcard file for download yet tho huh","msgtype":"m.text"},"ts":1266244021000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"As far as I can tell, Microdata was invented by people named Philip.","msgtype":"m.text"},"ts":1266244022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think Hixie is named Philip","msgtype":"m.text"},"ts":1266244080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not ones that take Microdata, unless by \"download\" you mean \"copypasta from foolip's tool\".","msgtype":"m.text"},"ts":1266244081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: Shows what you know.  Philip is his middle name!","msgtype":"m.text"},"ts":1266244082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie Philip Hickson.","msgtype":"m.text"},"ts":1266244083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I never knew that :-o","msgtype":"m.text"},"ts":1266244084000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie Hickson","msgtype":"m.text"},"ts":1266244085000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1266244200000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"well, if someone whips one up in the next 2 days let me know :)","msgtype":"m.text"},"ts":1266244201000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"You could always whip up one yourself :-)","msgtype":"m.text"},"ts":1266244260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Go find one of the Microformat ones and mod it.","msgtype":"m.text"},"ts":1266244320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Microdata should be simple enough that that wouldn't be much work","msgtype":"m.text"},"ts":1266244321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"unfortunately I’m working on whipping up a preso on uF & microdata in HTML5","msgtype":"m.text"},"ts":1266244322000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"in Japanese :|","msgtype":"m.text"},"ts":1266244323000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"If it's for a presentation then you could just fake it","msgtype":"m.text"},"ts":1266244380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Nobody would know","msgtype":"m.text"},"ts":1266244381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"with a download tool they might ;-)","msgtype":"m.text"},"ts":1266244382000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"What do you call microformats in Japanese?","msgtype":"m.text"},"ts":1266244440000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"because without a model it's unclear e.g. whether an <identifier> is internally represented as <string> and can be serialized as such...","msgtype":"m.text"},"ts":1266244441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Dashiva: Maikurofo-matto (マイクロフォーマット)","msgtype":"m.text"},"ts":1266244442000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"but often just written as Microformat (that previous one was pronunciation & katakana)","msgtype":"m.text"},"ts":1266244500000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"How many specs do have decent models, separating the semantics and syntax?","msgtype":"m.text"},"ts":1266244501000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thanks for your help, all. nn","msgtype":"m.text"},"ts":1266244560000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"annevk: What else would an identifier be serialized as?  JS doesn't have a concept of 'symbol'.","msgtype":"m.text"},"ts":1266244620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders how long it'll be until Japanese has adopted enough words that it'll effectively be English in an unusual accent","msgtype":"m.emote"},"ts":1266244621000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So, hey, htmlwg wiki.  The esw thing.  Where is it?","msgtype":"m.text"},"ts":1266244622000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: Has?","msgtype":"m.text"},"ts":1266244623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://www.w3.org/html/wg/wiki/Main_Page","msgtype":"m.text"},"ts":1266244624000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It isn't esw anymore, luckily","msgtype":"m.text"},"ts":1266244625000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"TabAtkins: (See http://www.w3.org/html/wg/, click on \"Wiki\")","msgtype":"m.text"},"ts":1266244680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That would explain why i wasn't finding it.","msgtype":"m.text"},"ts":1266244681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Maybe the question is whether the strings \"test\" and \"te\\st\" and \"TEST\" all have the same internal representation (because they are specified to be \"exactly the same identifier\") and thus the same serialisation (in which case which one?)","msgtype":"m.text"},"ts":1266245160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Those are valid questions, and should indeed be specified precisely.","msgtype":"m.text"},"ts":1266245161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, strings are serialized with quotes","msgtype":"m.text"},"ts":1266245162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"guesses there's also questions like whether the string \"\\7B\" should be serialized as \"\\7B\" or as \"{\"","msgtype":"m.emote"},"ts":1266245220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, for identifiers, yes","msgtype":"m.text"},"ts":1266245221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, gotcha.  I read you as saying something subtly different.","msgtype":"m.text"},"ts":1266245222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if the fact that HTML 5 disallows all Unicode code characters causes issues by disallowing General_Category Cf","msgtype":"m.emote"},"ts":1266245223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Reminds me of that horrible feature of JSON...","msgtype":"m.text"},"ts":1266245224000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"so e.g. [attr=ident] turns into [attr=\"ident\"] in most browsers","msgtype":"m.text"},"ts":1266245225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but there's no Selectors model that defines that","msgtype":"m.text"},"ts":1266245226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Dashiva: Which of the horrible features?","msgtype":"m.text"},"ts":1266245280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The one that lets you use both \\/ and /","msgtype":"m.text"},"ts":1266245281000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"How will I live without U+1D177 MUSICAL SYMBOL BEGIN SLUR?","msgtype":"m.text"},"ts":1266245282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or more seriously, what about something like U+0600 ARABIC NUMBER SIGN?","msgtype":"m.text"},"ts":1266245283000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: Why is that any worse than the feature that you can use both \"\\u0078\" and \"x\"?","msgtype":"m.text"},"ts":1266245340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Because some python libs only supported one of them","msgtype":"m.text"},"ts":1266245341000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"And I had to work around it","msgtype":"m.text"},"ts":1266245342000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"identifiers are especially complicated, because they cannot start with numbers either unless prefixed with -, etc.","msgtype":"m.text"},"ts":1266245400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it JSON's fault that implementations are buggy?","msgtype":"m.text"},"ts":1266245401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1266245402000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Is it not just the fault of implementors who can't read a trivial grammar spec?","msgtype":"m.text"},"ts":1266245580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"notes that in javascript, escaped identifiers are not equivalent to unescaped ones despite what the spec says","msgtype":"m.emote"},"ts":1266245700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(in particular you can use reserved words in identifiers by cunning/evil use of escapes even though that is forbidden)","msgtype":"m.text"},"ts":1266245701000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You can escape identifiers in JS?","msgtype":"m.text"},"ts":1266245760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"somehow failed to notice that","msgtype":"m.emote"},"ts":1266245761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Well of course, it's a brilliant feature","msgtype":"m.text"},"ts":1266246060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What is an undercount?","msgtype":"m.text"},"ts":1266246120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A count that is too small?","msgtype":"m.text"},"ts":1266246121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Google is not helping me.","msgtype":"m.text"},"ts":1266246122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nah, it has something to do with polling, but everything I'm finding is talking about undercounts like I already understand what they are.","msgtype":"m.text"},"ts":1266246123000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"To record fewer than the actual number of (persons in a census, for example).\" ?","msgtype":"m.text"},"ts":1266246180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"like if you lose/ignore half the votes, or something","msgtype":"m.text"},"ts":1266246181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That makes sense.  It makes what I'm reading sort of nonsensical, but shrug.  That's to be expected given the author.","msgtype":"m.text"},"ts":1266246182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It could be a misrepresentation","msgtype":"m.text"},"ts":1266246300000,"senderName":"meledin","senderId":"meledin@irc"},
{"content":{"body":"e.g. say \"video games have a 10% market share (when polling adult females aged 60 and up)\"","msgtype":"m.text"},"ts":1266246301000,"senderName":"meledin","senderId":"meledin@irc"},
{"content":{"body":"TabAtkins, e.g. with counter-reset or so you want to know the model","msgtype":"m.text"},"ts":1266246420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Indeed, it's very important to know whether an escaped counter identifier is the same as the unescaped.  Complete agreement there.","msgtype":"m.text"},"ts":1266246480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"blames XML for being too successful and encouraging people to believe it's good to specify just syntax and not the interpretation of the syntax","msgtype":"m.emote"},"ts":1266246600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, oh, that is pretty clear","msgtype":"m.text"},"ts":1266246720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, ok.  Man, I don't even know then.  ^_^  I don't have enough impl experience yet.","msgtype":"m.text"},"ts":1266246780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, though maybe not, is <string> \"test\" the same as <identifier> test, and what do they serialize as?","msgtype":"m.text"},"ts":1266246781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's mostly what happens in serialization that I was worried about","msgtype":"m.text"},"ts":1266246782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. is it all <string> internally or not","msgtype":"m.text"},"ts":1266246783000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd have to go read the spec, since it treats strings and identifiers inconsistently.  >_<","msgtype":"m.text"},"ts":1266246840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it seems most impl just do whatever","msgtype":"m.text"},"ts":1266246841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Javascript needs a symbol type.  Like a string but you can just do pointer comparisons to check equality.","msgtype":"m.text"},"ts":1266246842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"CSS just falls apart as spec when you look at API stuff","msgtype":"m.text"},"ts":1266246843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds like most specs","msgtype":"m.text"},"ts":1266246844000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, hmm, impl could do that internally","msgtype":"m.text"},"ts":1266246845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I wonder how much perf you'd gain from that though","msgtype":"m.text"},"ts":1266246900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think they *do*.  At least, that the impression I get from some things I've heard dbaron saying.","msgtype":"m.text"},"ts":1266246901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thinks that will almost certainly be the wrong place to optimize","msgtype":"m.emote"},"ts":1266246902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, yeah, HTML4/DOM2HTML had the same issue","msgtype":"m.text"},"ts":1266246903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: In a tight loop, string comparison is expensive.  >_<","msgtype":"m.text"},"ts":1266246904000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You don't need a special symbol type, you just need interned strings","msgtype":"m.text"},"ts":1266246960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Don't you hate it when you are about to say something and then Philip` speaks","msgtype":"m.text"},"ts":1266246961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"True, but it's nice to reflect that in a user-visible way.  A symbol *is* an interned string.","msgtype":"m.text"},"ts":1266246962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"because he always says whatever you were about to say","msgtype":"m.text"},"ts":1266246963000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I sure do","msgtype":"m.text"},"ts":1266246964000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Hate it, I mean)","msgtype":"m.text"},"ts":1266246965000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"At least, for the one language I have experience with that has a symbol type (lisp).  (intern \"foo\") returns the symbol foo.","msgtype":"m.text"},"ts":1266247020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ruby has a symbol type too","msgtype":"m.text"},"ts":1266247021000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"C++ has boost::flyweight<std::wstring>, which seems to be the same idea","msgtype":"m.text"},"ts":1266247140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not the snappiest name, though","msgtype":"m.text"},"ts":1266247141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I thought I was before Philip`, though I guess I didn't mention interned strings explicitly","msgtype":"m.text"},"ts":1266247620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah but Philip` always does it :)","msgtype":"m.text"},"ts":1266247800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"interesting definition of always then :p","msgtype":"m.text"},"ts":1266247860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is clearly too predictable","msgtype":"m.emote"},"ts":1266248040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I reserve the right to be interesting","msgtype":"m.text"},"ts":1266248041000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yay for people assembling all the information I needed for my counter proposal for me!","msgtype":"m.text"},"ts":1266248520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, what counter proposal are you writing?","msgtype":"m.text"},"ts":1266248580000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"For issues 1 and 2.  Just posted it to the list.","msgtype":"m.text"},"ts":1266248581000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: boost calls interned stuff \"flyweight\"?","msgtype":"m.text"},"ts":1266249000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"as in weighing as much as an insect?","msgtype":"m.text"},"ts":1266249001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we could just use a PING method instead","msgtype":"m.text"},"ts":1266249002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"custom methods are quite well supported nowadays","msgtype":"m.text"},"ts":1266249060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: http://en.wikipedia.org/wiki/Flyweight_pattern","msgtype":"m.text"},"ts":1266249120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"as in weighing between 49kg and 51kg :-)","msgtype":"m.text"},"ts":1266249180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: clearly, I haven't read enough Design Patterns literature to know the lingo","msgtype":"m.text"},"ts":1266249240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Are they?","msgtype":"m.text"},"ts":1266249540000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"has no idea if php supports new methods well.","msgtype":"m.emote"},"ts":1266249541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It treats all methods identically","msgtype":"m.text"},"ts":1266249542000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Do proxies support them?","msgtype":"m.text"},"ts":1266249543000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That wouldn't actually resolve the objection, though.  The PING method would still be 'unsafe'.","msgtype":"m.text"},"ts":1266249544000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It just sets $_SERVER['HTTP_METHOD'] or some other key to the method of the request","msgtype":"m.text"},"ts":1266249600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Thanks for the info!","msgtype":"m.text"},"ts":1266249601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, I think Squid doesn't by default, which is why it breaks Subversion","msgtype":"m.text"},"ts":1266249602000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"TabAtkins, not necessarily","msgtype":"m.text"},"ts":1266249603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, new methods can be safe","msgtype":"m.text"},"ts":1266249604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the only really relevant question reagarding ping is whether or not browsers will implement it, and if they do, then it should be specced. (Of course, browsers should choose whether or not to implement the feature on its own merits, none of which should affect whether or not it should be specced)","msgtype":"m.text"},"ts":1266249605000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"annevk: I think they're using \"unsafe\" to mean \"not idempotent\", and @ping is inherently not idempotent.","msgtype":"m.text"},"ts":1266249660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I don't think that's quite true","msgtype":"m.text"},"ts":1266249720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Elaborate?","msgtype":"m.text"},"ts":1266249721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"by not holding the user accountable it is acceptable afaict","msgtype":"m.text"},"ts":1266249780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though using GET would be just as fine in that case, though presumably does not work well with caching and all","msgtype":"m.text"},"ts":1266249840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can't you just set some request header to make sure it doesn't get cached?","msgtype":"m.text"},"ts":1266249900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems like bad design to require special overrides to ensure the request is not cached when caching is never the right thing to do","msgtype":"m.text"},"ts":1266250200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like bad design to rely on certain side-effects of the request method, rather than on the explicit cache control headers, when the primary aim is to affect the request's cache behaviour","msgtype":"m.text"},"ts":1266250380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"is there some echo service that I POST a form to and get it echoed to me?","msgtype":"m.text"},"ts":1266250560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: Well with my approach (\"right by default\") people will typically get it right whereas with the \"be explicit but fail wrong\" approach people will typically get it wrong","msgtype":"m.text"},"ts":1266250620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: \"people\" here are web browser developers and they can be expected to largely get it right","msgtype":"m.text"},"ts":1266250800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and it's easy to test","msgtype":"m.text"},"ts":1266250860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(If it was something authors would have to do, then I'd find it more compelling to make it harder to make mistakes)","msgtype":"m.text"},"ts":1266250920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen, hixie has that","msgtype":"m.text"},"ts":1266251160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where?","msgtype":"m.text"},"ts":1266251161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not sure, looking it up","msgtype":"m.text"},"ts":1266251162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"his site is somewhat slow","msgtype":"m.text"},"ts":1266251220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, http://software.hixie.ch/utilities/cgi/test-tools/echo","msgtype":"m.text"},"ts":1266251280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1266251281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for whoever is in the CSS-<number>-values-need-to-support-a-significand camp it would make writing down how to serialize a <number> value easier","msgtype":"m.text"},"ts":1266251400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's a thread for that, annevk.","msgtype":"m.text"},"ts":1266251401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I deleted that thread","msgtype":"m.text"},"ts":1266251460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hehe.  Why not just mute it?","msgtype":"m.text"},"ts":1266251520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"deletes NOTHING.","msgtype":"m.emote"},"ts":1266251521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can has bogo-keygen","msgtype":"m.text"},"ts":1266251522000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"one item less on my todolist","msgtype":"m.text"},"ts":1266251580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins, cause I delete","msgtype":"m.text"},"ts":1266251581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fine.  Could you explain your reasoning more fully?  I'll send it to the list.","msgtype":"m.text"},"ts":1266251640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML5 uses ToString() for real numbers, from ECMA","msgtype":"m.text"},"ts":1266251641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems some browsers already use that too","msgtype":"m.text"},"ts":1266251642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using that for serializing CSS <number> values too would unify things a little more","msgtype":"m.text"},"ts":1266251700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1266251701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So we'd be harmonizing with HTML5 as well as SVG.","msgtype":"m.text"},"ts":1266251702000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML5 seems to bounce between different serialisation/parsing definitions quite frequently","msgtype":"m.text"},"ts":1266251820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Strangely it seems to happen whenever I complain about the previous definition","msgtype":"m.text"},"ts":1266251821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(even if that's a definition I suggested)","msgtype":"m.text"},"ts":1266251822000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Ping would never be capable of proving undercounts\" - s/proving/preventing/ ?","msgtype":"m.text"},"ts":1266252180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The sentence seems to make more sense with that change","msgtype":"m.text"},"ts":1266252181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: why does the websocket protocol have the optional binary-frames?","msgtype":"m.text"},"ts":1266252300000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"or why are they optional?","msgtype":"m.text"},"ts":1266252360000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"they're not optional","msgtype":"m.text"},"ts":1266252420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: I think it's meant to be \"providing\"?","msgtype":"m.text"},"ts":1266252480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think that would make sense","msgtype":"m.text"},"ts":1266252540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Do you mean \"lower bounds\"?","msgtype":"m.text"},"ts":1266252541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think the meaning was that ping would never provide a perfectly accurate count that never misses any clicks","msgtype":"m.text"},"ts":1266252542000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(because it's be easy for the ping server to be down, etc)","msgtype":"m.text"},"ts":1266252600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm not at all confident in my thinking, though","msgtype":"m.text"},"ts":1266252601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose that makes sense too.  Honestly, that objection is incoherent anyway, because there is no perfectly accurate auditing method.","msgtype":"m.text"},"ts":1266252660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Even with no perfect method, if current methods had 99% accuracy and a new method had 50% accuracy then nobody would use the new method","msgtype":"m.text"},"ts":1266252720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so I don't think the impossibility of perfection means there's no need to debate accuracy","msgtype":"m.text"},"ts":1266252780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"They might if the loss in accuracy had some positive side effect","msgtype":"m.text"},"ts":1266252840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(so there is equally no use ssaying that accuracy alone is the only significant variable)","msgtype":"m.text"},"ts":1266252841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, no","msgtype":"m.text"},"ts":1266252900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe the new method has 50% accuracy but it kills a puppy every time someone clicks on the link, and you hate puppies","msgtype":"m.text"},"ts":1266252901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so I'd agree it's not the only factor","msgtype":"m.text"},"ts":1266252902000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but it is a valid factor to discuss","msgtype":"m.text"},"ts":1266252903000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(but preferably it should be discussed with data and specific cases, rather than handwavey claims that it won't be accurate enough)","msgtype":"m.text"},"ts":1266252960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: True.  However, I'd be willing to argue that @ping will be no less accurate than existing similar methods.","msgtype":"m.text"},"ts":1266253200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh sweet, the grammar uses octal references","msgtype":"m.text"},"ts":1266253440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotta love that","msgtype":"m.text"},"ts":1266253441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg","msgtype":"m.text"},"ts":1266253500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wtf are we using octal.  wtf is *anyone* using octal?","msgtype":"m.text"},"ts":1266253501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I seriously dislike the CSS grammar","msgtype":"m.text"},"ts":1266253502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What feature, in the history of computers, has ever gained more benefit from using octal than it suffered from confusion caused by it?","msgtype":"m.text"},"ts":1266253560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fortunately CSS itself uses unicode escapes","msgtype":"m.text"},"ts":1266253561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Unix file permissions?","msgtype":"m.text"},"ts":1266253620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Are those octal?  I always figured they were just chars.","msgtype":"m.text"},"ts":1266253621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"0755\" etc","msgtype":"m.text"},"ts":1266253680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah, I just never really thought of that as a number.","msgtype":"m.text"},"ts":1266253681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"More like 0,7,7,5.","msgtype":"m.text"},"ts":1266253682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Four separate flags.","msgtype":"m.text"},"ts":1266253683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You need three bits for each number (rwx), so octal makes sense","msgtype":"m.text"},"ts":1266253800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It'd be awfully wasteful to devote 8 bits when you only need 3","msgtype":"m.text"},"ts":1266253801000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Shrug.","msgtype":"m.text"},"ts":1266253860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and it'd be a pain for a program to process character strings","msgtype":"m.text"},"ts":1266253861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"compared to just &ing with a mask to extract the desired permission bits","msgtype":"m.text"},"ts":1266253862000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I have no idea how the permission bits are actually exposed.","msgtype":"m.text"},"ts":1266253920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With C code like mkdir(\"foo\", 0755);","msgtype":"m.text"},"ts":1266253980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Interesting comment re the W3C HTML standards process: http://news.ycombinator.com/item?id=1126640","msgtype":"m.text"},"ts":1266254040000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"I suppose C treats numbers starting with 0 as octal there?","msgtype":"m.text"},"ts":1266254100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annodomini: Urm, wow.","msgtype":"m.text"},"ts":1266254101000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, the resemblance is scary, isn't it?","msgtype":"m.text"},"ts":1266254160000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"TabAtkins: Yes","msgtype":"m.text"},"ts":1266254161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It treats numbers starting with 0 as octal everywhere, in fact :-p","msgtype":"m.text"},"ts":1266254162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, yeah.  Bad use of \"there\" there.  ^_^","msgtype":"m.text"},"ts":1266254220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annodomini: Already incorporated into http://ian.hixie.ch/bible/handling-people :-)","msgtype":"m.text"},"ts":1266254221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annodomini: the awesome part is that people imply Hixie practices that because Hixie has a copy of that text on his site","msgtype":"m.text"},"ts":1266254280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annodomini: see http://ian.hixie.ch/bible/handling-people","msgtype":"m.text"},"ts":1266254281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: Ah, I hadn't seen that.","msgtype":"m.text"},"ts":1266254340000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"hsivonen: Heh.","msgtype":"m.text"},"ts":1266254341000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"annodomini: it's an interesting exercise to try to see who appears to be practicing those points in which W3C WGs","msgtype":"m.text"},"ts":1266254400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"You should watch out for people sneaking about the W3C server room and dropping iron filings into the machines, too","msgtype":"m.text"},"ts":1266254460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(That sabotage manual has lots of great ideas)","msgtype":"m.text"},"ts":1266254461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It's definitely a good rebuttal to the people who claim that they are not trying to sabotage HTML5 (or fill in any other standard) but instead are just trying to improve the process.","msgtype":"m.text"},"ts":1266254520000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"http://news.ycombinator.com/item?id=1126555","msgtype":"m.text"},"ts":1266254880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hah :) I was reading the handling people thing and was thinking \"I'm sure something like this was in Yes Minister\"... and then saw the reference at the bottom :)","msgtype":"m.text"},"ts":1266256860000,"senderName":"workmad3","senderId":"workmad3@irc"},
{"content":{"body":"MikeSmithXX: yt?","msgtype":"m.text"},"ts":1266261720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie:now that you're here,  why does the websocket protocol have the optional binary-frames?","msgtype":"m.text"},"ts":1266262440000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"or what to call them, semi-optional","msgtype":"m.text"},"ts":1266262441000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so that we can add support for binary in the future","msgtype":"m.text"},"ts":1266262500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're not optional, they're invalid at the moment","msgtype":"m.text"},"ts":1266262501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the support is just error handling","msgtype":"m.text"},"ts":1266262502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and you can handle them by either ignoring them or failing the connection","msgtype":"m.text"},"ts":1266262503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(only ignoring them if you're a browser client)","msgtype":"m.text"},"ts":1266262560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, might be better to define that they are really invalid now","msgtype":"m.text"},"ts":1266262561000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"i thought it did","msgtype":"m.text"},"ts":1266262620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"where does it say they are alid?","msgtype":"m.text"},"ts":1266262621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"valid","msgtype":"m.text"},"ts":1266262622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"neither the server nor the client is allowed to send them","msgtype":"m.text"},"ts":1266262623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're only allowed to send 0x00 frames currently","msgtype":"m.text"},"ts":1266262624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, the server side part says that \"If /type/ is not a 0x00 byte, then the server may disconnect from","msgtype":"m.text"},"ts":1266262680000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"       the client.\"","msgtype":"m.text"},"ts":1266262681000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1266262682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it is just \"may\"","msgtype":"m.text"},"ts":1266262683000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1266262684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's the right thing to do as far as i can tell","msgtype":"m.text"},"ts":1266262685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the server knows the subprotocol that the conneciton is using","msgtype":"m.text"},"ts":1266262740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it can know that if it sees a binary frame it can disconnect since it's not valid","msgtype":"m.text"},"ts":1266262741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it can equally know that it might want to use binary frames in the future and will therefore know that it can try to be future-compatible and not disconnect, but just ignore the packet","msgtype":"m.text"},"ts":1266262742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/packet/frame/","msgtype":"m.text"},"ts":1266262800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"server may not really know the subprotocol. I'd assume the subprotocol was implemented by some cgi-like script","msgtype":"m.text"},"ts":1266262801000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that's still the server","msgtype":"m.text"},"ts":1266262860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and anyway, the client can't handle binary data at all","msgtype":"m.text"},"ts":1266262920000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"today, right","msgtype":"m.text"},"ts":1266262921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but in the future we'll add binary frames","msgtype":"m.text"},"ts":1266262922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1266262923000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so why define some sort of server side support for binary, but not client side","msgtype":"m.text"},"ts":1266262924000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the clients ignore binary frames just like the server does","msgtype":"m.text"},"ts":1266262980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not the same way","msgtype":"m.text"},"ts":1266262981000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"client does always \"Discard the read bytes.\"","msgtype":"m.text"},"ts":1266262982000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"well the clients aren't allowed to disconnect, sure","msgtype":"m.text"},"ts":1266262983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"server just may close the connection","msgtype":"m.text"},"ts":1266262984000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1266262985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the server knows the protocol, the client doesn't (it's running JS that does the protocol)","msgtype":"m.text"},"ts":1266263040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the server can know if it's expecting binary frames or not","msgtype":"m.text"},"ts":1266263041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the clients on the other hand have to all interoperate exactly","msgtype":"m.text"},"ts":1266263042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: doesn't object send a PARAM:null parameter to plugins (commented out in the spec)?","msgtype":"m.text"},"ts":1266263043000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"zcorpan__: only firefox seems to do that","msgtype":"m.text"},"ts":1266263044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: hmm i thought opera also does","msgtype":"m.text"},"ts":1266263045000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1266263100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"currently websockets api is text based","msgtype":"m.text"},"ts":1266263101000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: yes","msgtype":"m.text"},"ts":1266263102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no binary support in JS :-(","msgtype":"m.text"},"ts":1266263103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"could the protocol say something that if the API to handle protocol supports binary, then the data shouldn't be discarded","msgtype":"m.text"},"ts":1266263104000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"once the API handles binary, I'll update the protocol.","msgtype":"m.text"},"ts":1266263160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(they're the same source document, I edit them as one spec)","msgtype":"m.text"},"ts":1266263161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(they're both part of http://www.whatwg.org/specs/web-apps/current-work/complete.html)","msgtype":"m.text"},"ts":1266263162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why can't you write the protocol so that it supports that already?","msgtype":"m.text"},"ts":1266263163000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"no point, the API doesn't do it","msgtype":"m.text"},"ts":1266263164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what would you do with the data?","msgtype":"m.text"},"ts":1266263220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the client can neither send nor receive binary","msgtype":"m.text"},"ts":1266263221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you could implement a server now that will work in the future when clients support binary","msgtype":"m.text"},"ts":1266263222000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"currently it can receive binary","msgtype":"m.text"},"ts":1266263223000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"it just discards the data immediately ","msgtype":"m.text"},"ts":1266263224000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1266263280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in the future the protocol will need backwards incompatible change","msgtype":"m.text"},"ts":1266263281000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"zcorpan__: that'd be unwise, since we don't know exactly what the conventions will be","msgtype":"m.text"},"ts":1266263282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"client may not discard the data anymore","msgtype":"m.text"},"ts":1266263340000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"how is that not backwards compatible?","msgtype":"m.text"},"ts":1266263341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for some reason server could send some random data to client to keep the connection open or something....","msgtype":"m.text"},"ts":1266263400000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and rely on that client doesn't handle that","msgtype":"m.text"},"ts":1266263401000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but suddenly client starts to handle the data","msgtype":"m.text"},"ts":1266263402000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that would work fine, since the JS would also ignore the binary frames","msgtype":"m.text"},"ts":1266263403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume JS can handle binary frames in the future","msgtype":"m.text"},"ts":1266263460000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yes, but the script the author wrote isn't going to suddenly support it without the server being fixed to not send those frames","msgtype":"m.text"},"ts":1266263461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1266263580000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so why not say now that client may use the binary frames","msgtype":"m.text"},"ts":1266263581000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JS doesn't support binary","msgtype":"m.text"},"ts":1266263582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what are we supposed to do with the binary frames?","msgtype":"m.text"},"ts":1266263640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume there can be other than WebSockets API which use the protocol","msgtype":"m.text"},"ts":1266263641000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"oh, no, that would be silly","msgtype":"m.text"},"ts":1266263642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you're not a browser just use TCP","msgtype":"m.text"},"ts":1266263643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1266263644000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the only things WebSockets gives you are an origin-based security model (only helpful for browsers) and basic framing","msgtype":"m.text"},"ts":1266263700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basic framing is so trivial to do that you can do it in your own protocol, you don't need websockets","msgtype":"m.text"},"ts":1266263701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you have some service which already uses websockets, why not use the same protocol everywhere?","msgtype":"m.text"},"ts":1266263702000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"well i guess you could, but then you have to worry about JS clients again","msgtype":"m.text"},"ts":1266263703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my point is you'd only ever use websockets if at least one of your clients is going to be a browser","msgtype":"m.text"},"ts":1266263760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if that's the case, then you can't use binary frames","msgtype":"m.text"},"ts":1266263761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"until we add binary to the protocol","msgtype":"m.text"},"ts":1266263762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, to JS I mean","msgtype":"m.text"},"ts":1266263763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1266263820000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but since the binary frames are defined already, server-to-server (or server-to-C++) communication could start use binary-frames already","msgtype":"m.text"},"ts":1266263880000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"personally i'd strongly recommend that if your client isn't a browser, you just use a custom protocol","msgtype":"m.text"},"ts":1266263881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and once the JS API is ready, it can just start use the same (binary) subprotocol","msgtype":"m.text"},"ts":1266263882000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"it might look very similar to websockets, but it needn't be websockets itself","msgtype":"m.text"},"ts":1266263883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example the whole handshake is a waste of time if you're not a browser","msgtype":"m.text"},"ts":1266263884000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and if you're not using websockets, you can write your own spec that uses whatever frames you want","msgtype":"m.text"},"ts":1266263940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yet you mention in the draft that not all communication is server-to-browser","msgtype":"m.text"},"ts":1266263941000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yeah, people keep telling me to make the spec more generic","msgtype":"m.text"},"ts":1266263942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it's a mistake","msgtype":"m.text"},"ts":1266263943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I still don't see why the draft couldn't say that if the API supports binary, then client may not discard the data","msgtype":"m.text"},"ts":1266264060000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not a big change","msgtype":"m.text"},"ts":1266264061000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"but would allow server-to-C++ etc","msgtype":"m.text"},"ts":1266264120000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"same reason it doesn't say you can use frame 0x01","msgtype":"m.text"},"ts":1266264121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we don't know what the conventions will be yet","msgtype":"m.text"},"ts":1266264122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe binary frames will be [mimetype][data]","msgtype":"m.text"},"ts":1266264123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or maybe they'll be [data][checksum][data][checksum] etc","msgtype":"m.text"},"ts":1266264124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and there's no need for it -- if you want to speak a custom protocol to a server, you don't need this spec","msgtype":"m.text"},"ts":1266264180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just write your own","msgtype":"m.text"},"ts":1266264181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What. The. Hell.  Something is going *terribly* wrong here.  Either the server or the browser is cutting off my post request after a minute or two and just navigating to the form's @action instead.","msgtype":"m.text"},"ts":1266264240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tcpdump","msgtype":"m.text"},"ts":1266264360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"find out what's actually going on :-)","msgtype":"m.text"},"ts":1266264361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the protocol does say what part of the frame is binary","msgtype":"m.text"},"ts":1266264540000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so why the client couldn't use that?","msgtype":"m.text"},"ts":1266264541000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"no, it says how to skip length-prefixed frames","msgtype":"m.text"},"ts":1266264542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't say what 0x80-0xFF frames actually mean","msgtype":"m.text"},"ts":1266264543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in fact, case in point, we're thinking of defining 0xFE and 0xFF to be a disconnect handshake","msgtype":"m.text"},"ts":1266264544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would server send those?","msgtype":"m.text"},"ts":1266264660000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"we don't know yet","msgtype":"m.text"},"ts":1266264661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...since currently client must just discard the binary data","msgtype":"m.text"},"ts":1266264662000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"if we make 0xFF do something, then we'd change the client and server rules accordingly","msgtype":"m.text"},"ts":1266264720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's my point","msgtype":"m.text"},"ts":1266264721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as we make frames do new things, we'll update the spec","msgtype":"m.text"},"ts":1266264722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you know, the spec also says to discard 0x01 frames","msgtype":"m.text"},"ts":1266264723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which aren't binary","msgtype":"m.text"},"ts":1266264724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not just binary frames it discards","msgtype":"m.text"},"ts":1266264725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it discards 99.6% of possible frame types","msgtype":"m.text"},"ts":1266264780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"only 0x00 frames get processed currently without discarding","msgtype":"m.text"},"ts":1266264781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rigth","msgtype":"m.text"},"ts":1266264900000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I just wish the wording would be something else than \"discard data\"","msgtype":"m.text"},"ts":1266264901000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"\"this frame is invalid, discard the data\"?","msgtype":"m.text"},"ts":1266264902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"if you ever see this, you're either speaking to a buggy peer or a peer from the future\"","msgtype":"m.text"},"ts":1266264960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since the idea is anyway that in the future the data may be used for something","msgtype":"m.text"},"ts":1266264961000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"in the future we'll update the spec","msgtype":"m.text"},"ts":1266264962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm.  I have no idea how to tell tcpdump how to only report on traffic from the webserver.","msgtype":"m.text"},"ts":1266264963000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are you running it on the client or the server?","msgtype":"m.text"},"ts":1266265020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"server.","msgtype":"m.text"},"ts":1266265021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so a server based on Feb 15 2010 draft can rely on that everything else than 0x00 frames are discarded, because the spec says so","msgtype":"m.text"},"ts":1266265080000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"basically doesn't know what he's doing.","msgtype":"m.emote"},"ts":1266265081000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tcpdump ... 'src post 80'","msgtype":"m.text"},"ts":1266265082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1266265083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"src port 80","msgtype":"m.text"},"ts":1266265084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug: a server based on feb 15 2010 draft can't send anything but 0x00 frames, because the spec says so","msgtype":"m.text"},"ts":1266265085000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: actually","msgtype":"m.text"},"ts":1266265140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, that is ture","msgtype":"m.text"},"ts":1266265141000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1266265142000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yet,  the spec should say something (even in normative section) about reserving frame types for future use","msgtype":"m.text"},"ts":1266265200000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"TabAtkins: you want '((src host web.server.address) && (src port 80)) || ((dst host web.server.address) && (dst port 80))' or something","msgtype":"m.text"},"ts":1266265260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug: Something like:","msgtype":"m.text"},"ts":1266265380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"   The protocol is designed to support other frame types in future.","msgtype":"m.text"},"ts":1266265381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"   Instead of the 0x00 byte, other bytes might in future be defined.","msgtype":"m.text"},"ts":1266265382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...?","msgtype":"m.text"},"ts":1266265383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(from 10.3.4.1.2 Protocol overview)","msgtype":"m.text"},"ts":1266265384000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is non-normative","msgtype":"m.text"},"ts":1266265385000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"er, which chapter","msgtype":"m.text"},"ts":1266265440000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/complete.html#protocol-overview","msgtype":"m.text"},"ts":1266265441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"reads the one in ietf, since the API draft points to there","msgtype":"m.emote"},"ts":1266265442000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"wait, what normative conformance criteria do you want?","msgtype":"m.text"},"ts":1266265443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the API draft is also in complete.html","msgtype":"m.text"},"ts":1266265500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(http://www.whatwg.org/specs/web-apps/current-work/complete.html#network)","msgtype":"m.text"},"ts":1266265501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Something that in the future servers and clients may need to support other than 0x00 frames","msgtype":"m.text"},"ts":1266265560000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not sure about the wording","msgtype":"m.text"},"ts":1266265561000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I don't understand what the requirement would be","msgtype":"m.text"},"ts":1266265620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"currently the requirement is that server always sends 0x00 frames","msgtype":"m.text"},"ts":1266265621000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"*always* only 0x00 frames","msgtype":"m.text"},"ts":1266265622000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"in the future we want to support something else too","msgtype":"m.text"},"ts":1266265680000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"sure. in the future we'll update teh spec.","msgtype":"m.text"},"ts":1266265681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't like non-stable specs","msgtype":"m.emote"},"ts":1266265682000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"which are always just drafts","msgtype":"m.text"},"ts":1266265740000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"why not?","msgtype":"m.text"},"ts":1266265860000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"in general? because of backwards compatibility problems","msgtype":"m.text"},"ts":1266265861000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"smaug: improving a spec over time doesn't mean it's not stable","msgtype":"m.text"},"ts":1266266340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right. I think, so far I haven't see a stable spec which has been just \"improved\"","msgtype":"m.text"},"ts":1266266400000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I admin, W3C has tried to do that with erratas","msgtype":"m.text"},"ts":1266266460000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"admit","msgtype":"m.text"},"ts":1266266461000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"so HTML has been unstable?","msgtype":"m.text"},"ts":1266266462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean html5","msgtype":"m.text"},"ts":1266266520000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yes, unstable","msgtype":"m.text"},"ts":1266266521000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"just an example: hashchange","msgtype":"m.text"},"ts":1266266522000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"i mean HTML 1-4","msgtype":"m.text"},"ts":1266266523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they are new versions","msgtype":"m.text"},"ts":1266266580000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"new specs","msgtype":"m.text"},"ts":1266266581000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"that's what i mean we'll do with websockets","msgtype":"m.text"},"ts":1266266640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1266266641000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I thought something like with html5","msgtype":"m.text"},"ts":1266266642000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"never-ever stable","msgtype":"m.text"},"ts":1266266643000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"i don't see the difference","msgtype":"m.text"},"ts":1266266644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I too am curious as to the difference between minting a new version identifier for changes, and just changing the existing spec.","msgtype":"m.text"},"ts":1266266700000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"whatwg html is on \"version 4745\"","msgtype":"m.text"},"ts":1266266701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you go by subversion revisions","msgtype":"m.text"},"ts":1266266702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML 5.4745","msgtype":"m.text"},"ts":1266266760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so browser x may support version 4733 and some other browser version 4655 and they have conflicting behavior, yet both say that they support HTML5","msgtype":"m.text"},"ts":1266266761000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not the perfect situation","msgtype":"m.text"},"ts":1266266820000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Welcome to the web?","msgtype":"m.text"},"ts":1266266821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"At least they can't claim to support the same edition of the spec and still be conflicting (if we've done things right).","msgtype":"m.text"},"ts":1266266822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug: um, that's no worse than what happened with html 1-4","msgtype":"m.text"},"ts":1266266880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This TCPdump output just tells me that there is regular communication for almost exactly 4 minutes between browser and server, and then it suddenly cuts out (at which point the browser navigates to the form's action).  I can't decipher anything special happening near the end that could cause problems.","msgtype":"m.text"},"ts":1266266881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there browser x was saying it support v4, and y supports v3","msgtype":"m.text"},"ts":1266266940000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"there is clear possibility for API breakage ","msgtype":"m.text"},"ts":1266266941000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"No, Browser X would claim to support v4, Browser Y would claim to support v4, and yet they would have conflicting behavior.","msgtype":"m.text"},"ts":1266266942000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that is different thing","msgtype":"m.text"},"ts":1266267000000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"it's the same thing","msgtype":"m.text"},"ts":1266267001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in practice browsers don't claim to implement a particular version","msgtype":"m.text"},"ts":1266267002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not in any meaningful way","msgtype":"m.text"},"ts":1266267060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they do in the API documentation","msgtype":"m.text"},"ts":1266267061000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"or whatever the documentation for web devs is called","msgtype":"m.text"},"ts":1266267120000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not in a meaningful way","msgtype":"m.text"},"ts":1266267121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hi everyone","msgtype":"m.text"},"ts":1266267122000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"pretty often the comment is that this and that HTML5 feature is supported ...","msgtype":"m.text"},"ts":1266267123000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"there's going to be more delta between browser x and html5 version 4733 in your example than between html5 version 4733 and html5 version 4655","msgtype":"m.text"},"ts":1266267124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"smaug: sure, and often people say this and that DOM2 HTML or CSS2 or HTML4 feature is supported, and it's just as different between browsers","msgtype":"m.text"},"ts":1266267180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least with a regularly updated spec, the browsers have a chance of converging on something","msgtype":"m.text"},"ts":1266267181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey maciej","msgtype":"m.text"},"ts":1266267182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not necessarily if the web dev is interested only in one particular feature","msgtype":"m.text"},"ts":1266267183000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"anyway, this is pretty useless discussion :)","msgtype":"m.text"},"ts":1266267240000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"well, I'm supposed to be on vacation today but I just got a call to explain to my management what's going on with HTML5","msgtype":"m.text"},"ts":1266267360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"checks his e-mail to make sure he's not also being dragged into work","msgtype":"m.emote"},"ts":1266267540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh, one thing still","msgtype":"m.text"},"ts":1266267600000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the back/forward discussion didn't continue for some reason","msgtype":"m.text"},"ts":1266267601000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"the draft was just changed to what chromium wants it to be","msgtype":"m.text"},"ts":1266267602000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and that's it","msgtype":"m.text"},"ts":1266267660000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and what mozilla wanted","msgtype":"m.text"},"ts":1266267780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i think i have more e-mails in that folder","msgtype":"m.text"},"ts":1266267781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1266267782000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"it's not finished yet","msgtype":"m.text"},"ts":1266267783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(739 e-mails remaining)","msgtype":"m.text"},"ts":1266267840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so it takes a while to go through them)","msgtype":"m.text"},"ts":1266267841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I know it is kind of hard to say what Mozilla wants when Mozilla is a group of people which may have quite different opinions","msgtype":"m.text"},"ts":1266267900000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1266268200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking said that he thought making it async would help mozilla, though, and sicking is pretty representative :-)","msgtype":"m.text"},"ts":1266268260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but sicking is not the one who has been hacking session history lately ;)","msgtype":"m.text"},"ts":1266268261000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"I'd just like to understand the reasoning behind making API async. So far the reasoning has been mainly just that in chromium's architecture sync might be a bit harder to implement","msgtype":"m.text"},"ts":1266268380000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"not just chrome's architecture, pretty much any multi-process model","msgtype":"m.text"},"ts":1266268381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1266268382000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Justin's e-mail is the only one i seem to have in the history pile","msgtype":"m.text"},"ts":1266268440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's about pushState","msgtype":"m.text"},"ts":1266268441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"did i miss one?","msgtype":"m.text"},"ts":1266268442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as I see session history could live in a process between ui and the tab process","msgtype":"m.text"},"ts":1266268443000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"Hixie: oops, seems like I've missed","msgtype":"m.text"},"ts":1266268500000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"yeah but any IPC basically has to be async","msgtype":"m.text"},"ts":1266268501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1266268502000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"IPC doesn't have to be async","msgtype":"m.text"},"ts":1266268503000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"if you try doing sync IPC with the kind of model a browser implies, you're very likely to end up with either deadlocks or EXTREMELY complicated code","msgtype":"m.text"},"ts":1266268560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you just force the event loops into a directed acyclic graph and then require all calls in one direction to be async","msgtype":"m.text"},"ts":1266268620000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"IPC from client process to parent doesn't have to be async","msgtype":"m.text"},"ts":1266268680000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and especially if there was a separate process for a \"tab\", that could handle session history","msgtype":"m.text"},"ts":1266268681000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"history traversal requires two-way communication","msgtype":"m.text"},"ts":1266268682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if there was some problem with it, the main process could kill it","msgtype":"m.text"},"ts":1266268740000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"if you can come up with a model that has each iframe in a different process, and can do sync history traversal, I'm certainly eager to hear how it would work.","msgtype":"m.text"},"ts":1266268741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"please do e-mail such proposals to the list","msgtype":"m.text"},"ts":1266268742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"currently, i'm not aware of any plausible way to do it that isn't insanely complicated compared to just making history traversal async","msgtype":"m.text"},"ts":1266268800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and since history traversal has to be mostly async anyway when you're doing cross-page traversal, it seems simple enough to do it async","msgtype":"m.text"},"ts":1266268801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(generally we want everything async anyway)","msgtype":"m.text"},"ts":1266268802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so that e.g. script doesn't block on disk I/O)","msgtype":"m.text"},"ts":1266268860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'll think about the sync sh","msgtype":"m.text"},"ts":1266268861000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"frankly the best argument for keeping the same-page session history sync would be evidence that it's needed for back compat","msgtype":"m.text"},"ts":1266268920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lacking that, making it trigger based on queueing a task seems like a big win all round","msgtype":"m.text"},"ts":1266268980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i wish we could make location.href async too, but that one clearly does have back compat requirmenets)","msgtype":"m.text"},"ts":1266268981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"should there be a dimensionchange event for <video>?","msgtype":"m.text"},"ts":1266269520000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"probably in some future version, yeah","msgtype":"m.text"},"ts":1266269580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatwg.org is down","msgtype":"m.text"},"ts":1266269640000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1266269641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, googlebot is using a lot of slots","msgtype":"m.text"},"ts":1266269760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let me reduce the indexing frequency","msgtype":"m.text"},"ts":1266269761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan__: fixed","msgtype":"m.text"},"ts":1266270000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan__: i had a couple of CGI scripts that never finished, and as googlebot indexed them it was taking progressively more and more slots","msgtype":"m.text"},"ts":1266270060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they now terminate after 60s","msgtype":"m.text"},"ts":1266270061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: nice","msgtype":"m.text"},"ts":1266272400000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"also dramatically reduced the indexing frequency :-)","msgtype":"m.text"},"ts":1266272401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not much point indexing tests every 5 seconds","msgtype":"m.text"},"ts":1266272460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: apparently opera does send PARAM:\"\", but only since last week :)","msgtype":"m.text"},"ts":1266272461000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"i wish i had a way to test IE","msgtype":"m.text"},"ts":1266272462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Isn't there some existing plugin you could use and modify for testing?","msgtype":"m.text"},"ts":1266272520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(assuming that's what the problem was)","msgtype":"m.text"},"ts":1266272521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well on mac i just wrote my own plugin to dump the data out","msgtype":"m.text"},"ts":1266272580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have that plugin around somewhere?","msgtype":"m.text"},"ts":1266272581000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1266272582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"source or binary?","msgtype":"m.text"},"ts":1266272583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can i has both? :)","msgtype":"m.text"},"ts":1266272640000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1266272641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"awesome","msgtype":"m.text"},"ts":1266272642000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"http://junkyard.damowmow.com/408","msgtype":"m.text"},"ts":1266273240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan__: ^","msgtype":"m.text"},"ts":1266273300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: thanks!","msgtype":"m.text"},"ts":1266273301000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"let me know if you find anything in there that i shouldn't have put in public :-)","msgtype":"m.text"},"ts":1266273360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i didn't look closley","msgtype":"m.text"},"ts":1266273361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"closely","msgtype":"m.text"},"ts":1266273362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still loading...","msgtype":"m.text"},"ts":1266273420000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"also, that code is a mess. It has memory leaks and the like. I didn't do anything to fix it because all I wanted was the data, and once I had it I was done and threw it out","msgtype":"m.text"},"ts":1266273421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"connection timed out","msgtype":"m.text"},"ts":1266273422000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"(i wouldn't be surprised if it had security bugs and stuff)","msgtype":"m.text"},"ts":1266273423000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(so don't install it on a production machine)","msgtype":"m.text"},"ts":1266273424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wfm","msgtype":"m.text"},"ts":1266273480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can't reach it from here for some reason. i'll try at the office tomorrow","msgtype":"m.text"},"ts":1266273660000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"can you get to hixie.ch?","msgtype":"m.text"},"ts":1266273661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1266273662000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"zcorpan__: wfm","msgtype":"m.text"},"ts":1266273663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I can reach it, fwiw.","msgtype":"m.text"},"ts":1266273664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan__: odd","msgtype":"m.text"},"ts":1266273720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan__: can you ping hixie.ch?","msgtype":"m.text"},"ts":1266273721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ping times out too","msgtype":"m.text"},"ts":1266273722000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"maybe park hotel has blocked hixie.ch","msgtype":"m.text"},"ts":1266273780000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"can you ping 69.163.222.251 ?","msgtype":"m.text"},"ts":1266273781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Too many Opera employees trying to reach it :)","msgtype":"m.text"},"ts":1266273782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: times out","msgtype":"m.text"},"ts":1266273900000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1266273901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dns lookup for hixie.ch is successful","msgtype":"m.text"},"ts":1266273902000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"if you traceroute it, where does the route fail?","msgtype":"m.text"},"ts":1266273903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":" 3  sar-l1.se.thecloud.net (10.5.24.134)  97.385 ms  28.379 ms  26.584 ms","msgtype":"m.text"},"ts":1266274080000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"all others say * * * *","msgtype":"m.text"},"ts":1266274140000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1266274141000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"* * *","msgtype":"m.text"},"ts":1266274142000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"then the problem is definitely at your ewnd","msgtype":"m.text"},"ts":1266274143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"end","msgtype":"m.text"},"ts":1266274144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because i doubt very much dreamhost peer with thecloud.net :-)","msgtype":"m.text"},"ts":1266274145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1266274146000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"dump a bgp route advertisement and check the ASN path?","msgtype":"m.text"},"ts":1266274200000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"time to sleep","msgtype":"m.text"},"ts":1266274201000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"dump eyelocks","msgtype":"m.text"},"ts":1266274202000,"senderName":"zcorpan__","senderId":"zcorpan__@irc"},
{"content":{"body":"would have no idea how to dump route advertisements or check ASN paths :-)","msgtype":"m.emote"},"ts":1266274203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Microdata q: wondering why this doesn’t work in microdatajs; <li itemprop=\"location\" itemscope itemtype=\"http://microformats.org/profile/hcard\">","msgtype":"m.text"},"ts":1266274380000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"but this does <li itemprop=\"location\"><span itemscope itemtype=\"http://microformats.org/profile/hcard\">","msgtype":"m.text"},"ts":1266274440000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"when you say \"Work\", what are you looking for?","msgtype":"m.text"},"ts":1266274441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: atm “work” = card data in http://foolip.org/microdatajs/live/","msgtype":"m.text"},"ts":1266274500000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"what's the complete document?","msgtype":"m.text"},"ts":1266274560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so I realise it might be a problem there. just sanity-checking I’m not making a mistake","msgtype":"m.text"},"ts":1266274561000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"I'm not 100% sure I understand what you're trying to do","msgtype":"m.text"},"ts":1266274562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(in particular, I'm curious what the itemprop=\"location\" is intended to be part of)","msgtype":"m.text"},"ts":1266274563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: converting uF to Microdata. this is an hcard embedded in hcalendar","msgtype":"m.text"},"ts":1266274620000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"in microdata, <li itemprop=\"location\"><span itemscope itemtype=\"http://microformats.org/profile/hcard\"> means the same as <li itemprop=\"location\"></li> ... <span itemscope itemtype=\"http://microformats.org/profile/hcard\">","msgtype":"m.text"},"ts":1266274621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is, there's no link between the itemprop=location and the vcard in that case","msgtype":"m.text"},"ts":1266274622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you have an hCalendar and it contains a vCard, then I don't think foolip's tool will show you the nested vCard","msgtype":"m.text"},"ts":1266274680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the spec only says to extract the top-level vCards)","msgtype":"m.text"},"ts":1266274681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(e.g. it won't exact Agents either)","msgtype":"m.text"},"ts":1266274682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"technically the vEvent vocabulary doesn't allow nested vCards currently iirc","msgtype":"m.text"},"ts":1266274740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/complete.html#md-vevent-location says \"The value must be text.\"","msgtype":"m.text"},"ts":1266274741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(as opposed to \"The value must be either an item with the type http://microformats.org/profile/hcard, or an absolute URL, or text.\" which is what the spec for vCard \"agent\" says)","msgtype":"m.text"},"ts":1266274800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hth","msgtype":"m.text"},"ts":1266274801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: sorry, uploaded code http://oli-studio.com/temp/uf/microdata.html","msgtype":"m.text"},"ts":1266274920000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"and that “value must be text” part is a bit limiting if it means no contained elements","msgtype":"m.text"},"ts":1266274921000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"the \"value\" there is the value of the itemprop=\"\" property","msgtype":"m.text"},"ts":1266274980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which can generally be either text, or a URL, or a datetime, or a nested itemscope=\"\" item,","msgtype":"m.text"},"ts":1266274981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/,$//","msgtype":"m.text"},"ts":1266274982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't preclude nested markup, but nested markup doesn't affect microdata","msgtype":"m.text"},"ts":1266275040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"by that do you mean any text in nested markup isn’t included, eg as the location value in this case?","msgtype":"m.text"},"ts":1266275100000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"it's flattened","msgtype":"m.text"},"ts":1266275101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or that the markup is ignored but the contained text is used?","msgtype":"m.text"},"ts":1266275160000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"in:","msgtype":"m.text"},"ts":1266275161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div itemscope><span itemprop=\"a\">hello <em>world</em> how <em>are</em> you</span></div>","msgtype":"m.text"},"ts":1266275162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...there is a singel item, and it has a single property named \"a\", and its value os \"hello world how are you\" with no markup.","msgtype":"m.text"},"ts":1266275163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, that’s what I hoped","msgtype":"m.text"},"ts":1266275164000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"in:","msgtype":"m.text"},"ts":1266275220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so when you say “technically the vEvent vocabulary doesn't allow nested vCards currently” is that in Microdata or uF?","msgtype":"m.text"},"ts":1266275280000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"<div itemscope><span itemprop=\"a\"><em itemscope><span itemprop=\"b\">B</span></em></span></div>","msgtype":"m.text"},"ts":1266275281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"...tehre are two _top-level_ microdata items","msgtype":"m.text"},"ts":1266275282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one has a property \"a\" with the value \"B\"","msgtype":"m.text"},"ts":1266275340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the other has the property \"b\" with the value \"B\"","msgtype":"m.text"},"ts":1266275341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I kinda thought that each itemtype instance wouldn’t affect the others)","msgtype":"m.text"},"ts":1266275342000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"they are not related items -- there's no link between them in the microdata model","msgtype":"m.text"},"ts":1266275343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however, in:","msgtype":"m.text"},"ts":1266275344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div itemscope><span itemprop=\"a\" itemscope><span itemprop=\"b\">B</span></span></div>","msgtype":"m.text"},"ts":1266275345000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there is _one_ top-level microdata item, and it has a property \"a\" whose value is a nested item, which itself has one property \"b\" whose value is \"B\".","msgtype":"m.text"},"ts":1266275400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aaah","msgtype":"m.text"},"ts":1266275401000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"a bit more rigor than uF classes","msgtype":"m.text"},"ts":1266275402000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"yeah, that was one of the main goals of microdata","msgtype":"m.text"},"ts":1266275403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the above and itemref=\"\" are basically the two complicated parts of microdata","msgtype":"m.text"},"ts":1266275460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i recommend ignoring itemref=\"\" for now)","msgtype":"m.text"},"ts":1266275461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"am ignoring itemref=\"\" for now :)","msgtype":"m.text"},"ts":1266275462000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"snap","msgtype":"m.text"},"ts":1266275463000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"have yet to make the slides, but will post here when I’m done for feedback (hopefully before the event :| )","msgtype":"m.text"},"ts":1266275520000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"thanks for explaining","msgtype":"m.text"},"ts":1266275521000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"is playing with a rough first-cut javascript library implementing @onlyreplace.","msgtype":"m.emote"},"ts":1266276120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boblet: my pleasure. I'd be happy to review any slides.","msgtype":"m.text"},"ts":1266276121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: for <form>?","msgtype":"m.text"},"ts":1266276180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<form>, <a>, and <base>.","msgtype":"m.text"},"ts":1266276181000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: thank you. much appreciated","msgtype":"m.text"},"ts":1266276182000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"TabAtkins: we had something like that in a previous version, if it's what I think you mean","msgtype":"m.text"},"ts":1266276183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"There was a thread about it a while back that ended up as \"well, it should be easy to implement in JS, especially once XHR2 is out, so no change to the spec\".","msgtype":"m.text"},"ts":1266276240000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"damn you foolip, swanning off to China to get married when I want to ask you questions! sheesh","msgtype":"m.text"},"ts":1266276241000,"senderName":"boblet","senderId":"boblet@irc"},
{"content":{"body":"Is this an error or expected?  I'm trying to replace an element with another element I've cloned from an <iframe>.  It works fine for normal elements, but fails for <style>.","msgtype":"m.text"},"ts":1266276600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I can, however, wrap the <style> in a <div> and replace *that* instead.)","msgtype":"m.text"},"ts":1266276601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Specifically, this is in Chrome 4 for windows.","msgtype":"m.text"},"ts":1266276660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"error\" and \"expected\" are not mutually exclusive","msgtype":"m.text"},"ts":1266276720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do you have a minimised test case?","msgtype":"m.text"},"ts":1266276721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, but I could produce one.  (Right now it's me testing it on a copy of my production site.)","msgtype":"m.text"},"ts":1266276722000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that sounds like a bug to me","msgtype":"m.text"},"ts":1266276780000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it's almost certainly a bug, yes","msgtype":"m.text"},"ts":1266276781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: Does Firefox not obey dynamic changes to <base target>?","msgtype":"m.text"},"ts":1266277260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That appears to be what's stopping this from working in FF.)","msgtype":"m.text"},"ts":1266277261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think we do, but there could be a bug","msgtype":"m.text"},"ts":1266277262000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"(it's a huge pain)","msgtype":"m.text"},"ts":1266277263000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Heh, kk.","msgtype":"m.text"},"ts":1266277320000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh hmm","msgtype":"m.text"},"ts":1266277321000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"<base target>","msgtype":"m.text"},"ts":1266277322000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1266277323000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I've never even heard of that, so I dunno :-)","msgtype":"m.text"},"ts":1266277324000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"if it doesn't, it's probably easy to fix","msgtype":"m.text"},"ts":1266277325000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"iirc html5 defines <base target> not quite how firefox does it anyway","msgtype":"m.text"},"ts":1266277380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so at some point we should file bugs and have that fixed","msgtype":"m.text"},"ts":1266277381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Haha.  Well, this @onlyreplace impl works in Chrome.  It fails in Firefox, but if I manually add the appropriate @target to <base>, it works.  So that suggests <base target> isn't being honored when changed dynamically by script.","msgtype":"m.text"},"ts":1266277382000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not a high priority though","msgtype":"m.text"},"ts":1266277383000,"senderName":"Hixie","senderId":"Hixie@irc"}
]