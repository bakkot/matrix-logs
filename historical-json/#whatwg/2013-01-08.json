[
{"content":{"body":"or if there should even be a detectable difference","msgtype":"m.text"},"ts":1357603207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think we do!","msgtype":"m.text"},"ts":1357603208000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since the only difference is the type","msgtype":"m.text"},"ts":1357603215000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it surely can't require much prose to make it work","msgtype":"m.text"},"ts":1357603241000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wasn't that type mostly useful for developers?","msgtype":"m.text"},"ts":1357603253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean it doesn't actually affect implementations as it's a callback","msgtype":"m.text"},"ts":1357603275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't know","msgtype":"m.emote"},"ts":1357603305000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah in JS for onerror anything will match either type, i think","msgtype":"m.text"},"ts":1357603307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd just treat all those as one and define the superset behavior","msgtype":"m.text"},"ts":1357603308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for the HTMLCollection vs HTMLPropertiesCollection case I'm less sure, since that would affect me","msgtype":"m.text"},"ts":1357603336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway i don't really care what solution we pick, just need to know what to write :-)","msgtype":"m.text"},"ts":1357603338000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1357603341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: see above for a sketch for onblur","msgtype":"m.text"},"ts":1357603356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you want me to look at HTMLCollection and propose wording for you both, I can do that","msgtype":"m.text"},"ts":1357603361000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: just make the element check part of the attribute definition and don't let it depend on IDL","msgtype":"m.text"},"ts":1357603399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as far as i can tell, onblur is defined already.","msgtype":"m.text"},"ts":1357603419000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's only one attribute.","msgtype":"m.text"},"ts":1357603425000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"onerror is the unclear one as far as those go.","msgtype":"m.text"},"ts":1357603449000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but onblur has implementation requirements in different places","msgtype":"m.text"},"ts":1357603495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even if there's only one attribute, the prose suggests they're different","msgtype":"m.text"},"ts":1357603504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1357603510000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that's kinda relevant one you start applying one attribute at another location","msgtype":"m.text"},"ts":1357603528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd think","msgtype":"m.text"},"ts":1357603532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there's only one onblur, so if it's defined to work on one <body> element, i don't see why it wouldn't work anywhere.","msgtype":"m.text"},"ts":1357603572000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I guess you're saying that although the attribute is defined separately for all elements and the <body> element in particular, that's kind of an implicit if check in the attribute's implementation?","msgtype":"m.text"},"ts":1357603877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1357603900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I guess I can buy that. It seems onerror is also one type now in the spec?","msgtype":"m.text"},"ts":1357603962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which would leave HTMLPropertiesCollection which heycam is going to fix? :-)","msgtype":"m.text"},"ts":1357604044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll take a look at it later today and post in the bug with proposed wording","msgtype":"m.text"},"ts":1357604069000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1357604192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"onerror is of two types","msgtype":"m.text"},"ts":1357604255000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but we can change that i guess","msgtype":"m.text"},"ts":1357604262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"btw, has anyone tested if IE10 has an “IE9 XML” mode in addition to an “IE10 XML” mode?\"","msgtype":"m.text"},"ts":1357617199000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Yes it does: http://msdn.microsoft.com/en-us/library/hh834788(v=vs.85).aspx","msgtype":"m.text"},"ts":1357617207000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"do web notifications allow for bells?","msgtype":"m.text"},"ts":1357624328000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"i like how http://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm has two contradictory paragraphs defining what is normative and what is not","msgtype":"m.text"},"ts":1357629837000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(paragraps 1 and 3 of the conf section)","msgtype":"m.text"},"ts":1357629847000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://twitter.com/g16n/status/288326241755484160","msgtype":"m.text"},"ts":1357635168000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"And it doesn't mean you are addressing the same way the @brucel @brucel\"?","msgtype":"m.text"},"ts":1357637227000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"wonders how much of the web breaks if we just dropped Accept-Language entirely","msgtype":"m.emote"},"ts":1357637382000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Using x- for web components is so silly. Why hasn't that been named differently yet? x- means experimental and on top of that the IETF is over the x- experiment itself...","msgtype":"m.text"},"ts":1357641588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I gave up trying to drill that into their heads","msgtype":"m.text"},"ts":1357641806000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But it's ugly and breaks functionality! What's not to like?","msgtype":"m.text"},"ts":1357642724000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Your face :)","msgtype":"m.text"},"ts":1357642859000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, I think we can all agree on that","msgtype":"m.text"},"ts":1357642880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smooches jgraham's face","msgtype":"m.emote"},"ts":1357643062000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"whacks darkcypher_bit ","msgtype":"m.emote"},"ts":1357643103000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"whacks darobin ","msgtype":"m.emote"},"ts":1357643107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"darkcypher_bit, nvm","msgtype":"m.text"},"ts":1357643113000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tee hee","msgtype":"m.text"},"ts":1357643126000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"smooches Ms2ger too","msgtype":"m.emote"},"ts":1357643136000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Nooo","msgtype":"m.text"},"ts":1357643144000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Do work instead!","msgtype":"m.text"},"ts":1357643148000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"pwet!","msgtype":"m.text"},"ts":1357643211000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Hi Karl","msgtype":"m.text"},"ts":1357643259000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"☺ hullo","msgtype":"m.text"},"ts":1357643272000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Ms2ger: I find it difficult to focus on working with your sexiness hanging around like that","msgtype":"m.text"},"ts":1357643302000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"covers his body","msgtype":"m.emote"},"ts":1357643322000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Does anyone know how Shadow DOM works at an implementation level?","msgtype":"m.text"},"ts":1357645070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Let's hope they do, else the one in webkit would be in very bad shape.","msgtype":"m.text"},"ts":1357645124000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"The terminology usage in the Shadow DOM spec is so sloppy :/","msgtype":"m.text"},"ts":1357645334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so given","msgtype":"m.text"},"ts":1357649484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<a href=x>test</a> <b id=x>test</b> <style> a /href/ b { background:papayawhip } </style>","msgtype":"m.text"},"ts":1357649521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are we gonna see some papayawhip action?","msgtype":"m.text"},"ts":1357649537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://dev.w3.org/csswg/selectors4/#idref-combinators seems to suggest so, which seems kinda poor design to me","msgtype":"m.text"},"ts":1357649551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#reprojection","msgtype":"m.text"},"ts":1357651542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How can an insertion point be a child node of a shadow host?","msgtype":"m.text"},"ts":1357651559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<shadow><div><content/></div></shadow> and <div> is tied to another <shadow>?","msgtype":"m.text"},"ts":1357651585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's so weird how this spec works","msgtype":"m.text"},"ts":1357651959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so 4.6 makes requirements, and 4.7 makes them again but in an algorithm?","msgtype":"m.text"},"ts":1357651978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what's going on?","msgtype":"m.text"},"ts":1357651986000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I imagine what's going on is that the spec has been written by a small group of people that aren't pro spec writers, are mainly interested in one implementation, and already know how things work so don't explain it clearly","msgtype":"m.text"},"ts":1357652374000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It is the sort of thing that gets fixed when e.g. you start commenting and others start implementing","msgtype":"m.text"},"ts":1357652410000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I filed a bunch of bugs already and a couple more today, not entirely sure it's helping though...","msgtype":"m.text"},"ts":1357652447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And my main objective here is really to understand what's going on so I can adjust DOM accordingly, but maybe I should indeed wait with that but then I worry it might be too late to change Shadow DOM at some point because \"Microsoft shipped\" it or some silly reason like that","msgtype":"m.text"},"ts":1357652495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I guess assuming that Microsoft will provide feedback before they ship something broken isn't a strategy with history on its side","msgtype":"m.text"},"ts":1357652611000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So the event situation for shadow trees... Say you have <a><b> and <a> has a <shadow><content match=b> then you dispatch on <b>","msgtype":"m.text"},"ts":1357652978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"traversal path becomes b > content > shadow > a I guess","msgtype":"m.text"},"ts":1357653020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, but you only hit problems if the event originates from a shadow tree","msgtype":"m.text"},"ts":1357653201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess a more interesting case is <a><b> with both <a> and <b> having a shadow tree attached so you end up with something like <a> -> <shadow> -> <b> -> <shadow> and then in <b>'s <shadow> an event is dispatched","msgtype":"m.text"},"ts":1357653974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"once the event reaches <a>'s <shadow>, the target should be <b> I suppose and not change","msgtype":"m.text"},"ts":1357654022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1357662921000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"huh, annevk asked some questions and left","msgtype":"m.text"},"ts":1357663081000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: don't worry, he usually returns after realising that the real world is even more broken than web technology","msgtype":"m.text"},"ts":1357663266000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: it's not broken, it's a work in progress :)","msgtype":"m.text"},"ts":1357663314000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: I can't wait for last call then","msgtype":"m.text"},"ts":1357663842000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: we were supposed to be done on Dec 21, but stuff got delayed.","msgtype":"m.text"},"ts":1357663907000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"for the real world?","msgtype":"m.text"},"ts":1357663926000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I had no idea you were part of that team, too","msgtype":"m.text"},"ts":1357663933000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: we're all part of that team","msgtype":"m.text"},"ts":1357663950000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"no, I just do snapshots","msgtype":"m.text"},"ts":1357663975000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"working on the next fossil record","msgtype":"m.text"},"ts":1357663997000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"see? part of the team","msgtype":"m.text"},"ts":1357664021000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: We need *some* prefix to avoid polluting the tagname namespace.  x- is the closest one to hand, and the ugliness is actually a plus.","msgtype":"m.text"},"ts":1357669070000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It should hopefully help prevent people from just scatting <para> and <list> elements all over their page, since they'll instead be ugly <x-para> and <x-list>.)","msgtype":"m.text"},"ts":1357669112000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: The bit about \"insertion point is a child node of another shadow host\" could be written better, and have an example, but it's referring to this:","msgtype":"m.text"},"ts":1357669345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<shadow><x-foo><content></x-foo></shadow>","msgtype":"m.text"},"ts":1357669361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That is, the children of whatever element that shadow belongs to are reprojected as children of another component.","msgtype":"m.text"},"ts":1357669386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We went through a *ton* of pain trying to solve that problem in a simpler matter, but as far as we can tell our current solution is the only way to allow composition without everything cooperating ahead of time.","msgtype":"m.text"},"ts":1357669419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(And even with cooperation, the selectors necessary to style things were wonky as hell.)","msgtype":"m.text"},"ts":1357669430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The point of it is just that, from the perspective of <x-foo>'s own shadow tree (and it's own <content> element selecting things from its light children), the <x-foo> contains the projected nodes from the outer shadow, *not* the <content> element of the outer shadow.  It's replaced in-place.","msgtype":"m.text"},"ts":1357669505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's sad","msgtype":"m.text"},"ts":1357669709000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Which is sad?","msgtype":"m.text"},"ts":1357669790000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That people still think custom tagnames aren't batshit insane","msgtype":"m.text"},"ts":1357669832000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie's silly is='' idea is just moving the custom tagname to an attribute.  It's still fucntionally a tagname in all respects - it needs to be aroudn during initial parse, and then changing it has no effect.","msgtype":"m.text"},"ts":1357669863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It just obfuscates things.","msgtype":"m.text"},"ts":1357669880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you still believe that, I'm not going to bother trying to convince you","msgtype":"m.text"},"ts":1357669893000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I haven't been around during any discussions that disputed what I just said.  All I've heard is reluctance to actually use tagnames, which strikes me as insubstanial.","msgtype":"m.text"},"ts":1357669925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you ahve real reasons why what I said above is false, lay them on me.","msgtype":"m.text"},"ts":1357669934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger++","msgtype":"m.text"},"ts":1357670378000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"has laid the reasons down in detail in the bug","msgtype":"m.emote"},"ts":1357670386000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Which bug was it again, Hixie?  Just title or something for me to search for.","msgtype":"m.text"},"ts":1357670403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"has \"is\" and \"tatribute\" in the summary, i think. has \"select/map\" in the comments.","msgtype":"m.text"},"ts":1357670448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"attribute, even","msgtype":"m.text"},"ts":1357670451000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Ah, right, the \"everything will be divs and there will be no semantics\" argument, which ignores the ability to specify the tag you're descending from declaratively (via an attribute(!) on <element>) and via script (via document.register).  The declarative version is identically informative, and more reliable, since you can't screw up and accidentally forget to apply the attribute to an instance.","msgtype":"m.text"},"ts":1357670956000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<p is=foo> is the same as <element name=x-foo extends=p>","msgtype":"m.text"},"ts":1357671099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i discuss that in the bug too","msgtype":"m.text"},"ts":1357671201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having the fallback in the binding declaration puts it in the wrong place -- you want the fallback in the page itself, for reasons i elaborate on in the bug","msgtype":"m.text"},"ts":1357671230000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes, I'm reading through that.  I don't understand the argument.  Why is the location of the fallback information important, as long as everything is declaratively knowable?","msgtype":"m.text"},"ts":1357671408000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(As far as I can tell, that point isn't adequately explained in the bug.)","msgtype":"m.text"},"ts":1357671854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"requiring that every random html processor also be enough of a web components processor to get the fallback declaration is an unacceptably (and i thought obviously) high implementation burden","msgtype":"m.text"},"ts":1357671874000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i's a burden that is put on those implementors least likely to have the bandwidth to support it","msgtype":"m.text"},"ts":1357671906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's","msgtype":"m.text"},"ts":1357671910000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I assume that anything capable of actually *using* the page in any worthwhile capacity is a significant HTML processor, and thus would implement the general suite of web stuff.","msgtype":"m.text"},"ts":1357671921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i do not think that assumption is warranted.","msgtype":"m.text"},"ts":1357671943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, that increases the cost of operating a web search user agent significantly (more networking required, more processing required, etc), and that's an industry where we really don't want to be making the costs any higher than they already are","msgtype":"m.text"},"ts":1357671997000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it also means that an HTML file is no longer stand-alone in its semantics, which seems like a huge and rather disturbing step to take","msgtype":"m.text"},"ts":1357672035000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Web search that cares about the meaning of elements (the bar you're setting) already has to care about CSS to some extent, at least, or it's trivially vulnerable to cloaking.","msgtype":"m.text"},"ts":1357672050000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's a much huger requirement than asking it to parse another document which is also HTML and look for simple associations.","msgtype":"m.text"},"ts":1357672074000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"only if it's being used against arbitrary web content","msgtype":"m.text"},"ts":1357672109000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"most spiders are in enterprise environments where that's not really an issue","msgtype":"m.text"},"ts":1357672120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure why enterprise web spiders are an industry we should care particularly much about, to the point of harming the authoring experience.","msgtype":"m.text"},"ts":1357672177000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well as discussed in the bug, i think having the fallback in the markup also improves the web author experience.","msgtype":"m.text"},"ts":1357672308000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"People have made the exact opposite argument in the bug, too, and I find them much more convincing.  ^_^","msgtype":"m.text"},"ts":1357672350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is with Hixie on that","msgtype":"m.emote"},"ts":1357672440000,"senderName":"JibberJim","senderId":"JibberJim@irc"},
{"content":{"body":"TabAtkins++","msgtype":"m.text"},"ts":1357672736000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I am sort of intrigued by \"select/map\" idea though","msgtype":"m.text"},"ts":1357672761000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Basically, I find it very difficult to argue that it's more helpful for developers to have to repeat the element your component descends from for every instance.  It would be like having to write a chain of superclasses for every \"new\" call in JS.","msgtype":"m.text"},"ts":1357672806000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that is true. What if for elements that extend HTMLElement, you could just have straight custom tag?","msgtype":"m.text"},"ts":1357672851000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: But it is vastly more helpful for processors","msgtype":"m.text"},"ts":1357672889000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since it degrades gracefully whereas the alternative does not","msgtype":"m.text"},"ts":1357672924000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you forgo the \"input/\" prefix, you need an x- prefix.  Inconsistance is bad, so you'd need to put the x- prefix on the \"input/\" prefixed things too, which is silly.","msgtype":"m.text"},"ts":1357672925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: The degrading possible is very minimal.  If you've never worked with apps and the sort of \"components\" they use, it's easy to imagine that you can just slightly extend HTML's semantics and everything will be great.  In reality, most components will descend from <div> or whatever, not because of laziness, but because *that's the most appropriate tag, given that nothing else has the right semantics*.","msgtype":"m.text"},"ts":1357672996000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: being stuck in the ghetto is a sad compromise. If you look at what web devs are doing today to make their own \"tags\", you'll see that it's all gone to imperative land anyhow.","msgtype":"m.text"},"ts":1357673047000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I know what people do today. I would much rather that a custom calendar widget is <input type=calendar is=my-calendar> or whatever than <x-my-calendar>.","msgtype":"m.text"},"ts":1357673189000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for example","msgtype":"m.text"},"ts":1357673197000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(not that I really like the is= syntax)","msgtype":"m.text"},"ts":1357673257000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But the idea that <div> is the best match semantic in the overwhelming majority of cases is clearly wrong","msgtype":"m.text"},"ts":1357673292000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There are many cases that are like a button, or like some kind of <input> or like a list, or like a table","msgtype":"m.text"},"ts":1357673333000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: arguably, most of those cases should be bound from CSS, imho","msgtype":"m.text"},"ts":1357673785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh yes","msgtype":"m.text"},"ts":1357674000000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We've got lovely experiences with binding","msgtype":"m.text"},"ts":1357674011000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie: Yeah, good luck convincing Mozilla people that's a good idea :)","msgtype":"m.text"},"ts":1357674070000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<input type=calendar data-is=my-calendar>   ???","msgtype":"m.text"},"ts":1357674175000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"jgraham: it seems pretty clear that e.g. the button style google uses is a CSS-level thing.","msgtype":"m.text"},"ts":1357674306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: but Mozilla already seems to do this via CSS for their themes, so I don't see why it'd be hard to convince them?","msgtype":"m.text"},"ts":1357674324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Because we know how terrible it sucks","msgtype":"m.text"},"ts":1357674392000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bz can tell you stories","msgtype":"m.text"},"ts":1357674401000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<input type=redundant is=redundant class=redundant class=redundant>","msgtype":"m.text"},"ts":1357675453000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"See?","msgtype":"m.text"},"ts":1357675557000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I like that Hixie at least proposes interesting alternatives","msgtype":"m.text"},"ts":1357676291000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"most other detractors simply engage in navel gazing","msgtype":"m.text"},"ts":1357676320000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"introduction of local semantics to HTML is simply bringing it in sync with reality. It's scary and new, but angst never seemed like a good reason for anything.","msgtype":"m.text"},"ts":1357676622000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: \"navel gazing\"? Do you that that's helpful?","msgtype":"m.text"},"ts":1357676913000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: probably not :)","msgtype":"m.text"},"ts":1357676954000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"jgraham: but then again, if it stirs you enough to help come up with a better idea, maybe it is? :P","msgtype":"m.text"},"ts":1357676995000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie, +1 for proper RAF use in your sample code :)","msgtype":"m.text"},"ts":1357677014000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"dglazkov: Well the ability to declaratively reuse an existing element name is a requirement. So I can only think of three ways of declaring which component will extend it: An attribute, a parser hack, and a binding langauge. I think all three options have already been suggested.","msgtype":"m.text"},"ts":1357680406000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"What if you look at it as the requirement being to just allow web authors to build their own DOM elements? The markup part of it is just a matter of consistency.","msgtype":"m.text"},"ts":1357680619000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"jgraham: The \"binding language\" possibility is just what Web Components currently uses (<element extends>), yes?","msgtype":"m.text"},"ts":1357680834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think a \"binding\" is the render-then-decorate approach that CSS takes","msgtype":"m.text"},"ts":1357681099000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"which decorators part of Web Components is already covering","msgtype":"m.text"},"ts":1357681133000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: here","msgtype":"m.text"},"ts":1357681322000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"dglazkov: it's Daniel ftr","msgtype":"m.text"},"ts":1357681340000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"heeey csuwldcat :)","msgtype":"m.text"},"ts":1357681340000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I was thinking of something like the approach that XBL1 takes. Which, as previously mentioned, turns out to suck (according to bz)","msgtype":"m.text"},"ts":1357681345000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just left an overly frustrated comment on the bug","msgtype":"m.text"},"ts":1357681354000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"correct by questionable tone, sorry","msgtype":"m.text"},"ts":1357681364000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"but*","msgtype":"m.text"},"ts":1357681368000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat, meet jgraham and Hixie and TabAtkins and the gang","msgtype":"m.text"},"ts":1357681392000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"heyo!","msgtype":"m.text"},"ts":1357681399000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"this whole is=, as=, thing=, can we just make it an optional semantic addon?","msgtype":"m.text"},"ts":1357681434000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"(if we were not allowing anything in the markup, my response would be \"why not\" and if that had a good enough answer \"can we use normal js inheritance\")","msgtype":"m.text"},"ts":1357681445000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's irrelevant to a majority of use-cases","msgtype":"m.text"},"ts":1357681449000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Hi everyone. I have a semantic HTML question. I have one or more sets of video game screenshots that are being showed to the viewer to compare. Like how a particular scene looks on one game platform versus others. My first thought was that this looks a lot like tabular data. I'd have gone with that, but CSS overflow support on tables is quite spotty, so I'm looking for an alternative.","msgtype":"m.text"},"ts":1357681455000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"and introduces a *ton* of gotchas","msgtype":"m.text"},"ts":1357681460000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"jgraham: the answer to inheritance is already there.","msgtype":"m.text"},"ts":1357681490000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"BenoitRen: <table> would have been fine, but this situation doesn't have any appreciable semantic, so use whatever's convenient.","msgtype":"m.text"},"ts":1357681493000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"csuwldcat: It seems pretty essential if we want something like graceful degredation","msgtype":"m.text"},"ts":1357681506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure, but optional","msgtype":"m.text"},"ts":1357681516000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"and making it optional wouldn't remove the gotchas","msgtype":"m.text"},"ts":1357681526000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tags default to SPAN semantics","msgtype":"m.text"},"ts":1357681528000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"Yeah, that's the problem","msgtype":"m.text"},"ts":1357681542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<element extends=\"table\">","msgtype":"m.text"},"ts":1357681562000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"My previous point about most components reasonably descending from <div> means that a large fraction (likely a large majority) of components won't have a graceful degradation story in the first place.","msgtype":"m.text"},"ts":1357681571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I don't know of anything else that's convenient, except maybe a list of lists... :/","msgtype":"m.text"},"ts":1357681581000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"See: most uses of components in the while today, which are just piles of divs and such.","msgtype":"m.text"},"ts":1357681584000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: correct","msgtype":"m.text"},"ts":1357681587000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"s/while/wild/","msgtype":"m.text"},"ts":1357681597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<element extends=table> looks prettier but doesn't have the right graceful degredation story","msgtype":"m.text"},"ts":1357681609000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"BenoitRen: A list of pairs, where each pair is just some <img> elements and maybe some wrapper elements for structure, is fine.","msgtype":"m.text"},"ts":1357681629000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That's a problem that we want to fix, not a desirable feature of the solution","msgtype":"m.text"},"ts":1357681635000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the problems is=\"\" introduces if it is used as the binding/proto mechanism are untenable","msgtype":"m.text"},"ts":1357681639000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"it literally could waste millions of dev hours a year","msgtype":"m.text"},"ts":1357681655000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"jgraham: I submit that it's not a fixable problem, and your hope that it is fixable comes from a naivety about the problem, due to insufficient experience with what authors are doing in that space.","msgtype":"m.text"},"ts":1357681671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where are these problems documented?","msgtype":"m.text"},"ts":1357681677000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the bug","msgtype":"m.text"},"ts":1357681687000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: That works for pairs, but the particular page I'm working on compares three screenshots.","msgtype":"m.text"},"ts":1357681697000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"it just went through them for probably the 12th time","msgtype":"m.text"},"ts":1357681698000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: I submit that you have provided no evidence that is the case and it would be good if you could do so","msgtype":"m.text"},"ts":1357681705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<input type=\"button\" is=\"foo\" /> != <button is=\"foo\">","msgtype":"m.text"},"ts":1357681710000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"BenoitRen: Then mark up three of them.  Don't overthink it.","msgtype":"m.text"},"ts":1357681713000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"one could/will cause explosions","msgtype":"m.text"},"ts":1357681722000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"but devs will *never* think about the reason why","msgtype":"m.text"},"ts":1357681747000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: Let me reread the bug","msgtype":"m.text"},"ts":1357681762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: Like <dl><dt><img></dt><dd><img></dd><dd><img></dd></dl>?","msgtype":"m.text"},"ts":1357681780000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"you cannot have an element defintion that materially relies on an element proto and expect it to interop when slapped on random other elements","msgtype":"m.text"},"ts":1357681781000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"TabAtkins: I'm overthinking it because I'd like to do it right, even if a little bit. :)","msgtype":"m.text"},"ts":1357681825000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"it's not just a preference, is=\"\" is nearly a technical/API non-starter","msgtype":"m.text"},"ts":1357681976000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"it has real consequences that are significant and error-prone","msgtype":"m.text"},"ts":1357681995000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I could care less about introducing a descriptor attribute","msgtype":"m.text"},"ts":1357682012000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"knock yourself out","msgtype":"m.text"},"ts":1357682017000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"That sounds like complaining that if you create an object that inherits from class A and try to use methods of class B it will fail. Well yes, but that doesn't seem to be something that people have difficulty understanding.","msgtype":"m.text"},"ts":1357682040000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you used a imperitive construction to make the case for declaritive interop difficulty","msgtype":"m.text"},"ts":1357682416000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357682420000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the point is, you're not constructing an concrete class, is=\"\" is packed with inference, by nature","msgtype":"m.text"},"ts":1357682523000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"jgraham: Um, etree_lxml hasn't been tested in ages.","msgtype":"m.text"},"ts":1357683328000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So lxml support has all kinds of weird bugs. :(","msgtype":"m.text"},"ts":1357683366000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: I went with a bunch of <ul class=\"comparison\">. Thanks for the assistance! :)","msgtype":"m.text"},"ts":1357684027000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"is out","msgtype":"m.emote"},"ts":1357684386000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"Laters.","msgtype":"m.text"},"ts":1357684390000,"senderName":"BenoitRen","senderId":"BenoitRen@irc"},
{"content":{"body":"csuwldcat: Web Components is the optional add-on, not the semantics.","msgtype":"m.text"},"ts":1357684464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I wonder if the gist of the whole argument is on whether we should allow authors to introduce local semantics.","msgtype":"m.text"},"ts":1357684998000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: \"semantics\" is what the author and reader agree the semantics are. On the Web, that means something that the browser vendor and page author both agree is defined in a specification. It is basically impossible for an author to unilaterally introduce new semantics.","msgtype":"m.text"},"ts":1357685487000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dglazkov: i do agree that that is probably where the disagreements begin, though","msgtype":"m.text"},"ts":1357685509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: why does it need to be impossible?","msgtype":"m.text"},"ts":1357685647000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it doesn't _need_ to be impossible","msgtype":"m.text"},"ts":1357685932000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just is","msgtype":"m.text"},"ts":1357685941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if fred decides he wants a new semantic, he isn't going to be able to unilaterally write a spec for it and convince all the browser vendors to adopt it","msgtype":"m.text"},"ts":1357685962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heck i write the spec for HTML as my fulltime job and i can barely do it","msgtype":"m.text"},"ts":1357685988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if fred could come up with a new set of tags to describe some concepts in his web applications, he should be able to do it.","msgtype":"m.text"},"ts":1357686030000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that's not new semantics","msgtype":"m.text"},"ts":1357686058000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1357686084000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"<Hixie> dglazkov: \"semantics\" is what the author and reader agree the semantics are","msgtype":"m.text"},"ts":1357686098000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. the spec.","msgtype":"m.text"},"ts":1357686107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they mean something to fred and all other authors of this web app","msgtype":"m.text"},"ts":1357686108000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"that's fantastic. still not semantics though.","msgtype":"m.text"},"ts":1357686129000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's just one type of semantics. The public semantics.","msgtype":"m.text"},"ts":1357686135000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's not public if it's just the authors of the page","msgtype":"m.text"},"ts":1357686146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what fred has is local semantics","msgtype":"m.text"},"ts":1357686163000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"ok fine, we can define that as \"local semantics\"","msgtype":"m.text"},"ts":1357686187000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"local semantics is worthless.","msgtype":"m.text"},"ts":1357686190000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(on the large scale)","msgtype":"m.text"},"ts":1357686223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(which is what matters)","msgtype":"m.text"},"ts":1357686228000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interestingly, the value of local semantics is not zero on the large scale. If fred writes a successful library that's used by many authors, his set of tags may be used by unnamed editor of HTML spec to turn them into public semantics.","msgtype":"m.text"},"ts":1357686330000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"there is marginal incremental value, sure, but it's not of relevance to this discussion","msgtype":"m.text"},"ts":1357686363000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"specifically, \"local semantics\" doesn't address any of the problems that we need semantics for, namely, fallback in legacy UAs, fallback in non-web-component-aware UAs, ability for new authors to understand what's going on, ability for UAs to determine page meaning without fetching other resources, etc.","msgtype":"m.text"},"ts":1357686397000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all the things discussed in the bug.","msgtype":"m.text"},"ts":1357686402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the same reason we have em, strong, cite, a, dfn, q, small, s, abbr, data, time, code, var, samp, sub, sup, ruby, etc, rather than just letting authors make up their own elements and use CSS to style them.","msgtype":"m.text"},"ts":1357686478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the same reason people use HTML rather than just XML+script+css","msgtype":"m.text"},"ts":1357686514000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, fred that we're talking about is already using json+script+css, precisely because HTML wouldn't let him have local semantics.","msgtype":"m.text"},"ts":1357686554000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: i've nothing against adding local semantics hooked to real semantics","msgtype":"m.text"},"ts":1357686892000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The problems you mentioned are real, though I can't exactly measure their real impact.","msgtype":"m.text"},"ts":1357686912000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: that is a ghetto approach, which is why I am not super in love with it. I am intrigued by the idea, though.","msgtype":"m.text"},"ts":1357686960000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"what do you mean by \"ghetto\" in this context?","msgtype":"m.text"},"ts":1357686982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"here's a playground for your kind (the web dev), let the browser do their thing and don't bother us\"","msgtype":"m.text"},"ts":1357687028000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"ah. then i disagree.","msgtype":"m.text"},"ts":1357687110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think it's a fair question (that I've been asked many times): why can't a web developer build their own tag that behaves just like the built-in one? the ghetto makes it clear where the real folks live, and where the toy people should play.","msgtype":"m.text"},"ts":1357687112000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's not toy people","msgtype":"m.text"},"ts":1357687123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's extensions.","msgtype":"m.text"},"ts":1357687126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"extensions are qualitatively different than built-in features.","msgtype":"m.text"},"ts":1357687139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"extensions is just a nice word for ghetto","msgtype":"m.text"},"ts":1357687157000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"built-in should be abolished as a concept eventually","msgtype":"m.text"},"ts":1357687174000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i completely disagree with that","msgtype":"m.text"},"ts":1357687188000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"everything is just custom elements that UA happened to provide","msgtype":"m.text"},"ts":1357687198000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: I know :)","msgtype":"m.text"},"ts":1357687202000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"these are the same arguments we had when xml came to be","msgtype":"m.text"},"ts":1357687266000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"people were pushing the idea that people would be able to make up their own language","msgtype":"m.text"},"ts":1357687280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the idea to make up their own language, as a self-goal, is crazy and stupid.","msgtype":"m.text"},"ts":1357687318000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"how is that different than \"everything is just custom elements\"?","msgtype":"m.text"},"ts":1357687334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because with the latter, the goal is to make the entire surface of Web platform inherently consistent and hackable. If some crazy nut decides to go invent their language with it, I am not going to stop them.","msgtype":"m.text"},"ts":1357687441000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: do i have to put anything about :user-error in the html spec? and if so, what?","msgtype":"m.text"},"ts":1357687448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: he's not at desk","msgtype":"m.text"},"ts":1357687461000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: i think the goal of \"make the entire surface of Web platform inherently consistent and hackable\" is as misguided as the goal behind Perl6 of making the language itself mutable","msgtype":"m.text"},"ts":1357687507000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having concrete things that don't change is _good_, it's what makes the language approachable and usable","msgtype":"m.text"},"ts":1357687542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you find someone else's work, you can tell how it works","msgtype":"m.text"},"ts":1357687547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because it uses the same language you know","msgtype":"m.text"},"ts":1357687552000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if people can just mutate anything at will, it becomes nigh on impossible to maintain other people's work","msgtype":"m.text"},"ts":1357687567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a requirement for any platform to be usable. Unlike what it is now","msgtype":"m.text"},"ts":1357687571000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie: you're taking this to the deep end","msgtype":"m.text"},"ts":1357687582000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i disagree that it's a reqirement for the platform to be usable","msgtype":"m.text"},"ts":1357687603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"first, i don't know of any platform that actually does this and is widely used.","msgtype":"m.text"},"ts":1357687614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"second, the web is clearly usable, since it's used.","msgtype":"m.text"},"ts":1357687629000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the world's most used platform.","msgtype":"m.text"},"ts":1357687636000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure, it can be made easier and more powerful","msgtype":"m.text"},"ts":1357687646000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't see any reason to believe that making its core pillars mutable is a step towards that","msgtype":"m.text"},"ts":1357687664000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rather than a step awauy","msgtype":"m.text"},"ts":1357687667000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"away","msgtype":"m.text"},"ts":1357687670000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I know :) I wonder if it's because you need some experience building and maintaining a good-sized web app. Then you'll see what I am talking about. Most web devs today spend most of their time fighting the platform, not working with it","msgtype":"m.text"},"ts":1357687682000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"making core pillars mutable sounds a bit different from what I am talking about","msgtype":"m.text"},"ts":1357687744000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"the web is definitely clearly usable. But it sucks as an application platform. And there's a lot of folks (including me) who think it shouldn't.","msgtype":"m.text"},"ts":1357687891000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i do write web apps, dunno how big they have to be to count as \"good-sized\", but my most recent mostly complete one is thousands of lines of JS, thousands of lines of HTML, and thousands of lines of server-side code.","msgtype":"m.text"},"ts":1357687915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it sure doesn't suck as an application platform (which isn't to say it doesn't have tons of room for improvement)","msgtype":"m.text"},"ts":1357687928000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there are certainly things in the platform that suck and are hard to deal with","msgtype":"m.text"},"ts":1357687970000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't think being able to invent your own language is a solution to any of them","msgtype":"m.text"},"ts":1357687983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for many things i prefer it for application development over native development (especially when there's any gui involved), so i can only say it sucks in that respect to an equal or lesser degree than alternatives","msgtype":"m.text"},"ts":1357687993000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"again, you're trying to misrepresent what I am trying to say","msgtype":"m.text"},"ts":1357688000000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"i'm not trying to","msgtype":"m.text"},"ts":1357688010000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that's a pretty accusatory thing to say)","msgtype":"m.text"},"ts":1357688013000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"inventing own language is not the goal","msgtype":"m.text"},"ts":1357688015000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"if i am doing so it is because i don't understand what you are saying.","msgtype":"m.text"},"ts":1357688019000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: then it's accidental","msgtype":"m.text"},"ts":1357688028000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"which seems quite likely since i think what you're saying makes no sense :-)","msgtype":"m.text"},"ts":1357688031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(wc says said app is about 20,000 lines of html, js, perl, and freepascal)","msgtype":"m.text"},"ts":1357688059000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is http://krijnhoetmer.nl/irc-logs/whatwg/ down?","msgtype":"m.text"},"ts":1357688060000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(fwiw)","msgtype":"m.text"},"ts":1357688068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(looking for context)","msgtype":"m.text"},"ts":1357688078000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: that's a lot of lines","msgtype":"m.text"},"ts":1357688083000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"(though it has no shims to make things work in down-level clients, which i wouldn't be surprised to see double it)","msgtype":"m.text"},"ts":1357688090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not that many lines, but it's relatively dense code","msgtype":"m.text"},"ts":1357688119000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what component approach did you take, if it's not a secret?","msgtype":"m.text"},"ts":1357688160000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"two approaches, mostly","msgtype":"m.text"},"ts":1357688245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, three","msgtype":"m.text"},"ts":1357688248000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whoa, just read the last few minutes - helllllo hyperbole!","msgtype":"m.text"},"ts":1357688263000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"one was \"add things i need to the HTML spec and wait for them to be implemented\", but obviously that doesn't scale and i wouldn't say i really used that :-)","msgtype":"m.text"},"ts":1357688280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the main one was i used canvas (it's a visual game); i used a lot of what i learnt from this project in the speccing of addHitRegion(), fwiw.","msgtype":"m.text"},"ts":1357688307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the third is that i am waiting for web components to enable me to extend <input> to provide a better UI for what I want; in the meantime I'm using the closest matching <input> type.","msgtype":"m.text"},"ts":1357688339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: for some perspective, not a *single* web developer at mozilla that has used/discussed/explored custom elements has thought is=\"\" _is_ was a good idea","msgtype":"m.text"},"ts":1357688383000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: i don't think it's a great idea either.","msgtype":"m.text"},"ts":1357688406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why can't is/as just be optional","msgtype":"m.text"},"ts":1357688426000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357688427000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"why burden and obfiscate the interface with such inference? Especially when the inference is singly to serve a tangential need?","msgtype":"m.text"},"ts":1357688471000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"almost nobody would use it if it was optional, since most people don't undersand why semantics matter","msgtype":"m.text"},"ts":1357688475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"same reason people used to use <font> all the time","msgtype":"m.text"},"ts":1357688489000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<x is=\"foo\">","msgtype":"m.text"},"ts":1357688494000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"nothing forces they to comply","msgtype":"m.text"},"ts":1357688533000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"indeed. nothing stops people from just using xml and css today.","msgtype":"m.text"},"ts":1357688559000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but by saying things are required, and making the language ergonomics encourage particular behaviours, we can increase the chances.","msgtype":"m.text"},"ts":1357688593000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or div & span with data-","msgtype":"m.text"},"ts":1357688597000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1357688648000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and some people do indeed just use <div>s","msgtype":"m.text"},"ts":1357688658000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it's sad when they do","msgtype":"m.text"},"ts":1357688661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but at least the language encourages them not to","msgtype":"m.text"},"ts":1357688671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, so you're afraid of the circumstance where a developer creates a custom element - that semantically kin to an existing element - and explicitly not using extends=\"input\", for instance?","msgtype":"m.text"},"ts":1357688673000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"e.g. it's easier to use <nav> than <div class=\"nav\">","msgtype":"m.text"},"ts":1357688686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the barrier to entry for extends=\"\" *once* vs is=\"\" 1000 times repeditively?","msgtype":"m.text"},"ts":1357688711000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"csuwldcat: that is a fear, yes. more specifically, i'm worried people won't make it clear in the markup itself that it is an input.","msgtype":"m.text"},"ts":1357688713000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the need?","msgtype":"m.text"},"ts":1357688723000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"so first, notice i am not suggestion we use is=\"\"","msgtype":"m.text"},"ts":1357688724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and haven't for a long time","msgtype":"m.text"},"ts":1357688726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and please read the relevant bug where i discuss the reasons for all this","msgtype":"m.text"},"ts":1357688737000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"UA just parses the <element extends=\"input\" name=\"x-foo\">","msgtype":"m.text"},"ts":1357688740000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"UA has to download the file that contains the <element> first","msgtype":"m.text"},"ts":1357688751000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's one of the problems","msgtype":"m.text"},"ts":1357688754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you have a chicken egg here","msgtype":"m.text"},"ts":1357688764000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"how will it know to use is?","msgtype":"m.text"},"ts":1357688769000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1357688773000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is=\"\"?","msgtype":"m.text"},"ts":1357688773000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"antecedant error","msgtype":"m.text"},"ts":1357688779000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bc you code it to know this?","msgtype":"m.text"},"ts":1357688780000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the parser","msgtype":"m.text"},"ts":1357688785000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if it takes code to recognize is","msgtype":"m.text"},"ts":1357688795000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"antecedent even","msgtype":"m.text"},"ts":1357688796000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't know what you're asking, sorry","msgtype":"m.text"},"ts":1357688803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does it not take code to pull link","msgtype":"m.text"},"ts":1357688805000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"either way you need to add something, no?","msgtype":"m.text"},"ts":1357688817000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"either is=\"\" recognition","msgtype":"m.text"},"ts":1357688823000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"or extends=\"\" recognition","msgtype":"m.text"},"ts":1357688832000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the same ends can be achieved, no?","msgtype":"m.text"},"ts":1357688843000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"i really have no idea what you're talking about right now. can i beg you to start over with a complete sentence that doesn't require prior context in this conversation? :-)","msgtype":"m.text"},"ts":1357688847000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, in the element defintion <element name=\"x-tag-completer\" extends=\"input\">","msgtype":"m.text"},"ts":1357688891000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"you declare your kin, what you are most like, or want to be","msgtype":"m.text"},"ts":1357688916000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"obviously the browser would need to be coded to recognize this","msgtype":"m.text"},"ts":1357688936000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"similarly it would need additional code to recognize is=\"\"","msgtype":"m.text"},"ts":1357688953000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"it seems to me, the single difference here, is that you are unhappy with not forcing the choice of an existing native element to inherit from","msgtype":"m.text"},"ts":1357688988000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"am I wrong?","msgtype":"m.text"},"ts":1357688993000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"my problem is that a UA that doesn't know anything about Web Components, when it sees <x-tag-completer>, has no idea what this is","msgtype":"m.text"},"ts":1357689009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"such a UA needs to see that as an <input>","msgtype":"m.text"},"ts":1357689024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"does it not have the same effect as a HTMLSpanElement in UA land?","msgtype":"m.text"},"ts":1357689036000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"so e.g. <input/tag-completer>, which parses as <input> in legacy UAs, and as an <input> element implementing the \"tag-completer\" component in Web Component-aware UAs.","msgtype":"m.text"},"ts":1357689060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, that's the problem, <x-tag-completer> is like <foo> or <span>, not like <input> which is what it should be like if a tag-competer is some sort of input widget.","msgtype":"m.text"},"ts":1357689090000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when you get a reference to the element, it should implement HTMLInputElement in both new and old UAs","msgtype":"m.text"},"ts":1357689104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when you are a search engine you should be able to tell that it's a form control without knowing about web components","msgtype":"m.text"},"ts":1357689118000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I know the crawlers execute js and grab linked docs","msgtype":"m.text"},"ts":1357689157000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"when you only have the HTML file and not the web components, your data analysis tool should be able to know it's a form control and not, say, a section","msgtype":"m.text"},"ts":1357689159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that isn't the blocker it is being made out to be","msgtype":"m.text"},"ts":1357689180000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if you have the page, it will have the link","msgtype":"m.text"},"ts":1357689193000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"and custom element internal elements will be native mostly","msgtype":"m.text"},"ts":1357689220000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"requiring that tiny spiders implement web components just to be able to tell that it's an input is imho putting the burden on the wrong side of the balance.","msgtype":"m.text"},"ts":1357689237000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Let me admit something, you are in part right","msgtype":"m.text"},"ts":1357689246000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"not forcing people through a fail-prone attribute may result in less is=\"\" users","msgtype":"m.text"},"ts":1357689288000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"I'll openly admit that","msgtype":"m.text"},"ts":1357689295000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"However","msgtype":"m.text"},"ts":1357689302000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"let me repeat that i am not proposing is=\"\"","msgtype":"m.text"},"ts":1357689303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"input/foo?","msgtype":"m.text"},"ts":1357689316000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that's my latest proposal, yes","msgtype":"m.text"},"ts":1357689325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about <x/foo>....","msgtype":"m.text"},"ts":1357689327000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"the \"input\" part is the part i care about","msgtype":"m.text"},"ts":1357689336000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"see what I did there ;)","msgtype":"m.text"},"ts":1357689336000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if you do <x/foo> the validator can say \"look dude, that's not HTML\"","msgtype":"m.text"},"ts":1357689355000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is enough to push a lot of people towards doing it right","msgtype":"m.text"},"ts":1357689364000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"x-foo or x/foo, brevedy and felt need will win","msgtype":"m.text"},"ts":1357689365000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"how do you reconcile the very real probability that the vast majority of custom elements have no equivalent?","msgtype":"m.text"},"ts":1357689416000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"i don't think that's true, to start with","msgtype":"m.text"},"ts":1357689453000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"thus rendering the exercise a monotonous, annoyance","msgtype":"m.text"},"ts":1357689454000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"but do we have any data on that?","msgtype":"m.text"},"ts":1357689467000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd be willing to bet","msgtype":"m.text"},"ts":1357689472000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"i'd love to see what kinds of components people are trying to write","msgtype":"m.text"},"ts":1357689478000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"our tags at Mozilla","msgtype":"m.text"},"ts":1357689481000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"if we had data showing this one way or the other it would significantly influence my opinions","msgtype":"m.text"},"ts":1357689491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you classify a x-growbox?","msgtype":"m.text"},"ts":1357689492000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"howabout a slidebox","msgtype":"m.text"},"ts":1357689497000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"what's a \"growbox\"? or \"slidebox\"?","msgtype":"m.text"},"ts":1357689503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"flipbox?","msgtype":"m.text"},"ts":1357689503000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"map?","msgtype":"m.text"},"ts":1357689506000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"map as in map of the world, pick a country? that's a <select>.","msgtype":"m.text"},"ts":1357689517000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"please don't assume that everyone here is an expert in gecko internals :)","msgtype":"m.text"},"ts":1357689523000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"growbox autoanimates height to match new injected elements","msgtype":"m.text"},"ts":1357689527000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"that's CSS.","msgtype":"m.text"},"ts":1357689533000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically, height: auto; transitioning","msgtype":"m.text"},"ts":1357689539000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"shouldn't be a component at all. at least, not one in the markup.","msgtype":"m.text"},"ts":1357689540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1357689542000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"can't do that without this","msgtype":"m.text"},"ts":1357689549000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"another annoyance we took care of","msgtype":"m.text"},"ts":1357689556000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"then fix css to make it possible.","msgtype":"m.text"},"ts":1357689557000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1357689560000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"On it :)","msgtype":"m.text"},"ts":1357689567000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"things that are presenation-specific have no business being a markup-level component. they should either be in css, or css+webcomponents, but not in the html markup.","msgtype":"m.text"},"ts":1357689587000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: this is a copout \"shouldn't be a component at all. at least, not one in the markup.\"","msgtype":"m.text"},"ts":1357689594000,"senderName":"csuwldcat","senderId":"csuwldcat@irc"},
{"content":{"body":"presentation-specific","msgtype":"m.text"},"ts":1357689596000,"senderName":"Hixie","senderId":"Hixie@irc"}
]