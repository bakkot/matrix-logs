[
{"content":{"body":"I believe the proper term is Web Hypertext Application Technologies Un-Plenary","msgtype":"m.text"},"ts":1457568542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"wait no it was Unconference Plenary","msgtype":"m.text"},"ts":1457568564000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic++","msgtype":"m.text"},"ts":1457570001000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1457570037000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rniwa++ for tests","msgtype":"m.text"},"ts":1457589357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: :)","msgtype":"m.text"},"ts":1457589820000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: i've got a few dozens of tests for shadow DOM and custom elements now:","msgtype":"m.text"},"ts":1457589834000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://github.com/WebKit/webkit/tree/master/LayoutTests/fast/shadow-dom","msgtype":"m.text"},"ts":1457589863000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://github.com/WebKit/webkit/tree/master/LayoutTests/fast/custom-elements","msgtype":"m.text"},"ts":1457589867000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I don't like having prefixes to the commit messages, it uses up valuable space. So I'm also not a fan of \"Fix #100:\" and like to put this in the description","msgtype":"m.text"},"ts":1457591728000,"senderName":"philipj_","senderId":"philipj_@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1457603212000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: it's nearly 5AM if he isn't traveling","msgtype":"m.text"},"ts":1457603592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mutation events :-| ... https://www.chromestatus.com/metrics/feature/timeline/popularity/144 at least it's going down","msgtype":"m.text"},"ts":1457604208000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm hoping esprehn can change the timing of mutation events","msgtype":"m.text"},"ts":1457604339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If that's feasible we should just add them to the standard and forget about them","msgtype":"m.text"},"ts":1457604353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looks like I'm going to standardize port banning today ðŸ˜ƒ","msgtype":"m.text"},"ts":1457604868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://www.chromestatus.com/metrics/feature/timeline/popularity/146 DOMNodeRemovedFromDocument is at 0.0086% now","msgtype":"m.text"},"ts":1457604895000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hmm, there was some discussion about hitregions in some github bug recently... anyone happen to recall which bug it was","msgtype":"m.text"},"ts":1457605757000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not https://github.com/whatwg/html/issues/849 but some other","msgtype":"m.text"},"ts":1457605763000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and could we move issue tracking back to some bugzilla instance)","msgtype":"m.text"},"ts":1457605799000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"miketaylr: fyi https://lists.w3.org/Archives/Public/www-style/2016Feb/0169.html","msgtype":"m.text"},"ts":1457605874000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok, found it. https://github.com/whatwg/html/issues/548","msgtype":"m.text"},"ts":1457605949000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: we cannot, we migrated away from Bugzilla","msgtype":"m.text"},"ts":1457608761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: so your suggestion for hit regions is to make the hit region object (is there such a thing?) inherit from EventTarget?","msgtype":"m.text"},"ts":1457609156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: seems somewhat reasonable","msgtype":"m.text"},"ts":1457609162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: would its \"get the parent\" return the <canvas> it's associated with?","msgtype":"m.text"},"ts":1457609181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think I suggested that","msgtype":"m.text"},"ts":1457609299000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: I'm talking more about these steps: \"Let control be the control represented by region for this canvas element, if any.\" ... \"If there is a control, then target the event object at control instead of the canvas element.\"","msgtype":"m.text"},"ts":1457609505000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so we already dispatch the event on the \"hit region control\"","msgtype":"m.text"},"ts":1457609529000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and event.region == event.target.id","msgtype":"m.text"},"ts":1457609551000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or something like that","msgtype":"m.text"},"ts":1457609569000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Seems indeed redundant then","msgtype":"m.text"},"ts":1457609623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but Touch handling is something different","msgtype":"m.text"},"ts":1457609699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I think mostly the whole .region stuff is busted.","msgtype":"m.text"},"ts":1457609766000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"whoever designed the API could explain why it is the way it is","msgtype":"m.text"},"ts":1457609797000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think Hixie_ designed it","msgtype":"m.text"},"ts":1457609822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: random thought: it seems slightly weird to have \"should\" in a defined term","msgtype":"m.text"},"ts":1457615125000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"mix and csp do the same","msgtype":"m.text"},"ts":1457615533000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i see Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits as a request header in opera","msgtype":"m.text"},"ts":1457617031000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"and .extensions returns \"permessage-deflate\"","msgtype":"m.text"},"ts":1457617154000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that is weird","msgtype":"m.text"},"ts":1457618914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: ugh","msgtype":"m.text"},"ts":1457618922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: file an issue? That requires a bunch of changes to various drafts","msgtype":"m.text"},"ts":1457618963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1457618985000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: did you work on WebSocket tests?","msgtype":"m.text"},"ts":1457620868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: the README doesn't really say where to find server code","msgtype":"m.text"},"ts":1457620880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: step 29 here seems to allow HEAD no-cors requests... https://fetch.spec.whatwg.org/#dom-request","msgtype":"m.text"},"ts":1457620919000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: i did, yeah. the server code is pywebsocket i believe","msgtype":"m.text"},"ts":1457620920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1457620951000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: did you test protocols not matching?","msgtype":"m.text"},"ts":1457620968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: and where do I find that code in relation to the tests?","msgtype":"m.text"},"ts":1457620977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: hmm, I wonder if that's accurate","msgtype":"m.text"},"ts":1457620989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: trying to find a test that tests the removed protocols thing, but little luck so far","msgtype":"m.text"},"ts":1457620993000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: afaict there's not a single feature on the web that can do HEAD across origins","msgtype":"m.text"},"ts":1457621007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is it bad?  if it ends up going to a same-origni you can see status... if you end up going cross-origin you see 0 status","msgtype":"m.text"},"ts":1457621017000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: the handlers are in websockets/handlers/","msgtype":"m.text"},"ts":1457621020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: even if we did allow HEAD though, that doesn't mean cache should be able to modify opaque responses","msgtype":"m.text"},"ts":1457621028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: at Request constructor time you don't know if you will get an opaque response or not if you fetch() it","msgtype":"m.text"},"ts":1457621054000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: where is the failure for doing the HEAD request cross-origin?","msgtype":"m.text"},"ts":1457621100000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: hmm here we have something ./constructor/012.html:  var ws = new WebSocket(SCHEME_DOMAIN_PORT+'/handshake_no_protocol', 'foobar');","msgtype":"m.text"},"ts":1457621152000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: I'm saying there might be a bug in Fetch that we allow that, or maybe we decided on allowing it since nobody thought it could do harm","msgtype":"m.text"},"ts":1457621178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I'm vaguely remembering it might be the latter","msgtype":"m.text"},"ts":1457621186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: but that still doesn't mean you should be able to modify an opaque response","msgtype":"m.text"},"ts":1457621196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the browser can clearly modify opaque responses and does whenever it sets the bodyUsed by internally draining","msgtype":"m.text"},"ts":1457621242000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: the cache spec is generally problematic here, though, because it does not serialize and deserialize the Response... so it looks like it just has a list of Response objects... its really creating a new one each time it returns","msgtype":"m.text"},"ts":1457621280000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"zcorpan: contents of handshake_no_protocol_wsh.py are a little weird","msgtype":"m.text"},"ts":1457621297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it's a hack due to limitations of pywebsocket (or limited understanding) at the time the tests were written","msgtype":"m.text"},"ts":1457621337000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1457621650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so we don't think we will ever want to send a password credential without cookies?","msgtype":"m.text"},"ts":1457621657000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it doesn't seem great to let developers modify opaque responses, although I'd have to page everything in again as to why that might be problematic","msgtype":"m.text"},"ts":1457621711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: well, that's what mkwst thinks","msgtype":"m.text"},"ts":1457621723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, that's mkwst's irc handle!  I kept looking for him here","msgtype":"m.text"},"ts":1457621743000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I raised that point in the PR","msgtype":"m.text"},"ts":1457621744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1457621805000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: https://github.com/whatwg/html/pull/840 all good now or still wary?","msgtype":"m.text"},"ts":1457622008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML seems particularly hostile to diff reviewing for some reason","msgtype":"m.text"},"ts":1457622057000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: just added a comment","msgtype":"m.text"},"ts":1457622070000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks, so how about I add a check in Fetch","msgtype":"m.text"},"ts":1457624021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wfm","msgtype":"m.text"},"ts":1457624037000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \"If _protocols_ is not the empty list and _response_'s header list does not contain a header named Set-WebSocket-Protocol, then fail the WebSocket connection\"","msgtype":"m.text"},"ts":1457624064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: also check if the header is present but doesn't contain any value","msgtype":"m.text"},"ts":1457624223000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(havne't tested that but it seems it should be equivalent to omitting the header)","msgtype":"m.text"},"ts":1457624280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/whatwg/fetch/pull/242","msgtype":"m.text"},"ts":1457624918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"r+; need to leave now","msgtype":"m.text"},"ts":1457625239000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"wanderview: Hi, sorry. Wasn't looking at IRC.","msgtype":"m.text"},"ts":1457626892000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"not a problem","msgtype":"m.text"},"ts":1457626904000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: No, I don't think it makes sense to separate this kind of credential from any of the other kinds of credentials Fetch already deals with.","msgtype":"m.text"},"ts":1457626911000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"yea, sorry... I finally found the discussion in the PR","msgtype":"m.text"},"ts":1457626927000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"That is, if I'm trying to authenticate a session, I'm going to want to manage HTTP state along with the authentication information I'm sending over.","msgtype":"m.text"},"ts":1457626943000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"(and sorry about the IRC handle. It seemed like a BRILLIANT idea in the heady, vowelless days of Web 2.0.)","msgtype":"m.text"},"ts":1457627009000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"Pff, even I have a vowel","msgtype":"m.text"},"ts":1457627713000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"realizes he's had this name for over a decade now","msgtype":"m.emote"},"ts":1457628536000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"o/ WHATWG crew","msgtype":"m.text"},"ts":1457632798000,"senderName":"gabr13l","senderId":"gabr13l@irc"},
{"content":{"body":"used to be cgcardona FWIW","msgtype":"m.emote"},"ts":1457632812000,"senderName":"gabr13l","senderId":"gabr13l@irc"},
{"content":{"body":"gabr13l: good evening","msgtype":"m.text"},"ts":1457633157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi annevk","msgtype":"m.text"},"ts":1457633170000,"senderName":"gabr13l","senderId":"gabr13l@irc"},
{"content":{"body":"mkwst: btw, I'm still concerned about Matt's feedback here: https://groups.google.com/a/chromium.org/d/msg/blink-dev/7ouLjWzcjb0/s7aZHGnlAwAJ","msgtype":"m.text"},"ts":1457634606000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mkwst: I'm asking the person interested in implementing the spec in gecko to post to dev-platform so we can come to some concensus within mozilla","msgtype":"m.text"},"ts":1457634627000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hey gabr13l","msgtype":"m.text"},"ts":1457635954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hi MikeSmith","msgtype":"m.text"},"ts":1457635966000,"senderName":"gabr13l","senderId":"gabr13l@irc"},
{"content":{"body":"annevk: trying to understand why people are against the 4th param version of addEventListener","msgtype":"m.text"},"ts":1457636217000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"any new arguments ?","msgtype":"m.text"},"ts":1457636222000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"other than \"I don't like it\"","msgtype":"m.text"},"ts":1457636228000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the API happens to be so commonly used that we need to be _very_ careful with all the compatibility issues","msgtype":"m.text"},"ts":1457636267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and 4th param approach should be safer than 3rd param approach","msgtype":"m.text"},"ts":1457636287000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(and I'd really prefer if we spent less time on this and more time on designing some new way to add listeners)","msgtype":"m.text"},"ts":1457636333000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(since I assume that will take several months to get right)","msgtype":"m.text"},"ts":1457636344000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: If we can *actually commit* to doing that, and not just (as I expect) say \"Yeah, we'll fix this in a new API\" and then never develop it, then I'm okay with the stupid 4th-arg approach.","msgtype":"m.text"},"ts":1457639763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm just pretty sure that no one will actually spend the time to design a new API, or if they do, it'll get shot down as not worth the implementation effort for a minor usability benefit.","msgtype":"m.text"},"ts":1457639808000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"See: what has happened with createElement for the last several years.","msgtype":"m.text"},"ts":1457639823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what has happened with createElement?","msgtype":"m.text"},"ts":1457639905000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it hasn't really changed","msgtype":"m.text"},"ts":1457639916000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this way radically","msgtype":"m.text"},"ts":1457639920000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"People keep asking for a *usable* version of it, that lets you set attributes/properties/children.","msgtype":"m.text"},"ts":1457640005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What every single DOM wrapper library provides, because the current DOM API is really terrible in usability.","msgtype":"m.text"},"ts":1457640025000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I have one in Bikeshed - E.h1({attrs}, children...), for example.)","msgtype":"m.text"},"ts":1457640052000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But even tho the ideas get well-developed, no impls ever bite, because it doesn't actually provide anything *new*.","msgtype":"m.text"},"ts":1457640078000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And afaik, the same is true of a better-designed event-listener API - it's just \"more usable\", not \"new functionality\".","msgtype":"m.text"},"ts":1457640118000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is heading to lunch","msgtype":"m.emote"},"ts":1457640135000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if you or annevk or someone can commit to getting a new API into the spec, I'm happy to commit to implementing and shipping it in blink.","msgtype":"m.text"},"ts":1457642160000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"rbyers: TabAtkins: annevk: https://github.com/straker/html-tagged-template/ looks like the best bet for me","msgtype":"m.text"},"ts":1457642473000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(modulo https://github.com/straker/html-tagged-template/issues/6 )","msgtype":"m.text"},"ts":1457642495000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think he meant a better event listener API","msgtype":"m.text"},"ts":1457642753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, right, that would make sense :P","msgtype":"m.text"},"ts":1457642763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: there is no backcompat issue","msgtype":"m.text"},"ts":1457642790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I talked a bit with smaug offline, it's all the Firefox ESR users (9-12 months old) that he's worried about - so forwards compat, but not back compat.","msgtype":"m.text"},"ts":1457642877000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":".. that said, it's still possible there's a back compat issue - we just haven't found any concrete examples yet (and it's now in Chrome stable, so if there are a non-trivial number we should hear soon).","msgtype":"m.text"},"ts":1457642920000,"senderName":"rbyers","senderId":"rbyers@irc"},
{"content":{"body":"Those users will be in trouble anyway with each attractive new feature","msgtype":"m.text"},"ts":1457643021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"addEventListener is very different thing than some new attractive feature","msgtype":"m.text"},"ts":1457643053000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"This API will be around much longer than twelve months, it's important to do right by it","msgtype":"m.text"},"ts":1457643097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and hacking 3rd param isn't more correct than 4th param approach. The 4th param approach is even less hacky since it doesn't add this bizarre boolean or dictionary thing","msgtype":"m.text"},"ts":1457643156000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this is of course very subjective","msgtype":"m.text"},"ts":1457643165000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders what cloneRecord.[[TransferList]] means","msgtype":"m.emote"},"ts":1457643331000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in the spec","msgtype":"m.text"},"ts":1457643334000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Am I not following enough links or is XHTML parsing rather under-defined","msgtype":"m.text"},"ts":1457644283000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like where does it say for XHTML that <a> tags -> HTMLAnchorElement and such","msgtype":"m.text"},"ts":1457644293000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it's under-defined. there's no spec for how to turn an XML byte stream into a DOM at all.","msgtype":"m.text"},"ts":1457644563000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"flips some tables","msgtype":"m.emote"},"ts":1457644678000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"iirc there's Infoset that defines a mapping for the Infoset, but there's no explicit mapping between Infoset and DOM","msgtype":"m.text"},"ts":1457644791000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"fun fact: https://www.w3.org/TR/xml-stylesheet/ is defined in terms of Infoset","msgtype":"m.text"},"ts":1457644933000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: as is XPath and XSLT","msgtype":"m.text"},"ts":1457645161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Should a <picture> element display like an <img>? In that itâ€™s an inline element that behaves like an inline-block element?","msgtype":"m.text"},"ts":1457650324000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: no <picture> displays like a <span>","msgtype":"m.text"},"ts":1457650591000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it's the child <img> that shows the image","msgtype":"m.text"},"ts":1457650622000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"@zcorpan, this is the expected result? http://codepen.io/anon/pen/KzMmyX","msgtype":"m.text"},"ts":1457650740000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: yes","msgtype":"m.text"},"ts":1457650798000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JonathanNeal: you can style the <img> as usual","msgtype":"m.text"},"ts":1457650892000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"HTH","msgtype":"m.text"},"ts":1457650913000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"-> bed","msgtype":"m.emote"},"ts":1457650918000,"senderName":"zcorpan","senderId":"zcorpan@irc"}
]