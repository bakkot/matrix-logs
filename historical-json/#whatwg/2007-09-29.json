[
{"content":{"body":"what reasons?","msgtype":"m.text"},"ts":1191024000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, with non-xml you have to test for interop on the format parser itself as well, don't you?","msgtype":"m.text"},"ts":1191024001000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Gears already has a JSON format","msgtype":"m.text"},"ts":1191024002000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"and we don't really want to include an xml parser","msgtype":"m.text"},"ts":1191024003000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"if json doesn't have a way to add comments I think that's a big problem","msgtype":"m.text"},"ts":1191024004000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"true, it is lame","msgtype":"m.text"},"ts":1191024005000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"Dashiva: yeah but that becomes much easier, you don't have to test at the level of things like \"what happens when you have a dictionary and are expecting a string\" or \"what happens when you have an element in the wrong namespace\"","msgtype":"m.text"},"ts":1191024006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: that 'true' went to you","msgtype":"m.text"},"ts":1191024060000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"aa: roger that","msgtype":"m.text"},"ts":1191024061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"JSON is just a format, we could define a comment property","msgtype":"m.text"},"ts":1191024062000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: Not as convenient as being able to put it anywhere","msgtype":"m.text"},"ts":1191024063000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"like above an individual array entry or something","msgtype":"m.text"},"ts":1191024120000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"does JSON not allow /* ... */ comments?","msgtype":"m.text"},"ts":1191024121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think json should just allow js comments, but I don't think it currently does, technically","msgtype":"m.text"},"ts":1191024122000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"wonders how long until someone suggests JSON5","msgtype":"m.emote"},"ts":1191024123000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"othermaciej: json.org doesn't define any comment grammar at all","msgtype":"m.text"},"ts":1191024240000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"obviously we could just spec it in :)","msgtype":"m.text"},"ts":1191024241000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"by we, I mean hixie","msgtype":"m.text"},"ts":1191024242000,"senderName":"aa","senderId":"aa@irc"},
{"content":{"body":"oh yeah that'll go down REAL well","msgtype":"m.text"},"ts":1191024300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think changing the basic JSON serialization should be avoided","msgtype":"m.text"},"ts":1191024301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't think JSON is really that much better than XML","msgtype":"m.text"},"ts":1191024302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not for this, no","msgtype":"m.text"},"ts":1191024303000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it has all the same problems of needing all kinds of edge case definitions","msgtype":"m.text"},"ts":1191024360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What about SML?","msgtype":"m.text"},"ts":1191024540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"uri?","msgtype":"m.text"},"ts":1191024541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Wait, sdf","msgtype":"m.text"},"ts":1191024600000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"The one zcorpan was working on, http://simon.html5.org/specs/sdf","msgtype":"m.text"},"ts":1191024660000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"same problem as xml and json","msgtype":"m.text"},"ts":1191024661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the whole point is that we _don't_ want a syntax with arbitrary structure","msgtype":"m.text"},"ts":1191024662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since then you have to define and implement and test how to handle every single possible unexpected structure","msgtype":"m.text"},"ts":1191024663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That kinda limits the options quite a bit","msgtype":"m.text"},"ts":1191024780000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"bbiab, mtg","msgtype":"m.text"},"ts":1191024900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there any way to inform HTTP clients that the server accepts *inbound* gzip-compressed POST data?","msgtype":"m.text"},"ts":1191066060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"will clients go crazy if I use Accept-Encoding as a *response* header and write support for Content-Encoding as a *request* header?","msgtype":"m.text"},"ts":1191066120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: clients will ignore the accept-encoding header","msgtype":"m.text"},"ts":1191066360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"The form element has various attributes, but I'm not sure if any of them are able to do on-the-fly gzip","msgtype":"m.text"},"ts":1191066361000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: I'm mainly considering restful Web service clients","msgtype":"m.text"},"ts":1191066420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it appears that RFC 2616 allows Content-Encoding on Entities","msgtype":"m.text"},"ts":1191066480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i.e. both on response and request entities","msgtype":"m.text"},"ts":1191066481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"goes implement incoming gzip","msgtype":"m.emote"},"ts":1191066540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders why people make html versions of rfcs without hyperlinks","msgtype":"m.emote"},"ts":1191066541000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"If the content-coding of an entity in a request message is not acceptable to the origin server, the server SHOULD respond with a status code of 415 (Unsupported Media Type).\"","msgtype":"m.text"},"ts":1191066720000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Seems like you're expected to just try gzip and retry without if it fails on 415","msgtype":"m.text"},"ts":1191066721000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I want to get compression right in both directions before I start advertising the Web service facet of validator.nu","msgtype":"m.text"},"ts":1191066780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I can tell people from get-go that they can (should?) compress incoming stuff","msgtype":"m.text"},"ts":1191066781000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"incoming from my POV","msgtype":"m.text"},"ts":1191066782000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Do you want to disallow identity entirely?","msgtype":"m.text"},"ts":1191066840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"that would be extreme","msgtype":"m.text"},"ts":1191066841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I'll cross the bridge of banning uncompressed stuff if the bandwidth bill actually grows to be unmanageable","msgtype":"m.text"},"ts":1191066900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"of course, the joke will be on me if the service ends up being CPU-bound instead of bandwidth/IO-bound","msgtype":"m.text"},"ts":1191066960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Because if identity is allowed, and you mention gzip is encouraged in the docs, shouldn't that be enough to get people who are willing to do gzip to do it?","msgtype":"m.text"},"ts":1191066961000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: hopefully","msgtype":"m.text"},"ts":1191066962000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Can't really imagine a http client which supports automatic switching to gzip based on a non-documented header :)","msgtype":"m.text"},"ts":1191067020000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I need to post some sample code, too","msgtype":"m.text"},"ts":1191067021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has Xbox 360 fail","msgtype":"m.emote"},"ts":1191067260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"watches his productivity rise massively","msgtype":"m.emote"},"ts":1191067261000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm. hmm. the RFC is not too clear about the relationship of content-length and content-encoding","msgtype":"m.text"},"ts":1191068460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Does inbound compression make DOS attacks easier? Someone could send a low-bandwidth compressed stream that expands into a huger amount of data on the server and uses up lots of CPU time","msgtype":"m.text"},"ts":1191068820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: do you mean a specially-crafted Gzip-stream designed to just expand?","msgtype":"m.text"},"ts":1191068880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: it seems to me the same risk exists with compressed streams read using GET","msgtype":"m.text"},"ts":1191068881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how do browsers cope with that case?","msgtype":"m.text"},"ts":1191068940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Not necessarily specially-crafted - someone could just compress a gigabyte of space characters, transmit that (which is cheap for them), and your server would decompress and process it all (which is expensive for you)","msgtype":"m.text"},"ts":1191068941000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Browsers have observant users and a 'stop' button, whereas servers tend to blindly process whatever you send them","msgtype":"m.text"},"ts":1191069000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm. can a single read() from a GzipInputStream be worse that decompressing 32 KB of data? ","msgtype":"m.text"},"ts":1191069060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that is, if I put a watchdog stream wrapper between the decompression and the parser, am I safe?","msgtype":"m.text"},"ts":1191069120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"32 KB is the default gzip window, isn't it?","msgtype":"m.text"},"ts":1191069180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"am I right that Content-Length is the length of the compressed stream--not the length of the decompressed stream?","msgtype":"m.text"},"ts":1191069240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is unsure of how it works","msgtype":"m.emote"},"ts":1191069241000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has reverse-engineered that yet","msgtype":"m.emote"},"ts":1191069360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I can say it is not what is defined in RFC2616, though","msgtype":"m.text"},"ts":1191069361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It says \"transfer-length\", seems clear to me","msgtype":"m.text"},"ts":1191069362000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"But there again, a lot of RFC2616 isn't actually what things are done","msgtype":"m.text"},"ts":1191069420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hmm, no... tricky stuff this","msgtype":"m.text"},"ts":1191069540000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"content-length is the entity-length if there is no transfer-encoding. The entity-length is the length of the entity-body. The entity-body includes content-encoding.","msgtype":"m.text"},"ts":1191069840000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"moreover, transfer-encoding and content-encoding are different beast with potentially same values","msgtype":"m.text"},"ts":1191069900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think I sort of grok content-encoding where there are no byte ranges involved","msgtype":"m.text"},"ts":1191069960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well, if you use transfer-encoding it says to not use content-length at all. Not sure if that's how it works in practice, but still","msgtype":"m.text"},"ts":1191069961000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"is Opera the only browser to not download <img style=\"display:none\" src=\"test.gif\">?","msgtype":"m.text"},"ts":1191069962000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1191070020000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Let's find out","msgtype":"m.text"},"ts":1191070021000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"is non-chunked transfer-encoding used in the real world?","msgtype":"m.text"},"ts":1191070080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Both FF2 and IE7 downloaded the image","msgtype":"m.text"},"ts":1191070380000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"If you do <object data=\"test.svg\"><img src=\"test.png\"></object> then FF2 downloads both files and Opera only downloads the .svg, if I remember correctly","msgtype":"m.text"},"ts":1191070560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.aerasec.de/security/advisories/decompression-bomb-vulnerability.html","msgtype":"m.text"},"ts":1191070680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Dashiva: you sure?","msgtype":"m.text"},"ts":1191070681000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Apache logs do not lie (I hope)","msgtype":"m.text"},"ts":1191070740000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"They do! :)","msgtype":"m.text"},"ts":1191070741000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1191070742000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"I tested it with background images","msgtype":"m.text"},"ts":1191070743000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Those aren't downloaded for elements with display: none","msgtype":"m.text"},"ts":1191070744000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Or for :hover states","msgtype":"m.text"},"ts":1191070745000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"I could venture a guess, the img tag is recognized and starts downloading before the inline style is applied","msgtype":"m.text"},"ts":1191070800000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Background image is not recognized as such until styling is applied","msgtype":"m.text"},"ts":1191070801000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"That's probably it","msgtype":"m.text"},"ts":1191070802000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Background images with visibility: hidden are downloaded though","msgtype":"m.text"},"ts":1191070803000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"hsivonen: http://simon.html5.org/temp/validator.nu/Validator.nu.htm","msgtype":"m.text"},"ts":1191071040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: why am I getting an IO Error: Circular redirect to ..","msgtype":"m.text"},"ts":1191071220000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"For a page that can be viewed in a browser","msgtype":"m.text"},"ts":1191071280000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"hsivonen: although the file upload label doesn't seem to focus the \"file\" field in firefox :|","msgtype":"m.text"},"ts":1191071281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thank you","msgtype":"m.text"},"ts":1191071520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"krijnh: URL?","msgtype":"m.text"},"ts":1191071521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.toernooi.nl/sport/teammatches.aspx?id=17064&tid=191","msgtype":"m.text"},"ts":1191071522000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"It's a weird site","msgtype":"m.text"},"ts":1191071523000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: might have something to do with their cookie behavior","msgtype":"m.text"},"ts":1191071640000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"If you disable cookies, you get back a really weird URL","msgtype":"m.text"},"ts":1191071760000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"yes, but still not circular","msgtype":"m.text"},"ts":1191071820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wonder if Commons HttpClient is so aggressive with circularity that it ignores the query string","msgtype":"m.text"},"ts":1191071821000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Damnit, we really want to parse this site :)","msgtype":"m.text"},"ts":1191071880000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"hmm, doesn't tabindex on <label> work in ie/firefox?","msgtype":"m.text"},"ts":1191072000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm experiencing the jar version of dll hell when trying to debug :-(","msgtype":"m.text"},"ts":1191072060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i can't get keyboard nav work in ie or firefox","msgtype":"m.text"},"ts":1191072180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"s/work/to work/","msgtype":"m.text"},"ts":1191072181000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"perhaps it's better to add radio buttons after all","msgtype":"m.text"},"ts":1191072240000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: there, that works better, although it doesn't boot correctly in ie for some reason","msgtype":"m.text"},"ts":1191073140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: ie barks at \"n.disabled = false\" in toggleParsers()","msgtype":"m.text"},"ts":1191073620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"krijnh: I suspect this is the problem: http://jakarta.apache.org/httpcomponents/httpclient-3.x//xref/org/apache/commons/httpclient/HttpMethodDirector.html#630","msgtype":"m.text"},"ts":1191073980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: also, ie doesn't seem to uncheck the other radio buttons for some reason","msgtype":"m.text"},"ts":1191074100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: is that a bug?","msgtype":"m.text"},"ts":1191074101000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Or just bad behavior of that site?","msgtype":"m.text"},"ts":1191074160000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: bad behavior of site coupled with over-eager counter-measures","msgtype":"m.text"},"ts":1191074220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Bah","msgtype":"m.text"},"ts":1191074340000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"tries to loosen the counter-measures","msgtype":"m.emote"},"ts":1191074341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Too bad that's the only site where results are posted :/","msgtype":"m.text"},"ts":1191074342000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: fixed","msgtype":"m.text"},"ts":1191075180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Cool, thanks :)","msgtype":"m.text"},"ts":1191075240000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"it took me like 3 tries to stick the params in the right place. Commons HttpClient has a zilloin places you can stick params into","msgtype":"m.text"},"ts":1191075300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: What's a good entry point if you're not into HTML5, but you just want to use your parser in a Java project?","msgtype":"m.text"},"ts":1191075660000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"http://about.validator.nu/htmlparser/ I guess :)","msgtype":"m.text"},"ts":1191075960000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"With that parser, I found it pretty straightforward to set up the libraries and get it to parse a document into a DOM, so it seems to work fine :-)","msgtype":"m.text"},"ts":1191076080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"krijnh: I suggest you check out how I instantiate the parser in XSLT4HTML5 (bundled sample)","msgtype":"m.text"},"ts":1191076260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not into Java","msgtype":"m.text"},"ts":1191076261000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"Somebody else is going to try it out","msgtype":"m.text"},"ts":1191076262000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"I hope :)","msgtype":"m.text"},"ts":1191076320000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: do you want DOM, XOM or SAX?","msgtype":"m.text"},"ts":1191076321000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I really have no idea","msgtype":"m.text"},"ts":1191076322000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: streaming or tree?","msgtype":"m.text"},"ts":1191076323000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"We were talking about fetching results from a website, and now I'm pointing him to your library","msgtype":"m.text"},"ts":1191076324000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh: well, if the wants DOM, he should do  new HtmlDocumentBuilder(XmlViolationPolicy.ALTER_INFOSET);","msgtype":"m.text"},"ts":1191076380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and then proceed the same way as with an XML DocumentBuilder instance","msgtype":"m.text"},"ts":1191076381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if he wants SAX, he should do new HtmlParser(XmlViolationPolicy.ALTER_INFOSET); and proceed as with a usual XMLReader instance","msgtype":"m.text"},"ts":1191076440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if he wants XOM, he should do new HtmlBuilder(XmlViolationPolicy.ALTER_INFOSET); and proceed as with a usual XOM Builder instance","msgtype":"m.text"},"ts":1191076500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"familiarity with one of DOM, XOM or SAX in a prerequisite","msgtype":"m.text"},"ts":1191076501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"was unfamiliar with all of those but just made it up as he went along and it kind of worked","msgtype":"m.emote"},"ts":1191076560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Well, I suppose I had some familiarity with the JS DOM, and the Java version is basically the same except it takes four method calls to set an attribute (as far as I can see))","msgtype":"m.text"},"ts":1191076680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: elem.setAttribute(\"foo\", \"bar\");","msgtype":"m.text"},"ts":1191076740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Hmm","msgtype":"m.text"},"ts":1191076860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, it's because I was using Node instead of Element, and Node doesn't have setAttribute","msgtype":"m.text"},"ts":1191076861000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"... and I was using Node because stuff like getElementsByTagName returns a NodeList","msgtype":"m.text"},"ts":1191076920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Yeah, that one's a bit silly, there is no ElementList","msgtype":"m.text"},"ts":1191076980000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`: the interface hierarchy of DOM sucks big time with strongly-typed languages","msgtype":"m.text"},"ts":1191076981000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I guess I can cast things to Element, but casting always feels a little dirty and unsafe","msgtype":"m.text"},"ts":1191076982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Just check nodeType (or instanceof) and you're safe enough","msgtype":"m.text"},"ts":1191076983000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Sounds reasonable","msgtype":"m.text"},"ts":1191077100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Too lazy to fix my code now, though :-p","msgtype":"m.text"},"ts":1191077160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it would be interesting to know if which one is faster: instanceof followed by cast or nodeType followed by cast","msgtype":"m.text"},"ts":1191077161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'd expect instanceof to be slower than nodeType, but then I'd expect HotSpot to perform less expensive cast operations if it can prove that instanceof was just tested","msgtype":"m.text"},"ts":1191077220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when I wrote my own XML tree API, I hoisted all methods to the top of the hierarchy to avoid casts when traversing","msgtype":"m.text"},"ts":1191077520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does IE parse and apply the contents of <style> elements inserted to the DOM via script after onload has long since been fired?","msgtype":"m.text"},"ts":1191086220000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"more to the point: what's the best practice for introducing and later removing a class selector-based style rule?","msgtype":"m.text"},"ts":1191086340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"or changing the class selector on a single rule_","msgtype":"m.text"},"ts":1191086341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1191086342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://developer.mozilla.org/en/docs/DOM:style Do Opera and WebKit support that stuff?","msgtype":"m.text"},"ts":1191087240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is there some perf badness if I modify the first rule? should I make sure to modify the last rule to avoid recascade?","msgtype":"m.text"},"ts":1191087480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: whole-line messages now highlight the associated line as a whole","msgtype":"m.text"},"ts":1191088560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: cool","msgtype":"m.text"},"ts":1191089820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: in the case of direct input, i guess you could default to using the html parser if the user didn't choose","msgtype":"m.text"},"ts":1191089821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok","msgtype":"m.text"},"ts":1191089880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: is the whole-line highlighting deployed? i don't see it","msgtype":"m.text"},"ts":1191089940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: http://validator.nu/?doc=http%3A%2F%2Fwww.accessifyforum.com%2F&showsource=yes#l151","msgtype":"m.text"},"ts":1191090000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: please reload css","msgtype":"m.text"},"ts":1191090001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ah","msgtype":"m.text"},"ts":1191090002000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"sorry :)","msgtype":"m.text"},"ts":1191090003000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"grumbles that different people are on #what-wg and #html-wg","msgtype":"m.emote"},"ts":1191090240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does anyone have a good use case for tables with no headers?","msgtype":"m.text"},"ts":1191090241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: sidebars","msgtype":"m.text"},"ts":1191090420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hides","msgtype":"m.emote"},"ts":1191090421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: form grid layout","msgtype":"m.text"},"ts":1191090480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: genealogical table","msgtype":"m.text"},"ts":1191090481000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: http://www.quirksmode.org/dom/changess.html","msgtype":"m.text"},"ts":1191090960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: an idea: have the error message as title=\"\" in the show source. would that be possible?","msgtype":"m.text"},"ts":1191091320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1191091380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: possible but hard","msgtype":"m.text"},"ts":1191091381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: there can be more than one message per position.","msgtype":"m.text"},"ts":1191091440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: true","msgtype":"m.text"},"ts":1191091500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I wonder if doing some fancy JS backlinking would be smarter than putting a lot of content in attributes","msgtype":"m.text"},"ts":1191091501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"perhaps","msgtype":"m.text"},"ts":1191091502000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Make an error attribute as a comma-separated list of errors, and put all the errors in an array somewhere. Use JS to build tooltips or whatnot from it.","msgtype":"m.text"},"ts":1191091560000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"^ Something like that?","msgtype":"m.text"},"ts":1191091561000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: I was thinking of augmenting the highlight element DOM nodes with an array or references to the list item DOM nodes in the message list and doing fake tooltips as divs","msgtype":"m.text"},"ts":1191091620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Ignoring the tables for layout cases (which we'll temporarily pretend are obviously bad) what does a genealogical table look like?","msgtype":"m.text"},"ts":1191092580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, sorry, that was zcorpan","msgtype":"m.text"},"ts":1191092700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: http://www.pointerklubben.se/stamtavla.asp?Id=S35236/97","msgtype":"m.text"},"ts":1191092940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. I think that's not really a table but I'm not sure how one could do better","msgtype":"m.text"},"ts":1191093060000,"senderName":"jgraham","senderId":"jgraham@irc"}
]