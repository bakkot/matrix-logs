[
{"content":{"body":"JakeA: (and others interested in better defining storage APIs) https://github.com/whatwg/storage/issues/18#issuecomment-614751336","msgtype":"m.text"},"ts":1587053839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, I just noticed that `customElements.whenDefined(node.nodeName)` seems invalid in both Firefox and Chrome due to `nodeName` using uppercase letters","msgtype":"m.text"},"ts":1587055049000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"is that intentional? I couldn't find any details on name restrictions other than hyphenation","msgtype":"m.text"},"ts":1587055071000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"FND: looks intentional and makes some sense given XML","msgtype":"m.text"},"ts":1587055125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FND: you could do node.localName","msgtype":"m.text"},"ts":1587055131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MDN says use of localName is discouraged?","msgtype":"m.text"},"ts":1587055235000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"(I'm an old-man wannabe, so quirksmode.org has ingrained `nodeName` in my mind)","msgtype":"m.text"},"ts":1587055237000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"but I could easily go with `.toLowerCase()`, I was just wondering why custom elements make this distinction when AFAIK other DOM APIs are case-insensitive","msgtype":"m.text"},"ts":1587055264000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"Wow, MDN is very wrong","msgtype":"m.text"},"ts":1587055611000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"localName is encouraged, nodeName is discouraged","msgtype":"m.text"},"ts":1587055620000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"FND: MDN is misguided then... (toLowerCase() is fraught and might do the wrong thing for non-ASCII code points)","msgtype":"m.text"},"ts":1587055640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see anything in https://developer.mozilla.org/en-US/docs/Web/API/Element/localName","msgtype":"m.text"},"ts":1587055651000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah, I was looking at Node.localName, not Element.localName","msgtype":"m.text"},"ts":1587055677000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"https://developer.mozilla.org/en-US/docs/Web/API/Node/localName","msgtype":"m.text"},"ts":1587055677000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"Hmm, I see, that's confusing... but I'm not sure what to concretely suggest MDN do","msgtype":"m.text"},"ts":1587055708000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, the Node vs. Element thing is often confusing...","msgtype":"m.text"},"ts":1587055727000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"anyway, TIL localName is preferred - thanks!","msgtype":"m.text"},"ts":1587055755000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"yet my original puzzlement remains: why is the custom-elements API case-sensitive? am I wrong in thinking all/most other DOM APIs are case-insensitive?","msgtype":"m.text"},"ts":1587055820000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"FND: a lot are ASCII case-insensitive sometimes, with newer APIs we try to be a bit stricter so there's less of a difference between HTML and XML documents","msgtype":"m.text"},"ts":1587055884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FND: as the core model is very much case-sensitive","msgtype":"m.text"},"ts":1587055910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roger, good to know - and yeah, ASCII assumptions is a good point","msgtype":"m.text"},"ts":1587055948000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"jobs","msgtype":"m.text"},"ts":1587056226000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"fg","msgtype":"m.text"},"ts":1587056240000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"oops, sorry","msgtype":"m.text"},"ts":1587056262000,"senderName":"FND","senderId":"FND@irc"},
{"content":{"body":"So there's an open question which is kind of interesting","msgtype":"m.text"},"ts":1587073920000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"If a web notification is spawned with a body of \"text <b>foo</b> bar\"","msgtype":"m.text"},"ts":1587073943000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"Should the browser escape this, or not?","msgtype":"m.text"},"ts":1587073950000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"Firefox doesn't escape it on certain platforms, leading to the body text being interpreted as markup by the system notifications","msgtype":"m.text"},"ts":1587073976000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"Chrome always escapes it, and on Windows also all browsers escape it","msgtype":"m.text"},"ts":1587073990000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"Leading to a handful of edge cases where it becomes \"text foo bar\" instead of \"text <b>foo</b> bar\"","msgtype":"m.text"},"ts":1587074023000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"In this case it's interesting because a notification with a body containing \"<\" led to the second half of the body disappearing, due to the native notification system interpreting it as malformed markup","msgtype":"m.text"},"ts":1587074068000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"Is this a bug in Firefox or the webapp?","msgtype":"m.text"},"ts":1587074084000,"senderName":"justJanne","senderId":"justJanne@irc"},
{"content":{"body":"justJanne: I'm not entirely sure about the escaping part, but I do know that afaik web notifications do require that notifications can be rendered as plain text, so it's definitely true that it can't require HTML-escaped input in a way that promises to render them. The question is, how can you tell the browser that is already plain text or that it's marked up with HTML the browser shoudl strip if needed.","msgtype":"m.text"},"ts":1587075130000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"from looking at the spec, I see no mention of HTML support. so I would guess it is meant to be plain text, there is no markup support beyond that \"title\" and \"icon\" stand separate from \"body\" (often with title being bold).","msgtype":"m.text"},"ts":1587075275000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"and given no primitive in the browser for easily escaping plain text, I imagine it's not intended that developers escape it themselves","msgtype":"m.text"},"ts":1587075306000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Probably a bug in firefox on non-Windows then?","msgtype":"m.text"},"ts":1587075373000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"OK, the spec mentions \\n as being a paragraph boundary, so yeah, definitely plain text and not HTML.","msgtype":"m.text"},"ts":1587075450000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Ugh, \"plain text only\" is discriminatory against languages that need some degree of markup. Common English-speaking programmer mistake, tho.","msgtype":"m.text"},"ts":1587078071000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]