[
{"content":{"body":"terinjokes: which tweet?","msgtype":"m.text"},"ts":1430444150000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: for stuff like Encoding it still says \"16 September 2014. CR.\"","msgtype":"m.text"},"ts":1430456568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hi annevk!","msgtype":"m.text"},"ts":1430457948000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: back in London?","msgtype":"m.text"},"ts":1430457953000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I'm based in Switzerland these days, but yeah :-)","msgtype":"m.text"},"ts":1430457966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: haven't read the latest batch of emails yet","msgtype":"m.text"},"ts":1430457984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: re superclass/subclass list, it seems only 3 has API implications","msgtype":"m.text"},"ts":1430458136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: well, 1/2 need some consideration as well, e.g. how to replace the shadow tree","msgtype":"m.text"},"ts":1430458153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, okay.","msgtype":"m.text"},"ts":1430458449000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ah, okay. is there a spec out for it, or has it just been discussed?","msgtype":"m.text"},"ts":1430458449000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"rniwa: hmm and seems the other thread didn't progress much","msgtype":"m.text"},"ts":1430458495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so i think replacing an existing shadow root is probably best done by attaching a new shadow root.","msgtype":"m.text"},"ts":1430458496000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: yeah..","msgtype":"m.text"},"ts":1430458507000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I'm meeting with dglazkov tomorrow to discuss it","msgtype":"m.text"},"ts":1430458516000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: and not forwarding anything?","msgtype":"m.text"},"ts":1430458524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1430458532000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: i think the simplest one is to simply detach the old one","msgtype":"m.text"},"ts":1430458544000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sure, if you can detach and add that works too","msgtype":"m.text"},"ts":1430458565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but that may have some weird implications like offsetTop, etc... being broken inside superclasss","msgtype":"m.text"},"ts":1430458571000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"though it's a bit unclear how that works with closed/isolated","msgtype":"m.text"},"ts":1430458592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right.","msgtype":"m.text"},"ts":1430458598000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I'm not certain if it makes sense to support inheritance in isolated case though","msgtype":"m.text"},"ts":1430458616000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I can't think of a use case in which you want to do an inhertiance between mutually distrusting parties","msgtype":"m.text"},"ts":1430458628000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I think the only reasonable option for the API btw is my gist + nanotask mutation observers, unless we come up with something completely novel","msgtype":"m.text"},"ts":1430458628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, i think there are different trade offs as i outlined in the md/thread","msgtype":"m.text"},"ts":1430458652000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: btw, https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Imperative-API-for-Node-Distribution-in-Shadow-DOM.md","msgtype":"m.text"},"ts":1430458668000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that md is quite confusing","msgtype":"m.text"},"ts":1430458675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what i'm saying that there are two basic approaches to the problem","msgtype":"m.text"},"ts":1430458688000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"one is what you described in your gist","msgtype":"m.text"},"ts":1430458696000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"which is what we discussed at dinner","msgtype":"m.text"},"ts":1430458701000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: we natively support redistributions","msgtype":"m.text"},"ts":1430458711000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: what I then realized is that we don't really have a need for *selective* redistributions in nested shadow DOM case","msgtype":"m.text"},"ts":1430458734000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if you don't it starts mattering where you put your host element though, right?","msgtype":"m.text"},"ts":1430458749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean by that?","msgtype":"m.text"},"ts":1430458766000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if redistribution is not a feature, your component may not work if someone put it inside a shadow tree","msgtype":"m.text"},"ts":1430458788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it'll work just fine","msgtype":"m.text"},"ts":1430458801000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: only thing we can't do is selecting distributed nodes using a different criteria than the one insertion point used","msgtype":"m.text"},"ts":1430458828000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: hmm, I need some IDL for that proposal","msgtype":"m.text"},"ts":1430458837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: say you have <content select=\"blah\"> in your shadow DOM","msgtype":"m.text"},"ts":1430458853000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: we need redistribution only if you wanted to re-distribute a strict subset that's not identically equal to the set of nodes distributed to that content eleemnt","msgtype":"m.text"},"ts":1430458888000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: if you either always redistribute everything <content select=\"blah\"> got or none, then we don't need redistribution mechanism","msgtype":"m.text"},"ts":1430458916000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: you just redistribute the entire content element or don't do it at all.","msgtype":"m.text"},"ts":1430458926000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(now i do see that we might be digging a rabbit hole if we went with more sync API that doesn't natively support redistribution because it's like we're re-introducing mutation events in some way, and some frameworks might decide to implement the full redistribution algorithm anyway, which will be horrific. furthermore, requiring sync redistribution might be an anti-pattern to begin with... it's like interleaving offsetLeft access with DOM mutations...)","msgtype":"m.text"},"ts":1430459075000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think distribution will have to be sync either way","msgtype":"m.text"},"ts":1430459113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean propagating redistributions?","msgtype":"m.text"},"ts":1430459128000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"So in #1 you'd just observe the children of the host element, enumerate them and then distribute them","msgtype":"m.text"},"ts":1430459262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I just don't see how you don't always need to observe the <content> element...","msgtype":"m.text"},"ts":1430459307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. if in your shadow tree you have <host><content select=\"header, content, footer\"/></host> or some such","msgtype":"m.text"},"ts":1430459352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess you could split up the <content> elements, but then we'd be dictating API","msgtype":"m.text"},"ts":1430459379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, i think the way you'd do it is to split content elements.","msgtype":"m.text"},"ts":1430459402000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: in the world of named slots, that's what you'd do","msgtype":"m.text"},"ts":1430459416000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: and libraries/frameworks could add a sugar on top of it","msgtype":"m.text"},"ts":1430459429000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: if we didn't need redistributions, it dramatically simplifies a lot of things.","msgtype":"m.text"},"ts":1430459453000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: it's worth considering it.","msgtype":"m.text"},"ts":1430459465000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"well I'm not quite sure why we don't need it","msgtype":"m.text"},"ts":1430459557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how do we know what <content> element to pick?","msgtype":"m.text"},"ts":1430459567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that is, how does \"redistribute everything\" work, as you call it","msgtype":"m.text"},"ts":1430459616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you pick whichever content element that fits your criteria","msgtype":"m.text"},"ts":1430459634000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: in the case of <host><content select=\"header, content, footer\"/></host>","msgtype":"m.text"},"ts":1430459642000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"you know that <host> needs header, content, and footer, so you just define those","msgtype":"m.text"},"ts":1430459657000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"e.g.","msgtype":"m.text"},"ts":1430459658000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"<host><content class=\"header\" select=\".header header\"/><content class=\"content\" select=\".content content\"/><content class=\"footer\" select=\". footer footer\"/></host>","msgtype":"m.text"},"ts":1430459682000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: conceptually, <host> grabs header, content, footer, right?","msgtype":"m.text"},"ts":1430459711000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: so in order to use that element, you have to supply those elements.","msgtype":"m.text"},"ts":1430459730000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: it doesn't matter whether what you have is a content element or a regular element","msgtype":"m.text"},"ts":1430459747000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1430459773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i certainly wouldn't argue this is more developer friendly but there's a lot of appeal for the simplicity","msgtype":"m.text"},"ts":1430459799000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's deadly clear what one has to do to use an element","msgtype":"m.text"},"ts":1430459838000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Does this also mean <content> elements no longer have to be descendants?","msgtype":"m.text"},"ts":1430459885000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess there never was that restriction","msgtype":"m.text"},"ts":1430459897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean by that?","msgtype":"m.text"},"ts":1430459909000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Never mind, I was confused","msgtype":"m.text"},"ts":1430459915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the nice thing about this model is that we no longer need to propagate anything from one shadow DOM to another","msgtype":"m.text"},"ts":1430459938000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"you just distribute per shadow DOM and done!","msgtype":"m.text"},"ts":1430459947000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"And authors will have to monitor DOM + <content> and distribute based on that?","msgtype":"m.text"},"ts":1430459983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's also somewhat worse about this is that there's no explicit opt-in so the switch to purely declarative has to be different","msgtype":"m.text"},"ts":1430460041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why would you monitor content element?","msgtype":"m.text"},"ts":1430460159000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"for redistribution?","msgtype":"m.text"},"ts":1430460176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but why would you need redistribution for?","msgtype":"m.text"},"ts":1430460187000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: if you did <host><content class=\"header\" select=\".header header\"/><content class=\"content\" select=\".content content\"/><content class=\"footer\" select=\". footer footer\"/></host>","msgtype":"m.text"},"ts":1430460220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it'll distribute just as well as <host><header>~</header><main class=\"content\"></main><footer></footer></host>","msgtype":"m.text"},"ts":1430460258000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"<host><'shadow'> text <div><content/></div> <host2><content/></host2> </'shadow'></host>","msgtype":"m.text"},"ts":1430460279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so you don't need to inspect content element at all. just distribute a content element like any other element and you'll be fine","msgtype":"m.text"},"ts":1430460279000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"<host2>'s shadow will have to monitor changes to <host2>'s <content> child","msgtype":"m.text"},"ts":1430460302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how does host2 distribute nodes?","msgtype":"m.text"},"ts":1430460328000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: i.e. what are insertion points and their criteria for selecting nodes?","msgtype":"m.text"},"ts":1430460342000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that's up to <host2>","msgtype":"m.text"},"ts":1430460348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, we need to know in order for this model to work.","msgtype":"m.text"},"ts":1430460371000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: in the world without redistributions, you need to be deadly aware of what gets used by each custom element","msgtype":"m.text"},"ts":1430460396000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: and supply those explicitly","msgtype":"m.text"},"ts":1430460402000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: so if host2 needs a header and footer, then you have to define content elements yourself and supply those","msgtype":"m.text"},"ts":1430460423000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and the browser magically knows what nodes are linked?","msgtype":"m.text"},"ts":1430460450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we don't have to","msgtype":"m.text"},"ts":1430460458000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: author will create <content> elements as needed for host2","msgtype":"m.text"},"ts":1430460476000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: so all we need to do in the first shadow DOM is to grab contents into each content element","msgtype":"m.text"},"ts":1430460492000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"how will those elements end up correctly within host2's shadow though?","msgtype":"m.text"},"ts":1430460495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: host2 then come in and grab those content elements in turn","msgtype":"m.text"},"ts":1430460502000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"doesn't it have to monitor changes for that?","msgtype":"m.text"},"ts":1430460515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because content elements in host1 will themselves be distributed into insertion points inside host2","msgtype":"m.text"},"ts":1430460520000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: not really, it just needs to monitor direct children of <host2> which are <content> elements","msgtype":"m.text"},"ts":1430460542000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: <host2> will grab each <content> element into its own insertion points as they fit their criteria","msgtype":"m.text"},"ts":1430460563000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I don't really follow how this actually works I think","msgtype":"m.text"},"ts":1430460617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay","msgtype":"m.text"},"ts":1430460621000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: how does it grab, based on what?","msgtype":"m.text"},"ts":1430460623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: and what does the browser need to monitor?","msgtype":"m.text"},"ts":1430460635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the browser only monitors direct child of <host1> and <host2>","msgtype":"m.text"},"ts":1430460651000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: it seems like the md could use some additional text to explain this","msgtype":"m.text"},"ts":1430460655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah... indeed","msgtype":"m.text"},"ts":1430460663000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i guess this idea isn't clear as it is to me...","msgtype":"m.text"},"ts":1430460672000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: first, <host1> decides to distribute nodes into its own insertion points including ones that are under <host2>","msgtype":"m.text"},"ts":1430460722000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: <host2> some time later or earlier will distribute its direct children into its own insertion points","msgtype":"m.text"},"ts":1430460750000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right, all <content> in <host1>'s shadow are its insertion point","msgtype":"m.text"},"ts":1430460754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it just so happens that <host2>'s direct children are <content> of <host1>","msgtype":"m.text"},"ts":1430460767000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"oh right","msgtype":"m.text"},"ts":1430460791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because <host2> distributed <content> elements in <host1>'s shadow DOM into its insertion points","msgtype":"m.text"},"ts":1430460803000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"you don't distribute children of <content>, you distribute <content>","msgtype":"m.text"},"ts":1430460805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay I see now","msgtype":"m.text"},"ts":1430460810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right!","msgtype":"m.text"},"ts":1430460812000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sorry, i'm not great at explaining these things :(","msgtype":"m.text"},"ts":1430460851000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I wonder if that's problematic for components that are almost the entire page","msgtype":"m.text"},"ts":1430460868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You might get to a point where there's too much <content> elements, but I guess it's worth studying what is out there","msgtype":"m.text"},"ts":1430460889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that's one problem I can see as well","msgtype":"m.text"},"ts":1430460930000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: but the model is so much simpler it's quite appealing.","msgtype":"m.text"},"ts":1430460938000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: if anything, frameworks can (or we can) add some sugars to make things easier.","msgtype":"m.text"},"ts":1430460954000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"we have those components in Firefox OS","msgtype":"m.text"},"ts":1430460982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ?","msgtype":"m.text"},"ts":1430460993000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: it would certainly be useful if you can point to a use case in which this model breaks down.","msgtype":"m.text"},"ts":1430461025000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: would have to ask Wilson, I'm not super familiar","msgtype":"m.text"},"ts":1430461148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay","msgtype":"m.text"},"ts":1430461162000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: but now I understand it that'll be easier","msgtype":"m.text"},"ts":1430461177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay","msgtype":"m.text"},"ts":1430461185000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: please feel free to edit / add comment to markdown file","msgtype":"m.text"},"ts":1430461197000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: i'm sure you can do a better job of explaining it at this point.","msgtype":"m.text"},"ts":1430461209000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"or at least point out parts that are confusing","msgtype":"m.text"},"ts":1430461220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah, I'll try to provide a PR","msgtype":"m.text"},"ts":1430462227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I want to update #2 too","msgtype":"m.text"},"ts":1430462251000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1430462266000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"wonders if anyone knows the full name of https://github.com/davidsgrogan","msgtype":"m.emote"},"ts":1430462582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean his IRC nick?","msgtype":"m.text"},"ts":1430462768000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I need to add him to the Acknowledgments section","msgtype":"m.text"},"ts":1430462796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: David Grogan","msgtype":"m.text"},"ts":1430462809000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1430462814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: btw, with respect to extensions to custom elements","msgtype":"m.text"},"ts":1430462919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: I think my preference would be \"nanotask\" mutation observers; mutation observers that fire after a method has returned","msgtype":"m.text"},"ts":1430462950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: e.g. appendChild(obj); /* fire mutation observers for appending (and potentially removing if obj was elsewhere in the tree) */","msgtype":"m.text"},"ts":1430462988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: but as a general extension to mutation observers rather than something specific for custom elements","msgtype":"m.text"},"ts":1430463026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh i see","msgtype":"m.text"},"ts":1430463046000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: yeah, i think extending mutation observers will be better than adding an ad-hoc custom only callback mechanism","msgtype":"m.text"},"ts":1430463074000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I guess I can add that as alternative too","msgtype":"m.text"},"ts":1430463158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we want to keep all proposals in this md","msgtype":"m.text"},"ts":1430463168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's a section about adding a callback","msgtype":"m.text"},"ts":1430463176000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: to custom elements so you probably want to add there","msgtype":"m.text"},"ts":1430463186000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah there's Extention to Custom Elements for Consistency with 1/2","msgtype":"m.text"},"ts":1430463209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1430463215000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but this is really an alternative to that whole section","msgtype":"m.text"},"ts":1430463218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I could rename the section and make it work","msgtype":"m.text"},"ts":1430463230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: whichever you'd prefer","msgtype":"m.text"},"ts":1430463257000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: still awake?","msgtype":"m.text"},"ts":1430464153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: rewriting now... what did you mean with \"of the shadow host of the ancestor shadow root of containt or if index is larger than the length of distributedNodes\"?","msgtype":"m.text"},"ts":1430464165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, debugging some editing bug as we speak","msgtype":"m.text"},"ts":1430464167000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: containt -> content?","msgtype":"m.text"},"ts":1430464179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, right.","msgtype":"m.text"},"ts":1430464190000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: what I meant is that a node can only be distributed to an insertion point which exists in a shadow DOM of its ancestor","msgtype":"m.text"},"ts":1430464213000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"not parent?","msgtype":"m.text"},"ts":1430464231000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: or shadow DOMs inside of them","msgtype":"m.text"},"ts":1430464233000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"of the shadow host of the ancestor shadow root\" should that be /or/ the ancestor...?","msgtype":"m.text"},"ts":1430464277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, i wanted to be permissive because there was a use case like table-chart element where being able to distribute non-direct child is desirable","msgtype":"m.text"},"ts":1430464277000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: well, things need to be backwards in this case","msgtype":"m.text"},"ts":1430464341000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: for a given node to be distributable to a an insertion point","msgtype":"m.text"},"ts":1430464385000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the shadow root of that insertion point needs to be an ancestor of the node to be distributed","msgtype":"m.text"},"ts":1430464422000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: maybe you can just remove that whole sentence and rewrite it","msgtype":"m.text"},"ts":1430464431000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: it's probably better to say just that instead of what's in the md","msgtype":"m.text"},"ts":1430464451000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: https://github.com/w3c/webcomponents/pull/45","msgtype":"m.text"},"ts":1430466058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: you can view it at https://github.com/annevk/webcomponents/blob/patch-1/proposals/Imperative-API-for-Node-Distribution-in-Shadow-DOM.md for now","msgtype":"m.text"},"ts":1430466107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dglazkov: if you're still awake ^^","msgtype":"m.text"},"ts":1430466208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks!","msgtype":"m.text"},"ts":1430466458000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: dglazkov is a morning person as far as I know.","msgtype":"m.text"},"ts":1430466481000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"having kids does that to you","msgtype":"m.text"},"ts":1430466506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is definitely not a morning person","msgtype":"m.emote"},"ts":1430466508000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: that might be reason for me not to have kids..","msgtype":"m.text"},"ts":1430466523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: merged!","msgtype":"m.text"},"ts":1430466569000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: wow, what happened to the table-chart example","msgtype":"m.text"},"ts":1430466659000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that was already like that","msgtype":"m.text"},"ts":1430466681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1430466686000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"fixes","msgtype":"m.emote"},"ts":1430466688000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: something happened to the Unicode when you copied it...","msgtype":"m.text"},"ts":1430466696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/w3c/webcomponents/pull/46","msgtype":"m.text"},"ts":1430466879000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: looks good but I can't merge","msgtype":"m.text"},"ts":1430466932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I guess I should do that internal links thing... using spec=html makes origin point to concept-url-origin, which is really a term from URL that HTML happens to import","msgtype":"m.text"},"ts":1430467024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh you don't have write access?","msgtype":"m.text"},"ts":1430467071000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: nope","msgtype":"m.text"},"ts":1430467075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: could you add annevk to https://github.com/orgs/w3c/teams/webapps ?","msgtype":"m.text"},"ts":1430467151000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yeah will do right now","msgtype":"m.text"},"ts":1430468456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"できた rniwa","msgtype":"m.text"},"ts":1430468548000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1430468713000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: ^","msgtype":"m.text"},"ts":1430468725000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sorry, gtg sleep now :(","msgtype":"m.text"},"ts":1430468946000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ttyl guys all!","msgtype":"m.text"},"ts":1430468953000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1430472355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks MikeSmith","msgtype":"m.text"},"ts":1430472360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1430472379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://storage.spec.whatwg.org/","msgtype":"m.text"},"ts":1430477871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems I need to read the Bikeshed docs another time to figure out linking from IDL to definitions...","msgtype":"m.text"},"ts":1430478042000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: while setting that up I was reminded that mediasession probably wants a Twitter account too","msgtype":"m.text"},"ts":1430478069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: you around?","msgtype":"m.text"},"ts":1430490925000,"senderName":"annevk_","senderId":"annevk_@irc"},
{"content":{"body":"TabAtkins: I get \"No 'functionish' refs found for 'stringification behavior'.\"","msgtype":"m.text"},"ts":1430490932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: which seems to be due to <a dfn for=Range lt=\"stringification behavior\">toString()</a> which is due to the () at the end of toString which seems weird as it uses lt=\"\"","msgtype":"m.text"},"ts":1430490967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: what is happening?","msgtype":"m.text"},"ts":1430490977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so, first glance result from this system benchmark is that async-read is roughly equivalent to sync-read+ready-promise... except when the browser is under memory pressure... then the sync-read+ready-promise pulls away... I'm not sure how I feel about that yet","msgtype":"m.text"},"ts":1430491033000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I fixed that in Bikeshed.","msgtype":"m.text"},"ts":1430491422000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Before sending you the PR. ^_^","msgtype":"m.text"},"ts":1430491439000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I see","msgtype":"m.text"},"ts":1430491483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(In one particular place, it was accidentally falling through to doing text-based link-type identification, so it was trying to interpret that link as a functionish type, but still linking with \"stringification behavior\".","msgtype":"m.text"},"ts":1430491513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1430491515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Oh, yeah, about origin, use <pre class=anchors> to point the term \"origin\" to the url spec.","msgtype":"m.text"},"ts":1430491565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no I want HTML's origin","msgtype":"m.text"},"ts":1430491588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not HTML's reference to URL's origin","msgtype":"m.text"},"ts":1430491603000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then use <pre class=anchors> to point the term \"origin\" to the html spec.","msgtype":"m.text"},"ts":1430491643000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"HTML is hell to link to at the moment, and that's... probably not going to get much better.  At least, as I said yesterday, I'm going to add a way to fix common terms from it.","msgtype":"m.text"},"ts":1430491681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I updated Bikeshed and I still get that error","msgtype":"m.text"},"ts":1430491702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"...goddammit, I didn't push last night.  Sorry, the fix is still on my work comp.  I'll push in an hour or two when I get into the office.","msgtype":"m.text"},"ts":1430491747000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's dumb of me, sorry.","msgtype":"m.text"},"ts":1430491752000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The error isn't serious, you can force-generate for now.  That particular link won't autolink until you get the fix, is all, but it's just a thing from the DOM2 changes section.","msgtype":"m.text"},"ts":1430491792000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: bikeshed -f says there's too few arguments","msgtype":"m.text"},"ts":1430491839000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"same for --force","msgtype":"m.text"},"ts":1430491851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or --force-generate","msgtype":"m.text"},"ts":1430491862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup, need to specify the command if you're using flags, because argparse is dumb and I hate it.","msgtype":"m.text"},"ts":1430491862000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"`bikeshed -f spec`","msgtype":"m.text"},"ts":1430491867000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I have no words","msgtype":"m.text"},"ts":1430491879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do a cheaty hack around argparse's refusal to support a default command.","msgtype":"m.text"},"ts":1430491884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But it doesn't work if you pass any flags.","msgtype":"m.text"},"ts":1430491890000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You should see argparse's bug if you pass a flag with a space in its value!","msgtype":"m.text"},"ts":1430491918000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(It assumes that you're giving the first positional argument instead; in this case, the input filename.)","msgtype":"m.text"},"ts":1430491941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In case it isn't clear, `spec` is the literal command, not a variable I'm asking you to fill in.  Bikeshed's `spec` command is the one that actually generates a spec.","msgtype":"m.text"},"ts":1430492023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thanks TabAtkins","msgtype":"m.text"},"ts":1430492063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And thank you for bearing with the rocky introduction of whatwg specs into Bikeshed. Every new spec finds bugs no previous spec poked at, and as WHATWG specs get bikeshedded and put into Shepherd, Bikeshedding them will be easier (because all the autolinks will work).","msgtype":"m.text"},"ts":1430492138000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, looking forward to that","msgtype":"m.text"},"ts":1430492172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I noticed WebIDL does not link to HTTPS","msgtype":"m.text"},"ts":1430492185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which I thought was something we fixed","msgtype":"m.text"},"ts":1430492191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's all SpecRef bugs. :/","msgtype":"m.text"},"ts":1430492209000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the duplicate selectors4 / selectors-4 is too?","msgtype":"m.text"},"ts":1430492470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but I'll be fixing that today or Monday. Got a PR almost ready to go.","msgtype":"m.text"},"ts":1430492490000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Went through and put together a bunch of aliases for all the CSS specs that aren't already named correctly.","msgtype":"m.text"},"ts":1430492516000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Alright, sounds good","msgtype":"m.text"},"ts":1430493624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I wrote https://storage.spec.whatwg.org/ in Bikeshed without too much effort","msgtype":"m.text"},"ts":1430493646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: first thing I wrote from scratch","msgtype":"m.text"},"ts":1430493653000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I got the IDL stuff wrong, but otherwise it mostly seems okay","msgtype":"m.text"},"ts":1430493672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What'd you get wrong? I desperately need to improve the docs/help around IDL stuff, and would like to know your errors.","msgtype":"m.text"},"ts":1430494645000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I thought it would just automatically pick up that I was defining something from the IDL","msgtype":"m.text"},"ts":1430495695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: but instead it created two definitions","msgtype":"m.text"},"ts":1430495706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How'd you initially mark up the second definition?  It does automatically pick it up if you give it enough information for it to know you're defining the term elsewhere.","msgtype":"m.text"},"ts":1430496199000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: <dfn><code>requestPersistent()</code></dfn>","msgtype":"m.text"},"ts":1430496218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, you need to tell it it's a method, and of what interface.","msgtype":"m.text"},"ts":1430496262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Writing this down, though, for a possible helpful warning in the future.","msgtype":"m.text"},"ts":1430496323000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(In general, definitions need to be given a type; the default type is \"dfn\", which is for general terms and such.)","msgtype":"m.text"},"ts":1430496413000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I also need to put together a \"10 things you need to know to use Bikeshed effectively\" thing, so you don't have to read the whole docs to get the basic usage info.","msgtype":"m.text"},"ts":1430496553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the other thing I noticed was that while I like to link to /multipage/, Bikeshed's IDL autolinking prefers / for html.spec.whatwg.org","msgtype":"m.text"},"ts":1430496629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: same for SpecRef","msgtype":"m.text"},"ts":1430496635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: For SpecRef you can just give a PR to change the reference.","msgtype":"m.text"},"ts":1430496674000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: / seems hostile to everyone on a slow computer or on slow bandwidth","msgtype":"m.text"},"ts":1430496683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1430496685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For Bikeshed, that's an artifact of Shepherd; I'm not sure how to handle a spec spread across multiple pages. I'll talk to plinss about it, see if we can fix things.","msgtype":"m.text"},"ts":1430496704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yes, single-page is very hostile.","msgtype":"m.text"},"ts":1430496710000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I only load it when I need to ctrl-F for something, and I can't just guess the ID.","msgtype":"m.text"},"ts":1430496730000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: https://github.com/tobie/specref/pull/183","msgtype":"m.text"},"ts":1430497385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nice.","msgtype":"m.text"},"ts":1430497445000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Oh yeah, and I pushed the Bikeshed fixes from last night, so you should build clean now.","msgtype":"m.text"},"ts":1430497571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"arrow functions are so cute","msgtype":"m.text"},"ts":1430497589000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: agreed, I like how they make complex things a lot easier to grasp","msgtype":"m.text"},"ts":1430497624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe this whole Javascript thing has legs after all","msgtype":"m.text"},"ts":1430497768000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: don't tell Lars","msgtype":"m.text"},"ts":1430497789000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":-P","msgtype":"m.text"},"ts":1430497819000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"is trying to parse https://lists.w3.org/Archives/Public/public-webapps/2015AprJun/0473.html by rniwa and not succeeding","msgtype":"m.emote"},"ts":1430497975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I noticed some differences in references when building locally with Bikeshed and using https://api.csswg.org/bikeshed/","msgtype":"m.text"},"ts":1430498071000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Would that be because Bikeshed itself was at different versions, or is there a separate step to update the SpecRef database?","msgtype":"m.text"},"ts":1430498117000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: you need to run bikeshed update","msgtype":"m.text"},"ts":1430498339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: that should update the databases locally","msgtype":"m.text"},"ts":1430498353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"ExtendableEvent\"?","msgtype":"m.text"},"ts":1430498478000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: from ServiceWorker spec","msgtype":"m.text"},"ts":1430498496000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not the greatest name in the world","msgtype":"m.text"},"ts":1430498510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#extendable-event","msgtype":"m.text"},"ts":1430498519000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"basically a waitUntil() method","msgtype":"m.text"},"ts":1430498524000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ok, thanks :)","msgtype":"m.text"},"ts":1430498582000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: unfortunately @mediasession is already taken on twitter","msgtype":"m.text"},"ts":1430498614000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Wow, those headers are way too big","msgtype":"m.text"},"ts":1430498817000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"... And now they're not","msgtype":"m.text"},"ts":1430498853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I think that page uses Polymer, it's rather flaky","msgtype":"m.text"},"ts":1430498888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: mediasessionapi too long?","msgtype":"m.text"},"ts":1430498903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well that's insane","msgtype":"m.text"},"ts":1430498907000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"@mediasessions","msgtype":"m.text"},"ts":1430498917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: would work, but the spec doesn't have an API yet :)","msgtype":"m.text"},"ts":1430499005000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I guess I'll wait to discuss it with rich, since it's so half-baked that we don't really want to attract attention yet","msgtype":"m.text"},"ts":1430499038000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: btw, did you notice that on iOS if you play a podcast from Safari, it doesn't stop when you quit Safari?","msgtype":"m.text"},"ts":1430499070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: browsers could do a lot here by just improving their default heuristics","msgtype":"m.text"},"ts":1430499095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, we've looked a lot at the existing behavior in various browsers, and in fact step one of our roadmap is to improve the default behavior without adding anything Web-exposed","msgtype":"m.text"},"ts":1430499160000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"this particular aspect is \"does playback stop when the page is not visible\" (due to tab or app change)","msgtype":"m.text"},"ts":1430499206000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"yeah, this is also what I hate about browsers-inside-apps, they suck at all this","msgtype":"m.text"},"ts":1430499267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"since the current default behavior for audio elements is to keep playing in this situation, pages that don't want this could use the page visibility API to change it","msgtype":"m.text"},"ts":1430499269000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"but it's not out of the question to make it a setting on media sessions","msgtype":"m.text"},"ts":1430499297000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"for example rich thinks we really should pause by default and require apps to opt in to the current behavior","msgtype":"m.text"},"ts":1430499315000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: The API Bikeshed is always at ToT and has the most up-to-date refs. If you ever differ, update Bikeshed (`git pull --rebase` from within Bikeshed's folder) and/or update its local databases (`bikeshed update` from anywhere).","msgtype":"m.text"},"ts":1430499333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"philipj: tab switching causing a pause would be annoying to most users I think","msgtype":"m.text"},"ts":1430499362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: has rich never attended a YouTube party? :-P","msgtype":"m.text"},"ts":1430499397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that would be desktop, and as much as I'd like it making the default behavior the same on desktop and mobile does not look promising","msgtype":"m.text"},"ts":1430499438000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: on Android where tabs show up in the app switcher, having a different behavior for tab switching and app switching might be strange","msgtype":"m.text"},"ts":1430499466000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I guess mobile has some memory issues?","msgtype":"m.text"},"ts":1430499468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose initially bandwidth and battery might have been a reason for some differences, but at this point I think it's really about the risk of users expecting and relying on the complete lack of coordination on desktop, which would make it hard to do much useful by default","msgtype":"m.text"},"ts":1430499611000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"otherwise, I think having only one tab play at any one time would be a nice default","msgtype":"m.text"},"ts":1430499679000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"whatever changes to the defaults we can make, I hope to express them in terms of media sessions, so that it can be changed with an API","msgtype":"m.text"},"ts":1430499775000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I kinda agree - even on desktop, having multiple tabs playing at the same tab is usually just a frustrating accident, unless one of them is playing music.  If music and such could mark themselves as being okay to play in the background, *and* users could mark or unmark players that way by themselves (an option in the right-click menu), it'd be cool.","msgtype":"m.text"},"ts":1430499864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith, ... a baby? :)","msgtype":"m.text"},"ts":1430501192000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yup","msgtype":"m.text"},"ts":1430501333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"due in mid-October","msgtype":"m.text"},"ts":1430501341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sleep while you can :)","msgtype":"m.text"},"ts":1430501353000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1430501360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1430501362000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"does any browser vendor have data about marquee usage?","msgtype":"m.text"},"ts":1430502553000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Anecdotally very popular in China","msgtype":"m.text"},"ts":1430503339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sure, but does anyone actually have any data?","msgtype":"m.text"},"ts":1430503724000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"like, was <marquee> popular 3 years ago, but not anymore ?","msgtype":"m.text"},"ts":1430503745000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(marquee is certainly in my remove-from-the-platform list)","msgtype":"m.text"},"ts":1430503798000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://esdiscuss.org/topic/please-volunteer-to-maintain-the-html-version-of-the-spec","msgtype":"m.text"},"ts":1430503953000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jorendorff: hope somebody picks up the ball there but it seems absurd that in 2015 the source of the spec is still a Word document","msgtype":"m.text"},"ts":1430504114000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"given that there are thousands of people who use the HTML version of the spec get work done and pretty much not even 1 person who reads the Word version (rather than writing it)","msgtype":"m.text"},"ts":1430504232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TabAtkins: how do I get a custom property value from in JS?","msgtype":"m.text"},"ts":1430504953000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"I think Domenic and bterlson are going to do it","msgtype":"m.text"},"ts":1430505385000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"It is truly absurd","msgtype":"m.text"},"ts":1430505395000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I lose half a day to rage every time I think about it, so I won't elaborate","msgtype":"m.text"},"ts":1430505431000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"smaug____: https://www.chromestatus.com/metrics/feature/timeline/popularity/53 shows <marquee> usage is pretty high still","msgtype":"m.text"},"ts":1430506232000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"ah, there","msgtype":"m.text"},"ts":1430506595000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"somehow I missed that when looking at chromestatus","msgtype":"m.text"},"ts":1430506613000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://lauren.vortex.com/archive/001099.html","msgtype":"m.text"},"ts":1430517617000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well they sound happy","msgtype":"m.text"},"ts":1430517707000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1430517842000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]