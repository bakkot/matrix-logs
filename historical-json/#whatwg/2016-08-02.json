[
{"content":{"body":"wtf: https://github.com/ylafon/webidl","msgtype":"m.text"},"ts":1470140632000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: What's the problem?","msgtype":"m.text"},"ts":1470141067000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Some random guy forking the spec with no communication whatsoever","msgtype":"m.text"},"ts":1470141100000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I didn't realise he is part of W3C;","msgtype":"m.text"},"ts":1470141193000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"now I see the problem.","msgtype":"m.text"},"ts":1470141197000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"remind me, which spec defines how .style.* is mapped to style attribute","msgtype":"m.text"},"ts":1470141271000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1470141271000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"(could someone finally kill w3schools)","msgtype":"m.text"},"ts":1470141499000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so I have this strange behavior (so far in Firefox only), when I append a large absolutely positioned element that is translated (css transform) far to the right (out of the screen) and the browser scrolls the documentElement to try to keep this big offscreen thing in the viewport","msgtype":"m.text"},"ts":1470142851000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is this specced/documented/reported/explained somewhere?","msgtype":"m.text"},"ts":1470142862000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Is w3c open for proposals like TC39?","msgtype":"m.text"},"ts":1470146179000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"if yes, what's the process like?","msgtype":"m.text"},"ts":1470146188000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"how many stages?","msgtype":"m.text"},"ts":1470146192000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"have you tired adding an event listener is a promise?","msgtype":"m.text"},"ts":1470146367000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"new Promise((res, rej) => element.addEventListner('click', () => if(...){resolve()} reject())) // something like","msgtype":"m.text"},"ts":1470146385000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Domenic: is that a bad idea?","msgtype":"m.text"},"ts":1470146393000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"The W3C process is based on stubbornness to the point of exhausting anyone with actual work to do","msgtype":"m.text"},"ts":1470147811000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"As for the WHATWG, https://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F","msgtype":"m.text"},"ts":1470147854000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In general event listeners and promises have an impedance mismatch because promises are resolve-once and event listeners are continuous streams of events","msgtype":"m.text"},"ts":1470148007000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: so it's a no no, it won't work right?","msgtype":"m.text"},"ts":1470148087000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Ms2ger: Forget about the particular solution you have in mind! Solution time is later! :D","msgtype":"m.text"},"ts":1470148105000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"So much of writing to do :(","msgtype":"m.text"},"ts":1470148130000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Well you can make something that works if you want a promise to resolve the next time a particular event fires","msgtype":"m.text"},"ts":1470148134000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it generally doesn't seem useful enough to add to the platform; for events that only fire once new APIs are sneakily using promises directly (eg. fetch vs xhr)","msgtype":"m.text"},"ts":1470148182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: afaik, there's been communication about it. ylafon is working on a bringing version 1 to Rec. That version would only contain bindings actually implemented by vendors.","msgtype":"m.text"},"ts":1470149799000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: note I'm offering info about it. Not my opinion on the topic. :)","msgtype":"m.text"},"ts":1470149824000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jgraham: try, luck that fetch is a function, we done need to do a new Fetch() heh heh","msgtype":"m.text"},"ts":1470150449000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"jgraham: does fetch extend promise internally?","msgtype":"m.text"},"ts":1470150460000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"or just returns a new Promise() ?","msgtype":"m.text"},"ts":1470150471000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"> W3C invites implementations of Mixed Content","msgtype":"m.text"},"ts":1470151287000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Noooooooooo","msgtype":"m.text"},"ts":1470151289000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I thought we were only doing HTTPS these days","msgtype":"m.text"},"ts":1470151555000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"HTTPS is the new HTTP","msgtype":"m.text"},"ts":1470151562000,"senderName":"AutomatedTester","senderId":"AutomatedTester@irc"},
{"content":{"body":"Ms2ger: is that a serious IDL fork? Seems weirdâ€¦","msgtype":"m.text"},"ts":1470152124000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: see my comments above","msgtype":"m.text"},"ts":1470152587000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1470153490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Missed that somehow","msgtype":"m.text"},"ts":1470153498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it possible to represent IPv6 addresses in decimal or octal, similar to how IPv4 addresses can be?","msgtype":"m.text"},"ts":1470158095000,"senderName":"duper","senderId":"duper@irc"},
{"content":{"body":"smaug____: As far as I can tell... it's not defined anywhere.","msgtype":"m.text"},"ts":1470158405000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Style Attributes just defines that the contents of a style attribute apply to the document as if they were in a stylesheet.","msgtype":"m.text"},"ts":1470158470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok. The question I have is that when should setting .style.foo = \"some new value\" cause a dom attribute set","msgtype":"m.text"},"ts":1470158471000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"And OM doesn't seem to ahve any specific text about this.","msgtype":"m.text"},"ts":1470158479000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"IMO element.style.width = \"10px\"; element.style.width = \"10px\";  should cause two mutation records, to be consistent with element.setAttribute(\"style\", \"width: 10px;\"); element.setAttribute(\"style\", \"width: 10px;\");","msgtype":"m.text"},"ts":1470158624000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but not all the browsers create the latter record for the .style case","msgtype":"m.text"},"ts":1470158676000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, I think that's utterly undefined. A good bug report for CSSOM. Make zcorpan fix it. ^_^","msgtype":"m.text"},"ts":1470158720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I wouldn't be surprised if it does dirty-checking and only writes when there's a change.)","msgtype":"m.text"},"ts":1470158754000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"> Mutating the declarations must set the style content attribute on the context object to the serialization of the declarations. If the style content attribute is set, changed or removed, the declarations must be updated as appropriate.","msgtype":"m.text"},"ts":1470158817000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"So what is \"Mutating the declarations\"?","msgtype":"m.text"},"ts":1470158833000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____, file a bug on cssom?","msgtype":"m.text"},"ts":1470158846000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"reading...","msgtype":"m.text"},"ts":1470158880000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps this is speced?","msgtype":"m.text"},"ts":1470158884000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, \" Mutating the declarations\" is indeed too vague","msgtype":"m.text"},"ts":1470158929000,"senderName":"smaug____","senderId":"smaug____@irc"}
]