[
{"content":{"body":"Hixie_: that's a long bug!","msgtype":"m.text"},"ts":1381450266000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_: you're asking about what URL pattern to use?","msgtype":"m.text"},"ts":1381450287000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I think ismap does the comma thing","msgtype":"m.text"},"ts":1381450296000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"or usemap","msgtype":"m.text"},"ts":1381450300000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"whichever it is","msgtype":"m.text"},"ts":1381450305000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the empty value option of a select should have color:#999 just as placeholders do in inputs","msgtype":"m.text"},"ts":1381450992000,"senderName":"raj","senderId":"raj@irc"},
{"content":{"body":"abarth: oops, sorry man. i meant the security bug from earlier.","msgtype":"m.text"},"ts":1381454011000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abarth: i meant https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701","msgtype":"m.text"},"ts":1381454043000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abarth: last comment is all you need to look at, really","msgtype":"m.text"},"ts":1381454058000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Anyone remember someone called 'aspireonescs'?","msgtype":"m.text"},"ts":1381455315000,"senderName":"Sympa","senderId":"Sympa@irc"},
{"content":{"body":"Hixie_: the \"Alien Object\" thing is problematic","msgtype":"m.text"},"ts":1381456182000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"at least the definition I read earlier","msgtype":"m.text"},"ts":1381456192000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it seems to require magic on the JS side","msgtype":"m.text"},"ts":1381456199000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"\"We're not sure if the last bullet point in particular is enough\" <--- it's not","msgtype":"m.text"},"ts":1381456404000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_: I left a more extensive comment on the bug","msgtype":"m.text"},"ts":1381457040000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: thanks","msgtype":"m.text"},"ts":1381457442000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abarth: responded","msgtype":"m.text"},"ts":1381458061000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I replied on the bug :)","msgtype":"m.text"},"ts":1381459243000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_, whoops, I swore I removed whatwg@ from the To: field in gmail.","msgtype":"m.text"},"ts":1381462980000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1381462989000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no worries :-)","msgtype":"m.text"},"ts":1381462991000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just to see if I could get him to reply back with more crazy","msgtype":"m.text"},"ts":1381463008000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"he replied back with \"Is hypertext immaterial/imaginary?\"","msgtype":"m.text"},"ts":1381463121000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"which i guess is as good as i ca nget","msgtype":"m.text"},"ts":1381463128000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"I am making a webapp, I want to prefetch font and then make the entire page visible, how can I do that?","msgtype":"m.text"},"ts":1381465693000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"don't browsers do that automatically?","msgtype":"m.text"},"ts":1381465929000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh you don't want to show _anything_ until you have the font?","msgtype":"m.text"},"ts":1381465939000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1381465945000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"coz it causes that jank","msgtype":"m.text"},"ts":1381465949000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"with Images, it is possible","msgtype":"m.text"},"ts":1381465989000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"hm, there's some sort of FontLoader API being developed, maybe that would do it","msgtype":"m.text"},"ts":1381466036000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"dunno, sorry","msgtype":"m.text"},"ts":1381466038000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"do fonts delay the main 'load' event?","msgtype":"m.text"},"ts":1381466063000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i usually have the opposite problem, i want the text to show before the font is there, and then to swap in the font later when it's here...","msgtype":"m.text"},"ts":1381466076000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that is good for websites","msgtype":"m.text"},"ts":1381466090000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"but for webapps, I am happy to show a loader","msgtype":"m.text"},"ts":1381466104000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"load all the resources, loading the other pages makes no request to server again","msgtype":"m.text"},"ts":1381466143000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"Example would be a HTML5 game, u dont want to font to load later","msgtype":"m.text"},"ts":1381466181000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"mine our games too :-)","msgtype":"m.text"},"ts":1381466206000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"are, even","msgtype":"m.text"},"ts":1381466210000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh... that nice, but I hope you agree there is some validity in what am saying","msgtype":"m.text"},"ts":1381466243000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"absolutely","msgtype":"m.text"},"ts":1381466275000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"About the FontLoader API, why is a specific api being developed, this can be handled just as Images are handled","msgtype":"m.text"},"ts":1381466312000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"just expose a constructor to JS like Font(), and let us attach a 'load' event to it","msgtype":"m.text"},"ts":1381466338000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"thats how Images are prefetched","msgtype":"m.text"},"ts":1381466355000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"yeah i dunno, not my area","msgtype":"m.text"},"ts":1381466401000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk-cloud: ping ^","msgtype":"m.text"},"ts":1381466407000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or TabAtkins ^","msgtype":"m.text"},"ts":1381466413000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh okay thanks","msgtype":"m.text"},"ts":1381466416000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"jdaggett: â†‘","msgtype":"m.text"},"ts":1381475702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: FYI about HTML imports https://code.google.com/p/chromium/issues/detail?id=306292 and https://code.google.com/p/chromium/issues/detail?id=234509","msgtype":"m.text"},"ts":1381476020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"specific to blink implementation but note Dominic's comment \"Custom Elements is blocked on HTML Imports. In general the upgrade ordering problem is quite tricky. Currently it is infeasible\", etc.","msgtype":"m.text"},"ts":1381476133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually maybe not necessarily so implementation-specific but perhaps a problem any implementor is going to run into with the current spec. Or maybe even with any spec for this mechanism at all","msgtype":"m.text"},"ts":1381476255000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because I don't see any suggestion in any of the comments about considering a spec change to address the issue","msgtype":"m.text"},"ts":1381476321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"niloy: fonts are *not* like images","msgtype":"m.text"},"ts":1381478535000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"Ms2ger: when you've got time can you let me know why the first test at http://w3c-test.org/web-platform-tests/submissions/366/notifications/interfaces.html is failing, and what would need to be fixed to make it pass? (e.g., some fix needed to idlharness.js?)","msgtype":"m.text"},"ts":1381478546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"niloy: individual fonts are formed into families, each with weight/slope/width properties","msgtype":"m.text"},"ts":1381478592000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"MikeSmith, in Gecko?","msgtype":"m.text"},"ts":1381478618000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"niloy: layout chooses a particular font based on the style of a given run of text","msgtype":"m.text"},"ts":1381478626000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"MikeSmith, https://www.w3.org/Bugs/Public/show_bug.cgi?id=23133","msgtype":"m.text"},"ts":1381478652000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"niloy: that's why loading doesn't follow the paradigm of image loading","msgtype":"m.text"},"ts":1381478654000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"niloy: as for font loads in current browsers, firefox waits for fonts to load, webkit doesn't","msgtype":"m.text"},"ts":1381478704000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"niloy: so for drawing text in canvas you need to use the font loader hacks (e.g. test a given character on timeouts to determine when the font load has completed)","msgtype":"m.text"},"ts":1381478761000,"senderName":"jdaggett","senderId":"jdaggett@irc"},
{"content":{"body":"Ms2ger: yeah in Gecko. (btw in my workspace I now have all the tests there passing in Gecko except that one)","msgtype":"m.text"},"ts":1381478807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"checks Ms2ger url","msgtype":"m.emote"},"ts":1381478820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam|away, so that time you'd spend on IDL... :)","msgtype":"m.text"},"ts":1381478840000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"finds https://github.com/w3c/testharness.js/issues/26","msgtype":"m.emote"},"ts":1381478933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: so there's been no spec change for this yet?","msgtype":"m.text"},"ts":1381478946000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Nope","msgtype":"m.text"},"ts":1381478963000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1381479022000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: thanks","msgtype":"m.text"},"ts":1381479109000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Np","msgtype":"m.text"},"ts":1381479136000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"something for bz to work on before he goes on vacation..","msgtype":"m.text"},"ts":1381479222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"More like time for heycam to start fixing all the stuff we made him promise to fix last weekend :)","msgtype":"m.text"},"ts":1381479267000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders why gsnedders is using NN2","msgtype":"m.emote"},"ts":1381479348000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith, and I'll try to look at your PRs later","msgtype":"m.text"},"ts":1381479471000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where is bholley?","msgtype":"m.text"},"ts":1381481249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When he \"cornered\" me past weekend about re-parenting we didn't discuss the window.open() case!","msgtype":"m.text"},"ts":1381481274000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe doing something else for window.open() is okay?","msgtype":"m.text"},"ts":1381481285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*crickets*","msgtype":"m.text"},"ts":1381481926000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-dom/2012OctDec/0173.html is the relevant email","msgtype":"m.text"},"ts":1381482122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking at Peter Occil's URL parser I see it's not actually doing any error reporting. It might not be too hard to add error reporting to it. I assume the error=true cases in his code are places that the spec defines as errors. So we could throw an exception there with a message instead of just setting that flag.","msgtype":"m.text"},"ts":1381482132000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: or log a message to an error logger","msgtype":"m.text"},"ts":1381482162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or we could just write a URL parser from scratch which maybe also wouldn't be hard to do","msgtype":"m.text"},"ts":1381482169000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so you can log multiple errors","msgtype":"m.text"},"ts":1381482172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1381482181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though currently the way the microsyntax/datatype checking in the validator is designed, we don't normally emit multiple errors for the same check. i.e., if we're checking an attribute value and find an error at some point we throw and the checking of the rest of value stops. But if we wanted for some case we could buffer the messages and just throw on exception with them at the end of the parsing. I think I may already be doing that in at least one ot","msgtype":"m.text"},"ts":1381482545000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1381482564000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ah okay","msgtype":"m.text"},"ts":1381483358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: you might want to I suppose, makes some sense for style=\"\" too","msgtype":"m.text"},"ts":1381483374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1381483382000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw the design of the validator is such that we actually need to work from exceptions. We don't really have an eror logger. Or rather the error-logger type of thing that we do have consumes exceptions. We have errors coming from different places -- some internal code, some third-party code -- and we basically package those up as exceptions and feed them to the eror handler.","msgtype":"m.text"},"ts":1381483595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hey","msgtype":"m.text"},"ts":1381489595000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"do i need to close non-self ending tag in html like <input>","msgtype":"m.text"},"ts":1381489648000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"What do you mean non-self-ending?","msgtype":"m.text"},"ts":1381490120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"just a sec","msgtype":"m.text"},"ts":1381490216000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"there is a disucssion on the web","msgtype":"m.text"},"ts":1381490269000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"about <input> tag didnt need to be closed in html5","msgtype":"m.text"},"ts":1381490281000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"but it needs to be closed in html4","msgtype":"m.text"},"ts":1381490289000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"there is some special tag i believe in html","msgtype":"m.text"},"ts":1381490318000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"original question <xqo> do you need to close input tags? [13:57:12] <xqo> <input /> or just <input>?","msgtype":"m.text"},"ts":1381490350000,"senderName":"hellyeah","senderId":"hellyeah@irc"},
{"content":{"body":"The answer is \"either is fine, but one is two characters longer for no reason\"","msgtype":"m.text"},"ts":1381490806000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So, is there some event that has a default action, but it will only run if there is no other handler registered to that event?","msgtype":"m.text"},"ts":1381491295000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"(e.g., you don't have to do event.preventDefault(), it just automatically prevents when you add a new handler)","msgtype":"m.text"},"ts":1381491315000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"(yeah, surprising/no-good, but do we have any legacy like that?)","msgtype":"m.text"},"ts":1381491346000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"how can I make video object to show controls?","msgtype":"m.text"},"ts":1381491763000,"senderName":"lllllllll","senderId":"lllllllll@irc"},
{"content":{"body":"<video controls>","msgtype":"m.text"},"ts":1381492085000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Ms2ger: Writing about the history of HTML parsers, and wondering how much of the DOM is in NN2.","msgtype":"m.text"},"ts":1381495167000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1381495180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: NN2 is basically only documented in dead-tree form, and I cannot find the correct dead-trees.","msgtype":"m.text"},"ts":1381495193000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Which dead-trees?","msgtype":"m.text"},"ts":1381495304000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Touch Events is a W3C Recommendation\"","msgtype":"m.text"},"ts":1381495361000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ehehehehe","msgtype":"m.text"},"ts":1381495365000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Those with NN2 manuals on.","msgtype":"m.text"},"ts":1381495490000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Why would you believe the documentation?","msgtype":"m.text"},"ts":1381496362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think I've ever seen someone call ArtB \"Bart\" before","msgtype":"m.text"},"ts":1381497109000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bholley: so what happens in the window.open() case with old Array objects and such?","msgtype":"m.text"},"ts":1381498017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bholley: it seems they too would not change, correct?","msgtype":"m.text"},"ts":1381498028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: correct. non-DOM objects have never moved","msgtype":"m.text"},"ts":1381498045000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Promises?","msgtype":"m.text"},"ts":1381498609000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bholley: so HTML says a bunch more objects change","msgtype":"m.text"},"ts":1381499840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hm?","msgtype":"m.text"},"ts":1381499850000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: http://www.whatwg.org/C#dom-document-open step 15","msgtype":"m.text"},"ts":1381499877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1381499913000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk, that's such a terrible clause","msgtype":"m.text"},"ts":1381499916000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: \"new instances\"","msgtype":"m.text"},"ts":1381499934000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: that doesn't sound like \"moving\" to me","msgtype":"m.text"},"ts":1381499945000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: or maybe I misunderstood","msgtype":"m.text"},"ts":1381499956000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: can you elaborate on your concern?","msgtype":"m.text"},"ts":1381499980000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: I guess that's different from changing prototype indeed","msgtype":"m.text"},"ts":1381500101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bholley: but it's so vague...","msgtype":"m.text"},"ts":1381500105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we just create new ones","msgtype":"m.text"},"ts":1381500123000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: identity isn't preserved","msgtype":"m.text"},"ts":1381500129000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: that's the key point","msgtype":"m.text"},"ts":1381500132000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: the thing that makes document.open() special is that the identity of |document| is preserved","msgtype":"m.text"},"ts":1381500143000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: but nothing else","msgtype":"m.text"},"ts":1381500145000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and if you have a reference to the old one things are weird?","msgtype":"m.text"},"ts":1381500160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do they represent the same underlying object?","msgtype":"m.text"},"ts":1381500166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's no old one. They're the same reference. Same object","msgtype":"m.text"},"ts":1381500172000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"sorry, like the old Navigator object","msgtype":"m.text"},"ts":1381500186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh. yeah","msgtype":"m.text"},"ts":1381500223000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: I don't know what happens in Gecko","msgtype":"m.text"},"ts":1381500227000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: my _guess_ would be that it would continue to operate in the old scope","msgtype":"m.text"},"ts":1381500260000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: or wait","msgtype":"m.text"},"ts":1381500276000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: navigator doesn't live on the document","msgtype":"m.text"},"ts":1381500280000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: yeah, so it's just like anything else","msgtype":"m.text"},"ts":1381500287000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: it operates in the old scope","msgtype":"m.text"},"ts":1381500291000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: easy","msgtype":"m.text"},"ts":1381500292000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"though the lack of a document is a bit tricky","msgtype":"m.text"},"ts":1381500303000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"is it?","msgtype":"m.text"},"ts":1381500306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is it easy or is it tricky? :-)","msgtype":"m.text"},"ts":1381500314000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"easy :)","msgtype":"m.text"},"ts":1381500320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doesn't seem so easy to me","msgtype":"m.text"},"ts":1381500326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, from a spec perspective we should probably just neuter those objects","msgtype":"m.text"},"ts":1381500347000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"basically a huge special case here that changes all kinds of assumed invariants","msgtype":"m.text"},"ts":1381500348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, for example Navigator sharing a Window with a Document","msgtype":"m.text"},"ts":1381500372000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"getting agreement on concept-node-adopt seems like a good start, document.open() can wait","msgtype":"m.text"},"ts":1381500429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that requires a bunch more testing","msgtype":"m.text"},"ts":1381500435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1381500445000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: I think neutering is probably the way to go","msgtype":"m.text"},"ts":1381500454000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"annevk: we just need a list of objects to neuter","msgtype":"m.text"},"ts":1381500459000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and define what neutering means for them","msgtype":"m.text"},"ts":1381500474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how this shit happened","msgtype":"m.text"},"ts":1381500510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nobody could ever have thought this to be a good idea","msgtype":"m.text"},"ts":1381500517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"./topic Welcome to Web platform aka \"I wonder how this shit happened. Nobody could ever have thought this to be a good idea.\"","msgtype":"m.text"},"ts":1381500895000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i actually googled for a count on the exact phrase \"who the fuck thought this was a good idea\" a couple days ago (though not in a web context)","msgtype":"m.text"},"ts":1381500923000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"~200k, modulo total meaninglessness of google search result counts","msgtype":"m.text"},"ts":1381500937000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1381501193000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what's great is if you google for something like that and you were to find some specific bad idea you're familiar with but then you notice that, way back when, you were one of the people who originally thought it was a good idea","msgtype":"m.text"},"ts":1381501358000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(just speaking hypothetically)","msgtype":"m.text"},"ts":1381501369000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Of course","msgtype":"m.text"},"ts":1381501427000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1381501663000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: so I'm wondering how much work it would be to add support for callback functions to idlharness.js","msgtype":"m.text"},"ts":1381503191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, I have no idea","msgtype":"m.text"},"ts":1381503209000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: You don't mean to say you thought the web was a good idea once? Man, egg and your face are in alignment.","msgtype":"m.text"},"ts":1381503235000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1381503287000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what's odd is when you read halfway through a list post, go \"wait, I've read this before\", then find your name at the top of it from half a decade ago","msgtype":"m.text"},"ts":1381503528000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: :) yup done that (or something close at least)","msgtype":"m.text"},"ts":1381503806000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how about when you hit a weird problem, search for it, and the first hit is yourself asking about it on a list years earlier","msgtype":"m.text"},"ts":1381503848000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that tends to kill any hope of finding a solution","msgtype":"m.text"},"ts":1381503861000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt, how about if there's also a reply from you that's just \"I figured it out\"?","msgtype":"m.text"},"ts":1381503941000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i haven't screwed myself over in that particular fashion","msgtype":"m.text"},"ts":1381503961000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hurrah for code commented as \"not enabled, not needed at this time\" that is actually needed","msgtype":"m.text"},"ts":1381504429000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"someone thought \"this time\" was a constant value","msgtype":"m.text"},"ts":1381504443000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the heck? chrome alerts are window-modal?","msgtype":"m.text"},"ts":1381506942000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seriously, wtf?","msgtype":"m.text"},"ts":1381507019000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"going back to 1998","msgtype":"m.text"},"ts":1381507029000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jgraham: Because it's effort to reverse engineer it, and it more easily gives me something to cite.","msgtype":"m.text"},"ts":1381511440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so, hey, w3c-css-wg is interesting today.","msgtype":"m.text"},"ts":1381513028000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ","msgtype":"m.text"},"ts":1381513406000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1381513430000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"reads to find what the names of the new CSS WG chairs are","msgtype":"m.emote"},"ts":1381513488000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hober: I think the word you are looking for is \"ironic\"","msgtype":"m.text"},"ts":1381513491000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hober: Tease. >_>","msgtype":"m.text"},"ts":1381513493000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"misses having MO access","msgtype":"m.emote"},"ts":1381513502000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"given what's in the email, you might expect someone in WHATWG to know about it. But I'm betting that's not the case","msgtype":"m.text"},"ts":1381513593000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"gsnedders: I probably shouldn't say this in non-member space but the news is that we're making Hixie_ the new co-chair of the CSS WG along wih the \"is hypertext energy?\" guy from the whatwg mailing list","msgtype":"m.text"},"ts":1381513760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which I guess is what astearns meant to allude to","msgtype":"m.text"},"ts":1381513782000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yep yep - the new guy is an amazing catch. Kudos on bringing him in","msgtype":"m.text"},"ts":1381513806000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"pats himself on the back","msgtype":"m.emote"},"ts":1381513822000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw the current chairs of the CSS WG have been promoted to chairing the Tracking Protection WG","msgtype":"m.text"},"ts":1381513880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Word has it that Obama is personally lining up a change to the constitution so that they can run for president","msgtype":"m.text"},"ts":1381514120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hmm, if you know about that, it seems you have accidentally revealed that you've got Platinum member access to the W3C transit lounge. Either or you're sitting outside the door stealing wifi access.","msgtype":"m.text"},"ts":1381514281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news I will be talking to a tech report about Web Components in the next few days and am seriously attempting to figure out what claim I can reasonably make about how Web Components can make user experience better for actual end users","msgtype":"m.text"},"ts":1381514758000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Not\"","msgtype":"m.text"},"ts":1381514783000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"dglazkov will love you just a little bit more\"","msgtype":"m.text"},"ts":1381514822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although eperts disagree on whether that is \"better\"","msgtype":"m.text"},"ts":1381514840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that's negligible - he already loves everyone so much","msgtype":"m.text"},"ts":1381514852000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"Ms2ger: in my experience reporters tend not to like \"not\". Instead they like to try to get you to say what they have already decided is the thing they're going to say. And if you don't say it, they paraphrase you in such a way as it sounds like you did.","msgtype":"m.text"},"ts":1381514906000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Sounds about right :)","msgtype":"m.text"},"ts":1381514932000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: I guess you have to make up something vauge about how it will allow more sophisticated web sites","msgtype":"m.text"},"ts":1381514940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since \"sophisticated\" is basically a weasle word in this context","msgtype":"m.text"},"ts":1381514961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway my current plan is to mumble something about \"improved UI responsiveness\". The rest of time I plan to spend blowing sunshine up the chimney, as the English like to say.","msgtype":"m.text"},"ts":1381514961000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: making more complex sites easier to create and maintain means less buggy experiences for end users","msgtype":"m.text"},"ts":1381514971000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"MikeSmith, more FOUCs!","msgtype":"m.text"},"ts":1381514994000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Longer loading times!","msgtype":"m.text"},"ts":1381515002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: it sounds like you have some practice already at blowing sunshine up the chimney. They must teach you guys that in school over there.","msgtype":"m.text"},"ts":1381515010000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: good brainstorming, we're making progress","msgtype":"m.text"},"ts":1381515057000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"make it an environmental issue. FOUCs are becoming more endangered; the components work is an attempt to repopulate the species","msgtype":"m.text"},"ts":1381515113000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"astearns: with my report hat on I find that you're not saying what I want to say. But what I heard you saying is \"making more complex sites... buggy experiences for end users\"","msgtype":"m.text"},"ts":1381515262000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I'll quote you on that","msgtype":"m.text"},"ts":1381515271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(didn't even have to paraphrase this time)","msgtype":"m.text"},"ts":1381515287000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"man I'm good at soundbites","msgtype":"m.text"},"ts":1381515302000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"\"All of CSS is unnecessary\"","msgtype":"m.text"},"ts":1381515328000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"(that's also a direct quote from a W3C presentation of mine)","msgtype":"m.text"},"ts":1381515353000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"headline for the piece: \"Web Components Brings Complex, Buggy Experiences for Users\"","msgtype":"m.text"},"ts":1381515360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"astearns: hey I remember that one","msgtype":"m.text"},"ts":1381515381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I actually requoted that one from you in some slides I used","msgtype":"m.text"},"ts":1381515406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1381515420000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"prepares \"Honk if you love FOUCs\" bumper stickers for hober to distribute at the CSS drift-car rallies where he hangs out on the weekends","msgtype":"m.emote"},"ts":1381515629000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"shit, how did you know?","msgtype":"m.text"},"ts":1381515765000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Hixie_: ping","msgtype":"m.text"},"ts":1381517160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hello, has someone ever considered to standardize the behavior of jquery's .closest() method? something like element.queryAncestor(\"div.foo[data-test]\");","msgtype":"m.text"},"ts":1381522708000,"senderName":"WesleyMcClane_","senderId":"WesleyMcClane_@irc"},
{"content":{"body":"sicking: pong","msgtype":"m.text"},"ts":1381524445000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: what's the proper procedure for giving something priority to get added in spec due to us being about to implement?","msgtype":"m.text"},"ts":1381524528000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"just poke me here","msgtype":"m.text"},"ts":1381524551000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: http://lists.w3.org/Archives/Public/public-webapps/2013OctDec/0142.html","msgtype":"m.text"},"ts":1381524569000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"though to be honest right now i've so many things that fall into that bucket that that's basically all i'm working on, so the real question is \"how do i get things higher in the list of important things\" :-P","msgtype":"m.text"},"ts":1381524576000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1381524581000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sicking: are there any other vendors on board?","msgtype":"m.text"},"ts":1381524695000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so far no one else said anything, good nor bad","msgtype":"m.text"},"ts":1381524709000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so, like requestAutocomplete(), then","msgtype":"m.text"},"ts":1381524722000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i think there might be others that are interested in the second use-case, i'll try to poke them","msgtype":"m.text"},"ts":1381524732000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie_: yeah. We're going to have feedback on rAC soon","msgtype":"m.text"},"ts":1381524749000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"is \"MessagePortAsyncSide\" just a \"MessagePort\"?","msgtype":"m.text"},"ts":1381524795000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't really understand this proposal","msgtype":"m.text"},"ts":1381524810000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what problem is it solving? just being able to use message ports synchronously in workers?","msgtype":"m.text"},"ts":1381524821000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: use cases at the bottom","msgtype":"m.text"},"ts":1381524831000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i don't really understand the relationship between synchronous APIs and those use cases","msgtype":"m.text"},"ts":1381524858000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: and answer to the first question is \"yes-ish\", see the email i'm replying to","msgtype":"m.text"},"ts":1381524862000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie_: using this API you can use libraries to implement synchronous APIs","msgtype":"m.text"},"ts":1381524881000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the e-mail you were replying to is helpful, thanks","msgtype":"m.text"},"ts":1381524913000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"isn't this just going to end up in deadlocks though?","msgtype":"m.text"},"ts":1381524930000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no, no risk of deadlocks in the traditional sense","msgtype":"m.text"},"ts":1381524950000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"async deadlocks are always possible of course, but that's true with setTimeout too","msgtype":"m.text"},"ts":1381524963000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"most of that fairly long thread was about ways to prevent deadlocks","msgtype":"m.text"},"ts":1381525002000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"preventing deadlocks are actually quite easy","msgtype":"m.text"},"ts":1381525051000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we can even add more powerful locking mechanisms without risking that. But it's something we can do later if needed","msgtype":"m.text"},"ts":1381525075000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"when you post one of these to someone else, does it just turn into a MessagePort?","msgtype":"m.text"},"ts":1381525082000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's harder when you want to do it without limiting the API too much","msgtype":"m.text"},"ts":1381525087000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which I suspect the proposal you quoted does, though it's been a long time and I haven't refreshed yet","msgtype":"m.text"},"ts":1381525116000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: no, the clone stays as whatever type the original object was","msgtype":"m.text"},"ts":1381525119000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what happens when you send a sync one of these to a Window then?","msgtype":"m.text"},"ts":1381525129000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: you can't. See quoted restrictions at the bottom","msgtype":"m.text"},"ts":1381525170000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hm, i see","msgtype":"m.text"},"ts":1381525214000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: i lost one restriction somewhere","msgtype":"m.text"},"ts":1381525250000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"note that in the spec now, DedicatedWorkerGlobalScope.postMessage and Worker.postMessage are really the same as MessagePort.postMessage, but I guess we can add some special magic there...","msgtype":"m.text"},"ts":1381525282000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: you also can't call waitForMessage() until one side has been transferred to another context","msgtype":"m.text"},"ts":1381525285000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what if it gets transfered back?","msgtype":"m.text"},"ts":1381525295000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: you can't","msgtype":"m.text"},"ts":1381525308000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie_: see first quoted restrictions","msgtype":"m.text"},"ts":1381525328000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so if you want to use this, you really have to bear in mind the hierarchy in which you created the workers...","msgtype":"m.text"},"ts":1381525396000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"so in this model, to have a worker block on a lower-level worker, you'd have to create the port in the parent worker (the one that blocks) and hand it down, not create the channel in the lower-level worker and pass it upwards","msgtype":"m.text"},"ts":1381525433000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i have to be honest, if it was up to me, i'd tell people to suck it up and use the async API, especially with Promises and so on on the horizon. But if you get another vendor on board, I shall spec it, as usual.","msgtype":"m.text"},"ts":1381525436000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(no amount of syntax sugar replaces synchronous programming)","msgtype":"m.text"},"ts":1381525457000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: not sure what you mean by \"bear in mind\". There are two very precise functions where you can send each type of port. You don't have to bear anything else in mind","msgtype":"m.text"},"ts":1381525462000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: well, generally when you're using MessagePort, especially when you're using it in a capabilities mindset, you'll have zillions of these flying around all over the place and you won't generally want to know what kind of port you're being handed","msgtype":"m.text"},"ts":1381525517000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: asking people to rewrite hundreds-of-thousands-of-lines codebases from sync APIs to async APIs is not really feasible","msgtype":"m.text"},"ts":1381525517000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: but here, you do have to bear in mind what kind of port it is","msgtype":"m.text"},"ts":1381525528000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sicking: e.g. it matters who creates your channel","msgtype":"m.text"},"ts":1381525534000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: that's why you can always check the type","msgtype":"m.text"},"ts":1381525554000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"wasn't particularly planning on asking anyone to rewrite their codebase","msgtype":"m.emote"},"ts":1381525567000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sicking: right, you have to bear it in mind. that's all i'm saying.","msgtype":"m.text"},"ts":1381525578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"anyway, like i said, i'm not the one you have to convince. if you get another vendor on board, file a bug, i'll spec it","msgtype":"m.text"},"ts":1381525613000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: sure. Not hugely different from bearing in mind whether you are holding on to a Worker or a MessagePort","msgtype":"m.text"},"ts":1381525628000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: i would never hold on to a worker, personally.","msgtype":"m.text"},"ts":1381525641000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you don't have to when you can use ports, the great thing about ports is you don't need to know who's implementing the other side.","msgtype":"m.text"},"ts":1381525699000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sicking: re: compiling sync codebases down to JS: is task.js-style use of ES6 generators infeasible?","msgtype":"m.text"},"ts":1381525723000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hixie_: sure, but the use cases demand a different type of port here. That neccesitates bearing that difference in mind. I don't think we can get around that.","msgtype":"m.text"},"ts":1381525778000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: agreed, if we address this use case, this seems like a well-designed solution.","msgtype":"m.text"},"ts":1381525795000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: but sure, the system is more complicated with two types of channels than one","msgtype":"m.text"},"ts":1381525799000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hrm, now I'm remembering that you have to make everything async-with-generators all the way down, so probably impractical.","msgtype":"m.text"},"ts":1381525814000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: that's a good question","msgtype":"m.text"},"ts":1381525822000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: i suspect the overhead of making each function call a generator call is too high, but I don't actually know","msgtype":"m.text"},"ts":1381525853000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the use case of being able to implement blocking APIs for workers in other workers seems more interesting, to me at least","msgtype":"m.text"},"ts":1381525879000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jsbell: right, the fact that you have to do it everywhere is what makes it hard/slow","msgtype":"m.text"},"ts":1381525896000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: yeah, i don't think 'yield' really works for this. in part because you can't make the original call from the browser be an invokation of a generator.","msgtype":"m.text"},"ts":1381525902000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"afk, home","msgtype":"m.text"},"ts":1381525975000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jsbell: do you know if google can comment on compile-to-js strategies? So far my impression is that compile-to-nacl is the strategy?","msgtype":"m.text"},"ts":1381525976000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I have no idea re: strategy, but I'd ping dslomov","msgtype":"m.text"},"ts":1381526173000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hixie_: as far as I can tell the four choises we have is to say \"please rewrite your code\", \"please target something like NaCl\", \"use sync API\" or \"sorry, the web doesn't support your software\". The sync API is the least bad option IMHO. The first and last options are basically equivalent in many cases.","msgtype":"m.text"},"ts":1381526313000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: well, that's a simplification. they have to rewrite it anyway, typically, since the language is different. right? so really the question is, \"when porting our software to a vendor-neutral platform, what do we have to do?\" and the answers are \"a lot of work (you can use this sync API if it helps)\" or \"a huge amount of work (you'll have to rethink some of your architecture to use async APIs)\"","msgtype":"m.text"},"ts":1381526542000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: at some point in the future the \"compile existing codebase to web\" won't be an important use case. But I think that's only going to be true if we give people an on-ramp to migrate to the web. And the sync-api seems like the least invasive onramp. The alternative is to add a lot of other sync APIs to the platform (sync filesystem, sync IDB, sync websocket etc).","msgtype":"m.text"},"ts":1381526560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie_: no, there are tools to complie C++ to JS. So no rewrite is needed","msgtype":"m.text"},"ts":1381526593000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: i think it's already true, personally. but i agree that this api, if we care about that use case, is a reasonable solution. i'm not sure what you're trying to convince me of.","msgtype":"m.text"},"ts":1381526608000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: trying to convince you to add it to the spec :)","msgtype":"m.text"},"ts":1381526627000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: me thinking it's a good idea isn't going to add it to the spec. If that was all it took, requestAutocomplete() would be in already.","msgtype":"m.text"},"ts":1381526651000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sicking: what it takes is two (or ideally, four or five) vendors implementing.","msgtype":"m.text"},"ts":1381526667000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or at least commenting positively.","msgtype":"m.text"},"ts":1381526685000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok, i'll see what i can dig up","msgtype":"m.text"},"ts":1381526723000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: Hah, my attempt to make a demo using FF + task.js + Workers ran into https://bugzilla.mozilla.org/show_bug.cgi?id=487070","msgtype":"m.text"},"ts":1381528560000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: ha!","msgtype":"m.text"},"ts":1381528585000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: that bug will be WONTFIX soon","msgtype":"m.text"},"ts":1381528598000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: we're working on implementing the new generator syntax, which doesn't need js-version hacks","msgtype":"m.text"},"ts":1381528621000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: oh, wait, they already landed!","msgtype":"m.text"},"ts":1381528722000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: if you use an aurora or nightly build you should be able to use generators there","msgtype":"m.text"},"ts":1381528738000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: nifty","msgtype":"m.text"},"ts":1381528772000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"sicking: I'm not going to try now, and I bet task.js needs updates, but in theory https://gist.github.com/inexorabletash/6942721 would show what a demo using \"yield post\" would look like","msgtype":"m.text"},"ts":1381529127000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: you might need to use strict mode","msgtype":"m.text"},"ts":1381530018000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I'll also need to toss in function*","msgtype":"m.text"},"ts":1381530054000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: doesn't seem like 'let' is working in non-versioned JS in gecko yet :(","msgtype":"m.text"},"ts":1381531145000,"senderName":"sicking","senderId":"sicking@irc"}
]