[
{"content":{"body":"OI STOP BREAKING THE WEB YOU WANKERS","msgtype":"m.text"},"ts":1455605710000,"senderName":"tso","senderId":"tso@irc"},
{"content":{"body":"tell us how you really feel","msgtype":"m.text"},"ts":1455605774000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"So https://www.w3.org/Bugs/Public/show_bug.cgi?id=26365#c53 is the bug comment I was looking for where Hixie proposed a solution","msgtype":"m.text"},"ts":1455606566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone with Edge care to check http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3887 for me?","msgtype":"m.text"},"ts":1455612550000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What is the latest approach to get Edge running on a MacBook? I should probably get on that","msgtype":"m.text"},"ts":1455612865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: I was wondering if you could help me with an Apache .htaccess question","msgtype":"m.text"},"ts":1455613525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can try","msgtype":"m.text"},"ts":1455613542000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: I have a shared directory for several domains, therein I have an .htaccess that has RewriteCond %{HTTPS} !=on\\nRewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]","msgtype":"m.text"},"ts":1455613571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: now for some domains that have their own rewriterules, this ends up not being executed","msgtype":"m.text"},"ts":1455613589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: e.g., curl --HEAD http://annevk.nl/test gives a 404 rather than a redirect to the https equivalent","msgtype":"m.text"},"ts":1455613627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: annevk.nl has RewriteCond %{REQUEST_URI} ^/$\\nRewriterule ^(.*)$ https://annevankesteren.nl/ [L,R=302], fwiw","msgtype":"m.text"},"ts":1455613672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what is `ServerName` set to? I guess it‚Äôs just `ServerName annevk.nl` ‚Äî in that case, try `ServerName https://annevk.nl` and restart Apache","msgtype":"m.text"},"ts":1455613686000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: (both also have RewriteEngine on)","msgtype":"m.text"},"ts":1455613687000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: I cannot control Apache","msgtype":"m.text"},"ts":1455613708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(If I could I'd probably not run Apache)","msgtype":"m.text"},"ts":1455613735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so no access to mod_rewrite logs either?","msgtype":"m.text"},"ts":1455613759000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: probably do have access to logs","msgtype":"m.text"},"ts":1455613779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would this be wrong formatting https://paste.kde.org/prbc0g35f , that was whole in a single line","msgtype":"m.text"},"ts":1455613883000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"mathiasbynens: actually, so no","msgtype":"m.text"},"ts":1455613906000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I hope logging is enabled, since you can only enable it from <VirtualHost> which you cannot control","msgtype":"m.text"},"ts":1455613907000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: just normal HTTP logs","msgtype":"m.text"},"ts":1455613916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: \"Secure Connection Failed\"","msgtype":"m.text"},"ts":1455613947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: hmm, seems to work in another browser, I guess Nightly is doing some HTTPS experiment","msgtype":"m.text"},"ts":1455613989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: IDL should remain on a single line","msgtype":"m.text"},"ts":1455614002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: since it's inside <pre> we cannot do wrapping there","msgtype":"m.text"},"ts":1455614012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh yeah","msgtype":"m.text"},"ts":1455614029000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: not sure how to help, then :( I think it might be the `ServerName` thing. This can be confirmed by placing a test directory at `https://annevk.nl/foo/`, then checking what happens for `curl -I http://annevk.nl/foo`","msgtype":"m.text"},"ts":1455614241000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"(that‚Äôs `mod_dir`‚Äôs `DirectorySlash On` kicking in, which uses the `ServerName` scheme)","msgtype":"m.text"},"ts":1455614279000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: Location: http://annevk.nl/foo/","msgtype":"m.text"},"ts":1455614346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: then `ServerName` is just `annevk.nl` or `http://annevk.nl/`, but should be `https://annevk.nl`","msgtype":"m.text"},"ts":1455614391000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: I guess the question is whether there is another workaround apart from just copying the rewriterule from the top-level dir into the annevk.nl dir","msgtype":"m.text"},"ts":1455614435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: iirc things like mod_dir‚Äôs DirectorySlash On and `ErrorHandler`-stuff might take precedence over custom rewrite rules","msgtype":"m.text"},"ts":1455614452000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: if you can‚Äôt change the Apache config: not that I know of","msgtype":"m.text"},"ts":1455614484000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: to be clear, if I copy the rewriterule from the top-level dir into the annevk.nl dir it works","msgtype":"m.text"},"ts":1455614488000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool, but you‚Äôd still have the `Location: http://annevk.nl/foo/` problem I guess","msgtype":"m.text"},"ts":1455614530000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: no","msgtype":"m.text"},"ts":1455614555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: although it will take two redirects","msgtype":"m.text"},"ts":1455614579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: the problem seems to be mostly about how rewriterules are combined across directories","msgtype":"m.text"},"ts":1455614655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: could `RewriteBase` have anything to do with this? are you setting that explicitly for each `.htaccess` file?","msgtype":"m.text"},"ts":1455614807000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"It sounds like I want http://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewriteoptions Inherit","msgtype":"m.text"},"ts":1455614829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"goes to try that","msgtype":"m.emote"},"ts":1455614846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that works","msgtype":"m.text"},"ts":1455614897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1455614898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TIL","msgtype":"m.text"},"ts":1455614915000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"hmm, wouldn‚Äôt this potentially mess things up? ‚ÄúRules inherited from the parent scope are applied after rules specified in the child scope.‚Äù","msgtype":"m.text"},"ts":1455614927000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"happy to help :p","msgtype":"m.text"},"ts":1455614928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1455614947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TIL","msgtype":"m.text"},"ts":1455614949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: I guess I should do InheritDownBefore","msgtype":"m.text"},"ts":1455614996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: that will cause duplicate redirects but that's fine, since that initial redirect is really only for those not privy to HSTS","msgtype":"m.text"},"ts":1455615022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"üëçüèª","msgtype":"m.text"},"ts":1455615065000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"HTTP/1.1 500 Internal Server Error nice","msgtype":"m.text"},"ts":1455615104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh great, DreamHost only supports Inherit since it's still stuck on 2.2","msgtype":"m.text"},"ts":1455615198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So I guess the answer is duplication for each host that wants to use mod_rewrite","msgtype":"m.text"},"ts":1455615304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay...","msgtype":"m.text"},"ts":1455615307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/html/pull/699, thinking where should the attributes be placed then? (supported on documents and elements)","msgtype":"m.text"},"ts":1455617280000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: and they're not exposed on Window?","msgtype":"m.text"},"ts":1455617364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no","msgtype":"m.text"},"ts":1455617375000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"I would have assumed browsers to just put them on GlobalEventHandlers","msgtype":"m.text"},"ts":1455617446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: did you look into this?","msgtype":"m.text"},"ts":1455617463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: without looking up GlobalEventHandlers those are also available on window, right? per http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=3888 clipboard ones are on document, elements but not window","msgtype":"m.text"},"ts":1455617898000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: amm so putting them it in GlobalEventHandlers list (https://html.spec.whatwg.org/multipage/webappapis.html#globaleventhandlers), but it has to be defined in this list right?  https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-attributes sorry for the confusion","msgtype":"m.text"},"ts":1455617911000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"hallvors: yeah, so I guess these are special then","msgtype":"m.text"},"ts":1455617965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suppose it wouldn't be a problem adding them to GlobalEventHandlers but it doesn't seem to be what browsers do right now","msgtype":"m.text"},"ts":1455617973000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"(and perhaps adding them would conflict with scripts doing function oncopy(){} or var oncopy = ... in global scope..?)","msgtype":"m.text"},"ts":1455618022000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"ritsyy: I guess what needs to be done is have something called DocumentAndElementEventHandlers that is almost like GlobalEventHandlers but is not implemented by Window","msgtype":"m.text"},"ts":1455618028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: yeah, let's not even try it, too much compat fallout each time we do something like that","msgtype":"m.text"},"ts":1455618049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The web platform is full of special sauce :-]","msgtype":"m.text"},"ts":1455618055000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: okay so i should add by making a different list for it in https://html.spec.whatwg.org/multipage/webappapis.html#event-handler-attributes","msgtype":"m.text"},"ts":1455618151000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: yeah, I would put a new section before \"Event handlers on elements, Document objects, and Window objects\" that is almost like it, but doesn't include Window objects","msgtype":"m.text"},"ts":1455618211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: and then in the IDL definitions section later on, add a new interface before GlobalEventHandlers","msgtype":"m.text"},"ts":1455618237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: and then we need to make sure Document and Element implement that new interface you define, similar to how they implement GlobalEventHandlers today","msgtype":"m.text"},"ts":1455618268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: thank you for sorting this out, this is really useful","msgtype":"m.text"},"ts":1455618294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay the interface be added as  DocumentEventHandler?","msgtype":"m.text"},"ts":1455618311000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: I would say DocumentAndElementEventHandlers since it's also for Elements","msgtype":"m.text"},"ts":1455618334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, will complete this change first then this step needs more of understanding for me \" Document and Element implement that new interface you define, similar to how they implement GlobalEventHandlers today\", how should i do this","msgtype":"m.text"},"ts":1455618450000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: happy to work on it :)","msgtype":"m.text"},"ts":1455618483000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: so you'll see that document has \"Document implements GlobalEventHandlers;\" in its IDL and elements have something similar","msgtype":"m.text"},"ts":1455618511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: that is the magic line that makes an interface implement another interface","msgtype":"m.text"},"ts":1455618528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: so we want to add a line there for this new interface","msgtype":"m.text"},"ts":1455618551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay yes now i got that, great","msgtype":"m.text"},"ts":1455618628000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: will do it now, thanks a lot!","msgtype":"m.text"},"ts":1455618644000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: /img/daddy probably needs to have the font as a data: URL, since SVG's from 'content' can't reference external resources, right?","msgtype":"m.text"},"ts":1455619480000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: aah, sounds likely","msgtype":"m.text"},"ts":1455619510000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: seems like the data URI kitchen doesn't support HTTPS properly, I guess maybe it fails on SNI","msgtype":"m.text"},"ts":1455619670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, but you could do a file upload","msgtype":"m.text"},"ts":1455619969000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: already done and seems to work","msgtype":"m.text"},"ts":1455620080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah ok. yep works here also","msgtype":"m.text"},"ts":1455620113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thank you for noticing","msgtype":"m.text"},"ts":1455620229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I always thought it looked ugly, but I was assuming it was just a bug","msgtype":"m.text"},"ts":1455620239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(in the browser)","msgtype":"m.text"},"ts":1455620243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np. i think the font did work in some browser before. at least sometimes.","msgtype":"m.text"},"ts":1455620331000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, heycam|away, Ms2ger: https://github.com/heycam/webidl/pull/91","msgtype":"m.text"},"ts":1455623053000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"06:49 <annevk> nox: maybe, what do browsers do? <- I'm not sure I understand that question (re ByteString vs DOMString in WebSocket), should there be observable difference about this in UAs?","msgtype":"m.text"},"ts":1455623128000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox, pointer?","msgtype":"m.text"},"ts":1455623552000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Pointer?","msgtype":"m.text"},"ts":1455623605000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"About the WebSocket question","msgtype":"m.text"},"ts":1455623624000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: http://logs.glob.uno/?c=freenode%23whatwg&s=14+Feb+2016&e=14+Feb+2016&h=protocols#c985140","msgtype":"m.text"},"ts":1455623695000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1455623837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: yeah, ByteString throws for a lot more input iirc","msgtype":"m.text"},"ts":1455624301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah?","msgtype":"m.text"},"ts":1455624310000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I think it only accepts code points in the 00-FF range","msgtype":"m.text"},"ts":1455624335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: nice PR, heycam|away and bz should probably review it","msgtype":"m.text"},"ts":1455624441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool. :)","msgtype":"m.text"},"ts":1455624452000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"<meta http-equiv=default-style> is implemented in webkit/blink/gecko. default-style HTTP header only in gecko. :-|","msgtype":"m.text"},"ts":1455629490000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i am not able to find this section https://html.spec.whatwg.org/multipage/indices.html#all-interfaces :-/","msgtype":"m.text"},"ts":1455639248000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: I think that is generated","msgtype":"m.text"},"ts":1455639348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: so if you add an interface that will go there automatically","msgtype":"m.text"},"ts":1455639381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah i thought that too, but was not sure :)","msgtype":"m.text"},"ts":1455639426000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"build-script is still giving the same errors as \"Parsing...","msgtype":"m.text"},"ts":1455640511000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"Parse Error: (117129,9) unexpected body end tag","msgtype":"m.text"},"ts":1455640512000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"\"","msgtype":"m.text"},"ts":1455640512000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"i did change the script as annevk suggested that day but everytime different error comes up","msgtype":"m.text"},"ts":1455640581000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: you shouldn't have to modify the script","msgtype":"m.text"},"ts":1455640831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: you might have to update wattsi","msgtype":"m.text"},"ts":1455640843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: for both wattsi and html-build you should run \"git pull\"","msgtype":"m.text"},"ts":1455640857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: and build both in the same way you did before","msgtype":"m.text"},"ts":1455640864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suspect you may not have the latest version","msgtype":"m.text"},"ts":1455640881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: i did git fetch upstream","msgtype":"m.text"},"ts":1455640895000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1455640902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then git merge upstream/master","msgtype":"m.text"},"ts":1455640908000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"but it says already up-todate","msgtype":"m.text"},"ts":1455640920000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1455640963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"did you build wattsi again and make sure PATH points to this new version?","msgtype":"m.text"},"ts":1455641017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: amm how to check wattsi's version","msgtype":"m.text"},"ts":1455641054000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: there isn't a way yet","msgtype":"m.text"},"ts":1455641073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: however, when you run build you know where it ends up, so if you point PATH to that and remove other versions you may have, you should be good","msgtype":"m.text"},"ts":1455641106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay i am doing this","msgtype":"m.text"},"ts":1455641143000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: this error is their in wattsi https://paste.kde.org/pri9rrymc","msgtype":"m.text"},"ts":1455641253000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"ritsyy: did you create it with sudo the last time?","msgtype":"m.text"},"ts":1455641346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: you may have to empty the bin directory with sudo first","msgtype":"m.text"},"ts":1455641364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ritsyy: and then run the build script without sudo","msgtype":"m.text"},"ts":1455641375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: might be, oh okay doing it","msgtype":"m.text"},"ts":1455641409000,"senderName":"ritsyy","senderId":"ritsyy@irc"},
{"content":{"body":"annevk: What's the state of DOMException in the Web? Does only Firefox implement a constructor for these?","msgtype":"m.text"},"ts":1455642913000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: perhaps, but that should be stable","msgtype":"m.text"},"ts":1455643696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What do you mean?","msgtype":"m.text"},"ts":1455643713000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that DOMException as specified is unlikely to change","msgtype":"m.text"},"ts":1455643955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So Firefox should drop its constructor?","msgtype":"m.text"},"ts":1455644098000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: isn't the constructor specified?","msgtype":"m.text"},"ts":1455644228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where?","msgtype":"m.text"},"ts":1455644260000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://heycam.github.io/webidl/#es-DOMException-constructor-object","msgtype":"m.text"},"ts":1455644296000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can't navigate that spec. -_-","msgtype":"m.text"},"ts":1455644358000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Never mind me. :)","msgtype":"m.text"},"ts":1455644362000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: you basically want to always look for what section 4 says about a particular thing","msgtype":"m.text"},"ts":1455644384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok. I am taking note of this.","msgtype":"m.text"},"ts":1455644398000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: at some point Domenic will have time and section 3 will disappear; the distinction between IDL types and ECMAScript types is not super helpful","msgtype":"m.text"},"ts":1455644439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: Chrome implements the constructor now","msgtype":"m.text"},"ts":1455644466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Oh ok.","msgtype":"m.text"},"ts":1455644554000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Couldn't DOMException be defined with a proper interface and a new extended attribute [LegacyErrorClass]?","msgtype":"m.text"},"ts":1455647677000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I don't think that would buy us much, would just make things more complicated","msgtype":"m.text"},"ts":1455647852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It would eliminate prose and make it clear that it can piggyback IDL's stuff in UAs.","msgtype":"m.text"},"ts":1455647881000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"AFAICT, it has both the usual interface object an interface prototype object that interfaces have, and the codes can just be consts.","msgtype":"m.text"},"ts":1455647917000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"no it doesn't","msgtype":"m.text"},"ts":1455648059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it inherits from Error","msgtype":"m.text"},"ts":1455648063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hence LegacyErrorClass, like LegacyArrayClass.","msgtype":"m.text"},"ts":1455648192000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I doubt that is going to help much","msgtype":"m.text"},"ts":1455648314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://heycam.github.io/webidl/#es-DOMException-call I guess that's a special snowflake too?","msgtype":"m.text"},"ts":1455648376000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I think I'm at least going to implement LegacyErrorClass in Servo anyway because I think it can help implementation there. I will report back about it then.","msgtype":"m.text"},"ts":1455648400000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"not sure","msgtype":"m.text"},"ts":1455648401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can you imagine if you could get away with just discarding all of the special snowflakes in the platform?","msgtype":"m.text"},"ts":1455648430000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: But what would we do then?!","msgtype":"m.text"},"ts":1455648460000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"go on vacation","msgtype":"m.text"},"ts":1455648470000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Don't you do that already?","msgtype":"m.text"},"ts":1455648488000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"sure but getting rid of all the nonsense from the platform would probably be grounds for a good long one","msgtype":"m.text"},"ts":1455648528000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: <https://www.w3.org/2001/tag/doc/promises-guide#example-environment-ready> uses \"in parallel\" in exactly the way I keep saying I read it (the following substeps are independent and run parallel with each other), which is *not* the way it's defined (these substeps are a serial algorithm which is run in parallel with the rest of the steps in the outer","msgtype":"m.text"},"ts":1455650691000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"algorithm), *despite linking to the definition of \"in parallel\"*.  This is why I keep saying that \"in parallel\" is *not* a good phrase to use for this behavior.","msgtype":"m.text"},"ts":1455650692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It has two natural ways of reading it which are not equivalent, and people will continue to make these kinds of mistakes. :/","msgtype":"m.text"},"ts":1455650746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's an ordered set of steps though...","msgtype":"m.text"},"ts":1455653448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: anyway, you could write a PR against HTML and all the dependencies...","msgtype":"m.text"},"ts":1455653465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I think everyone else is fine with this term though","msgtype":"m.text"},"ts":1455653485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: that is, I've only seen you make that interpretation","msgtype":"m.text"},"ts":1455653498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No, in that example the two substeps are *not* ordered. They're two independent conditions that get run in parallel with each other.","msgtype":"m.text"},"ts":1455653685000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh I see, it shouldn't use numbered steps then","msgtype":"m.text"},"ts":1455653771000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"One of is always <ul>","msgtype":"m.text"},"ts":1455653799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but regardless of the markup, the prose is clearly applying the \"in parallel\" to those substeps, not to the subalgorithm+outer algorithm","msgtype":"m.text"},"ts":1455654246000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Because there's nothing returned by the previous step, nor is there any following steps in the outer algo.)","msgtype":"m.text"},"ts":1455654269000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's not multiple substeps though, it's a \"pick one of these\" which uses <li> for clarity","msgtype":"m.text"},"ts":1455654346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, that definition seems wonky, since it'll return a new promise each time","msgtype":"m.text"},"ts":1455654405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really understand how that text can work as-is, best not copy that","msgtype":"m.text"},"ts":1455654442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not copying it, I was looking at it for other reasons.  Domenic, ^^","msgtype":"m.text"},"ts":1455654552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The algo doesn't return anything, so yeah, I also agree the text is wonky and doesnt' wrok well as an example.","msgtype":"m.text"},"ts":1455654597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: nox: IMO we do need some IDL for defining exception subclasses. A few people have wanted that for media errors with extra properties etc.","msgtype":"m.text"},"ts":1455656865000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: there the work is done by \"when/if\", not \"in parallel\"","msgtype":"m.text"},"ts":1455656902000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Could you explain to me how is WebIDL's current DOMException's constructor a special snowflake, compared to an plain old interface constructor?","msgtype":"m.text"},"ts":1455656909000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"TabAtkins: as well as \"wait for one of the following to become true\"","msgtype":"m.text"},"ts":1455656918000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: I can see that the subset formulation is not great; they should probably be bullets","msgtype":"m.text"},"ts":1455656928000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: the only actual thing that happens in parallel is \"wait for one of the following to become true\"","msgtype":"m.text"},"ts":1455656944000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: it is meant to emulate ES Error subclasses","msgtype":"m.text"},"ts":1455656979000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: which e.g. can be called, not just constructed","msgtype":"m.text"},"ts":1455657010000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: also ideally it defines data properties","msgtype":"m.text"},"ts":1455657017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In which UA can it be called?","msgtype":"m.text"},"ts":1455657031000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: https://github.com/heycam/webidl/issues/55","msgtype":"m.text"},"ts":1455657045000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: What do you think of [LegacyErrorClass]?","msgtype":"m.text"},"ts":1455657138000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it seems reasonable, see my last comment in that thread. I'd prefer it be spelled [ErrorClass] or s/interface/exception though.","msgtype":"m.text"},"ts":1455657178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: there seem to be a lot of non-legacy use cases for it","msgtype":"m.text"},"ts":1455657193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Do we want that to be used in specs and whatnot?","msgtype":"m.text"},"ts":1455657193000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ok.","msgtype":"m.text"},"ts":1455657196000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It should be used sparingly and rarely","msgtype":"m.text"},"ts":1455657204000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but it's not legacy","msgtype":"m.text"},"ts":1455657207000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Fair enough.","msgtype":"m.text"},"ts":1455657231000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: Should it stay in WebIDL afterwards, or move back to DOM?","msgtype":"m.text"},"ts":1455657289000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(DOMException that is, not [ErrorClass].)","msgtype":"m.text"},"ts":1455657301000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: hmm, I'd still say Web IDL. It's \"foundational\".","msgtype":"m.text"},"ts":1455657317000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"doesn't have much to do with trees of nodes","msgtype":"m.text"},"ts":1455657334000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If we were naming it today I'd say \"WebException\" (and also fix a lot of other things about it, but sigh)","msgtype":"m.text"},"ts":1455657351000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah ah.","msgtype":"m.text"},"ts":1455657381000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Domenic: You can disguise and present it as some sort of tradition.","msgtype":"m.text"},"ts":1455657404000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"WebIDL got DOMException,","msgtype":"m.text"},"ts":1455657409000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"DOM got HTMLCollection.","msgtype":"m.text"},"ts":1455657414000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1455657481000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: how do I debug \"could not find 'ready' in bibliography data\". It doesn't give me a line number that I can see.","msgtype":"m.text"},"ts":1455658010000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: ah it's my use of [[ready]] nevermind","msgtype":"m.text"},"ts":1455658026000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Sorry about no line numbers, it's somewhere between \"very hard\" and \"impossible\" to fix with lxml.","msgtype":"m.text"},"ts":1455658054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: could you do the surrounding text node contents?","msgtype":"m.text"},"ts":1455658128000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Just didn't know what to Ctrl+F for","msgtype":"m.text"},"ts":1455658145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: why is line numbers hard to fix with lxml?","msgtype":"m.text"},"ts":1455658577000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Becasue lxml drops the line numbers on a fucking whim.","msgtype":"m.text"},"ts":1455658590000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: el.sourceline?","msgtype":"m.text"},"ts":1455658594000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nope, that's null for everything but <html>.","msgtype":"m.text"},"ts":1455658603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Common problem if you look it up.","msgtype":"m.text"},"ts":1455658607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, with lxml.html?","msgtype":"m.text"},"ts":1455658614000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1455658661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders if that's an libxml2 or lxml bug","msgtype":"m.emote"},"ts":1455658773000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: It seems like you may have also run into the the problem that the lxml html5parser ignores the ‚ÄúnamespaceHTMLElements=False‚Äù option","msgtype":"m.text"},"ts":1455663606000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://stackoverflow.com/questions/32731479/lxml-html5parser-ignores-namespacehtmlelements-false-option","msgtype":"m.text"},"ts":1455663614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I use a custom serializer anyway, so that's unimportant luckily.","msgtype":"m.text"},"ts":1455663692000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1455663727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(But if I recall correctly, I added that argument originally because it *was* printing namespaces on all the html elements, and adding it made it stop, so apparently it did work in the past, or does work for some printing methods, or something.)","msgtype":"m.text"},"ts":1455663966000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1455664267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don‚Äôt know how else I could call it differently. I was just testing with a simple toString call","msgtype":"m.text"},"ts":1455664307000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tostring(h5.parse(stdin, h5.HTMLParser(namespaceHTMLElements=False)))","msgtype":"m.text"},"ts":1455664328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"where h5 is html5parser","msgtype":"m.text"},"ts":1455664345000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Actually, I still use html.tostring(0","msgtype":"m.text"},"ts":1455665078000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I only use my custom serializer for outputting the final document.","msgtype":"m.text"},"ts":1455665097000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: Yeah, namespaceHTMLElements definitely makes a difference for me.","msgtype":"m.text"},"ts":1455665419000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/SeFw0lLC/","msgtype":"m.text"},"ts":1455665464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm calling html5lib directly, tho, not relying on anything built into lxml.","msgtype":"m.text"},"ts":1455665650000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1455665653000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1455665658000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]