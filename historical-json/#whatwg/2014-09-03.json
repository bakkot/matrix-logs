[
{"content":{"body":"TabAtkins: is there a format for editor notes?","msgtype":"m.text"},"ts":1409704337000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"in bikeshed?","msgtype":"m.text"},"ts":1409704343000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"What do you mean by that?","msgtype":"m.text"},"ts":1409704350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess some sort of warning/note that explains something inline during the drafts","msgtype":"m.text"},"ts":1409704380000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Yeah, if you want them visible, just start a paragraph with \"Note:\"","msgtype":"m.text"},"ts":1409704426000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wasn't sure if you meant notes just to yourself (use HTML comments) or not.","msgtype":"m.text"},"ts":1409704440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's Note: for informative notes, Issue: for issues that you want to track (they're also collected into an index at the end of the spec), and Advisement: for things you want to draw special implementor attention to.","msgtype":"m.text"},"ts":1409704489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Plus <details class=why> if you want to embed a longer explanation in, but don't want it to distract the casual reader.","msgtype":"m.text"},"ts":1409704516000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah nice, get an arrow ;)","msgtype":"m.text"},"ts":1409704591000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"why is dev.w3.org down what happened ;-;","msgtype":"m.text"},"ts":1409706556000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp I believe you're looking for irc://irc.w3.org:6665/sysreq","msgtype":"m.text"},"ts":1409706597000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"although I don't seem to be able to connect to that either","msgtype":"m.text"},"ts":1409706613000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"power must have gone out in a little closet in boston","msgtype":"m.text"},"ts":1409706635000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"um \"It's not just you! http://www.w3.org looks down from here. \"","msgtype":"m.text"},"ts":1409706656000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://downforeveryoneorjustme.com/http://www.w3.org/","msgtype":"m.text"},"ts":1409706660000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"We're aware of that, caitp, tantek","msgtype":"m.text"},"ts":1409706785000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"I just noticed","msgtype":"m.text"},"ts":1409706787000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"is asking his colleagues","msgtype":"m.emote"},"ts":1409706802000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"hello tripu, I just noticed myself","msgtype":"m.text"},"ts":1409706806000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tripu - btw who is \"we\"? are you w3c staff? sorry I don't recognize your handle.","msgtype":"m.text"},"ts":1409707078000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Antonio Olmo Titos here -- I joined W3C's systems team a month ago","msgtype":"m.text"},"ts":1409707117000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"waits to see if https://twitter.com/w3c will tweet something.","msgtype":"m.emote"},"ts":1409707122000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"should have introduced himself earlier in this channel...","msgtype":"m.emote"},"ts":1409707131000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"naturally, while I was refreshing a page","msgtype":"m.text"},"ts":1409707192000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"caitp, tantek: W3C's web pages and IRC server are running again","msgtype":"m.text"},"ts":1409709088000,"senderName":"tripu","senderId":"tripu@irc"},
{"content":{"body":"thanks tripu","msgtype":"m.text"},"ts":1409709206000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Sample: file was only made constructable in the spec relatively recently","msgtype":"m.text"},"ts":1409718055000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what are people's thoughts on adding JSON5 to the web platform? or replacing JSON with JSON5? (iirc browsers already deviate from strict JSON a bit)","msgtype":"m.text"},"ts":1409729865000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"are the differences interoperably implemented and what are they?","msgtype":"m.text"},"ts":1409729900000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"They do?","msgtype":"m.text"},"ts":1409729901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm guessing things around single/double quotes and comments?","msgtype":"m.text"},"ts":1409729919000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Ms2ger: at least at the time it was implemented in presto we had to make a few violations because other browsers were even more lax and content depended on it. not sure what the situation is like today","msgtype":"m.text"},"ts":1409729962000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1409729975000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"foolip: i don't know about JSON5 interop","msgtype":"m.text"},"ts":1409730084000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"foolip: http://json5.org says the new features are optional which seems problematic","msgtype":"m.text"},"ts":1409730105000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"unquoted keys seems nice if we're going to have it in attributes","msgtype":"m.text"},"ts":1409730202000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: oh I had no idea JSON5 was a real thing, I thought it was code for \"JSON with error handling for browsers\"","msgtype":"m.text"},"ts":1409731311000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah we should trademark the 5 :-)","msgtype":"m.text"},"ts":1409731368000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"although i guess we don't use the 5 so much anymore","msgtype":"m.text"},"ts":1409731403000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Is Web* still cool?","msgtype":"m.text"},"ts":1409731995000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1409732186000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"foolip: naw, just the relevant name without fluff is the new black","msgtype":"m.text"},"ts":1409732236000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hard to turn that into a buzzword","msgtype":"m.text"},"ts":1409737672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Disappointed we haven't managed to use \"web\" and \"5\" together. Like WebURL5","msgtype":"m.text"},"ts":1409740080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, sounds like a Chrome component","msgtype":"m.text"},"ts":1409741017000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"WTFURL2","msgtype":"m.text"},"ts":1409741371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"WTFW3C^N","msgtype":"m.text"},"ts":1409741670000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"URL5.1, obviously","msgtype":"m.text"},"ts":1409742184000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"SJON5 is not a real thing","msgtype":"m.text"},"ts":1409742203000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"some people made some parsers. it has no real adoption.","msgtype":"m.text"},"ts":1409742217000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's how most technologies start out","msgtype":"m.text"},"ts":1409742272000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, zcorpan_, do you have recommendations for test bisect tools that are able to parse HTML, JS and CSS sufficiently to not spend time trying bisect steps that will obviously fail, i.e. things like omitting </style>, </script> or cutting JS such that it's a syntax error?","msgtype":"m.text"},"ts":1409744099000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"test minimizer I should say perhaps","msgtype":"m.text"},"ts":1409744112000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I don't know that exists","msgtype":"m.text"},"ts":1409744150000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in your long QA experience, is this something that sounds good in theory but in practice it's fast enough to just try manually?","msgtype":"m.text"},"ts":1409744183000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"There's a tool for pure js at Opera","msgtype":"m.text"},"ts":1409744185000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"it depends\"","msgtype":"m.text"},"ts":1409744199000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"foolip: for crashers or in general?","msgtype":"m.text"},"ts":1409744235000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"The tools are helpful, but unless the failure mode is very obvious it can be difficult to write a correct pass condition","msgtype":"m.text"},"ts":1409744261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Our security people might have something, but I don't know if they share","msgtype":"m.text"},"ts":1409744261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in general, just reducing a test case, whether or not the reduced test case is pass or fail would be up to the layer invoking the script","msgtype":"m.text"},"ts":1409744277000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: i'm not aware of such scripts but there might be something out there","msgtype":"m.text"},"ts":1409744331000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Right, generally you need to know if it passed or failed in order to decide which reduction to try next","msgtype":"m.text"},"ts":1409744334000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i always did it manually or used devtools to find the problem, or a combination","msgtype":"m.text"},"ts":1409744385000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Anyway, I am aware of syntax-unaware tools, and language-specific tools, but nothing that can deal with all of HTML+CSS+JS in an intelligent way","msgtype":"m.text"},"ts":1409744407000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, it seems like that's what we all do :)","msgtype":"m.text"},"ts":1409744407000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"ok, I guess that might make a fun side project then, but since it doesn't exist people probably don't really need it that badly","msgtype":"m.text"},"ts":1409744466000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(I'm reading a book called Why Programs Fail and the example used is from the old Gecko BugAThon, but the test case reducer used is completely generic.)","msgtype":"m.text"},"ts":1409744507000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Lithium?","msgtype":"m.text"},"ts":1409744519000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does JSON5 allow comments and single quotes?","msgtype":"m.text"},"ts":1409744539000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1409744546000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"jgraham: the tool in the book is ddmin: https://www.st.cs.uni-saarland.de/whyprogramsfail/code/dd/ddmin.py","msgtype":"m.text"},"ts":1409744554000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Actually just allowing comments is probably enough to win","msgtype":"m.text"},"ts":1409744556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I never understood why TC39 did not just add that","msgtype":"m.text"},"ts":1409744577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And now they have this weird mentality of not being able to make a forward compatible change","msgtype":"m.text"},"ts":1409744590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: Oh, wow that's very simple","msgtype":"m.text"},"ts":1409744649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"foolip: Lithium is http://www.squarefree.com/2007/09/15/introducing-lithium-a-testcase-reduction-tool/","msgtype":"m.text"},"ts":1409744663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, that looks like it's trying to improve upon ddmin","msgtype":"m.text"},"ts":1409744674000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but any non-language-aware tools seems like it's going to waste too much time on stupid things","msgtype":"m.text"},"ts":1409744707000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"It's not too bad","msgtype":"m.text"},"ts":1409744785000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There's also reducio at Opera for js, if the QA server is still running","msgtype":"m.text"},"ts":1409744813000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: found it, and it looks like you wrote a Reductor, \"Testcase reduction tool optimised for HTML files\", but that seems to have gone poof","msgtype":"m.text"},"ts":1409745098000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"was that any good?","msgtype":"m.text"},"ts":1409745103000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I don't think it was","msgtype":"m.text"},"ts":1409745303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think it really got used","msgtype":"m.text"},"ts":1409745318000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can someone run http://jsperf.com/animated-box-using-left/2 in different browsers and see if you reproduce my results? (requestAnimationFrame gets better score than setTimeout only in Safari)","msgtype":"m.text"},"ts":1409745805000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I used Reductio not too long ago.  A year I think :P","msgtype":"m.text"},"ts":1409745895000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Reducio, always write that wrong","msgtype":"m.text"},"ts":1409745906000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Sounds like a spell","msgtype":"m.text"},"ts":1409746262000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr","msgtype":"m.text"},"ts":1409746529000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Ms2ger: It's supposed to be ;)","msgtype":"m.text"},"ts":1409747090000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"tobie: ta","msgtype":"m.text"},"ts":1409749914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: bit sad","msgtype":"m.text"},"ts":1409749931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do we have any restrictions or expectations on URL schemes that can be put in Cache?","msgtype":"m.text"},"ts":1409752638000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"kAllowedSchemeRegexp = /s$/;","msgtype":"m.text"},"ts":1409752687000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I know ServiceWorkers scripts themselves are required to be https, but I thought Cache worked http as well... and I guess I'm asking how well do we need to support things like ftp:, file:, etc","msgtype":"m.text"},"ts":1409752764000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it was a joke, I have no idea","msgtype":"m.text"},"ts":1409752799000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1409752804000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"mainly the ignoreSearch query param is problematic if I have to fully parse all URL schemes to implement it... I'm inclined to make ignoreSearch work for http/https and a no-op in other URL schemes... at least in the first version","msgtype":"m.text"},"ts":1409752912000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: let's say http & https only","msgtype":"m.text"},"ts":1409752931000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"isn't it only an issue for weird schemes like data ?","msgtype":"m.text"},"ts":1409752946000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wanderview: those are the schemes serviceworker gets fetch events for","msgtype":"m.text"},"ts":1409752951000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"maybe ldap-ish stuff too","msgtype":"m.text"},"ts":1409752953000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wanderview: and while caches can be used independent of serviceworker, it's a good starting point that we can expand on later","msgtype":"m.text"},"ts":1409752983000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: should the spec be updated to say http/https only?  or just an implementation detail to start?","msgtype":"m.text"},"ts":1409753021000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can write an issue","msgtype":"m.text"},"ts":1409753027000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: An issue would be great :D","msgtype":"m.text"},"ts":1409753057000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks... will do... and sorry for the problem on this :-\\","msgtype":"m.text"},"ts":1409753082000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in my opinion which nobody asked for, it makes sense for URLs which are actually locations of resources, where search queries make sense","msgtype":"m.text"},"ts":1409753085000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"which probably includes most custom schemes, if custom schemes are supported","msgtype":"m.text"},"ts":1409753099000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wanderview: I feel guilty with how off-the-ball I've been with this stuff the past week or so. Especially as right now I'm using SVG path animations to make it looking like Mumm Ra the Ever Living is using his magic powers to control many documents at once.","msgtype":"m.text"},"ts":1409753165000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"caitp: the custom schemes are the problem for me... as we allow js scheme implementations which in turn requires parsing URLs on the main thread :-(","msgtype":"m.text"},"ts":1409753193000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: that sounds like an awesome talk!","msgtype":"m.text"},"ts":1409753202000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, that is a bit of a pickle for SW isn't it","msgtype":"m.text"},"ts":1409753228000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: although the cache can be used from window. But applying .match semantics to non-http resources is problematic","msgtype":"m.text"},"ts":1409753288000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"well anyways, it's not like there isn't a bit of a precedent for mixing work between main thread and (at least non-SW) worker threads","msgtype":"m.text"},"ts":1409753382000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if the api doesn't have to be synchronous it can probably be worked around","msgtype":"m.text"},"ts":1409753412000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but i'm just blabbing, haven't even read the cache stuff =) back to work~","msgtype":"m.text"},"ts":1409753437000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: confused about the sync vs async stuff… I don't think we have a problem there","msgtype":"m.text"},"ts":1409753464000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ahh I see","msgtype":"m.text"},"ts":1409753479000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"caitp: it can be worked around, yes... but it pains me to jump threads just to parse a string :-(","msgtype":"m.text"},"ts":1409753480000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"missed that comment","msgtype":"m.text"},"ts":1409753490000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"well if you're jumping between a worker thread and main thread, you're going to have some issues with sync","msgtype":"m.text"},"ts":1409753497000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"JakeA: Cache can't do http","msgtype":"m.text"},"ts":1409753728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that would violate MIX","msgtype":"m.text"},"ts":1409753735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you mean because SW script is https only, all resources placed in Cache from SW must be https?","msgtype":"m.text"},"ts":1409753794000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"apparently json5 didn't have anything optional for implementers","msgtype":"m.text"},"ts":1409753802000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"annevk: I don't see why cache can't be used from http pages, just like idb","msgtype":"m.text"},"ts":1409753824000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: if a serviceworker-controlled page contains an http img, and I respondWith(event.default()), what happens?","msgtype":"m.text"},"ts":1409754008000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Weird if that fails. Also weird if respondWith(fetch(event.request)) fails","msgtype":"m.text"},"ts":1409754039000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If it doesn't fail, I don't see why I can't put it in a cache","msgtype":"m.text"},"ts":1409754067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/440","msgtype":"m.text"},"ts":1409754329000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I'm going to internally propose this limitation for gecko implementation even if we don't add it to the spec","msgtype":"m.text"},"ts":1409754352000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"worksforme","msgtype":"m.text"},"ts":1409754403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1409754532000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah","msgtype":"m.text"},"ts":1409755492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: fetch() would definitely fail","msgtype":"m.text"},"ts":1409755532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: can't allow MIX","msgtype":"m.text"},"ts":1409755537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: even no-cors?","msgtype":"m.text"},"ts":1409755545000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1409755550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: this isn't already the case in Chrome? I'd think Mike West would see to that","msgtype":"m.text"},"ts":1409755616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also, I wouldn't mind restricting Cache to TLS as well, otherwise we'll get weird service worker polyfills","msgtype":"m.text"},"ts":1409755661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: non-TLS polyfills that is","msgtype":"m.text"},"ts":1409755674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there was a discussion at http://lists.w3.org/Archives/Public/public-webappsec/2014Jul/0049.html","msgtype":"m.text"},"ts":1409755681000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: then you'll just get cache polyfills based on idb","msgtype":"m.text"},"ts":1409755757000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if that were the case we would've seen one by now I think","msgtype":"m.text"},"ts":1409755780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we used one in our I/O talk","msgtype":"m.text"},"ts":1409755797000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: we should really fix our URL parser :-(","msgtype":"m.text"},"ts":1409758079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes... its ridiculous","msgtype":"m.text"},"ts":1409758108000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Y'know, once you clear away all the events from indexeddb, it's not too bad","msgtype":"m.text"},"ts":1409758257000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Switch them out for promises, some kind of async iterator for cursors, use a promise to define the lifetime of a transaction…","msgtype":"m.text"},"ts":1409758321000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Dunno if that can be done on top of the current API though","msgtype":"m.text"},"ts":1409758344000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"transactions are the tricky bit","msgtype":"m.text"},"ts":1409758554000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I believe the node-LevelDB folks when they say a batch API is good enough for 99% of use cases","msgtype":"m.text"},"ts":1409758568000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I also now understand how slightlyoff says that is not the best primitive, especially when dealing with other related mutexes in the system.","msgtype":"m.text"},"ts":1409758600000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeh","msgtype":"m.text"},"ts":1409758631000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hello, non San Franciscians","msgtype":"m.text"},"ts":1409759250000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"TabAtkins: should :enabled match :link? Your feedback would be very useful on https://www.w3.org/Bugs/Public/show_bug.cgi?id=26622","msgtype":"m.text"},"ts":1409765392000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, fwiw, it might only be abinader who's implemented that so far :)","msgtype":"m.text"},"ts":1409765423000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"in chrome, you mean?","msgtype":"m.text"},"ts":1409765439000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes","msgtype":"m.text"},"ts":1409765459000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"ah, excellent, you are here :-)","msgtype":"m.text"},"ts":1409765478000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abinader: sorry to flip flop the spec on you like this. If you think there's a good reason why we should get the other browsers to change rather than reverting Chrome (and the spec), please do comment on that bug.","msgtype":"m.text"},"ts":1409765508000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abinader: (or let me know here)","msgtype":"m.text"},"ts":1409765521000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: currently Blink, WebKit and Servo have this implemented","msgtype":"m.text"},"ts":1409765523000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"webkit as well?","msgtype":"m.text"},"ts":1409765529000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409765535000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"is that not in the nightlies yet?","msgtype":"m.text"},"ts":1409765575000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh, i have a pending update","msgtype":"m.text"},"ts":1409765590000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"applies","msgtype":"m.emote"},"ts":1409765592000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"lemme just have a double check","msgtype":"m.text"},"ts":1409765592000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"Hixie_, and Servo :)","msgtype":"m.text"},"ts":1409765644000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah, yes, webkit does do this too now","msgtype":"m.text"},"ts":1409765682000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ms2ger: servo has 0% market share. so it's not exactly on my radar.","msgtype":"m.text"},"ts":1409765692000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"no offense :-)","msgtype":"m.text"},"ts":1409765698000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is offended","msgtype":"m.emote"},"ts":1409765715000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's a pretty recent change everywhere, I think","msgtype":"m.text"},"ts":1409765728000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"clearly, since i had to update my nightly :-)","msgtype":"m.text"},"ts":1409765739000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abinader: did you have a particular motivation for this change other than it being what the spec says?","msgtype":"m.text"},"ts":1409765927000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gah, i hate changing the spec on people like this","msgtype":"m.text"},"ts":1409765941000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but on the other hand, it's a change to the platform and i hate doing that to web devs too","msgtype":"m.text"},"ts":1409765965000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: nope, no particular reason","msgtype":"m.text"},"ts":1409766029000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"Hixie_: but wouldn't it be reasonable to anchors, areas & links w/o an href to become disabled, then?","msgtype":"m.text"},"ts":1409766088000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"if that is what's missing","msgtype":"m.text"},"ts":1409766113000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"well, those just aren't links","msgtype":"m.text"},"ts":1409766141000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think we could imagine a world where we have <a href=\"...\" disabled>","msgtype":"m.text"},"ts":1409766154000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"especially for links that are basically just hooks for javascript to change the display","msgtype":"m.text"},"ts":1409766169000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but i haven't seen much demand for that, if any","msgtype":"m.text"},"ts":1409766181000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1409766222000,"senderName":"abinader","senderId":"abinader@irc"},
{"content":{"body":"I have tried to do that and been disappointed when it doesn't work","msgtype":"m.text"},"ts":1409766223000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so, um, i demand it","msgtype":"m.text"},"ts":1409766229000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it's useful for things where the designer wants it to look like a button but it navigates to a different URL so you use an <a>. But then you are sad that your CSS [disabled] style doesn't work. And then you have to change your CSS to [disabled], .disabled and you have to use class=\"disabled\" and change your JS and stuff","msgtype":"m.text"},"ts":1409766292000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I have lived this","msgtype":"m.text"},"ts":1409766294000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: If I have a url object & set .search to \"\", the href has \"?\" at the end. Is there any way to prevent this?","msgtype":"m.text"},"ts":1409766661000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":".search = null?","msgtype":"m.text"},"ts":1409766702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1409766714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1409766717000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"setting to the empty string should do it","msgtype":"m.text"},"ts":1409766719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah yes","msgtype":"m.text"},"ts":1409766743000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"see step 2 of setting http://url.spec.whatwg.org/#dom-url-search","msgtype":"m.text"},"ts":1409766751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I see it now, I was looking at just the serializer & thought the same as Ms2ger","msgtype":"m.text"},"ts":1409766783000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Chrome does it wrong, will file a bug","msgtype":"m.text"},"ts":1409766790000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: annevk: setting .search to \"\" should leave the # ref section intact, right?","msgtype":"m.text"},"ts":1409766879000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1409766889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409766890000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1409766892000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it manipulates the query component, nothing else","msgtype":"m.text"},"ts":1409766905000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1409766908000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic_: what was the reason for disabling the link?","msgtype":"m.text"},"ts":1409767062000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it wasn't applicable in the current state of the UI, for some reason... maybe some stuff had to be filled out first before they could move on the next page or something","msgtype":"m.text"},"ts":1409767938000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: if it's just a link (something you can open in a new tab, for example), it's not clear how that would work","msgtype":"m.text"},"ts":1409768120000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic_: i guess maybe you could have a link to a preview page that involves information the user has to offer, or something","msgtype":"m.text"},"ts":1409768135000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yes, it wasn't a security disabled, just a \"don't do this right now, it doesn't make sense\" disabled","msgtype":"m.text"},"ts":1409768161000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409768382000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Domenic_: well, if you think we should keep that door open, comment on the bug saying you want :enabled to keep applying, i guess :-)","msgtype":"m.text"},"ts":1409768405000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Btw, I don't have an opinion on that bug, and am happy to edit in whatever direction is necessary.","msgtype":"m.text"},"ts":1409770949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JakeA: can you explain what the purpose of this is in BatchCacheOperations 3.3.5.1?  \"If any of the values in addedRequests matches requestResponse[0], then: Throw an \"InvalidStateError\" exception.\"","msgtype":"m.text"},"ts":1409771373000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh... is it saying if we delete one of the requests we just added in a single batch operation?","msgtype":"m.text"},"ts":1409771444000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"then thats illegal?","msgtype":"m.text"},"ts":1409771449000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep!","msgtype":"m.text"},"ts":1409771476000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Felt like the right thing to do","msgtype":"m.text"},"ts":1409771480000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and it leaves the batch operation partially applied?","msgtype":"m.text"},"ts":1409771492000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nah, it should abort the transition & revery","msgtype":"m.text"},"ts":1409771506000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"revert*","msgtype":"m.text"},"ts":1409771508000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is that covered by running the steps \"atomically\"?","msgtype":"m.text"},"ts":1409771524000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in spec-speak","msgtype":"m.text"},"ts":1409771528000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"transaction*","msgtype":"m.text"},"ts":1409771530000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: it's intended to, although it probably should be more specific","msgtype":"m.text"},"ts":1409771563000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so this can only happen in the addAll() case currently","msgtype":"m.text"},"ts":1409771599000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1409771605000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1409771607000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1409771612000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1409771646000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1409771650000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is there a definition of \"match\" in that case?  I assume it should be doing something similar to [[QueryCache]] logic","msgtype":"m.text"},"ts":1409771682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, it should. Hmm, the spec is a little patchy here.","msgtype":"m.text"},"ts":1409771741000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"k, I'll write an issue","msgtype":"m.text"},"ts":1409771751000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Cheers","msgtype":"m.text"},"ts":1409771756000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Sorry about htat","msgtype":"m.text"},"ts":1409771759000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that*","msgtype":"m.text"},"ts":1409771761000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: also, why only the first element in the response array?","msgtype":"m.text"},"ts":1409771765000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"gah, can't type tonight","msgtype":"m.text"},"ts":1409771766000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1409771769000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, that's wrong, it should be checking all the items added so far","msgtype":"m.text"},"ts":1409771814000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: should it be inside the deletion loop? so as we delete each item we first check to see if it matches?","msgtype":"m.text"},"ts":1409771850000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, that works","msgtype":"m.text"},"ts":1409771976000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"great, thanks","msgtype":"m.text"},"ts":1409771987000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://github.com/slightlyoff/ServiceWorker/issues/444","msgtype":"m.text"},"ts":1409771992000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"are you trying to add more confusing syntax that is totally bonkers compared to other languages with similar syntax domenic","msgtype":"m.text"},"ts":1409771996000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"wanderview: I was working on an idb polyfill earlier & I just did the check up-front, but I was only implementing multi-put, so for every item about to be put, check items earlier in the array, if there's a match, reject","msgtype":"m.text"},"ts":1409772047000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1409772071000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"\"about to be put\", I mean \"every item in the to-put array\", I did the check before putting any items","msgtype":"m.text"},"ts":1409772120000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess that would work for addAll also","msgtype":"m.text"},"ts":1409772162000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"because it looks like you're saying `<context>::<token>(<...args>)` is a syntax sugar for `<token>.call(<context>, <...args>)`, but that's not how it feels to cplusplusy people imo","msgtype":"m.text"},"ts":1409772301000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: could you reply to bz on the closest() / matches() thread? Would be nice to move on. Or should I prepare some examples first so we can judge better?","msgtype":"m.text"},"ts":1409773442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, sorry, I'm only half-in due to a head-cold.  I was trying to think of some examples, but if you have some for either way, that would be helpful.","msgtype":"m.text"},"ts":1409773476000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can anyone think of a part of the web platform that compares two URLs for common path segments?","msgtype":"m.text"},"ts":1409773605000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cookies have something similar","msgtype":"m.text"},"ts":1409773612000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but not on URLs","msgtype":"m.text"},"ts":1409773619000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"document.domain has something similar for hosts","msgtype":"m.text"},"ts":1409773624000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: CSS's :local-link() pseudo.","msgtype":"m.text"},"ts":1409773656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is that specced anywhere? i can't find it in selectors","msgtype":"m.text"},"ts":1409773734000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sorry, it got punted: http://dev.w3.org/csswg/selectors/deferred-for-level-5","msgtype":"m.text"},"ts":1409773810000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Because we weren't sure on what the right semantic was for comparing path segments.)","msgtype":"m.text"},"ts":1409773833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The issue at the bottom really captures the problem.","msgtype":"m.text"},"ts":1409773865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1409773919000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well i guess i'll just have to spec my own algorithm then","msgtype":"m.text"},"ts":1409774003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bummer","msgtype":"m.text"},"ts":1409774004000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"The algorithm itself isn't the problem, it's figuring out the defaults. If you can do that, we can match.","msgtype":"m.text"},"ts":1409774151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What is your context here?","msgtype":"m.text"},"ts":1409774158000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: FALLBACK in manifests has to only work in a subpath of the manifest's path","msgtype":"m.text"},"ts":1409775440000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: it's similar, but probably not identical enough","msgtype":"m.text"},"ts":1409775448000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Mm, yeah, probably.","msgtype":"m.text"},"ts":1409775461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyway it's not a big deal, i was just hoping there might be something i could point to instead of having to do the work myself :-)","msgtype":"m.text"},"ts":1409775468000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"JakeA: ServiceWorkers should now be allowed over http on localhost in FF nightly:  https://hg.mozilla.org/mozilla-central/rev/cea25477ad0f","msgtype":"m.text"},"ts":1409778333000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: just saw the ticket, excellent!","msgtype":"m.text"},"ts":1409778369000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh yea.. forgot you reported that one :-)","msgtype":"m.text"},"ts":1409778405000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: is there a canonical test suite for the URL standard, specifically for the parsing algorithm?","msgtype":"m.text"},"ts":1409787666000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"one of my planned hobby projects is to implement its parsing rules, but I might need to start by making a test suite","msgtype":"m.text"},"ts":1409787702000,"senderName":"othermaciej","senderId":"othermaciej@irc"}
]