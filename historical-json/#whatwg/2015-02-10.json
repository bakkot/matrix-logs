[
{"content":{"body":"Domenic: I see \"Agreement to the DCO is thus transmitted with each patch.\" but I don't find an actual description of how the agreement is actually recorded/transmitted","msgtype":"m.text"},"ts":1423531131000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it appears to be the \"Signed-off-by: Name <email>\" lines in a given patch","msgtype":"m.text"},"ts":1423531166000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah wait the paragraph just before that","msgtype":"m.text"},"ts":1423531167000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm a little unclear why asking a developer to include a signed-off-by line would be less onerous than asking them to sign a CLA","msgtype":"m.text"},"ts":1423531187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that plus I wonder what happens if they forget to include that line in the commit message","msgtype":"m.text"},"ts":1423531250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess reviewers are supposed to check for that before they merge anything","msgtype":"m.text"},"ts":1423531271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/ResponsiveImagesCG/picture-element/issues/256","msgtype":"m.text"},"ts":1423531359000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yep, saw that you had raised that. I have no strong opinion on it either way. I don't think it would be any harder to implement a check for than any other of the esoteric requirements for srcset+sizes","msgtype":"m.text"},"ts":1423531532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: we're already at the point with the validator where the requirements have necessitated breaking abstractions in the code in order to implement","msgtype":"m.text"},"ts":1423531590000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well maybe not necessitated, but at least I couldn't figure out a way to add some things without violating a few","msgtype":"m.text"},"ts":1423531665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: e.g., this is what the \"Require sizes attr when srcset specifies width\" check looks like: Require sizes attr when srcset specifies width","msgtype":"m.text"},"ts":1423531714000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1423531717000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/validator/validator/commit/8a4adc9834eeb8994deefed9948bc063cc79ce93","msgtype":"m.text"},"ts":1423531721000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all of the datatype checks in the validators are done using singleton instances of the particular classes that do each check","msgtype":"m.text"},"ts":1423531799000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok. for the issue i'm leaning towards just changing the grammar to require the default length","msgtype":"m.text"},"ts":1423531889000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok. I think that might at least not have the particular issue that the width-required change did.","msgtype":"m.text"},"ts":1423532129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: part of the thing that complicates implementing these check is the sort of circular dependency between srcset and sizes with regard to width descriptors","msgtype":"m.text"},"ts":1423532204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in that the spec says both, \"If a source element has a sizes attribute present or an img element has a sizes attribute present, all image candidate strings for that element must have the width descriptor specified.\" and (now also) \"If the srcset attribute has any image candidate strings using a width descriptor, the sizes attribute must also be present, and the value must be a valid source size list.","msgtype":"m.text"},"ts":1423532242000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Spec bugs: 26537","msgtype":"m.text"},"ts":1423532248000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oofs","msgtype":"m.text"},"ts":1423532260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i am aware of the two-way dependency, i'm not familiar enough with your impl to tell if there's a better way to do it","msgtype":"m.text"},"ts":1423532343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah was just thinking out loud","msgtype":"m.text"},"ts":1423532410000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I reckon Henri could figure out a more elegant way for now what's there works fine","msgtype":"m.text"},"ts":1423532470000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1423532524000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic: I guess the DCO/Signed-off-by thing is not meant to be any less onerous for contributors than signing a CLA isãƒ¼but I think one advantage is that it obviates any need to have any process for signing the CLA that's separate from the process for creating a patch/PR, and especially that it obviates the need to keep any separate record somewhere of who's signed the CLA","msgtype":"m.text"},"ts":1423539739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since the record of agreements is just right there within the change history for the sources","msgtype":"m.text"},"ts":1423539781000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie, inform hsivonen when you have a minute please take a look at the following and let me know if you're OK with it. Basically it just refines fatal-error messages for files with content-type mismatches to include mention of the URL for the file. It seems safe to do since it's not leading any info the user doesn't already know. https://github.com/validator/validator/commit/c98215c55d2a8cd433877da23119","msgtype":"m.text"},"ts":1423554261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1423554261000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"16c9ebbfd342","msgtype":"m.text"},"ts":1423554267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"botie, inform hsivonen https://github.com/validator/validator/commit/c98215c55d2a8cd433877da2311916c9ebbfd342","msgtype":"m.text"},"ts":1423554286000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1423554286000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"hey guys","msgtype":"m.text"},"ts":1423556152000,"senderName":"ineedhelpors","senderId":"ineedhelpors@irc"},
{"content":{"body":"in need of advice","msgtype":"m.text"},"ts":1423556157000,"senderName":"ineedhelpors","senderId":"ineedhelpors@irc"},
{"content":{"body":"paying $10 btc if sum1 can help me with a file upload issue","msgtype":"m.text"},"ts":1423556368000,"senderName":"ineedhelpors","senderId":"ineedhelpors@irc"},
{"content":{"body":"Hixie: per https://twitter.com/sgalineau/status/564904540906872833 we should probably list instructions for how to unsubscribe","msgtype":"m.text"},"ts":1423556609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you should probably make it a 1 or 2 step process","msgtype":"m.text"},"ts":1423556695000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"and easy enough to figure out that nobody needs to dig around to find instructions and follow them","msgtype":"m.text"},"ts":1423556727000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"I suspect it's as easy as putting un in the obvious place of the subscribe address","msgtype":"m.text"},"ts":1423556801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are there any plans for a Cookie interface in the DOM? E.g. for setting/getting cookies in a more object-oriented fashion, and removing the need for string parsing as much (ala classList)","msgtype":"m.text"},"ts":1423557893000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Not afaik","msgtype":"m.text"},"ts":1423557910000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I think the recommendation is to leave cookies as a network affair to persist some state about the user","msgtype":"m.text"},"ts":1423557958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And put actual data either locally or on the server somehow","msgtype":"m.text"},"ts":1423557967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems the latest trend is to write a spec and have browsers implement it, instead of writing a library and poplarising it. I want in :)","msgtype":"m.text"},"ts":1423557968000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Heh, I think it's always been a bit of both","msgtype":"m.text"},"ts":1423558003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that's what the big apps do (e.g. Google, Wikipedia, ..)","msgtype":"m.text"},"ts":1423558011000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"typically only one main cookie, though that's never really true","msgtype":"m.text"},"ts":1423558028000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Not having to parse and construct document.cookie would be nice :)","msgtype":"m.text"},"ts":1423558057000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"rhartl/jquery-cookie/issues/349","msgtype":"m.text"},"ts":1423558289000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"https://github.com/carhartl/jquery-cookie/issues/349","msgtype":"m.text"},"ts":1423558292000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Cookie.set(), get(), remove()","msgtype":"m.text"},"ts":1423558301000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: if you do want to propose something, remember that anything synchronous is unlikely to fly","msgtype":"m.text"},"ts":1423558754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't mind either way. I'm happy for it to be async.","msgtype":"m.text"},"ts":1423558911000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Though I'm curious with regards to race conditions","msgtype":"m.text"},"ts":1423558987000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"you wouldn't want one thing to set and another thing to check its existence and also start setting the same thing","msgtype":"m.text"},"ts":1423559015000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Though in a good app (or just a simple app?) a single key would be managed by the same code which would thus naturally be aware of it.","msgtype":"m.text"},"ts":1423559052000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Except when in multiple tabs of course.","msgtype":"m.text"},"ts":1423559062000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"with Promise and yield this can be abstracted though I suppose","msgtype":"m.text"},"ts":1423559180000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"annevk: You reckon it's feasible? I imagine even without the async benefit, the simplified and directer API for the browser would be worth something.","msgtype":"m.text"},"ts":1423559232000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"and if we made it a promise (or did you have another async method in mind?) it would be an opportunity to make cookie setting no longer blocking the main UI thread.","msgtype":"m.text"},"ts":1423559291000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: it's seems fairly easy to mock a library up to see how it works :)","msgtype":"m.text"},"ts":1423559466000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Any ideas for what would be a logical/sensible location? global Cookie? Cookieset? document.cookieset? The cross-over between document and window is getter better lately, but it still not clear to me which way it's moving.","msgtype":"m.text"},"ts":1423559566000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I guess for cookies, it's fine for it to not be attached to the document object, right?","msgtype":"m.text"},"ts":1423559594000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: why not make it a library first?","msgtype":"m.text"},"ts":1423559763000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1423559780000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: it would have to work in workers if we do something","msgtype":"m.text"},"ts":1423560148000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Krinkle: it's not clear that people want to do something though; making cookies a network affair has some obvious benefits","msgtype":"m.text"},"ts":1423560176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What you do mean by network affair? No longer exposed in JS entirely?","msgtype":"m.text"},"ts":1423560201000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: yeah, what HttpOnly does","msgtype":"m.text"},"ts":1423560225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1423560232000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yeah, especially lacking a JsOnly option","msgtype":"m.text"},"ts":1423560256000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"we use cookies entirely as a token that we're the same session. we'd rather use one of the other storage mechanisms","msgtype":"m.text"},"ts":1423560282000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"well that's indexed DB et al","msgtype":"m.text"},"ts":1423560282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"While most things I see use Storage for local stuff, there's a bunch of stuff out there that uses cookies. But being sent to the server each request for no reason","msgtype":"m.text"},"ts":1423560301000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"you can update older code","msgtype":"m.text"},"ts":1423560325000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Krinkle: we should offer more control over whether cookies are included in a fetch","msgtype":"m.text"},"ts":1423560331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Krinkle: but what we have for that is an all-or-nothing flag","msgtype":"m.text"},"ts":1423560348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which flag is that?","msgtype":"m.text"},"ts":1423560370000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"withCredentials in XMLHttpRequest, though it's limited to cross-origin fetches","msgtype":"m.text"},"ts":1423560398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fetch() has a way to do it same-origin","msgtype":"m.text"},"ts":1423560411000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, yeah","msgtype":"m.text"},"ts":1423560431000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"was just reading fetch.spec","msgtype":"m.emote"},"ts":1423560436000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"TabAtkins: is there someone/somewhere/something that collects layout use-cases that aren't possible with CSS?","msgtype":"m.text"},"ts":1423566143000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: there's this one: https://www.w3.org/dpub/IG/wiki/Pagination_Requirements","msgtype":"m.text"},"ts":1423566230000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: yeah, I guess I'm looking for something like that but general","msgtype":"m.text"},"ts":1423566363000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think it's hard to come up with general layout requirements that mean much - tying things to specific uses helps refine the requirement","msgtype":"m.text"},"ts":1423566465000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"JakeA: one of the big lacks is laying out elements in relation to other elements, but that's too vague to be useful","msgtype":"m.text"},"ts":1423566496000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"JakeA: laying out elements in relation to a page (for instance) helps focus the idea","msgtype":"m.text"},"ts":1423566518000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: heh, the issue I have is an element-to-element relation thing","msgtype":"m.text"},"ts":1423566562000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: looking for a place to add your issue to, then?","msgtype":"m.text"},"ts":1423566623000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: Well, maybe. I probably need to think about it a bit more, but was just wondering if there was a place for that type of thing","msgtype":"m.text"},"ts":1423566657000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: mostly just www-style, I think. Or it could be a new specifiction topic...","msgtype":"m.text"},"ts":1423566688000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"JakeA: the houdini folks tasked with the custom layout spec might be looking for use cases","msgtype":"m.text"},"ts":1423566728000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"So what's happening with the Ruby stuff? Are browsers implementing the stuff in the W3C spec?","msgtype":"m.text"},"ts":1423568949000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: about http://w3c-test.org/conformance-checkers/html/elements/a/href/userinfo-password-contains-pile-of-poo-novalid.html","msgtype":"m.text"},"ts":1423569266000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<a href=\"http://foo:ðŸ’©@example.com\"></a>","msgtype":"m.text"},"ts":1423569272000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that should actually be valid, right?","msgtype":"m.text"},"ts":1423569284000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders, I wish I knew","msgtype":"m.text"},"ts":1423569305000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: yeah, don't really see why it wouldn't be","msgtype":"m.text"},"ts":1423569397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1423569408000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: well perhaps <a> being empty is a problem?","msgtype":"m.text"},"ts":1423569409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nah that's not the intent","msgtype":"m.text"},"ts":1423569419000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wrote that test intending for it to just test whether pile-of-poo is allowed in the password part","msgtype":"m.text"},"ts":1423569456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: so <a href=\"http://ðŸ’©:fooâŠ™ec\"></a> should be valid too?","msgtype":"m.text"},"ts":1423569522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"pile-of-poo in username part","msgtype":"m.text"},"ts":1423569535000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1423569546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1423569549000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1423569551000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: bah","msgtype":"m.text"},"ts":1423571800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Periodic reminder that the RFC 2119 disclaimer has an erratum.","msgtype":"m.text"},"ts":1423572410000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Since nobody seems to know that.","msgtype":"m.text"},"ts":1423572438000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Errata ID 499","msgtype":"m.text"},"ts":1423572652000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"http://www.rfc-editor.org/errata_search.php?rfc=2119","msgtype":"m.text"},"ts":1423572653000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Seems like it has a bunch of typos. I remember Ian pointing out \"NOT RECOMMENDED\" once","msgtype":"m.text"},"ts":1423573311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure I even agree with the first two corrections there","msgtype":"m.text"},"ts":1423573823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm talking specifically about a single erratum.","msgtype":"m.text"},"ts":1423574025000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: http://www.rfc-editor.org/errata_search.php?eid=499 works","msgtype":"m.text"},"ts":1423574384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh, does it? I didn't realize. I searched the HTML for an id.","msgtype":"m.text"},"ts":1423574403000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(And found a whole lot of other issues.)","msgtype":"m.text"},"ts":1423574421000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I guess I overlooked the huge form at the top.","msgtype":"m.text"},"ts":1423574461000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Habit, I suppose.","msgtype":"m.text"},"ts":1423574469000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"JakeA: this comment makes me think again we need some kind of stale-while-invalidate method in Cache: https://github.com/slightlyoff/BackgroundSync/issues/17#issuecomment-73685856","msgtype":"m.text"},"ts":1423579301000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: can't you do that programmatically pretty easily?","msgtype":"m.text"},"ts":1423579443000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: http://jakearchibald.com/2014/offline-cookbook/#stale-while-revalidate","msgtype":"m.text"},"ts":1423579470000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: true... your statement \"you're more likely to create this poor experience with the fetch event\" made me think its kind of a footgun, though... would be nice to have a simpler way to DTRT","msgtype":"m.text"},"ts":1423579559000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: also, the browser could possibly optimize it if its a single method","msgtype":"m.text"},"ts":1423579593000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I guess we can just see what libraries emerge... if its necessary then maybe one of them will add a wrapper for stale-while-revalidate","msgtype":"m.text"},"ts":1423579633000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I think part of my reason for wanting this is that we have Cache.add()... why have that convenience method but not the stale-while-revalidate one? :-)","msgtype":"m.text"},"ts":1423579989000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm not sure a feature is justified for that. Putting everything in dev control makes it, as annevk said, something we can just advise users for. We avoided this error for Push/Notifications by design. Not sure why BG Sync is different","msgtype":"m.text"},"ts":1423581471000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: well... its not just something you would use for BG sync... but yea, thats fine","msgtype":"m.text"},"ts":1423581852000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't understand. You seem to be suggesting that BG sync is somehow not simply a question of waking/sending-an-event to a SW which is in full control....why?","msgtype":"m.text"},"ts":1423581899000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: I'm saying stale-while-revalidate would be useful for normal fetch event handling in addition to BG sync","msgtype":"m.text"},"ts":1423581964000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: and I'm saying that adding a special-case API when you have the full power to do it yourself is premature","msgtype":"m.text"},"ts":1423582043000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: I'd like to see evidence of patterns in use, not idle speculation in bugs","msgtype":"m.text"},"ts":1423582055000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: when I wrote \"yea, thats fine\" above.. I meant I'm not pushing to add a method and we don't need to argue about it :-)","msgtype":"m.text"},"ts":1423582105000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"slightlyoff: I just find it odd to have convenience methods like Cache.add() and .addAll()... but not other convenience methods","msgtype":"m.text"},"ts":1423582127000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1423582136000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it's fair","msgtype":"m.text"},"ts":1423582151000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"I guess what I'm getting at is we could sketch out super-common uses for add and addAll","msgtype":"m.text"},"ts":1423582168000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"stale-while-revalidate seems important, but I'm unclear how it fits into the evented lifecycle right now","msgtype":"m.text"},"ts":1423582193000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"we've talked about waitUntil in addition to respondWith for fetch events","msgtype":"m.text"},"ts":1423582217000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and if we see a lot of use of that to implement stale-while-revalidate, I'd be moved to add sugar","msgtype":"m.text"},"ts":1423582242000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"why would the life cycle have to change if we can already implement stale-while-revalidate with existing primitives?","msgtype":"m.text"},"ts":1423582264000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well, i think it'd be a bit of a hack today","msgtype":"m.text"},"ts":1423582592000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: without waitUntil, you can _in theory_ be killed while doing the revalidate bit","msgtype":"m.text"},"ts":1423582613000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: it's unlikely to happen","msgtype":"m.text"},"ts":1423582626000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wanderview: but it's an interesting question, and the opportunities for better CPU/memory usage aren't well studied yet","msgtype":"m.text"},"ts":1423582653000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: are you saying the UA is allowed to kill the SW before cache.put() here? http://jakearchibald.com/2014/offline-cookbook/#stale-while-revalidate","msgtype":"m.text"},"ts":1423582690000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or before the cache.put() resolves I guess... would be nice if the spec said something about keeping the SW alive until in-flight network requests are complete or something","msgtype":"m.text"},"ts":1423582729000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that'd give an easy trick for keeping it alive for a long time","msgtype":"m.text"},"ts":1423582768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is the SW allowed to be killed if there is still script running?  that seems like an easier trick to keep it alive... setTimeout(), etc","msgtype":"m.text"},"ts":1423582840000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I would imagine it can be killed after each task","msgtype":"m.text"},"ts":1423582861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: as long as it keeps track of important tasks somehow such as incoming messages so they get handled the next time","msgtype":"m.text"},"ts":1423582891000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it would be nice if the spec was explicit about this stuff :-)  but without that, I think we would want to keep the SW alive until the network response body is complete in this code:  http://jakearchibald.com/2014/offline-cookbook/#stale-while-revalidate","msgtype":"m.text"},"ts":1423582996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well I've been asking for a more explicit lifecycle for a long time now","msgtype":"m.text"},"ts":1423583067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wanderview: slightlyoff has asked for fetchEvent.waitUntil for this case","msgtype":"m.text"},"ts":1423586021000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: seems like a good idea... I commented in the waitUntil issue","msgtype":"m.text"},"ts":1423586314000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: sure, that doesn't fix the lifecycle issue though","msgtype":"m.text"},"ts":1423586350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as in, specing timeouts etc if a non-resolving promise is passed to event.waitUntil (for example)","msgtype":"m.text"},"ts":1423586406000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: defining what happens with outstanding tasks","msgtype":"m.text"},"ts":1423586442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: making sure that the definitions are such that no fetch event can get lost, even if the UA does several reboots of the SW","msgtype":"m.text"},"ts":1423586463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1423586483000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: it seems we can improve our understanding of the life cycle with waitUntil() even if every corner case is not spec'd out yet... no?","msgtype":"m.text"},"ts":1423586805000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well, web developers have another straw to hold onto","msgtype":"m.text"},"ts":1423586840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(pessimistically put)","msgtype":"m.text"},"ts":1423586852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure it'll help implementers much","msgtype":"m.text"},"ts":1423586869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think it will... I have a specific issue waitUntil() would help with... namely around not canceling networking requests that are on-going like in JakeA's stale-while-revalidate recipe","msgtype":"m.text"},"ts":1423586922000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: soon gecko will cancel network requests when the SW thread is stopped","msgtype":"m.text"},"ts":1423586938000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it will cancel the SW network requests, right?","msgtype":"m.text"},"ts":1423586980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"waitUntil() seems easier to deal with than trying to infer how long to keep the SW thread alive through a heuristic there","msgtype":"m.text"},"ts":1423586982000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1423586985000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not new fetches coming from a worker or document?","msgtype":"m.text"},"ts":1423586995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it will cancel a fetch() started in the SW... a worker or document that does a fetch() cancels it when you navigate away from the document","msgtype":"m.text"},"ts":1423587022000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(same thing as stopping the worker thread...)","msgtype":"m.text"},"ts":1423587033000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Yeah, but if we do that then I don't understand why we don't put waitUntil() on the global...","msgtype":"m.text"},"ts":1423587037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And of course we have to protect against waitUntil() abuse","msgtype":"m.text"},"ts":1423587048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: because you can't keep a dedicated worker alive if its parent document has navigated away!  that seems... to explode my brain","msgtype":"m.text"},"ts":1423587071000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It just moves the problem elsewhere, e.g. waitUntil(new Promise(() => {}))","msgtype":"m.text"},"ts":1423587086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it seems waitUntil is SW specific because it has unique (ill defined) shutdown conditions","msgtype":"m.text"},"ts":1423587097000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: all other workers have clearly defined shutdown conditions tied to a document","msgtype":"m.text"},"ts":1423587131000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"as far as I understand it","msgtype":"m.text"},"ts":1423587139000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: is http://www.w3.org/TR/html-design-principles/ still a thing, and if not, is there something that replaces it?","msgtype":"m.text"},"ts":1423587212000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: it isn't on the global because success/failure is meaningful to the event dispatcher","msgtype":"m.text"},"ts":1423587236000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"in the case of install & background sync for example","msgtype":"m.text"},"ts":1423587246000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: there was an editor's draft I can't find that has the baby steps principle","msgtype":"m.text"},"ts":1423587330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: what's written there is still valid, but it's no longer maintained","msgtype":"m.text"},"ts":1423587359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: perhaps we should adopt it as a wiki page","msgtype":"m.text"},"ts":1423587371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I like that","msgtype":"m.text"},"ts":1423587386000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I like the \"please remember your job\" appeals on public-webapps ignoring end users","msgtype":"m.text"},"ts":1423587521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh no, I don't","msgtype":"m.text"},"ts":1423587524000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: decided to stay away from this conversation too. (Well, mostly: https://twitter.com/tobie/status/561079141517524992)","msgtype":"m.text"},"ts":1423587784000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"lol dglazkov","msgtype":"m.text"},"ts":1423587954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what did I do?","msgtype":"m.text"},"ts":1423588008000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: in my example bug you posted a link to some cool techno","msgtype":"m.text"},"ts":1423588034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nooooo....","msgtype":"m.text"},"ts":1423588045000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: are you secretly a DJ at night?","msgtype":"m.text"},"ts":1423588068000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg","msgtype":"m.text"},"ts":1423588079000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"much embarrass","msgtype":"m.text"},"ts":1423588082000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it's quite enjoyable","msgtype":"m.text"},"ts":1423588094000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: uh... yeah.. that was my promotion tactic... that's it","msgtype":"m.text"},"ts":1423588170000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"it wasn't a copypasta at all","msgtype":"m.text"},"ts":1423588187000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"hehe, \"feel free to follow me on Twitter\"","msgtype":"m.text"},"ts":1423588188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: JakeA: what kind of device works without power connected and without a battery? (in regards to https://github.com/slightlyoff/BackgroundSync/issues/35)","msgtype":"m.text"},"ts":1423588311000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ohhh a riddle","msgtype":"m.text"},"ts":1423588332000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"just trying to understand the unicorn we are naming","msgtype":"m.text"},"ts":1423588348000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1423588352000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: steam engine :-)","msgtype":"m.text"},"ts":1423588393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"proposes the .isThisThingOn attribute.","msgtype":"m.emote"},"ts":1423588403000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"A wind up radio? One of those watches that takes energy from your movements?","msgtype":"m.text"},"ts":1423588405000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Something with solar panels?","msgtype":"m.text"},"ts":1423588422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the correct answer is solar powered browsers","msgtype":"m.text"},"ts":1423588424000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1423588428000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: \"chargingOnly\" intends to mean \"only sync if the device isn't discharging it's supply of power\"","msgtype":"m.text"},"ts":1423588430000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but for a desktop machine, without a battery, you could say it is not charging","msgtype":"m.text"},"ts":1423588443000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"because it has no battery to charge","msgtype":"m.text"},"ts":1423588455000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"What happens if it's a desktop machine currently relying on a UPS?","msgtype":"m.text"},"ts":1423588476000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: what about a power time estimate... \"do the thing if we think we have enough power for more than 4 hours\"... A/C power implies infinite time","msgtype":"m.text"},"ts":1423588505000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"over complicates all the things.","msgtype":"m.emote"},"ts":1423588518000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I would accept onSteamPower as an attribute","msgtype":"m.text"},"ts":1423588580000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I'm okay with acOnly","msgtype":"m.text"},"ts":1423588640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just dislike that \"ac\" is hard to understand if you don't know you're talking about power","msgtype":"m.text"},"ts":1423588674000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1423588685000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is with wanderview here","msgtype":"m.emote"},"ts":1423588685000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: what was wrong with my suggestions?","msgtype":"m.text"},"ts":1423588697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. excludeBattery seems pretty clear","msgtype":"m.text"},"ts":1423588718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or stationaryPower","msgtype":"m.text"},"ts":1423588731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"likes excludeBattery or something like it.","msgtype":"m.emote"},"ts":1423588753000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"avoidBattery","msgtype":"m.text"},"ts":1423588772000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"exceptBattery","msgtype":"m.text"},"ts":1423588775000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ohGodNotTheBattery","msgtype":"m.text"},"ts":1423588780000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"preserveBattery","msgtype":"m.text"},"ts":1423588790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1423588791000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk++","msgtype":"m.text"},"ts":1423588797000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: annevk: *Battery could mean devices with a battery","msgtype":"m.text"},"ts":1423588807000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"nothing to do with the battery discharging","msgtype":"m.text"},"ts":1423588818000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: preserveBattery seems kind of clear","msgtype":"m.text"},"ts":1423588829000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: yeah, that seems covered","msgtype":"m.text"},"ts":1423588842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"kind of clear\"... I aim high!","msgtype":"m.text"},"ts":1423588855000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: my laptop has a battery, but preserving isn't needed if power is plugged in","msgtype":"m.text"},"ts":1423588864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hm, it sounds like it'll still happen on battery but preserve it somehow, like a low power mode","msgtype":"m.text"},"ts":1423588890000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"maybe that's just me","msgtype":"m.text"},"ts":1423588894000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"notDuringDischarge but ew discharge","msgtype":"m.text"},"ts":1423588926000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1423588936000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I mean the UA might still do it on battery I think","msgtype":"m.text"},"ts":1423588939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think we want to give the app absolute control here","msgtype":"m.text"},"ts":1423588950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"All these things are hints","msgtype":"m.text"},"ts":1423588961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think preserveBattery makes sense... because the battery will be used as long as the device is on... and yea... gives wiggle room for the UA","msgtype":"m.text"},"ts":1423588966000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bikeshedding names makes me hungry","msgtype":"m.text"},"ts":1423589016000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The only use-case I have for this option is deferring it to a settings menu for the user, so the UA doing something different breaks that","msgtype":"m.text"},"ts":1423589034000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't follow that","msgtype":"m.text"},"ts":1423589075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, my podcast app has a menu, where I the user can say \"only sync when plugged in please\"","msgtype":"m.text"},"ts":1423589102000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Does the option have a use outside of user settings?","msgtype":"m.text"},"ts":1423589125000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Not sure, but if it's up to the user it shouldn't be up to the app","msgtype":"m.text"},"ts":1423589145000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, ideally all syncs should be in one settings menu in the browser, and the user gets to decide what connectivity or battery state they're restricted to","msgtype":"m.text"},"ts":1423589197000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but for that to work, you need to display the sync's description","msgtype":"m.text"},"ts":1423589215000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"which is set by the app","msgtype":"m.text"},"ts":1423589218000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"which means you get that problem","msgtype":"m.text"},"ts":1423589227000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(https://github.com/slightlyoff/BackgroundSync/issues/29)","msgtype":"m.text"},"ts":1423589256000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah, the user would just disable it for all syncs","msgtype":"m.text"},"ts":1423589266000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I'm happy for my podcast app to update feeds whenever, but not download podcasts - actually that means the sync still happens, the battery api would be used within the sync in that case","msgtype":"m.text"},"ts":1423589325000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1423589326000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"fyi... if anyone is interested in testing the gecko service worker implementation... I'll be posting updated builds here until everything is in the tree:  http://blog.wanderview.com/sw-builds/","msgtype":"m.text"},"ts":1423590207000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Anyone else have opinions on this? https://twitter.com/streamsstandard/status/565196470836396033","msgtype":"m.text"},"ts":1423590590000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I prefer silent... you're asking it to enter a state... its already in that state... not an error (in my opinion)","msgtype":"m.text"},"ts":1423590624000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"lunches","msgtype":"m.emote"},"ts":1423590649000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: Does fetch have enough infrastructure for specifying a HTTP-based protocol? Or how does one do that? The context is the WebDriver spec which specifies a HTTP-based API for remote controlling browsers. So it feels like you need some mechanism for parsing requests and constructing responses.","msgtype":"m.text"},"ts":1423591250000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"current spec is https://w3c.github.io/webdriver/webdriver-spec.html","msgtype":"m.text"},"ts":1423591279000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Domenic: agree with wanderview. It's in the spirit of clearTimeout(123456)","msgtype":"m.text"},"ts":1423591668000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"jgraham: well everything XHR and fetch() can do...","msgtype":"m.text"},"ts":1423593466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: it depends on the details I guess","msgtype":"m.text"},"ts":1423593476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, so I wonder if refering to Fetch is the right thing","msgtype":"m.text"},"ts":1423593523000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wasn't sure it had all the bits needed for a server though, since it's all about being a client","msgtype":"m.text"},"ts":1423593542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ooh","msgtype":"m.text"},"ts":1423594562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure, Fetch is heavily client-focused","msgtype":"m.text"},"ts":1423594586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you're underselling yourself annevk :). Service worker is like a server in many ways and the Fetch primitives (like Response) seem to be working pretty well there","msgtype":"m.text"},"ts":1423594781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So this is literally my internal monolouge on the subject played out on irc :)","msgtype":"m.text"},"ts":1423594995000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that would be an interesting experiment... build a web server where network requests produce an onfetch event and you respondWith() the response","msgtype":"m.text"},"ts":1423595398000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"would be a cool node module","msgtype":"m.text"},"ts":1423595411000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"just need some streams support :-)","msgtype":"m.text"},"ts":1423595447000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I really should start putting together some demos with the streams polyfill that's already all ready to go","msgtype":"m.text"},"ts":1423596729000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In Node especially","msgtype":"m.text"},"ts":1423596731000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Although to be fair there's https://streams.spec.whatwg.org/#example-rs-pull :P","msgtype":"m.text"},"ts":1423596751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hsivonen, at 2015-02-10 07:44 UTC, MikeSmith said: when you have a minute please take a look at the following and let me know if you're OK with it. Basically it just refines fatal-error messages for files with content-type mismatches to include mention of the URL for the file. It seems safe to do since it's","msgtype":"m.text"},"ts":1423598471000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"not leading any info the user doesn't already know. https://github.com/validator/validator/commit/c98215c55d2a8cd433877da23119 and at 2015-02-10 07:44 UTC, MikeSmith said: https://github.com/validator/validator/commit/c98215c55d2a8cd433877da2311916c9ebbfd342","msgtype":"m.text"},"ts":1423598471000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"wanderview: your blog needs some TLS","msgtype":"m.text"},"ts":1423602327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not supported on custom domains with github pages... I checked","msgtype":"m.text"},"ts":1423602343000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I put the images on people.mozilla.org behind https, though","msgtype":"m.text"},"ts":1423602353000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you would need to know that in advance to avoid being spoofed :-)","msgtype":"m.text"},"ts":1423602389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: that's kinda shitty with GitHub, but I guess it makes some sense","msgtype":"m.text"},"ts":1423602417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firebase hosting uses tls by default","msgtype":"m.text"},"ts":1423602429000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"just in case.","msgtype":"m.text"},"ts":1423602439000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: if you just do wanderview.github.io... https works... but there is no way to specify a cert for a custom domain","msgtype":"m.text"},"ts":1423602445000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I indirect behind CloudFlare because I am lazy...","msgtype":"m.text"},"ts":1423602753000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is there a guide on setting that up?","msgtype":"m.text"},"ts":1423602774000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it is pretty simple, and you can use terinjokes as your personal tech support. Basically you follow https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/","msgtype":"m.text"},"ts":1423602816000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok... I've done that using dnsimple as my DNS provider","msgtype":"m.text"},"ts":1423602854000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: cloudflare lets you get ssl on github pages, though?  not sure I understand how that works","msgtype":"m.text"},"ts":1423602889000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah cloudflare gives you free TLS on your custom domain.","msgtype":"m.text"},"ts":1423602927000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It then proxies gh-pages in the background","msgtype":"m.text"},"ts":1423602938000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you upgrade to Pro you can upload the custom cert","msgtype":"m.text"},"ts":1423602955000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"ah.... I see the diagrams here now:  https://www.cloudflare.com/ssl","msgtype":"m.text"},"ts":1423602958000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nvm, i read \"custom cert\" rather than \"custom domain\"","msgtype":"m.text"},"ts":1423603034000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"Domenic: terinjokes: thanks!  I'll make a note of that for a weekend project :-)","msgtype":"m.text"},"ts":1423603101000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"In todayâ€™s world of browsers and machines, does it improve performance to cache deep objects like toString = Object.prototype.toString?","msgtype":"m.text"},"ts":1423610495000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: in cold code? yes; in hot code? you're saving *at most* one class check per access","msgtype":"m.text"},"ts":1423610628000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(of course in cold code you shouldn't care about the performance!)","msgtype":"m.text"},"ts":1423610639000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Interesting. I still see this pattern in new scripts (and to be clear and narrow Iâ€™m referring to caching only for the sake of shortening the lookup). So, should we drop it? Did it once have significant impact on performance in old IE or something?","msgtype":"m.text"},"ts":1423610805000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: it did everywhere in the days before JITs","msgtype":"m.text"},"ts":1423610856000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"you might see a small performance increase in really tight loops, but by the time you're doing toString.call you've probably lost","msgtype":"m.text"},"ts":1423610881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But benchmark and don't take my word for it, etc.","msgtype":"m.text"},"ts":1423610898000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Iâ€™ve been looking for existing benchmarks. Are there some keywords I havenâ€™t used that might help me in my search?","msgtype":"m.text"},"ts":1423610937000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I dunno!","msgtype":"m.text"},"ts":1423610950000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"You should be benchmarking a larger app anyway","msgtype":"m.text"},"ts":1423611016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Your code will be cold or hot only depending on the context of the app it's running in","msgtype":"m.text"},"ts":1423611035000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And quite possibly inlined into it","msgtype":"m.text"},"ts":1423611044000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Thanks gsnedders, Domenic. In our polyfill project, thereâ€™s a small discussion happening as to whether we should drop local variables that cache deep properties. I canâ€™t find an existing benchmark, so Iâ€™ll just recommend we keep the local variables and test to see if we can drop them.","msgtype":"m.text"},"ts":1423611320000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"does anybody know, when you do a multipart/formdata file upload in a browser running under Windows, it seems like it sets a Content-Type based on the file extension","msgtype":"m.text"},"ts":1423611360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Or you could actually benchmark your own code instead of looking for a benchmark of someone else' code","msgtype":"m.text"},"ts":1423611370000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thatâ€™s what I thought I just said. Sorry if I miscommunicated.","msgtype":"m.text"},"ts":1423611402000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"hmm ok","msgtype":"m.text"},"ts":1423611426000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sorry then","msgtype":"m.text"},"ts":1423611442000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I did miscommunicate. I meant, s/test/test our library ourselves","msgtype":"m.text"},"ts":1423611443000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"}
]