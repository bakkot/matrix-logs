[
{"content":{"body":"whatever the \"w3c technical architecture group\" is, this \"comment\" on web storage/app cache is not making them appear terribly ... *cough* on top of things","msgtype":"m.text"},"ts":1321401600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's almost as if they ignored web storage while it was out in production for years, waiting until it's going to LC to even bother looking at it","msgtype":"m.text"},"ts":1321401720000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: what do you mean \"as if\"","msgtype":"m.text"},"ts":1321405320000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hmm. past bedtime. nn","msgtype":"m.text"},"ts":1321405321000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oops just saw Hixie's yt","msgtype":"m.text"},"ts":1321406220000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Now here as tpod also","msgtype":"m.text"},"ts":1321406280000,"senderName":"tantek-ipod","senderId":"tantek-ipod@irc"},
{"content":{"body":"oh look at that","msgtype":"m.text"},"ts":1321406281000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"bluh","msgtype":"m.text"},"ts":1321409640000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there's that other glenn :|","msgtype":"m.text"},"ts":1321409641000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: I'm just going to send our proposed list of properties to www-style right now","msgtype":"m.text"},"ts":1321413780000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, that should generate some discussion","msgtype":"m.text"},"ts":1321416000000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"should I fear","msgtype":"m.text"},"ts":1321416240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess not, since i don't follow www-style","msgtype":"m.text"},"ts":1321416241000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aww, missed tantek","msgtype":"m.text"},"ts":1321419180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`, isn't this a nice day to work on canvas tests? :)","msgtype":"m.text"},"ts":1321429380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok, so I've asked this before… but this channel… do you guys know each other?","msgtype":"m.text"},"ts":1321429500000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"do you work in the industry?","msgtype":"m.text"},"ts":1321429501000,"senderName":"Margle","senderId":"Margle@irc"},
{"content":{"body":"margle: most people here have some relationship to browser vendors, standards organisations, or the like","msgtype":"m.text"},"ts":1321429620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"margle: we haven't all met in person though","msgtype":"m.text"},"ts":1321429621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"radsauce","msgtype":"m.text"},"ts":1321429622000,"senderName":"margle","senderId":"margle@irc"},
{"content":{"body":"XHR Level 2 FTW! HTML in XHR support landed.","msgtype":"m.text"},"ts":1321429980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I'll write a report to public-webapps about the implementation choices.)","msgtype":"m.text"},"ts":1321430040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"required_props.code = { ... }[code]; required_props[code] = required_props.code;","msgtype":"m.text"},"ts":1321432260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is confused","msgtype":"m.emote"},"ts":1321432261000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is it possible to stick an https page in an iframe on a page at a different domain? I don't want to communicate between the frames, I just want to show its content in a box","msgtype":"m.text"},"ts":1321435320000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1321435620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, nevermind","msgtype":"m.text"},"ts":1321435680000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"but if it has an insecure cert or so it won't be shown in some browsers","msgtype":"m.text"},"ts":1321435681000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there's an x-frame-options header :)","msgtype":"m.text"},"ts":1321435682000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"that explains it","msgtype":"m.text"},"ts":1321435683000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"is that part of any specific spec?","msgtype":"m.text"},"ts":1321435740000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"it appears no","msgtype":"m.text"},"ts":1321436520000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"added to http://wiki.whatwg.org/wiki/Specifications_TODO","msgtype":"m.text"},"ts":1321436580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I like how glazou wrote his post starting from the assumption he would disagree with hsivonen and never really evaluates his position","msgtype":"m.text"},"ts":1321438560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Are you surprised?","msgtype":"m.text"},"ts":1321438680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"assumes rhetorical","msgtype":"m.emote"},"ts":1321438740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to me, it seems that at some points glazou effectively says that the CSS WG's policies aren't to blame but the browser vendors that comply with the policies","msgtype":"m.text"},"ts":1321438741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Which is not just ironic for that reason, it's also ironic because the reason this feature was originally designed for. And he seems ignorant about early IE, not that it matters...","msgtype":"m.text"},"ts":1321439160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we should just do what is right and have the few people in the CSS WG who think the current crazy is right, adjust","msgtype":"m.text"},"ts":1321439340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stevef: if you read this, *both* probably require changes; not either fullscreen or modal dialogs","msgtype":"m.text"},"ts":1321441860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stevef: so yes, someone has to look into it, probably someone who knows a lot about stacking contexts and layout fun","msgtype":"m.text"},"ts":1321441861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stevef: also, TabAtkins wrote the CCP for ISSUE-134, not sicking","msgtype":"m.text"},"ts":1321441980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It seems glazou's argument basically makes sense if stuff moves to CR as soon as its stable.","msgtype":"m.text"},"ts":1321442880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"On a per-feature basis.","msgtype":"m.text"},"ts":1321442881000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wait","msgtype":"m.text"},"ts":1321442940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you mean like how HTML living standard works?","msgtype":"m.text"},"ts":1321442941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because like you know, he dislikes that","msgtype":"m.text"},"ts":1321442942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1321443000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Just split each CSS feature out into a module of its own as soon as it is ready to go to CR.","msgtype":"m.text"},"ts":1321443001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Doing that allows you to have a model consistent with what glazou is arguing and what browser vendors want, I think.","msgtype":"m.text"},"ts":1321443060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think that's the only model that has that quality, though.","msgtype":"m.text"},"ts":1321443061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah the infinite editorial work model","msgtype":"m.text"},"ts":1321443120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"good luck finding people happy to work on that","msgtype":"m.text"},"ts":1321443180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway I think that doesn't work unless the CSSWG use the same definition of \"stable\" as the rest of the world","msgtype":"m.text"},"ts":1321443181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"On a totally unrelated note, both IE9 and Opera 11.10/Windows limit timer resolution to 60Hz while running on battery to minimize CPU usage — I wonder if that's worth making conforming behaviour…","msgtype":"m.text"},"ts":1321443182000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or is that already conforming?","msgtype":"m.text"},"ts":1321443240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmmm…","msgtype":"m.text"},"ts":1321443241000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Informative note claims that is conforming, but I'm not sure I understand how.","msgtype":"m.text"},"ts":1321443360000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://happyworm.com/blog/2011/11/15/html5-audio-apis-how-low-can-we-go/ \"I would strongly urge the developers of it to include a more comprehensive low level API in future releases. What’s the worst that could happen?\" *chuckle*","msgtype":"m.text"},"ts":1321443480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Hardware limitations clause","msgtype":"m.text"},"ts":1321443660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: It's not a hardware limitation though. I can perfectly well get nanosecond percision from the hardware, I just choose not to.","msgtype":"m.text"},"ts":1321443661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: The fact that it will kill the battery unreasonably fast is a hardware limitation","msgtype":"m.text"},"ts":1321443720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"roc: should fullscreenerror also dispatch only on Document?","msgtype":"m.text"},"ts":1321443721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"User agents may impose implementation-specific limits on otherwise unconstrained inputs, e.g. to prevent denial of service attacks, to guard against running out of memory, or to work around platform-specific limitations.\"","msgtype":"m.text"},"ts":1321443780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"roc: made that change for now","msgtype":"m.text"},"ts":1321443781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not an otherwise unconstrained input, it's constrained to 4ms.","msgtype":"m.text"},"ts":1321443782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"So that clause doesn't apply.","msgtype":"m.text"},"ts":1321443783000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: so your point is that clause should be reworded?","msgtype":"m.text"},"ts":1321443840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My point is we have multiple impls that disagree with the spec that don't intend on changing behaviour so the spec should change.","msgtype":"m.text"},"ts":1321443900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't really care how the normative change is made.","msgtype":"m.text"},"ts":1321443901000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: iirc the spec allows for arbitrary delay in timers","msgtype":"m.text"},"ts":1321445640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Optionally, wait a further user-agent defined length of time.","msgtype":"m.text"},"ts":1321445700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"This is intended to allow user agents to pad timeouts as needed to optimise the power usage of the device. For example, some processors have a low-power mode where the granularity of timers is reduced; on such platforms, user agents can slow timers down to fit this schedule instead of requiring the processor to use the more accurate mode with its associated higher power usage.","msgtype":"m.text"},"ts":1321445701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"does \"user-agent defined\" mean it have to be constant?","msgtype":"m.text"},"ts":1321445760000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"why would it?","msgtype":"m.text"},"ts":1321445761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"In other news, TabAtkins: happy birthday!","msgtype":"m.text"},"ts":1321446660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1321446900000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"eh","msgtype":"m.text"},"ts":1321451100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"speccing stacks","msgtype":"m.text"},"ts":1321451101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1321451102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, I don't really care where the patches are stored prior to review.  They can be somewhere other than a branch, that's fine by me.","msgtype":"m.text"},"ts":1321452300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: The point is commit-to-branch-then-review gives you the benefits of version control for your unrevieweed changes. For example a new commit to the same branch represents a fix to the previous commits to address review comments or fix bugs","msgtype":"m.text"},"ts":1321452480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Possibly.","msgtype":"m.text"},"ts":1321452540000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unrelated: what browsers need to do is have on-by-default instrumentation that sends back info to the browser vendor in a manner that doesn't breach user privacy.","msgtype":"m.text"},"ts":1321452541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For instance:","msgtype":"m.text"},"ts":1321452542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you want to know for what percentage of users a boolean B is true, send back a bit computed as follows: with probability 0.99999, send a random bit.  With probability 0.00001, send B.","msgtype":"m.text"},"ts":1321452600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: fwiw, I have filed several bugs on Gecko regarding removing redundant/obsolete for which Ms2ger provided patches that are now removed from the platform","msgtype":"m.text"},"ts":1321452660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: you could do the same","msgtype":"m.text"},"ts":1321452661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Then add all the received bits together, divide by the number of bits, subtract 0.444445, multiply by 100,000.","msgtype":"m.text"},"ts":1321452720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you have enough users, that should give you the correct percentage of users for which B is true.","msgtype":"m.text"},"ts":1321452721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But for any given user, the bit is 99.999% likely to be noise, so it yields negligible information.","msgtype":"m.text"},"ts":1321452780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Submit all these bits back every time you check for an update.","msgtype":"m.text"},"ts":1321452781000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would be incredibly useful data at no cost to privacy.","msgtype":"m.text"},"ts":1321452782000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You could submit the value of every boolean pref, and also things like \"was Range.detach() called by any page since the last update\".","msgtype":"m.text"},"ts":1321452840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For that matter, you could just throw in whether every single JS-exposed method was called since the last update.","msgtype":"m.text"},"ts":1321452841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Thereby gaining a list of methods that are effectively never used.","msgtype":"m.text"},"ts":1321452900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wouldn't it be great if we had data like that?","msgtype":"m.text"},"ts":1321452901000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1321452960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=702948","msgtype":"m.text"},"ts":1321453140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, why does this throw an exception? [\"\"].map(\"\".trim)","msgtype":"m.text"},"ts":1321454640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But \"\".trim.call(\"\") does not.","msgtype":"m.text"},"ts":1321454641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"in 1st case use pass {window} as {this}","msgtype":"m.text"},"ts":1321454700000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Why is that necessary?","msgtype":"m.text"},"ts":1321454701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"{window} is not string","msgtype":"m.text"},"ts":1321454702000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1321454760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm?","msgtype":"m.text"},"ts":1321454761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't get it.","msgtype":"m.text"},"ts":1321454762000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The function is called on the array elements, no?","msgtype":"m.text"},"ts":1321454763000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1321454764000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, I still don't get it.","msgtype":"m.text"},"ts":1321454765000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you want trim(arguments[0])","msgtype":"m.text"},"ts":1321454820000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"but native trim is str.trim(), not trim(arg)","msgtype":"m.text"},"ts":1321454821000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Oh, right.","msgtype":"m.text"},"ts":1321454880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's operating on the this value, not on the first argument.","msgtype":"m.text"},"ts":1321454881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So really I need [\"\"].map(function(s) { return s.trim() }).","msgtype":"m.text"},"ts":1321454940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1321454941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Awkward, but makes sense now.","msgtype":"m.text"},"ts":1321454942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"foolip: thanks for the typo notification on G+. Fixed.","msgtype":"m.text"},"ts":1321455660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is a bit sad to see the CSS WG co-chair \"totally disagree and will do all I can to avoid that\"","msgtype":"m.emote"},"ts":1321455720000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"W3C TAG is pretty sad state of affairs too","msgtype":"m.text"},"ts":1321455840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought co-chairs shouldn't express their opinions as co-chairs","msgtype":"m.text"},"ts":1321455841000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Art is cool (co-chair WebApps)","msgtype":"m.text"},"ts":1321455842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rik`: http://www.w3.org/2005/10/Process-20051014/process.html#GeneralChairs defers to a Member-only document with respect to the roles of a Chair","msgtype":"m.text"},"ts":1321456020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rik`: but yes, one of the rules that is pretty widely known is that a Chair removes his \"Chair-hat\" when participating in a discussion","msgtype":"m.text"},"ts":1321456080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Rik`: not sure what the practical difference is though","msgtype":"m.text"},"ts":1321456140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"every time glazou talks about CSS, he mentions his role as co-chair instead of member","msgtype":"m.text"},"ts":1321456200000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"that kind of implies that he has a bigger voice for decisions","msgtype":"m.text"},"ts":1321456260000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"A chair hat sounds like it could cause serious spinal injuries","msgtype":"m.text"},"ts":1321456740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"That would explain a lot.","msgtype":"m.text"},"ts":1321456800000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"i read on google plus earlier that they care about page load speed. now when i'm on the train i can't load google plus at all, but facebook and twitter load fine","msgtype":"m.text"},"ts":1321456920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"don't believe everything you read? :p","msgtype":"m.text"},"ts":1321456921000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that doesn't help me with getting it loaded :)","msgtype":"m.text"},"ts":1321456980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Use the time to try and beat your social networking addiction?","msgtype":"m.text"},"ts":1321457100000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I've heard wordpress loads fine","msgtype":"m.text"},"ts":1321457160000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"i just wanted to read the comments on Hixie's <time> post, but plus wants me to do something else clearly","msgtype":"m.text"},"ts":1321457220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I have now read them for you. TLDR: blah blah, whine, moan, WHATWG is evil, blah","msgtype":"m.text"},"ts":1321457580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: by that summary I guess Ian's post was blah blah, whine, moan, W3C is evil, blah","msgtype":"m.text"},"ts":1321457700000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc, almost exactly, yes: https://plus.google.com/107429617152575897589/107429617152575897589/posts/3ZEQAVkF6xd","msgtype":"m.text"},"ts":1321457940000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah, I have read...  and commented","msgtype":"m.text"},"ts":1321457941000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"gavinc: Plus a couple of sentences of useful information, yeah","msgtype":"m.text"},"ts":1321458120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It sucks that Hixie does stuff like the <time> removal. stunts like that make people more afraid of Living Standards and makes it harder to advocate changes to the way the CSS WG does stuff","msgtype":"m.text"},"ts":1321458121000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/and/which/","msgtype":"m.text"},"ts":1321458180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, do you think it was obvious from the initial bug that removing it was a bad idea?","msgtype":"m.text"},"ts":1321458181000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: politically, yes. I think I'm going to stay out of the technical debate for a while still.","msgtype":"m.text"},"ts":1321458420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: It seems to me that characterising it as a \"stunt\" is unfair. It also seems to me that the new use cases (the ones I head orally; I haven't checked the wiki page) are pretty shaky; in particular the value to a search engine of a <time> with no context about what type of time it is seems rather small. But I am happy to accept that the risk of including the element is small compared to the chance of it being useful","msgtype":"m.text"},"ts":1321458421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the political side matters as far as making people scared of Living Standards)","msgtype":"m.text"},"ts":1321458422000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: ok. maybe calling it a \"stunt\" is unfair. sorry","msgtype":"m.text"},"ts":1321458423000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sure, it's completely unsurprising that some people got upset","msgtype":"m.text"},"ts":1321458480000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"thanks for your XHR email hsivonen","msgtype":"m.text"},"ts":1321458540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: not sure when I get to it yet","msgtype":"m.text"},"ts":1321458541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: all these little patches to specs all over is taking its time","msgtype":"m.text"},"ts":1321458542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. it will be interesting to see how badly non-null responseXML for error responses breaks the Web","msgtype":"m.text"},"ts":1321459080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.google.com/codesearch#search/&q=%5C.responseXML%5Cs*%5C!?===?%5Cs*null&type=cs","msgtype":"m.text"},"ts":1321459440000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"there you can see a few sites to test, like fckeditor","msgtype":"m.text"},"ts":1321459500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ugh, why does rdesktop to an EC2 Windows instance require a million tries before it works?","msgtype":"m.text"},"ts":1321459560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://www.google.com/codesearch#search/&q=\\.responseXML\\s*[\\!=]==?\\s*null&type=cs might work better","msgtype":"m.text"},"ts":1321459561000,"senderName":"Ms3ger","senderId":"Ms3ger@irc"},
{"content":{"body":"sees the \"public domain\" license on http://dvcs.w3.org/hg/fullscreen/raw-file/tip/Overview.html and wonders about the implication with French law. ","msgtype":"m.emote"},"ts":1321460040000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I guess it doesn't matter given the nationality of the two editors. No idea.","msgtype":"m.text"},"ts":1321460041000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Doomed copyright laws.","msgtype":"m.text"},"ts":1321460042000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: CC0 1.0 should work no? (which is what it is)","msgtype":"m.text"},"ts":1321460340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: should we prevent sync for cross-origin requests entirely?","msgtype":"m.text"},"ts":1321460400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, so it turns out that no one but IE even pretends to implement IDLs from (for instance) DOM4 per spec.","msgtype":"m.text"},"ts":1321460460000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The prototypes don't have the expected properties at all.","msgtype":"m.text"},"ts":1321460461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like, say, Node.prototype.nodeType is just undefined except in IE.","msgtype":"m.text"},"ts":1321460520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IE9 implements spec almost perfectly.","msgtype":"m.text"},"ts":1321460521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"annevk: not sure. An author in France can't put his work in the public domain. It doesn't exist. The work will be upgraded to public domain 70 years after the death of the author, but he can't do it before. (which is stupid we agree.)","msgtype":"m.text"},"ts":1321460580000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"In Gecko, it looks like all the properties are just dumped on the thing lowest on the prototype chain.  Like nodeType is in Text.prototype and Element.prototype, but not Node.prototype.","msgtype":"m.text"},"ts":1321460581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"karlcow: yes but CC0 is a copyright","msgtype":"m.text"},"ts":1321460640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"karlcow: copyright license","msgtype":"m.text"},"ts":1321460700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm indeed. The name is confusing.","msgtype":"m.text"},"ts":1321460701000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"In WebKit, it looks like document has a property nodeType which is neither an own property nor anywhere in the prototype chain.","msgtype":"m.text"},"ts":1321460760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is HTMLDocument -> Document -> Node -> Object as expected.","msgtype":"m.text"},"ts":1321460761000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"-> null.","msgtype":"m.text"},"ts":1321460820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Opera seems similar.","msgtype":"m.text"},"ts":1321460940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gecko has the property on the prototype too, but not as an own property.","msgtype":"m.text"},"ts":1321460941000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"shakes head in disbelief","msgtype":"m.emote"},"ts":1321460942000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess we just get lots of tests that only IE passes, huh?","msgtype":"m.text"},"ts":1321460943000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, it depends on the interface.  Selection is more sane in Gecko, for instance.","msgtype":"m.text"},"ts":1321461000000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"goes back to adding features to his tests","msgtype":"m.emote"},"ts":1321461001000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"rejoins from Redmond.","msgtype":"m.emote"},"ts":1321461180000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"reads https://plus.google.com/107429617152575897589/posts/3ZEQAVkF6xd to catch up on the fun.","msgtype":"m.emote"},"ts":1321462080000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1321462320000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"http://blogs.computerworlduk.com/open-enterprise/2011/11/mozillas-brendan-eich-on-the-birth-of-firefox/index.htm","msgtype":"m.text"},"ts":1321462380000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"wow, I never knew hyatt was at Apple when working on Phoenix","msgtype":"m.text"},"ts":1321462381000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"realizes he should have asked for a time extension for the revert request regarding time/data during last week's HTML WG teleconference. :/","msgtype":"m.emote"},"ts":1321462740000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: yeah well","msgtype":"m.text"},"ts":1321463160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: it'll be sorted out in due course","msgtype":"m.text"},"ts":1321463161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is still a bit slow on all the W3C process stuff.","msgtype":"m.emote"},"ts":1321463220000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yeah, but with unfortunate wasted time on the part of Mike Smith and Hixie.","msgtype":"m.text"},"ts":1321463221000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"most WGs don't have this","msgtype":"m.text"},"ts":1321463222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"really hates source control gymnastics and thus sympathizes greatly with both of them.","msgtype":"m.emote"},"ts":1321463223000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jgraham, do you propose any way of parsing IDLs from JS other than lots of messy regex?","msgtype":"m.text"},"ts":1321463280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because that's pretty much working for me so far, but it doesn't seem super ideal.","msgtype":"m.text"},"ts":1321463281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Write or steal a proper parser?","msgtype":"m.text"},"ts":1321463520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, such as from where?","msgtype":"m.text"},"ts":1321463521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well one exists but it depends on peg.js and I don't know how that plays with licenses","msgtype":"m.text"},"ts":1321463522000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Will it parse WebIDL's format, anyway?","msgtype":"m.text"},"ts":1321463523000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(google for WebIDL parser javascript)","msgtype":"m.text"},"ts":1321463524000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, there are WebIDL-specific ones, nice.","msgtype":"m.text"},"ts":1321463525000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've already got a mostly-working regex one, but it's slightly horrifying.","msgtype":"m.text"},"ts":1321463526000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or more than slightly.","msgtype":"m.text"},"ts":1321463580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Perhaps extremely.","msgtype":"m.text"},"ts":1321463581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You are probably not surprised at my approach to the problem.","msgtype":"m.text"},"ts":1321463582000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The alternative is just to write one. Which could be fun but has a cost.","msgtype":"m.text"},"ts":1321463583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(it seems like the licensing terms are rather OK)","msgtype":"m.text"},"ts":1321463700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: CORS has been supported quite a long time","msgtype":"m.text"},"ts":1321463760000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I would suggest that whatever we do we put all of this into a different script that one must include in addition to testharness[report].js","msgtype":"m.text"},"ts":1321463761000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: so preventing sync might break some sites","msgtype":"m.text"},"ts":1321463762000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I wouldn't be surprised it for example Google Docs would break)","msgtype":"m.text"},"ts":1321463820000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/it/if/","msgtype":"m.text"},"ts":1321463821000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham, why?","msgtype":"m.text"},"ts":1321464120000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Because it is a significant amount of extra script that isn't needed (and doesn't have to be understood) for most tests","msgtype":"m.text"},"ts":1321464240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Okay, doesn't matter to me.","msgtype":"m.text"},"ts":1321464241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"A typical API will need one file that does generate_idl_tests(IDL)","msgtype":"m.text"},"ts":1321464300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I was thinking a better API would be to expose an extra type of object that can generate various sorts of tests from the IDL.","msgtype":"m.text"},"ts":1321464301000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So you might want to test that a specific object is an instance of an interface, for instance.","msgtype":"m.text"},"ts":1321464302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Maybe","msgtype":"m.text"},"ts":1321464303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In any case having that all in a single file per API seems reasonable","msgtype":"m.text"},"ts":1321464360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and not having the extra code in other tests for the same API also seems reasonable","msgtype":"m.text"},"ts":1321464361000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Okay, so it looks like the first interface I tried testing in the WebIDL parser is actually an invalid WebIDL interface to start with.","msgtype":"m.text"},"ts":1321464660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It has an enum, which apparently doesn't exist in WebIDL.","msgtype":"m.text"},"ts":1321464661000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Good error to catch.","msgtype":"m.text"},"ts":1321464662000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(this is Range per DOM4)","msgtype":"m.text"},"ts":1321464720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems to work nicely.","msgtype":"m.text"},"ts":1321464780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"jgraham, okay, so my proposed syntax is now new IdlInterface('interface .....').test(); to test.","msgtype":"m.text"},"ts":1321467840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That runs tests based on the interface object itself.","msgtype":"m.text"},"ts":1321467841000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Then later we can add methods that test other things, like test that something is an instance of the interface.","msgtype":"m.text"},"ts":1321467842000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sound good?","msgtype":"m.text"},"ts":1321467843000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The code is in its own file that has to be included separately.","msgtype":"m.text"},"ts":1321467900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'll commit the WebIDL parser too, which says it's under the MIT license, which I assume is fine.","msgtype":"m.text"},"ts":1321468020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"you have a proper WebIDL parser?","msgtype":"m.text"},"ts":1321468200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1321468201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, https://github.com/darobin/webidl.js/tree/","msgtype":"m.text"},"ts":1321468202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It seems to work for all the correct IDLs I've tried so far.","msgtype":"m.text"},"ts":1321468203000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The Range IDL in DOM4 is wrong, I think, it uses a construct (enum) not defined by WebIDL.","msgtype":"m.text"},"ts":1321468204000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah, DOM might soon use some other non-standard constructs","msgtype":"m.text"},"ts":1321468260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"union!","msgtype":"m.text"},"ts":1321468261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"D:","msgtype":"m.text"},"ts":1321468262000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1321468263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Define them in WebIDL plz?","msgtype":"m.text"},"ts":1321468320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":". . . also, what would a union be in JS?","msgtype":"m.text"},"ts":1321468321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"union is mostly for vararg overloading","msgtype":"m.text"},"ts":1321468322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and I suspect heycam will add it in due course","msgtype":"m.text"},"ts":1321468380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but can't have all new features wait for Web IDL improvements","msgtype":"m.text"},"ts":1321468381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"union sort of implies overlapping memory, though, which doesn't make sense in JS of course","msgtype":"m.text"},"ts":1321468440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://dvcs.w3.org/hg/html/file/ecdfd06cbdc9/tests/resources/idlharness.js","msgtype":"m.text"},"ts":1321468620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: seriously cool","msgtype":"m.text"},"ts":1321469340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"AryehGregor: it might be annoying that you have to use one string per interface","msgtype":"m.text"},"ts":1321469400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"As opposed to just one giant string that you run all the tests on?","msgtype":"m.text"},"ts":1321469401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That should be relatively easy to change.","msgtype":"m.text"},"ts":1321469402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1321469460000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html","msgtype":"m.text"},"ts":1321469461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The thing is, I want to add other methods like IdlInterface.prototype.test_instance() that tests something is an instance of the interface, say.","msgtype":"m.text"},"ts":1321469462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Although maybe a better strategy would be to concatenate all the IDLs from all the specs and have one giant IDL object that represents everything about all standard IDLs.","msgtype":"m.text"},"ts":1321469520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would give the most flexibility for testing.","msgtype":"m.text"},"ts":1321469521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But this is a good start, I think.","msgtype":"m.text"},"ts":1321469522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i dunno, but i imagined that it would be nice to use the interfaces in a <script> data block instead of using \\n\\","msgtype":"m.text"},"ts":1321469580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"That would be less ugly, certainly.","msgtype":"m.text"},"ts":1321469581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i agree it should be possible to test instances","msgtype":"m.text"},"ts":1321469582000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html","msgtype":"m.text"},"ts":1321469640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"maybe testing instance could be a bit different. like you parse all interfaces first, then call a method like testInstance(instance, 'HTMLVideoElement') or something","msgtype":"m.text"},"ts":1321469700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Potentially, yeah.","msgtype":"m.text"},"ts":1321469820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Improvements welcome.","msgtype":"m.text"},"ts":1321469880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For now, I have to get back to actual Selection/Range stuff . . . this has been a bit of a detour.","msgtype":"m.text"},"ts":1321469940000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"really nice work","msgtype":"m.text"},"ts":1321469941000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"There's loads more to do.","msgtype":"m.text"},"ts":1321470180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"WebIDL has tons of requirements that could be tested.","msgtype":"m.text"},"ts":1321470181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i've wanted to write this sort of thing myself, so i might just jump in","msgtype":"m.text"},"ts":1321470300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1321470360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Very nice indeed.","msgtype":"m.text"},"ts":1321470540000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"AryehGregor, jgraham: David Flanagan's dom.js project has a WebIDL parser in JS","msgtype":"m.text"},"ts":1321471140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hey brucel - you had questions about <time>","msgtype":"m.text"},"ts":1321471141000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"roc, interesting.  I found a (presumably) different one that seems to work well enough.","msgtype":"m.text"},"ts":1321471142000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Cool.","msgtype":"m.text"},"ts":1321471200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"AryehGregor: I don't want to have one giant IDL block though","msgtype":"m.text"},"ts":1321471201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, that would be what's easiest if we use <script> for data.","msgtype":"m.text"},"ts":1321471260000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You should be able to copy from the spec, paste it into a test file and get useful tests","msgtype":"m.text"},"ts":1321471261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which would be nicer.","msgtype":"m.text"},"ts":1321471262000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes, but there are some tests that you can't do easily unless the test knows about all the different IDLs.","msgtype":"m.text"},"ts":1321471263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Such as?","msgtype":"m.text"},"ts":1321471264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Like if one interface has a member whose type is another interface.","msgtype":"m.text"},"ts":1321471265000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I guess you don't need to do all the checks on that, though.","msgtype":"m.text"},"ts":1321471266000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Just instanceof would probably be fine.","msgtype":"m.text"},"ts":1321471320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1321471321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which doesn't need the IDL for the other interface.","msgtype":"m.text"},"ts":1321471322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1321471323000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the other interface can be tested seperatly","msgtype":"m.text"},"ts":1321471324000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, as gsnedders said, there is probably a great deal one can do if one has an API that takes an IDL block and a function returning an object that should implement that IDL block","msgtype":"m.text"},"ts":1321471440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think hsivonen and glazou disagree all that much. Everyone agrees that if browsers never shipped prefixed/non-CR stuff in release builds, we wouldn't have a problem","msgtype":"m.text"},"ts":1321471441000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jgraham, I was thinking that would be a separate method on IdlInterface.","msgtype":"m.text"},"ts":1321471500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"roc: That seems like a pointless thing to agree on since it won't ever happen (people not shipping in release until CR)","msgtype":"m.text"},"ts":1321471501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yay, I wrote a test that passes in Firefox if I run it in Firebug but fails if I run it without Firebug.","msgtype":"m.text"},"ts":1321471502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah, the major point of difference is that glazou thinks that's possible","msgtype":"m.text"},"ts":1321471503000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"instanceof won't work if the interface is [NoInterfaceObject]","msgtype":"m.text"},"ts":1321471504000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"roc: And therein lies the problem. Glazou seems to have a broken idea of the market dynamics","msgtype":"m.text"},"ts":1321471560000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan, hmm, true.","msgtype":"m.text"},"ts":1321471561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"zcorpan: True, but that's a bit of an edge case","msgtype":"m.text"},"ts":1321471562000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"woo - ratholing on prefixes again?","msgtype":"m.text"},"ts":1321471563000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"anyone want to talk <time> element instead? ;)","msgtype":"m.text"},"ts":1321471564000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"<time> to go!","msgtype":"m.text"},"ts":1321471620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"roc: I'm not expecting stuff to stay in experimental builds until CR under the current CSS WG notion of CR","msgtype":"m.text"},"ts":1321471980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'm not either","msgtype":"m.text"},"ts":1321471981000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: I expect stuff to go to release when the pressure to ship outweighs doubts about the design of the feature","msgtype":"m.text"},"ts":1321472040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"not removing prefixes causes also some problems. That indicates to authors that they can rely on feature, although the feature should be just experimental","msgtype":"m.text"},"ts":1321472041000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"doesn't quite understand why webkit doesn't remove prefixes","msgtype":"m.emote"},"ts":1321472042000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: shipped features aren't really experimental","msgtype":"m.text"},"ts":1321472100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"they can be","msgtype":"m.text"},"ts":1321472101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if it is clear to everyone that prefixed things can go away at any point","msgtype":"m.text"},"ts":1321472102000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The problem with the notion of \"experimental\" builds is that typically the features aren't used by enough users to get really good feedback","msgtype":"m.text"},"ts":1321472103000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: the authors decide what they treat as experimental when stuff is in release builds","msgtype":"m.text"},"ts":1321472104000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but apparently that isn't happening, at least in some browser engines","msgtype":"m.text"},"ts":1321472105000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I'm excluding nightly/dev track builds where features are on by default and expected to transition into the next release)","msgtype":"m.text"},"ts":1321472160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"smaug____: WGs or vendors don't get to make authors treat stuff as experimental after shipping","msgtype":"m.text"},"ts":1321472161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Well I say \"the\" problem; I mean \"one of the problems\"","msgtype":"m.text"},"ts":1321472220000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: well, part of that problem is that prefixes aren't being removed actively","msgtype":"m.text"},"ts":1321472221000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I wouldn't be too surprised if the bar for removing a -webkit-prefixed feature was around the bar for removing a Cocoa API call from Mac OS X","msgtype":"m.text"},"ts":1321472280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"smaug____: dunno what their actual policy is","msgtype":"m.text"},"ts":1321472281000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I'd appreciate a pointer to their policy if there is one)","msgtype":"m.text"},"ts":1321472340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"AryehGregor: So, it would be nice if we could structure the code in some more straightforward way. I'm not sure quite what that is, but given an attribute x on a property y, it would be nice if all the tests for (x,y) were localised in a given place","msgtype":"m.text"},"ts":1321472400000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, what do you mean?","msgtype":"m.text"},"ts":1321472401000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hsivonen: I started a thread on www-style about removing prefixes from some CSS properties, you may wish to contribute","msgtype":"m.text"},"ts":1321472580000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"hsivonen: i am offended by your characterisation of replacing <time> with <data> as a \"stunt\"","msgtype":"m.text"},"ts":1321472700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham, to test that an object implements an interface, you also want to test that it implements all the interfaces that one inherits.  If we don't have a single object that knows about lots of IDLs, this means you'll have to do something like test_implements(document, \"HTMLDocument\"); test_implements(document, \"Document\"); test_implements(document, \"Node\"); which a) is error-prone, b) doesn't test that the inheritance is in the correct orde","msgtype":"m.text"},"ts":1321473180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"r.","msgtype":"m.text"},"ts":1321473181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(although I don't know if (b) is actually meaningful)","msgtype":"m.text"},"ts":1321473240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"roc: I already posted one contribution to the thread","msgtype":"m.text"},"ts":1321473241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1321473300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Hixie: I'm sorry about my bad choice of words. I think the removal of <time> in that manner was bad PR for the Living Standard model and for HTML5","msgtype":"m.text"},"ts":1321473301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1321473360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"clearly :-)","msgtype":"m.text"},"ts":1321473361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but these things will happen","msgtype":"m.text"},"ts":1321473420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if anyone is interested in <time>'s duration syntax, it would be really helpful if you could fill out http://www.whatwg.org/specs/web-apps/current-work/temp and mail me your results","msgtype":"m.text"},"ts":1321474620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also feel free to add any other cases you think are important","msgtype":"m.text"},"ts":1321474621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tantek: it would be really helpful if you could fill out http://www.whatwg.org/specs/web-apps/current-work/temp and mail me your results (feel free to add any other cases you think are important)","msgtype":"m.text"},"ts":1321474680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there a spec for the Living Standard Model?","msgtype":"m.text"},"ts":1321474681000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov: \"put the spec on the web and keep it updated\"","msgtype":"m.text"},"ts":1321474682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1321474740000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bbiab","msgtype":"m.text"},"ts":1321474741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I do think we can improve on ISO8601's duration syntax","msgtype":"m.text"},"ts":1321475280000,"senderName":"tantek_","senderId":"tantek_@irc"},
{"content":{"body":"what I wrote up on the Time wiki page was my first thoughts","msgtype":"m.text"},"ts":1321475281000,"senderName":"tantek_","senderId":"tantek_@irc"},
{"content":{"body":"What's an example of a real-world interface that has two operations with the same name?  Anything?","msgtype":"m.text"},"ts":1321475340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"DOM4 doesn't have any.","msgtype":"m.text"},"ts":1321475341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Canvas?","msgtype":"m.text"},"ts":1321475342000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"createPattern, okay.","msgtype":"m.text"},"ts":1321475520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"> \"CSS3 browser\" and \"CSS4 browser\" are meaningless terms.","msgtype":"m.text"},"ts":1321475640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, they are not.  If that were the case, there is no point in having Level 4 vs. Level 3 modules.","msgtype":"m.text"},"ts":1321475641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Who's going to tell Brian there's no point?","msgtype":"m.text"},"ts":1321475642000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"there's a point to having level 3 vs level 4 modules?","msgtype":"m.text"},"ts":1321475700000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"news to me","msgtype":"m.text"},"ts":1321475701000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"different level modules yes. making claims of a \"CSS3 Browser\" or \"CSS4 Browser\" no.","msgtype":"m.text"},"ts":1321475820000,"senderName":"tantek_","senderId":"tantek_@irc"},
{"content":{"body":"I agree with tantek","msgtype":"m.text"},"ts":1321475880000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, somewhat. I'm not sure if labeling modules with revision levels is a good idea, but it doesn't matter here","msgtype":"m.text"},"ts":1321475940000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, the way I see the revision levels is basically for snapshotting sets of \"stable\" feature","msgtype":"m.text"},"ts":1321476060000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"features","msgtype":"m.text"},"ts":1321476061000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"per module","msgtype":"m.text"},"ts":1321476062000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1321476063000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"to translate with the \"living spec\" terminology -","msgtype":"m.text"},"ts":1321476120000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but it's a heavyweight process which requires us to make editorial decisions, sometimes controversial ones, to allow stable features to progress independent of unstable features","msgtype":"m.text"},"ts":1321476121000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we could fix that by putting every feature in its own module, but that would create new problems","msgtype":"m.text"},"ts":1321476122000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"or, we could simply fix it by allowing features within the same module to be independently marked stable, at least for unprefixing purposes","msgtype":"m.text"},"ts":1321476180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"which is what I'm proposing","msgtype":"m.text"},"ts":1321476181000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"module X level N is the live version until it enters CR at which point it becomes a feature freeze fork (where some features may be dropped), and module x level N+1 becomes the live version","msgtype":"m.text"},"ts":1321476182000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"yeah, at what point during CR do prefixes get dropped is an interesting question","msgtype":"m.text"},"ts":1321476240000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I've heard a variety of different opinions","msgtype":"m.text"},"ts":1321476241000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"though there is some convergence on CR + test suite for a feature/property/value + prefixed 2 implementations that behave the same way = ok to unprefix that feature/property/value","msgtype":"m.text"},"ts":1321476242000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and yes that would mean features/properties/values within the same specification being marked independently \"stable\" for the purpose of removing vendor prefixes","msgtype":"m.text"},"ts":1321476300000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"those 3 conditions (CR, tests, 2+ interoperable prefixed implementations) are from experience in the CSS WG","msgtype":"m.text"},"ts":1321476360000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"though one could make a case that the CR portion of that is a \"nice to have\"","msgtype":"m.text"},"ts":1321476361000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Would be great to have tests, of course","msgtype":"m.text"},"ts":1321476362000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger - I think it is irresponsible to remove prefixes from a feature without tests for the feature.","msgtype":"m.text"},"ts":1321476420000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"can't assess \"interoperable\" without tests","msgtype":"m.text"},"ts":1321476421000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"in practice css module revision #s seem mostly like a way to punt on proposals by saying \"we'll think about that in revision N+1\"","msgtype":"m.text"},"ts":1321476422000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"astearns, bingo","msgtype":"m.text"},"ts":1321476423000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek, in the implementation's or the standard's test suite?","msgtype":"m.text"},"ts":1321476424000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger the latter - with tests that use the prefixed version(s)","msgtype":"m.text"},"ts":1321476480000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"All for, glwt","msgtype":"m.text"},"ts":1321476481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jamesr_ I hear your frustration.","msgtype":"m.text"},"ts":1321476482000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jamesr_: that's a good thing","msgtype":"m.text"},"ts":1321476660000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, it's good to be able to stop people adding stuff that prevents the spec from progressing","msgtype":"m.text"},"ts":1321476661000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"it's not good to have new features gated on the progress of unrelated features","msgtype":"m.text"},"ts":1321476662000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jamesr_ also - for any specific CSS proposal, there's always a way for folks to incrementally develop them, on the www-style list, on wiki.csswg.org etc.","msgtype":"m.text"},"ts":1321476720000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but you can never reach unprefixed status that way","msgtype":"m.text"},"ts":1321476721000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and that way, as roc points out, such ideas can be iterated without blocking more mature features.","msgtype":"m.text"},"ts":1321476722000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"astearns: authors assess \"interoperable\" when they routinely pass the same values to all browsers' prefixed properties","msgtype":"m.text"},"ts":1321476840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"when that's happening, it's interoperable enough","msgtype":"m.text"},"ts":1321476841000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"that's determined by their own testing for when they can do that reliably","msgtype":"m.text"},"ts":1321476842000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"for what ever value of \"reliably\" works for them","msgtype":"m.text"},"ts":1321476900000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"roc, i think it's a good thing to punt","msgtype":"m.text"},"ts":1321476901000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"so long as there are good reasons","msgtype":"m.text"},"ts":1321476902000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"astearns: yeah, that's what \"interoperable enough\" means","msgtype":"m.text"},"ts":1321477020000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so it's not a complete test suite that's needed. Just enough to check what authors mean for \"interoperable\"","msgtype":"m.text"},"ts":1321477080000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns, anyone can submit test cases for CSS features.","msgtype":"m.text"},"ts":1321477081000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so for any author complaining about prefixes, I say, submit what test cases you think demonstrate interop between prefixed implementations.","msgtype":"m.text"},"ts":1321477140000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Ah, and who does?","msgtype":"m.text"},"ts":1321477141000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Apart from Gérard","msgtype":"m.text"},"ts":1321477142000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"realistically, they're not going to submit testcases","msgtype":"m.text"},"ts":1321477143000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I'm encouraging the teams at Adobe who code around browser incompatibilities to submit tests :)","msgtype":"m.text"},"ts":1321477200000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"making this whole process depend on authors doing work is doomed","msgtype":"m.text"},"ts":1321477201000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, it makes sense to put burden on the complainers","msgtype":"m.text"},"ts":1321477202000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"as a logical extension of the OSS \"patches welcome\" philosophy","msgtype":"m.text"},"ts":1321477203000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"... it hardly seems appropriate to label people who want interoperable APIs as \"complainers\"","msgtype":"m.text"},"ts":1321477320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if we could aggregate and harness the negative energy of millions of Web developers for useful purposes, we could be as gods","msgtype":"m.text"},"ts":1321477321000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1321477322000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"roc: I believe that prefixes are, in general, a good thing, but that prefixes, in several particular instances we're struggling with, have been a bad thing due to the specs languishing in a pre-CR state.","msgtype":"m.text"},"ts":1321477440000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm undecided on the former, but we can fix the latter independent of that","msgtype":"m.text"},"ts":1321477441000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Yes, we can.","msgtype":"m.text"},"ts":1321477500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: for CSS prefixes specifically, or scripting prefixes as well?","msgtype":"m.text"},"ts":1321477501000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"And we can also limit the pain that such languishing causes in the future, and maybe even produce a dynamic that makes languishing explicitly antisocial.","msgtype":"m.text"},"ts":1321477502000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"By, for example, limiting prefixed properties to beta or earlier only.","msgtype":"m.text"},"ts":1321477503000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"people tend to say \"prefixes\" when they're thinking more of one or the other, i think","msgtype":"m.text"},"ts":1321477504000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Both, in my opinion.","msgtype":"m.text"},"ts":1321477505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I would love to have a world where prefixed properties aren't in release builds","msgtype":"m.text"},"ts":1321477560000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: We've seriously considered it.","msgtype":"m.text"},"ts":1321477561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: We need to make a pact.","msgtype":"m.text"},"ts":1321477562000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's not clear to me, since the entire \"living standard\" concept essentially discards the notion of arriving at CR","msgtype":"m.text"},"ts":1321477563000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins - the game theory of the situation won't allow that to happen: \"a world where prefixed properties aren't in release builds\"","msgtype":"m.text"},"ts":1321477620000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"zewt: That's not true.  Push the CSSWG just a *little* bit farther, and you ahve a living stadnard within the confines of W3C process.","msgtype":"m.text"},"ts":1321477621000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"good luck on eliminating -webkit- properties from release Safari builds","msgtype":"m.text"},"ts":1321477622000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: Eliminating the current ones, of course not.","msgtype":"m.text"},"ts":1321477623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But keeping new ones from trickling down is doable.","msgtype":"m.text"},"ts":1321477624000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'm more familiar with the scripting side of things than CSS","msgtype":"m.text"},"ts":1321477625000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt see above my translation of module levels to living spec","msgtype":"m.text"},"ts":1321477626000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Tabatkins, I agree, CSSWG is approaching living spec-like working routines","msgtype":"m.text"},"ts":1321477680000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I think we can get there","msgtype":"m.text"},"ts":1321477681000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Doing a proper living standard within the process just requires small modules and active pushing to CR.","msgtype":"m.text"},"ts":1321477682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins - I think it requires more than that, but those are good steps","msgtype":"m.text"},"ts":1321477683000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"a simple case i'm thinking of is eg. webkitURL.createObjectURL, and wondering when that should be unprefixed, since even after that API is fairly stable and interoperably implemented (and it probably is, at this point), new methods will presumably be added to URL in the future","msgtype":"m.text"},"ts":1321477740000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"e.g. when module X level N goes to CR, issuing a public WD of module X level N+1","msgtype":"m.text"},"ts":1321477741000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"in that particular case, i suppose it makes more sense to prefix the methods, instead of URL itself","msgtype":"m.text"},"ts":1321477742000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1321477743000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"zewt: Yes, once the core object is \"stable\", you prefix methods.","msgtype":"m.text"},"ts":1321477744000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's case by case","msgtype":"m.text"},"ts":1321477745000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"even in CSS","msgtype":"m.text"},"ts":1321477746000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"sometimes we prefix properties","msgtype":"m.text"},"ts":1321477747000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(URL.webkitCreateObjectURL instead of webkitURL.createObjectURL)","msgtype":"m.text"},"ts":1321477748000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"other times, values","msgtype":"m.text"},"ts":1321477749000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Just like how, in CSS, you start by prefixing the property, and later prefix the values.","msgtype":"m.text"},"ts":1321477750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lol, take it away TabAtkins :)","msgtype":"m.text"},"ts":1321477800000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hehe. ^_^","msgtype":"m.text"},"ts":1321477801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(of course, prefixing loses a lot of its meaning unless everyone does it, and firefox doesn't prefix URL, heh--though it doesn't lose *all* meaning)","msgtype":"m.text"},"ts":1321477860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin has three specs relating to data: urls on images. The last two confuse me. What does the word \"found\" mean in the context of \"found in another Document or script\"?","msgtype":"m.text"},"ts":1321477980000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"I suspect that it is the last spec that is preventing this page: http://phrogz.net/SVG/svg_to_png.xhtml from working as intended. Chrome is throwing a security error trying to round trip an SVG image from the same document through a canvas.","msgtype":"m.text"},"ts":1321477981000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"No, that's not it.  We just specifically taint canvases when you draw any SVG into them.","msgtype":"m.text"},"ts":1321478100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Oh? Can't tell if you're joking or not. If not...why on earth?","msgtype":"m.text"},"ts":1321478101000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"Not joking.  It's because the security issues are complicated, and we're punting for now.","msgtype":"m.text"},"ts":1321478102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dealing with <foreignContent> requires some subtlety.","msgtype":"m.text"},"ts":1321478160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK. May I ask who \"we\" are? (For a StackOverflow answer I'd like to cite my source. :)","msgtype":"m.text"},"ts":1321478161000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"Chrome engineer.","msgtype":"m.text"},"ts":1321478162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thanks. Any mailing list discussion on this topic you could point me at (or in the general vicinity of)?","msgtype":"m.text"},"ts":1321478163000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"I'd have to dig stuff up.  Search in public-webapps⊙wo for posts from Adam Barth about it?","msgtype":"m.text"},"ts":1321478220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thanks. Any keywords you'd recommend? Taint? origin-clean? svg? foreignObject?","msgtype":"m.text"},"ts":1321478280000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"drawElement","msgtype":"m.text"},"ts":1321478281000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"heh, i got bored of stackoverflow ... too little filtering for quality of questions leading to too many crap questions to wade through","msgtype":"m.text"},"ts":1321478282000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: That's the truth for sure. Still, there's a glimmer of hope there for storing good answers. Plus, I'm foolishly addicted to the rep. Jeff's got his claws in me.","msgtype":"m.text"},"ts":1321478340000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"pages of people looking to get their homework done gets tiresome","msgtype":"m.text"},"ts":1321478341000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"So, that explains my specific question. Still, I'm interested in the difference between those last two image/data: url specs. Can anyone clarify?","msgtype":"m.text"},"ts":1321478460000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"zewt:  Perhaps might be faster to change how homework is assigned rather then trying to get people to stop looking for answers online. The first only seems really hard, the 2nd impossible.","msgtype":"m.text"},"ts":1321478461000,"senderName":"gavinc","senderId":"gavinc@irc"},
{"content":{"body":"Hixie: using datetime as attribute seems annoying","msgtype":"m.text"},"ts":1321478520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: XMLHttpRequest.send()","msgtype":"m.text"},"ts":1321478521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Phrogz_: I think the \"other Document\" that's referring to just means \"other than the image referred to by the data: url\"","msgtype":"m.text"},"ts":1321478580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ? I suppose it would be clearer to me if someone could give an example of when the first case might occur. (What javascript code would result in an image having a data URL that was \"found\" in another Document or script?)","msgtype":"m.text"},"ts":1321478700000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"roc: I'm happy to have Opera drop the prefixes for the modules you proposed btw","msgtype":"m.text"},"ts":1321478701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: for those we implement anyway :)","msgtype":"m.text"},"ts":1321478702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"please say so on the list","msgtype":"m.text"},"ts":1321478703000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"and mention whether you'd be happy for other browsers to drop prefixes on the features you don't implement :-)","msgtype":"m.text"},"ts":1321478760000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Phrogz_: iframes? (but if the iframe isn't same-origin then you can't access the IMG in question in the first place)","msgtype":"m.text"},"ts":1321478761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Phrogz_: For example, if you use an <iframe> whose document contains a data: url.","msgtype":"m.text"},"ts":1321478880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Phrogz_: I think that's the right interpretation.","msgtype":"m.text"},"ts":1321478881000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: done and done","msgtype":"m.text"},"ts":1321479180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: IDL interface tests, sweet","msgtype":"m.text"},"ts":1321479300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"AryehGregor: you're on a roll :)","msgtype":"m.text"},"ts":1321479301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: Who has discussed not shipping prefixed stuff in stable builds? It seems unlikely that such a policy would meet with universal approval at google since afaik your products use -webkit-* for stuff that others don't have yet","msgtype":"m.text"},"ts":1321479360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham - agreed.","msgtype":"m.text"},"ts":1321479420000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"AryehGregor, did you look at the ProgressEvent tests, btw?","msgtype":"m.text"},"ts":1321479421000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(by \"products\" I mean \"websites\")","msgtype":"m.text"},"ts":1321479422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"text/html XHR was backed out, btw","msgtype":"m.text"},"ts":1321479480000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: I mean I want the code to be structured more clearly than a big series of \"if\" statements, such that it is easy to find all the tests relating to a particular attribute in the IDL","msgtype":"m.text"},"ts":1321479481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: something broke?","msgtype":"m.text"},"ts":1321479482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or other part of the IDL","msgtype":"m.text"},"ts":1321479483000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Tests","msgtype":"m.text"},"ts":1321479540000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"tests","msgtype":"m.text"},"ts":1321479600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the ultimate troll","msgtype":"m.text"},"ts":1321479601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we've (chromium) thought having things that are on in dev builds but not beta / stable","msgtype":"m.text"},"ts":1321479660000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"it gets tricky though","msgtype":"m.text"},"ts":1321479661000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"tantek: Producing a *good* testsuite for a spec is often lots of work. Perhaps more than implementing it. Almost no spec currently has a good testsuite (CSS 2.1 has a patchy but reasonable testsuite and that took *years*). Gating unprefixing on testsuites either requires a big change in how we get tests (suggestions welcome!) or just perpetuates the current problem","msgtype":"m.text"},"ts":1321479662000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for example you lose some of the benefits of having a dev channel if the thing you release to beta is not what was previously on dev","msgtype":"m.text"},"ts":1321479663000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"In practice authors are often happy to work around bugs in a feature if they get to use that feature","msgtype":"m.text"},"ts":1321479720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"some of the QA/testing benefits that is","msgtype":"m.text"},"ts":1321479721000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"another option is to ship prefixed features in all builds, but disabled behind a preference/config flag","msgtype":"m.text"},"ts":1321479840000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh, private flame from glazou","msgtype":"m.text"},"ts":1321479841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"roc: then you might as well do it unprefixed behind a config flag","msgtype":"m.text"},"ts":1321479842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that works too","msgtype":"m.text"},"ts":1321479900000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"then anyone can try the feature, we don't have to worry about code differences between dev and release builds, and authors still can't rely on it","msgtype":"m.text"},"ts":1321479901000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"jgraham - note that I specifically said test cases/suite for a *feature/property/value* - not a *spec*","msgtype":"m.text"},"ts":1321479902000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"very different problem","msgtype":"m.text"},"ts":1321479903000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"it seems though that we should be able to nail down a feature within half a year or so","msgtype":"m.text"},"ts":1321479960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I want to print this out and frame it: \"They care whether two UAs have incompatible implementations, because it affects their work.  They don't care what the exact reasons are _why_ that happens. -- Zbarsky.\"","msgtype":"m.text"},"ts":1321479961000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"so yeah, please no strawmen","msgtype":"m.text"},"ts":1321479962000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and within half a year we have happily made changes thus far","msgtype":"m.text"},"ts":1321479963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for non-CSS features","msgtype":"m.text"},"ts":1321479964000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so I really think it's a non-issue","msgtype":"m.text"},"ts":1321479965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: Depends on the feature","msgtype":"m.text"},"ts":1321479966000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"CSS just need to get with the times","msgtype":"m.text"},"ts":1321479967000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham - sure","msgtype":"m.text"},"ts":1321479968000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: There still isn't a really good <video> testsuite afaik","msgtype":"m.text"},"ts":1321479969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And yt everyone ships and no one says it should be prefixed","msgtype":"m.text"},"ts":1321480020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(prefixing is harder in HTML ofc. This doesn't seem o turn out bad very often)","msgtype":"m.text"},"ts":1321480021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i like roc's suggestion of a config flag","msgtype":"m.text"},"ts":1321480022000,"senderName":"divya","senderId":"divya@irc"},
{"content":{"body":"jgraham - because both Opera and Mozilla made changes to <video> as necessary in implementations","msgtype":"m.text"},"ts":1321480023000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"rather than be saddled with compat modes for old <video> content","msgtype":"m.text"},"ts":1321480024000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but not all implementations work that way","msgtype":"m.text"},"ts":1321480025000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I don't understand your point","msgtype":"m.text"},"ts":1321480080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In HTML and mostly in the APIs we haven't had prefixes","msgtype":"m.text"},"ts":1321480081000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham - OTOH CSS 'clip' property failed because it was implemented unprefixed, incompatibly, in IE which then had compat reasons that prevented fixing it.","msgtype":"m.text"},"ts":1321480082000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"What are the cases that turned out really bad that prefixing would have fixed","msgtype":"m.text"},"ts":1321480140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'filter' maybe, though it might turn out alright in the end","msgtype":"m.text"},"ts":1321480141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yes, unprefixed implementation by vendors who don't mind breaking early content have worked","msgtype":"m.text"},"ts":1321480142000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"there's like a few examples","msgtype":"m.text"},"ts":1321480143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: Incompatibly with what?","msgtype":"m.text"},"ts":1321480144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but that's only a few","msgtype":"m.text"},"ts":1321480145000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"blob.slice was tricky to fix, iirc","msgtype":"m.text"},"ts":1321480146000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but they by far do not outweigh gradients, transitions, etc.","msgtype":"m.text"},"ts":1321480147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"spec, other implementations etc. edge cases etc.","msgtype":"m.text"},"ts":1321480148000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"clip was *very* problematic","msgtype":"m.text"},"ts":1321480149000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"you mean the space-separated stuff?","msgtype":"m.text"},"ts":1321480150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that was the beginning of the reasons for doing prefixes","msgtype":"m.text"},"ts":1321480200000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"local storage could have ended up better, but prefixing wouldn't have helped (probably)","msgtype":"m.text"},"ts":1321480201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: So you think that img.src = frames[1].document.querySelector('#hasdataurl').src;    would trigger the first case, but  img.src = frames[1].document.querySelector('#hasdataurl').src.replace('1','3') would trigger the second origin policy?","msgtype":"m.text"},"ts":1321480202000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"jgraham, prefixing the DOM APIs for localStorage could have fixed it as well","msgtype":"m.text"},"ts":1321480203000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(Where 'first' is the next-to-last and 'second' is the last spec under image origin. Wish each of these had specific identifiers.)","msgtype":"m.text"},"ts":1321480204000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"remember, we had globalStorage first","msgtype":"m.text"},"ts":1321480205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: With clip, others shipped first and Microsoft just released a buggy implementation? Or Microsoft shipped first?","msgtype":"m.text"},"ts":1321480260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it took a very long time for localStorage problems to crop up","msgtype":"m.text"},"ts":1321480261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"too long basically","msgtype":"m.text"},"ts":1321480262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, prefixing wouldn't have helped","msgtype":"m.text"},"ts":1321480263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because the problems didn't become clear for so long that any sane process would have unprefixed","msgtype":"m.text"},"ts":1321480264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or flash would have won","msgtype":"m.text"},"ts":1321480265000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's not clear that localStorage's basic API is even fixable, since most of the likely fixes end up killing its main appeal (convenience)","msgtype":"m.text"},"ts":1321480320000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"should I bother restarting the thread with the language Brian wants?","msgtype":"m.text"},"ts":1321480440000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc, URL?","msgtype":"m.text"},"ts":1321480500000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"webkitURL","msgtype":"m.text"},"ts":1321480560000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Phrogz_: I'm not sure. :/","msgtype":"m.text"},"ts":1321480561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Us in WebKit.  It would indeed be unpopular with our Apps teams.  That doesn't mean we couldn't do it.","msgtype":"m.text"},"ts":1321480620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: OK, thanks. I'll try bringing this to the mailing list.","msgtype":"m.text"},"ts":1321480680000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"TabAtkins, to start with, dropping prefixed versions of properties when you implemented the unprefixed version would be a good start. Mozilla has that policy.","msgtype":"m.text"},"ts":1321480681000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I know they do.  That's very likely not going to happen.","msgtype":"m.text"},"ts":1321480682000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, why?","msgtype":"m.text"},"ts":1321480683000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"seems easier / less tempting than not adding them in the first place.","msgtype":"m.text"},"ts":1321480684000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"For one thing, those properties are often used in *Apple* products that can't easily be updated.  For two, preventing our Apps teams from using new stuff as quickly is one thing, making them remove stuff they already have is another.  ^_^","msgtype":"m.text"},"ts":1321480740000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tantek: And no, it's much harder than not adding int he first place.","msgtype":"m.text"},"ts":1321480741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"commenting out code so much easier than writing it  :p","msgtype":"m.text"},"ts":1321480742000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Is public-webapps⊙wo the right spot to discuss http://www.whatwg.org/specs/web-apps/current-work/multipage/origin-0.html#origin-0 ?","msgtype":"m.text"},"ts":1321480800000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"Better to email whatwg⊙wo","msgtype":"m.text"},"ts":1321480801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The fact that public-webapps shares a naming similarity with part of the URL for the html spec is a coincidence.","msgtype":"m.text"},"ts":1321480860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1321480861000,"senderName":"Phrogz_","senderId":"Phrogz_@irc"},
{"content":{"body":"Well, not a coincidence... Both are about web apps","msgtype":"m.text"},"ts":1321480862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, yeah.  But WebApps doesn't do the HTML spec.","msgtype":"m.text"},"ts":1321480863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: happy birthday!","msgtype":"m.text"},"ts":1321480920000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: Thanks!","msgtype":"m.text"},"ts":1321480921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And that","msgtype":"m.text"},"ts":1321480922000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: Happy birthday!","msgtype":"m.text"},"ts":1321481100000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Wait, it's Tab's birthday?","msgtype":"m.text"},"ts":1321481160000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Mine too!","msgtype":"m.text"},"ts":1321481161000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Yay!","msgtype":"m.text"},"ts":1321481162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Birthday buddies!","msgtype":"m.text"},"ts":1321481163000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"except I'm about 50 years old","msgtype":"m.text"},"ts":1321481164000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1321481165000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Congratulations/Condolences then","msgtype":"m.text"},"ts":1321481220000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Aren't you also on different sides of midnight?","msgtype":"m.text"},"ts":1321481280000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, yeah, I guess.","msgtype":"m.text"},"ts":1321481281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: You're Nov 17?","msgtype":"m.text"},"ts":1321481282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oooh yeah","msgtype":"m.text"},"ts":1321481340000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yes, I live in the future","msgtype":"m.text"},"ts":1321481341000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1321481342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Happy birthday both (although seeing \"happy birthday\" always makes me start humming \"unhappy birthday\" by The Smiths, so that too)","msgtype":"m.text"},"ts":1321481343000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"happy birthday to both of you!","msgtype":"m.text"},"ts":1321481344000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not birthday buddies, then.","msgtype":"m.text"},"ts":1321481400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":";_;","msgtype":"m.text"},"ts":1321481401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: you are truly a grump :)","msgtype":"m.text"},"ts":1321481402000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"No, no, it is just that the smiths are very hummable","msgtype":"m.text"},"ts":1321481460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well also yes","msgtype":"m.text"},"ts":1321481461000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But mostly the humming thing in this case","msgtype":"m.text"},"ts":1321481520000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah. well, that's true. I guess a true grump never hums, either.","msgtype":"m.text"},"ts":1321481521000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"a true grump only grumps.","msgtype":"m.text"},"ts":1321481522000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"grumps","msgtype":"m.emote"},"ts":1321481580000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you don't count. You don't really exist.","msgtype":"m.text"},"ts":1321481640000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"grumps","msgtype":"m.emote"},"ts":1321481641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1321481642000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Ms2ger exists, it's just a benevolent AI","msgtype":"m.text"},"ts":1321481700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"He's the european instantiation of the BZ algorithm.","msgtype":"m.text"},"ts":1321481701000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"BZ originally being run, of course, on MIT hardware.","msgtype":"m.text"},"ts":1321481760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"happy birthday TabAtkins","msgtype":"m.text"},"ts":1321481761000,"senderName":"timeless","senderId":"timeless@irc"},
{"content":{"body":"timeless: Thanks!","msgtype":"m.text"},"ts":1321481880000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"european? I always imagined Ms2ger being from Louisiana or someplace like that.","msgtype":"m.text"},"ts":1321482360000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Nah, his timezone is somewhere in europe.","msgtype":"m.text"},"ts":1321482361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"see? he left.","msgtype":"m.text"},"ts":1321482420000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"grumbles at irssi","msgtype":"m.emote"},"ts":1321482421000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's probably because it's Alligator-hunten time!","msgtype":"m.text"},"ts":1321482422000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"aw, nobody sent me their opinions on the duration thing","msgtype":"m.text"},"ts":1321482480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, nobody cares","msgtype":"m.text"},"ts":1321482481000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sorry","msgtype":"m.text"},"ts":1321482482000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"seems that way","msgtype":"m.text"},"ts":1321482483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the duration thing?","msgtype":"m.text"},"ts":1321482484000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: looking for someone to fill in http://www.whatwg.org/specs/web-apps/current-work/temp and mail it to me :-)","msgtype":"m.text"},"ts":1321482540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Someone with an nvidia.com e-mail address asking questions about the origin of data: URLs?  Seems odd.","msgtype":"m.text"},"ts":1321482541000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"webkit engineer i believe","msgtype":"m.text"},"ts":1321482720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger, by the way, there's something that fails for NodeList on a nightly (trying to poke NodeList.prototype.length): http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html","msgtype":"m.text"},"ts":1321482780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(or you can use http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html, if you want something more official-looking)","msgtype":"m.text"},"ts":1321482900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It throws, right?","msgtype":"m.text"},"ts":1321482901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's per spec","msgtype":"m.text"},"ts":1321482902000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Really?","msgtype":"m.text"},"ts":1321482903000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Where?","msgtype":"m.text"},"ts":1321482904000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's subtle","msgtype":"m.text"},"ts":1321482905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"length is an own property, not gotten fromt eh prototype, I think.","msgtype":"m.text"},"ts":1321482960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, nope","msgtype":"m.text"},"ts":1321482961000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, shrug then.","msgtype":"m.text"},"ts":1321482962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"WebIDL seems to imply that it's on the prototype.","msgtype":"m.text"},"ts":1321482963000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"length is a getter that throws if |this| is not a NodeList","msgtype":"m.text"},"ts":1321482964000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Which NodeList.prototype isn't","msgtype":"m.text"},"ts":1321482965000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1321482966000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Really?","msgtype":"m.text"},"ts":1321482967000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1321482968000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Where does it say that?","msgtype":"m.text"},"ts":1321482969000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/WebIDL/#es-attributes","msgtype":"m.text"},"ts":1321483020000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Presumably in the ES spec.","msgtype":"m.text"},"ts":1321483021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DOM4 describes it as a regular old attribute.","msgtype":"m.text"},"ts":1321483022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"regular old attributes are all accessor properties on the prototype","msgtype":"m.text"},"ts":1321483023000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"What heycam said","msgtype":"m.text"},"ts":1321483024000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, right.","msgtype":"m.text"},"ts":1321483025000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I'm not actually getting it, I don't think.","msgtype":"m.text"},"ts":1321483140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or I'm not intending to.","msgtype":"m.text"},"ts":1321483141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so as Ms2ger says, NodeList.prototype is not a NodeList object","msgtype":"m.text"},"ts":1321483200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's just a plain object","msgtype":"m.text"},"ts":1321483201000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Right, I get that.","msgtype":"m.text"},"ts":1321483202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I think all I'm doing is calling hasOwnProperty and getOwnPropertyDescriptor on it.","msgtype":"m.text"},"ts":1321483203000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"the getter for NodeList.prototype.length does a check to see what its this object is","msgtype":"m.text"},"ts":1321483204000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if it's not a NodeList, it throws","msgtype":"m.text"},"ts":1321483205000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Oh","msgtype":"m.text"},"ts":1321483206000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"those should succeed...","msgtype":"m.text"},"ts":1321483207000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"It may be getOPD being broken as well","msgtype":"m.text"},"ts":1321483208000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I noticed bholley was looking at that","msgtype":"m.text"},"ts":1321483260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"getOwnPropertyDescriptor looks like it's what's throwing.","msgtype":"m.text"},"ts":1321483261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"definitely a bug then","msgtype":"m.text"},"ts":1321483262000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"NodeFilter.prototype doesn't exist in Gecko.  o_O","msgtype":"m.text"},"ts":1321483440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's not that surprising if the ES5 introspection magic fails with host objects","msgtype":"m.text"},"ts":1321483441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It does in Opera I believe","msgtype":"m.text"},"ts":1321483500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"NodeFilter's a funny one","msgtype":"m.text"},"ts":1321483501000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"being something intended to be implemented by JS","msgtype":"m.text"},"ts":1321483502000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"jgraham, well, it's not per spec, so . . .","msgtype":"m.text"},"ts":1321483503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but also something that can be a host object","msgtype":"m.text"},"ts":1321483504000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(iirc)","msgtype":"m.text"},"ts":1321483505000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Ms2ger, also, you know that the entire prototype chain for Nodes is messed up, right?  Everything seems to be on the last prototype object, nothing much is on Node.prototype or Document.prototype or such.","msgtype":"m.text"},"ts":1321483506000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1321483560000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"or that might be XPathFilter or something","msgtype":"m.text"},"ts":1321483561000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"That's by design","msgtype":"m.text"},"ts":1321483562000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is that for performance or something?","msgtype":"m.text"},"ts":1321483563000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's causing like half the tests to fail.","msgtype":"m.text"},"ts":1321483564000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Dunno, it's an awful design","msgtype":"m.text"},"ts":1321483565000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Blame netscape","msgtype":"m.text"},"ts":1321483566000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(WebKit fails almost all of them, and IE9 seems to be closest to spec)","msgtype":"m.text"},"ts":1321483567000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Right, it is a bug","msgtype":"m.text"},"ts":1321483620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But an unsurprising one given that the ability to do this is rather new","msgtype":"m.text"},"ts":1321483621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1321483680000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, I expect us to get a lot better in the following 6 months or so","msgtype":"m.text"},"ts":1321483681000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"plans to actually test writable/enumerable/configurable-ness, too, not just trust getOPD","msgtype":"m.emote"},"ts":1321483800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sounds reasonable","msgtype":"m.text"},"ts":1321483801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder how much the web depends on the details of things like whether properties on prototypes are configurable or not.","msgtype":"m.text"},"ts":1321483920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It sure depends on awful things about on* properties","msgtype":"m.text"},"ts":1321483980000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Like what?","msgtype":"m.text"},"ts":1321483981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Being able to set them on the prototype and stuff","msgtype":"m.text"},"ts":1321484040000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ask heycam :)","msgtype":"m.text"},"ts":1321484041000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor, yeah was on old version of prototype that was being used one some sites","msgtype":"m.text"},"ts":1321484100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and it was doing something like Interface.prototype.onsomething = null","msgtype":"m.text"},"ts":1321484101000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Whee.","msgtype":"m.text"},"ts":1321484102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so previously when on* things were on the instance, this was basically just doing nothing","msgtype":"m.text"},"ts":1321484160000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"now with on* being accessors on prototype.... throw","msgtype":"m.text"},"ts":1321484161000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"observes that ES seems to be one case where there are clear versions that browsers actually implement completely in a timely fashion, and it seems to work well","msgtype":"m.emote"},"ts":1321484340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"prefix all the things!","msgtype":"m.text"},"ts":1321484341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"AryehGregor, really? nobody has ever fully implemented ES3, and nobody can since it's incompatible with the web","msgtype":"m.text"},"ts":1321484400000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"and there aren't any full implementations of ES5 that i'm aware of (although some folks are getting close)","msgtype":"m.text"},"ts":1321484401000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Opera fails 1 test","msgtype":"m.text"},"ts":1321484402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but given that ES5 does not include http://wiki.whatwg.org/wiki/Web_ECMAScript it's not really real world compatible :(","msgtype":"m.text"},"ts":1321484460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so we're close to having the first ever implementation of a clear version of an ECMAScript","msgtype":"m.text"},"ts":1321484461000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"I think that one test we fail is a likely web compat issue","msgtype":"m.text"},"ts":1321484580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, gecko and others implement parts of es.next in an unprefixed (afaik) way","msgtype":"m.text"},"ts":1321484640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"certianly historically gecko has had a bunch of nonstandard stuff","msgtype":"m.text"},"ts":1321484641000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it isn't really clear that this is an example of clear versions that everyone implements in a timely fashion","msgtype":"m.text"},"ts":1321484700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(scripting engines are also a bit special because they are very self-contained and typically have dedicated teams working on them)","msgtype":"m.text"},"ts":1321484760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"for duration values: if \"1h\", \"1min\", and \"1mo\" are conforming, but \"1m\" is not (ambiguous), should a duration of \"1hour\" be conforming?","msgtype":"m.text"},"ts":1321484820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Are the i18n people not going to cut out your kidneys?","msgtype":"m.text"},"ts":1321484821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: I vote for simple first","msgtype":"m.text"},"ts":1321484880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm with annevk.  min and mo are the only ambiguous case.","msgtype":"m.text"},"ts":1321484940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And if you'd just switch to bimonths that ambiguity would disappear.  ^_^","msgtype":"m.text"},"ts":1321484941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: we can always allow more syntax later; we have use cases for duration, not for lots of different duration syntax","msgtype":"m.text"},"ts":1321485000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where's the new event constructor syntax doc? linky?","msgtype":"m.text"},"ts":1321485060000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"http://www.w3.org/TR/domcore/#events","msgtype":"m.text"},"ts":1321485120000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: I answer my own questions","msgtype":"m.text"},"ts":1321485180000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"great :)","msgtype":"m.text"},"ts":1321485420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1321485421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I've not read the history, FWIW, but for WebIDL testing see <http://suika.fam.cx/www/webidl2tests/readme>","msgtype":"m.text"},"ts":1321485600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: Massively outdated, but tests based upon WebIDL,","msgtype":"m.text"},"ts":1321485660000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: JSC supported all of ES5 except Function.prototype.bind for ages, IE9 doesn't support strict mode. It's far from entirely versioned…","msgtype":"m.text"},"ts":1321485720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Web ECMAScript doesn't actually contradict in ES5.","msgtype":"m.text"},"ts":1321485780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Something supporting all those variants is still a conforming ES5 impl","msgtype":"m.text"},"ts":1321485781000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heycam: WebIDL is inconsistent: operator getters and attribute getters should have identical behaviour for checking this.","msgtype":"m.text"},"ts":1321486380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heycam: I mentioned that in an email forever ago, but I think you missed it","msgtype":"m.text"},"ts":1321486620000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]