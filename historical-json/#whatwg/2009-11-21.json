[
{"content":{"body":"hsivonen: in the message-emitter code, I don't see that there's currently any way to change the type of a MessageType","msgtype":"m.text"},"ts":1258798500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see the getSuperType method, but no setSuperType","msgtype":"m.text"},"ts":1258798501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I assume I'll need to add a property and method to each of the message type classes?","msgtype":"m.text"},"ts":1258798620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"should really sleep some more but is amusing himself with public-html email","msgtype":"m.emote"},"ts":1258803840000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"is there a reason why the w3c html5 validator doesn't recognize <meta charset=\"utf-8\">, other than that it's experimental?","msgtype":"m.text"},"ts":1258812180000,"senderName":"murr4y","senderId":"murr4y@irc"},
{"content":{"body":"murr4y: bug in the Perl front end","msgtype":"m.text"},"ts":1258812600000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"aha","msgtype":"m.text"},"ts":1258812720000,"senderName":"murr4y","senderId":"murr4y@irc"},
{"content":{"body":"(already reported)","msgtype":"m.text"},"ts":1258812721000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: I don't have the source code or an svn client on this computer, so I'm going from memory","msgtype":"m.text"},"ts":1258812780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in MessageEmitterAdapter, trace the call tree from error(SAXException) down to message(Type,...)","msgtype":"m.text"},"ts":1258812840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in the method highest in the tree (maybe error() itself, I forget) that first calls message(Type, ...) with an Error subclass of Type as the argument, do the following","msgtype":"m.text"},"ts":1258812900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"use instanceof the check if the SAXException is a RELAX NG error sbclass that wraps DataTypeExceptions","msgtype":"m.text"},"ts":1258812960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if t is, itereate over the DataTypeExceptions and use instanceof to see if any one of them is an Html5DatatypeException","msgtype":"m.text"},"ts":1258812961000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://dev.w3.org/cvsweb/validator/httpd/cgi-bin/check?rev=1.719&content-type=text/x-cvsweb-markup","msgtype":"m.text"},"ts":1258812962000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"on Html5DatatypeExceptions, call isWarning()","msgtype":"m.text"},"ts":1258813020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you mamage to get a return value true from even one Html5DatatypeException by doing this, call the message method with Warning as the Type argument","msgtype":"m.text"},"ts":1258813080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"otherwise, use Error as Type the way it's used now","msgtype":"m.text"},"ts":1258813081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that should be about it","msgtype":"m.text"},"ts":1258813082000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the instanceof code will look ugly :-(","msgtype":"m.text"},"ts":1258813083000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith!","msgtype":"m.text"},"ts":1258813140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: I just tried to answer you question","msgtype":"m.text"},"ts":1258813141000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: hey","msgtype":"m.text"},"ts":1258813142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I got it figured out","msgtype":"m.text"},"ts":1258813143000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1258813200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't see it","msgtype":"m.text"},"ts":1258813201000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: did you arrive at the same conclusion as what I just wrote in the log?","msgtype":"m.text"},"ts":1258813202000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I'll take a look at the logs now.. hang on","msgtype":"m.text"},"ts":1258813203000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20091121#l-167","msgtype":"m.text"},"ts":1258813204000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/mamage/manage/","msgtype":"m.text"},"ts":1258813260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also doesn't have a proper keyboard on this computer","msgtype":"m.emote"},"ts":1258813261000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: sorry, got distracted of a bit","msgtype":"m.text"},"ts":1258814220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so the part about tracing the call tree I had figured out","msgtype":"m.text"},"ts":1258814280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that part was fine","msgtype":"m.text"},"ts":1258814281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but the part about calling the message method with Warning as the type -- I can't see how to actually do that","msgtype":"m.text"},"ts":1258814340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"because the call to message is way further down","msgtype":"m.text"},"ts":1258814341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hahaha, my random doctypes are already spreading like a virus!","msgtype":"m.text"},"ts":1258814342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: you need to downcast","msgtype":"m.text"},"ts":1258814400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: Random doctypes?","msgtype":"m.text"},"ts":1258814401000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"http://www.xanthir.com/etc/doctype.php","msgtype":"m.text"},"ts":1258814402000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Triggers standards mode.","msgtype":"m.text"},"ts":1258814403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<!DOCTYPE html SYSTEM \"crimson-wombat\">","msgtype":"m.text"},"ts":1258814460000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"if (dte instanceof Html5DatatypeException) { Html5DatatypeException hdte = (Html5DatatypeException)dte; if (hdte.isWarning()) {...}}","msgtype":"m.text"},"ts":1258814461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I got someone to cargo-cult \"mediumorched-mynah bird\" in their page.  ^_^","msgtype":"m.text"},"ts":1258814462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and the same pattern for the SAXException itself","msgtype":"m.text"},"ts":1258814463000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/orched/orchid/","msgtype":"m.text"},"ts":1258814464000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: ah, OK","msgtype":"m.text"},"ts":1258814520000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so not knowing, what I had ended up doing was adding setSuperType and setSubType and setPresentationName methods to the MessageType class, and then I changed all the subclasses so that their contents are just a constructor that sets the superType and subType and presentationName","msgtype":"m.text"},"ts":1258814880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I'll pastebin the patch so you can see what I mean","msgtype":"m.text"},"ts":1258815000000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: http://pastebin.ca/1680958","msgtype":"m.text"},"ts":1258815240000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1258815300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: minus the stuff at lines 31-33 of the diff","msgtype":"m.text"},"ts":1258815360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(that's just some clumsy debugging I had added earlier and forgot to revert)","msgtype":"m.text"},"ts":1258815361000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: the Type instances were supposed to be immutable singletons, IIRC.","msgtype":"m.text"},"ts":1258816020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: so adding setters isn't geed","msgtype":"m.text"},"ts":1258816021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1258816022000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1258816023000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I find it ironic that a proposed solution to the level of indirection problems inherent to xmlns and prefixes, is to add another level of indirection on top with the unobtrusive namespace proposal.","msgtype":"m.text"},"ts":1258816024000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"can you hoist the instanceof stuff into the method that call message with a Type argument?","msgtype":"m.text"},"ts":1258816080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and pass a different singleton argument there?","msgtype":"m.text"},"ts":1258816081000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: That's not inherently a bad approach.  It may be that the xmlns style of indirection is confusing and/or inadequate, but a different style of indirection is more natural.","msgtype":"m.text"},"ts":1258816082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Lachy: Not saying that Liam's suggestion is good; I still don't have a real opinion of it.","msgtype":"m.text"},"ts":1258816140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What was the issue that needed a change proposal that basically said \"Keep the status quo\"?","msgtype":"m.text"},"ts":1258816141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In Krzysztof's latest reply, he's now suggesting that browsers would simply recognise URIs of known namespace definition files, so they wouldn't need to request them","msgtype":"m.text"},"ts":1258816320000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"that effectively makes the namespace definition files themselves useless, and it's just reinventing profile=\"\"","msgtype":"m.text"},"ts":1258816380000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Indeed.","msgtype":"m.text"},"ts":1258816381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though, of course the problems I outlined in my previous mail would still exist for unrecognised URIs, assuming the idea is still for browsers to request them. (If not, then it doesn't really solve any sort of distributed extensibility problems)","msgtype":"m.text"},"ts":1258816440000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"basically, the whole underlying concept behind the unobtrusive namespace proposal is fundamentally flawed, no matter how you look at it.","msgtype":"m.text"},"ts":1258816500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'd probably agree.  It's as flawed as DTDs, and look where that ended up.","msgtype":"m.text"},"ts":1258816560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hsivonen: no, I'm not sure how I can. That's the problem -- there are conditionals earlier in the main message() method that check to see whether the exception is an error or a warning, then calls to messageWithExact, etc., get made after that","msgtype":"m.text"},"ts":1258816620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is about to run out of battery power","msgtype":"m.emote"},"ts":1258816621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Lachy: I don't think the proposals were trying to solve the problem of levels of indirection, they were just trying to solve the problem \"HTML people don't like XML namespaces\" by making anything that's not quite the same as XML namespaces in the hope that people will like it more","msgtype":"m.text"},"ts":1258816860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and not directly addressing the fundamental concerns about indirection and complexity and desirability of extensions etc","msgtype":"m.text"},"ts":1258816980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"MikeSmith: I think you need the instanceof on SAXException in two places","msgtype":"m.text"},"ts":1258817100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"in the current place and higher up when the Type object is chosen","msgtype":"m.text"},"ts":1258817160000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: OK","msgtype":"m.text"},"ts":1258817280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think I see now what I can do","msgtype":"m.text"},"ts":1258817281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]