[
{"content":{"body":"Alternately: Most people were taught OO in Java or C++, so of *course* they dislike anything with a different system.","msgtype":"m.text"},"ts":1381363202000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(that isn't how I've ever thought of OO)","msgtype":"m.text"},"ts":1381363220000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's true of some people, but other people i've talked to are people with a decade+ of experience with C++ and Java and other languages","msgtype":"m.text"},"ts":1381363223000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just because you learnt one model doesn't mean you don't prefer others.","msgtype":"m.text"},"ts":1381363242000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i originally learnt without OO and i prefer OO, for instance. :-)","msgtype":"m.text"},"ts":1381363254000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(for many purposes; obviously, not all.)","msgtype":"m.text"},"ts":1381363265000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Sure, it's cool to prefer whatever. I like CLOS best out of every one I've found, for example.","msgtype":"m.text"},"ts":1381363268000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which is definitely not prototype-based.  It's \"generic function-based\", if anything.","msgtype":"m.text"},"ts":1381363284000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and what i'm saying is that it's an active _dislike_ for js' model that i see","msgtype":"m.text"},"ts":1381363286000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i learned in basic on an apple II, but i try not to let that hold me back","msgtype":"m.text"},"ts":1381363291000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I've never seen that.  Shrug.","msgtype":"m.text"},"ts":1381363294000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you just saw it from zewt :-)","msgtype":"m.text"},"ts":1381363303000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"anyway. all this is skipping past the point that i thought was particularly interesting, which is that the JS model isn't the model browsers use, so so long as we have it, you can't \"explain the platform\" with it","msgtype":"m.text"},"ts":1381363324000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: Do you also read $ as \"string\" ?","msgtype":"m.text"},"ts":1381363324000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"so \"explain the model\" is both not a good argument, and not one that actually applies","msgtype":"m.text"},"ts":1381363340000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's definitely the model browsers use","msgtype":"m.text"},"ts":1381363355000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"they just have access to one extra primitive, namely actual private state","msgtype":"m.text"},"ts":1381363365000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"there are direct APIs for this in V8 and SpiderMonkey","msgtype":"m.text"},"ts":1381363373000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"SetHiddenValue/GetHiddenValue in V8","msgtype":"m.text"},"ts":1381363379000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"not really, it's probably been 20 years since I've touched \"classic\" basic, heh","msgtype":"m.text"},"ts":1381363403000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: Huh?  Browsers use JS+magic.  We're just trying to explain the magic so we can do things that look the same in pure JS.","msgtype":"m.text"},"ts":1381363430000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"much more time learning to hate $ thanks to perl and php","msgtype":"m.text"},"ts":1381363435000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"...browsers use C++...","msgtype":"m.text"},"ts":1381363447000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I'm talking about what authors see.","msgtype":"m.text"},"ts":1381363497000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Browsers talk to the author with JS+magic.","msgtype":"m.text"},"ts":1381363505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"some use rust. some use self-hosted stuff (i.e. JS). that's all unobservable to authors. authors see JS APIs.","msgtype":"m.text"},"ts":1381363508000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so clearly i don't even know what you mean by \"Explain the platform\" then","msgtype":"m.text"},"ts":1381363530000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It means reducing the size of that \"magic\" bit.","msgtype":"m.text"},"ts":1381363603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So that it's all just \"JS\".","msgtype":"m.text"},"ts":1381363607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i don't understand. what kind of magic are we talking about?","msgtype":"m.text"},"ts":1381363640000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, we're not talking about implementing Event or Node or Document or Window in JS, right?","msgtype":"m.text"},"ts":1381363659000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or WebSocket, or XMLHttpRequest, or Location, or History","msgtype":"m.text"},"ts":1381363668000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Everything that can't be reproduced in pure JS (or can't be reproduced in a remotely similar way; for example, if it requires substantially more memory or processing time to do in JS over what native gets).","msgtype":"m.text"},"ts":1381363672000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(incidentally, i've completely lost the discussion, heh)","msgtype":"m.text"},"ts":1381363686000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"surely anything that can be reproduced in JS should just be a library","msgtype":"m.text"},"ts":1381363699000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Or at least minimizing that \"magic\" to the small set of things that really are impossible to provide securely, or just far too difficult.","msgtype":"m.text"},"ts":1381363705000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the whole point of having a platform is to provide things you can't do in a library","msgtype":"m.text"},"ts":1381363709000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That should be about access to capabilities, not about basic expressive semantics","msgtype":"m.text"},"ts":1381363730000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"No, it's also to provide common idioms so we're all talking the same language for common things.","msgtype":"m.text"},"ts":1381363731000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think that hits my problem with this","msgtype":"m.text"},"ts":1381363731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"err, what?","msgtype":"m.text"},"ts":1381363735000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(the former being access to a web socket, the latter being 'having private state'","msgtype":"m.text"},"ts":1381363743000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I am *super* not getting into the \"never provide anything in the platform that can be done in JS\" argument.","msgtype":"m.text"},"ts":1381363746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess that argument is the crux of the matter","msgtype":"m.text"},"ts":1381363764000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That argument is decided. The people who say \"never\" are wrong, and nobody listens to them.","msgtype":"m.text"},"ts":1381363787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1381363795000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think the opposite is clearly true","msgtype":"m.text"},"ts":1381363812000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we almost never add features that can just be done in libraries","msgtype":"m.text"},"ts":1381363821000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Writing some code a few times in browsers is better than having it written by millions of authors and sent down over millions of page connections.","msgtype":"m.text"},"ts":1381363823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's no point","msgtype":"m.text"},"ts":1381363823000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"You can reproduce basically the entire platform with a socket library and WebGL.","msgtype":"m.text"},"ts":1381363846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Your argument is invalid. ^_^","msgtype":"m.text"},"ts":1381363851000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that is true for things that browsers can do better, but by definition, if browsers can do it better, then it's not something that can be done in JS","msgtype":"m.text"},"ts":1381363854000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if your argument was what we applied to the platform, there'd be almost no JS out there","msgtype":"m.text"},"ts":1381363871000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and browsers would be terabytes in size","msgtype":"m.text"},"ts":1381363881000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(i'm confused and surprised; I thought it was, at least among most people here, universally agreed that things should go in the platform even if they can be done in libraries if they're common enough, since developers shouldn't need to load a bunch of libraries to do basic stuff)","msgtype":"m.text"},"ts":1381363910000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(with the meaning of \"common enough\" being more debated)","msgtype":"m.text"},"ts":1381363972000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't think we've ever added anything that can be done in JS as well as natively. What did you have in mind?","msgtype":"m.text"},"ts":1381364049000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"we add things that people do as well as they can, but that native could do far better, to the platform, for sure","msgtype":"m.text"},"ts":1381364068000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"for example, the whole URL API that anne's been working on--i'm definitely tired of having to copy around query parameter parsing code everywhere I go, as well as that everyone reading my code has to learn the particular API I'm using, instead of seeing a common, standard API and knowing it already","msgtype":"m.text"},"ts":1381364090000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yes, exactly.","msgtype":"m.text"},"ts":1381364153000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the bulk of that API is Location and HTMLAnchorElement, which can't be done with JS","msgtype":"m.text"},"ts":1381364184000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm talking about the API to parse out a URL into components","msgtype":"m.text"},"ts":1381364203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's just the Location/HTMLAnchorElement API split out into a separate independent component","msgtype":"m.text"},"ts":1381364235000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"which people do all the time in JS, and there's no performance issue there, it's just a pain in the ass, and ridiculously commonly needed","msgtype":"m.text"},"ts":1381364240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie's argument would, for example, kill Set, since it's just a library over Map.  (Map is needed, since you can't do Map in Map-less JS without severe performance penalties - lookup is O(n).)","msgtype":"m.text"},"ts":1381364299000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah i really don't understand why we have many of the new JS features, Set included.","msgtype":"m.text"},"ts":1381364316000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"And I don't understand why you don't understand, thus the difficulty in explaining more advanced things.","msgtype":"m.text"},"ts":1381364336000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"exaggeration aside i don't think browsers would be \"terabytes in size\" even if this was taken too far; Python has a very broad standard library (much more than I'd ever argue for browsers), and it's maybe 60 megs","msgtype":"m.text"},"ts":1381364340000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(but it's clear that JS isn't being build with the same principles in mind as we're using e.g. for HTML)","msgtype":"m.text"},"ts":1381364347000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"It seems very self-evident to me, as someone who does web programming regularly.","msgtype":"m.text"},"ts":1381364358000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ditto, but the opposite is what seems self-evident. :-)","msgtype":"m.text"},"ts":1381364383000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: Yeah, but loading an extra 60megs into each tab is somewhat less good.","msgtype":"m.text"},"ts":1381364392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: if it was taken to its logical extension, no web authors would write any code.","msgtype":"m.text"},"ts":1381364402000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: so browsers would have the code of every app in the world :-)","msgtype":"m.text"},"ts":1381364412000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: That's not the logical extensions, that's ad absurdum.","msgtype":"m.text"},"ts":1381364416000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, that can be alleviated (you don't load things until they're used, shared memory for precompiled bytecode, etc)","msgtype":"m.text"},"ts":1381364425000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: like I said before, \"common enough\"","msgtype":"m.text"},"ts":1381364440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"a tetris API is clearly not common enough, so people will still have to implement tetris themselves :)","msgtype":"m.text"},"ts":1381364458000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yeah, maybe.  I suspect we'll end up moving into the \"broad standard library\" world eventually, anyway.","msgtype":"m.text"},"ts":1381364461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess the logical extension would be anything that's implemented at least 5 times, so not everything.","msgtype":"m.text"},"ts":1381364478000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"A realistic cutoff is quite a bit higher, but something like that.","msgtype":"m.text"},"ts":1381364515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: a similar trick in Python for server-based worker pools is to load everything you need before you fork workers, for example","msgtype":"m.text"},"ts":1381364516000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: my guess is tetris has been implemented more than 5 times, but I'd still say it's not common enough :)","msgtype":"m.text"},"ts":1381364542000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(\"been implemented\" = in javascript)","msgtype":"m.text"},"ts":1381364558000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Right now the criteria seems to be \"implemented at least thousands of times, or implemented in a few popular libraries used by millions\", roughly.","msgtype":"m.text"},"ts":1381364607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"anyway, i don't think that's the right criteria","msgtype":"m.text"},"ts":1381364617000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think we should add things to the platform when doing so provides something that you can't do from the authoring side.","msgtype":"m.text"},"ts":1381364637000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it seems like you're arguing that there are only two possibilities, implementing only what can't be done in libraries at all, or implementing everything ever; there are a lot of places in-between","msgtype":"m.text"},"ts":1381364656000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Shrug, it's a reasonable calculus, when you consider author time vs browser dev time, and user page-load time.","msgtype":"m.text"},"ts":1381364662000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"now, that might be just consistency across a lot of authors, the way URL is (it can be cheaply added since it's just the existing API made independent)","msgtype":"m.text"},"ts":1381364666000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but my point is that if that's your criteria, then it doesn't make any sense to talk about making the platform into something you can do in JS","msgtype":"m.text"},"ts":1381364691000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"since the whole _point_, under this design philosophy, is to provide things that can't be done","msgtype":"m.text"},"ts":1381364702000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and so it's a futile goal","msgtype":"m.text"},"ts":1381364707000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Most of us don't operate under your particularly strict criteria, so that's irrelevant.","msgtype":"m.text"},"ts":1381364719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you know, it's incredibly frustrating and insulting when you just dismiss other people's concerns repeatedly.","msgtype":"m.text"},"ts":1381364743000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: You know that I can say the exact same thing back, right?","msgtype":"m.text"},"ts":1381364755000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"i disagree with you, so i'll ignore you\"","msgtype":"m.text"},"ts":1381364756000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm not ignoring you","msgtype":"m.text"},"ts":1381364761000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i've been trying to understand your point of view for a few hours now","msgtype":"m.text"},"ts":1381364771000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"I disagree with you, so I'll just repeatedly ask for use-cases and not accept anything you say.\"","msgtype":"m.text"},"ts":1381364772000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"while you keep saying you're giving up","msgtype":"m.text"},"ts":1381364775000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1381364776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's a qualitiative difference here","msgtype":"m.text"},"ts":1381364791000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"qualitative even","msgtype":"m.text"},"ts":1381364805000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"If your definition of use-case explicitly excludes the kinds of things we're trying to do, there's not really a difference.","msgtype":"m.text"},"ts":1381364818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Which in many of these cases is \"make author's lives easier by having better consistency in the platform and across independent libraries\".)","msgtype":"m.text"},"ts":1381364845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, I've explained it. You didn't accept the explanation.  I can't do a lot about that.","msgtype":"m.text"},"ts":1381364862000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've already learned from talking to you for years that you have certain opinions about programming languages that are very different from mine, and different from those of many involved in JS and DOM standards.","msgtype":"m.text"},"ts":1381364909000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And they aren't the kind of differences that can generally be bridged just by explaining.  You've learned things differently, and prefer different patterns.  Shrug.","msgtype":"m.text"},"ts":1381364931000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: ... he's not dismissing anything, I typed the exact same thing he did (and ^U'd it since he said it first)","msgtype":"m.text"},"ts":1381364986000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you're saying \"if this is your criteria, then this doesn't make sense\"; that's *not* his criteria, so that's irrelevant","msgtype":"m.text"},"ts":1381365040000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i'm specifically referring to e.g. \"we've just ignored you and worked around it\", \"it's not worth explaining to you\", \"I'm sorry you don't understand\", \"You just don't accept it.  Shrug.\", \"I refuse to explain the concept of private state to you\", \"It's... not worth explaining a basic computer science concept to you\", \"That argument is decided. The people who say \"never\" are wrong, and nobody listens to them\", \"Your argument is invalid\", etc","msgtype":"m.text"},"ts":1381365358000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"on another note, i'm still curious about the use case for \"frozen\". nothing in the platform acts like that, does it? what is it for?","msgtype":"m.text"},"ts":1381365469000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Several of those are seriously basic concepts which I shouldn't have to explain. Wikipedia is an easier reference than asking me.","msgtype":"m.text"},"ts":1381365484000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am indeed sometimes sorry you don't understand.  Like I just said, you prefer different patterns, and sometimes seem to have a hard time accepting that patterns you personally dislike are still liked by others, and so things using those patterns are okay to develop.","msgtype":"m.text"},"ts":1381365545000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The \"Your argument is invalid.\" was a joke, referencing the meme.","msgtype":"m.text"},"ts":1381365594000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've thought about using \"frozen\" in the past; if I remember correctly, it would only throw in strict mode? or was that something else similar to it","msgtype":"m.text"},"ts":1381365697000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Yeah.","msgtype":"m.text"},"ts":1381365704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It no-ops in sloppy mode.","msgtype":"m.text"},"ts":1381365715000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(having properties just silently not change seems horribly confusing, so I didn't use it, and strict is useless until every browser supports it)","msgtype":"m.text"},"ts":1381365728000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Every modern browser does, no?","msgtype":"m.text"},"ts":1381365749000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"don't know--they didn't when I looked at that feature","msgtype":"m.text"},"ts":1381365761000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Pretty sure they do now, but I can't name when each got it.","msgtype":"m.text"},"ts":1381365822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(i also don't recall why I wanted it, or if I was just looking at it randomly)","msgtype":"m.text"},"ts":1381365884000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i know I've wanted things like that in Python even recently, eg. where I return an array or a dictionary by reference and I want to make sure the caller doesn't accidentally modify it","msgtype":"m.text"},"ts":1381366371000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(usually I end up making a deep copy instead, which is usually okay)","msgtype":"m.text"},"ts":1381366388000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, but it's silly to have to defensively eat the cost of a copy, when most of the time the caller won't even modify anything. Forcing the cost on the rare modifying cases is better.","msgtype":"m.text"},"ts":1381366483000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, as long as the cost is only when you try to modify something frozen, not on everything","msgtype":"m.text"},"ts":1381366601000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1381366734000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Otherwise, you're looking at a functional data structure.  Those are pretty interesting, but definitely harder to use. ^_^","msgtype":"m.text"},"ts":1381366769000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay, this \"es6 template string\" thing that somebody randomly linked on the list definitely looks like pointless language bloat","msgtype":"m.text"},"ts":1381366777000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It's \"how do I embed DSLs in JS\".","msgtype":"m.text"},"ts":1381366854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The answer is \"it's complicated\", apparently.","msgtype":"m.text"},"ts":1381366859000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"python's formatting model seems simpler and better","msgtype":"m.text"},"ts":1381366860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"You can process things more powerfully than Python's simply str.format","msgtype":"m.text"},"ts":1381366899000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"don't know about str.format, i mean the '%(x)s' % {'x': foo} thing","msgtype":"m.text"},"ts":1381366935000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"maybe format is the same thing","msgtype":"m.text"},"ts":1381366942000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that avoids putting code in the string itself","msgtype":"m.text"},"ts":1381366990000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, .format is the same thing.","msgtype":"m.text"},"ts":1381367013000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Preferred now.","msgtype":"m.text"},"ts":1381367016000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not by me, heh","msgtype":"m.text"},"ts":1381367025000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Has the nice benefit that you can pass it to map()!","msgtype":"m.text"},"ts":1381367041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've never seen map() used in python except by people who haven't learned comprehensions","msgtype":"m.text"},"ts":1381367061000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hah, I've used both.","msgtype":"m.text"},"ts":1381367077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"in my experience map is 100% always harder to read","msgtype":"m.text"},"ts":1381367090000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(and I use traditional format strings wherever I can, unless the format string is from an external source or too complex; they're just much more concise and easier to author)","msgtype":"m.text"},"ts":1381367238000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"no comparison between '%ix%i' % (x, y) and '%(x)ix%(y)i' % { 'x': x, 'y': y }","msgtype":"m.text"},"ts":1381367304000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which is about the level of most inline formatting","msgtype":"m.text"},"ts":1381367327000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so what _is_ the point of freezing?","msgtype":"m.text"},"ts":1381367611000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, the Python case I had applies to any language (making sure that people don't modify things accidentally, without having to make a deep copy all the time)","msgtype":"m.text"},"ts":1381367691000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"whether that's a practical issue in JS code I couldn't say, but I've wanted it in other places","msgtype":"m.text"},"ts":1381367734000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"can't you just do that with getters and setters?","msgtype":"m.text"},"ts":1381367762000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: Using .format, it's just \"{0}x{1}\".format(x,y).  You can use named placeholders instead, passing them as named arguments.  You can also do formatting, but I haven't needed to, so whatever.","msgtype":"m.text"},"ts":1381367767000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: No, because those can be overridden.","msgtype":"m.text"},"ts":1381367778000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i don't want to learn a completely different placeholder system; I've been using C-style ones for two decades and I don't have to think about it","msgtype":"m.text"},"ts":1381367794000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: well, in the \"making sure people don't write to this by accident\" case, it doesn't matter if there's a back door, it's just to prevent accidents","msgtype":"m.text"},"ts":1381367821000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Sure. I haven't ever had to, so I don't care, and I appreciate the visual separation that the {} provides.","msgtype":"m.text"},"ts":1381367826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zewt: Sure, but there are some use-cases where you really dont' want a back door, like running untrusted code (what Caja does).","msgtype":"m.text"},"ts":1381367853000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(most of the cases of trying to protect code from other code in the same context seems unconvincing to me, but I won't claim I've looked at it thoroughly)","msgtype":"m.text"},"ts":1381367897000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"TabAtkins: well sure but if people want to screw around...","msgtype":"m.text"},"ts":1381367904000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"zewt: Many are ill-founded, granted, but there are reasonable cases for sandboxing code.","msgtype":"m.text"},"ts":1381367932000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i know we're not nearly there yet (and may never be, but who knows), but kicking untrusted code into a worker (a completely different context) seems like such a better direction","msgtype":"m.text"},"ts":1381367972000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, I'm not familiar enough with the stuff that Caja is used for to know how well that would work.","msgtype":"m.text"},"ts":1381368162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the caja stuff seems like such a case of wack-a-mole","msgtype":"m.text"},"ts":1381368208000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's basically retrofitting a security model into something that was never designed with it in mind","msgtype":"m.text"},"ts":1381368222000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Welcome to the web.","msgtype":"m.text"},"ts":1381368400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I am not reading that scrollback.","msgtype":"m.text"},"ts":1381368443000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"which part?","msgtype":"m.text"},"ts":1381368445000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: which part?","msgtype":"m.text"},"ts":1381368450000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Which part of what?","msgtype":"m.text"},"ts":1381368473000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: if you mean, the web is like that too, then yeah, that's why i don't think doing caja in it is a good idea :-)","msgtype":"m.text"},"ts":1381368481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Yeah, I just meant that *everything* on the web is retrofitting onto a system that wasn't designed for whatever it is you're doing. ^_^","msgtype":"m.text"},"ts":1381368533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well yeah, but security is a case where if you get it slightly wrong, you've lost","msgtype":"m.text"},"ts":1381368566000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"unlike most things, where if you get it slightly wrong, you've still mostly won","msgtype":"m.text"},"ts":1381368578000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Another theoretical benefit of freezing is that it allows harder optimizations - you're guaranteed that the shape of the object won't change after the freeze.","msgtype":"m.text"},"ts":1381372736000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's \"theoretical\" because, afaik, V8 still actually uses the slow path for frozen objects, so freezing gives you *worse* performance.  That's just because of them not going to the effort to fix it yet, not anything intrinsic; there's a bug against them to actually optimize frozen objects.","msgtype":"m.text"},"ts":1381372782000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: are host objects \"frozen\" in any sense?","msgtype":"m.text"},"ts":1381373213000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"That depends on the object, I guess.","msgtype":"m.text"},"ts":1381373231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can usually put expandos on them, so no.","msgtype":"m.text"},"ts":1381373239000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so freezing isn't for \"explaining the platform\"?","msgtype":"m.text"},"ts":1381373259000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I dunno.  I forget exactly what freezing disallows, so it might be needed to explain some things.","msgtype":"m.text"},"ts":1381374604000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it seems that freezing just makes things harder and slower for the v8 compiler","msgtype":"m.text"},"ts":1381374836000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: That's for now. It *should* make several optimizations easier and more certain, with no need to reserve the ability to de-optimize.","msgtype":"m.text"},"ts":1381375084000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: not sure why that would be. It might make it easier to write code that can be optimized well","msgtype":"m.text"},"ts":1381375335000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"TabAtkins: from what I understand from v8, it generates code as if the classes are frozen","msgtype":"m.text"},"ts":1381375372000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Yeah, but it has to de-optimize when you do change things.","msgtype":"m.text"},"ts":1381375894000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it depends, right? In general, it just assumes a new frozen class and generates assembly for that","msgtype":"m.text"},"ts":1381375941000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: I have to agree with Tab about \"dismissing other people's concerns\"","msgtype":"m.text"},"ts":1381375957000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: we've going round and round about how the current path syntax and the stroking algorithm don't work","msgtype":"m.text"},"ts":1381375986000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: but it seems our concerns are constantly dismissed (with no proof)","msgtype":"m.text"},"ts":1381376017000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: i thought you'd sent mail that was still in the queue, is it not?","msgtype":"m.text"},"ts":1381376594000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: queue?","msgtype":"m.text"},"ts":1381376614000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"have you sent a mail i haven't replied to yet?","msgtype":"m.text"},"ts":1381376625000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes although it seems like we're stuck in a loop","msgtype":"m.text"},"ts":1381376653000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"i am not aware of any loop","msgtype":"m.text"},"ts":1381376707000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: for instance, I never got a reply on dashing","msgtype":"m.text"},"ts":1381376708000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"there's e-mail that i still have to reply to, sure","msgtype":"m.text"},"ts":1381376714000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"there's currently 492 e-mails in my queue and 184 e-mails","msgtype":"m.text"},"ts":1381376726000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"er, 184 bugs","msgtype":"m.text"},"ts":1381376731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1381376731000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"that's not a loop and it's definitely not dismissing concerns, it's just being slow","msgtype":"m.text"},"ts":1381376752000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'll happily cop to that","msgtype":"m.text"},"ts":1381376755000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, not happily","msgtype":"m.text"},"ts":1381376762000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but without reservation","msgtype":"m.text"},"ts":1381376767000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i'm about 2 months lagged right now","msgtype":"m.text"},"ts":1381376821000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"on e-mail i haven't intentionally delayed","msgtype":"m.text"},"ts":1381376833000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and about 30 months lagged on e-mail that's blocked on other things","msgtype":"m.text"},"ts":1381376852000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah, I can believe that you're overloaded :-)","msgtype":"m.text"},"ts":1381376861000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"anyway, gotta ga, tv :-)","msgtype":"m.text"},"ts":1381376875000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: for me, it's hard to make progress","msgtype":"m.text"},"ts":1381376877000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: since implementors think the issues aren't resolved","msgtype":"m.text"},"ts":1381376907000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: enjoy!","msgtype":"m.text"},"ts":1381376912000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: i replied to those e-mails for you","msgtype":"m.text"},"ts":1381380784000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: thanks!","msgtype":"m.text"},"ts":1381380874000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: also replied to https://www.w3.org/Bugs/Public/show_bug.cgi?id=23386","msgtype":"m.text"},"ts":1381382187000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: thanks! replied","msgtype":"m.text"},"ts":1381382603000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_, usually when people start with \"This is a suggestion to fix major problems relating to developing a more modern application as related to browser history issues.\", I give up :)","msgtype":"m.text"},"ts":1381389469000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: FWIW, I don't think everyone in TC39 is convinced Object.freeze() at all should exist. Mark Miller got them through in some compromise decision... Same goes for \"use strict\" as far as I can tell.","msgtype":"m.text"},"ts":1381391555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: it's not quite as like-minded as TabAtkins makes it out to be","msgtype":"m.text"},"ts":1381391569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Object.freeze() in particular is quite badly designed as it doesn't actually \"freeze\" objects. It just freezes some of its properties, but not e.g. internal state.","msgtype":"m.text"},"ts":1381391642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: not throwing for non-new makes subclassing harder to support","msgtype":"m.text"},"ts":1381393245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: once IDL is updated to support ES6-style classes that'll be clearer","msgtype":"m.text"},"ts":1381393306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Having moved into open standards, DRM is easy to turn off later\" http://www.w3.org/2013/04/drm/debate_outline.html","msgtype":"m.text"},"ts":1381393690000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"blinks","msgtype":"m.emote"},"ts":1381393829000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1381394572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bullshit overflow.","msgtype":"m.text"},"ts":1381396364000,"senderName":"nicoo","senderId":"nicoo@irc"},
{"content":{"body":"in Gecko IDLs what does [Throws] mean?","msgtype":"m.text"},"ts":1381396576000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it means it can throw an exception","msgtype":"m.text"},"ts":1381396587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still need to talk about bz about that. Might be good for IDL too...","msgtype":"m.text"},"ts":1381396605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381396611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is skeptical about specs getting it right","msgtype":"m.emote"},"ts":1381396626000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and [GetterThrows] means it can throw on getting?","msgtype":"m.text"},"ts":1381396667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1381396943000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I see [Constant] in there too, which seems useful","msgtype":"m.text"},"ts":1381397040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorta","msgtype":"m.text"},"ts":1381397061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: pretty much everything can throw in theory I guess","msgtype":"m.text"},"ts":1381397073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: maybe Gecko could be smarter about it...","msgtype":"m.text"},"ts":1381397087000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: e.g. if something has DOMString as argument, it can throw...","msgtype":"m.text"},"ts":1381397099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, the Throws bit doesn't include webidl exceptions","msgtype":"m.text"},"ts":1381397141000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ah, see, this is why I should talk to bz","msgtype":"m.text"},"ts":1381397882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: yeah, [Constant] is useful, though often it should be [SameObject] I guess","msgtype":"m.text"},"ts":1381399286000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"[Pure] is more implementation detail, probably not anything for specs","msgtype":"m.text"},"ts":1381399311000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what is [Pure]?","msgtype":"m.text"},"ts":1381399430000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the getter returns the same value as long as any setters or methods (which might change the underlying data) haven't been called","msgtype":"m.text"},"ts":1381399495000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1381399509000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wonder if document.images should be [SameObject]","msgtype":"m.text"},"ts":1381399624000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and other similar .foos on document","msgtype":"m.text"},"ts":1381399646000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zcorpan: You don't happen to remember what features of range-request.php are actually required by the preload tests, so you?","msgtype":"m.text"},"ts":1381401082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*do","msgtype":"m.text"},"ts":1381401086000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I am wondering if it is possible to just bake-in support for range requests and then use the pipe features of wptserve to recreate the whole required featureset","msgtype":"m.text"},"ts":1381401136000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the pipe features would give you support for trickling the requests)","msgtype":"m.text"},"ts":1381401174000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the thing that seems most problematic is support for caching)","msgtype":"m.text"},"ts":1381401213000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: i remember that there are tests that check that e.g. off is fetched by first making a 0-inf range request, then a request at the end, then a request at the beginning again","msgtype":"m.text"},"ts":1381402494000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: but i don't remember what the whole required feature set is.","msgtype":"m.text"},"ts":1381402594000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham: but i guess stuff was implemented in range-request on a it's-necessary basis rather than it's-possible basis","msgtype":"m.text"},"ts":1381402698000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, I could just do a straight port of course","msgtype":"m.text"},"ts":1381402999000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dumb question: in WebIDL is there a way to define a property as a direct property of an object rather than a property of its prototype?","msgtype":"m.text"},"ts":1381403015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't remember such a feature (but might be wrong). What's the use case?","msgtype":"m.text"},"ts":1381403059000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: No use case. What I'm wondering about very specifically is, in implementations of the Notification API, the \"permission\" property and \"requestPermission\" property/function are direct properties of the Notification object, not properties of its prototype.","msgtype":"m.text"},"ts":1381403294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so first I wonder why that is","msgtype":"m.text"},"ts":1381403304000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and second I wonder if there's some reason why the implementations do that, how it could even be expressed in WebIDL","msgtype":"m.text"},"ts":1381403337000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Does \"implementations\" in this case mean blink?","msgtype":"m.text"},"ts":1381403358000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no gecko as well","msgtype":"m.text"},"ts":1381403368000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1381403371000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I thought Gecko did the prototype thing for IDL properties","msgtype":"m.text"},"ts":1381403385000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doublechecks","msgtype":"m.emote"},"ts":1381403386000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Notification.hasOwnProperty(\"permission\") returns true in gecko too","msgtype":"m.text"},"ts":1381403420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"while, e.g., Notification.hasOwnProperty(\"icon\") returns false","msgtype":"m.text"},"ts":1381403527000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so some members of the IDL in the spec become properties of the prototype and others (\"permission\" and \"requestPermission\") become direct properties of the object","msgtype":"m.text"},"ts":1381403636000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"They are properties of the interface object afaict","msgtype":"m.text"},"ts":1381403762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because they are declared as \"static\"","msgtype":"m.text"},"ts":1381403777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://dev.w3.org/2006/webapi/WebIDL/#es-operations","msgtype":"m.text"},"ts":1381403800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"If the operation is static, then the property exists on the interface object.\"","msgtype":"m.text"},"ts":1381403810000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1381403905000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So then I think maybe idlharness.js might not yet have support for recognizing them as such","msgtype":"m.text"},"ts":1381403992000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems to be expecting them in the prototype","msgtype":"m.text"},"ts":1381404016000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Since idlharness.js hasn't been updated in several years, that seems quite likely","msgtype":"m.text"},"ts":1381404025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But you didn't have anything else to do today, right? ;)","msgtype":"m.text"},"ts":1381404036000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1381404070000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the other thing this makes me wonder about then is, why is the Notification spec defining them as static","msgtype":"m.text"},"ts":1381404105000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no other specs seem to have IDLs with similar static attributes","msgtype":"m.text"},"ts":1381404139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and until recently I think V8 didn't even support them","msgtype":"m.text"},"ts":1381404170000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm actually I guess I can understand why in this specific case","msgtype":"m.text"},"ts":1381404241000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"given the way that the perms mechanism works in Notifications","msgtype":"m.text"},"ts":1381404261000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess the difference is that no other specs are using that kind of mechanism","msgtype":"m.text"},"ts":1381404278000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wonders how multiple byte ranges are actually supposed to work e.g. what does bytes=1-10,20-30 return? Why does bytes=1-15,10-20 return the same as bytes=1-20?","msgtype":"m.emote"},"ts":1381404363000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, maybe you just use a funky response type","msgtype":"m.text"},"ts":1381404786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the spec could make that clearer","msgtype":"m.text"},"ts":1381404795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: URL.createObjectURL(...) works the same way","msgtype":"m.text"},"ts":1381408498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah OK","msgtype":"m.text"},"ts":1381408523000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so fwiw I'm hacking static attribute/operation support into idlharness.js now","msgtype":"m.text"},"ts":1381408558000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks at URL IDL","msgtype":"m.emote"},"ts":1381408571000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it's defined in the File API, somewhat confusingly","msgtype":"m.text"},"ts":1381408589000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381408620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks there","msgtype":"m.emote"},"ts":1381408624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the \"don't nest dfn elements\" rule helped me find a mistake (i used dfn when i meant var)","msgtype":"m.text"},"ts":1381408634000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yay","msgtype":"m.text"},"ts":1381408662000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic_: nice presentation","msgtype":"m.text"},"ts":1381414027000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: i added another static method today","msgtype":"m.text"},"ts":1381414086000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: CSSOM?","msgtype":"m.text"},"ts":1381414101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1381414106000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well I got the idlharness support working locally","msgtype":"m.text"},"ts":1381414252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I'll submit a patch for it","msgtype":"m.text"},"ts":1381414276000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk-cloud: huh, ok. thanks for the update.","msgtype":"m.text"},"ts":1381423169000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: hey","msgtype":"m.text"},"ts":1381423753000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: now a good time?","msgtype":"m.text"},"ts":1381423761000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1381425429000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"bholley: hey","msgtype":"m.text"},"ts":1381426155000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: sure!","msgtype":"m.text"},"ts":1381426159000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"where is the best place to ask about potential implications of HTML DRM?","msgtype":"m.text"},"ts":1381427818000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"Depends on what you want. HTMLWG is good if you want frustrating non-answers to any concerns.  Here is okay if you want people venting their spleen.","msgtype":"m.text"},"ts":1381427853000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It depends what you mean \"implications\"","msgtype":"m.text"},"ts":1381427877000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"okay, so the question is: will DRM-protected HTML mean browser extensions can no longer make changes to web UIs, i.e. access+modify the DOM?","msgtype":"m.text"},"ts":1381427944000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"The current DRM efforts are purely about <video>.","msgtype":"m.text"},"ts":1381427976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But if we ever do have DRM for HTML itself, then yes, that's almost certainly what it means, or at least it will be severely restricted.","msgtype":"m.text"},"ts":1381428000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay, so all the “DRM will kill view-source” stuff is inaccurate?","msgtype":"m.text"},"ts":1381428004000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"No, eventual DRM will.  The only spec so far (EME) won't, though it's still horrible.","msgtype":"m.text"},"ts":1381428030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"boooo :(","msgtype":"m.text"},"ts":1381428145000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"okay, thanks","msgtype":"m.text"},"ts":1381428152000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"Can I cite these logs as a source for “DRM will prevent users from being able to take control of their web UIs”, or is there a better source?","msgtype":"m.text"},"ts":1381428200000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"You could, but that isn't what anyone said, really","msgtype":"m.text"},"ts":1381428301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"DRM *for HTML* would do that","msgtype":"m.text"},"ts":1381428312000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So far there is no concrete proposal for that","msgtype":"m.text"},"ts":1381428321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah, sorry — noted","msgtype":"m.text"},"ts":1381428325000,"senderName":"barnabywalters","senderId":"barnabywalters@irc"},
{"content":{"body":"Although Jeffe Jaffe at W3C has hinted it is something he would like","msgtype":"m.text"},"ts":1381428342000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Jeff","msgtype":"m.text"},"ts":1381428363000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I think. Although I can't find the source for thinking that right now)","msgtype":"m.text"},"ts":1381428540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(hm, it is possible that I was thinking of someone else's characterisation of his position. So probably best ignore me)","msgtype":"m.text"},"ts":1381428675000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"submits a /. article about jgraham's claim","msgtype":"m.emote"},"ts":1381428931000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: It's OK, no one has read /. for about 10 years","msgtype":"m.text"},"ts":1381429033000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: More usefully, do Mozilla have anything like .headers files that can match more than one file?","msgtype":"m.text"},"ts":1381429135000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Not that I know of","msgtype":"m.text"},"ts":1381429150000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"e.g. if I want to add some header to all html files in a directory","msgtype":"m.text"},"ts":1381429156000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1381429161000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That would seriously improve some of these ported-from-apache cases","msgtype":"m.text"},"ts":1381429181000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems like something useful to add","msgtype":"m.text"},"ts":1381429356000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe","msgtype":"m.text"},"ts":1381429363000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I dunno if everything-in-this-dir would be the right granularity","msgtype":"m.text"},"ts":1381429381000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"No, well apache has a whole load of ad-hoc microsyntaxes for this stuff","msgtype":"m.text"},"ts":1381429404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<FilesMatch \"\\.(vtt|json)$\"> for example","msgtype":"m.text"},"ts":1381429418000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can someone tell me if transition events are suppose to bubble up?","msgtype":"m.text"},"ts":1381430043000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"niloy: http://dev.w3.org/csswg/css-transitions/#transitionend","msgtype":"m.text"},"ts":1381430177000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so the problem is, I have 'transitionend' on a parent element which I am interesed in, but a third party component is also using transition inside it","msgtype":"m.text"},"ts":1381430255000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"its bubbling up and messing up my code","msgtype":"m.text"},"ts":1381430266000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"the third party component is simply having transition effects","msgtype":"m.text"},"ts":1381430296000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"how should I handle this case?","msgtype":"m.text"},"ts":1381430314000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"You've gotta figure out some way to distinguish the component's events from the ones you're interested in.","msgtype":"m.text"},"ts":1381430390000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, okay... thanks, I would assume there are valid use cases for having the event bubble up","msgtype":"m.text"},"ts":1381430459000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"Yeah, it's so you can put a listener on a parent element and listen to events from a bunch of children, rather than having to register individual listeners on everything.","msgtype":"m.text"},"ts":1381430493000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but that can be said about 'load' & 'focus' too","msgtype":"m.text"},"ts":1381430544000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"Sure.  A lot of events bubble.  Some don't.  The reasoning is often historical.","msgtype":"m.text"},"ts":1381430631000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay!","msgtype":"m.text"},"ts":1381430644000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"Hixie_: back again","msgtype":"m.text"},"ts":1381430911000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"hey!","msgtype":"m.text"},"ts":1381430918000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \\o/","msgtype":"m.text"},"ts":1381430939000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"oh happy evening","msgtype":"m.text"},"ts":1381430944000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: so, shall we jump in?","msgtype":"m.text"},"ts":1381430962000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: do you prefer PM or here?","msgtype":"m.text"},"ts":1381430969000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"pokes Hixie_ ","msgtype":"m.emote"},"ts":1381431723000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: here's good","msgtype":"m.text"},"ts":1381432263000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: sorry, got distracted by some bug","msgtype":"m.text"},"ts":1381432268000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: cool","msgtype":"m.text"},"ts":1381432270000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: so","msgtype":"m.text"},"ts":1381432272000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and for some reason had my volume low so didn't hear the beeps","msgtype":"m.text"},"ts":1381432283000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: per my last email, I think we should just do null prototypes for cross-origin objects","msgtype":"m.text"},"ts":1381432283000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"that makes things simpler, certainly","msgtype":"m.text"},"ts":1381432293000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"though doesn't that mean we need to move everything to the obejcts?","msgtype":"m.text"},"ts":1381432303000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: as in, making things |own|?","msgtype":"m.text"},"ts":1381432316000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: that's a good question. We wouldn't need to in Gecko, but I don't know how to spec that magic","msgtype":"m.text"},"ts":1381432332000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"as in, if the prototypes aren't there, then the methods better be somewhere that exists","msgtype":"m.text"},"ts":1381432333000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I wonder how Blink deals with this","msgtype":"m.text"},"ts":1381432344000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"tries to remember if Blink returns null or throws","msgtype":"m.emote"},"ts":1381432350000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"looks up the bug","msgtype":"m.emote"},"ts":1381432353000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ok, yeah. Webkit/Blink throw","msgtype":"m.text"},"ts":1381432390000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"well either way, if you can't look up the prototype...","msgtype":"m.text"},"ts":1381432399000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i guess the automatic lookup could be exempt","msgtype":"m.text"},"ts":1381432413000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: but yeah, anyway. Making them all |own| should be fine, I'd think","msgtype":"m.text"},"ts":1381432420000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"(but then we'd still need to talk about the prototype being unique per origin)","msgtype":"m.text"},"ts":1381432428000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I'm happy to experiment with this in Gecko if you like","msgtype":"m.text"},"ts":1381432439000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"making them |own| means putting them on the object directly?","msgtype":"m.text"},"ts":1381432443000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: (making them own)","msgtype":"m.text"},"ts":1381432443000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: right","msgtype":"m.text"},"ts":1381432446000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"lgtm","msgtype":"m.text"},"ts":1381432449000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: which isn't visible, given that enumeration is forbidden","msgtype":"m.text"},"ts":1381432459000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"instanceof Location would stop working too, i guess","msgtype":"m.text"},"ts":1381432465000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: except for Object.getOwnPropertyDescriptor","msgtype":"m.text"},"ts":1381432470000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"if that even works now","msgtype":"m.text"},"ts":1381432471000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: no, it would work","msgtype":"m.text"},"ts":1381432473000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: per heycam's webIDL trick","msgtype":"m.text"},"ts":1381432479000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"oh right, webidl does magic for instanceof","msgtype":"m.text"},"ts":1381432481000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"forgot about that","msgtype":"m.text"},"ts":1381432483000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it's not about the prototype, it's the branding","msgtype":"m.text"},"ts":1381432485000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1381432485000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ok, cool. Sorted","msgtype":"m.text"},"ts":1381432490000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"adds that to his list","msgtype":"m.emote"},"ts":1381432493000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and that affects Location and Window, right?","msgtype":"m.text"},"ts":1381432504000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: correct","msgtype":"m.text"},"ts":1381432508000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381432517000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: assuming we've since removed Document from the list of XO-available properties","msgtype":"m.text"},"ts":1381432524000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yeah, that's on my list","msgtype":"m.text"},"ts":1381432531000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"making contentDocument and other ways of getting Documents throw","msgtype":"m.text"},"ts":1381432541000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I think the Gecko patch I landed has made it to release","msgtype":"m.text"},"ts":1381432547000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"checks","msgtype":"m.emote"},"ts":1381432548000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: yes. So proven to be web-compatible","msgtype":"m.text"},"ts":1381432579000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Mozilla23","msgtype":"m.text"},"ts":1381432586000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: so, moving onto Location","msgtype":"m.text"},"ts":1381432612000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: My proposal has been for both (a) security checks against the BC-principal at the time of invoke/get/set, and (b) security checks against the Document principal at the time of property lookup","msgtype":"m.text"},"ts":1381432686000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"let's be very explicit when we talk about origins, rather than using terms like \"BC-principal\", because that got us into trouble last time we discussed this","msgtype":"m.text"},"ts":1381432735000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: well, my beef is that the expansion of \"BC-principal\" is super long","msgtype":"m.text"},"ts":1381432754000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"well sure","msgtype":"m.text"},"ts":1381432779000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"just copy-and-paste :-)","msgtype":"m.text"},"ts":1381432786000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"alternatively, we can define them once","msgtype":"m.text"},"ts":1381432798000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and then refer to them by letter or whatever","msgtype":"m.text"},"ts":1381432811000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \"The principal of the document whose Window is the target of the WindowProxy of the same browsing context containing the Window whose Document is associated with the Location object we're discussing\"","msgtype":"m.text"},"ts":1381432824000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"by \"principal\" you mean \"origin\"?","msgtype":"m.text"},"ts":1381432851000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yes, sorry","msgtype":"m.text"},"ts":1381432855000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: that is my definition of BC origin","msgtype":"m.text"},"ts":1381432862000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: which is a mutable value","msgtype":"m.text"},"ts":1381432869000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"so the origin of the active document of the browsing context of the Window of the Document of the Location object being accessed?","msgtype":"m.text"},"ts":1381432902000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what teh spec calls the \"relevant Document\"? http://www.whatwg.org/specs/web-apps/current-work/#location","msgtype":"m.text"},"ts":1381432939000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: correct","msgtype":"m.text"},"ts":1381432944000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: great","msgtype":"m.text"},"ts":1381432971000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381432975000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \"relevant document's origin\"","msgtype":"m.text"},"ts":1381432976000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: that's a fine term to use","msgtype":"m.text"},"ts":1381432980000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: contrasted with the \"owner document's origin\"","msgtype":"m.text"},"ts":1381432988000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"owner document here being the one Location is associated with","msgtype":"m.text"},"ts":1381433003000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"isn't sure if something else should be used in lieu of the word \"owner\"","msgtype":"m.emote"},"ts":1381433008000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: ok","msgtype":"m.text"},"ts":1381433013000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"(\"Each Document object in a browsing context's session history is associated with a unique instance of a Location object\")","msgtype":"m.text"},"ts":1381433020000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"associated document's origin\" and \"relevant document's origin\"","msgtype":"m.text"},"ts":1381433023000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381433029000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"those terms good?","msgtype":"m.text"},"ts":1381433031000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"\"good\" is relative, but they'll do :-)","msgtype":"m.text"},"ts":1381433039000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1381433043000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"so","msgtype":"m.text"},"ts":1381433046000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"reframing","msgtype":"m.text"},"ts":1381433048000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"My proposal has been for both (a) security checks against the relevant document origin at the time of invoke/get/set, and (b) security checks against the associated document origin at the time of property lookup","msgtype":"m.text"},"ts":1381433075000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: IIRC, we at some point agreed on (a), but then the fog may have reappeared","msgtype":"m.text"},"ts":1381433092000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and we're comparing this origin to what, the script's incumbent origin?","msgtype":"m.text"},"ts":1381433180000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"incumbent script's origin, rather","msgtype":"m.text"},"ts":1381433184000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"pauses to make sure he gets this right","msgtype":"m.emote"},"ts":1381433196000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1381433220000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"please hold, verifing...","msgtype":"m.text"},"ts":1381433277000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"stirs his split-pea soup","msgtype":"m.emote"},"ts":1381433321000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1381433354000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i disagree with (b), i think","msgtype":"m.text"},"ts":1381433370000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: do you agree with (a)?","msgtype":"m.text"},"ts":1381433387000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i think so","msgtype":"m.text"},"ts":1381433392000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: ok","msgtype":"m.text"},"ts":1381433404000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"so","msgtype":"m.text"},"ts":1381433405000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"b","msgtype":"m.text"},"ts":1381433406000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i think (a) is what i wrote at https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701#c32 in the four items in the dashed bulleted list","msgtype":"m.text"},"ts":1381433420000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(b) i disagree with because parent.siblingIframeInDifferentOrigin.location.replace(newurl) should work","msgtype":"m.text"},"ts":1381433455000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"iirc","msgtype":"m.text"},"ts":1381433464000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but i think this gets to the first paragraph prefixed with # in that same comment","msgtype":"m.text"},"ts":1381433499000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: right - my beef with c32, which is what started this whole discussion, is that you switched _all_ security checks to use the \"relevant document origin\", when I believe we should only move half of them","msgtype":"m.text"},"ts":1381433509000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"if we have that paragraph, we don't need (b) because you can't see any changes the owner document's origin does","msgtype":"m.text"},"ts":1381433512000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"the #-paragraphs don't use the relevant origin","msgtype":"m.text"},"ts":1381433535000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they use the owner origin","msgtype":"m.text"},"ts":1381433541000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: in c32?","msgtype":"m.text"},"ts":1381433567000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1381433571000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"\"that's not the same as Location object's associated Document's","msgtype":"m.text"},"ts":1381433576000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"  browsing context's active document's effective script origin.\"","msgtype":"m.text"},"ts":1381433577000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: that sounds like \"relevant document origin\" to me","msgtype":"m.text"},"ts":1381433586000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: oh, I misunderstood \"#'","msgtype":"m.text"},"ts":1381433605000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"basically your (a) is trying to deal with the same attack vector as my 4 \"-\" paragraphs, and your (b) is trying to deal with the same attack vector s my 2 \"#\" paragraphs","msgtype":"m.text"},"ts":1381433653000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think we agree on (a) entirely at this point","msgtype":"m.text"},"ts":1381433662000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I believe so, yes","msgtype":"m.text"},"ts":1381433665000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and (b) is where we disagree","msgtype":"m.text"},"ts":1381433665000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"roger","msgtype":"m.text"},"ts":1381433669000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"let me mull this for a second","msgtype":"m.text"},"ts":1381433674000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and when i say disagree, i mean you have a proposal, and i don't know shit","msgtype":"m.text"},"ts":1381433675000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"because this stuff confuses me a lot :-)","msgtype":"m.text"},"ts":1381433694000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, Hixie has a proposal too","msgtype":"m.text"},"ts":1381433928000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"which I believe does indeed solve the same attack vector","msgtype":"m.text"},"ts":1381433941000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"since they're \"different objects\"","msgtype":"m.text"},"ts":1381433945000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"though","msgtype":"m.text"},"ts":1381433962000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i'm happy, eager even, to consider other ways to solve it","msgtype":"m.text"},"ts":1381433994000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't think your (b) really works though, because it prevents parent.siblingIframeInDifferentOrigin.location.replace(newurl) which i'm pretty sure (off the top of my head) should work","msgtype":"m.text"},"ts":1381434019000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i really should develop some console that makes cross-origin testing easier","msgtype":"m.text"},"ts":1381434033000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: why would it prevent replace? replace is allowed cross-origin","msgtype":"m.text"},"ts":1381434055000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: oh, sorry. I guess I'm baking in some assumptions here","msgtype":"m.text"},"ts":1381434072000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1381434079000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: for the security checks I propose in (b), I'm proposing that the cross-origin-accessible properties remain accessible even if the security check fails","msgtype":"m.text"},"ts":1381434109000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"the attack i'm worried about is something like origin A does \"self.location.replace.secret = document\" and origin B tries to get to \"thatOtherWindow.location.replace.secret\"","msgtype":"m.text"},"ts":1381434137000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: well, per spec, each has a different version of |replace|, right?","msgtype":"m.text"},"ts":1381434171000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"well, i'm assuming that's not an assumption i should be making :-)","msgtype":"m.text"},"ts":1381434192000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"if we're good with the #-paragraphs (which are what the spec says now), then i think we don't have any need for anything extra to handle (b)","msgtype":"m.text"},"ts":1381434216000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but do we want those paragraphs?","msgtype":"m.text"},"ts":1381434227000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i do not know","msgtype":"m.text"},"ts":1381434235000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: well, those paragraphs aptly describe the Blink/WebKit architecture","msgtype":"m.text"},"ts":1381434274000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: and less-so Gecko's Xray architecture","msgtype":"m.text"},"ts":1381434286000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: I'm happy to keep the spec mostly the way it is, but I'd like to keep the door open spec-wise for Xrays","msgtype":"m.text"},"ts":1381434317000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"since we may do that in Servo too (remains to be seen)","msgtype":"m.text"},"ts":1381434339000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"well so long as there's no user-detectable difference, i am happy to open it as wide as a barn door can open","msgtype":"m.text"},"ts":1381434384000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"author-detectable, i should say","msgtype":"m.text"},"ts":1381434399000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what would it mean to leave it open for Xrays?","msgtype":"m.text"},"ts":1381434415000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: basically, I'm fine with continuing to orient the security bits of the spec as they are, so long as we're willing to occasionally tweak things one way or another so that they're implementable for us without pulling an Opera ;-)","msgtype":"m.text"},"ts":1381434428000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i certainly wish to do anything possible to ensure the continued existence of gecko","msgtype":"m.text"},"ts":1381434448000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1381434458000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"How about Servo?","msgtype":"m.text"},"ts":1381434463000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie_: and, ideally, implementable for someone else who wants to do the Xray thing with less complexity than Mozilla's baggage requires","msgtype":"m.text"},"ts":1381434466000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"(cough Servo)","msgtype":"m.text"},"ts":1381434469000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Ms2ger: i just want multiple entirely independent browser implementations. the more the better.","msgtype":"m.text"},"ts":1381434484000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"amen","msgtype":"m.text"},"ts":1381434499000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: what would that mean in concrete spec terms?","msgtype":"m.text"},"ts":1381434503000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so, in a nutshell - the spec describes a world in which we create a separate JS reflection of a given cross-origin object for each origin that observes it","msgtype":"m.text"},"ts":1381434542000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"sounds right","msgtype":"m.text"},"ts":1381434566000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: in this world, it doesn't really matter if each origin defines orthogonal sets of properties on the object, because they never interfere with each other","msgtype":"m.text"},"ts":1381434596000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"right, though to make it easier to implement, you don't want to allow that, right?","msgtype":"m.text"},"ts":1381434618000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: correct. With Xrays, all the origins look at the same object, but with a special set of glasses that filter out all the crap","msgtype":"m.text"},"ts":1381434666000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: which works well until we start allowing those origins to put their own junk on the object as well","msgtype":"m.text"},"ts":1381434688000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: we do, in fact, have the machinery to do that in Gecko, but I'd like to avoid exposing that to the web","msgtype":"m.text"},"ts":1381434707000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1381434723000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sounds like what the spec says, right?","msgtype":"m.text"},"ts":1381434731000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or does it need to be even tighter","msgtype":"m.text"},"ts":1381434741000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"these glasses apply to everything including function objects like location.replace, right","msgtype":"m.text"},"ts":1381434759000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: correct","msgtype":"m.text"},"ts":1381434774000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: so currently, I don't see what in the spec would prevent each origin from defining funny properties on a cross-origin Location object","msgtype":"m.text"},"ts":1381434800000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"and \"These objects must have the prototype chain appropriate...\" should be changed to say they're null prototypes?","msgtype":"m.text"},"ts":1381434803000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: right","msgtype":"m.text"},"ts":1381434808000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"yeah, i was coming to that conclusion too","msgtype":"m.text"},"ts":1381434810000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok let me try to write some text, one sec","msgtype":"m.text"},"ts":1381434904000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: \"dismissing other people's concerns\"","msgtype":"m.text"},"ts":1381435123000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"bholley: ok what do you think of https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701#c50 ?","msgtype":"m.text"},"ts":1381435123000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: so I was thinking... If ECMAScript were to define the multiple global story, it'd have to tackle some kind of abstract origin concept too, as realms could suddenly become connected or disconnected due to document.domain","msgtype":"m.text"},"ts":1381435332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: reading","msgtype":"m.text"},"ts":1381435356000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: and if it does that, it'd have to define how objects referenced across globals were to behave once disconnected, which means we could argue for Gecko's arguably better design to be standardized","msgtype":"m.text"},"ts":1381435396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. I think it's the right approach, but it's a royal PITA for Webkit/Blink to implement","msgtype":"m.text"},"ts":1381435443000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"prolly also Trident","msgtype":"m.text"},"ts":1381435474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder what Allen's plan with respect to this is at the moment","msgtype":"m.text"},"ts":1381435498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Multiple globals is definitely on the table, but maybe it's not ES6 material","msgtype":"m.text"},"ts":1381435509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: btw while you're here... what's the story with application/x-www-form-urlencoded? seems URL has some version of it, but not quite the same as HTML?","msgtype":"m.text"},"ts":1381435526000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: my idea was for it to move to URL","msgtype":"m.text"},"ts":1381435543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: differences might be bugs","msgtype":"m.text"},"ts":1381435554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: sorry :/","msgtype":"m.text"},"ts":1381435565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wouldn't that lead to dependencies from URL to HTML?","msgtype":"m.text"},"ts":1381435617000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"e.g. for <isindex>?","msgtype":"m.text"},"ts":1381435620000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and accept-charset and so on?","msgtype":"m.text"},"ts":1381435642000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I figured those would just be parameters to the algorithm","msgtype":"m.text"},"ts":1381435698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh so we'd split the algorithm in half?","msgtype":"m.text"},"ts":1381435716000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: e.g. part of the application/x-www-form-urlencoded format","msgtype":"m.text"},"ts":1381435730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/e.g./as in/","msgtype":"m.text"},"ts":1381435739000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701#c51","msgtype":"m.text"},"ts":1381435872000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: the only big question there is whether we're willing to disallow property modifications on alien objects","msgtype":"m.text"},"ts":1381435939000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: if we are, I think the rest will work","msgtype":"m.text"},"ts":1381435944000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i am. dunno if others are. :-)","msgtype":"m.text"},"ts":1381435959000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"abarth: ping","msgtype":"m.text"},"ts":1381435962000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: it'll involve some hackery on the Gecko end, but stuff I'm totally willing to do to settle the spec stuff on this","msgtype":"m.text"},"ts":1381435964000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: what do you mean by \"not be able to define or modify\", btw? Throw? No-op? Do whatever freezing does?","msgtype":"m.text"},"ts":1381436006000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: i dunno, it seems like it'd make the algorithms much harder to follow and i don't see the real gain to be had","msgtype":"m.text"},"ts":1381436057000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: hi","msgtype":"m.text"},"ts":1381436075000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_: it's up for debate. We currently throw for the cross-origin objects themselves, and don't do any checks on the functions pulled off of them. If we made the functions alien objects, it's probably simplest to do it by Freezing them","msgtype":"m.text"},"ts":1381436076000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"abarth: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20701#c50 and 51 and 52","msgtype":"m.text"},"ts":1381436092000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: at which point it probably makes the most sense to cause Location and Window to implement frozen semantics","msgtype":"m.text"},"ts":1381436109000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: which we can probably do","msgtype":"m.text"},"ts":1381436120000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: on the alien versions? makes sense to me.","msgtype":"m.text"},"ts":1381436124000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: what exactly are freezing semantics?","msgtype":"m.text"},"ts":1381436131000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I don't know - presumably they're defined in ES?","msgtype":"m.text"},"ts":1381436138000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: URL needs the serialization algorithm for URLQuery","msgtype":"m.text"},"ts":1381436149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: XMLHttpRequest needs it for sending URLQuery to a server","msgtype":"m.text"},"ts":1381436166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hm, interesting","msgtype":"m.text"},"ts":1381436175000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: ok, will look more later. might just end up having two versions one for forms and one for the cleaner stuff.","msgtype":"m.text"},"ts":1381436197000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I don't think we're going to implement that","msgtype":"m.text"},"ts":1381436208000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_: for similar reasons I'm afraid I might end up defining multipart/form-data","msgtype":"m.text"},"ts":1381436210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: larry said he's respeccing that; see the bug","msgtype":"m.text"},"ts":1381436223000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annevk: send him feedback","msgtype":"m.text"},"ts":1381436228000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: that requires JS engine magic","msgtype":"m.text"},"ts":1381436228000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Hixie_: yeah, I have some private email I need to go through","msgtype":"m.text"},"ts":1381436239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have to go to lunch, any change abarth and bholley you can discuss this amongst yourselves while i forage? :-)","msgtype":"m.text"},"ts":1381436253000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: lets avoid multiple algorithms that are essentially the same though","msgtype":"m.text"},"ts":1381436254000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bholley: hi","msgtype":"m.text"},"ts":1381436265000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"finds it pretty funny that Servo has new Comment(), but not document.createComment()","msgtype":"m.emote"},"ts":1381436271000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bholley: I don't really understand the problem you're trying to solve","msgtype":"m.text"},"ts":1381436288000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"bholley: can you help me understand?","msgtype":"m.text"},"ts":1381436295000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth, Hixie_: I actually have to eat dinner","msgtype":"m.text"},"ts":1381436302000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1381436309000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: can I ping you back in a little bit?","msgtype":"m.text"},"ts":1381436316000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1381436325000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: cool","msgtype":"m.text"},"ts":1381436335000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: (back)","msgtype":"m.text"},"ts":1381438799000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cabanier: you say you're not proposing anything, but aren't you in fact proposing that the spec change?","msgtype":"m.text"},"ts":1381441739000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or did i misunderstand the conversation?","msgtype":"m.text"},"ts":1381441750000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I want the spec to reflect reality","msgtype":"m.text"},"ts":1381441809000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"reality is there's one browser whose feature that nobody yet uses, no?","msgtype":"m.text"},"ts":1381441835000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"s/that//","msgtype":"m.text"},"ts":1381441845000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i mean, i want the spec to reflect reality too, but generally there's two ways to do that.","msgtype":"m.text"},"ts":1381441865000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"and if we're not constrained by legacy content, we should pick the better solution.","msgtype":"m.text"},"ts":1381441886000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I think we're already constrained","msgtype":"m.text"},"ts":1381441911000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"ie http://paperjs.org/reference/style/","msgtype":"m.text"},"ts":1381441927000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"i don't see what about that page constrains us","msgtype":"m.text"},"ts":1381441967000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not sure how paper.js works under the hood but they must already rely","msgtype":"m.text"},"ts":1381441969000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"on existing dashing behavior","msgtype":"m.text"},"ts":1381441983000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"pdf.js is shipping too in firefox","msgtype":"m.text"},"ts":1381442009000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"paper.js alone wouldn't constrain us, it'd have to be some software built on paper.js that relies on a particular dashing behaviour","msgtype":"m.text"},"ts":1381442023000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"well, yes :-)","msgtype":"m.text"},"ts":1381442036000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"firefox doesn't yet implement the spec's API, so it doesn't constrain us either as far as I can tell","msgtype":"m.text"},"ts":1381442037000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they use a prefixed API that's basically the same","msgtype":"m.text"},"ts":1381442066000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"the example on http://paperjs.org/reference/style/ really supports justin's proposal, i have to say","msgtype":"m.text"},"ts":1381442066000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"yeah. it does look nicer","msgtype":"m.text"},"ts":1381442081000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"but again, if we want to help authors that have existing content, we should follow what the graphics libraries do","msgtype":"m.text"},"ts":1381442133000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"if there's existing content, but is there?","msgtype":"m.text"},"ts":1381442156000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"svg?","msgtype":"m.text"},"ts":1381442160000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"flash?","msgtype":"m.text"},"ts":1381442163000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"pdf?","msgtype":"m.text"},"ts":1381442164000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"gdi?","msgtype":"m.text"},"ts":1381442169000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"neither of those are canvas.","msgtype":"m.text"},"ts":1381442170000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"but people are porting their assets to canvas","msgtype":"m.text"},"ts":1381442181000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"and all of those could work with justin's proposal trivially","msgtype":"m.text"},"ts":1381442187000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nono, Justin's proposal is actually quite hard","msgtype":"m.text"},"ts":1381442209000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"and wouldn't match existing SVG assets","msgtype":"m.text"},"ts":1381442228000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"because...?","msgtype":"m.text"},"ts":1381442261000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1381442273000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"because it would render dashes differently","msgtype":"m.text"},"ts":1381442285000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"(i feel our conversations would go much quicker if when you made an assertion, you immediately explained it, rather than waiting for me to prompt you to tell me why you made it)","msgtype":"m.text"},"ts":1381442288000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"justin's proposal is to not stop the dashes, unless there's an annotation that says to reset the dash offset, yes?","msgtype":"m.text"},"ts":1381442313000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Justin's proposal rearranges dashes so they don't fall on joins or endcaps","msgtype":"m.text"},"ts":1381442329000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"so it would be trivial to port any path from svg to canvas, you'd just have to reset the dash offset when you do a moveTo or whichever","msgtype":"m.text"},"ts":1381442333000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"oh i just meant his simpler proposal","msgtype":"m.text"},"ts":1381442359000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"sure, his more elaborate one would need more in-depth changes.","msgtype":"m.text"},"ts":1381442376000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"let me look that one up.","msgtype":"m.text"},"ts":1381442386000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Justin and I are saying the same thing","msgtype":"m.text"},"ts":1381442458000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"that's not how i interpreted his statements but ok, s/justin's proposal/the annotation proposal/","msgtype":"m.text"},"ts":1381442520000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"annotation proposal?","msgtype":"m.text"},"ts":1381442547000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"to not stop the dashes, unless there's an annotation that says to reset the dash offset","msgtype":"m.text"},"ts":1381442587000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"that's my proposal. right?","msgtype":"m.text"},"ts":1381442628000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"dashes are reset when you do a moveTo or when you start a new path","msgtype":"m.text"},"ts":1381442643000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"(new path does a moveTo as well)","msgtype":"m.text"},"ts":1381442658000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"in this proposal, moveTo()s would not necessarily be so annotated","msgtype":"m.text"},"ts":1381442767000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_, abarth - shall we talk?","msgtype":"m.text"},"ts":1381442792000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"cabanier: there'd be an API whereby you can change the moveTo() to reset or not reset.","msgtype":"m.text"},"ts":1381442798000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: sure","msgtype":"m.text"},"ts":1381442801000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"looks for abarth ","msgtype":"m.emote"},"ts":1381442808000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"cabanier: (the default ideally being not to reset)","msgtype":"m.text"},"ts":1381442822000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cabanier: same for anything else that creates a new subpath.","msgtype":"m.text"},"ts":1381442836000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: bz pointed out that freezing won't work spec-wise on Window, given that named properties are dynamic and visible cross-origin","msgtype":"m.text"},"ts":1381442837000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"cabanier: you'd presumably also be able to reset anywhere else","msgtype":"m.text"},"ts":1381442854000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so we could either approximate it, or say that the objects themselves are governed by security exceptions, and (optionally) freeze the methods pulled off of them","msgtype":"m.text"},"ts":1381442869000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: that's one reason i was asking what \"freezing\" meant","msgtype":"m.text"},"ts":1381442870000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I don't think anyone is asking for this behavior.","msgtype":"m.text"},"ts":1381442871000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"it's super confusing","msgtype":"m.text"},"ts":1381442877000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: ...","msgtype":"m.text"},"ts":1381442881000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cabanier: i'm asking for the ability to not reset the offset. I'm trying to find a way to make you happy while still preserving the ability to do this. work with me here.","msgtype":"m.text"},"ts":1381442918000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok :-)","msgtype":"m.text"},"ts":1381442929000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"bholley: i don't mind how we freeze it, though.","msgtype":"m.text"},"ts":1381442947000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"I'm pretty sure that apple will object","msgtype":"m.text"},"ts":1381442956000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: what do you think about the Functions?","msgtype":"m.text"},"ts":1381442958000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: null prototypes? Frozen?","msgtype":"m.text"},"ts":1381442965000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: or even if it's different for Window/Location and Functions","msgtype":"m.text"},"ts":1381442973000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: both?","msgtype":"m.text"},"ts":1381442977000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they can't implement this since it would rely on measuring the length of the paths which is expensive","msgtype":"m.text"},"ts":1381442984000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: I'm ok with that. The null prototype is necessary to solve the general problem we've been having with prototypes","msgtype":"m.text"},"ts":1381442994000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"cabanier: you said that about everyone and then justin disagreed with you, so i'd much rather take their word for it than guess.","msgtype":"m.text"},"ts":1381442998000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: the freezing would just be for consistency","msgtype":"m.text"},"ts":1381443000000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: the freezing would be to allow UAs to not actually have unique objects per origin","msgtype":"m.text"},"ts":1381443034000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: right, that's a very fair point","msgtype":"m.text"},"ts":1381443055000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Justin was not disagreeing with me. He wants something in addition to align the dashes","msgtype":"m.text"},"ts":1381443076000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: thanks for thinking of it :-)","msgtype":"m.text"},"ts":1381443083000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"cabanier: in the e-mail he just sent, he said he \"could easily be convinced otherwise\"","msgtype":"m.text"},"ts":1381443103000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: he sent another one","msgtype":"m.text"},"ts":1381443120000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: in Gecko, we've gotten away with just creating different function objects for each global, but that's not tenable spec-wise","msgtype":"m.text"},"ts":1381443163000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"afterwards?","msgtype":"m.text"},"ts":1381443172000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: so yeah, I'm for it :-)","msgtype":"m.text"},"ts":1381443173000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: ok. i think you and i are on the same page (finally! heh, sorry it took so long). but sounds like abarth isn't...","msgtype":"m.text"},"ts":1381443195000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: did you talk to him?","msgtype":"m.text"},"ts":1381443204000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"not since you did","msgtype":"m.text"},"ts":1381443214000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i asked him to comment on the bug","msgtype":"m.text"},"ts":1381443231000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"ok. I don't _think_ it should require magic on their end","msgtype":"m.text"},"ts":1381443249000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: i'll rewrite the proposal we came up with in one place so it's easier to comment on","msgtype":"m.text"},"ts":1381443252000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"given what I understand about their engine","msgtype":"m.text"},"ts":1381443258000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"it may be that abarth misunderstood the proposal","msgtype":"m.text"},"ts":1381443265000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"or that I misunderstand the intricacies of their engine","msgtype":"m.text"},"ts":1381443274000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Regarding \"Not covered by traditional media\".","msgtype":"m.text"},"ts":1381443363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Wut","msgtype":"m.text"},"ts":1381443365000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: I think the default should be that every moveTo restarts the dash pattern. It's not unreasonable to have a flag that doesn't do so, but I have to think about that","msgtype":"m.text"},"ts":1381443382000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: again... why? why do you think that should be the default? just because it's the default in other systems?","msgtype":"m.text"},"ts":1381443428000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Since that matches <path> behavior (I think), that sounds reasonable to me.","msgtype":"m.text"},"ts":1381443431000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: I've talked to a couple of people here and they think it wouldn't be stable","msgtype":"m.text"},"ts":1381443432000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: because...?","msgtype":"m.text"},"ts":1381443453000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: that would be a reasonable argument, yeah","msgtype":"m.text"},"ts":1381443462000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: (if there's no other argument and it can be overridden)","msgtype":"m.text"},"ts":1381443486000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Pretty sure <path> resets the stroke only on new subpaths, which are generated by movetos.","msgtype":"m.text"},"ts":1381443491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: I see stephan replied","msgtype":"m.text"},"ts":1381443492000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"But yeah, having some flag for it doesn't sound unreasonable.","msgtype":"m.text"},"ts":1381443508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cabanier: is he not on the list? i don't see his e-mail","msgtype":"m.text"},"ts":1381443521000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: so we're saying on Window and Location objects cross-origin, and any attempt to set or configure a property should throw?","msgtype":"m.text"},"ts":1381443548000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: probably simpler if we're doing that to just have all the objects behave like that, rather than have Function objects behave differently than Location, no?","msgtype":"m.text"},"ts":1381443771000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I got Stephan's mail. did it not go through for you?","msgtype":"m.text"},"ts":1381443912000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"i don't see it on http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Oct/","msgtype":"m.text"},"ts":1381443925000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: he's going to subscribe","msgtype":"m.text"},"ts":1381444142000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: let me go ask some more people to see what they think.","msgtype":"m.text"},"ts":1381444170000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"(internally)","msgtype":"m.text"},"ts":1381444177000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"cabanier: what would be useful is why they think what they think, not just what they think","msgtype":"m.text"},"ts":1381444199000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: talked to someone else who gave me a reason why your approach doesn't work.","msgtype":"m.text"},"ts":1381444728000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: end caps contribute to the length of the path","msgtype":"m.text"},"ts":1381444749000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: so, if you  cut the path, you add 2 caps which are also dashed","msgtype":"m.text"},"ts":1381444776000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: so the dashes will no longer line up in your approach","msgtype":"m.text"},"ts":1381444809000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: I will send an email to make this clearer","msgtype":"m.text"},"ts":1381444820000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"the caps aren't dashed, per the spec","msgtype":"m.text"},"ts":1381444862000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"they're just caps","msgtype":"m.text"},"ts":1381444866000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"TabAtkins: (he's on a week break now)","msgtype":"m.text"},"ts":1381444887000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: you still there? does this look ok? http://junkyard.damowmow.com/523","msgtype":"m.text"},"ts":1381445015000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: your input on http://junkyard.damowmow.com/523 would be good too","msgtype":"m.text"},"ts":1381445134000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: sorry. talk to Stephan. He said it doesn't matter","msgtype":"m.text"},"ts":1381445140000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"s/talk/talked","msgtype":"m.text"},"ts":1381445153000,"senderName":"cabanier","senderId":"cabanier@irc"},
{"content":{"body":"Hixie_: reading","msgtype":"m.text"},"ts":1381445176000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"pretty sure i screwed up Window, specifically the supported property names stuff","msgtype":"m.text"},"ts":1381445212000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: - All the members, including supported property indices and supported property","msgtype":"m.text"},"ts":1381445253000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"  names, must be \"own\" properties, not on the prototype.","msgtype":"m.text"},"ts":1381445254000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: is that because of other parts of the spec? Or because of this discussion?","msgtype":"m.text"},"ts":1381445263000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"because of this discussion.","msgtype":"m.text"},"ts":1381445269000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: oh","msgtype":"m.text"},"ts":1381445279000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"specifically, us making prototype=null","msgtype":"m.text"},"ts":1381445281000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: Huh?","msgtype":"m.text"},"ts":1381445282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"bholley: but i'm not tied to it","msgtype":"m.text"},"ts":1381445287000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: but only in the cross-origin case, right?","msgtype":"m.text"},"ts":1381445289000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"TabAtkins: the traditional media thing","msgtype":"m.text"},"ts":1381445300000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Oh, now I can parse your sentence.  A week-long ban.","msgtype":"m.text"},"ts":1381445317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: I can't tell if this proposal is general or implicitly referring to the cross-origin caser","msgtype":"m.text"},"ts":1381445317000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: oh you want the properties to only be own properties in the Alien Object case?","msgtype":"m.text"},"ts":1381445348000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: general.","msgtype":"m.text"},"ts":1381445356000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: the cross-origin stuff is mentioned explicitly lower.","msgtype":"m.text"},"ts":1381445364000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: oh yeah, I was definitely thinking that this only applied to the cross-origin case","msgtype":"m.text"},"ts":1381445368000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1381445372000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: ok, i removed the first item in Location and Window and added the following to the Alien Object definition:","msgtype":"m.text"},"ts":1381445437000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"   * promote all the members found on its prototypes, including supported","msgtype":"m.text"},"ts":1381445440000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"     property indices and supported property names if any, to \"own\" properties","msgtype":"m.text"},"ts":1381445442000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"     on the object itself.","msgtype":"m.text"},"ts":1381445445000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: link me to a refreshed version?","msgtype":"m.text"},"ts":1381445464000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"one sec","msgtype":"m.text"},"ts":1381445470000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"reload","msgtype":"m.text"},"ts":1381445484000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"(i am actually editing this in a bugzilla textarea, heh)","msgtype":"m.text"},"ts":1381445495000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"what is the reason for making these changes for cross origin objects? I think I overheard bholley mentioning this at the summit but don't remember hearing the reason","msgtype":"m.text"},"ts":1381445563000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: define \"these changes\"","msgtype":"m.text"},"ts":1381445580000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: we're trying to write a spec for cross-origin access that is both secure and implementable","msgtype":"m.text"},"ts":1381445601000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: the reason is \"the spec is in looney town right now\"","msgtype":"m.text"},"ts":1381445601000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley, the removal of the prototype, making properties not enumerable, moving indexed/named properties to the instance","msgtype":"m.text"},"ts":1381445605000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"er, s/bholley/heycam/","msgtype":"m.text"},"ts":1381445616000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: it's a long story","msgtype":"m.text"},"ts":1381445628000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley: (reload again)","msgtype":"m.text"},"ts":1381445629000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"How much of the basic DOM stuff comes from NN? Most of it?","msgtype":"m.text"},"ts":1381445632000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heycam: but for the prototype","msgtype":"m.text"},"ts":1381445633000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: consider - what do the prototypes look like, cross-origin?","msgtype":"m.text"},"ts":1381445643000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"gsnedders: NN and its contemporaneous IE","msgtype":"m.text"},"ts":1381445651000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: it's a tricky question","msgtype":"m.text"},"ts":1381445652000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: and in particular, every UA but Gecko currently cops out on that question and either throws or returns null","msgtype":"m.text"},"ts":1381445667000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: and it's probably easier to make gecko return null than the get the other UAs to implement whatever we cook up","msgtype":"m.text"},"ts":1381445683000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley, can you normally access say window.Object from a cross origin window?","msgtype":"m.text"},"ts":1381445687000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"bholley: ok, i think it now also handles the supported property names","msgtype":"m.text"},"ts":1381445693000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: no","msgtype":"m.text"},"ts":1381445694000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley, ok","msgtype":"m.text"},"ts":1381445698000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie_: Surely a fair bit is NN purely from it shipping with scripting first?","msgtype":"m.text"},"ts":1381445701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bholley, makes sense to do something then","msgtype":"m.text"},"ts":1381445703000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"gsnedders: \"first\" back then didn't mean much. it was probably only a matter of months.","msgtype":"m.text"},"ts":1381445720000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley, still, it might be odd to describe the cross origin Window object to have a null [[Prototype]] when the same object, from its own window, does have a prototype","msgtype":"m.text"},"ts":1381445762000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"gsnedders: (less than 12 months)","msgtype":"m.text"},"ts":1381445772000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: trust me, it's going to be odd no matter what we do","msgtype":"m.text"},"ts":1381445782000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"gsnedders: (sept 1995 to aug 1996)","msgtype":"m.text"},"ts":1381445783000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"maybe they aren't \"the same\" object for some definition of same?","msgtype":"m.text"},"ts":1381445784000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: exactly","msgtype":"m.text"},"ts":1381445789000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: each origin gets its own view on the object","msgtype":"m.text"},"ts":1381445800000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"heycam: exactly how distinguishable those views are depends on how we spec it and how you implement it","msgtype":"m.text"},"ts":1381445813000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley, aha, so some sort of forwarding proxy object?","msgtype":"m.text"},"ts":1381445814000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"\"trust me, it's going to be odd no matter what we do\" <-- preach it, brother.","msgtype":"m.text"},"ts":1381445815000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"heycam: in Gecko, yes. in Webkit/Blink, it's a separate reflector per origin","msgtype":"m.text"},"ts":1381445836000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"bholley, ok. as long as the spec describes it that way. otherwise describing how [[Prototype]] looks different on the same object is going to be hard to understand. :)","msgtype":"m.text"},"ts":1381445863000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie_: Any idea where I might find any documentation of what's in NN2.03?","msgtype":"m.text"},"ts":1381445884000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: not off-hand. try wikipedia's references?","msgtype":"m.text"},"ts":1381445895000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bholley: unless you see anything you think should change, i'm gonna post this to the bug. i need to bail momentarily.","msgtype":"m.text"},"ts":1381445919000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Mostly dead-trees, sadly","msgtype":"m.text"},"ts":1381445923000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie_: this looks good","msgtype":"m.text"},"ts":1381445925000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: two small nits","msgtype":"m.text"},"ts":1381445928000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"gsnedders: yeah","msgtype":"m.text"},"ts":1381445939000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: (1) Given that we'll probably handle functions by freezing them, it will be hard to throw a SecurityError proper","msgtype":"m.text"},"ts":1381445958000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: And the university library doesn't happen to have them. Somewhat unsurprisingly. :)","msgtype":"m.text"},"ts":1381445976000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"bholley: yeah i was asking about that earlier. you prefer to have two kinds of frozen than just one type of Alien Object?","msgtype":"m.text"},"ts":1381445989000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I don't know. We could mimic the frozen-ness exceptions on Window and Location, modulo the named property thing","msgtype":"m.text"},"ts":1381446024000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"so change the last bullet point to from \"were themselves Alien Objects\" to \"were themselves frozen\"? but I don't know what that means w.r.t. their prototype, etc.","msgtype":"m.text"},"ts":1381446039000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah","msgtype":"m.text"},"ts":1381446047000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: it's a tricky detail","msgtype":"m.text"},"ts":1381446057000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: I don't know how best to spec it","msgtype":"m.text"},"ts":1381446066000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: it's just a question of the SecurityError","msgtype":"m.text"},"ts":1381446084000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: like, we could have Window throw the same error that frozen objects throw","msgtype":"m.text"},"ts":1381446106000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: and just swallow the fact that it won't totally behave like a frozen object due to the named properties thing","msgtype":"m.text"},"ts":1381446119000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"i know nothing about frozen objects, so i don't know the implications of this","msgtype":"m.text"},"ts":1381446120000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: we can't have Object.isFrozen(xoWin) == true","msgtype":"m.text"},"ts":1381446146000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"because that would imply it never changes properties","msgtype":"m.text"},"ts":1381446153000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"my concern is that you not be able to do  \"otherWindow.postMessage.prototype.toString = ...\"","msgtype":"m.text"},"ts":1381446156000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or whatever hte syntax for that is","msgtype":"m.text"},"ts":1381446165000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"beyond that, i don't really care either way","msgtype":"m.text"},"ts":1381446182000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: .prototype? or .__proto__?","msgtype":"m.text"},"ts":1381446188000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"whichever is the scary one :-)","msgtype":"m.text"},"ts":1381446195000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i can never remember how all this works","msgtype":"m.text"},"ts":1381446208000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: you need to go and I need to sleep - let's leave this as a (?) now in the spec, and see what abarth thinks about the big picture","msgtype":"m.text"},"ts":1381446228000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1381446236000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: we can sort out this detail afterwards","msgtype":"m.text"},"ts":1381446245000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: just wrote \"Some sort of error (?)\" instead of SecurityError","msgtype":"m.text"},"ts":1381446256000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Hixie_: feedback+ modulo that","msgtype":"m.text"},"ts":1381446273000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"sleeps","msgtype":"m.emote"},"ts":1381446277000,"senderName":"bholley","senderId":"bholley@irc"},
{"content":{"body":"Oh dear god. Netscape 2.0 opens up a modal window *for every single JS syntax error*.","msgtype":"m.text"},"ts":1381446447000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"abarth: when you have a chance, https://www.w3.org/Bugs/Public/show_bug.cgi?id=13154","msgtype":"m.text"},"ts":1381446531000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"gsnedders: I remember that! Back in the days when browsers didn't let you get away with crappy code...","msgtype":"m.text"},"ts":1381447094000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I just tried loading Google.com. I may have invoked kill to get out of Modal Hell.","msgtype":"m.text"},"ts":1381447189000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]