[
{"content":{"body":"JakeA: I'm still trying to wrap my head around this cancelation stuff","msgtype":"m.text"},"ts":1500285658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what's the blocker?","msgtype":"m.text"},"ts":1500285682000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: basically fetch is some kind of thread, but then there's further threads for the async calls fetch has to do, such as pushing and receiving bytes","msgtype":"m.text"},"ts":1500285714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: just trying to figure out if we can have some kind of generic framework for this kind of cancelation handling","msgtype":"m.text"},"ts":1500285748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought we hand-wave through all the threads stuff with \"in parallel\"?","msgtype":"m.text"},"ts":1500285764000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: navigation in HTML has the same problem where we're really hand-wavy about what cancelation means","msgtype":"m.text"},"ts":1500285766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, I really don't like \"in parallel\"","msgtype":"m.text"},"ts":1500285781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I mean, it's better than what we had before, but it leaves many things undefined","msgtype":"m.text"},"ts":1500285804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we have \"add the following abort steps to signal\" which acts as a kinda callback, is that not sufficient?","msgtype":"m.text"},"ts":1500285821000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not saying any of this is a blocker btw, just trying to figure out what the eventual goal should be","msgtype":"m.text"},"ts":1500285834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, I think what you have is probably reasonable for the \"subthreads\" and stuff","msgtype":"m.text"},"ts":1500285883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I think implementers might be a little bit confused though with the usage of JavaScript objects to explain low-level primitives (that's also a problem with how we do streams)","msgtype":"m.text"},"ts":1500285918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I tried to treat the signal's abort steps as a callback. You end up changing that callback frequently throughout the life of something like fetch (during the request vs during the response). However, Domenic didn't think that would work well for implementers.","msgtype":"m.text"},"ts":1500285932000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but maybe that's not a big deal","msgtype":"m.text"},"ts":1500285932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: wanderview said he'd effectively just use the tests...","msgtype":"m.text"},"ts":1500285966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hmm, yeah, I ran into the same problem when I started trying to figure out how downloads should be spec'd. I was using JS streams for internal things","msgtype":"m.text"},"ts":1500285972000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the other thing I was wondering about is how much work it would be for you to give a high-level description of the cancelation design","msgtype":"m.text"},"ts":1500286035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: with enough detail to cover whether signals get copied and such","msgtype":"m.text"},"ts":1500286045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: effectively a detailed summary of the proposed change","msgtype":"m.text"},"ts":1500286055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I can do that. Who's the audience?","msgtype":"m.text"},"ts":1500286090000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that should make review a little easier and might also help to get everyone on the same page (although I doubt there's much disagreement as engagement is rather low)","msgtype":"m.text"},"ts":1500286091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: maybe just me and Domenic","msgtype":"m.text"},"ts":1500286102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but I suspect also the implementers","msgtype":"m.text"},"ts":1500286110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, I'll throw that together today","msgtype":"m.text"},"ts":1500286118000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you could maybe make a blog post out of it later on","msgtype":"m.text"},"ts":1500286133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: might be nice for blog.whatwg.org","msgtype":"m.text"},"ts":1500286160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, once we start landing stuff I want to do an update blog post including a bit of history and the API we landed on, and future plans for observing fetch","msgtype":"m.text"},"ts":1500286180000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah, happy to do it for blog.whatwg.org","msgtype":"m.text"},"ts":1500286189000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"note that DOM landed already","msgtype":"m.text"},"ts":1500286201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh cool!","msgtype":"m.text"},"ts":1500286208000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://dom.spec.whatwg.org/#aborting-ongoing-activities","msgtype":"m.text"},"ts":1500286224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I read through all the tests btw and they look good","msgtype":"m.text"},"ts":1500293962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: my main issue there too was lack of a high-level overview","msgtype":"m.text"},"ts":1500293974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but I think if we have spec text and some high-level agreement we can just land it all and get another good review when wanderview et al implement/review things","msgtype":"m.text"},"ts":1500294041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was going to write the overview on the test PR. That ok?","msgtype":"m.text"},"ts":1500294042000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sure","msgtype":"m.text"},"ts":1500294047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: let me know if there's something more I can do, I just pinged Domenic in the specification PR","msgtype":"m.text"},"ts":1500294066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a tangent, but I scribbled down some ideas for a low-level byte store https://github.com/jakearchibald/byte-storage/blob/master/README.md","msgtype":"m.text"},"ts":1500295082000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: main comments I have is that 1) I'd want to make sure that all existing storage stuff can be layered on top and 2) We should make sure it plays well with boxes if we want to go in that direction","msgtype":"m.text"},"ts":1500295515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, 1 is absolutely my intention, but I don't know if I've achieved that. I think a good test would be showing you can implement sqllite on top of it","msgtype":"m.text"},"ts":1500295637000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for localStorage you need some kind of \"sync await\", but I think it's fine for that to exist spec-wise","msgtype":"m.text"},"ts":1500295877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and there's a couple of things that go beyond origins that might need something special as well","msgtype":"m.text"},"ts":1500295922000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: like cookies? We could ignore that as legacy?","msgtype":"m.text"},"ts":1500295963000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah; dunno if we could just ignore it, but we probably also don't have to account for it too much","msgtype":"m.text"},"ts":1500296015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: should we even be speccing idb down to its byte serialisation?","msgtype":"m.text"},"ts":1500296064000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: in part the goal is that these various APIs are rewritten in terms of a shared storage API so it's clear how they relate when it comes to quota and locks and such","msgtype":"m.text"},"ts":1500296064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: no, some of that needs to be opaque","msgtype":"m.text"},"ts":1500296083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but we should say where the bytes go","msgtype":"m.text"},"ts":1500296096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, speccing locking definitely makes sense. It might be one of the weak points in my doc","msgtype":"m.text"},"ts":1500296099000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1500296102000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"for now that mostly means what box they end up in I suppose","msgtype":"m.text"},"ts":1500296128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1500296137000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or if they don't end up in one","msgtype":"m.text"},"ts":1500296141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug: birtles: FYI just filed a bug on Firefox implementation of Event.timeStamp https://bugzilla.mozilla.org/show_bug.cgi?id=1381492","msgtype":"m.text"},"ts":1500301614000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"annevk: Is https://github.com/w3c/web-platform-tests/pull/6484#issuecomment-315775251 useful?","msgtype":"m.text"},"ts":1500302404000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"majidvp: yup, thanks","msgtype":"m.text"},"ts":1500303417000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"JakeA: yeah, that looks great","msgtype":"m.text"},"ts":1500303805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: much more elaborate than I expected 😊","msgtype":"m.text"},"ts":1500303826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it helped me to write it all down, I think","msgtype":"m.text"},"ts":1500303874000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Gotta go now unfortunately, might try to make some time later but otherwise first thing tomorrow","msgtype":"m.text"},"ts":1500303957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: reading through it now, I don't see request.body covered","msgtype":"m.text"},"ts":1500307706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we don't have the infrastructure to test this scenario, but you could have a request.body and a response.body streaming at the same time and both getting aborted","msgtype":"m.text"},"ts":1500307734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: what we can test however is that request.body gets aborted (or maybe that's not considered because that's not in the spec yet? I have forgotten the state of request streams)","msgtype":"m.text"},"ts":1500307776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: looks good apart from that, though I wonder if we need to do extra work to make the service worker thing work","msgtype":"m.text"},"ts":1500309230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I avoided request.body due to a lack of implementation. I think it'd be pretty easy to test, I just wasn't confident my test would be right","msgtype":"m.text"},"ts":1500309393000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: Chrome has a cancelable impl somehow?","msgtype":"m.text"},"ts":1500309423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can't remember the conditions around request streams, as in preventing them being consumed up-front","msgtype":"m.text"},"ts":1500309433000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: or that part you tested through console.log or some such?","msgtype":"m.text"},"ts":1500309434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I tested for silly mistakes in the current tests using XHR & an awful AbortController & AbortSignal polyfill","msgtype":"m.text"},"ts":1500309492000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh fun","msgtype":"m.text"},"ts":1500309506000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess I'd be okay with postponing request stream tests but we'll need a tracking issue somewhere, prolly against WPT","msgtype":"m.text"},"ts":1500309566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed. I guess I should just take a stab at the tests and get Domenic to suffer through correcting me","msgtype":"m.text"},"ts":1500309723000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: that'd be great, I'm sure implementers are happy to help debug them too","msgtype":"m.text"},"ts":1500309823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also raised a new issue in your byte repo thingy","msgtype":"m.text"},"ts":1500310308000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: for context, Luke works on wasm","msgtype":"m.text"},"ts":1500310335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ta! Keen to hear from wasm folks.","msgtype":"m.text"},"ts":1500315756000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"NavidZ: dsf?","msgtype":"m.text"},"ts":1500319163000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"and I'm trying to find some old bug related to this","msgtype":"m.text"},"ts":1500319211000,"senderName":"smaug","senderId":"smaug@irc"}
]