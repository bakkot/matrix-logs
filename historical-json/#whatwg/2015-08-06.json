[
{"content":{"body":"Arguments thing?","msgtype":"m.text"},"ts":1438847538000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that bikeshed treats arguments as if they're definitions","msgtype":"m.text"},"ts":1438847586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1438847598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, were you working on something for sites' database quota?","msgtype":"m.text"},"ts":1438854543000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://storage.spec.whatwg.org/#quota I think","msgtype":"m.text"},"ts":1438854901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"There we are","msgtype":"m.text"},"ts":1438854942000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"though there's not much there there at this point","msgtype":"m.text"},"ts":1438855013000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1438855026000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders if we're going to move Storage into that spec","msgtype":"m.emote"},"ts":1438855062000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what is Storage?","msgtype":"m.text"},"ts":1438855496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"local/session","msgtype":"m.text"},"ts":1438855506000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"We could maybe, would that shrink HTML a lot?","msgtype":"m.text"},"ts":1438855544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The Cache API could move there too maybe","msgtype":"m.text"},"ts":1438855556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't know that there's any single piece that would shrink HTML by a lot, compared to its overall size :)","msgtype":"m.text"},"ts":1438855668000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Print preview on the w3c fork says 20 pages or so, for whatever that's worth","msgtype":"m.text"},"ts":1438855743000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's <5% I think","msgtype":"m.text"},"ts":1438855777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, about 2% I suspect","msgtype":"m.text"},"ts":1438855908000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, and since it's the fork that likely includes a bunch of boilerplate, so more like 1%...","msgtype":"m.text"},"ts":1438859420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But maybe as with performance every little bit helps?","msgtype":"m.text"},"ts":1438859431000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: https://github.com/whatwg/dom/issues/62","msgtype":"m.text"},"ts":1438859477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you around to help me with opaqueredirect?","msgtype":"m.text"},"ts":1438862784000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I don't see where the fetch algorithm consumes the opaqueredirect to actually do the redirect","msgtype":"m.text"},"ts":1438862845000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: won't the original fetch algorithm that initiated the fetch event end up in the \"manual\" redirect mode of the 30x handling when an opaqueredirect is returned?  thus returning another opaqueredirect?","msgtype":"m.text"},"ts":1438862967000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: ultimately I'm trying to understand if an opaqueredirect can result in the navigation triggering a second fetch event","msgtype":"m.text"},"ts":1438863007000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: maybe you have thoughts about this too ^^^","msgtype":"m.text"},"ts":1438863028000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: an opaque redirect to a navigation should result in another fetch event","msgtype":"m.text"},"ts":1438863716000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"depending on the redirect location","msgtype":"m.text"},"ts":1438863729000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: depending?","msgtype":"m.text"},"ts":1438863739000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it'll go to the SW that controls the new location, if any","msgtype":"m.text"},"ts":1438863744000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: is this all \"to be spec'd in HTML spec\" sort of stuff?","msgtype":"m.text"},"ts":1438863770000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't see it currently","msgtype":"m.text"},"ts":1438863779000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"So, if a navigation to //origin1/foo/bar returns a redirect to //origin2/baz, the SW which controls //origin2/baz will get the 2nd fetch event","msgtype":"m.text"},"ts":1438863809000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I have the feeling this is going to be really hard to implement in gecko","msgtype":"m.text"},"ts":1438863844000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: thanks","msgtype":"m.text"},"ts":1438863895000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so a navigation hits https://fetch.spec.whatwg.org/#http-fetch, it gets an opaque redirect from the SW, which survives the checks in 2.2","msgtype":"m.text"},"ts":1438863946000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1438863962000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It doesn't do 5.301.10, because it's manual, not follow","msgtype":"m.text"},"ts":1438863978000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1438863986000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The response is returned to the navigation algo","msgtype":"m.text"},"ts":1438863993000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, does it double wrap as an opaque response then?","msgtype":"m.text"},"ts":1438864053000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but yea","msgtype":"m.text"},"ts":1438864060000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"In step 19 of https://html.spec.whatwg.org/multipage/browsers.html#navigating-across-documents, the navigate algo loops back to create a new fetch based on the redirect url","msgtype":"m.text"},"ts":1438864092000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok... thats the part I was missing","msgtype":"m.text"},"ts":1438864111000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I find the html spec hard to navigate","msgtype":"m.text"},"ts":1438864123000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"it's a beast","msgtype":"m.text"},"ts":1438864135000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wishes bz was not on vacation...","msgtype":"m.emote"},"ts":1438864248000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: it seems an error that 5.301.11 creates a new opaqueredirect if it already has an opaqueredirect","msgtype":"m.text"},"ts":1438864299000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jgraham: have a moment to look at the last few comments in https://critic.hoppipolla.co.uk/showcomment?chain=12228 ? TIA!","msgtype":"m.text"},"ts":1438864311000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"seems like it should just return the existing opaqueredirect","msgtype":"m.text"},"ts":1438864344000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, not sure I fully understand that, annevk usually has a good reason though. He'll be able to clear it up.","msgtype":"m.text"},"ts":1438864382000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: at least in our impl, we assert that an opaqueredirect doesn't wrap an existing filtered response type","msgtype":"m.text"},"ts":1438864415000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"since it breaks the \"get unfiltered <value>\" semantics... that stuff only looks one level deep","msgtype":"m.text"},"ts":1438864433000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: what is 5.301.11?","msgtype":"m.text"},"ts":1438864621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http-fetch step 5, for the 30x series of status codes, step 11","msgtype":"m.text"},"ts":1438864644000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm yes","msgtype":"m.text"},"ts":1438864705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I guess another problem is that when you return an opaqueredirect from a service worker when redirect mode is follow","msgtype":"m.text"},"ts":1438864808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think that is permitted today","msgtype":"m.text"},"ts":1438864823000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: although I guess that scenario fails in 2.2","msgtype":"m.text"},"ts":1438864824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yea","msgtype":"m.text"},"ts":1438864829000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"still, the whole status code dance should probably operate on the internal response, which would avoid recursive wrapping","msgtype":"m.text"},"ts":1438864902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so if someone is doing read-through-caching... we would expect an opaqueredirect to end up in the Cache... and the following secondary fetch event will result in the final resource being in the Cache too?","msgtype":"m.text"},"ts":1438864925000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: the restriction for opaqueredirect for navigations seems a bit problematic to me","msgtype":"m.text"},"ts":1438864974000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: unless they were serving from cache-first, in which case they'd get a redirect loop","msgtype":"m.text"},"ts":1438864975000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: hmm... not sure I see where the loop happens","msgtype":"m.text"},"ts":1438865008000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: you'll have to tell me what the problem is","msgtype":"m.text"},"ts":1438865014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: consider an opaqueredirect gets put in the Cache for navigation... but then the same URL is loaded as *not* a navigation, you will get a failure when its read out of the Cache","msgtype":"m.text"},"ts":1438865050000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: for example, someone visits an img thats served with a redirect","msgtype":"m.text"},"ts":1438865063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: no, you're right, it wouldn't loop, sorry","msgtype":"m.text"},"ts":1438865073000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"visits the img as a navigation... then loads the page with the img embedded","msgtype":"m.text"},"ts":1438865077000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"why would the Cache API cache a redirect?","msgtype":"m.text"},"ts":1438865178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if the pattern is cache-after-fetch: User visits '/', fetches, response added to cache","msgtype":"m.text"},"ts":1438865238000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: this pattern: https://jakearchibald.com/2014/offline-cookbook/#on-network-response","msgtype":"m.text"},"ts":1438865266000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well, not handling manual redirects for navigations causes its own set of problems","msgtype":"m.text"},"ts":1438865343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Pick your poison","msgtype":"m.text"},"ts":1438865350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think caching a redirect is so bad tbh. If it's temporary maybe. But yeah, developers will need to watch what they cache","msgtype":"m.text"},"ts":1438865389000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: I filed https://github.com/whatwg/fetch/issues/105 on your double wrapping issue","msgtype":"m.text"},"ts":1438865423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: by why not allow opaqueredirect for non-navigation","msgtype":"m.text"},"ts":1438865439000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1438865441000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: did you read #66?","msgtype":"m.text"},"ts":1438865456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we discussed this","msgtype":"m.text"},"ts":1438865462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not in its entirety, no","msgtype":"m.text"},"ts":1438865469000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can look for the navigation restrict","msgtype":"m.text"},"ts":1438865488000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think https://github.com/whatwg/fetch/issues/66#issuecomment-121192316 discusses it","msgtype":"m.text"},"ts":1438865650000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the main problem is where the request ends up if the redirect went cross-origin","msgtype":"m.text"},"ts":1438865707000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: that's clear for \"manual\", not for \"follow\"","msgtype":"m.text"},"ts":1438865720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It might be worth explaining that in the specification since it's a security restrictions of sorts","msgtype":"m.text"},"ts":1438865759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: Donw","msgtype":"m.text"},"ts":1438865772000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Done","msgtype":"m.text"},"ts":1438865776000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I just received a long private rant about why we have to keep synchronous XMLHttpRequest...","msgtype":"m.text"},"ts":1438865938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do you have a Sync XHR bingo card yet?","msgtype":"m.text"},"ts":1438866008000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"someone probably wrote \"for a sync xhr, email annevk\" in a bathroom stall somewhere","msgtype":"m.text"},"ts":1438866150000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"If you're curious, I forwarded the email to the responsible party: https://lists.w3.org/Archives/Public/www-archive/2015Aug/0006.html","msgtype":"m.text"},"ts":1438866169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Millions I tell you.  MILLIONS!","msgtype":"m.text"},"ts":1438866274000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"\"Douglas Crockford has likened doing changes like the ones you and your ilk imposed, as being like a physical assault, like cutting people with knives...\"","msgtype":"m.text"},"ts":1438866316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh wow, both \"nazi\" *and* \"indian giving\".  Had to throw in some racism at the end there I guess.","msgtype":"m.text"},"ts":1438866559000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"imposed?","msgtype":"m.text"},"ts":1438866560000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i didn't think anyone actually turned the feature off yet","msgtype":"m.text"},"ts":1438866644000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Turning off sync XHR would have devastating effects on the web I think, although I can't back that up with data.","msgtype":"m.text"},"ts":1438866702000,"senderName":"ato","senderId":"ato@irc"},
{"content":{"body":"yeah, it sounds like it's probably not going to happen","msgtype":"m.text"},"ts":1438866722000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"The warning is there mostly to recommend better practice","msgtype":"m.text"},"ts":1438866746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it seems to be effective in raising awareness","msgtype":"m.text"},"ts":1438866762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And, I guess, having people with unrelated bugs fly off the handle.","msgtype":"m.text"},"ts":1438866801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: you could have gotten a short message like he sent this person: http://thehandshakedrugs.tumblr.com/post/22360423717/i-woke-up-to-this-email-this-morning-its-pretty","msgtype":"m.text"},"ts":1438866846000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"goes on kid duty","msgtype":"m.emote"},"ts":1438866930000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: o_O nice detective work","msgtype":"m.text"},"ts":1438866981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"omg","msgtype":"m.text"},"ts":1438867009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I missed this gem at the end: \"my hate and that of many others will be forever\"","msgtype":"m.text"},"ts":1438867074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"resists making a Warhammer joke.","msgtype":"m.emote"},"ts":1438869173000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: why is the http-fetch 2.2 check \"fail if non-navigation and opaqueredirect\" instead of \"fail if redirect mode is follow and opaqueredirect\"?","msgtype":"m.text"},"ts":1438869234000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I mean.. why can't code do fetch(url, { redirect: 'manual' }) and get it intercepted with an opaqueredirect?","msgtype":"m.text"},"ts":1438869258000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: well, redirects have tons of security issues around them, I rather keep them closely guarded until we know it's safe","msgtype":"m.text"},"ts":1438869433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: what's the use case of allowing that?","msgtype":"m.text"},"ts":1438869490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: we could work through it I suppose and add it if you think that's valuable","msgtype":"m.text"},"ts":1438869504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no use case in mind... just trying to understand why we are operating on \"navigation\" instead of the primitives script can see/reproduce (since we rolled back context for now)","msgtype":"m.text"},"ts":1438869742000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: since it's more restrictive","msgtype":"m.text"},"ts":1438869866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"more MVP, if you will","msgtype":"m.text"},"ts":1438869879000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So for whoever is attending TPAC... When you book the Renaissance Sapporo Hotel through Egencia (perhaps Expedia too?) the rates are less than half from what is listed on w3.org and their recommend travel agency...","msgtype":"m.text"},"ts":1438871330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As in, I'm staying six nights for USD ~400","msgtype":"m.text"},"ts":1438871390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes. I got it cheaper from Hotels.com.","msgtype":"m.text"},"ts":1438871419000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"annevk: You're going to get angry mail from W3C management :)","msgtype":"m.text"},"ts":1438871503000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Film at 11","msgtype":"m.text"},"ts":1438871516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm arriving in Tokyo on Saturday morning (23rd). Will drink the best cocktails in town that night (you're all invited). Off to Sapporo the next day.","msgtype":"m.text"},"ts":1438871527000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I'm arriving Friday morning...","msgtype":"m.text"},"ts":1438871572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Sapporo or Tokyo?","msgtype":"m.text"},"ts":1438871599000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Tokyo","msgtype":"m.text"},"ts":1438871630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm either staying there until Sunday, or join mnot's road trip idea, but that thread's been kind of silent lately","msgtype":"m.text"},"ts":1438871664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll be here all of Saturday night: http://www.japantimes.co.jp/life/2014/06/10/food/meet-willy-wonka-extraordinary-cocktails/ :D","msgtype":"m.text"},"ts":1438871909000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"(The Akasaka branch.)","msgtype":"m.text"},"ts":1438871916000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: If you're ever in Seoul, you must go to Le Chamber. Best cocktails I've ever had.","msgtype":"m.text"},"ts":1438872022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"takes notes.","msgtype":"m.emote"},"ts":1438872051000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"(We happened to go the night before the Korean bartending championships, so they had some guest mixers that night who made some *amazing* drinks.)","msgtype":"m.text"},"ts":1438872072000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The owners are brothers who have both won the championship, iirc","msgtype":"m.text"},"ts":1438872091000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, fun.","msgtype":"m.text"},"ts":1438872097000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"I believe you always need a reservation, at least for a bar seat (which you want).","msgtype":"m.text"},"ts":1438872130000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I attended a rather amazing food-and-cocktails pairing dinner at the above-mentioned place last week. The head bartender from Tippling Club in Singapore did the cocktails. That place is hereby recommended by proxy, too.","msgtype":"m.text"},"ts":1438872466000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: Sat is the 24th?","msgtype":"m.text"},"ts":1438872950000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yes.","msgtype":"m.text"},"ts":1438872988000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"wilhelm: silly wilhelm, can't you even date?","msgtype":"m.text"},"ts":1438873000000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Eh, mistyped.","msgtype":"m.text"},"ts":1438873001000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1438873003000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"Because timezones.","msgtype":"m.text"},"ts":1438873008000,"senderName":"wilhelm","senderId":"wilhelm@irc"},
{"content":{"body":"…that sounded more questionable than I meant.","msgtype":"m.text"},"ts":1438873011000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: annevk: if a navigation triggers a fetch event, then fetch event does nothing (does not call respondWith()), then the normal browser processing hits a redirect, should a second fetch event be triggered in that case?","msgtype":"m.text"},"ts":1438874801000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or only a second fetch event if an opaqueredirect is hit?","msgtype":"m.text"},"ts":1438874810000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Second fetch event, targeted at the controller of the new url","msgtype":"m.text"},"ts":1438874844000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: even if the controller is the same as the first fetch event? (same origin/scope)","msgtype":"m.text"},"ts":1438874871000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep!","msgtype":"m.text"},"ts":1438874887000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1438874898000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"is beginning to think taking this bug was a mistake.","msgtype":"m.emote"},"ts":1438874919000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: if I respondWith(Request.redirect('/')) to a navigation, I'd expect another fetch event too","msgtype":"m.text"},"ts":1438874927000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but only for navigations, right?","msgtype":"m.text"},"ts":1438874947000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or manual redirect flag","msgtype":"m.text"},"ts":1438874952000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: Request.redirect('/') is not an opaqueredirect, right?","msgtype":"m.text"},"ts":1438874969000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'd expect another fetch if the original request was manual-redirect, and the initiating algo reacts to redirects by starting a whole new fetch (which is navigations, there may be others)","msgtype":"m.text"},"ts":1438875067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: Request.redirect('/') is just a Response","msgtype":"m.text"},"ts":1438875086000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so I guess if a script does fetch(url, { redirect: 'manual' }) they could detect the 30x status code and do a new fetch()","msgtype":"m.text"},"ts":1438875119000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: would it be useful to start a ticket for drafting the patches to HTML regarding fetch?","msgtype":"m.text"},"ts":1438875140000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do you consider this new redirect behavior v1 or v2 for service workers?","msgtype":"m.text"},"ts":1438875723000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"should I be concerned about being incompatible if chrome waits to implement?","msgtype":"m.text"},"ts":1438875741000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Google docs hit a problem where, on navigation, their SW would fetch the page, but it'd hit a redirect to the (other origin) login page. If they served this they'd get an error. They could work around it by making a no-cors fetch and assuming an opaque response was a redirect, and issue the redirect themselves, but then they're downloading the","msgtype":"m.text"},"ts":1438876432000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"login page twice","msgtype":"m.text"},"ts":1438876432000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The changes to redirect were to handle this case","msgtype":"m.text"},"ts":1438876445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So, without these changes, offline may fail in Google Docs, so I guess it depends on how much that matters","msgtype":"m.text"},"ts":1438876490000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: yeah, because of manual and each request being fresh","msgtype":"m.text"},"ts":1438877360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah sounds fine","msgtype":"m.text"},"ts":1438877373000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: well... from the issue comments the chrome impl team were a bit surprised by the changes... so I was wondering if it was going to be implemented later, etc","msgtype":"m.text"},"ts":1438878172000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"not a priority or something","msgtype":"m.text"},"ts":1438878177000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Docs are a pretty high priority customer for us, so pretty sure it'll get done with pretty high priority","msgtype":"m.text"},"ts":1438878226000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: annevk: do we need Request.context sorted before integrating with other specs?","msgtype":"m.text"},"ts":1438878420000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or I guess its not hard to change later... just might be more work to roto-till the other specs twice","msgtype":"m.text"},"ts":1438878437000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we'd just not define it for now I guess","msgtype":"m.text"},"ts":1438878447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I should have made a proposal for that today","msgtype":"m.text"},"ts":1438878460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"forgot","msgtype":"m.text"},"ts":1438878461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although CSP has kinda defined most of them","msgtype":"m.text"},"ts":1438878465000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Good morning WHATWG crew o/","msgtype":"m.text"},"ts":1438878906000,"senderName":"ccardona-work","senderId":"ccardona-work@irc"},
{"content":{"body":"annevk: any chance you want to put http-fetch step 4, 30x case, step 11 before the \"follow\" steps?  short circuiting the short path is nicer when implementing","msgtype":"m.text"},"ts":1438881751000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"minor nit","msgtype":"m.text"},"ts":1438881755000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: file an issue?","msgtype":"m.text"},"ts":1438882377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: seems fine","msgtype":"m.text"},"ts":1438882386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1438882394000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/issues/107","msgtype":"m.text"},"ts":1438882779000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"i need a better test word when trying to figure out how bikeshed works https://github.com/whatwg/compat/commit/2530dc6adcbd46f88f61c662501ff2ea81ba8ebf","msgtype":"m.text"},"ts":1438884654000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":">_<","msgtype":"m.text"},"ts":1438884655000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"so, what is the/an \"associated url\" of URLSearchParams?","msgtype":"m.text"},"ts":1438886233000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"a hack of URLs that have a reference to it?","msgtype":"m.text"},"ts":1438886249000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"hash*","msgtype":"m.text"},"ts":1438886251000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"\"run these steps for each associated url object urlObject\" --- i assume that's like a weakmap that gets added to on assignment or something","msgtype":"m.text"},"ts":1438886311000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"annevk: if you're still around, am I reading that right? we have this sort of URLSearchParams-looking polyfill in angular2, and if it's too complicated to actually polyfill correctly, or we end up wanting different behaviour, I'd like to clarify that asap","msgtype":"m.text"},"ts":1438887408000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: we will probably make it 1:1 instead","msgtype":"m.text"},"ts":1438889670000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: need to check if the change in Mozilla sticked around","msgtype":"m.text"},"ts":1438889683000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but during the update step, any original search query stuck on the associated url is replaced right?","msgtype":"m.text"},"ts":1438889745000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1438889806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jeff Cross at google is saying that's probably not very good for our use cases, so i guess we can't leverage the native URLSearchParams if available :( oh well","msgtype":"m.text"},"ts":1438889843000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: he should file an issue against the URL spec","msgtype":"m.text"},"ts":1438889918000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: if it's not meeting someone's needs I'd like to know","msgtype":"m.text"},"ts":1438889936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe another method like URLSearchParams.prototype.append(urlSearchParams) { /* update current fields with new ones or different ones */  } might work better for us, we could probably leverage that","msgtype":"m.text"},"ts":1438890108000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"anyway I'll let him know he can file","msgtype":"m.text"},"ts":1438890117000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: Note the possible semantic confusion - when there's a collision, are you adding your values, or replacing them?","msgtype":"m.text"},"ts":1438892068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, i renamed that idea to .merge() in PM with jeff","msgtype":"m.text"},"ts":1438892089000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"So adding?","msgtype":"m.text"},"ts":1438892105000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's a hard semantic to really figure out :|","msgtype":"m.text"},"ts":1438892196000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Because there's no single right answer!","msgtype":"m.text"},"ts":1438892210000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Thus why MultiMaps expose API for manipulating their values as a list *or* as a single value, depending on what your particular model is for the keys.","msgtype":"m.text"},"ts":1438892242000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but the primitive of doing it manually by iterating over each field and deciding on a key by key basis, kind of sucks too","msgtype":"m.text"},"ts":1438892251000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, sure. Just means that we need *two* update methods (like we have .set() and .append(), and .get() and .getAll()) with names that suggest the right behavior as clearly as possible.","msgtype":"m.text"},"ts":1438892350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like updateReplace() and updateAppend() (using \"update\" because it's the Python name for the operation)","msgtype":"m.text"},"ts":1438892384000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, already got set/add/delete, how about merge(object, optionalSchema) :x","msgtype":"m.text"},"ts":1438892564000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"You only listed a subset of the operations, and mixed the two modes together in doing so. I'm confused...","msgtype":"m.text"},"ts":1438892704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"We'd got get/set (for treating it as a Map) and getAll/append (for treating it as a MultiMap).  has/delete work the same in either type, so they're not duplicated.","msgtype":"m.text"},"ts":1438892780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So for merging in another map, you need both a Map version (replaces collisions) and a MultiMap version (appends collisions).","msgtype":"m.text"},"ts":1438892817000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so, if one key in your Map has a List value, and another key in your Map has a String value, you may want to append to one, and replace the other","msgtype":"m.text"},"ts":1438892907000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Then you have to do it manually, because you're being complicated.","msgtype":"m.text"},"ts":1438892923000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well it is complicated, but nobody would want to write instructions for multiple query parameters that need to be merged with some default query parameters specified somewhere else, if they could simply write up a frozen schema and just reuse it, right?","msgtype":"m.text"},"ts":1438893015000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"that seems more friendly","msgtype":"m.text"},"ts":1438893033000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It's quite trivial to package that up yourself in a method on your own, so you just have to pass in the two maps and get the result.  I don't think there's enough call for \"mixed\" maps to justify specifying a schema, *particularly* not if you're suggesting using that *instead of* providing the two simple Map/MultiMap variants.","msgtype":"m.text"},"ts":1438893109000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"alright, not a fan of the idea, I get that =)","msgtype":"m.text"},"ts":1438893164000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It's super easy to write a function that does this automatically based on whether the key ends in [], a la PHP, too.","msgtype":"m.text"},"ts":1438893203000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah but there are problems with that :( certain php authors assume that every client and backend understands that notation","msgtype":"m.text"},"ts":1438893414000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ah well, can't spend too much time on this discussion, but maybe someone who has more time to think it through will float a proposal at whatwg/url","msgtype":"m.text"},"ts":1438893446000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, I didn't mean it as some universal baked into a spec, just as something you could do within a project to enable a generalized function for merging url search params, rather than having to write individual ones for each different search param pattern, or write up a separate schema for each pattern.","msgtype":"m.text"},"ts":1438894264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]