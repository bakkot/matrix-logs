[
{"content":{"body":"JakeA: one thought about the naming, we already have MutationObserver","msgtype":"m.text"},"ts":1485505578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I don't think having FetchObserver would be really problematic, but on the other hand MutationObserver is used more globally and there's been talk about having something similar for Fetch too, so maybe we should try to avoid that name","msgtype":"m.text"},"ts":1485505643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought about that pattern too (also intersection/resize observer). It would be simpler for other platforms to implement than addeventlistener I guess","msgtype":"m.text"},"ts":1485505738000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I keep thinking about the \"push\" case, which might have side-effects","msgtype":"m.text"},"ts":1485505777000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: given that push delivers request/response, we may only want to allow one listener","msgtype":"m.text"},"ts":1485505809000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: fair point, though service workers doesn't follow that","msgtype":"m.text"},"ts":1485505852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess the fetch event does too, and that allows multiple listeners. But a single observer may be in two threads","msgtype":"m.text"},"ts":1485505861000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hah snap","msgtype":"m.text"},"ts":1485505867000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If you fetch from a page, the observer will be available to the page and the service worker","msgtype":"m.text"},"ts":1485505897000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Perhaps we should restrict those features to the fetcher?","msgtype":"m.text"},"ts":1485505909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems hard to share them without cloning and cloning would be bad.","msgtype":"m.text"},"ts":1485505933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps you can opt-in to cloning and then they'd be shared.","msgtype":"m.text"},"ts":1485505945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The other thing I was wondering about is whether H2 push is associated with a request-response pair or with a connection","msgtype":"m.text"},"ts":1485505979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think it's the former and then exposing them here makes a lot of sense","msgtype":"m.text"},"ts":1485505989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it's the latter however it wouldn't","msgtype":"m.text"},"ts":1485505996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: push is associated with an existing stream, so it's linked to an initial request","msgtype":"m.text"},"ts":1485507808000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I also agree that push oddly is a better fit on the controller than the observer","msgtype":"m.text"},"ts":1485507831000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://tabatkins.github.io/specs/css-nesting/","msgtype":"m.text"},"ts":1485508244000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"is this implemented anywhere?","msgtype":"m.text"},"ts":1485508250000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"ondras: not that I'm aware of","msgtype":"m.text"},"ts":1485509895000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ondras: aside from http://cssnext.io/features/#nesting","msgtype":"m.text"},"ts":1485509934000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, thanks, was interested in native implm","msgtype":"m.text"},"ts":1485509999000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"*impl","msgtype":"m.text"},"ts":1485510003000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"annevk: there's some discussion of the push stuff already btw https://github.com/whatwg/fetch/issues/447#issuecomment-275178927","msgtype":"m.text"},"ts":1485510267000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: only exposing the request is interesting","msgtype":"m.text"},"ts":1485510381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, just writing something about that now","msgtype":"m.text"},"ts":1485510393000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic: bringing extension attributes to types is really exciting. Will review early next week","msgtype":"m.text"},"ts":1485526442000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"wishes gmail used rel=noopener when opening multiple account windows.","msgtype":"m.emote"},"ts":1485526574000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: can an hsts upgrade affect a worker script load?","msgtype":"m.text"},"ts":1485536835000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so https://example.com/ with HSTS loads http://example.com/worker.js?","msgtype":"m.text"},"ts":1485536876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: that should work, but implementations may very still I think","msgtype":"m.text"},"ts":1485536916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the same-origin check was done before the network fetch at some point","msgtype":"m.text"},"ts":1485536931000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess... or could it happen if an http://example.com tries to load the insecure worker script?  can the csp only apply to the worker URL?","msgtype":"m.text"},"ts":1485536934000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"CSP or HSTS?","msgtype":"m.text"},"ts":1485536960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HSTS I guess","msgtype":"m.text"},"ts":1485536967000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"sorry, I don't know this stuff at all","msgtype":"m.text"},"ts":1485536972000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"is HSTS scoped by URL or does it apply to an entire origin?","msgtype":"m.text"},"ts":1485536986000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"http://example.com is already insecure","msgtype":"m.text"},"ts":1485536989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HSTS applies to an domain, potentially including subdomains","msgtype":"m.text"},"ts":1485537010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/an/a/","msgtype":"m.text"},"ts":1485537018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1485537027000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: happy to help, but I need a little more :-)","msgtype":"m.text"},"ts":1485537304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm just trying to figure out if gecko allows redirects with a changing origin in any case... we have some non-standard stuff unfortunately","msgtype":"m.text"},"ts":1485537331000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"looks like we do same origin checks before hsts upgrade could occur","msgtype":"m.text"},"ts":1485537418000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"also, TIL today... Edge has nested workers!","msgtype":"m.text"},"ts":1485537549000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that sounds like old worker code indeed","msgtype":"m.text"},"ts":1485537558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for some reason I thought gecko was the only code base with that complexity penalty","msgtype":"m.text"},"ts":1485537567000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I believe bz noticed that the other day too","msgtype":"m.text"},"ts":1485537567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which part is old in this case?","msgtype":"m.text"},"ts":1485537585000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or sounds old","msgtype":"m.text"},"ts":1485537589000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: doing a same-origin check in the constructor rather than as part of fetch","msgtype":"m.text"},"ts":1485537608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we do it as part of the fetch... but earlier than hsts upgrade can occur","msgtype":"m.text"},"ts":1485537630000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I have to run... meeting someone for lunch","msgtype":"m.text"},"ts":1485537652000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks for the help","msgtype":"m.text"},"ts":1485537653000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: oh wow, that would mean everything is affected, hmm","msgtype":"m.text"},"ts":1485537705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: actually Fetch does the same, I thought we didn't for same-origin requests, but it seems like we do it for all of them","msgtype":"m.text"},"ts":1485537834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: so what you're observing is likely just correct","msgtype":"m.text"},"ts":1485537845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: that is, it gets blocked in step 5 of https://fetch.spec.whatwg.org/#concept-main-fetchhttps://fetch.spec.whatwg.org/#concept-main-fetch due to being mixed content, HSTS upgrade only happens in step 9","msgtype":"m.text"},"ts":1485537893000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I found an old link in https://lists.w3.org/Archives/Public/public-whatwg-archive/2010Nov/0074.html that goes to http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface which redirects to domparsing.spec.whatwg.org which is broken. Should probably redirect to actual domparsing.","msgtype":"m.text"},"ts":1485538658000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I think it used to redirect","msgtype":"m.text"},"ts":1485538699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: you probably need to talk to Hixie, I suspect something broke","msgtype":"m.text"},"ts":1485538717000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was kind of hoping we had the keys to html5.org","msgtype":"m.text"},"ts":1485538738000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And domparsing these days, ideally.","msgtype":"m.text"},"ts":1485538744000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so domparsing has a .htaccess that redirects","msgtype":"m.text"},"ts":1485538759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: it's just that domparsing doesn't have HTTPS for some reason","msgtype":"m.text"},"ts":1485538778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I could change the html5.org redirect, but it seems the larger problem is domparsing not being up","msgtype":"m.text"},"ts":1485538816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, i think it'd be good to fix both","msgtype":"m.text"},"ts":1485538829000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"multi-redirects seem less than ideal","msgtype":"m.text"},"ts":1485538841000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: commented in the issue","msgtype":"m.text"},"ts":1485538890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: trying to add your deploy script to w3c/sensors. Getting a request for the deploy_key passphrase on travis which times out.","msgtype":"m.text"},"ts":1485561033000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: any idea?","msgtype":"m.text"},"ts":1485561042000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: https://travis-ci.org/w3c/sensors/jobs/196039411","msgtype":"m.text"},"ts":1485561047000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: don't use a passphrase?","msgtype":"m.text"},"ts":1485561127000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It won's ask for it anyway?","msgtype":"m.text"},"ts":1485561177000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I could have checked instead of asked. sorry. :)","msgtype":"m.text"},"ts":1485561192000,"senderName":"tobie","senderId":"tobie@irc"}
]