[
{"content":{"body":"Domenic: not sure if it's all your work, but that custom elements introduction looks great","msgtype":"m.text"},"ts":1459323207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: reviewing the non-DOM parts for a bit","msgtype":"m.text"},"ts":1459323224000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ping","msgtype":"m.text"},"ts":1459331626000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hey","msgtype":"m.text"},"ts":1459331636000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The document.domain getter seems to put []s around ipv6 addresses now","msgtype":"m.text"},"ts":1459331659000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Was that intentional?","msgtype":"m.text"},"ts":1459331663000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah, I think that changed a while back","msgtype":"m.text"},"ts":1459331777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, I don't suppose we can test that in wpt?","msgtype":"m.text"},"ts":1459331830000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: see https://github.com/whatwg/html/issues/670","msgtype":"m.text"},"ts":1459331831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, great, thanks","msgtype":"m.text"},"ts":1459331891000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, no luck for https://github.com/whatwg/html/issues/635 ? :)","msgtype":"m.text"},"ts":1459333448000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ftp/http/https check I guess, not sure if URL should have a primitive","msgtype":"m.text"},"ts":1459333713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: yeah, I guess I should add network scheme, and leave out ws/wss since they are pointless","msgtype":"m.text"},"ts":1459334223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: will fix later today","msgtype":"m.text"},"ts":1459334243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks!","msgtype":"m.text"},"ts":1459334251000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: No ipv6 at the moment","msgtype":"m.text"},"ts":1459334770000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: no ipv6 for what?","msgtype":"m.text"},"ts":1459334954000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"ah, see scrollback now","msgtype":"m.text"},"ts":1459334971000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"smaug____: Justin Fagnini from Polymer project was at some of the Web Components f2f meetings","msgtype":"m.text"},"ts":1459335026000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"can find an e-mail address for him if that’s all you want","msgtype":"m.text"},"ts":1459335045000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"I don’t know him so well personally, so if you want an actual intro, maybe annevk or Domenic can help","msgtype":"m.text"},"ts":1459335093000,"senderName":"MikeSmit1","senderId":"MikeSmit1@irc"},
{"content":{"body":"MikeSmit1: I am missing some context","msgtype":"m.text"},"ts":1459335566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh scrollback, doh","msgtype":"m.text"},"ts":1459335632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmit1: I was just looking for some way to report about a bug in Polymer","msgtype":"m.text"},"ts":1459335752000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: would love input in the slotchange issue","msgtype":"m.text"},"ts":1459335843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I commented there","msgtype":"m.text"},"ts":1459336196000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: if this is about the event","msgtype":"m.text"},"ts":1459336205000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, no opinions on reusing mutation observers (or their infrastructure)?","msgtype":"m.text"},"ts":1459339836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: kind of mixed opinions :). It is not about any DOM mutation","msgtype":"m.text"},"ts":1459340966000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is about distribution change","msgtype":"m.text"},"ts":1459340974000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and we'd need to then tell exactly what was changed","msgtype":"m.text"},"ts":1459341034000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I guess it's not strictly speaking insert/remove, but shadow DOM is part of the DOM","msgtype":"m.text"},"ts":1459341040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and rniwa was worried about providing all the distributed nodes in the record or something","msgtype":"m.text"},"ts":1459341060000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I don't consider shadow DOM being part of DOM. DOM tree is DOM tree, and Shadow DOM is a layer on top of it","msgtype":"m.text"},"ts":1459341100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: maybe, but the DOM mutation algorithms specifically account for shadow roots","msgtype":"m.text"},"ts":1459341135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and soon will probably have to be changed to account for slots too if we're doing something with this event, which it seems like we will","msgtype":"m.text"},"ts":1459341161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm mostly talking about the concept","msgtype":"m.text"},"ts":1459341183000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"of DOM and Shadow DOM","msgtype":"m.text"},"ts":1459341187000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Sure, me too, I just view it differently I think","msgtype":"m.text"},"ts":1459341212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If Shadow DOM was just a layer on top, we wouldn't have to revise all existing features to account for it","msgtype":"m.text"},"ts":1459341261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: when will Shepherd next index HTML?","msgtype":"m.text"},"ts":1459341699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I want to make use of the various new origin terms in other documents","msgtype":"m.text"},"ts":1459341719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"who should review https://github.com/whatwg/html/pull/907 and https://github.com/html5lib/html5lib-tests/pull/72 ? should i ask for review in a comment in https://bugs.chromium.org/p/chromium/issues/detail?id=412945 ?","msgtype":"m.text"},"ts":1459343174000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"smaug____: ^","msgtype":"m.text"},"ts":1459343229000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"my review queue is rather full atm","msgtype":"m.text"},"ts":1459343277000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok :-) do you happen to know someone who knows the parser and doesn't also have a full review queue?","msgtype":"m.text"},"ts":1459343322000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen?","msgtype":"m.text"},"ts":1459343371000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"There are people who will admit to not having a full review queue?","msgtype":"m.text"},"ts":1459343436000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Huh","msgtype":"m.text"},"ts":1459343502000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, is there no longer a spec for alternative style sheets?","msgtype":"m.text"},"ts":1459343518000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you hate the new w3c stylesheet too?","msgtype":"m.text"},"ts":1459343538000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Meh","msgtype":"m.text"},"ts":1459343548000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: there is, but the API is gone","msgtype":"m.text"},"ts":1459343549000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The new W3C stylesheet is surprisingly bad","msgtype":"m.text"},"ts":1459343567000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan, where is it, and why?","msgtype":"m.text"},"ts":1459343568000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: since only gecko implemented it and nobody else has shown any interest in implementing the API","msgtype":"m.text"},"ts":1459343614000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Did you file a bug?","msgtype":"m.text"},"ts":1459343631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i think i have, yeah, but need to dig to confirm. i brought it up on www-style a few years ago and there has been no movement afaict","msgtype":"m.text"},"ts":1459343846000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"https://lists.w3.org/Archives/Public/www-style/2013Aug/0640.html","msgtype":"m.text"},"ts":1459343916000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_, filed bug 1260720","msgtype":"m.text"},"ts":1459344486000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_, so where is the spec for the feature?","msgtype":"m.text"},"ts":1459344497000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: https://drafts.csswg.org/cssom/#add-a-css-style-sheet et al. though there are various bugs especially around mutation of attributes and such","msgtype":"m.text"},"ts":1459344607000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Ms2ger: there's something in CSS2 talking about alternative stylesheets too I believe","msgtype":"m.text"},"ts":1459344627000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Aha","msgtype":"m.text"},"ts":1459344695000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"finds https://github.com/whatwg/html/issues/848","msgtype":"m.emote"},"ts":1459344801000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm CSS2 didn't have much on the topic","msgtype":"m.text"},"ts":1459344835000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"though https://html.spec.whatwg.org/multipage/semantics.html#link-type-stylesheet","msgtype":"m.text"},"ts":1459344860000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"loading stylesheets needs more love :-(","msgtype":"m.text"},"ts":1459344935000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"I know the perfect person!","msgtype":"m.text"},"ts":1459345042000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan_: could you confirm https://github.com/whatwg/html/pull/965#discussion_r57881425 please?","msgtype":"m.text"},"ts":1459345092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: ta","msgtype":"m.text"},"ts":1459345123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry for the delay :-)","msgtype":"m.text"},"ts":1459345133000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: no worries, I was taking a break anyway","msgtype":"m.text"},"ts":1459345146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me know if there's something else that needs my attention, i have too many notifications","msgtype":"m.text"},"ts":1459345198000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: there's a bunch of issues and bugs assigned to you","msgtype":"m.text"},"ts":1459345448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan_: not sure about anything immediate though","msgtype":"m.text"},"ts":1459345461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Suppose I have a worker that imports something with importScripts() (using a relative URL), which in turn imports another script using importScripts() (again using a relative URL)","msgtype":"m.text"},"ts":1459346793000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"is the second import expected to be resolved against the first imported script's URL, or the worker's URL?","msgtype":"m.text"},"ts":1459346817000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Is this the \"API base URL\" definition, which would imply it's resolved against the worker global scope's URL?","msgtype":"m.text"},"ts":1459346898000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"first imported script's URL","msgtype":"m.text"},"ts":1459347015000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"At least, that's what it should do","msgtype":"m.text"},"ts":1459347031000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Seems like the spec is buggy","msgtype":"m.text"},"ts":1459347083000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It looks like Chrome does the wrong thing too","msgtype":"m.text"},"ts":1459347101000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I'm fairly certain Gecko gets this right","msgtype":"m.text"},"ts":1459347144000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/969","msgtype":"m.text"},"ts":1459347242000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll run some more tests and file this against Chrome if it's broken. Thanks :)","msgtype":"m.text"},"ts":1459347263000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"Ms2ger: no, not against the script URL","msgtype":"m.text"},"ts":1459347322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1459347344000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that doesn't make much sense, we don't know what a given function is associated with","msgtype":"m.text"},"ts":1459347353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: URLs are always resolved against some thing grabbed from the global","msgtype":"m.text"},"ts":1459347366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@import doesn't","msgtype":"m.text"},"ts":1459347611000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sure, statics are different, module script identifiers don't either","msgtype":"m.text"},"ts":1459347643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Still seems very confusing","msgtype":"m.text"},"ts":1459347663000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but with executing scripts there's no reasonable way to determine what resource they come from","msgtype":"m.text"},"ts":1459347667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: this is no different in an HTML context","msgtype":"m.text"},"ts":1459347680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: if you have <script src=/test/> in / and that does fetch(\"x\") it'll fetch /x and not /test/x","msgtype":"m.text"},"ts":1459347712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will think about it some more later","msgtype":"m.emote"},"ts":1459347744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: otherwise each function would have to keep some pointer to the script its associated with and it'll get harrier still if functions invoke each other from different files, etc.","msgtype":"m.text"},"ts":1459347786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that's true","msgtype":"m.text"},"ts":1459347801000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it'd also be incompatible with what Brendan et al shipped years ago","msgtype":"m.text"},"ts":1459347803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"> In general, Chrome engineers should only be implementing new APIs that have reasonable Explainer documents attached.","msgtype":"m.text"},"ts":1459349522000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Are they going to write them too?","msgtype":"m.text"},"ts":1459349527000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"beverloo: if you manage to get hold of jsbell, tell him I'll try put in some effort into the Storage Standard tomorrow","msgtype":"m.text"},"ts":1459349537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: not sure I'll put effort into that, not even sure Explainer documents are useful if they're not part of the specification; only a very select audience would see them","msgtype":"m.text"},"ts":1459349562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Shepherd respiders everything (a) whenever anything in our CI gets updated (CSSWG, Houdini, FXTF), and (b) midnight pacific time","msgtype":"m.text"},"ts":1459354553000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, so tomorrow things should work in theory","msgtype":"m.text"},"ts":1459354613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've started putting data-export=\"\" on a couple of things","msgtype":"m.text"},"ts":1459354628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool! Unexported things from HTML are annoying. ^_^","msgtype":"m.text"},"ts":1459354658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm still not 100% sure I made the right call in \"dfn\" terms being unexported by default (so \"local\" definitions wouldn't leak out accidentally).","msgtype":"m.text"},"ts":1459354680000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think typically I would have expected those to be exported actually","msgtype":"m.text"},"ts":1459354705000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders why  insertAdjacentText doesn't return the inserted text node","msgtype":"m.emote"},"ts":1459354731000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"And actually, what probably would be best is export everything and require some kind of keyword for the other spec, as in <a spec=html>whatever term</a>","msgtype":"m.text"},"ts":1459354758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I didn't try to question the design","msgtype":"m.text"},"ts":1459354772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right. so the answer is \"it's legacy stuff\"","msgtype":"m.text"},"ts":1459354814000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, I suppose","msgtype":"m.text"},"ts":1459354862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Find the person at Microsoft who shipped this before going home early\"","msgtype":"m.text"},"ts":1459354889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's probably a little too mean","msgtype":"m.text"},"ts":1459354915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Everyone ships pretty poor APIs the web sometimes get stuck with","msgtype":"m.text"},"ts":1459354937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so https://dom.spec.whatwg.org/#insert-adjacent doesn't actually return the element ever. It returns null in some cases, but not the element","msgtype":"m.text"},"ts":1459354972000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I assume the idea is to return whatever pre-insert returns","msgtype":"m.text"},"ts":1459354985000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: my bad","msgtype":"m.text"},"ts":1459355014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this is for  insertAdjacentElement case","msgtype":"m.text"},"ts":1459355018000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah, I'll fix","msgtype":"m.text"},"ts":1459355067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yeah, *Text ignores the return value","msgtype":"m.text"},"ts":1459355080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1459355082000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/whatwg/dom/commit/5790d7288f3970b27ec5ac81aad2662eddb94959","msgtype":"m.text"},"ts":1459355418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Making cross-spec linking as seamless as possible was the entire point. That said, if you *do* always specify the spec, you never have to worry about exporting. ^_^","msgtype":"m.text"},"ts":1459355560000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yeah, except now the seamless aspect is often wonky with other specs taking over terms and such","msgtype":"m.text"},"ts":1459355601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: and requiring terms to be globally unique","msgtype":"m.text"},"ts":1459355617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: probably makes sense for CSS, but not sure it scales well beyond that","msgtype":"m.text"},"ts":1459355675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Specs \"taking over terms\" accidentally was an impl mistake on my part, it doesn't happen any more.","msgtype":"m.text"},"ts":1459355721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"r+ (at least for the insert adjacent stuff. seems to have random other changes too)","msgtype":"m.text"},"ts":1459355743000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I've got a planned mechanism for handling obsoletion and *purposeful* takeover, but I haven't implemented it yet. Still slowly, cautiously, doing autolinking refactoring to make the code sane before I introduce another complication to the model.","msgtype":"m.text"},"ts":1459355774000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"btw, we're getting wpt tests for this from a gecko patch","msgtype":"m.text"},"ts":1459355778000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: great","msgtype":"m.text"},"ts":1459355785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I can hook you up with some polymer folks; I'm heading into the office with them today. I'll be there in about an hour. Whatcha need?","msgtype":"m.text"},"ts":1459355818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: e.g., what about this HTML fork done in bikeshed? It seems it hasn't caused problems yet, but what if they start making demands?","msgtype":"m.text"},"ts":1459355819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: or these EME folks who think they want to reference forked HTML despite it having all kinds of security issues","msgtype":"m.text"},"ts":1459355858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: it was about https://bugzilla.mozilla.org/show_bug.cgi?id=1256031#c13","msgtype":"m.text"},"ts":1459355967000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: I control the list of specs in Bikeshed, and I'm not going to put in both HTMLs unless/until the fork is resolved properly.","msgtype":"m.text"},"ts":1459355993000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(In other words, I'm only putting in one of them.)","msgtype":"m.text"},"ts":1459356003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I guess we'll find out if someone decides to try","msgtype":"m.text"},"ts":1459356057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How they gonna try? They have to go thru me, or else just hand-author a <pre class=anchors> block.","msgtype":"m.text"},"ts":1459356667000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I mean when they try to go through you, agreed it's rather theoretical at this point","msgtype":"m.text"},"ts":1459356772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: btw, in case of conflicts you'll just have to use spec=\"\"?","msgtype":"m.text"},"ts":1459356797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah. (Or resolve it document-wide with some link-defaults.)","msgtype":"m.text"},"ts":1459356820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can we do this for all the whatwg specs in infrastructure? https://twitter.com/jensimmons/status/715017455349985280","msgtype":"m.text"},"ts":1459364416000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I believe the (smartass) answer is, Patches welcome","msgtype":"m.text"},"ts":1459370890000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but agreed it would be a very good thing to have and I would personally be willing to put time into making it happen","msgtype":"m.text"},"ts":1459370932000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"especially for the lerget-than-life HTML spec","msgtype":"m.text"},"ts":1459370956000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess I was wondering if it would have to be on a spec-by-spec basis... or if things like Bikeshed could just automatically add support","msgtype":"m.text"},"ts":1459370992000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"as far as Bikeshed I guess TabAtkins would know the answer to that","msgtype":"m.text"},"ts":1459371023000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but for the general case it seems like we sure could","msgtype":"m.text"},"ts":1459371045000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just by making a library and maybe needing to tweak that specs a bit so that they all do whatever consistently to make use of the hook into the library in the same way","msgtype":"m.text"},"ts":1459371116000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well that all sounds really abstract when I say it so it makes me think we should just start out by trying it with one spec","msgtype":"m.text"},"ts":1459371207000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: btw about the dfn-links-across-multipage I really wonder if can’t just do that by building a separate index at build time, of all the terms and all references to them","msgtype":"m.text"},"ts":1459371340000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: maybe in the... service worker spec","msgtype":"m.text"},"ts":1459371386000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1459371393000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah that would be appropriate of course","msgtype":"m.text"},"ts":1459371401000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the SW spec is not a WHATWG spec though","msgtype":"m.text"},"ts":1459371413000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s really a standalone thing","msgtype":"m.text"},"ts":1459371426000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: we talk about it a lot in this channel","msgtype":"m.text"},"ts":1459371432000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"doesn't understand the political divisions...","msgtype":"m.emote"},"ts":1459371448000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well I guess it’s in either Respec or Bikeshed now and W3C-branded (or at least a copy of it is), so not an island in the way it used to be","msgtype":"m.text"},"ts":1459371494000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wanderview: I do understand the political divisions and like political divisions elsewhere, there are reasons for them","msgtype":"m.text"},"ts":1459371544000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that doesn’t make the political divisions helpful though","msgtype":"m.text"},"ts":1459371561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway to me we are all part of a single do-ocracy","msgtype":"m.text"},"ts":1459371596000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, the people who are solving real problems and getting technologies for the Web created that actually ship and make a difference in people’s lives on scale","msgtype":"m.text"},"ts":1459371658000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yea... I try to ignore that stuff and try to just get stuff done","msgtype":"m.text"},"ts":1459371662000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1459371667000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"editors make their own choices about where they want to do their work, and they should have to discretion to do that","msgtype":"m.text"},"ts":1459371699000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"slightlyoff has his way with how/where he started the Service Workers spec, mkwst has his way of getting a lot of great work done in a W3C WG (despite the politicsーexploiting the W3C to its full potential)","msgtype":"m.text"},"ts":1459371870000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"exploiting in a good wayーmaking the best use of what’s actually good and most helpful about the W3C","msgtype":"m.text"},"ts":1459371912000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and yoav is making stuff get done in the WICG","msgtype":"m.text"},"ts":1459371972000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and in some ways the entities everybody happens to work for are enlightened patrons with good sense to give people doing the work on specs (and tests) for the platform a lot of flexibility and trust","msgtype":"m.text"},"ts":1459372082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no matter what place those people/editors choose personally at the place to do their work, be it WHATWG, W3C, WICG or whatever","msgtype":"m.text"},"ts":1459372133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"trust the editors to make their own choices about where they can get their work done the best","msgtype":"m.text"},"ts":1459372177000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"btw TabAtkins is obviously also an example of solving real problems productively even within the W3C constraints/political culture","msgtype":"m.text"},"ts":1459372290000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe the best example","msgtype":"m.text"},"ts":1459372298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, end sermon :)","msgtype":"m.text"},"ts":1459372303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: for the dfn things, to mitigate the performance suckage of having it regenerate, we could client-side cache/store each formatted one (for each term) the first time the reader clicks a term to create it","msgtype":"m.text"},"ts":1459372472000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I wasn't trying to be negative... I just admit I don't know how things get most of the time :-)","msgtype":"m.text"},"ts":1459372477000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: \"I wasn't trying to be negative\" - ah, then I think you were offtopic","msgtype":"m.text"},"ts":1459372545000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wanderview: nah, I realize you weren’t trying to be negative. I guess some of what I said is a sub-remark for the channel related to discussions some of us have also been having elsewhere recently","msgtype":"m.text"},"ts":1459372547000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1459372553000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: I would guess that most readers only use the dfn feature with a handful of terms and then use it repeatedly with those terms","msgtype":"m.text"},"ts":1459372625000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: so it would be a waste anyway to pre-generate them all for every reader ahead of time, since they are never going to use most of them anyway","msgtype":"m.text"},"ts":1459372679000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I’m clearly just thinking out loud right now about it","msgtype":"m.text"},"ts":1459372707000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: hmm interesting. I guess ahead of time seems nicer in most cases, just maybe not for singlepage. Although I'd be curious about the numbers.","msgtype":"m.text"},"ts":1459373269000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mathiasbynens: What do you think of this? https://bugs.chromium.org/p/v8/issues/detail?id=4879 It seems like a bug to me, but I think you reported the opposite to Apple","msgtype":"m.text"},"ts":1459376281000,"senderName":"littledan__","senderId":"littledan__@irc"},
{"content":{"body":"I can't imagine how case folding semantics should make /\\W/ui.test(\"S\") true. If the ES spec makes it true, that seems like a spec bug","msgtype":"m.text"},"ts":1459376327000,"senderName":"littledan__","senderId":"littledan__@irc"},
{"content":{"body":"Hmmm, Bikeshed probably could. At least it could produce the scripts for you (opt-in, obviously). You still need to be on https, of course.","msgtype":"m.text"},"ts":1459376688000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: ^^^ (re: Bikeshed providing a SW for caching the spec)","msgtype":"m.text"},"ts":1459376704000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The real trick is to get your spec generator to cache everything on the same origin... which I guess doesn't work great for *.spec.whatwg.org, lolz. But w3.org would be in good shape.","msgtype":"m.text"},"ts":1459376864000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1459376913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(the idea being you can click on any cross-spec link and still have it work offline)","msgtype":"m.text"},"ts":1459376923000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Obviously the specs should be on https. ;-)","msgtype":"m.text"},"ts":1459376931000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Otherwise a network attacker could trick browser vendors into implementing CORS wrong. I can see the CVE now...","msgtype":"m.text"},"ts":1459376955000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, so Bikeshed would analyze the cross-spec links, and set up a script accordingly so that when you viewed that spec, it made caching-requests to the origin's SW. Then any future views will have all links working.","msgtype":"m.text"},"ts":1459377157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ooh that's a cool idea","msgtype":"m.text"},"ts":1459377184000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i was thinking more simply some kind of w3.org-wide service worker that cached everything","msgtype":"m.text"},"ts":1459377193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"relevant: https://github.com/whatwg/resources.whatwg.org/issues/6 from 2015-05-15","msgtype":"m.text"},"ts":1459377212000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And once it's been loaded on one spec, unaware specs on the same origin will at least get the benefit of the SW's cache for the specs it's done caching for.","msgtype":"m.text"},"ts":1459377213000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"also fun would be https://github.com/whatwg/resources.whatwg.org/issues/7","msgtype":"m.text"},"ts":1459377226000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I just can't analyze unaware specs for their *own* dependencies, as the SW can't reach across on its own.","msgtype":"m.text"},"ts":1459377235000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Until you click something on one of them; the SW will intercept and cache that.)","msgtype":"m.text"},"ts":1459377283000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Unfortunate that the WHATWG specs can't all share a cache, tho. ;_;","msgtype":"m.text"},"ts":1459377309000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah dang","msgtype":"m.text"},"ts":1459377347000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Y'all done goofed.","msgtype":"m.text"},"ts":1459377386000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"handwaves ... isolation is good?","msgtype":"m.emote"},"ts":1459377403000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"move SW to cookie-style isolation!","msgtype":"m.text"},"ts":1459377420000,"senderName":"littledan__","senderId":"littledan__@irc"},
{"content":{"body":"I think storage.spec.whatwg.org is already eTLD+1 for some reason","msgtype":"m.text"},"ts":1459377434000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: any reason auto-linking wouldn't work for interfaces named %Uint8Array%?","msgtype":"m.text"},"ts":1459381898000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I have restrictions on what's allowed in a recognized shorthand, and % isn't there. I can add it tho.","msgtype":"m.text"},"ts":1459382182000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]