[
{"content":{"body":"Hixie_: missed your modules question last night","msgtype":"m.text"},"ts":1377334462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: http://wiki.ecmascript.org/doku.php?id=harmony:modules","msgtype":"m.text"},"ts":1377334487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lets try this again. If we put Zip in the browser, what subset? Anyone know a good place to start asking this question?","msgtype":"m.text"},"ts":1377348446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as one limitation, i'd suggest random access mode only, not streaming--zip supports both, but they tend to want very different APIs","msgtype":"m.text"},"ts":1377353912000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"probably limit to store and deflate, ignoring legacy compressors (implode) and less widely supported ones","msgtype":"m.text"},"ts":1377354218000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Requiring Zip64 seems like a good idea too. It probably depends on how this is going to be implemented. From scratch or using an existing library of sorts.","msgtype":"m.text"},"ts":1377354434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i was going to say that","msgtype":"m.text"},"ts":1377354440000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(zip64)","msgtype":"m.text"},"ts":1377354445000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't think existing libraries matter","msgtype":"m.text"},"ts":1377354458000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"except for the deflate part","msgtype":"m.text"},"ts":1377354467000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(which everyone has already anyway)","msgtype":"m.text"},"ts":1377354497000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm, encoding for filenames is a tricky one","msgtype":"m.text"},"ts":1377354657000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't think there's any standardization or anything in the file format whatsoever, which might mean having to say \"must be utf-8, even though that dosen't match major clients\"","msgtype":"m.text"},"ts":1377354723000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(though i think that's what you happen-to-get with zip tools in *nix)","msgtype":"m.text"},"ts":1377354724000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"winrar assumes filenames are the local codepage, at least","msgtype":"m.text"},"ts":1377354755000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"7-zip figures out utf-8 filenames in existing zips (probably heuristic) but encodes to the codepage","msgtype":"m.text"},"ts":1377354829000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(heuristic since it seems to work with both utf-8 and codepage zips, in a quick test)","msgtype":"m.text"},"ts":1377354865000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"would somebody be writing a modern spec for the file format? the zip \"appinfo\" is actually really good for its time, but it doesn't define error handling, or end of central record searching","msgtype":"m.text"},"ts":1377354960000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://www.w3.org/TR/widgets/#interoperability-considerations mentions some fun things about zips","msgtype":"m.text"},"ts":1377355040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh there's an encoding flag? cool, wasn't aware of that","msgtype":"m.text"},"ts":1377355085000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not sure if it really helps, if other implementations don't use it)","msgtype":"m.text"},"ts":1377355117000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't buy the \"forbidden characters\" thing, i think the whole \"file names\" section is bogus","msgtype":"m.text"},"ts":1377355176000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if you have those characters then you can't extract them to native files in windows, that's all","msgtype":"m.text"},"ts":1377355207000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Oh, yes, unicode isn't exactly obvious with zips, I guess","msgtype":"m.text"},"ts":1377355251000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"repressed that","msgtype":"m.emote"},"ts":1377355260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, istr that omni.ja uses not-so-widely-supported features, might want to see what that all's about","msgtype":"m.text"},"ts":1377355377000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"crc checking is unobvious","msgtype":"m.text"},"ts":1377355432000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's tricky to fit into apis, since you only know if it's failed after you've read the whole file; maybe better to just explicitly ignore it","msgtype":"m.text"},"ts":1377355460000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(otherwise an otherwise simple \"blob = zip.getFile('foo')\" API becomes weird)","msgtype":"m.text"},"ts":1377355519000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: are you thinking a ZIP API, or still trying to find a way to make zip URLs work?","msgtype":"m.text"},"ts":1377355764000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ms2ger: I'm thinking of creating https://github.com/w3c/web-platform-tests/conformance-checkers for managing documents to test the validator","msgtype":"m.text"},"ts":1377359037000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"good idea? bad idea?","msgtype":"m.text"},"ts":1377359043000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, doesn't it make more sense to put them under html/? (the ones for requirements in html, at least)","msgtype":"m.text"},"ts":1377359126000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yah but alternately makes sense to do conformance-checkers/html, conformance-checkers/svg etc.","msgtype":"m.text"},"ts":1377359195000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that way we have all of them under one \"conformance-checkers\" root","msgtype":"m.text"},"ts":1377359244000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since they are different kinds of the tests than the browsers tests that are in the other dirs","msgtype":"m.text"},"ts":1377359275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I don't mind it either way","msgtype":"m.text"},"ts":1377359322000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was thinking \"what doesn't fit in this line: dom html IndexedDB navigation-timing conformance-checkers\"","msgtype":"m.text"},"ts":1377359346000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But I guess that works too","msgtype":"m.text"},"ts":1377359361000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe jgraham will suggest a filename convention","msgtype":"m.text"},"ts":1377359378000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah he does like his filename conventions","msgtype":"m.text"},"ts":1377359452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have one simple one already: foo.notvalid.html for tests that are intentionally invalid","msgtype":"m.text"},"ts":1377359479000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(I would suggest a manifest, of course)","msgtype":"m.text"},"ts":1377359542000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zewt: format is relevant for both, and I think we want both","msgtype":"m.text"},"ts":1377360947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zewt: I'd like to avoid defining a format, but if we have to...","msgtype":"m.text"},"ts":1377361073000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: +1 for a conformance-checkers root","msgtype":"m.text"},"ts":1377362802000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: k","msgtype":"m.text"},"ts":1377363015000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(Why? Because it keeps it out of the way for the more common use-case)","msgtype":"m.text"},"ts":1377363076000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"right, that's part of what I was thinking too","msgtype":"m.text"},"ts":1377363234000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]