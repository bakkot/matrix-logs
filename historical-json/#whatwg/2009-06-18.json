[
{"content":{"body":"wonders why Google.com is being so slow","msgtype":"m.emote"},"ts":1245283980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: a lot of networks just went down?","msgtype":"m.text"},"ts":1245284040000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"I mean, taking a minute to connect to \"www.google.com\" is wrong.","msgtype":"m.text"},"ts":1245284100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, ping?","msgtype":"m.text"},"ts":1245308760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"here","msgtype":"m.text"},"ts":1245308820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i'm thinking about your [XXX]es that are meant to be like \"partial\" interfaces","msgtype":"m.text"},"ts":1245308880000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and i see that they all only have attributes on them, no operations","msgtype":"m.text"},"ts":1245308881000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so that means what you really want is to avoid having a new object in the prototype chain for objects implementing these interfaces","msgtype":"m.text"},"ts":1245308940000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"e.g. you don't want a new, empty prototype object in the chain that corresponds to the interface with the applets attribute on it","msgtype":"m.text"},"ts":1245308941000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but, i don't think \"extending\" the interfaces, at the IDL level, is the right thing to do","msgtype":"m.text"},"ts":1245309000000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you just want to control the JS aspects of it","msgtype":"m.text"},"ts":1245309001000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so e.g. if these extended interfaces did have operations, then they would go on to the HTMLDocument prototype object (in this case)","msgtype":"m.text"},"ts":1245309002000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well actually i see you have two kinds of XXXes now","msgtype":"m.text"},"ts":1245309180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"on WindowModal, where you separate it because sometimes you want this interface to be implemented and sometimes not, but if it is, then there's no extra object in the prototype chain for WindowModal","msgtype":"m.text"},"ts":1245309181000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and for the things in the Obsolete section, where they're separate just so you don't see them in the earlier sections","msgtype":"m.text"},"ts":1245309240000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but they are actually part of the same interface","msgtype":"m.text"},"ts":1245309241000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok maybe i'm talking myself into allowing \"partial\" interface definitions","msgtype":"m.text"},"ts":1245309360000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"for that second case","msgtype":"m.text"},"ts":1245309361000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"even though it's only because of how you want to organise the spec","msgtype":"m.text"},"ts":1245309362000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but for the WindowModal case i think your XXX does need to be something like NoPrototypeObject","msgtype":"m.text"},"ts":1245309363000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"maybe partial should also exist to support adding new constants from different specs, like DOMException codes","msgtype":"m.text"},"ts":1245309540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"also, i'm thinking of moving a bunch of things from extended attributes into the \"proper\" syntax","msgtype":"m.text"},"ts":1245309720000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"like optional arguments, variadic operations","msgtype":"m.text"},"ts":1245309721000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm gonna give up pretending web idl is a superset of omg idl","msgtype":"m.text"},"ts":1245309780000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(still here, hold on)","msgtype":"m.text"},"ts":1245309960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: basically my desire is to not have the spec separation affect the prototype chain","msgtype":"m.text"},"ts":1245310020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: so we should be able to take, e.g., HTMLDocument, or Window, and split it amongst multiple specs and have zero effect on implementation requirements","msgtype":"m.text"},"ts":1245310080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: basically i'm trying to avoid the problem hsivonen mentions regularly where you end up splitting the tech into silos per wg","msgtype":"m.text"},"ts":1245310081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so, having a [NoPrototypeObject] could do that","msgtype":"m.text"},"ts":1245310200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"especially if the interface only has attributes, since they never go in prototype objects","msgtype":"m.text"},"ts":1245310201000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"they'll have methods sometimes","msgtype":"m.text"},"ts":1245310202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm surprised that they don't already","msgtype":"m.text"},"ts":1245310203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe something like [AugmentPrototype=Window] instead","msgtype":"m.text"},"ts":1245310260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1245310261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would work","msgtype":"m.text"},"ts":1245310262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then the \"actual\" interface name wouldn't matter?","msgtype":"m.text"},"ts":1245310263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. it'd be an editorial concern only?","msgtype":"m.text"},"ts":1245310320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, except for other language bindings","msgtype":"m.text"},"ts":1245310321000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"which don't have prototypes","msgtype":"m.text"},"ts":1245310322000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well for bindings that have classes i'd want the same thing","msgtype":"m.text"},"ts":1245310323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they'd be proper, separate interfaces still","msgtype":"m.text"},"ts":1245310324000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah?","msgtype":"m.text"},"ts":1245310325000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the idea is for there to be zero differences","msgtype":"m.text"},"ts":1245310326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how should it matter?","msgtype":"m.text"},"ts":1245310327000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you say \"all HTMLDocument objects also implement HTMLDocumentObselete\"","msgtype":"m.text"},"ts":1245310328000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh casting would matter","msgtype":"m.text"},"ts":1245310380000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"don't you have to explicitly cast from one to the other?","msgtype":"m.text"},"ts":1245310381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1245310382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, you'd need to cast","msgtype":"m.text"},"ts":1245310383000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1245310384000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so it sounds like you exactly want a \"partial\" modifier on interface","msgtype":"m.text"},"ts":1245310385000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the point is we should be able to take HTML5, 10 years from now, when it's all perfectly implemented (hah), and make 15 specs out of it and be able to release that as an Edited Recommendation that has zero changes required to any test suites in any languages","msgtype":"m.text"},"ts":1245310440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with all the same code working unchanged","msgtype":"m.text"},"ts":1245310441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's basically what i'm doing, btw -- taking DOM2 HTML, and splitting it into the \"obsolete\" and \"today\" sections in html5","msgtype":"m.text"},"ts":1245310442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"10 years after DOM2 HTML was published","msgtype":"m.text"},"ts":1245310500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok i'm gonna go for a \"partial\" keyword then, see how it goes","msgtype":"m.text"},"ts":1245310560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1245310561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"partial interface HTMLDocument : ... { /* now stuff */ };   partial interface HTMLDocument { /* old stuff */ };","msgtype":"m.text"},"ts":1245310562000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"do i put it on all interfaces?","msgtype":"m.text"},"ts":1245310620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1245310621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you want any interface to be extendable?","msgtype":"m.text"},"ts":1245310622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'm sure there will be specs that add to Window if there aren't already","msgtype":"m.text"},"ts":1245310623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1245310624000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and it would have been nice to be able to add to HTMLElement instead of having the side interfaces, for some cases","msgtype":"m.text"},"ts":1245310625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i dunno","msgtype":"m.text"},"ts":1245310680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah i'm not sure","msgtype":"m.text"},"ts":1245310681000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i mean, if we have to have it to extend, you're basically saying it's the opposite of \"final\"","msgtype":"m.text"},"ts":1245310682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, not really","msgtype":"m.text"},"ts":1245310683000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you can extend with \":\"","msgtype":"m.text"},"ts":1245310684000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but it's a different kind of extending","msgtype":"m.text"},"ts":1245310685000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1245310686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\":\" and also with \"side\" interfaces","msgtype":"m.text"},"ts":1245310740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like how EventTarget is on all Nodes","msgtype":"m.text"},"ts":1245310741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1245310742000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"depends on how you want the prototype chain to look","msgtype":"m.text"},"ts":1245310743000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but for some cases like Window that seems... wrong","msgtype":"m.text"},"ts":1245310744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1245310745000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah Window is a bit special in that regard, in that you think of it as just a pool of properties that you add to","msgtype":"m.text"},"ts":1245310746000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i guess in practice people would just say that the interface they want to extend had \"partial\" on it","msgtype":"m.text"},"ts":1245310747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even if it didn't","msgtype":"m.text"},"ts":1245310748000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh perhaps","msgtype":"m.text"},"ts":1245310800000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so in practice even if you say we have to put it on both, it won't matter","msgtype":"m.text"},"ts":1245310801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just nice to annotate one of them (the \"not primary\" one, there's usually a clear one that is the \"primary\" one) as being an extention of another","msgtype":"m.text"},"ts":1245310802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's kinda weird for languages like java to have an interface whose definition changes depending on which specs you decide to implement","msgtype":"m.text"},"ts":1245310920000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1245310980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how is that different from when you decide how much of one spec to implement?","msgtype":"m.text"},"ts":1245310981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like spec boundaries reflect actual implementation boundaries, like, ever","msgtype":"m.text"},"ts":1245310982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's different if you want to use two libraries together, say","msgtype":"m.text"},"ts":1245311040000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"let's say a spec first defines interface A","msgtype":"m.text"},"ts":1245311041000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and a later spec defines an extension to A","msgtype":"m.text"},"ts":1245311042000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and both of these specs used this \"partial\" keyword to allow this","msgtype":"m.text"},"ts":1245311043000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"one library was compiled with the first A, and another library was compiled with the extended A","msgtype":"m.text"},"ts":1245311100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"now both libraries have different A.class files","msgtype":"m.text"},"ts":1245311101000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"whichever one the class loader finds first is the one that will be usable","msgtype":"m.text"},"ts":1245311102000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you need to be sure to get the extended one loaded first somehow","msgtype":"m.text"},"ts":1245311103000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but then it's impossible if there were two extensions to A, and each library chose the different extended one","msgtype":"m.text"},"ts":1245311160000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you couldn't get both libraries working together in the one program","msgtype":"m.text"},"ts":1245311161000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"what about if you use two libraries, and they both implement a part of the same spec?","msgtype":"m.text"},"ts":1245311280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"same problem","msgtype":"m.text"},"ts":1245311281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"literally the same problem, because the next day that spec might be split into two","msgtype":"m.text"},"ts":1245311282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the day after that the specs might be merged together again","msgtype":"m.text"},"ts":1245311340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you could at least have the same all-in-one interface implemented by both libraries, but some of those methods just throw a NotImplementedException or something","msgtype":"m.text"},"ts":1245311341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"in fact you would need to, to get it to compile","msgtype":"m.text"},"ts":1245311342000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i guess in java maybe. in javascript we encourage implementations that don't support something to not expose it, so that you can test to see if it exists","msgtype":"m.text"},"ts":1245311400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1245311401000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's a benefit of not having to implement a whole interface i suppose","msgtype":"m.text"},"ts":1245311460000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well it's a benefit of easy reification ","msgtype":"m.text"},"ts":1245311461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"benefit of duck typing (sorta)?","msgtype":"m.text"},"ts":1245311520000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"vaguely","msgtype":"m.text"},"ts":1245311580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not exclusively though","msgtype":"m.text"},"ts":1245311581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's a benefit of late binding and easy reification","msgtype":"m.text"},"ts":1245311582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, not reification, reflection","msgtype":"m.text"},"ts":1245311640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"late binding and reflection","msgtype":"m.text"},"ts":1245311641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because you can compile code that uses something without it needing to be supported, and then you can test to see if that code would work, and if it doesn't, you can skip it","msgtype":"m.text"},"ts":1245311642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so for something like WindowTimers, would you want to do that with partial instead?","msgtype":"m.text"},"ts":1245311820000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1245312060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually no","msgtype":"m.text"},"ts":1245312061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well","msgtype":"m.text"},"ts":1245312062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gah, i dunno","msgtype":"m.text"},"ts":1245312063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"WindowTimers is also implemented by the WorkerUtils object","msgtype":"m.text"},"ts":1245312120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1245312121000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but i'd want it to appear on the prototype of WorkerUtils (which itself should just appear on the prototype of two other interfaces), and i'd want it to appear as if it was part of Window also","msgtype":"m.text"},"ts":1245312122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it's specced in the same spec as Window but not the same spec as WorkerUtils","msgtype":"m.text"},"ts":1245312123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"do any of these use \":\"?","msgtype":"m.text"},"ts":1245312180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or is it [ImplementedOn]","msgtype":"m.text"},"ts":1245312181000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"none of these use :","msgtype":"m.text"},"ts":1245312240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw i think i like the \"Node implements EventTarget;\" kind of syntax","msgtype":"m.text"},"ts":1245312241000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh actually that's a lie","msgtype":"m.text"},"ts":1245312242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the WorkerUtils thing is implemented on interfaces that do use inheritance","msgtype":"m.text"},"ts":1245312243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[AugmentPrototype] Window implements WindowTimers;","msgtype":"m.text"},"ts":1245312300000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or if you're doing something with \":\"","msgtype":"m.text"},"ts":1245312301000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"interface ExtendedWindow : [AugmentPrototype] Window ...","msgtype":"m.text"},"ts":1245312360000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but have Java interfaces change depending on which specs you choose to implement seems bad to me","msgtype":"m.text"},"ts":1245312361000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well i don't really mind how you end up doing things for java really","msgtype":"m.text"},"ts":1245312420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm mildly professionally interested in how what you do ends up for C++, because of Native Client's use of WebIDL","msgtype":"m.text"},"ts":1245312421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but really my interest lies in JS","msgtype":"m.text"},"ts":1245312422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having c++ classes with different members seems as bad as with java","msgtype":"m.text"},"ts":1245312540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"mixin abstract classes (just like different java interfaces) seems ok though","msgtype":"m.text"},"ts":1245312541000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"raises eyebrows at www-tag","msgtype":"m.emote"},"ts":1245312720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/www-tag/www-archive-","msgtype":"m.text"},"ts":1245312900000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, i'll think about partial/[AugmentPrototype] a bit more, gotta head home now","msgtype":"m.text"},"ts":1245313200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: cool, thanks","msgtype":"m.text"},"ts":1245315060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gsnedders: http://gsnedders.html5.org/outliner/process.py?url=http%3A%2F%2Fsimon.html5.org%2Fsandbox%2Fhtml%2Fgoogle-chrome-comic seems wrong","msgtype":"m.text"},"ts":1245325200000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"http://troogle.wordpress.com/2009/06/17/google-is-trying-to-set-us-up-breaking-news-the-new-web-project-revealed-before-its-release/ wtf","msgtype":"m.text"},"ts":1245336000000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"especially since http://whois.domaintools.com/thenewwebproject.com points back to them","msgtype":"m.text"},"ts":1245336001000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"some kind of elaborate joke that did not cover its tracks?","msgtype":"m.text"},"ts":1245336060000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"\"we believe the GOVERNMENT is involved too\"","msgtype":"m.text"},"ts":1245336120000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"\"Google has plans to work together with Microsoft ...\" - clearly this whole thing is just a work of fiction","msgtype":"m.text"},"ts":1245336121000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It looks like a parody of that British guy who walked around with visible secret papers","msgtype":"m.text"},"ts":1245336180000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"http://cocaman.ch/wp/2009/06/the-new-web-project-its-a-movie-and-plot-against-google/","msgtype":"m.text"},"ts":1245336240000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"they could have at least used a proxy for the whois","msgtype":"m.text"},"ts":1245336360000,"senderName":"annevk42","senderId":"annevk42@irc"},
{"content":{"body":"http://asyourworldchanges.wordpress.com/2009/05/31/hear-me-stumble-around-white-house-recovery-and-data-gov-web-sites/ looks potentially informative","msgtype":"m.text"},"ts":1245340500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I know arun's not around, but maybe others here know the answer to my question...why does File API need getAsDataURI and getAsText?","msgtype":"m.text"},"ts":1245355680000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"as in, can't you replace getAsDataURI with a few lines of code wrapping getAsText?","msgtype":"m.text"},"ts":1245355740000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"i guess it's just a convenience thing","msgtype":"m.text"},"ts":1245356280000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"not sure it's needed if we get the getAsLocalURL()","msgtype":"m.text"},"ts":1245356281000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"ojan, seems best to comment on public-webapps","msgtype":"m.text"},"ts":1245356340000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: will do. just wanted to make sure i wasn't missing something obvious","msgtype":"m.text"},"ts":1245356400000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"annevk2: yeah, getAsLocalURL does seem very useful to me","msgtype":"m.text"},"ts":1245356401000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"oh wait, I guess PNG and such won't get you text but will get you data URLs","msgtype":"m.text"},"ts":1245356402000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"wonders why he did not think of that","msgtype":"m.emote"},"ts":1245356460000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"but then getAsText might work anyway, it's not very well defined","msgtype":"m.text"},"ts":1245356461000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"i was thinking that if you passed base64 as the encoding to getAsText it ought to work for binary content","msgtype":"m.text"},"ts":1245356520000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"base64 is not a character encoding, however","msgtype":"m.text"},"ts":1245356640000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"but then getAsText is underdefined","msgtype":"m.text"},"ts":1245356641000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"oh yay, some guy is advocating software patents on www-style","msgtype":"m.text"},"ts":1245360360000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"Hixie, ping","msgtype":"m.text"},"ts":1245362040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: here","msgtype":"m.text"},"ts":1245363300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, is there a draft for File drag-n-drop?","msgtype":"m.text"},"ts":1245363301000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, we have an intern that's going to start working on it pretty much today","msgtype":"m.text"},"ts":1245363360000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, we can do a lot without a spec for now I think, but it'd be nice to have a draft","msgtype":"m.text"},"ts":1245363361000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there's a proposal on the WHATWG list","msgtype":"m.text"},"ts":1245363362000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"i'm waiting for arun's draft to stabalise","msgtype":"m.text"},"ts":1245363420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but basically i expect datatransfer to get some new api for files","msgtype":"m.text"},"ts":1245363421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe make getData and setData take |any| instead of DOMString","msgtype":"m.text"},"ts":1245363480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and have them return either DOMStrings for Files","msgtype":"m.text"},"ts":1245363481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or alternatively, have the files be totally separate","msgtype":"m.text"},"ts":1245363482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, ok","msgtype":"m.text"},"ts":1245363483000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"just a .files or something on DataTransfer","msgtype":"m.text"},"ts":1245363484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hits more bugs in PHP. ergh.","msgtype":"m.emote"},"ts":1245363540000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh hey, arun is mozilla too, i forgot","msgtype":"m.text"},"ts":1245363541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"go light a fire under his chair :-)","msgtype":"m.text"},"ts":1245363542000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think we'll go with just .files","msgtype":"m.text"},"ts":1245363543000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But that'll mean he'll have to move away from his computer, thus making him take longer to write the spec","msgtype":"m.text"},"ts":1245363600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: it is implied that he'd be tied down first and only released once the spec was done, thus increasing the motivation to work on it :-)","msgtype":"m.text"},"ts":1245363601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: yeah so i imagine we'll add a .files that returns a sequence<File>","msgtype":"m.text"},"ts":1245363602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, ok","msgtype":"m.text"},"ts":1245363720000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, ugh, we'll have to add support for sequence<> to gecko...","msgtype":"m.text"},"ts":1245363721000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, the idea is that that'll map to a JS array, right?","msgtype":"m.text"},"ts":1245363722000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk5, where is the proposal on the whatwg list? What's the subject line?","msgtype":"m.text"},"ts":1245363840000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"thinks \"file\" should be the atom here, whether that is a file or collection of files","msgtype":"m.emote"},"ts":1245363900000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"and treat, at least, zip files as if they were collections of files","msgtype":"m.text"},"ts":1245363960000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"sicking: fwiw we have a patch to implement it for WebKit, and we proposed an API on WHATWG","msgtype":"m.text"},"ts":1245363961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that way, an application could easily process openoffice (and similar) documents like epub","msgtype":"m.text"},"ts":1245363962000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"sicking: our version is fairly agnostic with respect to details of Arun's draft","msgtype":"m.text"},"ts":1245364020000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, cool","msgtype":"m.text"},"ts":1245364021000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej, do you have a link to the draft you proposed?","msgtype":"m.text"},"ts":1245364022000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: But then you risk him dying before he finishes the spec, which means you need to find a new editor","msgtype":"m.text"},"ts":1245364023000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-June/020302.html","msgtype":"m.text"},"ts":1245364080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking: ^","msgtype":"m.text"},"ts":1245364081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's basically what i just described :-)","msgtype":"m.text"},"ts":1245364200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: sequence<T> is just shorthand for an interface with a length property and an item() property or something like that, i think","msgtype":"m.text"},"ts":1245364201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: basically i just mean your regular DOM list of things","msgtype":"m.text"},"ts":1245364202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gives up trying to obtain Lightroom, seeming Adobe keep refusing to sell it to me","msgtype":"m.emote"},"ts":1245364320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh well, their lost sale.","msgtype":"m.text"},"ts":1245364321000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie, ok","msgtype":"m.text"},"ts":1245364440000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej, btw, have you had a look at the API that Arun proposed for File?","msgtype":"m.text"},"ts":1245365040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej, I know FileDialog is still controversial, but it'd be nice to hear how you feel about File","msgtype":"m.text"},"ts":1245365100000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: not yet","msgtype":"m.text"},"ts":1245365101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking: on my TODO list of spec review","msgtype":"m.text"},"ts":1245365102000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I just did a careful review of ForceTLS so I'm in a reviewing mood","msgtype":"m.text"},"ts":1245365160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hehe","msgtype":"m.text"},"ts":1245365161000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1245365162000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I expect to have issues with it if there's still synchronous file I/O, which I suspect there is","msgtype":"m.text"},"ts":1245365163000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, nope, asynch only","msgtype":"m.text"},"ts":1245365220000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"then maybe not so much!","msgtype":"m.text"},"ts":1245365221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sweet!","msgtype":"m.text"},"ts":1245365222000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i know you guys had concerns about googles Blob proposal, which was async only","msgtype":"m.text"},"ts":1245365223000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we're obviously interested in making file access better, and it would be nice to have fine DnD and our <input type=\"file\" multi> fuly spec'd","msgtype":"m.text"},"ts":1245365224000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not sure what that feedback was though, so not sure if it applies to File","msgtype":"m.text"},"ts":1245365280000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I dunno","msgtype":"m.text"},"ts":1245365281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'll spec both of those within days of arun's proposal being stable","msgtype":"m.text"},"ts":1245365282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej, Agreed. I think the only controversial part is FileDialog, assuming you're fine with file I/O","msgtype":"m.text"},"ts":1245365283000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"right now we're just using the File interface as a dumb handle","msgtype":"m.text"},"ts":1245365284000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking: oh i got a response back from the gmail guys about the filedialog thing -- if you can get arun here that'd be great to discuss it","msgtype":"m.text"},"ts":1245365760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, you should mail arun and me so we can figure out a day that works","msgtype":"m.text"},"ts":1245365820000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, what about storing File in localStorage?","msgtype":"m.text"},"ts":1245366000000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, I'd imagine that that's needed for offline-gmail","msgtype":"m.text"},"ts":1245366001000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: well i'm free whenever","msgtype":"m.text"},"ts":1245366420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking, would that do a copy or reference the file on disk?","msgtype":"m.text"},"ts":1245366421000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"sicking: gmail uses the sql database stuff for their offline gmail","msgtype":"m.text"},"ts":1245366422000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: but yes, they would like a way to store references to Files while waiting for an opportunity to upload them","msgtype":"m.text"},"ts":1245366480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: i was more talking about FileDialog though","msgtype":"m.text"},"ts":1245366481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: turns out they didn't use flash to avoid using <input type=file> at all -- in fact they didn't even list that as a reason for using flash until i specifically asked them about it","msgtype":"m.text"},"ts":1245366482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: and then they dismissed that as not a big deal","msgtype":"m.text"},"ts":1245366483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you just wanna store references the local:<id> thing would work I think, you can just store those in localStorage","msgtype":"m.text"},"ts":1245366484000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5, how its stored seems like an implementation detail. I'd imagine sqlite has blob support","msgtype":"m.text"},"ts":1245366540000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, did they use it for async upload and multiple files?","msgtype":"m.text"},"ts":1245366541000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"sicking: i wouldn't expect the local:<id> thing to survive page load, but i guess that depends on how we define it","msgtype":"m.text"},"ts":1245366600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah, my question about localStorage was orthogonal to the meeting","msgtype":"m.text"},"ts":1245366601000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1245366602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/sicking/anne/","msgtype":"m.text"},"ts":1245366603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking, it's not an implementation detail, a reference to the file is very different from copying it","msgtype":"m.text"},"ts":1245366604000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"e.g. the user could modify the file later on","msgtype":"m.text"},"ts":1245366660000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5: the two things they said were multiselection of photos, and file upload progress.","msgtype":"m.text"},"ts":1245366661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5, ah, yes, we should define that it's the contents of the file at the time of the call to store it in localStore","msgtype":"m.text"},"ts":1245366662000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, yay for me guessing why they used Flash","msgtype":"m.text"},"ts":1245366663000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"and boo for sicking not believing me :p","msgtype":"m.text"},"ts":1245366720000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5: and then they added dnd of files, local display of files while uploading, and selecting or uploading a whole folder at once","msgtype":"m.text"},"ts":1245366721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5, i prefer data over guessing","msgtype":"m.text"},"ts":1245366722000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and finally they mentioned the <input accept=\"\"> feature (though not by name)","msgtype":"m.text"},"ts":1245366723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk5, except when I'm the one guessing","msgtype":"m.text"},"ts":1245366724000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk5, :)","msgtype":"m.text"},"ts":1245366725000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, so it appears :)","msgtype":"m.text"},"ts":1245366726000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"oh and resuming uploads after browser crash","msgtype":"m.text"},"ts":1245366727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though that one was more theoretical","msgtype":"m.text"},"ts":1245366780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, flash supports that?","msgtype":"m.text"},"ts":1245366781000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i always wonder whether selecting a folder should be a UI feature or some semantic thing like <input type=folder>","msgtype":"m.text"},"ts":1245366782000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"i think that was after they transitioned from why they used flash to what they wanted most of all","msgtype":"m.text"},"ts":1245366783000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, localStorage being able to store files would take care of that","msgtype":"m.text"},"ts":1245366840000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"anyway their answer to \"so, uh, styling of <input type=file> isn't an issue?\" was basically \"oh i guess that would be nice too\" but they basically said it wasn't a big deal compared to the rest","msgtype":"m.text"},"ts":1245366841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i vote for dropping FileDialog for now","msgtype":"m.text"},"ts":1245366842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we'll see","msgtype":"m.text"},"ts":1245366843000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: or the sql database, yeah","msgtype":"m.text"},"ts":1245366844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah, though i'm not sure what our timeline is for sql database. I think we still want to see some other API","msgtype":"m.text"},"ts":1245366900000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, have had some discussions about that internally recently","msgtype":"m.text"},"ts":1245366901000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah, we were talking about it in #developers recently too","msgtype":"m.text"},"ts":1245366902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1245366903000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"basically i'm gonna do nothing on the sql front until october and then i'm gonna suggest moving to LC","msgtype":"m.text"},"ts":1245366960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mostly due to the pains of standardizing a SQL dialect, and then having to implement a sql parser that maps that dialect to sqlite","msgtype":"m.text"},"ts":1245366961000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and after that look into speccing teh actual dialect","msgtype":"m.text"},"ts":1245366962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you have until then to come up with a better solution :-)","msgtype":"m.text"},"ts":1245366963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't see how we could move into LC without a dialect","msgtype":"m.text"},"ts":1245366964000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"which i'd likely support since i have no desire to actual spec out the dialect :-)","msgtype":"m.text"},"ts":1245366965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1245367020000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hence i vote for File in localStorage for now :)","msgtype":"m.text"},"ts":1245367021000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"well the dialect would be its own spec i think","msgtype":"m.text"},"ts":1245367022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and across postMessage","msgtype":"m.text"},"ts":1245367023000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i don't know what file in localStorage would really be","msgtype":"m.text"},"ts":1245367024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"postMessage should definitely support it","msgtype":"m.text"},"ts":1245367025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, what do you mean, what it would be?","msgtype":"m.text"},"ts":1245367080000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Oh dear…","msgtype":"m.text"},"ts":1245367081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sicking: well localStorage up to now has only been unstructured name-value string pairs","msgtype":"m.text"},"ts":1245367082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, can't we just make the value <string-or-file>?","msgtype":"m.text"},"ts":1245367083000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"If you follow the rules for comparing charsets in UTS #22, you end up with iso-ir-9-1 and iso-ir-91 being identical, but they shouldn't be.","msgtype":"m.text"},"ts":1245367084000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sicking: i don't think gmail wants an unstructured answer here; and extending DOMString to DOMString-or-File seems weird when you don't allow anything else","msgtype":"m.text"},"ts":1245367140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nono, not touch DOMString","msgtype":"m.text"},"ts":1245367141000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"gsnedders: do browsers support those?","msgtype":"m.text"},"ts":1245367142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be, um, crazy","msgtype":"m.text"},"ts":1245367143000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie: No idea.","msgtype":"m.text"},"ts":1245367144000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sicking: that's what i'm saying :-P","msgtype":"m.text"},"ts":1245367145000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: anyway, send mail","msgtype":"m.text"},"ts":1245367146000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: i'm swamped right now","msgtype":"m.text"},"ts":1245367147000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1245367148000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: and waiting for arun to finish his draft before i think of this","msgtype":"m.text"},"ts":1245367200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: On an HTML 5 note, it'd be nice if the charset override table used the same case as the IANA registry (i.e., lowercase \"w\" for \"windows-*\")","msgtype":"m.text"},"ts":1245367201000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok, i'll try to spend some time with him touching up the current draft","msgtype":"m.text"},"ts":1245367202000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it needs a lot of editing, but I'm not sure that the actual APIs will be much different from what we have now","msgtype":"m.text"},"ts":1245367260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"apart from Annes bikeshedding ;)","msgtype":"m.text"},"ts":1245367261000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"gsnedders: send mail","msgtype":"m.text"},"ts":1245367262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and possibly FileDialog since you're all a bunch of pansies ;)","msgtype":"m.text"},"ts":1245367263000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"was expecting that answer :)","msgtype":"m.emote"},"ts":1245367264000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: the reasons cited for using Flash to upload sound just like what the MobileMe people told us","msgtype":"m.text"},"ts":1245367265000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which is why we added multi-file selection and file upload progress (via XHR) to Safari","msgtype":"m.text"},"ts":1245367320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking, arun already accepted all my comments :)","msgtype":"m.text"},"ts":1245367321000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"sicking, well, apart from FileDialog, but it seems I'm not alone","msgtype":"m.text"},"ts":1245367322000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5, see above re 'pansy' ;)","msgtype":"m.text"},"ts":1245367380000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, says the man who doesn't wanna do redirects :p","msgtype":"m.text"},"ts":1245367440000,"senderName":"annevk5","senderId":"annevk5@irc"},
{"content":{"body":"annevk5, redirects are the root of all evil","msgtype":"m.text"},"ts":1245367500000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk5, together with money","msgtype":"m.text"},"ts":1245367501000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"annevk5, and premature optimizations","msgtype":"m.text"},"ts":1245367502000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"scripting modal dialogs are the root of more evil than redirects :-P","msgtype":"m.text"},"ts":1245367503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's going to be a dialog no matter what (in the non-dnd case)","msgtype":"m.text"},"ts":1245367560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"a user-invoked one is not a big deal","msgtype":"m.text"},"ts":1245367561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The difference between having it triggered by an arbitrary click, and on a JS call, is very small","msgtype":"m.text"},"ts":1245367562000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, UAs are free to warn instead of putting up a dialog if the JS-call happens outside a click","msgtype":"m.text"},"ts":1245367563000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, a'la popup blockers","msgtype":"m.text"},"ts":1245367620000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: any feature that is admitted to need popup-blocker-like treatment _at the design stage_ is imho a non-starter","msgtype":"m.text"},"ts":1245367680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, i don't think it needs a popup blocker","msgtype":"m.text"},"ts":1245368100000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, IE has had this API for ages. Granted, that's not the best indicator ever","msgtype":"m.text"},"ts":1245368101000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, also, geoid is doing the same thing","msgtype":"m.text"},"ts":1245368160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"IE doing something is not a good indicator that it is secure.","msgtype":"m.text"},"ts":1245368340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i know, but i've never heard or people being annoyed by it","msgtype":"m.text"},"ts":1245368341000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and the geoloc stuff isn't a modal dialog, it pops up an asynchronous UI that can then later cause the script to get a callback","msgtype":"m.text"},"ts":1245368342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or attacked by it","msgtype":"m.text"},"ts":1245368343000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1245368344000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"FileDialog is async too","msgtype":"m.text"},"ts":1245368345000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we don't have a need for this, and people aren't really happy about it","msgtype":"m.text"},"ts":1245368346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so why do it","msgtype":"m.text"},"ts":1245368400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen, others: i'm writing a section for the parser spec talking about some error handling cases and basically explaining how they end up as they do","msgtype":"m.text"},"ts":1245369240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you have any specific error cases you would like me to discuss in particular, let mek now","msgtype":"m.text"},"ts":1245369241000,"senderName":"Hixie","senderId":"Hixie@irc"}
]