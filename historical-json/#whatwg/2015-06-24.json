[
{"content":{"body":"did something change recently with regard to styling of Wikipedia pages in Firefox?","msgtype":"m.text"},"ts":1435105929000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when I look at Wikipedia pages in Firefox recently, it seems like there's less white space around the content, maybe smaller line hight, smaller font","msgtype":"m.text"},"ts":1435105990000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it doesn't look good","msgtype":"m.text"},"ts":1435105997000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm, I see now there's a background image there too, which I don't see in other browsers","msgtype":"m.text"},"ts":1435106059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"at that top","msgtype":"m.text"},"ts":1435106076000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or some kind of funky gradient","msgtype":"m.text"},"ts":1435106094000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Is there a clever combination of preserveAspectRatio, width, and height properties that can render me an SVG that would automatically cover any element it was made the background image of?","msgtype":"m.text"},"ts":1435106962000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: baby tears","msgtype":"m.text"},"ts":1435107296000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"lemme try that","msgtype":"m.text"},"ts":1435107309000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal, does specifying a viewBox but no width/height attributes work?","msgtype":"m.text"},"ts":1435107822000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"can anybody else connect to irc.w3.org right now?","msgtype":"m.text"},"ts":1435108300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just lost my connection","msgtype":"m.text"},"ts":1435108304000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I think I did too","msgtype":"m.text"},"ts":1435108636000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah I'm checking with systems team now","msgtype":"m.text"},"ts":1435108684000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(harder to do when we're not on the same IRC channel...)","msgtype":"m.text"},"ts":1435108703000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JonathanNeal: If you just don't use a viewBox, widht, or height at all, it'll automatically fill the space it's used in (the entire background area).","msgtype":"m.text"},"ts":1435108977000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: w3c-test.org unreachable as well","msgtype":"m.text"},"ts":1435115236000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I can't even ssh to it from within the firewal","msgtype":"m.text"},"ts":1435115264000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I’m also unable to connect to irc.w3c.org","msgtype":"m.text"},"ts":1435115698000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: try now","msgtype":"m.text"},"ts":1435115949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I’m in. Thanks.","msgtype":"m.text"},"ts":1435116003000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"this 'outsmart the user and copy random crap out of the address bar\" browser fad needs to end already","msgtype":"m.text"},"ts":1435117513000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: are you referring to copy hijack?","msgtype":"m.text"},"ts":1435119707000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"no, how I'll copy part of a url from the address bar and it's completely random whether i'll get the protocol at the start of the url or not","msgtype":"m.text"},"ts":1435120182000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"because some middle manager decided that showing \"http://\" in the address bar is somehow bad, so now there are obnoxious heuristics for browsers to decide what to copy","msgtype":"m.text"},"ts":1435120227000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: never experienced that, but I know if I copy a URL before it has been visited and the http isn’t present, then it doesn’t add it.","msgtype":"m.text"},"ts":1435120657000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"What browsers does this happen on?","msgtype":"m.text"},"ts":1435120664000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"firefox and chrome both try to be too clever","msgtype":"m.text"},"ts":1435120728000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"any browser that doesn't show the http protocol inherently has this problem (since then they have to play dumb games when you copy the url to figure out if they need to add it back in for the copy op)","msgtype":"m.text"},"ts":1435120765000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"so stupid things happen, like i'll copy just the hostname to ping a site and end up pasting a url instead of what i copied; or i'll edit a url in the address bar (eg. to simplify an amazon url), paste it and now the protocol is missing","msgtype":"m.text"},"ts":1435120806000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ISOC is holding a workshop today focusing on \"DNSSEC Successes, Statistics and Innovation\"","msgtype":"m.text"},"ts":1435148180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"meanwhile, only 0.43% of .COM domains are DNSSEC-signed...","msgtype":"m.text"},"ts":1435148216000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"emperor's new clothes","msgtype":"m.text"},"ts":1435148282000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: on the contrary, I think it makes perfect sense","msgtype":"m.text"},"ts":1435149322000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"given sufficient innovation in statistics, you can find success in DNSSEC","msgtype":"m.text"},"ts":1435149336000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"hahah","msgtype":"m.text"},"ts":1435149343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you got it all, right there","msgtype":"m.text"},"ts":1435149360000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"they should hire you to do their PR","msgtype":"m.text"},"ts":1435149380000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"shouldn't everyone?","msgtype":"m.text"},"ts":1435149388000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1435149460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1435149551000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wanderview: So, range requests. Any idea how the browser defends against getting none-matching partials","msgtype":"m.text"},"ts":1435155754000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"as in, the underlying resource has changed between range requests","msgtype":"m.text"},"ts":1435155769000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"leading to the cached version being a frankenresource","msgtype":"m.text"},"ts":1435155790000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"probably using Last-Modified","msgtype":"m.text"},"ts":1435155892000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"JoWie: you are right https://tools.ietf.org/html/rfc2616#section-13.5.4","msgtype":"m.text"},"ts":1435155977000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"ah but only if Date is more than 60 seconds after Last-Modified","msgtype":"m.text"},"ts":1435156215000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"ETag also works","msgtype":"m.text"},"ts":1435156257000,"senderName":"JoWie","senderId":"JoWie@irc"},
{"content":{"body":"JakeA: we need to decide on that used flag thing for Request/Response","msgtype":"m.text"},"ts":1435157071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, brain dumping on the restarting download issue, then will move onto that","msgtype":"m.text"},"ts":1435157122000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: note that we need support for range in the cache API too","msgtype":"m.text"},"ts":1435157143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm brain dumping on that too","msgtype":"m.text"},"ts":1435157156000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and we need to figure out how synthetic 206 behaves","msgtype":"m.text"},"ts":1435157160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1435157162000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1435157164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess your thinking is similar to mine then. Cache never contains 206 responses but it may vend them depending on the request in .match(request)","msgtype":"m.text"},"ts":1435157205000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I haven't really figured this out yet","msgtype":"m.text"},"ts":1435157232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Note that we do allow synthetic 304 at the moment","msgtype":"m.text"},"ts":1435157249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which is the equivalent for a cached non-partial response","msgtype":"m.text"},"ts":1435157269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I WAS JUST WRITING THAT","msgtype":"m.text"},"ts":1435159831000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"now I'm not going to seem as smart","msgtype":"m.text"},"ts":1435159840000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the content-length thing?  annevk and I were talking about it yesterday","msgtype":"m.text"},"ts":1435159852000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: nah, \"I would prefer if just have getReader() set the flag\"","msgtype":"m.text"},"ts":1435159868000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"oh, yea... lets reduce the insanity","msgtype":"m.text"},"ts":1435159883000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: btw, does chrome implement the incumbent cache record and partial cache entries yet?","msgtype":"m.text"},"ts":1435159900000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I doubt it, but I don't know for sure","msgtype":"m.text"},"ts":1435159913000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks... just curious if I should be in a hurry to implement that","msgtype":"m.text"},"ts":1435161029000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I still have a hard time wrapping my head around what the spec says now","msgtype":"m.text"},"ts":1435161038000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I guess the issue is, if the download of the Response is happening outside of Cache, then cache can't do any automatic restart... the fetch() needs to do the range request in order to avoid duplicating the initial download","msgtype":"m.text"},"ts":1435161128000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"do we need to support restarting for both external-to-cache fetch() and internal-to-cache fetch()?","msgtype":"m.text"},"ts":1435161150000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think solving for external-to-cache fetch() should be the higher priority","msgtype":"m.text"},"ts":1435161163000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: where is null body distinguished/used in html spec?","msgtype":"m.text"},"ts":1435163682000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: did I write HTML?","msgtype":"m.text"},"ts":1435163704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: oops","msgtype":"m.text"},"ts":1435163711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, you wrote http","msgtype":"m.text"},"ts":1435163723000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I don't understand what the proposal is any more","msgtype":"m.text"},"ts":1435163861000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: JakeA: Domenic: maybe we should sit down in SF in July to figure this out","msgtype":"m.text"},"ts":1435163893000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"The proposal is that Response/Request have an associated \"used flag\" that is set by fetch() / put() / getReader()","msgtype":"m.text"},"ts":1435163904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If the flag is set, fetch() / put() / getReader() throw","msgtype":"m.text"},"ts":1435163917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(also new Request())","msgtype":"m.text"},"ts":1435163937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Whether body is null or a stream is not important","msgtype":"m.text"},"ts":1435163961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it just sucks that we have special case logic outside of fetch in put(), etc","msgtype":"m.text"},"ts":1435163996000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"outside of fetch spec","msgtype":"m.text"},"ts":1435164002000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I would prefer to just do it getReader() and if body is null then don't mark used... its all consistent whoever uses the Response then","msgtype":"m.text"},"ts":1435164045000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"How does that work with new Request()?","msgtype":"m.text"},"ts":1435164138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because that is what fetch() and put() use today","msgtype":"m.text"},"ts":1435164156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"To normalize some other stuff","msgtype":"m.text"},"ts":1435164161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... then put() doesn't do anything special... it uses new Request() which makes setting the flag internal to fetch","msgtype":"m.text"},"ts":1435164204000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I want setting the used flag to be done by the fetch spec and no one else... and Cache only uses public API calls from fetch to do it... the constructor works for that","msgtype":"m.text"},"ts":1435164236000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Okay","msgtype":"m.text"},"ts":1435164249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess the only case that's not explained is the getReader() scenario","msgtype":"m.text"},"ts":1435164264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"At least not through new Request()","msgtype":"m.text"},"ts":1435164272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, fetch spec needs to integrate with getReader() somehow... either through weasel-words or wrapping the stream or observing the stream somehow","msgtype":"m.text"},"ts":1435164297000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: is there a way to observe the getReader() call? ^^^","msgtype":"m.text"},"ts":1435164312000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hi folks - does either the HTML spec or the 6th edition of ECMAScript specify how to load a JS as 6th-ed ECMAScript (so that we get 6th-ed features such as the let statement)??","msgtype":"m.text"},"ts":1435174380000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"wanderview: no, not without monkey-patching","msgtype":"m.text"},"ts":1435174416000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"getReader() being observable is nonsensical","msgtype":"m.text"},"ts":1435174426000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"you can just do .getReader().releaseLock() and you've done nothing","msgtype":"m.text"},"ts":1435174439000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"> I want setting the used flag to be done by the fetch spec and no one else // if that's what you want, it's easy, just keep a side-table","msgtype":"m.text"},"ts":1435174514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"but I thought you also wanted to throw if someone else read using a reader","msgtype":"m.text"},"ts":1435174523000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"WeirdAl, there are no versions. JS is JS","msgtype":"m.text"},"ts":1435175351000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: uh huh... then tell me how I can have the same script tag, and the same script, in a HTML document, and use let blocks, in both Google Chrome and Mozilla Firefox.","msgtype":"m.text"},"ts":1435175392000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"let blocks? Those don't exist :)","msgtype":"m.text"},"ts":1435175419000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"FF wants type=\"application/javascript;version=1.7\" or a higher version - but GC won't recognize that MIME type.","msgtype":"m.text"},"ts":1435175436000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"(in the script tag)","msgtype":"m.text"},"ts":1435175443000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"if you put \"use strict\" in the script that seems to be enough for GC, except for the aforementioned type attribute problem","msgtype":"m.text"},"ts":1435175477000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"ok, let statements, not let blocks :p","msgtype":"m.text"},"ts":1435175564000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"basically, I want a common way to say \"this JS should be loaded as if it were dependent on the 6th edition of ECMAScript.\"","msgtype":"m.text"},"ts":1435175698000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"<script>","msgtype":"m.text"},"ts":1435175853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe not today, but soon enough","msgtype":"m.text"},"ts":1435175862000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":-| okay... and what if I want to use experimental \"7th-edition\" features?  (Please, don't say polyfill.)","msgtype":"m.text"},"ts":1435176077000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"(also, is there a FF bug to turn on 6th edition by default?)","msgtype":"m.text"},"ts":1435176172000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"No, but there should be a bug to enable let bindings by default","msgtype":"m.text"},"ts":1435176359000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"grumble grumble","msgtype":"m.text"},"ts":1435176743000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"WeirdAl, I'm being pointed at https://bugzilla.mozilla.org/show_bug.cgi?id=950547","msgtype":"m.text"},"ts":1435177437000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=932513#c5 is interesting","msgtype":"m.text"},"ts":1435177659000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"there is no such thing as versions in browser, WeirdAl.","msgtype":"m.text"},"ts":1435178634000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"versions are a fiction propagated by spec writers","msgtype":"m.text"},"ts":1435178642000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"editions, then","msgtype":"m.text"},"ts":1435178653000,"senderName":"WeirdAl","senderId":"WeirdAl@irc"},
{"content":{"body":"no such thing","msgtype":"m.text"},"ts":1435178659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"they are made up","msgtype":"m.text"},"ts":1435178669000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"browsers just implement features, in some random order","msgtype":"m.text"},"ts":1435178689000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"sometimes they implement features from edition 5, sometimes from 6, sometimes from 7","msgtype":"m.text"},"ts":1435178704000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yes I do want normal stream readers to result in the used flag being set...  I think annevk was suggesting we do the set flag as soon as getReader() is called the first time... I told him I thought you would dislike that since you want it on stream close","msgtype":"m.text"},"ts":1435180465000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: I just want us all to settle on something at this point","msgtype":"m.text"},"ts":1435180473000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yes :(","msgtype":"m.text"},"ts":1435180493000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"offset seemed like a big concession from me; I'm surprised it wasn't enough to get everyone on board.","msgtype":"m.text"},"ts":1435180521000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: if nothing else we can talk after the SW f2f if you are in SF that week","msgtype":"m.text"},"ts":1435180537000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: well, I think annevk is trying to do the breaking change so we don't need the offset all... I think we viewed that as a concession as well","msgtype":"m.text"},"ts":1435180590000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: when is the SW f2f? I will be at the custom elements f2f July 21...","msgtype":"m.text"},"ts":1435180597000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: its the day before the custom elements...  annevk and I will be in town until Thursday I think","msgtype":"m.text"},"ts":1435180620000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"he might leave on Thursday","msgtype":"m.text"},"ts":1435180627000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh perfect, ok","msgtype":"m.text"},"ts":1435180629000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"so maybe Wednesday","msgtype":"m.text"},"ts":1435180631000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1435180632000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah sounds good","msgtype":"m.text"},"ts":1435180640000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1435180645000,"senderName":"wanderview","senderId":"wanderview@irc"}
]