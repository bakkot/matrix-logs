[
{"content":{"body":"zcorpan : hi!","msgtype":"m.text"},"ts":1467790013000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: hi","msgtype":"m.text"},"ts":1467790045000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"privet, zcorpan","msgtype":"m.text"},"ts":1467790045000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"botie, go away","msgtype":"m.text"},"ts":1467790057000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: sorry...","msgtype":"m.text"},"ts":1467790057000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"zcorpan, morning! could you help me to check this issue :) ? https://github.com/w3c/webvtt/issues/310","msgtype":"m.text"},"ts":1467790111000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: argh, i had written a detailed reply to that, apparently it didn't come through :'(","msgtype":"m.text"},"ts":1467790164000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thx for heads-up","msgtype":"m.text"},"ts":1467790188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks you too! I think I need to figure how to parsing cue identifier more clearly before committing a PR :)","msgtype":"m.text"},"ts":1467790370000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"commented","msgtype":"m.text"},"ts":1467790716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"since the position is pointing to the timestamp, the cue can be parsed correctly, but the cue identifier can't be parsed correctly.","msgtype":"m.text"},"ts":1467791044000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"that means all identifiers wouldn't be parsed correctly in that file because they contains \"-->\" ?","msgtype":"m.text"},"ts":1467791094000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"zcorpan ^","msgtype":"m.text"},"ts":1467791107000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"alwu: right, they would all have empty string as identifiers","msgtype":"m.text"},"ts":1467791137000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan : cool! thanks for explanation! and I have another question","msgtype":"m.text"},"ts":1467791214000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"that's intentional :-)","msgtype":"m.text"},"ts":1467791214000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1467791219000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in \"Cue creation\", the buffer is still empty.","msgtype":"m.text"},"ts":1467791294000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"for this file, yes","msgtype":"m.text"},"ts":1467791313000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that means even we set the cue identifier to buffer, the identifier is still wrong value","msgtype":"m.text"},"ts":1467791316000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1467791348000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"not if there are blank lines between cues","msgtype":"m.text"},"ts":1467791362000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so, for the valid identifier, there would have run the \"Loop\" twice. In first time, it sets the 'line' to 'buffer'. In second time, we create the cue, and then set the 'buffer' to identifer.","msgtype":"m.text"},"ts":1467791467000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"is that right?","msgtype":"m.text"},"ts":1467791470000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"...set the identifier to 'buffer' :-)","msgtype":"m.text"},"ts":1467791695000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but yes","msgtype":"m.text"},"ts":1467791733000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok thanks :)","msgtype":"m.text"},"ts":1467791860000,"senderName":"alwu","senderId":"alwu@irc"},
{"content":{"body":"zcorpan: <caption> stuff LGTM","msgtype":"m.text"},"ts":1467797204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: dunno if you want someone else to sign off too","msgtype":"m.text"},"ts":1467797211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thx. probably ok to merge it","msgtype":"m.text"},"ts":1467797275000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: actually...","msgtype":"m.text"},"ts":1467797282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: should the caption thing be put together with the other stuff that is text-align: center?","msgtype":"m.text"},"ts":1467797301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: thead[align=absmiddle i] et al","msgtype":"m.text"},"ts":1467797351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: since there's no attribute to control it i think it shouldn't be a preshint","msgtype":"m.text"},"ts":1467797375000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not that people care much about the distinction","msgtype":"m.text"},"ts":1467797392000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1467797407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should start testing the difference at some point maybe","msgtype":"m.text"},"ts":1467797420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Or just remove the concept","msgtype":"m.text"},"ts":1467797428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: anyway, LGTM","msgtype":"m.text"},"ts":1467797433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i started writing tests for the rendering section a while back (ignoring UA style vs preshint), but it got too clumsy. need to go back and think of a better way to test","msgtype":"m.text"},"ts":1467797665000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Whoa, issue 52 is almost fixed","msgtype":"m.text"},"ts":1467805976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good times","msgtype":"m.text"},"ts":1467805980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh yeah that one has taken a while :-) then i need to structure up that section with subsections etc","msgtype":"m.text"},"ts":1467807976000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"live dom viewer doesn't work in Servo :-|","msgtype":"m.text"},"ts":1467808010000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It uses doc.write, does it not?","msgtype":"m.text"},"ts":1467808129000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1467808239000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Patches welcome ;)","msgtype":"m.text"},"ts":1467808355000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"can't be much harder than about:blank?","msgtype":"m.text"},"ts":1467808441000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"document.write is hard.","msgtype":"m.text"},"ts":1467808489000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: i know, i was trolling. :-) about:blank is also hard","msgtype":"m.text"},"ts":1467808646000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"var p1 = Promise.resolve(); p1; //must be in fulfilled state, right?","msgtype":"m.text"},"ts":1467809927000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: yeah, though you can't observe it until some microtask","msgtype":"m.text"},"ts":1467810150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"var p1 = Promise.resolve();","msgtype":"m.text"},"ts":1467810202000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"var p2 = Promise.reject();","msgtype":"m.text"},"ts":1467810202000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"var p3 = new Promise(() => {});","msgtype":"m.text"},"ts":1467810202000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"annevk: P1; says Promise { undefined }","msgtype":"m.text"},"ts":1467810221000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"why not Promise { <fulfilled> }?","msgtype":"m.text"},"ts":1467810275000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"zcorpan: what's so hard about the rendering section?","msgtype":"m.text"},"ts":1467810601000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"dunno, prolly depends on internals","msgtype":"m.text"},"ts":1467810604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: the approach i tried was to include all relevant elements and then check everything in getComputedStyle for each element, but it quickly became messy and didn't work","msgtype":"m.text"},"ts":1467810689000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ms2ger: https://github.com/whatwg/html/issues/928 ping","msgtype":"m.text"},"ts":1467813413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, ?","msgtype":"m.text"},"ts":1467813461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it's not clear to me there's an issue","msgtype":"m.text"},"ts":1467813474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If you navigate a page, does the former document not still have a browsing context?","msgtype":"m.text"},"ts":1467813534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1467813809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1467813842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Np :)","msgtype":"m.text"},"ts":1467814099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"programmatically identifying the state of a promise is a pain!","msgtype":"m.text"},"ts":1467817987000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"why not we have Promise.inspect?","msgtype":"m.text"},"ts":1467817995000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"What would that do?","msgtype":"m.text"},"ts":1467818009000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Tell us the state of the promise","msgtype":"m.text"},"ts":1467818068000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467818068000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"may it be sync API, or may it return a promise","msgtype":"m.text"},"ts":1467818083000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"pending, rejected, resolved, canceled ...","msgtype":"m.text"},"ts":1467818098000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"makes sense?","msgtype":"m.text"},"ts":1467818121000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Why would I need to know in which state a promise, though?","msgtype":"m.text"},"ts":1467818137000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"a promise is*","msgtype":"m.text"},"ts":1467818144000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's been proposed long ago, but I don't think anyone is trying to get it through TC39","msgtype":"m.text"},"ts":1467818160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You could give it a go","msgtype":"m.text"},"ts":1467818167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It doesn't appear to have any use cases we can find","msgtype":"m.text"},"ts":1467818444000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"howdoi: Why do you need this?","msgtype":"m.text"},"ts":1467818510000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"howdoi: \"Promise { undefined }\" (I presume this is DevTools telling you about the promise?) is because it's fulfilled with the value `undefined`.","msgtype":"m.text"},"ts":1467822491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: yt?","msgtype":"m.text"},"ts":1467833167000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: yt?","msgtype":"m.text"},"ts":1467833178000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: yep","msgtype":"m.text"},"ts":1467833186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: do you recall where assignedSlot is supposed to be defined?","msgtype":"m.text"},"ts":1467833208000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic, annevk: I thought we had agreed to add it on Element & CharacterData?","msgtype":"m.text"},"ts":1467833221000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the spec says it's defined on Text & Element: https://dom.spec.whatwg.org/#mixin-slotable","msgtype":"m.text"},"ts":1467833227000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm yeah I haven't been much involved in those discussions","msgtype":"m.text"},"ts":1467833259000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh maybe it got updated as a result of https://github.com/w3c/webcomponents/issues/351","msgtype":"m.text"},"ts":1467833311000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://github.com/w3c/webcomponents/issues/411","msgtype":"m.text"},"ts":1467833335000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh thanks","msgtype":"m.text"},"ts":1467833382000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"CharacterData would make more sense... but WebKit didn't like it","msgtype":"m.text"},"ts":1467833480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, in terms of assigning yes,","msgtype":"m.text"},"ts":1467833504000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: but there's no harm in having a property there","msgtype":"m.text"},"ts":1467833513000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm, if it's always going to return null I'd rather add it when it might no longer return null","msgtype":"m.text"},"ts":1467833554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that argument makes sense to me","msgtype":"m.text"},"ts":1467833587000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I just didn't realize that this change was made in conjunction with the types of nodes that could be assigned","msgtype":"m.text"},"ts":1467833608000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: to be fair, we could support assigning CharacterData in general if we tried. It was just not trivial for us to support","msgtype":"m.text"},"ts":1467833638000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"since they aren't rendered anyway","msgtype":"m.text"},"ts":1467833654000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: [CEReactions] doesn't seem to be auto-linking in DOM IDL blocks even when using bikeshed web service (i.e. latest updates) :(","msgtype":"m.text"},"ts":1467838048000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hey all, I had a quick question about CORS & CORS headers. I understand the need for Access-Control-Allow-Origin as it relates to sending/receiving cookies. But I don't understand why there isn't a client configurable option to just say \"I don't want to access the cookie state the browser is maintaining for this site\" and skip all the header validation. At that point it's the same as an HTTP request from any random client right?","msgtype":"m.text"},"ts":1467844562000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"jrenner_: sadly no, because e.g. my computer can access Google's intranet","msgtype":"m.text"},"ts":1467844606000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"jrenner_: I don't want any website I visit to be able to make requests to trigger actions (or even just discover the existence of certain pages on) Google's intranet","msgtype":"m.text"},"ts":1467844636000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Similarly your computer likely has access to an \"intranet\" which includes a router configuration page","msgtype":"m.text"},"ts":1467844667000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(If it's anything like my home computer)","msgtype":"m.text"},"ts":1467844672000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah right :/ yeah that makes sense. Has there been any looking into a permissions-based system like camera usage for making requests to other domains?","msgtype":"m.text"},"ts":1467844713000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"The problem is coming up with a permission prompt that makes any sense to users","msgtype":"m.text"},"ts":1467844730000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah yeah, sounds nice to me but my mom would have no idea what to do","msgtype":"m.text"},"ts":1467844765000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"I guess it doesn't sound impossible now that I think harder","msgtype":"m.text"},"ts":1467844779000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Like it could just be \"My newsreader app would like to be able to communicate with facebook.com\"","msgtype":"m.text"},"ts":1467844798000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1467844804000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And I guess you just hope users don't get used to auto-granting those? And click \"yes\" even when it says \"192.168.0.1\"?","msgtype":"m.text"},"ts":1467844822000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe annevk remembers these discussions more. (It's getting on to his bedtime though.)","msgtype":"m.text"},"ts":1467844858000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmmm I'm inclined to write it off and say people are already running random code on their phones and laptops, but that's not really a good excuse","msgtype":"m.text"},"ts":1467844914000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"Right, they have implicitly granted trust to that code by installing them, and also app stores can revoke apps that misbehave","msgtype":"m.text"},"ts":1467844997000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://annevankesteren.nl/2016/07/web-computing was just posted today and touches on that contrast","msgtype":"m.text"},"ts":1467845011000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmmm if only there was a semantically understandable way to \"upgrade\" a web app into being something more local.","msgtype":"m.text"},"ts":1467845318000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"I mean we're seeing some experimentation there","msgtype":"m.text"},"ts":1467845342000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But that still doesn't help much with the review and revocation issues","msgtype":"m.text"},"ts":1467845353000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And there's XSRF and XSS","msgtype":"m.text"},"ts":1467845369000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean, presumably XSRF and XSS wouldn't be affected by an extra set of trust semantics. I think... supposing you limit the permissions to scripts from the host that requested them","msgtype":"m.text"},"ts":1467845697000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"sure but the point of XSRF and XSS is to get the host to execute code on your behalf :)","msgtype":"m.text"},"ts":1467845760000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well XSRF can be covered by simply not re-using the cookie when these requests are made, and XSS is... I guess still a problem if someone managed to embed some JS as the host in a trusted environment...","msgtype":"m.text"},"ts":1467845943000,"senderName":"jrenner_","senderId":"jrenner_@irc"},
{"content":{"body":"I don't think these problems are unsolvable","msgtype":"m.text"},"ts":1467846064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think you'd want some kind of mega isolation mode (with lots of CSP headers and stuff)","msgtype":"m.text"},"ts":1467846085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and you'd want to build remote revocation infrastructure in, kind of like the safe browsing list","msgtype":"m.text"},"ts":1467846116000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"with those in place, a permissions prompt asking for permission to access the third-party origin might work","msgtype":"m.text"},"ts":1467846142000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"mega-isolation mode is where most the handwaving is","msgtype":"m.text"},"ts":1467846182000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hehe yeah... and there's a lot of question of how much we would could/need to protect the user from the trusted host being vulnerable","msgtype":"m.text"},"ts":1467846250000,"senderName":"jrenner_","senderId":"jrenner_@irc"}
]