[
{"content":{"body":"Whee, I just got WebKit to make a Range whose end offset is greater than the length of its end node.","msgtype":"m.text"},"ts":1301276100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"While IE makes a Range whose start and end node don't have a common ancestor.","msgtype":"m.text"},"ts":1301276160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Nice.","msgtype":"m.text"},"ts":1301276161000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"data:text/html,<!doctype html><body><script>var text = document.createTextNode(\"Abcdef\"); var range = document.createRange(); range.setStart(text, 0); range.setEnd(text, 2); text.splitText(1); document.body.textContent = range.startContainer.data + range.startOffset + range.endContainer.data + range.endOffset;</script>","msgtype":"m.text"},"ts":1301276220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Chrome 11 dev: A0A2","msgtype":"m.text"},"ts":1301276221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IE 9: A0bcdef2","msgtype":"m.text"},"ts":1301276280000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nice testcase","msgtype":"m.text"},"ts":1301277120000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I wonder if you can trigger interesting bugs in Webkit by using that range","msgtype":"m.text"},"ts":1301277180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Gecko just doesn't special-case splitText(), so it does A0A1.","msgtype":"m.text"},"ts":1301277181000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which is bad overall, IMO, so I'm speccing WebKit's behavior here (but with corner cases correctly handled :) ).","msgtype":"m.text"},"ts":1301277182000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, I was wondering that too.","msgtype":"m.text"},"ts":1301277183000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or in IE.","msgtype":"m.text"},"ts":1301277240000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so what do you think the correct answer is?","msgtype":"m.text"},"ts":1301277241000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"In this case, I think Gecko is right.","msgtype":"m.text"},"ts":1301277242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1301277243000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"But in the normal case, where the text node isn't detached, it should be A0bcdef1.","msgtype":"m.text"},"ts":1301277244000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because that's logically what the range is.","msgtype":"m.text"},"ts":1301277245000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1301277246000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"MikeSmith: is it the most recent? http://sideshowbarker.github.com/console-spec/","msgtype":"m.text"},"ts":1301321700000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"still no editor for it?","msgtype":"m.text"},"ts":1301321760000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: yeah, that is the latest","msgtype":"m.text"},"ts":1301322420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and no editor","msgtype":"m.text"},"ts":1301322421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"other than me","msgtype":"m.text"},"ts":1301322422000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1301322423000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"question.","msgtype":"m.text"},"ts":1301326380000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"I have my header set up and whatnot","msgtype":"m.text"},"ts":1301326500000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"using header and nav,","msgtype":"m.text"},"ts":1301326501000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"where the content goes, can I use a <section> tag?","msgtype":"m.text"},"ts":1301326502000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"it's not a complicated website, and the section tag here will be used to store and have all the info about the company in the different links of the website","msgtype":"m.text"},"ts":1301326560000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"is this correct use?","msgtype":"m.text"},"ts":1301326561000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"(I got direceted here by HTML5 for web designers by Jeremy keith","msgtype":"m.text"},"ts":1301326562000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1301326563000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"Roughly speaking a <section> is a grouping of content under a <hx> heading","msgtype":"m.text"},"ts":1301326620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So if each bit of content has a <hx> then <section> is indeed right","msgtype":"m.text"},"ts":1301326680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hx is header right?","msgtype":"m.text"},"ts":1301326740000,"senderName":"funkie","senderId":"funkie@irc"},
{"content":{"body":"<h1> or <h2> or whatever","msgtype":"m.text"},"ts":1301326920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"html5 nytimes. Checked. http://www.nytimes.com/2011/03/27/business/27unboxed.html?_r=1&src=tptw&pagewanted=print","msgtype":"m.text"},"ts":1301328840000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"huh, Hixie isn't here?","msgtype":"m.text"},"ts":1301333940000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"Google has a limited notion of browser support http://www.google.com/support/profiles/bin/answer.py?answer=1151309","msgtype":"m.text"},"ts":1301334420000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: :-( At least this time the outdated icon is the Firefox icon--not the Opera icon","msgtype":"m.text"},"ts":1301336700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it's pretty gross to see Google doing the exclusive-list-of-supported-browsers thing ... they should be setting a better example","msgtype":"m.text"},"ts":1301336760000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ha google is a big monster now.","msgtype":"m.text"},"ts":1301336761000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"so many different teams in so many different directions.","msgtype":"m.text"},"ts":1301336762000,"senderName":"nimbupani","senderId":"nimbupani@irc"},
{"content":{"body":"zewt, it is because the last paragraph about Interoperability and Open Web has been cut. It was after the 60 words limit.","msgtype":"m.text"},"ts":1301336820000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"heh, know what made me lose hope in sanity-of-google?","msgtype":"m.text"},"ts":1301336880000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"Change background image\"","msgtype":"m.text"},"ts":1301336881000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1301336882000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"clearly this is the single most important feature in all of Google","msgtype":"m.text"},"ts":1301336883000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, do you intend to write a CP for ISSUE-147?","msgtype":"m.text"},"ts":1301342220000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"foolip_: if you could write one that would save me a lot of time, but if you don't i expect i'll get around to it at some point","msgtype":"m.text"},"ts":1301344980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: are you proposing to change DOM Range","msgtype":"m.text"},"ts":1301347500000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or behavior of selection?","msgtype":"m.text"},"ts":1301347501000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, it would be pretty weird if the behavior of selections didn't follow from ranges, wouldn't it?","msgtype":"m.text"},"ts":1301347502000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm suggesting we change ranges, and selections will follow.","msgtype":"m.text"},"ts":1301347503000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(It's a change to DOM Range either way, if by \"DOM Range\" you mean the new version Ms2ger wrote and that I'm working on, and not the old DOM Level 2 Range spec)","msgtype":"m.text"},"ts":1301347560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: I'm not sure I follow <p>{Foo<i>bar</i>} case","msgtype":"m.text"},"ts":1301347561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Which part?","msgtype":"m.text"},"ts":1301347562000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"why would you move nodes nodes one by one","msgtype":"m.text"},"ts":1301347563000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"How else can you move them?","msgtype":"m.text"},"ts":1301347564000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"extract all to documentfragment","msgtype":"m.text"},"ts":1301347620000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1301347621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That would destroy the range no matter what we do.  But you're just saying we can manually reconstruct it afterwards easily enough, right?","msgtype":"m.text"},"ts":1301347622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"and then insert the documenfragment to the right place","msgtype":"m.text"},"ts":1301347623000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"destroy the range?","msgtype":"m.text"},"ts":1301347680000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"why","msgtype":"m.text"},"ts":1301347681000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I mean, collapse it.","msgtype":"m.text"},"ts":1301347682000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1301347740000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"should <b> end up in the range","msgtype":"m.text"},"ts":1301347741000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or outside it","msgtype":"m.text"},"ts":1301347742000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Probably outside, if we assume that when the user starts typing it should replace the selection and should be bold.","msgtype":"m.text"},"ts":1301347743000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1301347744000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Anyway, there are other cases where I need to mutate things.  Like for instance, if you bold here: <b>fo[o</b>bar] I change it to: <b>fo[obar]</b> preserving the original element.","msgtype":"m.text"},"ts":1301347800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Gecko does this too, IIRC, at least in some cases.)","msgtype":"m.text"},"ts":1301347801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"it would be, IMO, just a bit strange to special this in DOM Range","msgtype":"m.text"},"ts":1301347860000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but need to think about it some more","msgtype":"m.text"},"ts":1301347861000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"You mean, to special-case it when a node is being moved to a more or less adjacent position?","msgtype":"m.text"},"ts":1301347862000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1301347863000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It actually seems very logical to me that you don't want to treat it like a totally different node in that case.  It naturally satisfies all of my execCommand() selection-mutation needs without any need for extra prose in the execCommand() spec.","msgtype":"m.text"},"ts":1301347920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"selection is different thing than just pure DOM range","msgtype":"m.text"},"ts":1301347921000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"How so?  Selections are specced as just a list of Ranges.","msgtype":"m.text"},"ts":1301347922000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"DOM Range spec may be bad, but at least it is quite consistent","msgtype":"m.text"},"ts":1301347923000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"sure, once user has done a selection, it shows up as a range","msgtype":"m.text"},"ts":1301347980000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"user, script, whatever","msgtype":"m.text"},"ts":1301347981000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"But?","msgtype":"m.text"},"ts":1301348040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"browsers may modify ranges the way they need","msgtype":"m.text"},"ts":1301348100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"What do you mean?","msgtype":"m.text"},"ts":1301348101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I know WebKit and Opera don't allow all Ranges to be part of Selections, but that's not what the spec says or what IE/Gecko do.","msgtype":"m.text"},"ts":1301348102000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I mean, in case of selection and execCommand, browsers could just handle range the way you want DOM range to work always","msgtype":"m.text"},"ts":1301348103000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but as I said, I need to think about this some more","msgtype":"m.text"},"ts":1301348160000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Why would you want ranges to work differently in other cases?  Are there applications of Range where the current model is more useful?","msgtype":"m.text"},"ts":1301348220000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(Actually, I'm not sure offhand what applications there are of Ranges at all, beyond editing-related stuff.)","msgtype":"m.text"},"ts":1301348221000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"copy-paste at least","msgtype":"m.text"},"ts":1301348280000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"d&d","msgtype":"m.text"},"ts":1301348281000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Is the current model more useful there, or are you just mentioning use-cases?","msgtype":"m.text"},"ts":1301348282000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"although those are close to editing","msgtype":"m.text"},"ts":1301348283000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Copy-paste is definitely Selection-related.","msgtype":"m.text"},"ts":1301348340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Anyway, I wouldn't be totally against special-casing Selections here, but I don't see why we'd want to.","msgtype":"m.text"},"ts":1301348341000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm just worried about adding a bit strange special case to DOM Range, which otherwise is pretty consistently defined","msgtype":"m.text"},"ts":1301348400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"AryehGregor: but as I said, need to think this some more","msgtype":"m.text"},"ts":1301348460000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"There are already some special cases for other DOM mutations, like insertData() and deleteData() (which behave differently from setting the data attribute).","msgtype":"m.text"},"ts":1301348461000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But anyway, go ahead and think about it.","msgtype":"m.text"},"ts":1301348462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm happy to hear feedback.","msgtype":"m.text"},"ts":1301348520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: what do you mean with insertdeleteData() and data setting? what is the special case there?","msgtype":"m.text"},"ts":1301349060000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I may have forgotten something about DOM Ranges :)","msgtype":"m.text"},"ts":1301349120000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, you could argue it's not actually a special case, I guess.","msgtype":"m.text"},"ts":1301349121000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But, e.g., node.appendData(\"foo\") behaves differently from node.data += \"foo\" with respect to Range mutation.","msgtype":"m.text"},"ts":1301349122000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The DOM Level 2 Range is very vague about it.","msgtype":"m.text"},"ts":1301349123000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The spec I've written so far to precisely define how CharacterData nodes should behave when their data is changed is probably about as long as it would take to define my proposed scheme for node insertions/deletions.","msgtype":"m.text"},"ts":1301349180000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"oh, but node.data += \"foo\" replaces the whole value with new one","msgtype":"m.text"},"ts":1301349240000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Yeah, so you could say it's not logically a special case, but in the spec it has to be a special case.","msgtype":"m.text"},"ts":1301349241000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least if you're precise.","msgtype":"m.text"},"ts":1301349242000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I would expect node.data += work differently to appendData","msgtype":"m.text"},"ts":1301349300000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder what browsers do","msgtype":"m.text"},"ts":1301349301000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It works differently.","msgtype":"m.text"},"ts":1301349302000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(I'm writing tests for it right now to go with my spec text, should be ready by tomorrow sometime)","msgtype":"m.text"},"ts":1301349303000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"My current philosophy is that we should match what's the most logical even if it's more complicated, but you seem to be not entirely happy with that for Ranges.","msgtype":"m.text"},"ts":1301349360000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What do you feel about splitText()?","msgtype":"m.text"},"ts":1301349361000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"If you have a text node like \"Ab[cd]ef\" and do splitText(3), what happens to the range?","msgtype":"m.text"},"ts":1301349362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"\"Ab[c]\" \"def\" is what the preexisting specs would suggest, and what Gecko and Opera do.  But \"Ab[c\" \"d]ef\" would make more sense, and is what WebKit does.","msgtype":"m.text"},"ts":1301349420000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't know what is not logical in DOM Range","msgtype":"m.text"},"ts":1301349421000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, there Ab[c is the right one","msgtype":"m.text"},"ts":1301349480000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"By \"logical\" I mean \"what people would expect in the specific case\", not \"obeys some kind of consistent internal logic\".","msgtype":"m.text"},"ts":1301349481000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, that means we have to special-case splitText().  On general principle, you'd say that some data was deleted from the first node and an unrelated new node was inserted, so the end of the range is lost, right?","msgtype":"m.text"},"ts":1301349482000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(which is what Gecko does right now)","msgtype":"m.text"},"ts":1301349483000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1301349540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what is the special case?","msgtype":"m.text"},"ts":1301349541000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"http://aryeh.name/tmp/dom-range.html#range-behavior-under-document-mutation","msgtype":"m.text"},"ts":1301349542000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's no way to do it that I see except to say \"When splitText() is run, take these special steps.\"","msgtype":"m.text"},"ts":1301349543000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"just a second... I want to test data += handling in gecko","msgtype":"m.text"},"ts":1301349544000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Setting data just resets the offset to 0 in all cases that I tested.","msgtype":"m.text"},"ts":1301349600000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In both Gecko and WebKit.","msgtype":"m.text"},"ts":1301349601000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"good","msgtype":"m.text"},"ts":1301349602000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is what I was expecting","msgtype":"m.text"},"ts":1301349603000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"In Opera it sets start offsets to 0 and end offsets to the new data's length, and in IE it does somewhat weird stuff.","msgtype":"m.text"},"ts":1301349604000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(like in some cases changing the start/end nodes of the range)","msgtype":"m.text"},"ts":1301349605000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Relatedly, if you have something like {Foobar} (start/end containers are the parent of the text node, not the text node itself) and do splitText(3), all browsers produce {Foo}bar.","msgtype":"m.text"},"ts":1301349660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"surprising that Webkit resets offsets in that case, but it follows some other logic with insertNode ...","msgtype":"m.text"},"ts":1301349661000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it would be kinda cool if += behaved like append() but expressing that in WebIDL would not be easy","msgtype":"m.text"},"ts":1301349720000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I.e., they keep the boundary point offset intact, so it's now logically in the middle of the split string, instead of advancing it by one.","msgtype":"m.text"},"ts":1301349721000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well, += is part of JS","msgtype":"m.text"},"ts":1301349722000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It was surprising to me as an author that document.innerHTML += stuff; would actually wipe out everything in the document and recreate it from scratch, instead of appending to it in-place.","msgtype":"m.text"},"ts":1301349780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Can built-in stuff override the semantics of += separately from =?  Like how in C++ you can overload different assignment operators differently?","msgtype":"m.text"},"ts":1301349840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't think it is possible to override +=","msgtype":"m.text"},"ts":1301349841000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"otherwise that would have been done in browsers","msgtype":"m.text"},"ts":1301349842000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"innerHTML += shows up in *many* performance tests","msgtype":"m.text"},"ts":1301349843000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, you could get ES changed to allow it, right?","msgtype":"m.text"},"ts":1301349900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"innerHTML += may have other problems too, since you really need to reparse the whole result, I think","msgtype":"m.text"},"ts":1301349960000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"probably the easiest way to \"fix\" += would be to have a special case for setting .data based on whether the old value is a prefix of the new value","msgtype":"m.text"},"ts":1301350020000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"ditto for innerHTML","msgtype":"m.text"},"ts":1301350021000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Is that actually true?  The contents of innerHTML are serialized from a DOM, so they're going to have all end tags closed and so on.","msgtype":"m.text"},"ts":1301350022000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but that could trip people up too","msgtype":"m.text"},"ts":1301350023000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Interesting.  You could also special-case suffixing that way.","msgtype":"m.text"},"ts":1301350024000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not insertData(), though.","msgtype":"m.text"},"ts":1301350025000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(currently the spec special-cases setting data to the exact same thing, matching WebKit but seemingly no one else)","msgtype":"m.text"},"ts":1301350026000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(but if implementers would prefer fewer special cases in Range for whatever reason, I could simplify it)","msgtype":"m.text"},"ts":1301350080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"what does the spec say about that?","msgtype":"m.text"},"ts":1301350081000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"About what?","msgtype":"m.text"},"ts":1301350082000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"setting .data to the exact same thing","msgtype":"m.text"},"ts":1301350083000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I mean if you just write \"foo.data = str;\" it might be bad for that to behave differently if \"str\" is accidentally an extension of the old value","msgtype":"m.text"},"ts":1301350084000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"The spec I just wrote in the last three hours or so says that setting .data to the exact same thing shouldn't change any Ranges.","msgtype":"m.text"},"ts":1301350085000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1301350086000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"There's no spec for it before that, I don't think.","msgtype":"m.text"},"ts":1301350087000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"that is possible","msgtype":"m.text"},"ts":1301350140000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"DOM Level 2 Range doesn't say how you should handle it.  You could conjecture that setting data should be like removing all the data and then adding the new data.","msgtype":"m.text"},"ts":1301350141000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But you could also conjecture that setting it to the current content should be special-cased.","msgtype":"m.text"},"ts":1301350200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It doesn't say.","msgtype":"m.text"},"ts":1301350201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"have you specced insertNode?","msgtype":"m.text"},"ts":1301350260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"No, not yet.","msgtype":"m.text"},"ts":1301350261000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"just curious","msgtype":"m.text"},"ts":1301350262000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Are there any tricky bits in it?","msgtype":"m.text"},"ts":1301350263000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"since Acid3 allows two different behaviors for it","msgtype":"m.text"},"ts":1301350264000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1301350265000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"the one DOM 2 Range specs","msgtype":"m.text"},"ts":1301350266000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and then one Webkit implements","msgtype":"m.text"},"ts":1301350267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1301350268000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Well, if I spec it, I'll write tests that only allow one behavior.  :)","msgtype":"m.text"},"ts":1301350269000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(and after Acid3 Opera change their behavior from spec to webkit)","msgtype":"m.text"},"ts":1301350320000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/change/changed/","msgtype":"m.text"},"ts":1301350321000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"What's the difference?","msgtype":"m.text"},"ts":1301350322000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IIRC, whether or not change collapsed range","msgtype":"m.text"},"ts":1301350323000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(I think Opera changed their behavior because for some time Acid3 didn't allow what the spec says)","msgtype":"m.text"},"ts":1301350380000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie, if I write it, it will be a zero-edit proposal, is that what you wanted as well?","msgtype":"m.text"},"ts":1301351340000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"foolip_: i don't know what i want since i'm still trying to understand the issue (see the e-mails i cited in my mail to sam that i'm waiting for replies on), and i haven't done the testing to see what browsers do","msgtype":"m.text"},"ts":1301351580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip_: but a no-change proposal is certainly a subset of what i'd propose","msgtype":"m.text"},"ts":1301351581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"foolip_: so it works for me","msgtype":"m.text"},"ts":1301351582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, ok, I'll write/send it tomorrow morning","msgtype":"m.text"},"ts":1301351640000,"senderName":"foolip_","senderId":"foolip_@irc"},
{"content":{"body":"thanks dude","msgtype":"m.text"},"ts":1301351641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"much appreciated","msgtype":"m.text"},"ts":1301351642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"np, I just don't want to implement something weird for which I don't understand the use case","msgtype":"m.text"},"ts":1301351643000,"senderName":"foolip_","senderId":"foolip_@irc"}
]