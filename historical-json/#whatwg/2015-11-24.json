[
{"content":{"body":"philipj: does it matter what order I fix the attributeNode issues in?","msgtype":"m.text"},"ts":1448356793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: seems relatively straightforward to fix the alias one","msgtype":"m.text"},"ts":1448356802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, the order doesn't matter to me, but when I make the change in Blink I'd like to have a good sense that the spec, Blink and Gecko have precisely the same behavior as a goal","msgtype":"m.text"},"ts":1448357051000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Which is looking pretty hopeful right now.","msgtype":"m.text"},"ts":1448357059000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I thought we were aligning the spec with Blink?","msgtype":"m.text"},"ts":1448357095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: oh, the other bits","msgtype":"m.text"},"ts":1448357106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1448357112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sorry, by order I mean the order of fixing issues :)","msgtype":"m.text"},"ts":1448357114000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj, and tests? :)","msgtype":"m.text"},"ts":1448358414000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: for this attribute mess I was actually thinking I'd to it web-platform-tests style, yeah","msgtype":"m.text"},"ts":1448358525000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk, did location/workerlocation ever have searchparams?","msgtype":"m.text"},"ts":1448359653000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: not sure about WorkerLocation, but yes","msgtype":"m.text"},"ts":1448359689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: it's a security hole though","msgtype":"m.text"},"ts":1448359699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"All the more reason to add a test it's not supported, then :)","msgtype":"m.text"},"ts":1448359722000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk, r? https://github.com/w3c/web-platform-tests/pull/2371","msgtype":"m.text"},"ts":1448360940000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: worker.js is a convention for worker-only tests?","msgtype":"m.text"},"ts":1448361024000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, a bit more than that; it automatically sets up the main-thread side","msgtype":"m.text"},"ts":1448361069000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Like http://w3c-test.org/XMLHttpRequest/XMLHttpRequest-withCredentials.worker","msgtype":"m.text"},"ts":1448361096000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: neat","msgtype":"m.text"},"ts":1448361153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: r+","msgtype":"m.text"},"ts":1448361158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: is there a bug on the directory listing not supporting this feature?","msgtype":"m.text"},"ts":1448361180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1448361197000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'll file that","msgtype":"m.text"},"ts":1448361200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"thank you","msgtype":"m.text"},"ts":1448361204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: any ETA on https://github.com/whatwg/dom/pull/114?","msgtype":"m.text"},"ts":1448361356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: it's not a big deal since I assume all implementers are still aware, but it might become one","msgtype":"m.text"},"ts":1448361374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/w3c/wpt-tools/issues/42","msgtype":"m.text"},"ts":1448361457000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I was under the impression that it's still under active discussion regarding the best return values","msgtype":"m.text"},"ts":1448361459000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"but maybe I haven't throughly checked the latest news on that thread (been offline during WE and yesterday)","msgtype":"m.text"},"ts":1448361494000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'll go over all replies later today and align the PR accordingly","msgtype":"m.text"},"ts":1448361513000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: why is searchParams a security hole on location?","msgtype":"m.text"},"ts":1448361985000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: because Location can be seen cross-origin to some extent","msgtype":"m.text"},"ts":1448362166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: and is all kinds of complicated","msgtype":"m.text"},"ts":1448362174000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I see","msgtype":"m.text"},"ts":1448362184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: ta","msgtype":"m.text"},"ts":1448362187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: I don't understand your comment in https://github.com/whatwg/dom/issues/115 about losing order","msgtype":"m.text"},"ts":1448362286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: https://github.com/annevk/html-cross-origin-objects/ has some notes on defining Location more accurately","msgtype":"m.text"},"ts":1448362452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the problem is that it's an object and we don't want to figure out how to support it in a secure way, because location is complicated enough already?","msgtype":"m.text"},"ts":1448362555000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: it would basically amount to introducing a new kind of URLSearchParams that is safe","msgtype":"m.text"},"ts":1448362788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: commented again, does it make sense now?","msgtype":"m.text"},"ts":1448362808000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"zcorpan: at which point it seems better to just require var loc = new URL(location); /* manipulation here */ location = loc to do some manipulation","msgtype":"m.text"},"ts":1448362842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. thx","msgtype":"m.text"},"ts":1448362889000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"philipj: it seems with the getAttributeNamesNS API you wouldn't lose that, right?","msgtype":"m.text"},"ts":1448362894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, you mean that would return *all* the attributes?","msgtype":"m.text"},"ts":1448362983000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"I assumed you would split them into two buckets","msgtype":"m.text"},"ts":1448362991000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: the first would return all the qualified names","msgtype":"m.text"},"ts":1448363048000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: but yes, both would return all","msgtype":"m.text"},"ts":1448363059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: just like setAttribute / setAttributeNS also both operate on all","msgtype":"m.text"},"ts":1448363070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't the implementation avoid creating the Attrs if you only access the .name? or is that kind of lazy creation super-hard for some reason?","msgtype":"m.text"},"ts":1448363154000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Try to implement it in JavaScript and see how easy it is? :-) I'm sure that kind of thing can be done, the question I guess is how much complexity should we put in the engine when we can expose something that wasn't really well-exposed thus far that would avoid doing all that...","msgtype":"m.text"},"ts":1448363480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i wouldn't be surprised if Presto does something like this","msgtype":"m.text"},"ts":1448364118000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, what would you access the name on, then?","msgtype":"m.text"},"ts":1448364174000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or do you mean var name = element.attributes[0].name; would magically collapse to fetching the name from somewhere else, or something?","msgtype":"m.text"},"ts":1448364249000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: magic? proxy something? i dunno","msgtype":"m.text"},"ts":1448364266000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Sounds hard in SpiderMonkey, at least","msgtype":"m.text"},"ts":1448364296000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1448364309000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Why are we using a bash file instead of a Makefile for the building stuff?","msgtype":"m.text"},"ts":1448376380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Wow, talk about out of the frying pan and into the fire","msgtype":"m.text"},"ts":1448376516000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although the answer seems to be \"becase that's what Hixie did\"","msgtype":"m.text"},"ts":1448376602000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1448377474000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's what I thought.","msgtype":"m.text"},"ts":1448377479000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"There's just so many comments like \"We need to check if x file has changed before we avoid doing this\". Which is, well, what Make is great at.","msgtype":"m.text"},"ts":1448377509000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it's great for saving time if the compile times are significant","msgtype":"m.text"},"ts":1448378378000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which they're not in our case","msgtype":"m.text"},"ts":1448378387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so IMHO it'd be overkill to change it now","msgtype":"m.text"},"ts":1448378412000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though that said, myself I would have written it as a makefile to begin with","msgtype":"m.text"},"ts":1448378467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess one argument is that it's easy to write a makfile that's not portable","msgtype":"m.text"},"ts":1448378505000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or that at least will break on windows/dos","msgtype":"m.text"},"ts":1448378522000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, easy to accidentally write one that won't work on windows","msgtype":"m.text"},"ts":1448378552000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or won't work without GNU make","msgtype":"m.text"},"ts":1448378569000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"As opposed to bash? :)","msgtype":"m.text"},"ts":1448378596000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah, good point","msgtype":"m.text"},"ts":1448378609000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"It's also easy to write a write-only makefile","msgtype":"m.text"},"ts":1448378609000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1448378611000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: true that too","msgtype":"m.text"},"ts":1448378625000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, ain't broke don't fix it and all that","msgtype":"m.text"},"ts":1448378686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"aye","msgtype":"m.text"},"ts":1448378736000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"at least we're not at maven vs gradle vs sbt","msgtype":"m.text"},"ts":1448378744000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I do want to reach to a point where you can checkout the spec at a given revision and get the spec at that revision. With so many external deps, it can be hard to tell when things actually changed","msgtype":"m.text"},"ts":1448378772000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't really care about the caniuse and bugzilla stuff, I only mean the normative content","msgtype":"m.text"},"ts":1448378796000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Pretty sure the html spec doesn't do reproducible builds","msgtype":"m.text"},"ts":1448379294000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Neither does any other spec, of course","msgtype":"m.text"},"ts":1448379302000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Maybe WebIDL","msgtype":"m.text"},"ts":1448379312000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"only because of xspec xref though, right?","msgtype":"m.text"},"ts":1448379550000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Also bikeshed/anolis/... versions","msgtype":"m.text"},"ts":1448379684000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And obviously the datestamp, but let's ignore that","msgtype":"m.text"},"ts":1448379712000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"really the build tools don't change enough for that to really be relevant, IMO","msgtype":"m.text"},"ts":1448379748000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: Any chance https://code.google.com/p/chromium/issues/detail?id=393466 could get a little push? it'd be nice to drop the user-agent sniffing based polyfill we have for it now.","msgtype":"m.text"},"ts":1448399736000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: might have better luck in Mozilla IRC #accessibility; I hear that is where a11y browser engineers hang out","msgtype":"m.text"},"ts":1448403337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OK. Note though that despite its name, accesskeys are imho not an accessibility feature. More a power user feature. At least on Wikipedia it's historically been a feature much used, and never with javascript.","msgtype":"m.text"},"ts":1448403719000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"yeah that sounds about right","msgtype":"m.text"},"ts":1448403944000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Krinkle: sounds like a feature that will not be prioritized by a browser that is focused on mobile...","msgtype":"m.text"},"ts":1448404449000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It should be a simple patch though. And it's part of the DOM spec. These kind of random gaps make it suck to develop for the web.","msgtype":"m.text"},"ts":1448404514000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"or maybe we should remove it from the spec. But this cycle of things being added to the spec, one browser implementing it, and then usually years of silence and uncertainty of whether the rest is going to follow is just weird from an outsider perspective. This feature in particular is probably \"old enough\" that it \"would be done differently\" if it were","msgtype":"m.text"},"ts":1448404643000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"proposed today, but I really hope there is some kind of process by which vendors are involved earlier so that there's more ability to optimise for the future.","msgtype":"m.text"},"ts":1448404643000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: ever considered contributing to Chrome? :)","msgtype":"m.text"},"ts":1448404885000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I have. But I simply don't have the capacity to add that. I'm already working a full time job with lots of open-source activity outside of that.","msgtype":"m.text"},"ts":1448404944000,"senderName":"Krinkle","senderId":"Krinkle@irc"}
]