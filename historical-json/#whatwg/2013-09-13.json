[
{"content":{"body":"WHATWG has more followers than commits again","msgtype":"m.text"},"ts":1379058500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: fwiw, it's fine to call something delete()","msgtype":"m.text"},"ts":1379058844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"are css variables scoped to the stylesheet they're declared in?","msgtype":"m.text"},"ts":1379059429000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=23234 on the XMLHttpRequest issue you found btw","msgtype":"m.text"},"ts":1379063106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. didn't know whether it was intentional","msgtype":"m.text"},"ts":1379063141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hah, entire spec doesn't include the word \"scope\"","msgtype":"m.text"},"ts":1379063141000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it seems I expect HTML to take care of that, but parsing algorithm there doesn't actually return a Document or take a Document to modify","msgtype":"m.text"},"ts":1379063193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: which might be a bug in HTML...","msgtype":"m.text"},"ts":1379063201000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fantasai said they're scoped to all stylesheets that apply to a particular document, but are also scoped to elements, due to being defined as acting like normal properties that cascade and inherit","msgtype":"m.text"},"ts":1379063219000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"from reading the parsing algorithm, I find that the HTML parser never does any special conversion of U+000C, right?","msgtype":"m.text"},"ts":1379063333000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean as far as normalizing it into a newline or whatever","msgtype":"m.text"},"ts":1379063351000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: i think that's right","msgtype":"m.text"},"ts":1379063385000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK, thanks","msgtype":"m.text"},"ts":1379063416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the preprocessor doesn't do anything with it, the tokenizer lets it through","msgtype":"m.text"},"ts":1379063448000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1379063454000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I notice in contrast that the CSS Syntax spec requires CSS parsers to change it to newline","msgtype":"m.text"},"ts":1379063513000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-inbody inserts it","msgtype":"m.text"},"ts":1379063515000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1379063524000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"reads","msgtype":"m.emote"},"ts":1379063536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: so in CSS a newline isn't exposed in any way, so whether the preprocessor converts it or the the tokenizer handles it is purely an impl choice, and the spec picks one of them","msgtype":"m.text"},"ts":1379063803000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah, OK","msgtype":"m.text"},"ts":1379063832000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"makes sense","msgtype":"m.text"},"ts":1379063847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"I visited the top 10 websites according to https://en.wikipedia.org/wiki/List_of_most_popular_websites. For each page, if I could locate a searchbox, I typed \"cats\". I'm more of a dog person but we're trying to simulate a typical internet user.\"","msgtype":"m.text"},"ts":1379064156000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<3","msgtype":"m.text"},"ts":1379064179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1379064449000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1379064638000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: where's that quote from?","msgtype":"m.text"},"ts":1379065004000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: blink-dev","msgtype":"m.text"},"ts":1379065012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if searching for dogs breaks the web","msgtype":"m.emote"},"ts":1379065263000,"senderName":"darobin_","senderId":"darobin_@irc"},
{"content":{"body":"zcorpan: how do setProperty et al interact with shorthands?","msgtype":"m.text"},"ts":1379065369000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: I read my bug email, not planning on reopening for now as I don't have the info","msgtype":"m.text"},"ts":1379065445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: r? https://critic.hoppipolla.co.uk/r/309 https://github.com/w3c/web-platform-tests/pull/328","msgtype":"m.text"},"ts":1379065464000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Btw, I wrote up http://wiki.whatwg.org/wiki/Zip#URLs yesterday. I would appreciate some feedback as to what other topics are worthy of consideration given these alternatives.","msgtype":"m.text"},"ts":1379065507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: if I push the \"Prepare Rebase\" button at https://critic.hoppipolla.co.uk/r/308 does it do a squash first?","msgtype":"m.text"},"ts":1379065918000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm from reading https://critic.hoppipolla.co.uk/tutorial?item=rebase I guess not","msgtype":"m.text"},"ts":1379066059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: setProperty with a shorthand runs setProperty for each longhand with the appropriate value for each","msgtype":"m.text"},"ts":1379066141000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: internal algorithm or actually invokes?","msgtype":"m.text"},"ts":1379066272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: internal algorithm. \"When a method or an attribute is said to call another method or attribute, the user agent must invoke its internal API for that attribute or method so that e.g. the author can't change the behavior by overriding attributes or methods with custom properties or functions in ECMAScript.\"","msgtype":"m.text"},"ts":1379066344000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: i'll change the spec to separate the algorithms so this is clearer","msgtype":"m.text"},"ts":1379066365000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed a bug","msgtype":"m.text"},"ts":1379066450000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"krit: I can explain more here if you want, but it sounds like you got the model backwards","msgtype":"m.text"},"ts":1379071008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure, yes please do!","msgtype":"m.text"},"ts":1379071902000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: well, I guess I'd have to know what was unclear in my last email","msgtype":"m.text"},"ts":1379071934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, first when do you do fetching? From your last mail, it is just when you have external resources?","msgtype":"m.text"},"ts":1379071972000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"does anyone have a pointer to the spec that defines Navigation Controller, if it exists (publicly)?","msgtype":"m.text"},"ts":1379072038000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: there isn't one","msgtype":"m.text"},"ts":1379072070000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"ok, thanks","msgtype":"m.text"},"ts":1379072079000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: at least, not at w3c or whatwg","msgtype":"m.text"},"ts":1379072079000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"krit: fetching happens when the spec says to do fetching","msgtype":"m.text"},"ts":1379072082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: e.g. for <img> it happens when the element is inserted into the document","msgtype":"m.text"},"ts":1379072099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, sure. Fetch itself is passive and needs to be triggered","msgtype":"m.text"},"ts":1379072128000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: it's not really clear to me how the fragment stuff works in SVG, I'd have thought you'd know","msgtype":"m.text"},"ts":1379072161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: https://github.com/slightlyoff/EventWorker/","msgtype":"m.text"},"ts":1379072189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lets keep it at images first","msgtype":"m.text"},"ts":1379072192000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: You fetch an SVG. Fetching is invoked by <img> tag","msgtype":"m.text"},"ts":1379072217000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: this SVG has \"references\" to other images","msgtype":"m.text"},"ts":1379072241000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: that's kinda backwards thinking already","msgtype":"m.text"},"ts":1379072241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: you fetch something, turns out it's SVG","msgtype":"m.text"},"ts":1379072249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: is how it works","msgtype":"m.text"},"ts":1379072258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thx","msgtype":"m.text"},"ts":1379072260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: k","msgtype":"m.text"},"ts":1379072265000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you get SVG back so then the browser starts processing the SVG","msgtype":"m.text"},"ts":1379072306000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: So this SVG would be marked as SVG image (for instance by flagging). Not by Fetch, but byt the algorithm of <img>","msgtype":"m.text"},"ts":1379072313000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and this would happen after recognizing it is an image","msgtype":"m.text"},"ts":1379072326000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, I think that would be the way to do it","msgtype":"m.text"},"ts":1379072326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k. So this SVG document has a flag now that it should not load further images","msgtype":"m.text"},"ts":1379072369000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you get a resource back, check if the MIME type is \"image/svg+xml\", then if it is you pass it to the SVG subsystem with an \"image mode\" flag which hands you back pixels","msgtype":"m.text"},"ts":1379072372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes. Getting into what SVG image does internally now","msgtype":"m.text"},"ts":1379072402000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Internally it is still an Document, which just happens to return pixels","msgtype":"m.text"},"ts":1379072427000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and this document is marked as \"image mode\"","msgtype":"m.text"},"ts":1379072437000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so the SVG processing model needs to account for this \"image mode\" flag, e.g. it does not execute script, does not iterate its event loop, does not fetch resources","msgtype":"m.text"},"ts":1379072456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I agree","msgtype":"m.text"},"ts":1379072470000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: now we have an SVG <image> element inside this \"image\" makred SVG document","msgtype":"m.text"},"ts":1379072486000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: <image> now needs to check this flag","msgtype":"m.text"},"ts":1379072501000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it is \"image\" mode, so we have a restriction on fetching","msgtype":"m.text"},"ts":1379072520000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: now the URL needs to be parsed","msgtype":"m.text"},"ts":1379072536000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and it happens to be an http URL","msgtype":"m.text"},"ts":1379072556000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: in this case SVG needs to specify that we get a network error, right?","msgtype":"m.text"},"ts":1379072578000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, I imagine SVG would define \"SVG fetch\"","msgtype":"m.text"},"ts":1379072596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: lets come back to SVG fetch after understanding the concept… because if you don't write the spec for it it is sadly me :D","msgtype":"m.text"},"ts":1379072631000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"which has these steps: 1. If mode is \"document mode\", return the result of fetch with the same arguments. 2. Magic.","msgtype":"m.text"},"ts":1379072654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exactly step 2: magic...","msgtype":"m.text"},"ts":1379072679000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: network error on htttp requests","msgtype":"m.text"},"ts":1379072691000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: is that about right?","msgtype":"m.text"},"ts":1379072697000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"(so far)","msgtype":"m.text"},"ts":1379072701000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Well, I guess the interesting case is fragment identifiers when there's no <base> getting in the way.","msgtype":"m.text"},"ts":1379072727000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah right, first we need to resolve the absolute URL, right?","msgtype":"m.text"},"ts":1379072766000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Apart from the fragment identifer case. Step 2 would be to termine if URL's scheme is not \"about\" or \"data\".","msgtype":"m.text"},"ts":1379072780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so if http request, create absolute URL","msgtype":"m.text"},"ts":1379072782000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Parsing the URL happens before Fetch.","msgtype":"m.text"},"ts":1379072795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, ok","msgtype":"m.text"},"ts":1379072804000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so lets exclude blob for now, we just have about, data and http ?","msgtype":"m.text"},"ts":1379072848000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: or better, just allow these three and reject all others.","msgtype":"m.text"},"ts":1379072872000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: there's also file and ftp","msgtype":"m.text"},"ts":1379072877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: why would you allow http?","msgtype":"m.text"},"ts":1379072895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: I thought the whole point was to not have network requests?","msgtype":"m.text"},"ts":1379072904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, you already do special casing during parsing?","msgtype":"m.text"},"ts":1379072934000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so you do not transform all URLs to absolute URLs?","msgtype":"m.text"},"ts":1379072946000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yes you do","msgtype":"m.text"},"ts":1379072957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: means you really check for about, data, or #","msgtype":"m.text"},"ts":1379072967000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and reject everything else","msgtype":"m.text"},"ts":1379072974000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I am not sure how useful \"about\" is, but I'll keep that in mind for later. Lets concentrate on the later two","msgtype":"m.text"},"ts":1379073031000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Okay. So I need to know if the fragment case roundtrips through the network layer or not.","msgtype":"m.text"},"ts":1379073035000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: # (if not resolved to absolute URL which would make sense in this case) should not go through the network layer","msgtype":"m.text"},"ts":1379073081000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: at least it doesn't in implementations","msgtype":"m.text"},"ts":1379073089000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I suspect this would be a better setup: 1. Parse /input/ against /base/ into /url/. 2. If /url/ has same-document fragments, deal. 3. Otherwise, SVG fetch /url/","msgtype":"m.text"},"ts":1379073099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: clarification, it doesn't for WebKit and Blink","msgtype":"m.text"},"ts":1379073109000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm surprised SVG gets away with not defining critical infrastructure like this.","msgtype":"m.text"},"ts":1379073132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But I shouldn't be","msgtype":"m.text"},"ts":1379073137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ancil: as a general setup, ok makes sense","msgtype":"m.text"},"ts":1379073138000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Back in an hour or so, lunch!","msgtype":"m.text"},"ts":1379073159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no you shouldn't be. I think we rely that IRI specifies it for us","msgtype":"m.text"},"ts":1379073162000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: k","msgtype":"m.text"},"ts":1379073167000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"No it doesn't","msgtype":"m.text"},"ts":1379073173000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1379073177000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"wonders if simply mentioning widgets counts as trolling","msgtype":"m.emote"},"ts":1379075083000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: No, css custom properties are properties.  They scope exactly the same way that any other property does.","msgtype":"m.text"},"ts":1379075595000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That is, not at all.)","msgtype":"m.text"},"ts":1379075647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(scoped stylesheets dont' scope properties, they scope selectors)","msgtype":"m.text"},"ts":1379075656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"krit: FWIW, IRI (which is obsolete these days) defines no more than URL, i.e. parsing of a string","msgtype":"m.text"},"ts":1379075968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I checked, So we define that certain attributes take an IRI (RFC3987) or an FuncIRI (special case of IRI) for many element xlink:href is referenced","msgtype":"m.text"},"ts":1379076169000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: couldn't find another reference yet","msgtype":"m.text"},"ts":1379076187000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, that's about the level of detail I would expect, which is to say nothing at all","msgtype":"m.text"},"ts":1379076217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to come back to your parsing, you have 1. Parse /input/ against /base/ into /url/","msgtype":"m.text"},"ts":1379076389000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: is that something that can be referenced?","msgtype":"m.text"},"ts":1379076401000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: is it in url.spec.whatwg.org?","msgtype":"m.text"},"ts":1379076413000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: http://url.spec.whatwg.org/#concept-url-parser","msgtype":"m.text"},"ts":1379076532000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: k, SVG fetch: /data/","msgtype":"m.text"},"ts":1379076640000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you fetch a URL, it returns data","msgtype":"m.text"},"ts":1379076674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, and from here it can be recursive…. if the data is an SVG interpreted as image, I set the \"image\" mode. This again just allows the current algorihtm on parsing and possibly fetching","msgtype":"m.text"},"ts":1379076865000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Now the case we do not have a dataURL and not a fragment in the same document","msgtype":"m.text"},"ts":1379076976000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: in this case we do not fetch","msgtype":"m.text"},"ts":1379076987000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: are you talking about <svg:image> referencing a data URL or some such?","msgtype":"m.text"},"ts":1379076990000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1379076998000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: it's not really recursive, for <svg:image> you need to define what to do with the returned data, and I suppose you might want to vary that based on the \"image mode\"","msgtype":"m.text"},"ts":1379077034000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: try to think specs the same way the code works; you need the same abstractions and concepts","msgtype":"m.text"},"ts":1379077091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am usually working on CSS, if you are not defining the Syntax, then you possibly justw want to specify the behavior, not the implementation :P","msgtype":"m.text"},"ts":1379077218000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: but I get your point","msgtype":"m.text"},"ts":1379077225000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: CSS has lot of these issues actually","msgtype":"m.text"},"ts":1379077263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: maybe it's epidemic","msgtype":"m.text"},"ts":1379077275000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hehe, possibly :)","msgtype":"m.text"},"ts":1379077314000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"(Though TabAtkins seems to fix it up, bit by bit.)","msgtype":"m.text"},"ts":1379077333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thank you very much for your help so far. I'll work on the draft next week and will definitely poke you a lot then ;)","msgtype":"m.text"},"ts":1379077348000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: yeah, Tab is fixing the web :)","msgtype":"m.text"},"ts":1379077369000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no worries, I'll be in Boston next week for TC39, so times will be a bit different","msgtype":"m.text"},"ts":1379077385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am back in europe. So no improvement :)","msgtype":"m.text"},"ts":1379077412000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you stay in France for a bit after the CSS WG? I thought you were based in SF for some reason...","msgtype":"m.text"},"ts":1379077464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not based in SF anymore. Working from Germany now","msgtype":"m.text"},"ts":1379077494000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: still working for the same team, just remotely :)","msgtype":"m.text"},"ts":1379077507000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Ah I see, nice","msgtype":"m.text"},"ts":1379077515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So, did anyone take a look at this yet:","msgtype":"m.text"},"ts":1379081444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://wiki.whatwg.org/wiki/Zip#URLs","msgtype":"m.text"},"ts":1379081445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think zip-path is a clear winner. Incidentally I also once again had to became wiki-syntax master :/","msgtype":"m.text"},"ts":1379081490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Have any guidance over what kinds of switches we would need to expose in a CSS \"fetch(<url-string> <stuff-goes-here>)\" function?","msgtype":"m.text"},"ts":1379081633000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think that depends on how you solve that SVG thing I discussed a while back with roc and I think krit too","msgtype":"m.text"},"ts":1379081689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, so I'll need to read that.  Too many interesting discussion that happen while I'm minuting. :/","msgtype":"m.text"},"ts":1379081712000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: http://lists.w3.org/Archives/Public/public-fx/2013AprJun/thread.html#msg17","msgtype":"m.text"},"ts":1379081722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: I think you want a way to opt into CORS, a way to opt out of credentials, and maybe a way to opt into CORS and credentials, not sure about this one (by default if someone opts into CORS you want him to opt out of credentials)","msgtype":"m.text"},"ts":1379081896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: but that above discussion is relevant, @font-face already opts into CORS so doesn't need this (other than maybe opting out of same-origin credentials)","msgtype":"m.text"},"ts":1379081971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Wouldn't it be enough to have the same values as the crossorigin attribute on <img>? Or should it be more detailed?","msgtype":"m.text"},"ts":1379082394000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, kinda depends on the use cases you have","msgtype":"m.text"},"ts":1379082422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably","msgtype":"m.text"},"ts":1379082434000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: people have been asking about ways to opt out of credentials also for normal requests though","msgtype":"m.text"},"ts":1379082458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: it seems there's a few constructs in CSS where it would've been good to always do CORS, but e.g. for background-image I don't really know what the benefit would be","msgtype":"m.text"},"ts":1379082495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: well, maybe once we have that drawElement() API, then background-image would taint stuff cross-origin I suppose","msgtype":"m.text"},"ts":1379082535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there a test suite for css3-values?","msgtype":"m.text"},"ts":1379082864000,"senderName":"espadrine","senderId":"espadrine@irc"},
{"content":{"body":"annevk: with drawElement() you mean element() ?","msgtype":"m.text"},"ts":1379082873000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no I meant for <canvas>","msgtype":"m.text"},"ts":1379082937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: don't think element() is a problem as it doesn't allow for reading","msgtype":"m.text"},"ts":1379082966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, you want to draw an abritary element to a canvas?","msgtype":"m.text"},"ts":1379082967000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: then you would need to taint the canvas","msgtype":"m.text"},"ts":1379082991000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I don't really, but there've been requests, Gecko supports drawing a document's canvas on a <canvas> etc.","msgtype":"m.text"},"ts":1379082998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but I suppose that is why you want CORS","msgtype":"m.text"},"ts":1379083002000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"what do you mean with document's canvas on a <canvas> ?","msgtype":"m.text"},"ts":1379083027000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: oh, you mean the whole surface","msgtype":"m.text"},"ts":1379083046000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Gecko supports that?","msgtype":"m.text"},"ts":1379083057000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: for extensions only","msgtype":"m.text"},"ts":1379083101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1379083124000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Blink supports drawing ot SVG onto a canvas without tainting","msgtype":"m.text"},"ts":1379083146000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: but yeah, otherwise I'm not sure what the point is to have fetch() for background-image, it seems that thread I referenced from public-fx has the only use case for it thus far","msgtype":"m.text"},"ts":1379083153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: yeah, that mostly requires SVG to define when it's clean and such","msgtype":"m.text"},"ts":1379083181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I think so.","msgtype":"m.text"},"ts":1379083182000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"(plus the places that do \"fetch()\" implicitly already, such as @font-face)","msgtype":"m.text"},"ts":1379083209000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, this is one reason I asked you all these questions. It must be defined for SVG now","msgtype":"m.text"},"ts":1379083213000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1379083226000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"Yeah, drawImage(SVGElement) would be nice","msgtype":"m.text"},"ts":1379083241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, SVGSvgElement I suppose","msgtype":"m.text"},"ts":1379083248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: at the moment it is a whole SVG document that you need to load with ImageElement","msgtype":"m.text"},"ts":1379083278000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: but there have been discussion about SVG subtrees","msgtype":"m.text"},"ts":1379083294000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: but it was easier to estimate security concerns for the  former","msgtype":"m.text"},"ts":1379083337000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/concerns/requirements.","msgtype":"m.text"},"ts":1379083351000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"actually, drawImage(SVGElement) would be nice","msgtype":"m.text"},"ts":1379083370000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"either infer the context from its parent <svg>, or maybe use the canvas to set up a viewport","msgtype":"m.text"},"ts":1379083390000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"dbaron: right. But IIRC we still had some issues we need to work on. But am not sure anymore.","msgtype":"m.text"},"ts":1379083421000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"darobin: —^ :)","msgtype":"m.text"},"ts":1379083446000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah I figured :)","msgtype":"m.text"},"ts":1379083451000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"krit: well yeah, the former is \"image mode\" which is already locked down","msgtype":"m.text"},"ts":1379084389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"checks \"meet ms2ger irl\" off of the todo list","msgtype":"m.emote"},"ts":1379084486000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"annevk: was still a chalange :)","msgtype":"m.text"},"ts":1379084493000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hober: Any resemblance? http://en.wikipedia.org/wiki/Krang","msgtype":"m.text"},"ts":1379084572000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"annevk: the problem is maybe that there is a spec missing explaining how to do it. So you end up in traps that are easier to find if you already have some text","msgtype":"m.text"},"ts":1379084637000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah, SVG/CSS is pretty poor processing model wise :/","msgtype":"m.text"},"ts":1379084734000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wilhelm_: wow, that's eerily close :)","msgtype":"m.text"},"ts":1379084746000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I can at least cross \"saw ms2ger from a distance\" off the list.","msgtype":"m.text"},"ts":1379085986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: in Paris?","msgtype":"m.text"},"ts":1379086000000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: ...somewhere.","msgtype":"m.text"},"ts":1379086015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: c'mon","msgtype":"m.text"},"ts":1379086030000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Seems Hallvord dropped some initials since he joined us.","msgtype":"m.text"},"ts":1379086458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: https://gist.github.com/bkardell/6552215","msgtype":"m.text"},"ts":1379087296000,"senderName":"bkardell__","senderId":"bkardell__@irc"},
{"content":{"body":"says listing in network and cache sections prevents cache...","msgtype":"m.text"},"ts":1379087337000,"senderName":"bkardell__","senderId":"bkardell__@irc"},
{"content":{"body":"is that at odds with what I (think) you said yesterday?","msgtype":"m.text"},"ts":1379087353000,"senderName":"bkardell__","senderId":"bkardell__@irc"},
{"content":{"body":"sent something to the dev tools team for clarification, but... it's confusing","msgtype":"m.text"},"ts":1379087480000,"senderName":"bkardell__","senderId":"bkardell__@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1379087919000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Hixie_: nm, seems to actually *do* as you described despite validator - still not my problem yet :-\\","msgtype":"m.text"},"ts":1379087982000,"senderName":"bkardell__","senderId":"bkardell__@irc"},
{"content":{"body":"Good evening, dglazkov!","msgtype":"m.text"},"ts":1379088077000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie_: I emailed es-discuss long about the global this / global object mismatch, I filed https://bugs.ecmascript.org/show_bug.cgi?id=1898 now so it's actually tracked","msgtype":"m.text"},"ts":1379092876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: fwiw, it'll be fixed, just unclear what timeframe...","msgtype":"m.text"},"ts":1379092904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"abusing WebRTC to read local IPs: https://dl.dropboxusercontent.com/u/1878671/enumhosts.html TIL HTML5 has a built-in `nmap`","msgtype":"m.text"},"ts":1379092943000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: oh, excellent, thanks","msgtype":"m.text"},"ts":1379093007000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"matjas: :/","msgtype":"m.text"},"ts":1379093019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you can do an intranet scan using <img> and <meta refresh>, that's not new","msgtype":"m.text"},"ts":1379093060000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"getting the local IP is new, but that's something that's pretty much a prereq of doing NAT traversal, as i understand it","msgtype":"m.text"},"ts":1379093087000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I wonder if you could measure the response time accurately enough to distinguish the local ip in an <img> portscan","msgtype":"m.text"},"ts":1379094347000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"rillian: the problem is more that you don't know where to start","msgtype":"m.text"},"ts":1379096251000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i've been working on implementing the processing model of WebVTT and it seems to me like the positioning for alignments is reversed, has anyone else encountered this as well?","msgtype":"m.text"},"ts":1379096522000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"i need a sanity check","msgtype":"m.text"},"ts":1379096527000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"there's a bug open on it","msgtype":"m.text"},"ts":1379096836000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i think nessy has a plan for it","msgtype":"m.text"},"ts":1379096848000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"check the VTT bugs","msgtype":"m.text"},"ts":1379096851000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"reyre: the wiki points to https://dvcs.w3.org/hg/text-tracks/ for the webvtt spec","msgtype":"m.text"},"ts":1379096855000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"Hixie_: okay thanks","msgtype":"m.text"},"ts":1379096856000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"last change Aug 12","msgtype":"m.text"},"ts":1379096870000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"bookmarking it","msgtype":"m.emote"},"ts":1379096890000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"thanks rillian","msgtype":"m.text"},"ts":1379096892000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"oh, there's a link at the top of http://dev.w3.org/html5/webvtt/","msgtype":"m.text"},"ts":1379096910000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"duh","msgtype":"m.text"},"ts":1379096911000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"just truncate the url to get the hg repo","msgtype":"m.text"},"ts":1379096920000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"oh no, there's not multiple copies of this now are there? sigh","msgtype":"m.text"},"ts":1379096952000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: yeah :/","msgtype":"m.text"},"ts":1379097108000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"not a living document","msgtype":"m.text"},"ts":1379097129000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"reyre: the repo has no useful history on the overscan line","msgtype":"m.text"},"ts":1379097242000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"maybe look in the whatwg repo","msgtype":"m.text"},"ts":1379097264000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"rillian: okay sounds good","msgtype":"m.text"},"ts":1379097279000,"senderName":"reyre","senderId":"reyre@irc"},
{"content":{"body":"matjas: local people no involved with webrtc were appropriately appalled by your link","msgtype":"m.text"},"ts":1379097399000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=23240: \"browsers do lots of bizarre things here, so let's just spec the nice simple thing\"","msgtype":"m.text"},"ts":1379099713000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"UI events :/","msgtype":"m.text"},"ts":1379100618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wish someone would just step up and fix them","msgtype":"m.text"},"ts":1379100637000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"dear google: i searched for OOM, not \"zoom\", thanks anyway","msgtype":"m.text"},"ts":1379100954000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: i thought the dom3 events guys were doing that, aren't they?","msgtype":"m.text"},"ts":1379103988000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Hixie_: I don't see anything in terms of hit testing, defining the model, defining things in terms of tasks, etc.","msgtype":"m.text"},"ts":1379104078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie_: it's mostly still the old Events spec afaict, nothing \"new-style\"","msgtype":"m.text"},"ts":1379104100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, i think GPHemsley filed bugs about this","msgtype":"m.text"},"ts":1379104243000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"is there a way to make an element with a semi-transparent background blur the stuff it overlaps?","msgtype":"m.text"},"ts":1379114229000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"aero-style? or mac menu style?","msgtype":"m.text"},"ts":1379114236000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"you can do that with css filters, i think","msgtype":"m.text"},"ts":1379114334000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"iirc it's catastrophically slow in some implementations (not all are hardware-accelerated)","msgtype":"m.text"},"ts":1379114387000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"doesn't 'filter' apply to the element itself, rather than its background?","msgtype":"m.text"},"ts":1379114691000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or i should say, rather than what is behind it","msgtype":"m.text"},"ts":1379114762000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"not its background in a CSS sense","msgtype":"m.text"},"ts":1379114765000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"cabanier: ping","msgtype":"m.text"},"ts":1379114974000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"hmm true","msgtype":"m.text"},"ts":1379115291000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie_: you'd have to hack it I think. css filters blur before compositing","msgtype":"m.text"},"ts":1379115376000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"wonder how that could be done in general ... first thought is a way to create an element whose contents is whatever's composited underneath it, but alpha would break that","msgtype":"m.text"},"ts":1379115376000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"http://jsfiddle.net/3asZC/539/","msgtype":"m.text"},"ts":1379115384000,"senderName":"rillian","senderId":"rillian@irc"},
{"content":{"body":"doesn't seem to affect the backdrop...","msgtype":"m.text"},"ts":1379115444000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"unless it's just a flat, completely precomposited copy of whatever's under it (thus with no transparency)","msgtype":"m.text"},"ts":1379115463000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"personally there are few things in UIs i hate more than blurring (hurts my eyes), so I'm okay with it being hard to do :)","msgtype":"m.text"},"ts":1379115546000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mac menus use it to good effect","msgtype":"m.text"},"ts":1379115683000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"i don't remember it (and don't see it on my mbp), maybe I turned it off somewhere","msgtype":"m.text"},"ts":1379115709000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"look through a context menu","msgtype":"m.text"},"ts":1379115755000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"or a top-level menu from the menu bar","msgtype":"m.text"},"ts":1379115778000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"it's extremely subtle","msgtype":"m.text"},"ts":1379115781000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"bbl","msgtype":"m.text"},"ts":1379115788000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1379115825000,"senderName":"zewt","senderId":"zewt@irc"}
]