[
{"content":{"body":"Hixie: any comment on https://bugs.webkit.org/show_bug.cgi?id=26925 ? I'm going to fix it soon, if it's ok spec-wise","msgtype":"m.text"},"ts":1247529660000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"ap: commented. btw can you fix http://www.hixie.ch/tests/adhoc/html/offline/004.html also?","msgtype":"m.text"},"ts":1247530500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what's the problem with that one? I don't see a distinctive FAIL in Safari 4.0.1 on Mac","msgtype":"m.text"},"ts":1247530620000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"Hixie: btw, the question was not about parsing manifests","msgtype":"m.text"},"ts":1247530621000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"if you open it three time, it'll fail in one of the windows","msgtype":"m.text"},"ts":1247530622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: e.g. you go to http://server/app.html#foo, and then to http://server/app.html#bar","msgtype":"m.text"},"ts":1247530623000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1247530680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1247530681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: alternatively, you can have manifest#foo in manifest attribute","msgtype":"m.text"},"ts":1247530682000,"senderName":"ap","senderId":"ap@irc"},
{"content":{"body":"yeah that's a bug, drop an e-mail? it can just be a link to the bug","msgtype":"m.text"},"ts":1247530683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aloha, is there a simple way to replace html entities with html5lib in python?","msgtype":"m.text"},"ts":1247530800000,"senderName":"StationsPatient","senderId":"StationsPatient@irc"},
{"content":{"body":"i swear half the people in the acknowledgements are there because they pointed out that i'd misspelt occurred.","msgtype":"m.text"},"ts":1247535900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how embarassing","msgtype":"m.text"},"ts":1247535901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you should color-code the acknowledgements and do the tag-cloud thing with names in various point sizes","msgtype":"m.text"},"ts":1247536440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or even different fonts","msgtype":"m.text"},"ts":1247536441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"comic sans, etc.","msgtype":"m.text"},"ts":1247536442000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1247536443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1247536620000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"anybody know if gecko has a Server-Sent Events implementation?","msgtype":"m.text"},"ts":1247537460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"finds https://bugzilla.mozilla.org/show_bug.cgi?id=338583","msgtype":"m.emote"},"ts":1247537580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heycam: yt?","msgtype":"m.text"},"ts":1247537581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yep","msgtype":"m.text"},"ts":1247537582000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: http://dev.w3.org/2006/webapi/WebIDL/#es-unsigned-long","msgtype":"m.text"},"ts":1247537583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: do you know of any way to prove that implementations are actually using ToUint32() here?","msgtype":"m.text"},"ts":1247537584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rather than ToInt32() followed by clamping?","msgtype":"m.text"},"ts":1247537585000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"notices Wellington Fernando de Macedo is same developer who's working on the WebSocket implementation","msgtype":"m.emote"},"ts":1247537640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"clamping how","msgtype":"m.text"},"ts":1247537641000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"setting any value < 0 to 0 or something","msgtype":"m.text"},"ts":1247537642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm trying to work out which attributes are _really_ long and which are _really_ unsigned long","msgtype":"m.text"},"ts":1247537643000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"apart from testing each one individually to see what happens when you assign or call with a negative number...","msgtype":"m.text"},"ts":1247537700000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i guess for some it's not going to be possible to tell","msgtype":"m.text"},"ts":1247537760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so, if they really do use ToUint32(), and i set them to -1, their value should be some non-zero positive number right?","msgtype":"m.text"},"ts":1247537880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1247537881000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"2**32 - 1 i think","msgtype":"m.text"},"ts":1247537882000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hard ones to test would be e.g. HTMLOptionsCollection.length","msgtype":"m.text"},"ts":1247537940000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"you're likely to run in to memory limits i'd guess","msgtype":"m.text"},"ts":1247537941000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"holy crap, found one -- safari <input size> really works like that","msgtype":"m.text"},"ts":1247538120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tries IE","msgtype":"m.emote"},"ts":1247538121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting, IE throws an exception for numbers < 0","msgtype":"m.text"},"ts":1247538360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or ignores it","msgtype":"m.text"},"ts":1247538361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry, clamps, not ignores","msgtype":"m.text"},"ts":1247538420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: how would you feel about changing that algorithm to use ToInt32() and then convert numbers less than 0 to 0 instead of using TUint32?","msgtype":"m.text"},"ts":1247538421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you can show that that's the common behaviour, sure","msgtype":"m.text"},"ts":1247538480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think i wrote it that way for consistency with how unsigned integers are handled by ES built in functions, can't remember if i did any/much testing","msgtype":"m.text"},"ts":1247538481000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1247538720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"will write tests","msgtype":"m.text"},"ts":1247538721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1247538960000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie, heycam: what we do in many places is convert ToInteger() (to get an integral floating point number) and then filter out NaN and out of range values","msgtype":"m.text"},"ts":1247539140000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it would be nice if the conversion behaviour were consistent across all uses of unsigned long / unsigned short","msgtype":"m.text"},"ts":1247539260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"othermaciej, do you know if different conversion behaviours for different attributes/operations is needed for compatibility?","msgtype":"m.text"},"ts":1247539261000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: no idea, we never thoroughly researched this","msgtype":"m.text"},"ts":1247539262000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess I'm wrong, it looks like we use toInt32 for everything, which seems wrong to me","msgtype":"m.text"},"ts":1247539500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so infinity/nans get treated as 0","msgtype":"m.text"},"ts":1247539620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1247539621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: http://www.hixie.ch/tests/adhoc/dom/webidl/attributes/001.html","msgtype":"m.text"},"ts":1247539920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1247540100000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so did you find any impls that do ToUint32?","msgtype":"m.text"},"ts":1247540101000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"webkit for <input size>","msgtype":"m.text"},"ts":1247540102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's it","msgtype":"m.text"},"ts":1247540103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"however, they all do random other things","msgtype":"m.text"},"ts":1247540160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's no consistency that i've found","msgtype":"m.text"},"ts":1247540161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder what it's like for methods that take unsigned longs","msgtype":"m.text"},"ts":1247540162000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"there might be more consistency there","msgtype":"m.text"},"ts":1247540163000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well so it turns out that html5 is all self-contradictory about 'long' attributes ","msgtype":"m.text"},"ts":1247540220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is why i'm worried about those","msgtype":"m.text"},"ts":1247540221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. it says various contradictory things about what reflects what","msgtype":"m.text"},"ts":1247540222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in terms of whether the reflected properties should clamp or whatever?","msgtype":"m.text"},"ts":1247540280000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think i may convert everything to signed longs","msgtype":"m.text"},"ts":1247540281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1247540282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it also contradicts itself on how to parse some of the attributes","msgtype":"m.text"},"ts":1247540283000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least if they're signed longs then you can define the conversion for negative values","msgtype":"m.text"},"ts":1247540340000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(if you don't care about values >= 2**31)","msgtype":"m.text"},"ts":1247540341000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1247540400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"otoh unsigned longs seem \"nicer\" in some way","msgtype":"m.text"},"ts":1247540460000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"in that it would better describe the set of allowed values","msgtype":"m.text"},"ts":1247540461000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1247540462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's safe to make all of these convert in the same way, then i'd rather they be unsigned long and to define the conversion in webidl to be whatever way is decided","msgtype":"m.text"},"ts":1247540520000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that is definitely ok by me","msgtype":"m.text"},"ts":1247540521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the \"if it's safe\" i don't know about.  if they're all doing random other things...","msgtype":"m.text"},"ts":1247540522000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i think something other than ToUint32 would be good","msgtype":"m.text"},"ts":1247540580000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"since it's not exactly intuitive","msgtype":"m.text"},"ts":1247540581000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well right now IE either throws or clamps to zero","msgtype":"m.text"},"ts":1247540582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i vote for \"clamps to zero\"","msgtype":"m.text"},"ts":1247540583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and how about for NaN, Infinity, non-Numbers?","msgtype":"m.text"},"ts":1247540584000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and non-integer numbers","msgtype":"m.text"},"ts":1247540640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ToInt32() then clamp to zero","msgtype":"m.text"},"ts":1247540641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they do all do TInt32() first when they don't throw","msgtype":"m.text"},"ts":1247540642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok.  so we'll never care about values >= 2**31?","msgtype":"m.text"},"ts":1247540700000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"not for these i don't think","msgtype":"m.text"},"ts":1247540701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i haven't tested if they handle big values","msgtype":"m.text"},"ts":1247540702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but we can always do a TInt64 then clamp on both ends if necessary","msgtype":"m.text"},"ts":1247540760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ToInt64","msgtype":"m.text"},"ts":1247540761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"testing for big values would be good","msgtype":"m.text"},"ts":1247540762000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if it doesn't break the test","msgtype":"m.text"},"ts":1247540763000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"http://www.hixie.ch/tests/adhoc/dom/webidl/attributes/002.html","msgtype":"m.text"},"ts":1247541420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"results are all over the place","msgtype":"m.text"},"ts":1247541421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's a \"defaults to zero\" that should be \"defaults to one\" in the script","msgtype":"m.text"},"ts":1247541480000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if they're all over the place, i would like \"supports big numbers\" to be the one we choose","msgtype":"m.text"},"ts":1247541540000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"fine by me","msgtype":"m.text"},"ts":1247541600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what does \"supports big numbers\" mean?","msgtype":"m.text"},"ts":1247541720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"bigger than 32-bit?","msgtype":"m.text"},"ts":1247541721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"bigger than 31-bit","msgtype":"m.text"},"ts":1247541722000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well, numbers that are in an unsigned 32-bit int that aren't in a signed one","msgtype":"m.text"},"ts":1247541723000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so it means \"unsigned 32-bit\" then?","msgtype":"m.text"},"ts":1247541780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it means that the conversion from Number doesn't clamp past 2**31","msgtype":"m.text"},"ts":1247541781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(test 002 isn't testing signed vs unsigned)","msgtype":"m.text"},"ts":1247541840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(test 001 does that)","msgtype":"m.text"},"ts":1247541841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: do you want mail on this?","msgtype":"m.text"},"ts":1247541842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yep that'd be good thanks","msgtype":"m.text"},"ts":1247541900000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"do you have a test for whether conversion clamps at 2^32?","msgtype":"m.text"},"ts":1247541901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no, but i'll add one","msgtype":"m.text"},"ts":1247541902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(also, I should add, a possible weird browser behavior is to wrap around instead of clamping at whatever the limit is; hopefully no browser actually does that)","msgtype":"m.text"},"ts":1247541903000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh some do","msgtype":"m.text"},"ts":1247541960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one also just converts 4294967290 to -2**31","msgtype":"m.text"},"ts":1247541961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in certain cases","msgtype":"m.text"},"ts":1247541962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the wrapping around is what is in webidl currently :)","msgtype":"m.text"},"ts":1247542080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"due to the use of ToUint32","msgtype":"m.text"},"ts":1247542081000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ToInt32 would do that too, mind","msgtype":"m.text"},"ts":1247542082000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"most browsers wrap around due to the use of ToInt32() at least in some cases","msgtype":"m.text"},"ts":1247542200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webkit does it the most","msgtype":"m.text"},"ts":1247542201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok nobody seems to support >2**32","msgtype":"m.text"},"ts":1247542260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, at one point for WebKit we had the idea of using a different, non-wrapping conversion for signed values","msgtype":"m.text"},"ts":1247542320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or for unsigned, whatever","msgtype":"m.text"},"ts":1247542321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"IE is strangely inconsistent on this","msgtype":"m.text"},"ts":1247542322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like they have different code for each attribute","msgtype":"m.text"},"ts":1247542323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it gets copied and pasted around with different changes accumulating","msgtype":"m.text"},"ts":1247542324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"basically round the floating point double to the nearest integer (in the mathematical sense, not necessarily machine int), then clamp to boundaries and clean up non-finite values, then convert to appropriate machine type","msgtype":"m.text"},"ts":1247542380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that seems like what webidl should say, imho","msgtype":"m.text"},"ts":1247542440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would cleaning up non-finite values be setting to 0?  or, say, make +Infinity into the largest value in the set?","msgtype":"m.text"},"ts":1247542500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"actually it should probably truncate or floor rather than round to nearest","msgtype":"m.text"},"ts":1247542501000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but you get the idea","msgtype":"m.text"},"ts":1247542502000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I would guess NaN should go to 0 and +/- Infinity to min/max values in the range","msgtype":"m.text"},"ts":1247542560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"brb lunch","msgtype":"m.emote"},"ts":1247542620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"that sounds reasonable btw","msgtype":"m.text"},"ts":1247542621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sent mail","msgtype":"m.text"},"ts":1247542680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is anything being done about javascript's inability to round?","msgtype":"m.text"},"ts":1247543460000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"inability to round?","msgtype":"m.text"},"ts":1247543580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean the way it doesn't follow IEEE rules for rounding?","msgtype":"m.text"},"ts":1247543640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when trying to round to particular significant digits (like $4,308,543.23, or such), you sometimes get rounding errors","msgtype":"m.text"},"ts":1247543641000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"you mean using toFixed()? or something else...?","msgtype":"m.text"},"ts":1247543700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I should come up with a specific example... I kept running into it when I was doing financial planning software, a while back... I will need to look back at my notes before I can speak intelligently on it","msgtype":"m.text"},"ts":1247543760000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1247543761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh you might mean the normal base-2 behaviour of floats","msgtype":"m.text"},"ts":1247543762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course, there are several IEEE rounding rules","msgtype":"m.text"},"ts":1247543763000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"Hixie: I might mean that, I'll have to figure out what you mean :)","msgtype":"m.text"},"ts":1247543820000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"reads http://en.wikipedia.org/wiki/Floating_point","msgtype":"m.emote"},"ts":1247543940000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"http://stackoverflow.com/questions/273371/real-vs-floating-point-vs-money","msgtype":"m.text"},"ts":1247543941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the ES group was looking at fixing that","msgtype":"m.text"},"ts":1247543942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dunno if they did or not","msgtype":"m.text"},"ts":1247543943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(the problem fundamentally isn't JS, it's that you shouldn't use binary floating point numbers for fixed-point maths)","msgtype":"m.text"},"ts":1247544000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yes, that's the very problem.","msgtype":"m.text"},"ts":1247544060000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"right, but I just want a solution :)","msgtype":"m.text"},"ts":1247544061000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"use integers","msgtype":"m.text"},"ts":1247544062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and divide by 100 everywhere","msgtype":"m.text"},"ts":1247544063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or 1000, or whatever accuracy you need","msgtype":"m.text"},"ts":1247544064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/everywhere/for display/","msgtype":"m.text"},"ts":1247544120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't always work, if you don't know that accuracy you need","msgtype":"m.text"},"ts":1247544121000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"(that's basically all that a decimal type would do)","msgtype":"m.text"},"ts":1247544122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why wouldn't you know the accuracy you ned?","msgtype":"m.text"},"ts":1247544123000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"need","msgtype":"m.text"},"ts":1247544124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"honestly, I should look back at it... I don't recall if I finally found a solution that worked","msgtype":"m.text"},"ts":1247544125000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"ECMAScript does follow IEEE rounding rules","msgtype":"m.text"},"ts":1247545140000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there is an ongoing proposal to add a decimal floating point type to ECMAScript","msgtype":"m.text"},"ts":1247545141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: ok, thanks","msgtype":"m.text"},"ts":1247545620000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"othermaciej: for Math.round() it seems to not use the even-up odd-down rule (or whatever the rule is, i forget the details) but to just go towards the appropriate signed infinity","msgtype":"m.text"},"ts":1247547720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(document.all == undefined) && (undefined == undefined) && (document.all != document.all)","msgtype":"m.text"},"ts":1247549700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true or false?","msgtype":"m.text"},"ts":1247549701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1247549760000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"why? :-)","msgtype":"m.text"},"ts":1247549820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and in what browsers?","msgtype":"m.text"},"ts":1247549821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"because that's what Gecko returns and I'm horribly biased ;)","msgtype":"m.text"},"ts":1247549880000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"biased returns false","msgtype":"m.text"},"ts":1247549881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1247549882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gecko even","msgtype":"m.text"},"ts":1247549883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"returns false","msgtype":"m.text"},"ts":1247549940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not my gecko","msgtype":"m.text"},"ts":1247549941000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"huh, trunk differs from 3.5.x","msgtype":"m.text"},"ts":1247549942000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.2a1pre) Gecko/20090709 Minefield/3.6a1pre","msgtype":"m.text"},"ts":1247549943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"returns false","msgtype":"m.text"},"ts":1247549944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"3.5.x returns true","msgtype":"m.text"},"ts":1247549945000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"that's ancient history :-)","msgtype":"m.text"},"ts":1247549946000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's weird","msgtype":"m.text"},"ts":1247549947000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"why would this change","msgtype":"m.text"},"ts":1247550000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and why would it ever return true?!","msgtype":"m.text"},"ts":1247550001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I bet it's peterv's fault","msgtype":"m.text"},"ts":1247550002000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"in Safari, it's surprisingly true that document.all != document.all","msgtype":"m.text"},"ts":1247550003000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I have no idea why","msgtype":"m.text"},"ts":1247550060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"probably a bug with the ==undefined magic","msgtype":"m.text"},"ts":1247550061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I suspect https://bugzilla.mozilla.org/show_bug.cgi?id=482788 changed that behavior)","msgtype":"m.text"},"ts":1247550062000,"senderName":"gavin_","senderId":"gavin_@irc"},
{"content":{"body":"document.all == document.all is false","msgtype":"m.text"},"ts":1247550063000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'm wondering we call \"Web Socket\", \"WebSocket\", \"web socket\" or \"web sockets\"...  cf. https://bugs.webkit.org/show_bug.cgi?id=27206","msgtype":"m.text"},"ts":1247551020000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"\"Web Socket\" is the name of the technology, WebSocket is the name of the interface, and the other two are informal.","msgtype":"m.text"},"ts":1247551080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually \"Web Sockets\" is the name of the technology, iirc","msgtype":"m.text"},"ts":1247551081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the difference between \"Web Socket\" and \"Web Sockets\" ?","msgtype":"m.text"},"ts":1247551082000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"one is singular and one is plural :-)","msgtype":"m.text"},"ts":1247551083000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks like i used the plural for the API and the singular for the protocol","msgtype":"m.text"},"ts":1247551140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, which configuration flag name do you recommend to enable the technology?","msgtype":"m.text"},"ts":1247551200000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1247551260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't matter :-)","msgtype":"m.text"},"ts":1247551261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok :-)","msgtype":"m.text"},"ts":1247551262000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"ukai: I think when speaking about the feature, people just sort of naturally tend to call it \"Web Sockets\" (plural, with a space)","msgtype":"m.text"},"ts":1247551440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"like saying, \"Server Sent Events\" or whatever","msgtype":"m.text"},"ts":1247551441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok, i'll use \"Web Sockets\"","msgtype":"m.text"},"ts":1247551442000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1247551443000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"ukai: btw, I'm really looking forward to seeing what you guys get done","msgtype":"m.text"},"ts":1247551500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean on the Web Sockets work you're doing","msgtype":"m.text"},"ts":1247551501000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"楽しみに","msgtype":"m.text"},"ts":1247551560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you can find the work-in-progress code on http://codereview.chromium.org/155079","msgtype":"m.text"},"ts":1247551561000,"senderName":"ukai","senderId":"ukai@irc"},
{"content":{"body":"oh cool","msgtype":"m.text"},"ts":1247551562000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks man","msgtype":"m.text"},"ts":1247551563000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: did you intend to allow spaces in itemprops?","msgtype":"m.text"},"ts":1247561100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok, seriously? draconian parsing mode for text/html?","msgtype":"m.text"},"ts":1247563200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I can't believe this is an idea that more than one person sees favorably","msgtype":"m.text"},"ts":1247563201000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"arrgj","msgtype":"m.text"},"ts":1247563740000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"that's terrible","msgtype":"m.text"},"ts":1247563800000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"can't someone just lobby their favourite browsers to include hsivonen's validator or something?","msgtype":"m.text"},"ts":1247563980000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"or, if you want draconian parsing in every browser likely to implement HTML5 within a decade, use XML","msgtype":"m.text"},"ts":1247564280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that works too","msgtype":"m.text"},"ts":1247564281000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"It seems like a silly idea but I assume that from the pov of the spec it would be rather simple; it would force the parser into \"bail on first parse error\" mode","msgtype":"m.text"},"ts":1247564340000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aye","msgtype":"m.text"},"ts":1247564400000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"it does seem to be the kind of thing that should a browser toggle for authors, rather than an author toggle for users","msgtype":"m.text"},"ts":1247564401000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"Indeed'","msgtype":"m.text"},"ts":1247564460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then someone will use strict mode, develop with a current browser, try it with a more up to date browser, and find it breaks and blame the new browser.","msgtype":"m.text"},"ts":1247564520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought everyone agreed that the \"important financial transation\" argument was bunkum","msgtype":"m.text"},"ts":1247564640000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"r3401 does not affect validators?","msgtype":"m.text"},"ts":1247564641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://html5.org/tools/web-apps-tracker?from=3400&to=3401","msgtype":"m.text"},"ts":1247564642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: ↑","msgtype":"m.text"},"ts":1247564643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: It doesn't because the definition of what is valid is above that, and you don't care about parsing rules.","msgtype":"m.text"},"ts":1247565420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"MikeSmith: does it require new error messages?","msgtype":"m.text"},"ts":1247565720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, gsnedders - I wasn't sure if that part of the spec related to integer datatype-checking or not","msgtype":"m.text"},"ts":1247566080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: could not Web Socket protocol just use port 80?","msgtype":"m.text"},"ts":1247566200000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: In the context of XML in general, or HTML specifically?","msgtype":"m.text"},"ts":1247566201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe people will start performing financial transactions over Twitter, and if its response page aborts in the middle of a transaction tweet then you'll be wishing HTML had draconian error handling","msgtype":"m.text"},"ts":1247566260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: hehe. Mr. Safe turns to Twitter","msgtype":"m.text"},"ts":1247566380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Mr Safe?","msgtype":"m.text"},"ts":1247566440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: http://www.google.com/search?q=%22Mr.+Safe%22+site%3Atbray.org","msgtype":"m.text"},"ts":1247566500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: In any context. If you care about errors introduced during transmission, sign the message. If you care about the server sending a complete message add application-specific checking of the message that goes well beyond XML-well-formedness","msgtype":"m.text"},"ts":1247566501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(in general if you don't trust the server code you have lost anyway afaict because a server that has a bug leading it to cut off a message like <amount>1234</amount> could just as well have a bug that led it to produce <amount>12345</amount>","msgtype":"m.text"},"ts":1247566620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1247566621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: What if you care about errors introduced during serialisation (e.g. running out of buffer space and truncating the message), after you've validated the application data and before you've done any transmission?","msgtype":"m.text"},"ts":1247566800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, I suppose you do something like compute a checksum of the application data (not of the serialisation) and then transmit and check that","msgtype":"m.text"},"ts":1247566860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"For example","msgtype":"m.text"},"ts":1247566861000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Plus make those errors fatal on the server","msgtype":"m.text"},"ts":1247566920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"someone will use strict mode, develop with a current browser, try it with a more up to date browser, and find it breaks and blame the new browser.\" - it sounds like the proposal is that someone will copy-and-paste parsing=strict from wherever, develop in the latest version of IE (which doesn't support the feature), and then their users use a browser in which it fails \"in-[their]-face\"","msgtype":"m.text"},"ts":1247567520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so you don't even need to worry about browsers changing over time, because nobody expects IE to ever implement it anyway","msgtype":"m.text"},"ts":1247567580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I wonder if I should reply to the strict mode thread","msgtype":"m.text"},"ts":1247567700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I don't think I have anything to add to the strict mode thread except http://tinyurl.com/d5gs7f","msgtype":"m.text"},"ts":1247568060000,"senderName":"othermaciej_","senderId":"othermaciej_@irc"},
{"content":{"body":"sigh. someone made a Java impl of the public suffix list stuff but chose to offer it under a GPL-incompatible license","msgtype":"m.text"},"ts":1247568120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"even though it's a port of a C++ implementation that was GPL-compatible","msgtype":"m.text"},"ts":1247568240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Could you ask them to change the license?","msgtype":"m.text"},"ts":1247568360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose I could","msgtype":"m.text"},"ts":1247568540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"<html parsing=strict parsing=loose> - I wonder if that would be a fatal error","msgtype":"m.text"},"ts":1247568600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"supposes it can't be implemented properly without reparsing anyway","msgtype":"m.emote"},"ts":1247568601000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I assume we would have no reparsing and just use whatever the defined attribute precedence is if it is declared multiple times on the same element","msgtype":"m.text"},"ts":1247568720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"othermaciej: I agree with your assessment","msgtype":"m.text"},"ts":1247568840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: But is the error fatal if it occurs after the fatality attribute has been parsed but before the element with the fatality attribute has been emitted?","msgtype":"m.text"},"ts":1247568900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Actually, I suppose you could just keep a pointer to the first parse error and then fatalise it once you've found the fatality indicator","msgtype":"m.text"},"ts":1247568960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: i'd like a plain text version of html5. useful when you want to find something quickly","msgtype":"m.text"},"ts":1247569200000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: like http://www.w3.org/TR/html401/html40.txt","msgtype":"m.text"},"ts":1247569201000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: links -dump or something like that?","msgtype":"m.text"},"ts":1247569202000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or lynx or whatever it is","msgtype":"m.text"},"ts":1247569260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1247569261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: http://gsnedders.html5.org/html5.txt","msgtype":"m.text"},"ts":1247569440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: is it always up to date?","msgtype":"m.text"},"ts":1247569500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: No, I could set up a cron job to do it though","msgtype":"m.text"},"ts":1247569560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: thanks!","msgtype":"m.text"},"ts":1247569561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"22013 links","msgtype":"m.text"},"ts":1247569620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe the internal links are a bit useless to print out","msgtype":"m.text"},"ts":1247569680000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: OK, I set up cron to update it every day now","msgtype":"m.text"},"ts":1247569800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: thanks","msgtype":"m.text"},"ts":1247569860000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: Needs charset","msgtype":"m.text"},"ts":1247569980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Does it? What?","msgtype":"m.text"},"ts":1247569981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: There's non-ASCII characters like © in html5.txt but no charset specified","msgtype":"m.text"},"ts":1247570100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"&#50980;&#49437;&#52268; (Channy Yun)","msgtype":"m.text"},"ts":1247570160000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, I saw that.","msgtype":"m.text"},"ts":1247570161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I guess the problem is at the Lynx end","msgtype":"m.text"},"ts":1247570162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Where is DanC's web addresses draft?","msgtype":"m.text"},"ts":1247570400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/html/wg/href/draft.html is the latest?","msgtype":"m.text"},"ts":1247570520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It would be nice to get the text in wikipedia-style or markdown format instead","msgtype":"m.text"},"ts":1247571000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://milianw.de/projects/markdownify/","msgtype":"m.text"},"ts":1247571180000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"takkaria: There is also http://www.aaronsw.com/2002/html2text/ although I don't reccommend trying the online service with the HTML 5 spec","msgtype":"m.text"},"ts":1247571480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like it shouldn't be so difficult to implement such a tool based on html5lib but I don't have time, of course","msgtype":"m.text"},"ts":1247571540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"w3mmee","msgtype":"m.text"},"ts":1247572080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: might it be conceivable that sometime soon you could have bandwidth for speccing DOMParser and XMLSerializer?","msgtype":"m.text"},"ts":1247572560000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: dunno","msgtype":"m.text"},"ts":1247572740000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"can't imagine that speccing them would take very long","msgtype":"m.emote"},"ts":1247572980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i wonder if someone is willing to take over editing of web dom core","msgtype":"m.text"},"ts":1247573040000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe someone from mozilla or apple","msgtype":"m.text"},"ts":1247573041000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if we could find someone willing to do that, would you be willing to commit to writing up domparser and xmlserializer?","msgtype":"m.text"},"ts":1247573160000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: maybe :)","msgtype":"m.text"},"ts":1247573220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1247573221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wouldn't be entirely against doing it himself","msgtype":"m.emote"},"ts":1247573340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I kinda want to spec XMLSerializer and DOMParser, but I expect not to have the bandwidth for the next 6 months even if I otherwise got an OK on doing it","msgtype":"m.text"},"ts":1247573580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Why doesn't HTML5's rendering section touch on framespacing?","msgtype":"m.text"},"ts":1247573581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: i think because gecko and webkit ignore it","msgtype":"m.text"},"ts":1247573880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/167","msgtype":"m.text"},"ts":1247573881000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: one of the permitted but obsolete doctypes triggers the quirks mode in Mac IE 5. Do you not care?","msgtype":"m.text"},"ts":1247574480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: it's the one used on ln.hixie.ch :-)","msgtype":"m.text"},"ts":1247574540000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, Mac IE 5 has been obsolete for years. It's just as irrelevant now as Netscape 4.","msgtype":"m.text"},"ts":1247577240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I guess it's OK. After all, <!DOCTYPE html> triggers the quirks mode in Netscape 6.0","msgtype":"m.text"},"ts":1247577300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wow, I didn't know that","msgtype":"m.text"},"ts":1247577301000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Um, Netscape 6 was irrelevant when it was current wasn't it? ;)","msgtype":"m.text"},"ts":1247577360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Lachy: http://hsivonen.iki.fi/doctype/ :-)","msgtype":"m.text"},"ts":1247577361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/168 should produce a U+FFFD element, right?","msgtype":"m.text"},"ts":1247577420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham, no, Netscape 6 was relevant for a short period around 2002/03 (whenever it was released)","msgtype":"m.text"},"ts":1247577421000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"or maybe it was 2001. I can't remember. But I know I used it while I was at Uni.","msgtype":"m.text"},"ts":1247577480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"\"relevant\" in the sense that it often hung before crashing whereas sometimes it just crashed (I used it too)","msgtype":"m.text"},"ts":1247577481000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: don't speak ill of the dead","msgtype":"m.text"},"ts":1247577482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: They're dead, what will they do about it?","msgtype":"m.text"},"ts":1247577540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":";)","msgtype":"m.text"},"ts":1247577541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, relevant in the sense that it was one of the few decent alternatives available during the early years of IE6's monopoly.","msgtype":"m.text"},"ts":1247577600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(obviously the work that went in to Netscape 6 eventually led to something rather good. But that release was way way too early)","msgtype":"m.text"},"ts":1247577601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: Am I right in thinking Fx 3.6 (with HTML5 parser) trims data at U+0000 (and inserts a U+FFFD at the end)?","msgtype":"m.text"},"ts":1247577602000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and by \"decent\", I mean \"available and not IE\"","msgtype":"m.text"},"ts":1247577660000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: IE5/Mac was decent and was IE :P","msgtype":"m.text"},"ts":1247577661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, IE5/Mac wasn't available on Windows","msgtype":"m.text"},"ts":1247577662000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen, are you planning to report HTML5 parse errors through Minefield's error console?","msgtype":"m.text"},"ts":1247577960000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Is that possible to do?","msgtype":"m.text"},"ts":1247577961000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: yes, eventually, if it doesn't poison perf and if someone else doesn't override me","msgtype":"m.text"},"ts":1247578020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1247578021000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen, will that involve just parse errors, or will it effectively incorporate the HTML5 validator, and report, e.g., content model errors too?","msgtype":"m.text"},"ts":1247578260000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"gsnedders: no, the parser can't create elements that start with U+FFFD","msgtype":"m.text"},"ts":1247578261000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: will be a text node","msgtype":"m.text"},"ts":1247578262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Lachy: It's extremely unlikely to get content model errors from C++ code in Gecko","msgtype":"m.text"},"ts":1247578440000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: I encourage people to port the above-parser layer of V.nu to JS & Firebug, though","msgtype":"m.text"},"ts":1247578441000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: also, it's extremely unlikely that Gecko would whine about per-character parse errors like non-characters","msgtype":"m.text"},"ts":1247578500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: ah, k","msgtype":"m.text"},"ts":1247578560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: Because of perf?","msgtype":"m.text"},"ts":1247578620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: yes","msgtype":"m.text"},"ts":1247578621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"would anyone want to suggest wording for the normative warning on @summary?","msgtype":"m.text"},"ts":1247579040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I suggest \"\"","msgtype":"m.text"},"ts":1247579100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: I can have a go if you like","msgtype":"m.text"},"ts":1247579160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"puts on fair ground accent, \"Come on! Have a go!\"","msgtype":"m.emote"},"ts":1247579161000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"step right up, everyone's a winner","msgtype":"m.text"},"ts":1247579220000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"s/winner/loser/","msgtype":"m.text"},"ts":1247579221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(scare quotes implied)","msgtype":"m.text"},"ts":1247579222000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"what about border='0'. \"Hixie wants YOU to use CSS.\"? :-)","msgtype":"m.text"},"ts":1247579280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: s/to use CSS.//","msgtype":"m.text"},"ts":1247579281000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: Maybe keep it in small type, actually","msgtype":"m.text"},"ts":1247579282000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm. It's hard to come up with credible warnings for these.","msgtype":"m.text"},"ts":1247579460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"id is a more fashionable attribute than name.\" maybe?","msgtype":"m.text"},"ts":1247579520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. actually, that one is easier ","msgtype":"m.text"},"ts":1247579521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"something like \"Consider putting an id attribute on the nearest container instead of using <a name>","msgtype":"m.text"},"ts":1247579580000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: For name just say \"Warning: the name attribute on a elements is obsolete. The id attribute should be used to serve the same purpose\"","msgtype":"m.text"},"ts":1247579581000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"Consider summarising the purpose and structure of the table in the prose surrounding the table, rather than using the summary attribute, to make it available to more people who might find it useful.\"","msgtype":"m.text"},"ts":1247579700000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen: For border, wouldn't it make sense to say that it becomes messy if you want to style other parts of the table with CSS?","msgtype":"m.text"},"ts":1247579701000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Correction: \"Consider summarising the purpose and structure of the table in the surrounding prose, rather than using the summary attribute, to make it available to more people who might find it useful.\"","msgtype":"m.text"},"ts":1247579702000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen: For summary maybe something like \"Warning: the summary attribute on tables is obsolete. Authours should instead provide information about the structure of complex tables in a <caption> element or in the surrounding prose usis aria to associate the description with the table (more...)\"","msgtype":"m.text"},"ts":1247579703000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Dashiva: border=0 is for <img>","msgtype":"m.text"},"ts":1247579704000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Dashiva: to zap the hideous border in IE and Firefox","msgtype":"m.text"},"ts":1247579705000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Dashiva: from copy-pasted badged","msgtype":"m.text"},"ts":1247579760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*badges","msgtype":"m.text"},"ts":1247579761000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"where (more...) links to a page with a more detailed discussion of the issue","msgtype":"m.text"},"ts":1247579762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(in general such pages would be a nice feature if you don't already have them)","msgtype":"m.text"},"ts":1247579763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"Consider specifying <code>a img, img[usemap] { border: 0; } in CSS instead\"","msgtype":"m.text"},"ts":1247579764000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hsivonen: \"Removing the image border in CSS means you don't have to think about it the next time you add an image\" :)","msgtype":"m.text"},"ts":1247579820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"why can't Firefox and IE just remove that hideous border by default?","msgtype":"m.text"},"ts":1247579880000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Then how will you know if you've visited the image link before? :)","msgtype":"m.text"},"ts":1247579940000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"I guess I should try writing a patch for https://bugzilla.mozilla.org/show_bug.cgi?id=452915","msgtype":"m.text"},"ts":1247579941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm. I wonder if the rendering section covers this now","msgtype":"m.text"},"ts":1247580060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: did you intend to make space characters in the name attribute conforming but obsolete?","msgtype":"m.text"},"ts":1247581200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"weren't spaces in name a problem?","msgtype":"m.text"},"ts":1247581260000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"strict parsing specified in CSS?  what?","msgtype":"m.text"},"ts":1247585220000,"senderName":"takkaria","senderId":"takkaria@irc"},
{"content":{"body":"I think we should have <script>document.enableStrictParsing(true)</script>","msgtype":"m.text"},"ts":1247585280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"document.write already means there's coupling between the parser and the script engine, so it's a natural place to put it","msgtype":"m.text"},"ts":1247585340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Just writing that caused a dozen heads to explode","msgtype":"m.text"},"ts":1247585341000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Objective achieved!","msgtype":"m.text"},"ts":1247585400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sees someone with User-Agent \"Mozilla/5.0 (000000000; 0; 00000 000 00 0 0000; 00000; 00000000) DDDDDDDDDDDDDD DDDDDDDDDDD\"","msgtype":"m.emote"},"ts":1247585401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yay! http://arstechnica.com/open-source/news/2009/07/ksplice-is-like-viagra-for-linux-server-uptime.ars","msgtype":"m.text"},"ts":1247592000000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"now if only we could apply those techniques to all software updating","msgtype":"m.text"},"ts":1247592060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"anyone have any good ideas for a stable version of html5lib for python? i did manage to get rid of one error by doing hg update tip rather than hg update (which I assumed would be the same?) but i'm still getting an error at runtime in html5parser.py (processDocType)","msgtype":"m.text"},"ts":1247594520000,"senderName":"Spark^","senderId":"Spark^@irc"},
{"content":{"body":"Now I am completely confused by Leif's CSS based @media proposal for strict HTML parsing. It just makes no sense to me.","msgtype":"m.text"},"ts":1247600760000,"senderName":"Lachy__","senderId":"Lachy__@irc"},
{"content":{"body":"Lachy, when did strict HTML parsing ever make sense? (independent of syntax/format)","msgtype":"m.text"},"ts":1247600940000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek, it doesn't","msgtype":"m.text"},"ts":1247601000000,"senderName":"Lachy__","senderId":"Lachy__@irc"},
{"content":{"body":"Doug's use case could be addressed by a Firefox plugin / lint tool","msgtype":"m.text"},"ts":1247601180000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober, that depends on exactly what Doug wants","msgtype":"m.text"},"ts":1247601240000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"which isn't clear from his initial proposal","msgtype":"m.text"},"ts":1247601241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I took his use case to be \"developer changes markup (served as text/html), hits reload, immediately sees in his browser some indication of parse errors\"","msgtype":"m.text"},"ts":1247601360000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"basically, his first bullet point","msgtype":"m.text"},"ts":1247601420000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober - that use case is better addressed by a text editor that validates markup while you're editing, and flags errors (perhaps after waiting 1-2 seconds after you're done typing)","msgtype":"m.text"},"ts":1247601421000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"totally agreed","msgtype":"m.text"},"ts":1247601422000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"no need to reload in browser to check validity","msgtype":"m.text"},"ts":1247601423000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"and much faster to have it in the editor","msgtype":"m.text"},"ts":1247601424000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"[which is why I'm working on that :)]","msgtype":"m.text"},"ts":1247601425000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"heck, even use red squiggly lines like spellcheckers","msgtype":"m.text"},"ts":1247601426000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hober, yes, that much is clear, but what's not clear is exactly what he wants to be considered as a parse error","msgtype":"m.text"},"ts":1247601427000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: indeed.","msgtype":"m.text"},"ts":1247601480000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"to indicate invalid tags, attributes, attribute values","msgtype":"m.text"},"ts":1247601481000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"like, does he want unquoted attributes to be considered an error (like XML), or for that to be perfectly fine like it is in normal HTML","msgtype":"m.text"},"ts":1247601482000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"should it yell about a missing (or present) solidus, etc.","msgtype":"m.text"},"ts":1247601483000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"makes a Lazyweb request: Text editor that does HTML validity checking in realtime/inline similar to the way that modern text editors check spelling with red squiggly lines.","msgtype":"m.emote"},"ts":1247601484000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: assuming you're authoring xhtml5 with nxml-mode in Emacs, and plug in this stuff http://github.com/hober/html5-el/tree/master you've already got that. :)","msgtype":"m.text"},"ts":1247601540000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"the line isn't squiggly, but it is red","msgtype":"m.text"},"ts":1247601600000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"tantek: Text editor validation doesn't help when you're writing code that generates markup dynamically","msgtype":"m.text"},"ts":1247602560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip' - it does for text editors that can open an HTML file via HTTP URL.","msgtype":"m.text"},"ts":1247603220000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: That seems less convenient than opening the HTTP URL in a web browser (with a valiator extension), and I thought the point was to make it more convenient","msgtype":"m.text"},"ts":1247603340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip` - I can see reasons for each use case.","msgtype":"m.text"},"ts":1247603400000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Hixie, ping","msgtype":"m.text"},"ts":1247610240000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hsivonen: itemprops? not sure i follow your question.","msgtype":"m.text"},"ts":1247611500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: you can use any port with websocket, but port 80 is http by default","msgtype":"m.text"},"ts":1247611560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: send mail","msgtype":"m.text"},"ts":1247611561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: i'm not especially concerned about MacIE5, no :-)","msgtype":"m.text"},"ts":1247611620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I think hsivonen's question is about <span item=\"foo\"><span itemprop=\"bar baz\">...</span></span>","msgtype":"m.text"},"ts":1247611621000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"IIRC item foo has two properties, bar and baz","msgtype":"m.text"},"ts":1247611622000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hsivonen: send mail about spaces in name=\"\"","msgtype":"m.text"},"ts":1247611680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: pong","msgtype":"m.text"},"ts":1247611681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hober: if that's what he meant, then yeah, that's two properties... is the spec vague about that?","msgtype":"m.text"},"ts":1247611682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, so we ran into an minor issue implementing .files on drag-n-drop dataTransfer","msgtype":"m.text"},"ts":1247611740000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, https://bugzilla.mozilla.org/show_bug.cgi?id=503598#c18","msgtype":"m.text"},"ts":1247611741000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, basically, we don't want to expose the files during drags","msgtype":"m.text"},"ts":1247611742000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, but i suspect we want to expose the fact that there are files in there","msgtype":"m.text"},"ts":1247611743000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah you should only expose them ondrop","msgtype":"m.text"},"ts":1247611800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"looks at the bug","msgtype":"m.emote"},"ts":1247611801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(same applies to all data, not just files)","msgtype":"m.text"},"ts":1247611802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you get arun to finish his draft, i'll spec this in the html5 spec immediately","msgtype":"m.text"},"ts":1247611860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, i'm talking with Arun fairly often about the draft, i think a new one is on the way","msgtype":"m.text"},"ts":1247611920000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, i don't think it'll change substantially though from previous one. Possibly introducing the local-uri thing","msgtype":"m.text"},"ts":1247611921000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, though the lifetime still seems like a big problem to me","msgtype":"m.text"},"ts":1247611980000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, and I think we might drop the FileDialog for now. Because ya'll are wossies ;)","msgtype":"m.text"},"ts":1247612040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, so in general for drag-n-drop, pages won't know at all even what type of data is in the datatransfer until the drop event?","msgtype":"m.text"},"ts":1247612160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, seems useful for the page to know if it will be able to handle the datatype before accepting the drop","msgtype":"m.text"},"ts":1247612220000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, this would be orthogonal to the .files issue","msgtype":"m.text"},"ts":1247612221000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: what's the problem with the lifetime? and i hope he'll split File into File and some base interface, too","msgtype":"m.text"},"ts":1247613840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sicking: the problem with not knowing the types is an open issue with the dnd model iirc","msgtype":"m.text"},"ts":1247613841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The @parsing thing doesn't seem like a good fit for markup","msgtype":"m.text"},"ts":1247613900000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Hixie, the problem with the life time is that I suspect Document lifetime is slightly too short","msgtype":"m.text"},"ts":1247613901000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Browser error reporting, symlinks, mod_rewrite with type override...","msgtype":"m.text"},"ts":1247613902000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"sicking: for the types, i expect we'll expose .types in all events in the future","msgtype":"m.text"},"ts":1247613903000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, for example sticking the uri into a sessionStorage in a wizard-type page","msgtype":"m.text"},"ts":1247613904000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, sounds good re .types","msgtype":"m.text"},"ts":1247613905000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, we'd just need to define a type for files","msgtype":"m.text"},"ts":1247613960000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: well we can always increase the lifetime later if we think we need to... but i think it'd be better to define a way to track the actual File or FileData objects rather than passing the URI around","msgtype":"m.text"},"ts":1247613961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah, that's an alternative","msgtype":"m.text"},"ts":1247614020000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Hixie, i'd still like for Storage to be able to hold File/FileData objects","msgtype":"m.text"},"ts":1247614021000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I think the temporary URI design is probably not workable","msgtype":"m.text"},"ts":1247614080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I need to catch up on the discussion though","msgtype":"m.text"},"ts":1247614081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i don't see another solution for reusing file data unless we basically add a parallel set of features across the entire platform to support File objects everywhere, and that seems painful","msgtype":"m.text"},"ts":1247614082000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the problem is, you have to make sure that temporary URIs for files are unguessable, and also that they are never reused","msgtype":"m.text"},"ts":1247614083000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"why and why?","msgtype":"m.text"},"ts":1247614140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they have to be unguessable or you have a security hole","msgtype":"m.text"},"ts":1247614141000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"an attacker in a different window could read the URI","msgtype":"m.text"},"ts":1247614142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"no, they are origin-blocked","msgtype":"m.text"},"ts":1247614143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assuming you want the URIs to be passable via postMessage for instance","msgtype":"m.text"},"ts":1247614144000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you'd pass the File object","msgtype":"m.text"},"ts":1247614200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not the URI","msgtype":"m.text"},"ts":1247614201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in that case, they are inferior to the ability to pass a File since you can't transfer the capability","msgtype":"m.text"},"ts":1247614202000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"correct","msgtype":"m.text"},"ts":1247614203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're not meant for passing around","msgtype":"m.text"},"ts":1247614204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're meant for plugging a File object into an <img> or <video> or some such","msgtype":"m.text"},"ts":1247614205000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it seems like adding srcFile attributes to the few HTML element interfaces that need them would be simpler","msgtype":"m.text"},"ts":1247614206000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or <iframe>, or CSS, or any number of things","msgtype":"m.text"},"ts":1247614207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that seems unworkable to me","msgtype":"m.text"},"ts":1247614208000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we'd have to go through the entire platform duplicating everything, defining how one overrides the other, etc","msgtype":"m.text"},"ts":1247614260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it'd be an epic disaster in terms of getting interop","msgtype":"m.text"},"ts":1247614261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(I don't think <iframe> or CSS really need them, but maybe I'm wrong)","msgtype":"m.text"},"ts":1247614262000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie, why make them origin blocked rather than unguessable?","msgtype":"m.text"},"ts":1247614263000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the use case is for a preview","msgtype":"m.text"},"ts":1247614264000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think CSS and <iframe> is useful for things like building a HTML editor","msgtype":"m.text"},"ts":1247614320000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I think giving <img>, <audio> and <video> a way to take their source from a file instead of a URI would mostly satisfy the use case","msgtype":"m.text"},"ts":1247614321000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"building an HTML editor would admittedly need support everywhere you can embed something","msgtype":"m.text"},"ts":1247614380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if you wanted your HTML editor to work without having to upload the resources first","msgtype":"m.text"},"ts":1247614381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I thought the main stated use case was for previews before uploading","msgtype":"m.text"},"ts":1247614382000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(any text resource you can already preview by reading the file yourself)","msgtype":"m.text"},"ts":1247614440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"temporary URIs are certainly more general, but more complicated both to use and to implement for the simple preview use case","msgtype":"m.text"},"ts":1247614441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking: because they can leak easily (e.g. referer headers)","msgtype":"m.text"},"ts":1247614442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, hmm... good point","msgtype":"m.text"},"ts":1247614500000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i don't think that temporary URIs are actually any more complicated on the long term","msgtype":"m.text"},"ts":1247614501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they would be a much more localised implementation","msgtype":"m.text"},"ts":1247614502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rather than spreading support all over the place, redefining processing models, etc","msgtype":"m.text"},"ts":1247614503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a more localized implementation of something way more complicated, and with tricky security implications","msgtype":"m.text"},"ts":1247614560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if we make the uri origin blocked then I'm not sure there are any security issues I can think of off the top of my head","msgtype":"m.text"},"ts":1247614561000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej: i'm not convinced it's that complicated. Why would it be that complicated?","msgtype":"m.text"},"ts":1247614620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tracking the temp URIs and implementing lifetime and origin blocking is the piece of code that would be both complicated and security-sensitive","msgtype":"m.text"},"ts":1247614621000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie, btw, doesn't data: uri suffer the same problem of leaking through referrer then?","msgtype":"m.text"},"ts":1247614622000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: data: URIs aren't particularly secure","msgtype":"m.text"},"ts":1247614623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"origin blocking doesn't seem that hard to implement security, granted it might be different in non-gecko browsers","msgtype":"m.text"},"ts":1247614680000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"securely","msgtype":"m.text"},"ts":1247614681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej: it's just a table of ID,origin,file,document; when a document closes, you remove all the corresponding rows; whena url is dereferenced, it returns its origin and data","msgtype":"m.text"},"ts":1247614740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: unless your URI handling is especially weird, this seems relatively straightforward","msgtype":"m.text"},"ts":1247614741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: if lifetime is document but scope is origin, you have to be careful never to reuse an ID","msgtype":"m.text"},"ts":1247614742000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's one example of a potential subtle bug","msgtype":"m.text"},"ts":1247614800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So the requirement is for both unguessability and origin-restriction.","msgtype":"m.text"},"ts":1247614801000,"senderName":"otherarun","senderId":"otherarun@irc"},
{"content":{"body":"(the first, unguessability, may be easy -- UUID or something)","msgtype":"m.text"},"ts":1247614802000,"senderName":"otherarun","senderId":"otherarun@irc"},
{"content":{"body":"othermaciej: not reusing an ID is trivial, just increase a number.","msgtype":"m.text"},"ts":1247614803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unguessability doesn't matter if they are origin restricted","msgtype":"m.text"},"ts":1247614804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"at least not as important","msgtype":"m.text"},"ts":1247614805000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"though <img> is cross origin","msgtype":"m.text"},"ts":1247614860000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej: i don't really understand the not reusing an ID thing, though","msgtype":"m.text"},"ts":1247614861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's easier to avoid repeating if the URI doesn't have to be unguessable","msgtype":"m.text"},"ts":1247614862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"didn't follow the reuse ID thing either","msgtype":"m.emote"},"ts":1247614863000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so long as you don't create a new URI that's equal to a still-active URI, why does it matter if the ID is reused?","msgtype":"m.text"},"ts":1247614864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you reuse an ID then it could lead to another page from the same origin that has the wrong URI reference to load the wrong file, instead of getting an error","msgtype":"m.text"},"ts":1247614865000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that seems like a not especially worrisome case","msgtype":"m.text"},"ts":1247614920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, that page could just randomly come up with a string that happens to be one that happens to be registered to its own origin too","msgtype":"m.text"},"ts":1247614921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even if the ID wasn't reused","msgtype":"m.text"},"ts":1247614922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"note that File references wouldn't have this problem at all, since the engine can know the lifetime of a File object but it can't know the object of a URI string","msgtype":"m.text"},"ts":1247614923000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: yes, that's another flaw with the magical URI scheme","msgtype":"m.text"},"ts":1247614980000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it just has much more potential for bugginess to use a magic string instead of a capability-carrying object reference","msgtype":"m.text"},"ts":1247614981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i think that considering this a flaw is like considering pointers to be flawed because if you come up with a random number that happens to point into your address space, you'll dereference something instead of getting an access violation","msgtype":"m.text"},"ts":1247614982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to identify a temporary and origin-restricted resource","msgtype":"m.text"},"ts":1247614983000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"pointers are flawed! that's why we don't have them in ECMAScript","msgtype":"m.text"},"ts":1247615040000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"*shrug* i'm not convinced this is a problem","msgtype":"m.text"},"ts":1247615041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean i'm happy to make the URIs be unlikely to be reused and unlikely to clash","msgtype":"m.text"},"ts":1247615042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. by using UUIDs","msgtype":"m.text"},"ts":1247615043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(clash with random values, i mean)","msgtype":"m.text"},"ts":1247615100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't think it's a problem","msgtype":"m.text"},"ts":1247615101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's just a sloppy design, in my opinion","msgtype":"m.text"},"ts":1247615160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but in any case, it's trivial to create a sequence of non-duplicate IDs that are statistically not going to clash with random numbers","msgtype":"m.text"},"ts":1247615161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not saying we can't make it work, but it will be much more bug-prone than the alternative","msgtype":"m.text"},"ts":1247615162000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's far less sloppy than adding a parallel set of APIs everywhere :-)","msgtype":"m.text"},"ts":1247615163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i strongly disagree with that","msgtype":"m.text"},"ts":1247615164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having to add two entry points to every processing model is orders of magnitude more likely to be buggy","msgtype":"m.text"},"ts":1247615165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and in weird ways that are hard to work aorund","msgtype":"m.text"},"ts":1247615166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Speaking of dnd... The current draft doesn't specify when pageX, clientX, screenX positions are available on the DragEvent. Gecko currently sets these to zero on the source node. It should be available on all IMHO. Is there any known security issues to this?","msgtype":"m.text"},"ts":1247615220000,"senderName":"sebmarkbage","senderId":"sebmarkbage@irc"},
{"content":{"body":"I doubt it. Just say srcFile always takes precedence over src, or the most recently set takes precedence, or whatever. Done.","msgtype":"m.text"},"ts":1247615221000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: hah","msgtype":"m.text"},"ts":1247615280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: if only it were that easy","msgtype":"m.text"},"ts":1247615281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It would be like an hour or two of implementation work to do HTMLImageElement.srcFile and I would be confident it is right","msgtype":"m.text"},"ts":1247615282000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"a temporary URI vending scheme, I would expect to be finding bugs months later","msgtype":"m.text"},"ts":1247615283000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: and you'd get the origin checking right for when that <img> is used with createPattern() ?","msgtype":"m.text"},"ts":1247615284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the downside is that we can't make it work as widely as URIs work. For example for CSS backgrounds. But i'm not sure that that is that important","msgtype":"m.text"},"ts":1247615340000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yeah, that's really the main downside","msgtype":"m.text"},"ts":1247615341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: an <img> loaded from a File shouldn't have cross-origin taint, since if you have the file reference you can get the bits of the image","msgtype":"m.text"},"ts":1247615400000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or at least, cross-origin taint for createPattern() would serve no useful purpose","msgtype":"m.text"},"ts":1247615401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: i'm just saying that there are FAR more complications here than first meets the eye","msgtype":"m.text"},"ts":1247615402000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. we'd have to change the conformance rules to make sure <img> without src=\"\" would be valid","msgtype":"m.text"},"ts":1247615403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the <video> resource selection algorithm would become even more complex","msgtype":"m.text"},"ts":1247615460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'd prefer the URI approach from an implementation point of view. If we do the .file approach we'll have to wrap the file in a URI-like-stream internally anyway","msgtype":"m.text"},"ts":1247615461000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"anyone relying on selectors like  img[src]  would have to now know they couldn't always rely on it","msgtype":"m.text"},"ts":1247615462000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm willing to believe there may be complications, I just can't think of any (at least, none that would make it tricky for implementations)","msgtype":"m.text"},"ts":1247615520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there are so many small things that would have to be defined if we added a parallel API everywhere","msgtype":"m.text"},"ts":1247615521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: I think the challenges with the URI approach are not so much about using it internally, but in using that URI string as a handle to the resource","msgtype":"m.text"},"ts":1247615522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you also couldn't use .innerHTML suddenly, you'd have to create the markup and then poke the file in afterwards","msgtype":"m.text"},"ts":1247615523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I guess I'm not really sure it's needed everywhere","msgtype":"m.text"},"ts":1247615580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i don't think it's needed everywhere, e.g. i can't think of any time i'd want to put it in <blockquote cite=\"\">","msgtype":"m.text"},"ts":1247615640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maintaining a file dictionary doesn't seem that hard, except for lifetime management. How does that work?","msgtype":"m.text"},"ts":1247615641000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"the only use case I've heard mentioned for that is a full-featured HTML editor that either works offline or is unwilling to upload resources before using them in editing","msgtype":"m.text"},"ts":1247615642000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: I can!","msgtype":"m.text"},"ts":1247615643000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: my proposal is to make the URIs stop resolving once their Document has been closed","msgtype":"m.text"},"ts":1247615644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"has to take off","msgtype":"m.emote"},"ts":1247615700000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1247615701000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"so far I don't feel strongly either way","msgtype":"m.text"},"ts":1247615702000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sounds good to me","msgtype":"m.text"},"ts":1247615703000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"othermaciej: It could really be all kinds of offline app scenarios such as spreadsheets or whatever.","msgtype":"m.text"},"ts":1247615880000,"senderName":"sebmarkbage","senderId":"sebmarkbage@irc"},
{"content":{"body":"sebmarkbage: I don't think spreadsheets need the ability to reference a temporary file from CSS to work offline","msgtype":"m.text"},"ts":1247615940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"being able to read the file text, plus maybe ability to display loaded images, should be enough","msgtype":"m.text"},"ts":1247615941000,"senderName":"othermaciej","senderId":"othermaciej@irc"}
]