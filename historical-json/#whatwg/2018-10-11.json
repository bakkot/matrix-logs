[
{"content":{"body":"zcorpan: did https://github.com/whatwg/html/pull/4079 affect any other implementations?","msgtype":"m.text"},"ts":1539260184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it'd be good to have impl bugs in that case","msgtype":"m.text"},"ts":1539260192000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes. I'll file","msgtype":"m.text"},"ts":1539260484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks, I also have a PR coming up with an editorial nit","msgtype":"m.text"},"ts":1539260501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"firefox doesn't seem to run the test to completion","msgtype":"m.text"},"ts":1539260766000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh wait no it did","msgtype":"m.text"},"ts":1539260796000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"but noopener doesn't seem to do anything in firefox for this test. Did it work before?","msgtype":"m.text"},"ts":1539260973000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i don't actually know","msgtype":"m.text"},"ts":1539261197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"perhaps it was blocked on figuring out the interaction with CSSOM stuff?","msgtype":"m.text"},"ts":1539261221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm no, no open bugs","msgtype":"m.text"},"ts":1539261293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(about that in particular)","msgtype":"m.text"},"ts":1539261300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Help (need to sync html5lib-tests to wpt)? https://bugs.chromium.org/p/chromium/issues/detail?id=704534#c8","msgtype":"m.text"},"ts":1539266420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the streams api faq calls observables a bad fit for i/o -- why is that?","msgtype":"m.text"},"ts":1539275521000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"just because of no backpressure?","msgtype":"m.text"},"ts":1539275531000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"Multiple consumers also seems like a key difference","msgtype":"m.text"},"ts":1539276396000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Note also how streams has a bunch of branching to do bytes really well","msgtype":"m.text"},"ts":1539276485000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"doing bytes well would be a reason why streams are better, not why observables are bad for io, and I'm not sure why multi-consumer is bad for io","msgtype":"m.text"},"ts":1539276665000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"just trying to understand","msgtype":"m.text"},"ts":1539276701000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"the only thing clear so far is that since there's no (async) backpressure, too much streaming would degrade the performance for other things running in the thread","msgtype":"m.text"},"ts":1539276757000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"Multi-consumer means memory bloat to some extent","msgtype":"m.text"},"ts":1539276977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And backpressure is imp","msgtype":"m.text"},"ts":1539276988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you could still have just one subscriber even with observables, though","msgtype":"m.text"},"ts":1539277054000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"just like you can fork streams and have more, it's just single by default","msgtype":"m.text"},"ts":1539277129000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"I don't particularly like observables, though, based on this presentation: https://docs.google.com/presentation/d/1r2V1sLG8JSSk8txiLh4wfTkom-BoOsk52FgPBy8o3RM","msgtype":"m.text"},"ts":1539277286000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"where it compares how much simpler implementing the combinators becomes with async iterables and generators","msgtype":"m.text"},"ts":1539277326000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"Yes but youâ€™d need to buffer in case someone else subscribes later? Maybe that is not how that works, but it seems transferables would break down at least","msgtype":"m.text"},"ts":1539278044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"subjects don't buffer; they're like event emitters, the events go nowhere if there's no subscribers","msgtype":"m.text"},"ts":1539278442000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"I'm not deeply familiar with observables, though, so not confident about anything","msgtype":"m.text"},"ts":1539278522000,"senderName":"`slikts","senderId":"`slikts@irc"},
{"content":{"body":"Transferables only work 1:1","msgtype":"m.text"},"ts":1539278877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good times http://software.hixie.ch/utilities/js/live-dom-viewer/saved/6278","msgtype":"m.text"},"ts":1539280686000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"`slikts: as annevk briefly mentioned, you lose data with observables since they only push out to current subscribers. You can layer stuff on top of obesrvables (or EventTarget) to fix this, like adding your own buffering. But it's awkward and nonstandard.","msgtype":"m.text"},"ts":1539281186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I see, thanks","msgtype":"m.text"},"ts":1539281347000,"senderName":"`slikts","senderId":"`slikts@irc"}
]