[
{"content":{"body":"anyone around who has access to the https://validator.w3.org/ server? I've been getting Error 503 and timeouts for a few hours now","msgtype":"m.text"},"ts":1581599557000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":" /CC @MikeSmith when you are around :)","msgtype":"m.text"},"ts":1581599850000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"XhmikosR: I can reach it, FWIW","msgtype":"m.text"},"ts":1581599975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you post a few times successfully?","msgtype":"m.text"},"ts":1581599991000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"I can also reach the site, but it fails when uploading a doc or making a POST request","msgtype":"m.text"},"ts":1581600009000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"XhmikosR: ah, I tried to validate whatwg.org","msgtype":"m.text"},"ts":1581600032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe there's some kind of ongoing DDoS attack going on?","msgtype":"m.text"},"ts":1581600061000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"XhmikosR: uploading a test from wpt also works","msgtype":"m.text"},"ts":1581600085000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it seems it works now for me too, let me restart CI","msgtype":"m.text"},"ts":1581600135000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"yup it seems it works now again","msgtype":"m.text"},"ts":1581600196000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"minus a few cases https://github.com/MaxCDN/bootstrapcdn/pull/1457/checks?check_run_id=443612129","msgtype":"m.text"},"ts":1581600208000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"we have the issue on all other branches too so it doesn't seem to be related to an npm package, and I could also reproduce just a few minutes ago on the browser","msgtype":"m.text"},"ts":1581600290000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"XhmikosR: here now","msgtype":"m.text"},"ts":1581605281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I'm still seeing the failures on CI :/","msgtype":"m.text"},"ts":1581605324000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"yeah will try to fix the server now","msgtype":"m.text"},"ts":1581605356000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1581605367000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"XhmikosR: OK, should be back to normal now","msgtype":"m.text"},"ts":1581605837000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thank you!","msgtype":"m.text"},"ts":1581605844000,"senderName":"XhmikosR","senderId":"XhmikosR@irc"},
{"content":{"body":"cheers","msgtype":"m.text"},"ts":1581605886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://html.spec.whatwg.org/#nonce-attributes","msgtype":"m.text"},"ts":1581609193000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"trying to understand that","msgtype":"m.text"},"ts":1581609198000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"Elements that have a nonce content attribute\" ... ok, some elements have nonce content attribute","msgtype":"m.text"},"ts":1581609226000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but somehow _that_ isn't exposed to CSS","msgtype":"m.text"},"ts":1581609258000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"extracting the value from the content attribute\" means probably something","msgtype":"m.text"},"ts":1581609375000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but not sure what","msgtype":"m.text"},"ts":1581609377000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the value is extracted but is the content attribute still there?","msgtype":"m.text"},"ts":1581609391000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and if it is there, what is the value?","msgtype":"m.text"},"ts":1581609398000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: do you happen to recall","msgtype":"m.text"},"ts":1581609417000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm probably missing some bits elsewhere in the spec","msgtype":"m.text"},"ts":1581609427000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, when element gets connected, then the value becomes empty string","msgtype":"m.text"},"ts":1581609503000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but when does the \"extract\" happen?","msgtype":"m.text"},"ts":1581609535000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: seems prett clear if you read on","msgtype":"m.text"},"ts":1581609824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: normative requirements are further down","msgtype":"m.text"},"ts":1581609840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm missing where the extract happens","msgtype":"m.text"},"ts":1581609840000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"> Whenever an element including HTMLOrSVGElement has its nonce attribute is set or changed, set this element's [[CryptographicNonce]] to the given value.","msgtype":"m.text"},"ts":1581609862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1581609871000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I understand that sets the slot","msgtype":"m.text"},"ts":1581609876000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but nothing says the content attribute isn't set too","msgtype":"m.text"},"ts":1581609893000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it is set","msgtype":"m.text"},"ts":1581609914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1581609930000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but if I remove element from DOM and put it back, then value is \"\"","msgtype":"m.text"},"ts":1581609945000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so if you manipulate post tree connection you are leaking","msgtype":"m.text"},"ts":1581609949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hai","msgtype":"m.text"},"ts":1581609956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bizarre","msgtype":"m.text"},"ts":1581609956000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, seems a tad better than hijacking setAttribute() entirely in novel ways","msgtype":"m.text"},"ts":1581609997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if parser sets the attribute, it gets cleared when element gets connected","msgtype":"m.text"},"ts":1581610039000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"after that attribute changes aren't affected","msgtype":"m.text"},"ts":1581610052000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but slot gets updated","msgtype":"m.text"},"ts":1581610068000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and then when connecting again, attribute value is cleared","msgtype":"m.text"},"ts":1581610101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Sounds right","msgtype":"m.text"},"ts":1581610122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"super weird, but ok. Just trying to understand how one should implement this","msgtype":"m.text"},"ts":1581610131000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1581610135000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"There should be tests for all of this","msgtype":"m.text"},"ts":1581610142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bz and I were involved in agreeing on these semantics iirc","msgtype":"m.text"},"ts":1581610163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might have been simpler to just always clear the nonce attribute","msgtype":"m.text"},"ts":1581610263000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"And somehow avoid a loop and create weird mutation records?","msgtype":"m.text"},"ts":1581610323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, which loop?","msgtype":"m.text"},"ts":1581610400000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"MutationRecord has the old value, so it would just always have \"\"","msgtype":"m.text"},"ts":1581610462000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but anyhow, this is what it is now","msgtype":"m.text"},"ts":1581610471000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just a bit more difficult to implement","msgtype":"m.text"},"ts":1581610482000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Set attribute invoking set attribute, spec doesn’t have a clear to change an attribute without side effects apart from direct manipulation","msgtype":"m.text"},"ts":1581611017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There’s also no real precedent for no-opping setAttribute() calls","msgtype":"m.text"},"ts":1581611071000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But yeah, it is what it is 😊","msgtype":"m.text"},"ts":1581611132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was there precedent for changing attribute values when connecting an element to document?","msgtype":"m.text"},"ts":1581611133000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess all the options are weird","msgtype":"m.text"},"ts":1581611145000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: <details> maybe? But yeah, weird too","msgtype":"m.text"},"ts":1581611183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some kind of change to parser to set the slot, and not attribute","msgtype":"m.text"},"ts":1581611190000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but changing parser is scary","msgtype":"m.text"},"ts":1581611207000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think that ruled that out, but it’s been a while","msgtype":"m.text"},"ts":1581611231000,"senderName":"annevk","senderId":"annevk@irc"}
]