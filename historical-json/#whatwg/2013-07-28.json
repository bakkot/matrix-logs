[
{"content":{"body":"The WHATWG spec, which is the one you should be reading, defines the HTML language.","msgtype":"m.text"},"ts":1374969831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"galant: It is unversioned.","msgtype":"m.text"},"ts":1374969845000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"galant: That's as \"official\" as you're going to get.","msgtype":"m.text"},"ts":1374969860000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"things browsers need: an un-reload button","msgtype":"m.text"},"ts":1374971308000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"reload ebay search, go \"wait what was that\" right as it goes away","msgtype":"m.text"},"ts":1374971328000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"how many webpages arround use HTML ?","msgtype":"m.text"},"ts":1374972398000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"TabAtkins,  thanks","msgtype":"m.text"},"ts":1374972419000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"does browsers read any other language other than html?","msgtype":"m.text"},"ts":1374972542000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"You mean beyond Javascript and CSS?  Yes - all browsers also understand SVG, and some understand MathML.","msgtype":"m.text"},"ts":1374973127000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And all of them can read arbitrary XML, though they won't do anything useful with it.","msgtype":"m.text"},"ts":1374973148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are there any webpages made in xml xstl svg ..?","msgtype":"m.text"},"ts":1374973417000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"galant, there are some experimental svg-only pages, but no major ones afaik.","msgtype":"m.text"},"ts":1374973531000,"senderName":"pdr","senderId":"pdr@irc"},
{"content":{"body":"can I make letters to not make new lines if they reach end of the element width?","msgtype":"m.text"},"ts":1374974157000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"pdr, ok thanks","msgtype":"m.text"},"ts":1374974167000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"is there any logic behind colapsing margins or I should learn them as they are ?","msgtype":"m.text"},"ts":1374978038000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"galant: Google is aware of at least a trillion unique web pages, but nobody knows the real number, and it depends on what you mean exactly","msgtype":"m.text"},"ts":1374978729000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as for margin collapsing, there's a logic","msgtype":"m.text"},"ts":1374978747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's a bit hard to explain over irc","msgtype":"m.text"},"ts":1374978753000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, please, can google webmaster tools and google analytics slow down my webpage if I put code snippets on my servers?","msgtype":"m.text"},"ts":1374979313000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"I need to read more on collapsing margins they confuse me \"S","msgtype":"m.text"},"ts":1374979336000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"I meant, around how many webpages are made in languages different than html- i mean about structure like html&css","msgtype":"m.text"},"ts":1374979378000,"senderName":"galant","senderId":"galant@irc"},
{"content":{"body":"i don't know much about google webmaster tools and google analytics, but it's unlikely that google's servers will be the bottleneck on your site most of the time","msgtype":"m.text"},"ts":1374979726000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand your other questions","msgtype":"m.text"},"ts":1374979739000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok thanks Hixie","msgtype":"m.text"},"ts":1374984466000,"senderName":"gallant","senderId":"gallant@irc"},
{"content":{"body":"which kind of element are form input elements?","msgtype":"m.text"},"ts":1375002238000,"senderName":"gallant","senderId":"gallant@irc"},
{"content":{"body":"what is the keywords attribute max value? or how many keywords I can put in <meta name=\"keywords\"","msgtype":"m.text"},"ts":1375006438000,"senderName":"gallant","senderId":"gallant@irc"},
{"content":{"body":"can anybody help me?","msgtype":"m.text"},"ts":1375012904000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1375012923000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"anybody reply please","msgtype":"m.text"},"ts":1375012936000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"anybody here?","msgtype":"m.text"},"ts":1375012965000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"say what you need","msgtype":"m.text"},"ts":1375012983000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"ok i may sound like real noob, but how to make website like this one? http://www.mozilla.org/en-US/firefox/os/ can u suggest me something?","msgtype":"m.text"},"ts":1375013003000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"nessy, can u help me?","msgtype":"m.text"},"ts":1375013085000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"any reply please","msgtype":"m.text"},"ts":1375013164000,"senderName":"ThePieMan","senderId":"ThePieMan@irc"},
{"content":{"body":"mayday mayday","msgtype":"m.text"},"ts":1375014185000,"senderName":"gallant","senderId":"gallant@irc"},
{"content":{"body":"wonders why there is a sudden upsurge in people thinking this is a web development help channel","msgtype":"m.emote"},"ts":1375018105000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"MikeSmith: hsivonen_ http://validator.nu/ is down for me btw","msgtype":"m.text"},"ts":1375021006000,"senderName":"hendry","senderId":"hendry@irc"},
{"content":{"body":"galant: meta name=keywords is a waste of time, generally speaking","msgtype":"m.text"},"ts":1375030994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: Is there (or should there be) a way to create a counter as if an item was insert between two existing items (e.g. 10A between 10 and 11)?","msgtype":"m.text"},"ts":1375038504000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"There can be, sure.  Set up a nested counter scope with a different counter style, and use counters() to render them.","msgtype":"m.text"},"ts":1375038568000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1375038605000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"For example, assuming a single <ol> where you started with some numbered items, and later amended the list to contain more items but wanted to indicate them specially so as to not disturb the original numbering...","msgtype":"m.text"},"ts":1375038663000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like <ol><li>old<li class=new>new<li>old</ol> being rendered as \"1. old 1A. new 2. old\"","msgtype":"m.text"},"ts":1375038691000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then...","msgtype":"m.text"},"ts":1375038699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ol { counter-reset: old; } li:not(.new) { counter-reset: new; } li::marker { content: counter(old, decimal) \". \"; } li.new::marker { content: counter(old, decimal) counter(new, upper-alpha) \". \"; }","msgtype":"m.text"},"ts":1375038805000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Sorry, realized you can't use counters() for this if you want them to be siblings.  If the new things were children you'd be fine.)","msgtype":"m.text"},"ts":1375038826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The ABC counter would get reset by each old item, thus restarting the count for its new items.","msgtype":"m.text"},"ts":1375038856000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, thanks for the explanation.","msgtype":"m.text"},"ts":1375038867000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"This was merely a thought experiment. :)","msgtype":"m.text"},"ts":1375038876000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Though I'm glad to see that counters are already this powerful.","msgtype":"m.text"},"ts":1375038914000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: You do good work! :)","msgtype":"m.text"},"ts":1375038921000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I have nothing to do with this - this is old functionality.","msgtype":"m.text"},"ts":1375038933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The interaction counters can have with siblings is indeed powerful.","msgtype":"m.text"},"ts":1375038946000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Nevertheless, I stand by my statement. ;)","msgtype":"m.text"},"ts":1375038958000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Excepting the use of ::marker (use ::before instead), you can do my example with only CSS 2.1 stuff.","msgtype":"m.text"},"ts":1375038969000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But thanks. ^_^","msgtype":"m.text"},"ts":1375038982000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I still think that most of the time numbering is not actually a presentational feature and we should not have put it in CSS.","msgtype":"m.text"},"ts":1375039303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where else would you have put it? Having to hand number things would be a pain.","msgtype":"m.text"},"ts":1375039391000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"TabAtkins: The real question is, does anybody actually support counters? >_>","msgtype":"m.text"},"ts":1375039410000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yes, they do.  At least, well enough to pass the 2.1 tests.","msgtype":"m.text"},"ts":1375039432000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"GPHemsley: I would make something like <ol type=numberic> <li>old <li value=1A> new <li value=2> old work I think","msgtype":"m.text"},"ts":1375039496000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe instead of value call it marker, if we're doing this from scratch, etc.","msgtype":"m.text"},"ts":1375039535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, Gecko does not appear to be one of them.","msgtype":"m.text"},"ts":1375039560000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"even with ::before","msgtype":"m.text"},"ts":1375039561000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1375039585000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I think that'd put a lot of burden on detecting exactly what \"1A\" means in that case","msgtype":"m.text"},"ts":1375039617000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I think you'd wind up with something that looks like the CSS solution in many respects anyway","msgtype":"m.text"},"ts":1375039637000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"data:text/html,<!DOCTYPE html><style>ol { counter-reset: old; } li:not(.new) { counter-reset: new; } li::before { content: counter(old, decimal) \". \"; } li.new::before { content: counter(old, decimal) counter(new, upper-alpha) \". \"; }</style><ol><li>old<li class=new>new<li>old</ol>","msgtype":"m.text"},"ts":1375039650000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"does not work in Gecko ^^","msgtype":"m.text"},"ts":1375039670000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"or, rather, doesn't work correctly","msgtype":"m.text"},"ts":1375039696000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"or Chrome, apparently","msgtype":"m.text"},"ts":1375039747000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"indeed, Gecko and Chrome show the same results as each other for both ::marker and ::before","msgtype":"m.text"},"ts":1375039798000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(though the results are not identical for the two selectors)","msgtype":"m.text"},"ts":1375039817000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"the \"new\" element shows \"2. 00.\" with ::before","msgtype":"m.text"},"ts":1375039868000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"between \"1. 0.\" and \"3. 0.\"","msgtype":"m.text"},"ts":1375039881000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(though all of this is known already, I think)","msgtype":"m.text"},"ts":1375039953000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: 1A is just content, it's not really about meaning","msgtype":"m.text"},"ts":1375039971000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: I mean, you don't have to be able to interpret it in order to display it","msgtype":"m.text"},"ts":1375039985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Then how do you know what to do with an <li> after <li value=2>?","msgtype":"m.text"},"ts":1375039998000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: you'd prolly have some amount of heuristics, key is mostly that this is content, not style","msgtype":"m.text"},"ts":1375040033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"GPHemsley: as e.g. other content will want to refer to \"1A\" and not have that reference go away if the style sheet is changed","msgtype":"m.text"},"ts":1375040055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I agree with that, but I don't think there's a good way around it.","msgtype":"m.text"},"ts":1375040062000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"though you could give each <li> an @id, no?","msgtype":"m.text"},"ts":1375040080000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"and then use the id value to extract the CSS counter?","msgtype":"m.text"},"ts":1375040102000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"as a way to reference it, that is","msgtype":"m.text"},"ts":1375040108000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"or somethink like that","msgtype":"m.text"},"ts":1375040148000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"s/k/g/","msgtype":"m.text"},"ts":1375040154000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: Sorry, I forgot to put counter-increments into that snippet.","msgtype":"m.text"},"ts":1375042238000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Add li { counter-increment: old; } li.new { counter-increment: old new; }","msgtype":"m.text"},"ts":1375042254000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And obviously add ol {list-style:none;} to turn off native marker rendering, so your ::before stands alone.","msgtype":"m.text"},"ts":1375042313000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Rather, li.new { counter-increment: new; }","msgtype":"m.text"},"ts":1375042407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And (just tested), that works perfectly.","msgtype":"m.text"},"ts":1375042466000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"data:text/html;charset=utf-8,%3C!DOCTYPE%20html%3E%0A%3Cstyle%3E%0Aol%20%7B%20counter-reset%3A%20old%3B%20list-style%3Anone%3B%20%7D%0Ali%3Anot(.new)%20%7B%20counter-reset%3A%20new%3B%20counter-increment%3A%20old%3B%20%7D%0Ali.new%20%7B%20counter-increment%3A%20new%3B%20%7D%0Ali%3A%3Abefore%20%7B%20content%3A%20counter(old)%20%22.%20%22%3B%20%7D%0Ali.new%3A%","msgtype":"m.text"},"ts":1375042489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"3Abefore%20%7B%20content%3A%20counter(old)%20counter(new%2C%20upper-alpha)%20%22.%20%22%3B%20%7D%0A%3C%2Fstyle%3E%0A%3Col%3E%3Cli%3Eold%3Cli%20class%3Dnew%3Enew%3Cli%3Eold%3C%2Fol%3E","msgtype":"m.text"},"ts":1375042489000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wonder how complex a HTML5-style CSS spec would be.","msgtype":"m.text"},"ts":1375043899000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Or for that matter a HTML5-style spec for the Office 97-2003 binary file formats.","msgtype":"m.text"},"ts":1375043921000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Yuhong: what do you mean, HTML5-style?","msgtype":"m.text"},"ts":1375045665000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"In the style of the WHATWG HTML spec.","msgtype":"m.text"},"ts":1375045706000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"annevk: thanks! is that `xhr.responseType = 'some-unsupported-type'` behavior specced? It doesn’t seem to be mentioned in http://xhr.spec.whatwg.org/#the-responsetype-attribute","msgtype":"m.text"},"ts":1375045998000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"…all browsers seem to do it, so i probably misunderstood the spec","msgtype":"m.text"},"ts":1375046035000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: it's because the given value in step 4 can only be one of the strings from the IDL","msgtype":"m.text"},"ts":1375046058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: so if you don't implement one of the values, it wouldn't be in the IDL either in which case the algorithm would not be invoked (iirc)","msgtype":"m.text"},"ts":1375046096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: enums are nice like that","msgtype":"m.text"},"ts":1375046183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so this spec doesn’t need to mention this explicitly, because it’s taken care of by IDL? got it.","msgtype":"m.text"},"ts":1375046221000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"yeah, if we add a new value \"foo\" we'd expand the enum, implementations of the old enum however would simply ignore \"foo\" and not change the value of responseType","msgtype":"m.text"},"ts":1375046341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: Ms2ger: re http://krijnhoetmer.nl/irc-logs/whatwg/20130727#l-238 - just do formdata.toString = function() { throw new Error(); };","msgtype":"m.text"},"ts":1375046570000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Interesting idea","msgtype":"m.text"},"ts":1375046598000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It does rely on overloading being implemented correctly, of course","msgtype":"m.text"},"ts":1375046619000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I would be relatively surprised if it wasn't.","msgtype":"m.text"},"ts":1375046663000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yuhong: and that is… ?","msgtype":"m.text"},"ts":1375046726000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I've seen quite a bit of pre-webidl overloading code in Gecko, and it's universally wrong :)","msgtype":"m.text"},"ts":1375046744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"more specifically","msgtype":"m.text"},"ts":1375046750000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Ms2ger: Oh, it's not /entirely/ wrong. I expect it'll handle this. :P","msgtype":"m.text"},"ts":1375046762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Possibly :)","msgtype":"m.text"},"ts":1375046784000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"is not an optimist","msgtype":"m.emote"},"ts":1375046804000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i hear Ms2ger is eager to write some tests :-)","msgtype":"m.text"},"ts":1375046928000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Nooooooo","msgtype":"m.text"},"ts":1375046935000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":-|","msgtype":"m.text"},"ts":1375046942000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doesn't mean that I won't.. ;)","msgtype":"m.text"},"ts":1375046972000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"looks at his todo list, sighs","msgtype":"m.emote"},"ts":1375046998000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: if you could also clean my windows, that'd be splendid. you'll get a coffee and a cardamom bun","msgtype":"m.text"},"ts":1375047406000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It's very kind of you to offer that, but I don't think I'll take you up on it","msgtype":"m.text"},"ts":1375047479000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I was referring to <Hixie> it appears that attempting to spec basically what browsers do has resulted in a spec about as complicated as browsers","msgtype":"m.text"},"ts":1375047524000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"http://mathiasbynens.be/demo/xhr-responsetype xhr.responseType tests, in case anyone cares","msgtype":"m.text"},"ts":1375047566000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"IE11 supports all but 'json'","msgtype":"m.text"},"ts":1375047573000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas, there's a </a> on there that shouldn't be","msgtype":"m.text"},"ts":1375047634000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: whoops, fixed","msgtype":"m.text"},"ts":1375047650000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hmmm. can someone confirm that the IE claim is true? https://www.w3.org/Bugs/Public/show_bug.cgi?id=22800","msgtype":"m.text"},"ts":1375048645000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"something like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2423 (though dunno if ie supports data: there)","msgtype":"m.text"},"ts":1375048925000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ie doesn’t support data: there","msgtype":"m.text"},"ts":1375049372000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"suspected so","msgtype":"m.text"},"ts":1375049398000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=264197 people seem confused. nobody seem to have tested whether IE supports .colno, afaict","msgtype":"m.text"},"ts":1375049499000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i have given review comments about IE's tests saying that they are confusing, but apparently they haven't been fixed","msgtype":"m.text"},"ts":1375049601000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: You should really write tests that W3C can use","msgtype":"m.text"},"ts":1375050935000,"senderName":"jgraham","senderId":"jgraham@irc"}
]