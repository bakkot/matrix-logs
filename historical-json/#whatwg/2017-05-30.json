[
{"content":{"body":"Domenic: question for you, would you expect window.EventListener to exist given the definition of EventListener https://dom.spec.whatwg.org/#callbackdef-eventlistener and https://heycam.github.io/webidl/#interface-object ?","msgtype":"m.text"},"ts":1496113098000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Domenic: Firefox and Safari don'","msgtype":"m.text"},"ts":1496113122000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"don’t seem to have window.EventListener","msgtype":"m.text"},"ts":1496113131000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"Domenic: and I can’t figure out a great reason for it to exist, given that it doesn’t have any constants, like say NodeFilter (https://dom.spec.whatwg.org/#interface-nodefilter)","msgtype":"m.text"},"ts":1496113186000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig: no, a callback interface is not an interface","msgtype":"m.text"},"ts":1496116025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or, maybe that wasn't the intended distinction, but \"The interface object for a given non-callback interface I\" makes pretty clear.","msgtype":"m.text"},"ts":1496116054000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: are you OOO for a while? would like to get https://github.com/whatwg/fullscreen/pull/90 merged","msgtype":"m.text"},"ts":1496132772000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I think he said above that he's mostly on vacation through July.","msgtype":"m.text"},"ts":1496143721000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"So I'm struggling quite a bit with focus. Trying to stop sensors from running when a browsing context looses focus. Is there a way to spec that?","msgtype":"m.text"},"ts":1496151131000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"More specifically when a top-level browsing context looses focus.","msgtype":"m.text"},"ts":1496151188000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm not even looking for something I could hook on as I was the last time I mentioned this here.","msgtype":"m.text"},"ts":1496151217000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Just normative language to say: \"when focus is on another top-level browsing context, stop the sensors.\"","msgtype":"m.text"},"ts":1496151264000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Answering my own question for the sake of others: https://html.spec.whatwg.org/#has-focus-steps","msgtype":"m.text"},"ts":1496155562000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"does anyone know if it is possibly to disable support for custom elements in Chrome?","msgtype":"m.text"},"ts":1496156630000,"senderName":"smaug","senderId":"smaug@irc"},
{"content":{"body":"https://www.irccloud.com/pastebin/HnC4oguM/","msgtype":"m.text"},"ts":1496159962000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"^ 1, 2, or 3?","msgtype":"m.text"},"ts":1496159970000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"so, uh... https://wiki.whatwg.org/wiki/Specs/style vs. https://wiki.whatwg.org/wiki/Style vs. https://infra.spec.whatwg.org/","msgtype":"m.text"},"ts":1496162311000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"tobie: #2 for simple things like that; #1 if the clause is more complicated and explicitly invoking an if/then/else structure helps with comprehensibility.","msgtype":"m.text"},"ts":1496166020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Never ever #3, imo.","msgtype":"m.text"},"ts":1496166029000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: I think the \"has focus steps\" don't do what we want: what's \"the\" top-level browsing context? I think every tab has one, even non-focused tabs, and tabs in minimized windows.","msgtype":"m.text"},"ts":1496166644000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1496166687000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"+1 for Tab's \", return\" preference.","msgtype":"m.text"},"ts":1496166723000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Always make your grammar as simple as you can, but no simpler. ^_^","msgtype":"m.text"},"ts":1496166767000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Check if |foo|. If |foo| was true, continue executing the following steps. Otherwise, return and do not continue executing the following steps.\"","msgtype":"m.text"},"ts":1496166839000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Perfect.","msgtype":"m.text"},"ts":1496166868000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"fantasai and I go to pretty extensive lengths to make sure we're using grammar well and simply; in particular, we focus heavily on using parallel structure to help highlight similarities between branches of an algorithm, so the differences stand out more strongly.","msgtype":"m.text"},"ts":1496166990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: not sure what you mean re has focus steps. Why isn't it a right fit?","msgtype":"m.text"},"ts":1496167169000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: oh shoot. How did I miss that? How is this algorithm even correct? Arg!!!","msgtype":"m.text"},"ts":1496167334000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: It *might* be correct for the ways it's used, but yeah, it's dubious.","msgtype":"m.text"},"ts":1496167414000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"So it's called from document.hasFocus() and that works as expected","msgtype":"m.text"},"ts":1496167440000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Try running setTimeout(function() { console.log(document.hasFocus()) }, 5000) in your console","msgtype":"m.text"},"ts":1496167464000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Both while keeping focus on your console and on the main browsing context.","msgtype":"m.text"},"ts":1496167495000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin:","msgtype":"m.text"},"ts":1496167504000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"^","msgtype":"m.text"},"ts":1496167507000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It should probably read: Let candidate be the Document of the *current* top-level browsing context.","msgtype":"m.text"},"ts":1496167595000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Or something like that.","msgtype":"m.text"},"ts":1496167612000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Yep, so the spec just doesn't match implementations? I think there should be some notion of a focused top-level browsing context. There might not be any, when a non-browser application is focused. I prefer \"focused\" instead of \"current\" because we could have more notions of \"current\".","msgtype":"m.text"},"ts":1496167760000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: no, I think the spec lacks clarity: if you read step 1 as: Let candidate be the Document of the CURRENTLY FOCUSED top-level browsing context, then in step 2, candidate is NOT target, and thus you end up at the last line: Otherwise, return false and abort these steps.","msgtype":"m.text"},"ts":1496169437000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"It's still wrong to assume that a currently focused top-level browsing context exists. ... I think https://html.spec.whatwg.org/multipage/interaction.html#focus needs to describe the concept.","msgtype":"m.text"},"ts":1496169795000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I am recovering from a week of hosting TC39 + a weekend-plus of being sick, so if there are things I've missed that should jump to the front of the queue, let me know.","msgtype":"m.text"},"ts":1496172193000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"foolip: if xidorn reviewed just merge","msgtype":"m.text"},"ts":1496172605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: someone else reviewing is fine too, just at least one","msgtype":"m.text"},"ts":1496172635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: What makes something an \"attribute\" in terms of the HTML spec?","msgtype":"m.text"},"ts":1496175422000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"I'm wondering if https://html.spec.whatwg.org/multipage/workers.html#dom-workerglobalscope-closing actually is an attribute, or if the markup needs to be changed to make it a \"dfn\" (which seems imprecise, according to the Bikeshed documentation)","msgtype":"m.text"},"ts":1496175507000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: that looks like an internal slot to me.","msgtype":"m.text"},"ts":1496175689000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: It's still wrong to assume that a currently focused top-level browsing context exists. ... I think <-- this is related: https://github.com/whatwg/html/issues/2716.","msgtype":"m.text"},"ts":1496175773000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: in that case, I guess it's type ought to be \"dfn\"","msgtype":"m.text"},"ts":1496175803000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"jugglinmike: that's sort of spec-specific for now.","msgtype":"m.text"},"ts":1496175833000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jugglinmike: afaik","msgtype":"m.text"},"ts":1496175841000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jugglinmike: TabAtkins recommended I used <dfn attribute for=[INTERFACE]>\\[[SLOT_NAME]]</dfn>","msgtype":"m.text"},"ts":1496175933000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jugglinmike: but you should follow the conventions in the spec you're editing","msgtype":"m.text"},"ts":1496175953000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: I think HTML doesn't have a clear concept of one focused browsing-context per user agent (though has focus steps is close) and one focused app per operating system.","msgtype":"m.text"},"ts":1496176029000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"jyasskin: both need fixing. Along with the hooks of when this stuff happens","msgtype":"m.text"},"ts":1496176046000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1496176522000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Yeah, it's an internal slot, which is *typed* as an attribute, but with double-square-brackets around its name.","msgtype":"m.text"},"ts":1496180427000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or it can be just be a dfn attached to the interface, in which case you just add an explicit data-dfn-type=dfn to it.","msgtype":"m.text"},"ts":1496180453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Either works, match convention as tobie says.","msgtype":"m.text"},"ts":1496180460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jugglinmike: ^^^","msgtype":"m.text"},"ts":1496180466000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks TabAtkins. I've submitted a patch for the latter","msgtype":"m.text"},"ts":1496181014000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"ah, but you know that by now :P","msgtype":"m.text"},"ts":1496181040000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Heh, yup.","msgtype":"m.text"},"ts":1496181044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How do you all specify initial values of internal slots?","msgtype":"m.text"},"ts":1496183060000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Actually set it in the constructor?","msgtype":"m.text"},"ts":1496183074000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Or just have a bit of text that says: the initial value of foo is bar?","msgtype":"m.text"},"ts":1496183113000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Or: \"foo is bar unless specified otherwise\"?","msgtype":"m.text"},"ts":1496183135000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I set it in the constructor.","msgtype":"m.text"},"ts":1496183145000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I treat internal slots exactly as attributes that just happen to only be available in spec-ese.","msgtype":"m.text"},"ts":1496183157000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: do you queue a task to set it?","msgtype":"m.text"},"ts":1496183164000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"No?","msgtype":"m.text"},"ts":1496183169000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1496183175000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do we have examples of specs that go remove tasks from the task queue?","msgtype":"m.text"},"ts":1496185445000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Context is a new sensor reading has been received and a task has been queued to update an internal slot and fire an event…","msgtype":"m.text"},"ts":1496185529000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"But then the browsing context looses focus (before the task has been completed) and we want to stop transmitting readings","msgtype":"m.text"},"ts":1496185614000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Didn't we decide the idea was the task should check if it still has focus, and if not, just return early?","msgtype":"m.text"},"ts":1496185781000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"tobie: ^","msgtype":"m.text"},"ts":1496185788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Mmm. That's a good point.","msgtype":"m.text"},"ts":1496185926000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: I've had a long day trying to convince people that it wasn't because the spec said to check for focus (and visibility status) before each reading that implementations weren't able to optimize this.","msgtype":"m.text"},"ts":1496186285000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh fun times","msgtype":"m.text"},"ts":1496186304000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah :-/","msgtype":"m.text"},"ts":1496186350000,"senderName":"tobie","senderId":"tobie@irc"}
]