[
{"content":{"body":"hsivonen: I hope the validator.nu instability isn't related to any changes I made to the sources recently","msgtype":"m.text"},"ts":1401848005000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: Please let me know if I can help with troubleshooting","msgtype":"m.text"},"ts":1401848055000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I'm wondering if validator.nu might be running on a 32-bit system. If so I wonder if with the current validator codebase we might be reaching the point where it doesn't run so well on 32-bit systems.","msgtype":"m.text"},"ts":1401848227000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: All the w3c validator.nu instances I manage are running on 64-bit systems, and my local testing environment is 64 bit, so I haven't been doing much to make sure it still works on 32-bit systems.","msgtype":"m.text"},"ts":1401848371000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I have observed that jing seems to do a huge amount of recursion in order to process the current schema, and on 32 bit systems that seems to exhaust the default Java thread stack size.","msgtype":"m.text"},"ts":1401848502000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: So on 32 bit systems I think the current validator sources won't even run any longer unless you tell Java to increase the thread stack size to 512K","msgtype":"m.text"},"ts":1401848614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: for some reason http://wiki.whatwg.org/wiki/MicrosyntaxDescriptions is getting served to validator.nu as application/xml","msgtype":"m.text"},"ts":1401849237000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: $RANDOM comment:  <link rel=stylesheet scoped> plays better with CSP than <style scope>@import</style>...avoids all the nonce nonsense...am I missing something here?","msgtype":"m.text"},"ts":1401849698000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"s/scope/scoped/","msgtype":"m.text"},"ts":1401849736000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"a-ja: are you suggesting that <style scoped> should go away?","msgtype":"m.text"},"ts":1401849791000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"a-ja: because <style scoped> with an actual inline stylesheet is potentially very useful","msgtype":"m.text"},"ts":1401849805000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"perhaps an impl experience for https://www.w3.org/Bugs/Public/show_bug.cgi?id=20166","msgtype":"m.text"},"ts":1401849812000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"roc: just saying it's a PITA with CSP","msgtype":"m.text"},"ts":1401849841000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"roc: have to use 'unsafe-inine' or a nonce","msgtype":"m.text"},"ts":1401849885000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"*inline","msgtype":"m.text"},"ts":1401849892000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"roc: guess i'm arguing for scoped on link in addition to on style","msgtype":"m.text"},"ts":1401850075000,"senderName":"a-ja","senderId":"a-ja@irc"},
{"content":{"body":"Hixie: wasn't this Kyle's \"social media button\" usecase? Load the script but don't run it until mousedown or something like that","msgtype":"m.text"},"ts":1401859914000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, i got confused about precaching vs aggressivey loading.","msgtype":"m.text"},"ts":1401861641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: the Ethiquable Madagascar 85% was really nice :-)","msgtype":"m.text"},"ts":1401870842000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"takes note :)","msgtype":"m.emote"},"ts":1401870964000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: it seems people are starting to use <picture> markup about now (with picturefill). maybe time to implement it in v.nu (with a warning that it's not shipped in browsers yet)?","msgtype":"m.text"},"ts":1401871370000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: srcset with x descriptor is shipped, but the other stuff not yet","msgtype":"m.text"},"ts":1401871427000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Does anyone know where hallvors hangs out these days?","msgtype":"m.text"},"ts":1401872995000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe the mozilla server.","msgtype":"m.text"},"ts":1401873018000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Oh, I was being dumb","msgtype":"m.text"},"ts":1401873079000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hands out the party hats","msgtype":"m.emote"},"ts":1401875312000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"we get party hats?","msgtype":"m.text"},"ts":1401875802000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Yes. And there will be cake.","msgtype":"m.text"},"ts":1401875874000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2004-June/211753.html)","msgtype":"m.text"},"ts":1401875947000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oooh","msgtype":"m.text"},"ts":1401876146000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'd written that down and then forgot about it","msgtype":"m.text"},"ts":1401876154000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"happy birthday :)","msgtype":"m.text"},"ts":1401876166000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"üéâ","msgtype":"m.text"},"ts":1401876721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"üç∞ for jgraham","msgtype":"m.text"},"ts":1401876820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, a U+FFFD, just what I always wanted","msgtype":"m.text"},"ts":1401876954000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it might be displayed as such, but isn't it what's underneath that matters?","msgtype":"m.text"},"ts":1401877454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mpt: why the WhatWG casing?","msgtype":"m.text"},"ts":1401877600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, long-standing house style ‚Äî no acronym with pronouncable portions can have more than three capital letters (cf. Pantone, Nasa, Unicef)","msgtype":"m.text"},"ts":1401877757000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"mpt: your house style?","msgtype":"m.text"},"ts":1401877795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes. :) Otherwise it‚Äôs just a cheap way for organizations to grab attention by claiming that their name is entirely capitalized.","msgtype":"m.text"},"ts":1401877824000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"i'd prefer all-lowercase if you want less attention-grabbing :-P","msgtype":"m.text"},"ts":1401879391000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Haha","msgtype":"m.text"},"ts":1401881236000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"html-wg chair asks for volunteer to do actual work","msgtype":"m.text"},"ts":1401881275000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Only response is \"maybe we can look for someone else to do it\"","msgtype":"m.text"},"ts":1401881294000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: pointer?","msgtype":"m.text"},"ts":1401881331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/mid/6f4822f9ac664bd6bdd52ab323882713‚äôBnpoc","msgtype":"m.text"},"ts":1401881371000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"To be afir he didn't ask all that long ago","msgtype":"m.text"},"ts":1401881379000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So maybe someone will step forward","msgtype":"m.text"},"ts":1401881386000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I wouldn't bet on it","msgtype":"m.text"},"ts":1401881428000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.macrumors.com/2014/06/03/lighting-cable-headphone-mfi/ hmm, headphone jack to become obsolete","msgtype":"m.text"},"ts":1401882750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"colour me skeptical","msgtype":"m.text"},"ts":1401882827000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: I wonder why they don't take guidance from their mode of operation and fork some existing tests","msgtype":"m.text"},"ts":1401882829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I presume the problem is that there isn't anything to copy","msgtype":"m.text"},"ts":1401882880000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So nothing is happening","msgtype":"m.text"},"ts":1401882887000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I doubt they landed without tests","msgtype":"m.text"},"ts":1401882898000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Oh well if you mean like that, it's not a bad suggestion. Except everyone's existing tests are so ghettoised that porting them is also a huge amount of work","msgtype":"m.text"},"ts":1401883574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Are there any difference between these two WebIDL fragments: https://gist.github.com/tobie/5e89cd37dd8b819905c4 ?","msgtype":"m.text"},"ts":1401888420000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(Outside of the fact that the NoInterfaceObject one can be reused in multiple interfaces)","msgtype":"m.text"},"ts":1401888453000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I think not","msgtype":"m.text"},"ts":1401888571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"However, this bit of IDL is super tricky and could use clearer wording and such","msgtype":"m.text"},"ts":1401888596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can't that be said pretty much of each bit of idl?","msgtype":"m.text"},"ts":1401888735000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: a lot is quite clear, it's just that this implements/interface/[NoInterfaceObject]/partial interface/... is a bit of a pain","msgtype":"m.text"},"ts":1401889041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: now that we know the requirements we can come up with something better","msgtype":"m.text"},"ts":1401889053000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1401889059000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: and there's some suggestions in some bug on how to do that","msgtype":"m.text"},"ts":1401889069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1401889077000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I find input types of function extremely unintuitive too.","msgtype":"m.text"},"ts":1401889426000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'm still unsure whether foo(DOMString bar) means it'll throw or type coerce when passed say an object.","msgtype":"m.text"},"ts":1401889529000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Coerce","msgtype":"m.text"},"ts":1401889750000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: I've been struck by a mystery food illness, so I've spent the morning lying in bed thinking about preflight requests triggered by the page. Think there's a security issue. Page makes XHR request with fancy headers, SW responds \"yeeeep, go ahead\" to the preflight, then allows the subsequent CORS request to hit the network.","msgtype":"m.text"},"ts":1401889759000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Circumvented CORS preflight","msgtype":"m.text"},"ts":1401889768000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Don't think preflight requests should ever go to the SW","msgtype":"m.text"},"ts":1401889823000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: agreed","msgtype":"m.text"},"ts":1401889830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but the request should go to the SW before the preflight","msgtype":"m.text"},"ts":1401889848000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"tobie: yeah it's not great","msgtype":"m.text"},"ts":1401889864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the preflight is only to ensure the server knows about CORS, I think we can assume that in case of SW","msgtype":"m.text"},"ts":1401889888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so when does it coerce and when does it throw?","msgtype":"m.text"},"ts":1401889922000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Which server?","msgtype":"m.text"},"ts":1401889946000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: any","msgtype":"m.text"},"ts":1401889962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie, when there's a sensible coercion, I guess","msgtype":"m.text"},"ts":1401889987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: so we need to alter http://fetch.spec.whatwg.org/#cors-fetch-with-preflight somehow","msgtype":"m.text"},"ts":1401889991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: haha","msgtype":"m.text"},"ts":1401889993000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: You only need to preflight if SW doesn't handle the request","msgtype":"m.text"},"ts":1401890029000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Ms2ger: So what exactly does input types tell us?","msgtype":"m.text"},"ts":1401890041000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie, what type you'll get after WebIDL has done its thing","msgtype":"m.text"},"ts":1401890072000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: I guess that algorithm needs a step 0 to invoke \"handle a fetch\"","msgtype":"m.text"},"ts":1401890098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed","msgtype":"m.text"},"ts":1401890125000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: and a flag to prevent preflights going into the SW","msgtype":"m.text"},"ts":1401890155000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and then in addition we need to annotate the request object to make sure that in step 3 it does not ask the SW again","msgtype":"m.text"},"ts":1401890158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1401890163000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Bit unfortunate we need to have separate places for SW integration","msgtype":"m.text"},"ts":1401890221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: so when I say foo(DOMString s), what that means implementation wise is: coerce whatever you get into a DOMString.","msgtype":"m.text"},"ts":1401890239000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it means ToString(s)","msgtype":"m.text"},"ts":1401890276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: see http://heycam.github.io/webidl/#es-DOMString","msgtype":"m.text"},"ts":1401890319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Stupid question, but why don't we write:  foo(ToString(s))?","msgtype":"m.text"},"ts":1401890392000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: because IDL is based on OMGIDL","msgtype":"m.text"},"ts":1401890420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: unless we continue to send preflights to the SW, but if the SW handles the preflight it must also handle the main request. Feels tricky to reason about though.","msgtype":"m.text"},"ts":1401890472000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"having the SW handle preflights feels too tricky","msgtype":"m.text"},"ts":1401890513000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it doesn't make much sense either","msgtype":"m.text"},"ts":1401890525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1401890549000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan: I've already implemented the schema support for <picture>/<source> and updated the schema for <img> with @sizes and @srcset","msgtype":"m.text"},"ts":1401890566000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: https://github.com/validator/syntax/compare/picture","msgtype":"m.text"},"ts":1401890569000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: oh. nice!","msgtype":"m.text"},"ts":1401890604000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: well that part was easy. What remains is that I need to implement error-reporting parsing support for @sizes and @srcset","msgtype":"m.text"},"ts":1401890613000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<picture>? yuck","msgtype":"m.text"},"ts":1401890629000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zcorpan: I plan to work on that this weekend","msgtype":"m.text"},"ts":1401890640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tobie, because you don't have a \"ToString\" after you're done?","msgtype":"m.text"},"ts":1401890643000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: these should be invalid https://gist.github.com/jeremys/73817e90bc3cf83aa4c5","msgtype":"m.text"},"ts":1401890693000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie, but let's assume foo(ToString(s)) makes sense. What do you do for 'DOMString?'?","msgtype":"m.text"},"ts":1401890716000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what do you mean?","msgtype":"m.text"},"ts":1401890738000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"MikeSmith: \"When a source element is a child of a picture element and has a following sibling source element or img element with a srcset attribute specified, it must have at least one of the following:\" http://picture.responsiveimages.org/#the-source-element","msgtype":"m.text"},"ts":1401890742000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie, foo(DOMString? arg)","msgtype":"m.text"},"ts":1401890752000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, hadn't see the double \"?\" sorry","msgtype":"m.text"},"ts":1401890790000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":" foo(ToString(s?))","msgtype":"m.text"},"ts":1401890815000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"no sorry: foo(ToString(s)?)","msgtype":"m.text"},"ts":1401890860000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"zcorpan: yeah there are some really unusual doc-conformance contraints in the picture spec. I'll need to write some custom code for those. There's no way to express them in the schema.","msgtype":"m.text"},"ts":1401890895000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: feedback welcome if something is insane","msgtype":"m.text"},"ts":1401890933000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: my feedback for now is, there's no precedent in the HTML for at least one of those constraints","msgtype":"m.text"},"ts":1401890990000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: can't remember which one, but maybe it's the one you quoted above","msgtype":"m.text"},"ts":1401891009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: thing is, generally input types described allowed types, while we're using them here to describe transformations to any type.","msgtype":"m.text"},"ts":1401891020000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foo(ToString(s)?) doesn't make any sense to me","msgtype":"m.text"},"ts":1401891094000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: i guess we can make it slightly simpler like require media to be present regardless of its value","msgtype":"m.text"},"ts":1401891097000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"It's not a type you're converting to, and it's not an algorithm","msgtype":"m.text"},"ts":1401891112000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, ToString() is the shorthand for an algorithm, no?","msgtype":"m.text"},"ts":1401891213000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring","msgtype":"m.text"},"ts":1401891252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Anyway, until someone maintains IDL chatting about it is rather moot","msgtype":"m.text"},"ts":1401891301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: well I suspect those contraints are symptoms or consequences indicating that authoring <picture><source> correctly is error-prone, so authors are going to make a lot of mistakes","msgtype":"m.text"},"ts":1401891321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: so it'll be nice to have validator support to help them catch the mistakes","msgtype":"m.text"},"ts":1401891341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: it's not that simple I think","msgtype":"m.text"},"ts":1401891379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: one constraint I guess you know we can't practically check is the one that says the specified dimensions have to match the intrinsic dimensions of the image (or whatever case where that's required)","msgtype":"m.text"},"ts":1401891420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it's a bit hard to grasp how the stuff works and things have changed from e.g. the current TR/ version so yeah some pointers from the validator would be great","msgtype":"m.text"},"ts":1401891422000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: \"HTTP fetch\" does a bunch of things to a request we would want to do in this case as well before passing it to the SW","msgtype":"m.text"},"ts":1401891445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: yeah. html has something similar for the width=\"\" attribute","msgtype":"m.text"},"ts":1401891452000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: could be checked for in devtools though when the image is loaded","msgtype":"m.text"},"ts":1401891479000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1401891486000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I mean, we could check it in the validator. it's possible. But I think it would not be a good idea due to the performance cost","msgtype":"m.text"},"ts":1401891541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: hmm, so it needs to prep the final request, send it to the SW, if unhandled or default() do the preflight before making the final request","msgtype":"m.text"},"ts":1401891544000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: agree","msgtype":"m.text"},"ts":1401891565000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: and if it's handled, we want the normal \"HTTP fetch\" handling for the response I think","msgtype":"m.text"},"ts":1401891713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: anyway, thanks for that URL. I guess you know we're rightly going to need a lot of validator tests for this at some point. Ideally would be nice to have some while I'm implementing the validator support but that would require me to stop and write them first. So I'm going to forge ahead without them for now. I'm sure that's considered a sin, but I'm a sinner already so oh well","msgtype":"m.text"},"ts":1401891772000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: agreed","msgtype":"m.text"},"ts":1401891776000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: that's fine :-)","msgtype":"m.text"},"ts":1401891798000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: it almost seems this algorithm should be merged into \"HTTP fetch\" as an additional flag","msgtype":"m.text"},"ts":1401891816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: i can write some tests tomorrow maybe","msgtype":"m.text"},"ts":1401891817000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: which people hate, but it would handle all the cases","msgtype":"m.text"},"ts":1401891853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Why the hate?","msgtype":"m.text"},"ts":1401891886000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess it's like one long function rather than a separate one for CORS preflight","msgtype":"m.text"},"ts":1401891915000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: sure, though, tbh, I'm still at the \"trying to figure it out\" phase at this point.","msgtype":"m.text"},"ts":1401891919000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"JakeA: not sure if there's much hate, but in general it would be less readable than having nice short functions","msgtype":"m.text"},"ts":1401891919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1401891925000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1401891928000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"zcorpan: that'd be great if you can make time. I'll be a plane pretty much all day on Sunday so I'm planning to use that time to try to get most of the srcset/sizes parsing+reporting part done","msgtype":"m.text"},"ts":1401891938000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: I don't really see a good alternative though","msgtype":"m.text"},"ts":1401891948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: i hope you'll be able to transform back into MikeSmith afterwards","msgtype":"m.text"},"ts":1401891989000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1401892031000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: yeah I see I forgot the hyphen, \"I'll be a-plane all day\"","msgtype":"m.text"},"ts":1401892087000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: If I make a cross-origin XHR request, but respondWith a non-opaque response, can we skip the CORS check?","msgtype":"m.text"},"ts":1401892128000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: because .respondWith(new Request(\"Hello!\")) would fail at the moment wouldn't it?","msgtype":"m.text"},"ts":1401892152000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I was wondering why darobin was asking about document.origin rather than the myriad of other features in DOM with poor implementations support. Seems Glenn Adams made a test case","msgtype":"m.text"},"ts":1401892177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: i don't know what a-plane means :-(","msgtype":"m.text"},"ts":1401892178000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: indeed","msgtype":"m.text"},"ts":1401892223000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but more generally I was wondering why something that strikes me as useful and not hard to implement wasn't there","msgtype":"m.text"},"ts":1401892252000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: exhibit n as to why things are broken over there","msgtype":"m.text"},"ts":1401892253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: yeah, I think it would be great if we made that work","msgtype":"m.text"},"ts":1401892289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I care about solutions ‚Äî exhibits? *yawn*","msgtype":"m.text"},"ts":1401892290000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: some quaint archaic verb form, like \"He was a-horse in battle when he met his end\", meaning he was riding a hore","msgtype":"m.text"},"ts":1401892330000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"riding a, err...","msgtype":"m.text"},"ts":1401892350000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JakeA: I haven't really gotten there yet","msgtype":"m.text"},"ts":1401892353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess step 11 nees to be part of the \"if\" in step 10","msgtype":"m.text"},"ts":1401892354000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: ok :-)","msgtype":"m.text"},"ts":1401892381000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"riding a hore?","msgtype":"m.text"},"ts":1401892396000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"won't presume which letter is missing there","msgtype":"m.emote"},"ts":1401892408000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"annevk: no worries, just spotting stuff as I see it","msgtype":"m.text"},"ts":1401892421000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah yes, that prolly makes sense, only do CORS checks for network retrieved resources","msgtype":"m.text"},"ts":1401892451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"am I the only one completely bewildered by bugs like \"Define code values for the special keys on Sun keyboard\"","msgtype":"m.text"},"ts":1401892514000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"MikeSmith: Nice try, but your secret identity as transformer and star of a franchise of terrible* films has been revealed (*probably. I haven't ever watched them.)","msgtype":"m.text"},"ts":1401892517000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: If the original request has a CORS flag, you'll still want to error on tainted responses from the SW","msgtype":"m.text"},"ts":1401892519000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, wasn't sure if we should do that in the network layer or the API layer, fetch layer prolly makes sense","msgtype":"m.text"},"ts":1401892595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/network/fetch/","msgtype":"m.text"},"ts":1401892605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: terrible in the Ivan the Terrible sense yeah","msgtype":"m.text"},"ts":1401892705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: okay so I guess I need to merge those two algorithms","msgtype":"m.text"},"ts":1401893293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: CORS fetch with preflight and HTTP fetch, unless you see another way","msgtype":"m.text"},"ts":1401893311000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess I'll introduce a \"CORS preflight flag\" that'll be set and it'll take care of the necessary branching","msgtype":"m.text"},"ts":1401893662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I can't think of another way, seems like the best plan","msgtype":"m.text"},"ts":1401893689000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: https://twitter.com/tabatkins/status/474207822620921856 - tell me more sir","msgtype":"m.text"},"ts":1401895157000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TabAtkins: Sounds like what you want is a fetch that uses credentials & become non-tainted if CORS headers are there, but doesn't fail if CORS headers are absent. I don't think this happens anywhere already, but I want it for serviceworkers","msgtype":"m.text"},"ts":1401895903000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://twitter.com/jaffathecake/status/474212681839575040 use crossorigin=use-credentials","msgtype":"m.text"},"ts":1401896146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nooo, not more modes :-(","msgtype":"m.text"},"ts":1401896165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where's use-credentials mentioned? Makes sense, but I can't find it on http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#attr-link-crossorigin","msgtype":"m.text"},"ts":1401896295000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: follow the link from there to http://www.whatwg.org/specs/web-apps/current-work/multipage/fetching-resources.html#cors-settings-attribute","msgtype":"m.text"},"ts":1401896319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Gotcha!","msgtype":"m.text"},"ts":1401896344000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: In terms of the extra mode, I'm concerned about how complicated caching a cross-domain resource is currently. But if anything, I hope to get to the bottom of why img responses with CORS headers (including credentials) must still be tainted","msgtype":"m.text"},"ts":1401897450000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: caching those would be hard anyway as that requires more than just using a wildcard","msgtype":"m.text"},"ts":1401898811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: What does it need on top of Access-Control-Allow-Credentials: true?","msgtype":"m.text"},"ts":1401898947000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: to make sure the headers are not static","msgtype":"m.text"},"ts":1401898969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we don't want it to be trivial to expose credentialed resources","msgtype":"m.text"},"ts":1401898988000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean by \"static\" headers?","msgtype":"m.text"},"ts":1401899176000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: headers which you could include without doing something conditional","msgtype":"m.text"},"ts":1401899221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm surprised you don't know about CORS","msgtype":"m.text"},"ts":1401899284000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder how many other developers don't","msgtype":"m.text"},"ts":1401899292000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: It's not something I've used a whole lot, so I'm rusty on the headers. However, see http://vimeo.com/77497239#t=48m10s","msgtype":"m.text"},"ts":1401899680000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the room on average does really badly in those questions","msgtype":"m.text"},"ts":1401899758000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks for that","msgtype":"m.text"},"ts":1401900008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: third question is fun","msgtype":"m.text"},"ts":1401900026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is that the text/plain one?","msgtype":"m.text"},"ts":1401900053000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yeah, ah, you gave the next one away at the end","msgtype":"m.text"},"ts":1401900065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"most people still got it wrong","msgtype":"m.text"},"ts":1401900098000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1401900130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I guess they needed that tip","msgtype":"m.text"},"ts":1401900135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/whatwg/fetch/commit/7fd1a7a34edf06e230d99523190e0e8c059ebd01","msgtype":"m.text"},"ts":1401900785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I don't want setting .body to work","msgtype":"m.text"},"ts":1401900828000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not without something that gives guarantees of .body = x; .body == x","msgtype":"m.text"},"ts":1401900845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: agreed, would be nice if you could set body but happy to throw if it isn't a stream","msgtype":"m.text"},"ts":1401901021000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: changes look good, will take a closer look tomorrow when I'm (hopefully) not all food poisoned","msgtype":"m.text"},"ts":1401901122000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: I think you've been asking for something like this: http://globau.wordpress.com/2014/06/04/bugzilla-can-now-show-bugs-that-have-been-updated-since-you-last-visited-them/","msgtype":"m.text"},"ts":1401902372000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"not exactly what you wanted, but closer","msgtype":"m.text"},"ts":1401902379000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"jorendorff: so i think what i'm going to try to do is write up a description of how the Loader thing works, first. rather than try to just jump to writing extensions of it.","msgtype":"m.text"},"ts":1401909722000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. ping me on irc if you need anything, i suck at email","msgtype":"m.text"},"ts":1401909998000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie: description of how the Loader works at a spec level?","msgtype":"m.text"},"ts":1401910027000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"yeah, like, writing an alternative equivalent spec for what there is now","msgtype":"m.text"},"ts":1401910048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"from what i understand, what there is now is literally generated from code","msgtype":"m.text"},"ts":1401910069000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which imho makes it hard to understand","msgtype":"m.text"},"ts":1401910078000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(might be easier to just read the original code, actually)","msgtype":"m.text"},"ts":1401910091000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, it's not literally generated from code, but the code did precede the text.","msgtype":"m.text"},"ts":1401910342000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Adhering to ES spec conventions instead of using prose (or, inventing new conventions) is a big part of how awful it is","msgtype":"m.text"},"ts":1401910491000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(I wrote a bunch of that, but don't tell anyone)","msgtype":"m.text"},"ts":1401910514000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"(Alan Smithee wrote it)","msgtype":"m.text"},"ts":1401910539000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"examples and non-normative colour would go a long way :-)","msgtype":"m.text"},"ts":1401910612000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1401910730000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"non-normative what the hell is this thing would go a long way","msgtype":"m.text"},"ts":1401910743000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"on the individual parts","msgtype":"m.text"},"ts":1401910756000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"indeed many parts of that spec could use that kind of love","msgtype":"m.text"},"ts":1401910764000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"terrible spec style, but at least it tells you what to do instead of describing what the result should be, like way too many specs","msgtype":"m.text"},"ts":1401911139000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"jorendorff: ok let's start with teh simplest question, i guess. Where do I start? Do I tell the ES system that I want to run a script (not a module) with a particular URL, or do I hand it some source?","msgtype":"m.text"},"ts":1401911876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"assuming just regular old <script> for now","msgtype":"m.text"},"ts":1401911890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you want to know how <script> talks to the ES spec? looking","msgtype":"m.text"},"ts":1401913277000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"http://people.mozilla.org/~jorendorff/es6-draft.html#sec-runtime-semantics-scriptevaluation","msgtype":"m.text"},"ts":1401913321000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"note the NOTE","msgtype":"m.text"},"ts":1401913324000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"so the answer to my question is i hand it some source, right?","msgtype":"m.text"},"ts":1401913443000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and presumably decided to Unicode? the ES spec doesn't do any character encoding conversion, right?","msgtype":"m.text"},"ts":1401913554000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"decoded","msgtype":"m.text"},"ts":1401913558000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not decided","msgtype":"m.text"},"ts":1401913560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jorendorff: how does http://people.mozilla.org/~jorendorff/es6-draft.html#sec-initialization fit into this?","msgtype":"m.text"},"ts":1401913756000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm. that section is relatively new","msgtype":"m.text"},"ts":1401913952000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"I don't know.","msgtype":"m.text"},"ts":1401913957000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie: when I want to understand how this works i look at http://people.mozilla.org/~jorendorff/es6-draft.html#sec-eval-x","msgtype":"m.text"},"ts":1401913982000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie: an indirect call to eval is very much like <script>","msgtype":"m.text"},"ts":1401914032000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie: even though it *looks* like character encoding conversion is happening there, it's really just saying \"decode this string of 16-bit code units to unicode, using UTF-16\"","msgtype":"m.text"},"ts":1401914308000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"that sounds like a conversion to me :)","msgtype":"m.text"},"ts":1401914510000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(\"decode 16-bit units to unicode using utf-16\" says \"collapse surrogate pairs to single unicode codepoints\" to me)","msgtype":"m.text"},"ts":1401914545000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: yes, it is a conversion, but not in the sense hixie meant","msgtype":"m.text"},"ts":1401914778000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"the spec wants you to give it unicode, not bytes","msgtype":"m.text"},"ts":1401914798000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"confirmed","msgtype":"m.text"},"ts":1401914823000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"jorendorff: yeah but for eval you don't have to create a realm and so on, right?","msgtype":"m.text"},"ts":1401915464000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it seems to me like #sec-initialization is the thing that's trying to define how <script>s work in a web page","msgtype":"m.text"},"ts":1401915485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though it doesn't really map that cleanly","msgtype":"m.text"},"ts":1401915493000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you don't create a realm for each <script> either","msgtype":"m.text"},"ts":1401915506000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1401915513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hence the #sec-initialization step 7","msgtype":"m.text"},"ts":1401915524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i've no idea what step 8 means","msgtype":"m.text"},"ts":1401915538000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i doubt steps 7 and 8 actually describe what happens on the web","msgtype":"m.text"},"ts":1401915551000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm glad you know what step 7 is about because i sure don't","msgtype":"m.text"},"ts":1401915556000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"\"synchronously obtain source code\" wat","msgtype":"m.text"},"ts":1401915565000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"well i'm just guessing","msgtype":"m.text"},"ts":1401915566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it doesn't say it's synchronous","msgtype":"m.text"},"ts":1401915577000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it says \"In an implementation dependent manner\"","msgtype":"m.text"},"ts":1401915582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have more of a problem with step 8","msgtype":"m.text"},"ts":1401915589000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder how step 5 can be abrupt","msgtype":"m.text"},"ts":1401915640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"seems to me that if http://people.mozilla.org/~jorendorff/es6-draft.html#sec-setdefaultglobalbindings fails when no script has yet run, you have a bad situation on your hands...","msgtype":"m.text"},"ts":1401915680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: abstractly, the realm and global for a given document are created super early, before parsing really even starts","msgtype":"m.text"},"ts":1401915742000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"Hixie: parsing, abstractly, adds DOM objects to the doctree, right?","msgtype":"m.text"},"ts":1401915754000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"doesn't really know","msgtype":"m.emote"},"ts":1401915759000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"very abstractly, es","msgtype":"m.text"},"ts":1401915768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1401915769000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML has tons of prose around how <script>s execute","msgtype":"m.text"},"ts":1401915782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i don't have anything about realms","msgtype":"m.text"},"ts":1401915787000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if so, and those are JS objects, then the realm has to exist first, for those objects to have suitable prototype chains","msgtype":"m.text"},"ts":1401915789000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i do create the global","msgtype":"m.text"},"ts":1401915790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one would imagine","msgtype":"m.text"},"ts":1401915803000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the realm is really just the global and all that javascripty stuff","msgtype":"m.text"},"ts":1401915805000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"so this initialization happens super early","msgtype":"m.text"},"ts":1401915814000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sadly it's not _all_ that javascripty stuff","msgtype":"m.text"},"ts":1401915816000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. it doesn't include the script settings object","msgtype":"m.text"},"ts":1401915823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is critical for certain web apis to be defined accurately","msgtype":"m.text"},"ts":1401915848000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's another story","msgtype":"m.text"},"ts":1401915850000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"#sec-initialization really doesn't match the web","msgtype":"m.text"},"ts":1401915881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"steps 7 and 8 don't work like that at all","msgtype":"m.text"},"ts":1401915888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for sure","msgtype":"m.text"},"ts":1401915902000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"i guess HTML should run steps 1-5 of that algorithm","msgtype":"m.text"},"ts":1401915910000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: both specs assuming they are in control of the event loop is not really tenable","msgtype":"m.text"},"ts":1401915932000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"well that's another problem too, yeah","msgtype":"m.text"},"ts":1401915941000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one thing at a time though!","msgtype":"m.text"},"ts":1401915944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, that's what step 8 signifies to me: this spec thinks it knows how to start processing tasks","msgtype":"m.text"},"ts":1401915990000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"step 8 is wrong for more reasons than just that","msgtype":"m.text"},"ts":1401916052000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this algorithm implies that all the scripts are piled up, then all executed","msgtype":"m.text"},"ts":1401916061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's simply not how it works","msgtype":"m.text"},"ts":1401916064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for example, in <script></script><script></script>, between the two scripts executing, the DOM is modified.","msgtype":"m.text"},"ts":1401916089000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jorendorff: btw where do i report typos? \"When the abstract operation CreateIntrinsics with argument realmRec performs the following:\" is grammatically dubious","msgtype":"m.text"},"ts":1401916321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also step 12 of CreateIntrinsics has the wrong font","msgtype":"m.text"},"ts":1401916372000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and that algorithm references CreateBuildinFunction should seems to not exist","msgtype":"m.text"},"ts":1401916412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: bugs.ecmascript.org for typos; wrong font in PDF, same place","msgtype":"m.text"},"ts":1401916502000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"wrong font in HTML is most likely my fault and can be reported at https://github.com/jorendorff/es-spec-html/issues","msgtype":"m.text"},"ts":1401916522000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"one bug per typo, or should i coallesce?","msgtype":"m.text"},"ts":1401916578000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i always coalesce, but then when you find the next thing, file another bug, not a comment on the original","msgtype":"m.text"},"ts":1401916611000,"senderName":"jorendorff","senderId":"jorendorff@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1401916615000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jorendorff: i sent a mail to es-discuss about #sec-init","msgtype":"m.text"},"ts":1401917088000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders what the cost of getting telemetry data for lone surrogates in document.write would be","msgtype":"m.emote"},"ts":1401920326000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Probably too much. :(","msgtype":"m.text"},"ts":1401920352000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Say data like \"%\" of document.write calls containing lone surrogates)","msgtype":"m.text"},"ts":1401920369000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]