[
{"content":{"body":"mathiasbynens: thanks massively for making https://github.com/operasoftware/devopera-static-backup","msgtype":"m.text"},"ts":1468992344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mathiasbynens: the MAMA data alone is still really valuable","msgtype":"m.text"},"ts":1468992423000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mathiasbynens: case in point https://cdn.rawgit.com/operasoftware/devopera-static-backup/master/http/devfiles.myopera.com/articles/572/langlist-url.htm (which I am looking at for trying to figure out what languages to prioritize in the language detector in the HTML checker)","msgtype":"m.text"},"ts":1468992500000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Woohoo, :any-link is finally landing in Firefox (sans prefix)","msgtype":"m.text"},"ts":1468992933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No more :link:hover, :visited:hover and such","msgtype":"m.text"},"ts":1468993016000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: thanks, and sorry for breaking those URLs","msgtype":"m.text"},"ts":1468995699000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"JakeA: I think https://github.com/slightlyoff/ServiceWorker/issues/920#issuecomment-233603440 misses a few things that slightlyoff mentioned","msgtype":"m.text"},"ts":1469002189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in particular, the without SW scenario doesn't allow for creating the renderer and the fetch to happen in parallel, which is what's being suggested","msgtype":"m.text"},"ts":1469002218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in particular, this is about a new tab scenario as I understand it, not navigation within an existing tab","msgtype":"m.text"},"ts":1469002269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also, in part it is about the navigation fetch always returning new data, whereas all the subsequent fetches (and pushes) that follow from that are more likely to come from the cache","msgtype":"m.text"},"ts":1469002334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: furthermore, the with SW scenario doesn't acknowledge the implicit step 1.5, which is making the navigation fetch (and which cannot happen in parallel with creating the renderer since it needs the SW to be there)","msgtype":"m.text"},"ts":1469002427000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah, my \"With SW\" was showing how things happen today, so showing the problem not the solution","msgtype":"m.text"},"ts":1469003445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Let me make that more clear","msgtype":"m.text"},"ts":1469003452000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: yeah, I'm looking at solutions that could improve this for general navigation, new tab, and maybe even homescreen launch when the browser isn't running","msgtype":"m.text"},"ts":1469003601000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well if the browser isn't running we don't even have a network thread","msgtype":"m.text"},"ts":1469003692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The interesting bit I think is that when navigation happens we might have a network thread/process ready to go, but no render+SW thread/process","msgtype":"m.text"},"ts":1469003730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, and loading that part of the browser first can be optimised to get the request out early. Renderer & SW not so much.","msgtype":"m.text"},"ts":1469003775000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"This is really only the case for top-level browsing contexts and maybe isolated nested browsing contexts going forward","msgtype":"m.text"},"ts":1469003782000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So to some extent having an API in service workers to handle the navigation case differently doesn't feel like scenario solving to me as much","msgtype":"m.text"},"ts":1469003816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But again, maybe there are architectures where the overhead can be much less or non-existent","msgtype":"m.text"},"ts":1469003837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But my first render is still blocked on CSS, which is a subresource","msgtype":"m.text"},"ts":1469003862000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, but if that's cached and the network roundtrip takes 200ms+, you're still waiting","msgtype":"m.text"},"ts":1469003916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We can assume subresources are in the cache since we also assume the SW is installed","msgtype":"m.text"},"ts":1469003938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But the navigation is what can retrieve the interesting cookie-bound data","msgtype":"m.text"},"ts":1469003982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In Facebook's case it doesn't","msgtype":"m.text"},"ts":1469004005000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The navigation returns a shell, but it prompts the server to start preparing the user-sepcific stuff","msgtype":"m.text"},"ts":1469004029000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"specific*","msgtype":"m.text"},"ts":1469004034000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Unless I'm mistaken","msgtype":"m.text"},"ts":1469004050000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, it sounds like they mostly care about knowing as soon as possible on the server that the user is there","msgtype":"m.text"},"ts":1469004140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm just worried about solving this only for Facebook","msgtype":"m.text"},"ts":1469004160000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The closest thing we have right now is <link rel=\"preload\">, but we want that before the renderer","msgtype":"m.text"},"ts":1469004184000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The <link rel=preload> analogy continues to confuse me","msgtype":"m.text"},"ts":1469004217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"All we have to go on is a navigation request","msgtype":"m.text"},"ts":1469004239000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I actually think slightlyoff's approach is not that bad, modulo naming and optin-optout","msgtype":"m.text"},"ts":1469004339000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Currently the page loads, then they fetch(url) the user data. They want that fetch(url) request to happen sooner, but still receive it via the same mechanism. That's very similar to <link rel=\"preload\">","msgtype":"m.text"},"ts":1469004393000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It should basically be an opt-in to the \"user is going to see your app real soon now\"","msgtype":"m.text"},"ts":1469004403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it's similar, but rel=preload only makes sense if you already have a document, which we don't","msgtype":"m.text"},"ts":1469004454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But we might have. And if the navigation request doesn't produce a document, the preloads can be dropped","msgtype":"m.text"},"ts":1469004519000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We might have?","msgtype":"m.text"},"ts":1469004535000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A document","msgtype":"m.text"},"ts":1469004547000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"How?","msgtype":"m.text"},"ts":1469004552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The whole premise is that we don't","msgtype":"m.text"},"ts":1469004558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Most navigation requests result in the creation of a document","msgtype":"m.text"},"ts":1469004571000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1469004587000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And if our preloads are associated with that potential document, they can be later associated or dropped if the document doesn't appear","msgtype":"m.text"},"ts":1469004616000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't understand this","msgtype":"m.text"},"ts":1469004658000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Take https://wiki-offline.jakearchibald.com/wiki/Fictitious_entry - it serves a page shell then populates it via fetch(articleDataURL)","msgtype":"m.text"},"ts":1469004724000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That fetch is delayed by the renderer, SW, and executing the JS on the page","msgtype":"m.text"},"ts":1469004741000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The scenario we're concerned with is where the user wants to go to example.com, example.com's SW is not booted yet, example.com's document is not created yet, example.com's browsing context process is not done yet, and yet example.com wants to know as soon as possible on its server that the user is coming to them","msgtype":"m.text"},"ts":1469004761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<link rel=\"preload\"> can make that sooner, just after parsing the page. But what I'm proposing is a way to declaratively say \"When you start a navigation to this article, you need to preload articleDataURL\"","msgtype":"m.text"},"ts":1469004824000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We're roughly talking about the same thing, but I'm worried that making this a simple ping is scenario solving","msgtype":"m.text"},"ts":1469004855000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't think the user booting up an app and the OS letting the app's server know that is happening is scenario solving","msgtype":"m.text"},"ts":1469004916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But a preload achieves the same, but in addition the response is useful","msgtype":"m.text"},"ts":1469004955000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I don't think the response was thrown away necessarily","msgtype":"m.text"},"ts":1469004980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It wasn't in slightlyoff's proposal, but it's a total hack. You end up having to rely on persistence in the global scope","msgtype":"m.text"},"ts":1469005027000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That does sound problematic if true","msgtype":"m.text"},"ts":1469005058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure, the SW will *probably* still be alive for the request that needs it, but surely that's a horrible hack","msgtype":"m.text"},"ts":1469005066000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"fetchEvent.preflightResponsePromise would be on the fetchEvent for the navigation request","msgtype":"m.text"},"ts":1469005115000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But it's a completely different request that wants that response","msgtype":"m.text"},"ts":1469005124000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, I think it would make more sense to have a startup event or some such","msgtype":"m.text"},"ts":1469005149000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But you'll end up with the same problem","msgtype":"m.text"},"ts":1469005170000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That way we also only need to do it for the initial navigation to an origin (+ scope I guess)","msgtype":"m.text"},"ts":1469005183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You do something in the startup event that you want to pass to a later fetch event… you'll end up using the global","msgtype":"m.text"},"ts":1469005219000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: wouldn't you you just update the relevant storage data","msgtype":"m.text"},"ts":1469005253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"This is what led me to <link rel=\"preload\">, as it (should be) designed to handle these races","msgtype":"m.text"},"ts":1469005253000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Storage is async. Won't it race?","msgtype":"m.text"},"ts":1469005297000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it's not really clear how preloading assets helps with races if you need to do something more complicated than just returning blobs to the document","msgtype":"m.text"},"ts":1469005356000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: My routes proposal lets you do network stuff and then get a fetch event for the more complex stuff","msgtype":"m.text"},"ts":1469005436000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If we want to go that far","msgtype":"m.text"},"ts":1469005451000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But a simple startup ping that you can cache does too","msgtype":"m.text"},"ts":1469005477000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see how you can do with without a high chance of missing it due to races, especially given the time gap between these two events","msgtype":"m.text"},"ts":1469005528000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Even with cache transations","msgtype":"m.text"},"ts":1469005544000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"transactions*","msgtype":"m.text"},"ts":1469005548000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But they're not for the same resource","msgtype":"m.text"},"ts":1469005551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So either way it's complicated","msgtype":"m.text"},"ts":1469005562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You're assuming a very simple setup that seems unlikely in practice","msgtype":"m.text"},"ts":1469005605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Navigation starts, preflight ping happens, SW starts up, startup event fired & ping added to cache, fetch event for navigation - served from cache, fetch event from user data - try to get ping response from cache","msgtype":"m.text"},"ts":1469005663000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(There might be perf benefits to routes in general though. I wonder if there's been measurements on that yet.)","msgtype":"m.text"},"ts":1469005674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given cache writing is async, that seems really racey","msgtype":"m.text"},"ts":1469005692000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But is it really just a fetch event for user data?","msgtype":"m.text"},"ts":1469005702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What else is it?","msgtype":"m.text"},"ts":1469005745000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The startup ping could have some information, of which parts of the response are used for further fetches","msgtype":"m.text"},"ts":1469005787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see how that changes the issue above. You're still storing that response and pulling it out later","msgtype":"m.text"},"ts":1469005830000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wouldn't expect a 1:1 correspondence at all, that seems a lot more like scenario solving","msgtype":"m.text"},"ts":1469005834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not saying the race isn't there","msgtype":"m.text"},"ts":1469005857000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't see how your solution solves it unless you assume 1:1","msgtype":"m.text"},"ts":1469005869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can you describe the situation you're thinking of?","msgtype":"m.text"},"ts":1469005905000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"From the UDP scenario they described it seems very clear it's not just a normal resource they're looking for","msgtype":"m.text"},"ts":1469005923000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's just some data","msgtype":"m.text"},"ts":1469005927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't understand the difference","msgtype":"m.text"},"ts":1469005947000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Isn't data a resource?","msgtype":"m.text"},"ts":1469005951000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"If I request some JSON, I'm still requesting a resource","msgtype":"m.text"},"ts":1469005983000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"You're assuming the document needs to know the same stuff the service worker needs to know","msgtype":"m.text"},"ts":1469005987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm pretty sure I have what you're thinking about covered, but I don't know until you describe it","msgtype":"m.text"},"ts":1469006020000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Whereas you might well have a bunch of logic in the service worker on startup that updates various assets and such","msgtype":"m.text"},"ts":1469006055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do you mean: When a navigation happens I want another request to another url to happen and I want to handle the response in the service worker only, eg put the data in IDB","msgtype":"m.text"},"ts":1469006083000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"To put data in IDB, to make further requests, etc.","msgtype":"m.text"},"ts":1469006116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't necessarily think the request needs to go to a different URL btw","msgtype":"m.text"},"ts":1469006139000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"In my proposal you'd saying \"for this navigation, perform this preload\", and for that preload you'd set up a route that goes to the network then defers to a fetch event","msgtype":"m.text"},"ts":1469006247000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But yes, that's more complicated if we just want to do the ping thing","msgtype":"m.text"},"ts":1469006280000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And the document actually needs to make that fetch","msgtype":"m.text"},"ts":1469006307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nope","msgtype":"m.text"},"ts":1469006314000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Oh, I think I see","msgtype":"m.text"},"ts":1469006330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because it's a preload it still roundtrips through the SW?","msgtype":"m.text"},"ts":1469006342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1469006347000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Fair","msgtype":"m.text"},"ts":1469006355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's how preload works already","msgtype":"m.text"},"ts":1469006369000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So yeah, for routes I think it would be interesting to know the perf benefits beyond startup","msgtype":"m.text"},"ts":1469006380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure... But preload isn't normally triggered before there's a document","msgtype":"m.text"},"ts":1469006402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, so that'd be the new bit","msgtype":"m.text"},"ts":1469006414000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Also, preload is rather handwavy defined still","msgtype":"m.text"},"ts":1469006422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"very much so","msgtype":"m.text"},"ts":1469006427000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"There's a cache somewhere and I'd like igrigorik_ to define it","msgtype":"m.text"},"ts":1469006446000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, needing this + routes just for the Facebook case is pretty heavy","msgtype":"m.text"},"ts":1469006448000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, I want to know if it's the same cache H2 push uses too","msgtype":"m.text"},"ts":1469006474000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hmm, I guess it sits somewhere close to the HTTP cache if it goes through SW","msgtype":"m.text"},"ts":1469006517000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I guess not because preload is document-associated and H2 push isn't)","msgtype":"m.text"},"ts":1469006522000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Definitely would have to be defined in Fetch","msgtype":"m.text"},"ts":1469006530000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<link rel=\"preload\" preempt skipserviceworker> where \"preempt\" means the UA can assume this preload exists next time the user navigates to this page, and skipserviceworker skips the SW, would solve the Facebook case","msgtype":"m.text"},"ts":1469006682000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Now that is scenario solving","msgtype":"m.text"},"ts":1469006736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"preempt is useful in lots of other situations, but maybe skipserviceworker is yeah","msgtype":"m.text"},"ts":1469006799000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"preempt means you could be warming up connections to other origins before the renderer","msgtype":"m.text"},"ts":1469006828000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"spinning up their service workers for foreign fetch if needed","msgtype":"m.text"},"ts":1469006867000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But yeah, my only usecase for skipserviceworker is this Facebook one (or at least the only case that I can think of right now)","msgtype":"m.text"},"ts":1469006925000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But doesn't <link rel=\"preload\" preempt skipserviceworker> fulfill all the same usecases you've presented here?","msgtype":"m.text"},"ts":1469006954000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"No, it doesn't actually give the serivce worker a handle on the response to do further things with","msgtype":"m.text"},"ts":1469006998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No but the page can","msgtype":"m.text"},"ts":1469007009000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That again assumes the page needs to have the app logic","msgtype":"m.text"},"ts":1469007046000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure. It could postMessage it to a service worker, or to many service workers. Seems ok","msgtype":"m.text"},"ts":1469007089000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"What it doesn't allow is linking the preload to a range of urls","msgtype":"m.text"},"ts":1469007126000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The routing proposal could easily allow that. It's just much bigger.","msgtype":"m.text"},"ts":1469007146000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Requiring postMessage() seems cumbersome","msgtype":"m.text"},"ts":1469007158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The server and SW having some kind of startup signal seems like a useful primitive to have","msgtype":"m.text"},"ts":1469007186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"*if* you want to do something with the response, and *if* you only want to do that within the service worker","msgtype":"m.text"},"ts":1469007188000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The SW already has a startup signal. A fetch event with mode navigation when there are no other clients.","msgtype":"m.text"},"ts":1469007233000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1469007278000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not totally against the idea of a \"get ready\" server ping. But once you start wanting to do something with that response, it sounds more and more like another preload, especially as the code gets really ugly if you want to use that response in a fetch","msgtype":"m.text"},"ts":1469007411000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1469007593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Need to get a handle on what the minimum viable solution is here. Maybe server ping is ok","msgtype":"m.text"},"ts":1469007702000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah, but also, can other UAs do networking without a renderer, etc.","msgtype":"m.text"},"ts":1469007850000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: is it okay for me to have power to put a label on GitHub issues on https://github.com/w3c/webcomponents/issues ?","msgtype":"m.text"},"ts":1469007860000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"MikeSmith: probably it's because I'm not a member of https://github.com/orgs/w3c/teams/webplatform, I guess.","msgtype":"m.text"},"ts":1469008034000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"aha, GitHub has \"Request to Join\" button on that page!","msgtype":"m.text"},"ts":1469008084000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"MikeSmith should definitely add you 😊","msgtype":"m.text"},"ts":1469008112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"waits for it :)","msgtype":"m.emote"},"ts":1469008172000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"annevk: does this make sense? https://github.com/slightlyoff/ServiceWorker/issues/920#issuecomment-233603440 Trying to get clarification on what the MVP is","msgtype":"m.text"},"ts":1469011001000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: makes sense","msgtype":"m.text"},"ts":1469011974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: also interesting is whether subsequent navigations need to do the same or not","msgtype":"m.text"},"ts":1469012007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or just with cold start","msgtype":"m.text"},"ts":1469012021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Good point, will add that","msgtype":"m.text"},"ts":1469018683000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"kochi: I have as the team contact for the Web Platform WG to add you","msgtype":"m.text"},"ts":1469020431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think she is waiting on an OK by the chairs","msgtype":"m.text"},"ts":1469020440000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: I'll try to get to the adoption stuff by tomorrow","msgtype":"m.text"},"ts":1469027140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think we've given those reluctant long enough to come up with an alternative now","msgtype":"m.text"},"ts":1469027161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"things I'm not a fan of: seeming subroutines in the spec magically jumping totally elsewhere","msgtype":"m.text"},"ts":1469027328000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: we accept patches","msgtype":"m.text"},"ts":1469027390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and I agree)","msgtype":"m.text"},"ts":1469027397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, parameters that are not named upfront","msgtype":"m.text"},"ts":1469027423000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Directly using a JavaScript property or method","msgtype":"m.text"},"ts":1469027466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good!","msgtype":"m.text"},"ts":1469027584000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: should I file a bug?","msgtype":"m.text"},"ts":1469027601000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: if it's not URL","msgtype":"m.text"},"ts":1469027675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"huh, no telemetry far as I can see for encoding usage?","msgtype":"m.text"},"ts":1469029148000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Pretty sure we measured things in that area","msgtype":"m.text"},"ts":1469031957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Blink did for API at least","msgtype":"m.text"},"ts":1469031977000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: bugspam on the WHATWG component from Minhhoang1208 <hoangminh120814⊙gc>, ban please?","msgtype":"m.text"},"ts":1469055449000,"senderName":"Domenic","senderId":"Domenic@irc"}
]