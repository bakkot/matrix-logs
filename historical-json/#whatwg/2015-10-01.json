[
{"content":{"body":"zcorpan_, at 2015-09-14 16:21 UTC, MikeSmith said: about https://critic.hoppipolla.co.uk/r/5796 (SVG thing) yeah I've spoken with the commenter and I need to also fix the bug in the checker code","msgtype":"m.text"},"ts":1443661982000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"annevk: reviewers wondering why !important on ::background { display: block } in https://codereview.chromium.org/1372413004/","msgtype":"m.text"},"ts":1443689457000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: I suspect anything else would lead to some undefined behavior","msgtype":"m.text"},"ts":1443690061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: e.g., is it defined what display-table-row means for a box floating around?","msgtype":"m.text"},"ts":1443690078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, perhaps, I'm not sure how the backdrop is actually implemented","msgtype":"m.text"},"ts":1443690108000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"robertkowalski: this is sort of a chicken and egg problem. Implementors want to use the language they're familiar with.","msgtype":"m.text"},"ts":1443690112000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll link to here and let the reviewers ponder the issue","msgtype":"m.text"},"ts":1443690123000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"philipj: generally though I'd like to defer to roc when it comes to the styling issues","msgtype":"m.text"},"ts":1443690184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: â€¦argue that they're not getting any help from Web developers, so why would they make the effort of converting everything in a new technology?","msgtype":"m.text"},"ts":1443690186000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"robertkowalski: arguably, that's circular logic of the same kind as saying you don't need to support browser X as you have no traffic using said browser (because your site doesn't work with it).","msgtype":"m.text"},"ts":1443690259000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"robertkowalski: but on the other hand, it is very possible that no one is using that browser.","msgtype":"m.text"},"ts":1443690293000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: does roc have a GitHub account? I can't find him","msgtype":"m.text"},"ts":1443690336000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"robertkowalski: if you don't have external data to validate your assumption, you can't make an informed decision.","msgtype":"m.text"},"ts":1443690339000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"philipj: rocallahan","msgtype":"m.text"},"ts":1443690352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"robertkowalski: and thus, we're stuck with python. :)","msgtype":"m.text"},"ts":1443690358000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1443690370000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"Updating OS X has been painless thus far \\o/","msgtype":"m.text"},"ts":1443690504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: writing out all those URL members again is no fun","msgtype":"m.text"},"ts":1443698430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: also, once they're all written out, we should probably try to deduplicate some, since the repetition of requirements across four features is not great","msgtype":"m.text"},"ts":1443698490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any opinion on whether an API which should work only in top level browsing context and other browsing context from the same domain should be hidden in other contexts","msgtype":"m.text"},"ts":1443700633000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or just no-op","msgtype":"m.text"},"ts":1443700636000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: no-op/throw","msgtype":"m.text"},"ts":1443700732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1443700742000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"any particular reason?","msgtype":"m.text"},"ts":1443700755000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: e.g., APIs only allowed in \"secure contexts\" throw in insecure contexts","msgtype":"m.text"},"ts":1443700756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't have any opinion on this matter :)","msgtype":"m.text"},"ts":1443700766000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: and there might be some difficulty with low-level VM sharing stuff if the APIs we expose differ, but that's all rather theoretical at this point I believe","msgtype":"m.text"},"ts":1443700803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure what sharing that would be about","msgtype":"m.text"},"ts":1443700867000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but in Gecko hiding APIs would be rather trivial","msgtype":"m.text"},"ts":1443700880000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(we do hide plenty of chromejs only APIs from content, and also b2g APIs)","msgtype":"m.text"},"ts":1443700904000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah I know, but I think at this point we should keep hiding for non-web stuff and have web stuff exposed everywhere","msgtype":"m.text"},"ts":1443703276000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: PortCollection is gone from the specification btw","msgtype":"m.text"},"ts":1443703297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noticed, thanks","msgtype":"m.text"},"ts":1443703316000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: well, we certainly don't want to expose chromejs stuff","msgtype":"m.text"},"ts":1443703328000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1443703340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hello,","msgtype":"m.text"},"ts":1443704951000,"senderName":"Guest62","senderId":"Guest62@irc"},
{"content":{"body":"I need to talk with Tab Atkins,","msgtype":"m.text"},"ts":1443704980000,"senderName":"Guest62","senderId":"Guest62@irc"},
{"content":{"body":"Tab,","msgtype":"m.text"},"ts":1443705009000,"senderName":"tscosj","senderId":"tscosj@irc"},
{"content":{"body":"Can I talk to you rn?","msgtype":"m.text"},"ts":1443705014000,"senderName":"tscosj","senderId":"tscosj@irc"},
{"content":{"body":"philipj: apologies for flip-flopping on that super trivial PR","msgtype":"m.text"},"ts":1443708326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: still up to you what you do though","msgtype":"m.text"},"ts":1443708334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll flip it back then :)","msgtype":"m.text"},"ts":1443708449000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"!seen foolip","msgtype":"m.text"},"ts":1443712937000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, perhaps there isn't any bot here to answer to that","msgtype":"m.text"},"ts":1443712956000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders if blink doesn't event warn about /deep/","msgtype":"m.emote"},"ts":1443712971000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"philipj, ^","msgtype":"m.text"},"ts":1443712977000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"aha, wrong nick","msgtype":"m.text"},"ts":1443713070000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"did the whole \"what do we do about cross-origin uses of well-known symbols\" thing on public-script-coord ever get definitively resolved?","msgtype":"m.text"},"ts":1443713285000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: no, there's a couple open issues against the HTML standard on defining cross-origin Location and Window objects","msgtype":"m.text"},"ts":1443714060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: it's something I want to look into if nobody beats me to it, since it seems like a rather important thing to define","msgtype":"m.text"},"ts":1443714091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I ask because I'm not sure how flexible we need to make this \"don't throw if the object needs security checks\" thing needs to be","msgtype":"m.text"},"ts":1443714462000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"like, if it's good enough to just make the value look undefined/not present, or if it's important to know that the value couldn't be retrieved due to a failed access check","msgtype":"m.text"},"ts":1443714649000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: I haven't investigated","msgtype":"m.text"},"ts":1443715842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: from past experience some folks want security errors to throw, others prefer silent failure","msgtype":"m.text"},"ts":1443715855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"caitp: I think there's supposed to be a symbol registry, where you can obtain a symbol associated with a string, and they're identical across windows when generated from the sand string?","msgtype":"m.text"},"ts":1443716292000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right, but I mean, the spec uses well known symbol hooks, and doesn't care about whether anything is cross origin/whatever","msgtype":"m.text"},"ts":1443716334000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yeah, the spec's \"well-known symbols\" are identical cross origin.","msgtype":"m.text"},"ts":1443716378000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so it's like, 1 option is just pretend cross origin objects don't have the symbol hook at all, and that splits into \"the spec'd access won't throw, it will just ignore it, but user accesses to the hook will throw\"","msgtype":"m.text"},"ts":1443716394000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"P sure","msgtype":"m.text"},"ts":1443716397000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or another one is \"never throw, just treat the symbol hook as undefined for cross origin objects\"","msgtype":"m.text"},"ts":1443716412000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I wonder who that Guest62 person was?","msgtype":"m.text"},"ts":1443716508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sam as tscosj most likely but not sure who that is either","msgtype":"m.text"},"ts":1443716899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I blocked tscosj as some random pming me.","msgtype":"m.text"},"ts":1443716960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"How do I unignore?","msgtype":"m.text"},"ts":1443716972000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, who Sam?","msgtype":"m.text"},"ts":1443716980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Dammit, autocorrect, I meant rando.","msgtype":"m.text"},"ts":1443717018000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: s/sam/same/","msgtype":"m.text"},"ts":1443717305000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1443717334000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: quick bikeshed question: Would need to add a small paragraphe to the conventions section found in the footer. Is there anyway for me to do this simply?","msgtype":"m.text"},"ts":1443724941000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: Need to adjust your footer include.","msgtype":"m.text"},"ts":1443724990000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For whatever group you're publishing as.","msgtype":"m.text"},"ts":1443725007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Mmm. So I can't have custom, per spec conventions, then.","msgtype":"m.text"},"ts":1443725077000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1443725188000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I guess I'll just stick the content in a note somewhere.","msgtype":"m.text"},"ts":1443726963000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I just hide the conventions boilerplate and add my own section.","msgtype":"m.text"},"ts":1443730488000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hi, how can I replace html entites by their equivalent unicode code point?","msgtype":"m.text"},"ts":1443735105000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"using htmllib python","msgtype":"m.text"},"ts":1443735129000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: htmllib or html5lib?","msgtype":"m.text"},"ts":1443735152000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: and what are you actually trying to do? why do you want to replace them?","msgtype":"m.text"},"ts":1443735227000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm working on a filter for typography (fixing various spacing/punctuation patterns) and I get chuncked Character tokens because of HTML entities like &nbsp;","msgtype":"m.text"},"ts":1443735231000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"gsnedders, html5lib, sorry","msgtype":"m.text"},"ts":1443735243000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: you probably want to parse the whole thing into a tree and then work from that, tbh","msgtype":"m.text"},"ts":1443735295000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: the tokenizer alone is probably always never the way to go","msgtype":"m.text"},"ts":1443735306000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: basically the tokenizer makes no guarantees, and in some situations won't work correctly without the parser's feedback","msgtype":"m.text"},"ts":1443735393000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so I I have \"name&thinsp;: value\" it seems like the tokens yield are \"name\" + &nbsp + \": value\"","msgtype":"m.text"},"ts":1443735455000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"gsnedders, here is how I use my filter: http://dpaste.com/1WBAYG6","msgtype":"m.text"},"ts":1443735472000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"the API makes no guarantees as to where character tokens get split up, FWIW","msgtype":"m.text"},"ts":1443735481000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm pretty sure the tokenizer shouldn't return an character reference ever?","msgtype":"m.text"},"ts":1443735497000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, you're doing this at the serialiser level","msgtype":"m.text"},"ts":1443735521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"sorry, I thought you meant the tokenizer tokens","msgtype":"m.text"},"ts":1443735528000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, my explanations might be confused, sorry.","msgtype":"m.text"},"ts":1443735597000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: nah, we just have two things called \"tokens\" and it's really bloody confusing.","msgtype":"m.text"},"ts":1443735630000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: we should name stuff better, but I don't know what's better :)","msgtype":"m.text"},"ts":1443735644000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: um, the filter is getting three character tokens, u'name', u'\\u2009', and u': value'. there's no character references there.","msgtype":"m.text"},"ts":1443735838000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: so that's definitely a bug in html5lib, because it shouldn't be creating adjacent text nodes in the DOM leading to that. the simplest suggestion would be to use etree (which is the default) instead of dom, if you're not wed to the tree format anywhere","msgtype":"m.text"},"ts":1443735984000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: then with etree you get {u'data': u'name\\u2009: value', u'type': u'Characters'} which is what I'd expect?","msgtype":"m.text"},"ts":1443736012000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: (sorry for being a bit rambly here)","msgtype":"m.text"},"ts":1443736026000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, sorry, back","msgtype":"m.text"},"ts":1443736157000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"gsnedders, yes, this is exactly what I want","msgtype":"m.text"},"ts":1443736212000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"let me try","msgtype":"m.text"},"ts":1443736255000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: note if anyone touches the DOM you can end up with adjecent text nodes (because they can just append another) and in a few cases the HTML parser creates them (e.g., foo<table>bar</table> creates \"foo\", followed by \"bar\", followed by an empty table element)","msgtype":"m.text"},"ts":1443736336000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: but in that case that's just a bug in html5lib","msgtype":"m.text"},"ts":1443736347000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, thanks. I switched to etree and that is perfect","msgtype":"m.text"},"ts":1443736387000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: (etree avoids this because it /can't/ have adjacent text nodes in its data model)","msgtype":"m.text"},"ts":1443736402000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Should this be documented somewhere?","msgtype":"m.text"},"ts":1443736410000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"I don't remember why I used dom in the first place. Maybe because it was easier to work withï¿½","msgtype":"m.text"},"ts":1443736447000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"I'm filing a bug on this.","msgtype":"m.text"},"ts":1443736493000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"When we finally get round to having decent docs, we should push people more strongly away from dom.","msgtype":"m.text"},"ts":1443736509000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, let me know when you filled the bug so I can reference to it in my code","msgtype":"m.text"},"ts":1443736556000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"and just so you know I'm in love with HTML5lib","msgtype":"m.text"},"ts":1443736580000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-python/issues/208","msgtype":"m.text"},"ts":1443736653000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: ^^","msgtype":"m.text"},"ts":1443736748000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, thanks. Reference in my code. Thanks a lot for your help. It turned out to be more simple than I though :)","msgtype":"m.text"},"ts":1443736963000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: np, in general dom is just hidious in python","msgtype":"m.text"},"ts":1443737210000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]