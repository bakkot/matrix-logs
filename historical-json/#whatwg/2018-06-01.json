[
{"content":{"body":"\"into document\" is the bit you omitted from your quote that's rather key there","msgtype":"m.text"},"ts":1527817768000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"astearns: so about the github/w3c perms, if I understand correctly, the thing that blocks you is that you can’t on your own add people to github/w3c teams unless they’re already members of the w3c org?","msgtype":"m.text"},"ts":1527820925000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think for any repo where you have Admin perms, you can still add anybody you want as a CollaboratorーI mean without adding them to a Team","msgtype":"m.text"},"ts":1527821409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to me, using github teams seems like overkill unless you have multiple repos that you want to give the same set of people write access to (like we do with web-platform-tests)","msgtype":"m.text"},"ts":1527821505000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"They have multiple repos though","msgtype":"m.text"},"ts":1527821696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Less than I’d like, but more than one","msgtype":"m.text"},"ts":1527821732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: You are correct. I can add random people as collaborators, but the current set are official CSSWG members, so I think it makes sense to add them to the org","msgtype":"m.text"},"ts":1527822165000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"astearns: OK","msgtype":"m.text"},"ts":1527822216000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: you mean web-platform-tests has multiple repos? and it should have more?","msgtype":"m.text"},"ts":1527822374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I meant CSS","msgtype":"m.text"},"ts":1527822410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1527822415000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1527822417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Might have missed some context","msgtype":"m.text"},"ts":1527822425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1527822431000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that was the original context","msgtype":"m.text"},"ts":1527822441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but IMHO too yeah CSS should have more repos","msgtype":"m.text"},"ts":1527822456000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway as far as the thing about giving perms for a repo Admin adding members to the w3c org, as far as I can see the only way to do that is by giving Admin (Owner?) perms for the entire w3c org","msgtype":"m.text"},"ts":1527822559000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and one reason for not being able to do that is, there are some private repos in the org, so it would also mean exposing those to them","msgtype":"m.text"},"ts":1527822607000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I guess one way to deal with that particular part would be to move those private repos to a different org, e.g., w3c-private or whatever","msgtype":"m.text"},"ts":1527822705000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but even if we did that, the other people would still have complete owner/admin perms for changing whatever they wanted in org config, and blocking users org-wide, etc.","msgtype":"m.text"},"ts":1527822763000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"summary: it’s complicated :)","msgtype":"m.text"},"ts":1527822792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: if associating a W3C account with a github handle would automatically invite people to the W3C github org, then I think my particular problem would be solved. Tab suggested this on sysreq","msgtype":"m.text"},"ts":1527822795000,"senderName":"astearns","senderId":"astearns@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1527822803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will follow up with the systeam about that","msgtype":"m.text"},"ts":1527822813000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"since it’s their tool that does the W3C-account association","msgtype":"m.text"},"ts":1527822849000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok folks, which text editor should I switch to (on macOS)?","msgtype":"m.text"},"ts":1527846368000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"vim","msgtype":"m.text"},"ts":1527846468000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I like rectangular selection and multiple cursors, multi-file regexp search & replace","msgtype":"m.text"},"ts":1527846498000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"vim has rectangular selection built in","msgtype":"m.text"},"ts":1527846575000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"multi-file regexp search & replace I reckon it either has built in or there’s some plugin","msgtype":"m.text"},"ts":1527846615000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"multiple cursors I dunno","msgtype":"m.text"},"ts":1527846631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"personally for multi-file regexp search & replace I just use perl from the shell","msgtype":"m.text"},"ts":1527846675000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://github.com/w3c/payment-request/pull/715 seems like a useful template we could use for PRs","msgtype":"m.text"},"ts":1527848582000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://blog.github.com/2016-02-17-issue-and-pull-request-templates/","msgtype":"m.text"},"ts":1527848617000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: Domenic: foolip: thoughts?","msgtype":"m.text"},"ts":1527848627000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/w3c/payment-request/blob/gh-pages/.github/PULL_REQUEST_TEMPLATE.md is the template","msgtype":"m.text"},"ts":1527848710000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: might be worth considering","msgtype":"m.text"},"ts":1527849043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: if we make it a little clearer they don't all have to be completed before the PR is created that might be better","msgtype":"m.text"},"ts":1527849096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but we also get a lot of editorial contributions, for which a lot of this would be noise","msgtype":"m.text"},"ts":1527849120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so hmm","msgtype":"m.text"},"ts":1527849123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: I use Sublime Text, but no idea if it has all those features","msgtype":"m.text"},"ts":1527849780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I used to use TextWrangler, but it couldn't handle \"source\" very well","msgtype":"m.text"},"ts":1527849813000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I want to switch away from TextWrangler/BBEdit","msgtype":"m.text"},"ts":1527850786000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.sublimetext.com/ demos multiple selections","msgtype":"m.text"},"ts":1527850820000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'll give this a try","msgtype":"m.text"},"ts":1527851092000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: vim seems intimidating but several people recommend it. I just never feel like hitting a steep learning curve, but maybe sometime I'll give it a try","msgtype":"m.text"},"ts":1527853124000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: GVim can help make it less intimidating","msgtype":"m.text"},"ts":1527853532000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it’s a GUI program that runs outside the shell","msgtype":"m.text"},"ts":1527853573000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"with default settings for easier use with a mouse instead of keyboard shortcuts","msgtype":"m.text"},"ts":1527853622000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"e.g., normal simple visual selection with a mouse","msgtype":"m.text"},"ts":1527853679000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is something that’s not such a great feature that you actually want if you’re running in a shell instead","msgtype":"m.text"},"ts":1527853734000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"With WPT, I find myself writing a lot of code to get information about a request the browser made (using the stash). Am I missing an easier way? It'd be nice if I could just query the server log, or use EventSource to get information about requests to a particular URL.","msgtype":"m.text"},"ts":1527854532000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Currently I stash it (https://github.com/jakearchibald/web-platform-tests/blob/accept-encoding-range/fetch/range/resources/long-wav.py#L57) then create an endpoint to read from the stash (https://github.com/jakearchibald/web-platform-tests/blob/accept-encoding-range/fetch/range/resources/stash-take.py)","msgtype":"m.text"},"ts":1527854710000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'd love to just monitorRequest(url) and get a stream of requests to that URL","msgtype":"m.text"},"ts":1527854907000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Better hope that nobody else is using that URL in parallel","msgtype":"m.text"},"ts":1527855118000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Same problem exists with the stash","msgtype":"m.text"},"ts":1527855138000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I guess you could enforce something like a token in the URL","msgtype":"m.text"},"ts":1527855216000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you're supposed to mint a token for stash","msgtype":"m.text"},"ts":1527855253000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: token() from /common/utils.js is what's typically used","msgtype":"m.text"},"ts":1527855281000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that's what I do. monitorRequest could enforce a similar thing if needed. Or: const [urlWithToken, stream]  = createMonitoredUrl(url)","msgtype":"m.text"},"ts":1527855363000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I guess if we abuse the path bit of a stash and use a token as the path as well we could write a get_stash.py and have some kind of JavaScript utility on top","msgtype":"m.text"},"ts":1527855440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so the user has to write a Python script that takes a token and stores the stuff they care about, but doesn't need to have retrieval logic","msgtype":"m.text"},"ts":1527855486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not sure how much that ends up simplifying though","msgtype":"m.text"},"ts":1527855513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: A generic retrieval endpoint would be great, but that's usually the easy part","msgtype":"m.text"},"ts":1527855519000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/web-platform-tests/wpt/pull/11164/files is my first stash thingy","msgtype":"m.text"},"ts":1527855563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm not sure how much can be abstracted there, other than doing the second request and getting the stash value","msgtype":"m.text"},"ts":1527855591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, and I forgot I retrieve the stash value as JSON, that wouldn't work as a generic","msgtype":"m.text"},"ts":1527855660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, maybe it would, if everyone obeyed","msgtype":"m.text"},"ts":1527855674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: with aborting & the range request stuff, I keep wanting to answer questions like: What headers did the browser send? Did the browser actually make a request? Did it follow the redirect? A stream from the server would make this a lot easier. I agree I'd have to make the monitored URLs unique for the test.","msgtype":"m.text"},"ts":1527855781000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it seems we could do that, by dumping all the request data in the stash","msgtype":"m.text"},"ts":1527855861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I guess one question there is when can you retrieve it","msgtype":"m.text"},"ts":1527855880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that's a problem I have today.","msgtype":"m.text"},"ts":1527855933000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: but when the request / response finishes or errors that's probably good enough?","msgtype":"m.text"},"ts":1527855934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My script does the redirect thing btw and it does store data from the request, just not that much","msgtype":"m.text"},"ts":1527855973000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, although each API has a different way of telling you that. And with media, \"finished\" is a bit late.","msgtype":"m.text"},"ts":1527855998000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: to clarify, I've done what I need to do. I just feel it's a pain each time I need to do it.","msgtype":"m.text"},"ts":1527856017000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could file an issue I suppose","msgtype":"m.text"},"ts":1527856083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can write it up","msgtype":"m.text"},"ts":1527856098000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It might only be a problem I've had because of the kind of fetch tests I've been writing recently","msgtype":"m.text"},"ts":1527856128000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: basically what you want is having a handle on an EventSource/WebSocket endpoint to write data to as requests come in","msgtype":"m.text"},"ts":1527856129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I said 😀","msgtype":"m.text"},"ts":1527856166000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It'd be easy to create a stream from either, which would work better in promise tests","msgtype":"m.text"},"ts":1527856192000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Yeah sorry, was trying to restate it","msgtype":"m.text"},"ts":1527856199000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That kind of setup would greatly simplify a lot of CORS tests too I think","msgtype":"m.text"},"ts":1527856287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g., did the preflight happen, did it have the right headers, etc.","msgtype":"m.text"},"ts":1527856299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ohh yeah, I imagine they have exactly the same issues.","msgtype":"m.text"},"ts":1527856320000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"With redirects you want to monitor more than one url, but I guess you can create multiple monitors","msgtype":"m.text"},"ts":1527856341000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Although there may be cases where it's difficult to make sure the same token is in each URL","msgtype":"m.text"},"ts":1527856390000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you can redirect to the same path on a different server and forward the token (that's what I do)","msgtype":"m.text"},"ts":1527856449000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if the EventSource/WebSocket handle is token-based that would work","msgtype":"m.text"},"ts":1527856469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah, I was wondering about cases where the token might be stripped, but I can't think of any","msgtype":"m.text"},"ts":1527856483000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"As long as you can put it in the URL it's okay","msgtype":"m.text"},"ts":1527856521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that means you can't quite test /favicon.ico and such with this","msgtype":"m.text"},"ts":1527856542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm yeah. Maybe you want a monitorUrl(url, { noTokenIKnowWhatImDoing: true }) for cases where having a token just wouldn't work","msgtype":"m.text"},"ts":1527856613000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well, the problem with that is that you cannot have multiple requests","msgtype":"m.text"},"ts":1527857227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe instead the setup could be that register a set of paths to monitor and you just get all the request objects handed to you","msgtype":"m.text"},"ts":1527857309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Allowing an array of URLs is important for determining order I suppose","msgtype":"m.text"},"ts":1527857391000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: https://github.com/web-platform-tests/wpt/issues/11298","msgtype":"m.text"},"ts":1527857561000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"is the filesystem api expected to gain traction","msgtype":"m.text"},"ts":1527864209000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"oh heh it died like 5 years ago","msgtype":"m.text"},"ts":1527865442000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"MikeSmith: Command-line support for highlighter should be working now.  Just execute highlighter/__init__.py. Run it with -h flag to get information on the arguments you can pass. Basic usage is `__init__.py webidl < input_file.json > highlighted_output.json`.","msgtype":"m.text"},"ts":1527872226000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The output will be a JSON object with `html` and `css` keys.","msgtype":"m.text"},"ts":1527872252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there a way to stop getting email about a bug I reported to Firefox Bugzilla?","msgtype":"m.text"},"ts":1527891644000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Watching patches and reviews fly by is not that interesting","msgtype":"m.text"},"ts":1527891668000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: only way I know of is to go into https://bugzilla.mozilla.org/userprefs.cgi?tab=email and uncheck some stuff under Reporter","msgtype":"m.text"},"ts":1527892723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but of course that will affect notifications on all bugs you reported, no just that one","msgtype":"m.text"},"ts":1527892761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hmm OK :-/. I guess email-client-level filtering is probably the way to go.","msgtype":"m.text"},"ts":1527892806000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"TabAtkins: yee-hahー will try it again this weekend","msgtype":"m.text"},"ts":1527892807000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: yeah, though this case makes me think the e-mail preferences could be enhanced with by adding a new row with \"A comment is added for a patch\" or whatever","msgtype":"m.text"},"ts":1527892989000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"devsnek: https://wicg.github.io/entries-api/ is the replacement for that","msgtype":"m.text"},"ts":1527895074000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"File and Directory Entries API","msgtype":"m.text"},"ts":1527895079000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think that’s actually implemented in all four browser engines","msgtype":"m.text"},"ts":1527895099000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hype","msgtype":"m.text"},"ts":1527895103000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"does that have writing files too","msgtype":"m.text"},"ts":1527895109000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1527895122000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well not as far as I know","msgtype":"m.text"},"ts":1527895130000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1527895136000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"jsbell would be the one to ask for details","msgtype":"m.text"},"ts":1527895139000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i suppose i'll read through it","msgtype":"m.text"},"ts":1527895144000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"i want to do something spec-ish for file operations in my runtime","msgtype":"m.text"},"ts":1527895154000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"why does the spec include engine-specific properties","msgtype":"m.text"},"ts":1527895248000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"devsnek: dunno but jsbell can certainly shed some light when he’s around","msgtype":"m.text"},"ts":1527895342000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but there’s also https://github.com/WICG/entries-api/blob/gh-pages/EXPLAINER.md","msgtype":"m.text"},"ts":1527895364000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thx","msgtype":"m.text"},"ts":1527895490000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"Domenic: if it isn't too much trouble could i bother you about my url implementation?","msgtype":"m.text"},"ts":1527897144000,"senderName":"devsnek","senderId":"devsnek@irc"}
]