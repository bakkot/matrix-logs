[
{"content":{"body":"that's a fairly randomly chosen piece of documentation, but you can probably see that it's long enough that one might want to use something like fragmentions there","msgtype":"m.text"},"ts":1398384030000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"http://indiewebcamp.com/Special:Preferences##ಇ-ಅಂಚೆ","msgtype":"m.text"},"ts":1398384096000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"hmm, maybe that isn't the best example though because I guess the hash part of the URL is not terribly interesting ...","msgtype":"m.text"},"ts":1398384139000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"apple doc urls are a nightmare","msgtype":"m.text"},"ts":1398384188000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1398384205000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"but not seemingly a good example of the problem :-(","msgtype":"m.text"},"ts":1398384215000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"at least they stopped using the webobjects ones with colons in","msgtype":"m.text"},"ts":1398384227000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"hm, actually the chrome fragmention plugin seems to work OK in that doc","msgtype":"m.text"},"ts":1398384350000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"yeah, I remembered the fragments being more important there","msgtype":"m.text"},"ts":1398384370000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"obviously I misremembered","msgtype":"m.text"},"ts":1398384382000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"it certainly doesn't break their links","msgtype":"m.text"},"ts":1398384452000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"(Oh, how would you link to something on the Beta tab on, say, mediawiki.org -- without knowing the UI language?)","msgtype":"m.text"},"ts":1398385085000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"is there a downloadable version of Presto-based Opera still available?","msgtype":"m.text"},"ts":1398385191000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1398385467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Opera 12 I guess","msgtype":"m.text"},"ts":1398385474000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SamB linking across languages is a tough usecase","msgtype":"m.text"},"ts":1398385935000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"the person at the annotations mtg who knew most about ti was a biblical concordance speciallist","msgtype":"m.text"},"ts":1398385970000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"and they have relatively well-defined cross-language anchors","msgtype":"m.text"},"ts":1398385992000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"well, the easy way is to use the ID, isn't it?","msgtype":"m.text"},"ts":1398385994000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"no, they have Matthew 12:18 type anchors","msgtype":"m.text"},"ts":1398386018000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"the 12:18 is in the text, and the lookup the Book name, iirc","msgtype":"m.text"},"ts":1398386048000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"meant for the MW preferences thing","msgtype":"m.emote"},"ts":1398386051000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or, if we actualyl want stuff like what fragmentions is actually meant for, try using them on https://groups.google.com/forum/#!topic/linux.debian.project/LBCAsdfl_ws maybe?","msgtype":"m.text"},"ts":1398386201000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(nevermind that you can't read that in elinks, despite there not really being any content there that it couldn't handle tolerably ...)","msgtype":"m.text"},"ts":1398386349000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"is that an example of the hashbang antipattern?","msgtype":"m.text"},"ts":1398386572000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"\"antipattern\" is what people call things they don't like that they want to make sound bad, not something necessarily actually bad, so better not to call something an \"antipattern\" if you're not even sure if it is something or not :P","msgtype":"m.text"},"ts":1398387245000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yup that's just #! hashbang anti-pattern. Google Groups needs to fix that.","msgtype":"m.text"},"ts":1398387281000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"KevinMarks_: it's an example of AJAX taken too far, period","msgtype":"m.text"},"ts":1398387299000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(nothing wrong with that url, though the \"!\" seems a bit pointless)","msgtype":"m.text"},"ts":1398387315000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"#! might actually mitigate it somewhat for clients who have any idea what that means","msgtype":"m.text"},"ts":1398387316000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I've seen other pages that had several tabs which I think a non-JS browser would just render all of","msgtype":"m.text"},"ts":1398387370000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"non-JS browsers are pretty irrelevant to the real world","msgtype":"m.text"},"ts":1398387386000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's not quite as bad, but it'd still be a problem for fragmentions","msgtype":"m.text"},"ts":1398387388000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"not so irrelevant that gmail doesn't support them ...","msgtype":"m.text"},"ts":1398387503000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"... though admittedly actually *getting* into basic HTML mode has had problems lately","msgtype":"m.text"},"ts":1398387534000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"html in email isn't a browser","msgtype":"m.text"},"ts":1398387535000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"now here's another variant: https://dl.dropboxusercontent.com/u/18852638/draft/silly/test.html##Brennan+Novak(Brennan+is+bnvk+on+#indieweb+and+#mailpile)","msgtype":"m.text"},"ts":1398387794000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"TabAtkins: when you have a few minutes please let me know what should be added to the \"CSS features\" part of http://platform.html5.org/","msgtype":"m.text"},"ts":1398388379000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and what if anything should be removed","msgtype":"m.text"},"ts":1398388452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: colors look nice","msgtype":"m.text"},"ts":1398391612000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1398391792000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm amused that chrome just can't handle the gradient on the html spec and gives up","msgtype":"m.text"},"ts":1398394007000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox can't handle it well either, it turns into into four bands","msgtype":"m.text"},"ts":1398394019000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which actually kinda looks cool","msgtype":"m.text"},"ts":1398394024000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tempting to actually switch to that intentionally :-)","msgtype":"m.text"},"ts":1398394066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Will Chrome get HTML5 context menus? http://davidwalsh.name/html5-context-menu","msgtype":"m.text"},"ts":1398401768000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"looks like the spec splitter is broken","msgtype":"m.text"},"ts":1398402087000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The gradient works just fine on Chrome for me.","msgtype":"m.text"},"ts":1398403209000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: on teh single-page copy?","msgtype":"m.text"},"ts":1398404183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, haven't looked.","msgtype":"m.text"},"ts":1398404224000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"works fine for me elsewhere","msgtype":"m.text"},"ts":1398404231000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: that gradient is horrible :-P","msgtype":"m.text"},"ts":1398408849000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic_: response.body will be a readable stream in SW. However, we need something akin to responseText from XHR","msgtype":"m.text"},"ts":1398411239000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: async of course","msgtype":"m.text"},"ts":1398411245000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: Are you planning on adding helpers like this to streams?","msgtype":"m.text"},"ts":1398411282000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: Otherwise we'll just add them to our Response objects","msgtype":"m.text"},"ts":1398411305000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Hixie: http://validators.whatwg.org/ still doesn’t resolve for me – sure that fix worked?","msgtype":"m.text"},"ts":1398412668000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"http://www.downforeveryoneorjustme.com/http://validators.whatwg.org/","msgtype":"m.text"},"ts":1398413212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's down for me too","msgtype":"m.text"},"ts":1398413221000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://twitter.com/bug_facts/status/457712371616608256","msgtype":"m.text"},"ts":1398414738000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Sooooo, posted THAT in the wrong channel","msgtype":"m.text"},"ts":1398414948000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Enjoy it anyway","msgtype":"m.text"},"ts":1398414960000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"When is someone going to take ownership of IDL?","msgtype":"m.text"},"ts":1398415657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We really need the array issues and such resolved","msgtype":"m.text"},"ts":1398415669000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"When you do","msgtype":"m.text"},"ts":1398415716000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JakeA: I think we should have helpers on streams","msgtype":"m.text"},"ts":1398415822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. a TransformStream of sorts that converts bytes to text","msgtype":"m.text"},"ts":1398415842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: although we probably need helpers on Response as well given that the decoding depends heavily on other properties of the Response object","msgtype":"m.text"},"ts":1398415869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I guess you couldn't toBlob a stream because there's no content-type","msgtype":"m.text"},"ts":1398415923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I think SW Response will need a getBodyText helper too, although we can deprecate it when streams land","msgtype":"m.text"},"ts":1398415986000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: filed https://github.com/slightlyoff/ServiceWorker/issues/251","msgtype":"m.text"},"ts":1398415990000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: you can't just add / remove methods...","msgtype":"m.text"},"ts":1398416000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: getBodyText() sounds a lot like Java","msgtype":"m.text"},"ts":1398416030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: open to other names. Needs to return a promise. Problem is, toString() is taken :D","msgtype":"m.text"},"ts":1398416074000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: don't really have great suggestions either","msgtype":"m.text"},"ts":1398416157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"asText()","msgtype":"m.text"},"ts":1398416163000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: <canvas> has toBlob iirc","msgtype":"m.text"},"ts":1398416165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sounds like Aztecs","msgtype":"m.text"},"ts":1398416177000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"asString might be okay","msgtype":"m.text"},"ts":1398416196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: toBlob and asString?","msgtype":"m.text"},"ts":1398416212000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"or bodyToString() hmm","msgtype":"m.text"},"ts":1398416213000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to(type).then()","msgtype":"m.text"},"ts":1398416354000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: similar to responseType?","msgtype":"m.text"},"ts":1398416392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not half bad","msgtype":"m.text"},"ts":1398416399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I'm thinking","msgtype":"m.text"},"ts":1398416403000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: how is nobody not maintaining idl?","msgtype":"m.text"},"ts":1398416607000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/not//","msgtype":"m.text"},"ts":1398416631000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I don't know, it's just not happening","msgtype":"m.text"},"ts":1398416635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I think getting it up to speed would be at least several months of fulltime work and nobody has taken the time","msgtype":"m.text"},"ts":1398416665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"more like ID-hell amirite? *holds hand up waiting for high-five*","msgtype":"m.text"},"ts":1398416667000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm, I thought it has been updated when needed","msgtype":"m.text"},"ts":1398416678000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/buglist.cgi?component=WebIDL&product=WebAppsWG&resolution=--- lists 84 bugs and quite a few are larger issues","msgtype":"m.text"},"ts":1398416732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there annotation for read only array","msgtype":"m.text"},"ts":1398416944000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"since I guess that is what we want for event.path","msgtype":"m.text"},"ts":1398416960000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or Gecko's [frozen]","msgtype":"m.text"},"ts":1398416977000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"It seems what people argue for is that we should simply return a mutable array","msgtype":"m.text"},"ts":1398416987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"A JavaScript Array object","msgtype":"m.text"},"ts":1398417007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, for event.path is should be frozen Array","msgtype":"m.text"},"ts":1398417186000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is just a JS thing","msgtype":"m.text"},"ts":1398417196000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Again, Domenic_, dherman, et al, argue it should not be frozen","msgtype":"m.text"},"ts":1398417237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: If you want those input tests fixed your should review https://critic.hoppipolla.co.uk/r/1370","msgtype":"m.text"},"ts":1398419501000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure it's right","msgtype":"m.text"},"ts":1398419506000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: looks legit, but https://github.com/w3c/web-platform-tests/pull/928#discussion_r11965914","msgtype":"m.text"},"ts":1398419638000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I wondered about that","msgtype":"m.text"},"ts":1398419719000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I think per spec you can make it dirty by input.value = input.value","msgtype":"m.text"},"ts":1398419748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I should find a way to sort the few useful messages from the torent of spam I get from GitHub","msgtype":"m.text"},"ts":1398419760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I just found out I missed pull requests going back six months","msgtype":"m.text"},"ts":1398419787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Doing input.value += \"a\"; input.value = input.value.slice(0, input.value.length - 1) or something seems better","msgtype":"m.text"},"ts":1398419810000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In the sense that I don't really trust browsers to get this right in the first case","msgtype":"m.text"},"ts":1398419841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: because?","msgtype":"m.text"},"ts":1398419841000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess it depends on what you want to test","msgtype":"m.text"},"ts":1398419860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But in that case I'd just do temp = input.value; input.value = \"x\"; input.value = temp","msgtype":"m.text"},"ts":1398419882000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As the slice trickery makes it look complicated","msgtype":"m.text"},"ts":1398419899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Curiously that was almost exactly what I had just written :)","msgtype":"m.text"},"ts":1398419982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Pushed to the review","msgtype":"m.text"},"ts":1398420017000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"reviewed","msgtype":"m.text"},"ts":1398420151000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1398420240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder what the deal with the gradient is","msgtype":"m.text"},"ts":1398420294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where is this gradient?","msgtype":"m.text"},"ts":1398421002000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Down","msgtype":"m.text"},"ts":1398421021000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh wait, I wasn't getting the new stylesheets","msgtype":"m.text"},"ts":1398421038000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well this seems to be exposing bugs in Gecko in a way that make the spec more or less unusuable","msgtype":"m.text"},"ts":1398421098000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, oh?","msgtype":"m.text"},"ts":1398421170000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh wow, that's ugly","msgtype":"m.text"},"ts":1398421206000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://imgur.com/NkwmZz3","msgtype":"m.text"},"ts":1398421266000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"On the multipage spec it works OK","msgtype":"m.text"},"ts":1398421356000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ah","msgtype":"m.text"},"ts":1398421360000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"But I really wish it didn't","msgtype":"m.text"},"ts":1398421362000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: whenever I hear you talk about crypto, it kind of sounds like we need a \"Crypto Standard\"","msgtype":"m.text"},"ts":1398421377000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also most of the text in the boxes at the top overflows","msgtype":"m.text"},"ts":1398421407000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: I'm not volunteering btw","msgtype":"m.text"},"ts":1398421529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: i don't know if you're done with the review script, but currently it seems somewhat broken to me. if i click \"more...\" all that happens is that that button is replaced with a \"hide\" button, and clicking that makes the whole thing non-functional and no way to get it back without deleting the cookie","msgtype":"m.text"},"ts":1398421542000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why w3c bugzilla doesn't send all the bugmail it should :/","msgtype":"m.text"},"ts":1398423573000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what are you missing out on?","msgtype":"m.text"},"ts":1398423634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"comments from bug 25412","msgtype":"m.text"},"ts":1398423687000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but reading those now","msgtype":"m.text"},"ts":1398423699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":":/","msgtype":"m.text"},"ts":1398423752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith, ^","msgtype":"m.text"},"ts":1398423877000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so JakeA under http/https in http://fetch.spec.whatwg.org/#concept-basic-fetch we alternate on service worker / no service worker","msgtype":"m.text"},"ts":1398423889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: a response from the service worker will still have all the checks a HTTP response has too","msgtype":"m.text"},"ts":1398423911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: e.g. 301, 401","msgtype":"m.text"},"ts":1398423932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: service worker only intercepts http/https traffic","msgtype":"m.text"},"ts":1398423966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: not data or blob URLs","msgtype":"m.text"},"ts":1398423972000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: would SW branch at step 7 of the http(s) steps?","msgtype":"m.text"},"ts":1398424065000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: of the initial set of steps, something like that","msgtype":"m.text"},"ts":1398424138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we haven't really detailed how uploading works","msgtype":"m.text"},"ts":1398424157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: presumably the request would arrive before all the data gets there","msgtype":"m.text"},"ts":1398424170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I've been thinking of factoring out \"upgrading a request to a proper HTTP request\", \"making an http request\", \"creating a response from an http response\", etc.","msgtype":"m.text"},"ts":1398424216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the request body in SW would be a stream. Need to get my head around what we can & can't do, and which things should tee automatically","msgtype":"m.text"},"ts":1398424223000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: to make the flow a bit more apparant","msgtype":"m.text"},"ts":1398424228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: dunno why it wouldn't be sending you bugmail as expected","msgtype":"m.text"},"ts":1398424250000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: currently it's a bunch of paragraphs intertwined with steps, not the best","msgtype":"m.text"},"ts":1398424262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Good to have that flow there though","msgtype":"m.text"},"ts":1398424273000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: It's like… this SW thing might actually happen","msgtype":"m.text"},"ts":1398424291000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"smaug____: I'm receiving bugmail from bug 25412 fine","msgtype":"m.text"},"ts":1398424317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about 6 messages from the last two days","msgtype":"m.text"},"ts":1398424341000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: yeah, took me a while to realize how badly SW needs Fetch, glad I wrote it","msgtype":"m.text"},"ts":1398424413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ーMy main criterion is \"A C++ implementation of this algorithm will not crash\"","msgtype":"m.text"},"ts":1398424420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: for a tombstone","msgtype":"m.text"},"ts":1398424453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1398424464000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in other news for some bizarre reason my Opera 12 won't connect to whatwg.org nor google.com","msgtype":"m.text"},"ts":1398424602000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Opera has good taste in gradients and so won't let you see whatwg specs, or other properties with which Hixie has a professional association","msgtype":"m.text"},"ts":1398424791000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1398424805000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I like that gradient","msgtype":"m.text"},"ts":1398424812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I _think_ the same issue with w3 bugmail has happened before","msgtype":"m.text"},"ts":1398426317000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh well","msgtype":"m.text"},"ts":1398426319000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"slightlyoff: hey, what are you using to write the service-worker spec? It's totally screwing up my toolchain. :(","msgtype":"m.text"},"ts":1398428403000,"senderName":"tobie__","senderId":"tobie__@irc"},
{"content":{"body":"yay errata... https://www.w3.org/Bugs/Public/show_bug.cgi?id=25290","msgtype":"m.text"},"ts":1398430119000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tobie__: all the goo.gl URLs also...","msgtype":"m.text"},"ts":1398431043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not sure what is going on there","msgtype":"m.text"},"ts":1398431049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"google, try switching it off and on again","msgtype":"m.text"},"ts":1398431112000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: you plan to buffer the entire response body in memory? O_O that defeats the purpose of streaming it.","msgtype":"m.text"},"ts":1398431816000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"MikeSmith: looks like v.nu never implemented the \"xml\" restriction for <embed>","msgtype":"m.text"},"ts":1398431837000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Domenic_: I think sometimes getting the response as a single string is fine","msgtype":"m.text"},"ts":1398431848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: JakeA: yes definitely a TransformStream converting ArrayBuffer to text is in the plan","msgtype":"m.text"},"ts":1398431856000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: e.g. if you know it's small","msgtype":"m.text"},"ts":1398431860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: Yes, the response may be json for instance","msgtype":"m.text"},"ts":1398431865000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: but it only gives a warning for foo:bar foo,bar etc, rather than an error","msgtype":"m.text"},"ts":1398431887000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: annevk: OK, but ... if you're going to buffer the full thing anyway, then don't bother making it a stream","msgtype":"m.text"},"ts":1398431894000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: This would be developer choice","msgtype":"m.text"},"ts":1398431910000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: We give them a response object with a stream for the body","msgtype":"m.text"},"ts":1398431923000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no it's not. If the computer is buffering it all, then having it as a stream is pointless.","msgtype":"m.text"},"ts":1398431928000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: there's a big problem with Response.prototype.body and a TransformStream","msgtype":"m.text"},"ts":1398431937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: you need other data from the Response to properly do it","msgtype":"m.text"},"ts":1398431951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: But we want to make it non-trivial for them to get the whole response body, if that's what they want","msgtype":"m.text"},"ts":1398431953000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: there's a point to be made that as with XMLHttpRequest, the choice for what datatype you want is to be made upfront","msgtype":"m.text"},"ts":1398431970000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Agree with annevk.","msgtype":"m.text"},"ts":1398431989000,"senderName":"tobie__","senderId":"tobie__@irc"},
{"content":{"body":"JakeA: that's easy. readToEnd(Response.prototype.body)","msgtype":"m.text"},"ts":1398432002000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"+ consistency","msgtype":"m.text"},"ts":1398432013000,"senderName":"tobie__","senderId":"tobie__@irc"},
{"content":{"body":"readToEnd is a reusable function that works with *all* streams","msgtype":"m.text"},"ts":1398432014000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"err, readToEnd(response.body)","msgtype":"m.text"},"ts":1398432027000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Where does that method live?","msgtype":"m.text"},"ts":1398432047000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"npm?","msgtype":"m.text"},"ts":1398432054000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1398432060000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I dunno, we could add a global.streamHelpers namespace","msgtype":"m.text"},"ts":1398432089000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: Maybe response.body shouldn't be a stream at all, and you'd get one via .to('stream')","msgtype":"m.text"},"ts":1398432095000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: you need headers, sure. but the body stream and the headers are separate","msgtype":"m.text"},"ts":1398432111000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1398432123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In Node: var request = getThingy(); request.on('response', function (response) { console.log(response.headers); response.body.pipe(process.stdout); })","msgtype":"m.text"},"ts":1398432146000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Now I understand if there's a sequencing problem here","msgtype":"m.text"},"ts":1398432180000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i.e. if streams will be done/implemented after service workers (which seems possible, perhaps probable)","msgtype":"m.text"},"ts":1398432196000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and you need something to hold you over in the meantime","msgtype":"m.text"},"ts":1398432202000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but it will be redundant after streams land","msgtype":"m.text"},"ts":1398432212000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: We've already got .toBlob, probably going to switch that to .to(type)","msgtype":"m.text"},"ts":1398432238000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"because nobody is going to want to use service worker's idiosyncratic way of buffering a whole stream and converting it to text","msgtype":"m.text"},"ts":1398432240000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"what does .to(type) return","msgtype":"m.text"},"ts":1398432268000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"promise","msgtype":"m.text"},"ts":1398432275000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"for?","msgtype":"m.text"},"ts":1398432279000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"depends on type","msgtype":"m.text"},"ts":1398432292000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"so promise for stream for example?","msgtype":"m.text"},"ts":1398432307000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"seems bad","msgtype":"m.text"},"ts":1398432316000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"here would be my vision","msgtype":"m.text"},"ts":1398432334000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Could be, although I think it's still better to reserve .body for the stream","msgtype":"m.text"},"ts":1398432337000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"nobody uses blobs ever","msgtype":"m.text"},"ts":1398432343000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(what)","msgtype":"m.text"},"ts":1398432357000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":".body is a stream, when streams land","msgtype":"m.text"},"ts":1398432373000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":".to('arraybuffer') is conceptually readToEnd(response.body).then(concatAllArrayBufferSegmentsIntoOneGiantArrayBuffer)","msgtype":"m.text"},"ts":1398432400000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: \"nobody is going to want to use sw's way of buffering a whole stream to text\" Really, so if I want to get some JSON from a request, people won't want to do response.to('text').then(function(text) {}), they'd rather have to npm install something to do the same thing?","msgtype":"m.text"},"ts":1398432411000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the to(type) thing is ugly, don't do that","msgtype":"m.text"},"ts":1398432422000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":".to('string') is conceptually readToEnd(response.body.pipeThrough(new TextDecoderStream('utf8'))).then(concatAllStrings)","msgtype":"m.text"},"ts":1398432438000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: yes, because the thing they install from npm will work with *any* stream","msgtype":"m.text"},"ts":1398432455000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"\"People won't use querySelectorAll, because they can just import Sizzle\"","msgtype":"m.text"},"ts":1398432491000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"False analogy","msgtype":"m.text"},"ts":1398432499000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It would be as if you had a QSA that only worked on SVG","msgtype":"m.text"},"ts":1398432511000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and Sizzle worked on any DOM","msgtype":"m.text"},"ts":1398432515000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"oh and implicit in that vision was that response.body is a stream of arraybuffers because that is the primitive","msgtype":"m.text"},"ts":1398432607000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Well in this case, Sizzle works in more browsers than QSA","msgtype":"m.text"},"ts":1398432611000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"we're talking about the far-future","msgtype":"m.text"},"ts":1398432625000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"where both streams and SW are there","msgtype":"m.text"},"ts":1398432634000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so people are now faced with a choice","msgtype":"m.text"},"ts":1398432640000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"something that they have to remember to look up for SW","msgtype":"m.text"},"ts":1398432647000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or something that works for every stream in the same way","msgtype":"m.text"},"ts":1398432651000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and that they already use for lots of other things in their code","msgtype":"m.text"},"ts":1398432674000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hmm, this is a lot of future-prediction. Aside from that, SW is likely to land before streams, and we need to offer a way for people to get at response/request bodies","msgtype":"m.text"},"ts":1398432732000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"We've reserved .body for a readable stream","msgtype":"m.text"},"ts":1398432784000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes, as i said, that's fine. there is a sequencing problem. but they will be conceptually vestigal after streams land, and---i predict---perceived as legacy vestiges.","msgtype":"m.text"},"ts":1398432784000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yay :)","msgtype":"m.text"},"ts":1398432818000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I'm not confident in that prediction, but it doesn't matter","msgtype":"m.text"},"ts":1398432829000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1398432842000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i would urge you to not have any blobs in new APIs and just use ArrayBuffers","msgtype":"m.text"},"ts":1398432859000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i might be missing something. but ArrayBuffers are JS's binary type.","msgtype":"m.text"},"ts":1398432875000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"not a good suggestion; both Blobs and ArrayBuffers are useful and serve different purposes","msgtype":"m.text"},"ts":1398432914000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and blobs have lots of problems regarding racy weak-ref sematnics","msgtype":"m.text"},"ts":1398432921000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"no they don't...","msgtype":"m.text"},"ts":1398432938000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: educate me. what purpose do Blobs serve that ArrayBuffers do not serve.","msgtype":"m.text"},"ts":1398432939000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zewt: What's wrong with .to(type)? The intention is to offer something like .responseType and .response in XHR, but not that awful","msgtype":"m.text"},"ts":1398432954000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yes, they do. we were just going over them in TAG.","msgtype":"m.text"},"ts":1398432956000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=25081","msgtype":"m.text"},"ts":1398432985000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"being able to represent data that's stored on disk, which can't be accessed synchronously, and (as a corrolary to that) being able to represent large blocks of data which need to be splashed to disk","msgtype":"m.text"},"ts":1398432993000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"The former is Promise<ArrayBuffer>","msgtype":"m.text"},"ts":1398433016000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"the latter is arrayBuffer","msgtype":"m.text"},"ts":1398433023000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"blob reading is underdefined, but that's not an inherent problem with blobs themselves (and it's being worked on)","msgtype":"m.text"},"ts":1398433055000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that doesn't make sense at all","msgtype":"m.text"},"ts":1398433075000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"JakeA: why `to(\"type\")` instead of `toType`?","msgtype":"m.text"},"ts":1398433115000,"senderName":"tobie__","senderId":"tobie__@irc"},
{"content":{"body":"if you get a File from a user via <input>, you don't want a callback system wrapping ArrayBuffer, you want a File (a Blob)","msgtype":"m.text"},"ts":1398433116000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"what purposes does a File serve that an ArrayBuffer does not.","msgtype":"m.text"},"ts":1398433136000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":".name","msgtype":"m.text"},"ts":1398433143000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"{ name, data } done","msgtype":"m.text"},"ts":1398433157000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"structured clone wouldn't work, which things like postMessage and IndexedDB depend on","msgtype":"m.text"},"ts":1398433169000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"structured clone works fine with ArrayBuffers","msgtype":"m.text"},"ts":1398433184000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and works fine with shallow objects containing arraybuffers","msgtype":"m.text"},"ts":1398433191000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it seems like you don't have a basic understanding of what Blob is if you think it can be replaced with a callback to ArrayBuffer","msgtype":"m.text"},"ts":1398433193000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's possible, but nobody here is saying anything otherwise","msgtype":"m.text"},"ts":1398433204000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it appears to be a binary data type with strictly less features than arraybuffer","msgtype":"m.text"},"ts":1398433213000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"if you have a File pointing to a user-space file, you can stash the File object in History API (via structured clone), and reload it later after the session is restored, regaining access to the file (as long as it hasn't changed), without the UA having to make a deep copy of the file","msgtype":"m.text"},"ts":1398433287000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"tobie__: That's the other option, but if they're going to be legacy (as Domenic_) suggests, I'd rather have one method than more than one. Also, naming the function that gives you a string is tough :D","msgtype":"m.text"},"ts":1398433297000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"i don't begin to see how that could map to a callback to a bunch of ArrayBuffers","msgtype":"m.text"},"ts":1398433310000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can seek into a Blob to read an arbitrary subset, without reading unwanted stuff from disk; same","msgtype":"m.text"},"ts":1398433349000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: ArrayBuffers and blobs are both things that can be transferred without making deep copies. What about blobs gives them this capability that you claim array buffers don't have?","msgtype":"m.text"},"ts":1398433367000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"hmm, seeking is interesting. thanks, that is compelling. although it sounds like the concept of \"file handle\" and \"binary data\" have been conflated into the blob concept.","msgtype":"m.text"},"ts":1398433427000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"if you store a File pointing to a user's document, the UA can simply internally store something like { type: \"File\", path: \"c:/Documents/resume.txt\", mtime: 12345 /* don't allow access if the mtime changes */ }, and later restore the File from that","msgtype":"m.text"},"ts":1398433451000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ok, so *File*s have special capabilities","msgtype":"m.text"},"ts":1398433467000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"*Blob*s do not","msgtype":"m.text"},"ts":1398433470000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"no, File == Blob, except for a bit of extra data (the filename)","msgtype":"m.text"},"ts":1398433490000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"And that's still an optimization","msgtype":"m.text"},"ts":1398433492000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(i think they should be the same type)","msgtype":"m.text"},"ts":1398433496000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"You could do the same with a file-backed arraybuffer","msgtype":"m.text"},"ts":1398433508000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"not preemptively reading or making a copy of a 500 GB file from disk is not an optimization in any practical sense","msgtype":"m.text"},"ts":1398433523000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"file handles as a use case is interesting, i agree","msgtype":"m.text"},"ts":1398433559000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(okay, too many zeroes in that example)","msgtype":"m.text"},"ts":1398433567000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if i think of the only use case for blobs as being to represent seekable file handles, that's fine","msgtype":"m.text"},"ts":1398433569000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but e.g. using them to represent http responses is just weird","msgtype":"m.text"},"ts":1398433585000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"depends on the case","msgtype":"m.text"},"ts":1398433615000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i agree there are fewer cases where it's optimal for that","msgtype":"m.text"},"ts":1398433634000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i appreciate you being willing to stick with me until i got it.)","msgtype":"m.text"},"ts":1398433639000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"only a few more minutes before I have to head to work, so I have a time cap :)","msgtype":"m.text"},"ts":1398433674000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"there are probably better examples, but: reading a 100 MB archive from the server (say, game data), then reading data out of it (loading textures for the game)","msgtype":"m.text"},"ts":1398433730000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"with Blob, the UA can read the big file to disk (it may not even have enough memory to store all that live); when you slice out the pieces you need it reads just the data you ask for","msgtype":"m.text"},"ts":1398433765000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ArrayBuffer can never stash data on disk, because it can be accessed synchronously","msgtype":"m.text"},"ts":1398433791000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"with streams, you get to choose explicitly ;)","msgtype":"m.text"},"ts":1398433819000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"one other thing Blob allows is shallow copies when posting to Workers, since it's immutable (ArrayBuffer *might* be able to do that, if there was a way to mark it read-only...)","msgtype":"m.text"},"ts":1398433830000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"choosing that should be up to the UA (which knows how much memory it has, etc)","msgtype":"m.text"},"ts":1398433856000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ArrayBuffers are transferable already","msgtype":"m.text"},"ts":1398433857000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"transferable isn't a shallow copy, it's moving the data outright","msgtype":"m.text"},"ts":1398433869000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Ah I see","msgtype":"m.text"},"ts":1398433878000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"you can post a Blob to 10 workers, say to give a copy of data to a bunch of helpers without making 10 full copies","msgtype":"m.text"},"ts":1398433900000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"frozen arraybuffers are a thing, yeah. but i doubt UAs do the shallow copy today","msgtype":"m.text"},"ts":1398434008000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"plus lots of people hate freeze because it only works in certain specific cases. ArrayBuffers happen to be one of those cases, but the distaste remains.","msgtype":"m.text"},"ts":1398434072000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: what I meant was that the headers influence the processing of the body","msgtype":"m.text"},"ts":1398434100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: so if you just pipe the body, you lose things such as encoding, MIME type","msgtype":"m.text"},"ts":1398434119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's a good point. there are workarounds of course but you would ideally want `res.body.pipeThrough(new AutoTextDecoder())` to be able to consult the headers. Instead of e.g. `res.body.pipeThrough(new TextDecoder(res.headers.get('Content-Encoding')))` (and I assume that the defaulting logic for that if no header is supplied is some horrendeous","msgtype":"m.text"},"ts":1398434354000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"encoding-spec thing.)","msgtype":"m.text"},"ts":1398434354000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"cringe","msgtype":"m.text"},"ts":1398434372000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic_: yeah, a Blob has that advantage over a stream or ArrayBuffer","msgtype":"m.text"},"ts":1398434571000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: it carries a MIME type with an optional charset parameter","msgtype":"m.text"},"ts":1398434586000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: strictly speaking, ArrayBuffer could carry any of the metadata that Blob and File do","msgtype":"m.text"},"ts":1398434599000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, a Blob could be a promise for an ArrayBuffer I suppose, except for the readonly aspect","msgtype":"m.text"},"ts":1398434632000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(which might not be a bad idea, to bring the data models closer together)","msgtype":"m.text"},"ts":1398434638000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(though I'd really try to merge File down into Blob first)","msgtype":"m.text"},"ts":1398434662000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"It sounds like promise for ArrayBuffer doesn't have seeking.","msgtype":"m.text"},"ts":1398434756000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"also compositing blobs together is easy and efficient","msgtype":"m.text"},"ts":1398434786000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"A blob sucks though","msgtype":"m.text"},"ts":1398434920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The biggest problem is the fixed size","msgtype":"m.text"},"ts":1398434939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aaargh. i spent so long debugging why there were 0 tests run. turned out i forgot setup({explicit_done:true}) and created my tests onload :-(","msgtype":"m.text"},"ts":1398434958000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"And synchronous availability of that size","msgtype":"m.text"},"ts":1398434962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"blobs represent immutable data, so it's fine that it's fixed, but yes, it's lame that the property is sync","msgtype":"m.text"},"ts":1398434978000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zcorpan: :(","msgtype":"m.text"},"ts":1398435163000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Maybe if there were no tests it should give some helpful hints","msgtype":"m.text"},"ts":1398435182000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or if it tries to create tests after the harness thinks it's done?","msgtype":"m.text"},"ts":1398435214000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"JakeA: maybe we should not use fetch() for the API where you need to read the response","msgtype":"m.text"},"ts":1398435293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but instead something like fetchJSON()","msgtype":"m.text"},"ts":1398435301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: or fetchString()","msgtype":"m.text"},"ts":1398435323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and those would take care of doing the proper decoding and just hand you back a promise with the JSON object or string (or maybe something slightly more complicated that also exposes some other data from the response)","msgtype":"m.text"},"ts":1398435367000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Do those methods mask the status etc of the request?","msgtype":"m.text"},"ts":1398435419000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: response?","msgtype":"m.text"},"ts":1398435436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: depends on what we want","msgtype":"m.text"},"ts":1398435443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, sorry","msgtype":"m.text"},"ts":1398435445000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: that makes a decent amount of sense to me given that it encapsulates a lot of encoding-spec and fetch-spec complexity","msgtype":"m.text"},"ts":1398435468000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"e.g. i assume fetchString() is actually quite a lot of code on top of raw fetchArrayBufferSegments()","msgtype":"m.text"},"ts":1398435497000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"It might not be that much as I'd force it to be utf-8","msgtype":"m.text"},"ts":1398435552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1398435556000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"General comment: I don't mean to push streams too much as the panacea. I think they will solve lots of problems because they have done so in Node pretty well. But I realize I'm all talk at this point, and so am totally fine with skepticism and \"interim\" solutions until I can convert that talk into actual results.","msgtype":"m.text"},"ts":1398435620000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I'm not skeptic about streams at all. My concerns are around saying \"Hey devs, this new fetch method is way better than XHR. If you want to get some JSON, just call fetch('yourjson.json').then(… then import some libraries from NPM…\"","msgtype":"m.text"},"ts":1398435916000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think we should offer things like fetchJSON if we want to compete with libraries","msgtype":"m.text"},"ts":1398435969000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Why do you want to compete with libraries?","msgtype":"m.text"},"ts":1398435978000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: less to reason about what is going amiss","msgtype":"m.text"},"ts":1398436020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"developers should never need libraries for common things (like \"get some JSON\")","msgtype":"m.text"},"ts":1398436021000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Domenic_: I actually wanted to ask you if you're still thinking of developing JSIDL or IDL or some such","msgtype":"m.text"},"ts":1398436064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: as IDL not being maintained is a pain and \"just describe it in prose\" is massive ugh","msgtype":"m.text"},"ts":1398436084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: branching at that point seems weird to me, response processing feels separate to making the request","msgtype":"m.text"},"ts":1398436094000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"It's less about competing with libraries & more about making the common stuff easier. We're not doing this with SW, because we don't know what the common things are, but we do know people like to fetch json","msgtype":"m.text"},"ts":1398436145000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: XMLHttpRequest and many libraries do the same though","msgtype":"m.text"},"ts":1398436178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought you saw XHR as legacy? (I thought you said that when I asked for .send to return a promise)","msgtype":"m.text"},"ts":1398436227000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So the new thing, fetch() shouldn't regress on the old thing in terms of ease-of-use","msgtype":"m.text"},"ts":1398436244000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA++","msgtype":"m.text"},"ts":1398436273000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"JakeA: yes, however, I don't think overloading the new thing for many different scenarios is the best solution","msgtype":"m.text"},"ts":1398436315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: if you look at libraries they offer different fetch methods for the common cases","msgtype":"m.text"},"ts":1398436333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not clear to me that there are many different scenarios","msgtype":"m.text"},"ts":1398436336000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"not regressing is a pretty good line to draw","msgtype":"m.text"},"ts":1398436347000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"jgraham: euh","msgtype":"m.text"},"ts":1398436362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Depends which libraries.","msgtype":"m.text"},"ts":1398436370000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: The libraries also fail on 404","msgtype":"m.text"},"ts":1398436423000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that's an interesting usability question","msgtype":"m.text"},"ts":1398436507000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: ugh","msgtype":"m.text"},"ts":1398436516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(btw, I don't think fetch() should fail on 404)","msgtype":"m.text"},"ts":1398436531000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"should it fail on 500?","msgtype":"m.text"},"ts":1398436546000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: to go back a few steps; there was a case made when .responseType was introduced, that it was supposed to be settled before the response body came streaming in","msgtype":"m.text"},"ts":1398436560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"people will have to install something from npm to get fail on 404... ;)","msgtype":"m.text"},"ts":1398436570000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: to allow for UA optimizations","msgtype":"m.text"},"ts":1398436574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: is that no longer needed?","msgtype":"m.text"},"ts":1398436581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"^ key question","msgtype":"m.text"},"ts":1398436589000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_:  if (r.status != 200) throw Error(\"Nah\")","msgtype":"m.text"},"ts":1398436599000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: it fails on \"network error\", see Fetch","msgtype":"m.text"},"ts":1398436618000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: anything else is a successful fetch, but might be failure on the protocol level","msgtype":"m.text"},"ts":1398436640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i was being kind of silly. let's talk about the UA optimizations. that's more interesting.","msgtype":"m.text"},"ts":1398436649000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"IN THEORY the UA shouldn't be able to optimize any better than giving the raw data to JS and letting JS optimzie","msgtype":"m.text"},"ts":1398436682000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I think it mostly came down to being able to decide what kind of object was going to be used as output before the output arrived","msgtype":"m.text"},"ts":1398436689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm unaware of the optimisation thing. I'd assumed it was because .response would change type as new formats were added, and that would be baaaad","msgtype":"m.text"},"ts":1398436703000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I feel that if the UA can optimize better then either (a) it's a matter of raw language primitives that JS is lacking; or (b) the API is not good enough.","msgtype":"m.text"},"ts":1398436704000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(i.e. the API does not expose enough of the lower-level things JS code needs to be able to do things fast.)","msgtype":"m.text"},"ts":1398436732000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(a) is worrying but i imagine maybe you can't get any faster than blitting response data into an ArrayBuffer backing store?","msgtype":"m.text"},"ts":1398436765000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: well, say if you do to(x)","msgtype":"m.text"},"ts":1398436840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: first I do to(\"json\") and then I do to(\"text\") on the same response, that would not allow for said optimizations","msgtype":"m.text"},"ts":1398436875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I'm seeing issues with the enum thing. Although to('unknown type') could reject","msgtype":"m.text"},"ts":1398436876000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: Oh I see, true","msgtype":"m.text"},"ts":1398436903000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"The optimization being that you directly parse into JSON upon getting the bits and lose the original data","msgtype":"m.text"},"ts":1398436919000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm absolutely knowledgeless about the optimisation history of responseType","msgtype":"m.text"},"ts":1398436949000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but. is parsing json from a C++/Rust buffer faster than parsing it in JS from an ArrayBuffer?","msgtype":"m.text"},"ts":1398436963000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Seems probable :-/","msgtype":"m.text"},"ts":1398436972000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: we designed responseType, because responseXML, responseText, et al was such a mess","msgtype":"m.text"},"ts":1398436975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and only allowed for lazy optimization, and you'd still have to keep enough data around","msgtype":"m.text"},"ts":1398437005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: JSON.parse() exists","msgtype":"m.text"},"ts":1398437018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think that's at a whole different level than a byte-by-byte parser...","msgtype":"m.text"},"ts":1398437055000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: Would need to define if to ends or tees the stream","msgtype":"m.text"},"ts":1398437057000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if `to`","msgtype":"m.text"},"ts":1398437065000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could do that to() only works the first time you invoke it","msgtype":"m.text"},"ts":1398437093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: which kinda allows for most of the desired optimizations","msgtype":"m.text"},"ts":1398437105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this seems good","msgtype":"m.text"},"ts":1398437111000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: it's not very promise-y maybe","msgtype":"m.text"},"ts":1398437118000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's stream-ey though","msgtype":"m.text"},"ts":1398437126000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"promis-ey?","msgtype":"m.text"},"ts":1398437134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1398437140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if you desugar that to streams the most natural way it would indeed consume the stream","msgtype":"m.text"},"ts":1398437145000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Well, it'd be streamy the other way too, it'd be teeing it right?","msgtype":"m.text"},"ts":1398437151000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(am I using the right terminology?)","msgtype":"m.text"},"ts":1398437162000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yeah it would be, and yeah you are","msgtype":"m.text"},"ts":1398437168000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but introducing a tee is an extra step","msgtype":"m.text"},"ts":1398437175000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"JakeA: we could further say that if you invoke .to .body is set to null","msgtype":"m.text"},"ts":1398437182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1398437188000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"that might not mean much","msgtype":"m.text"},"ts":1398437191000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Nah, it's just an exhausted stream","msgtype":"m.text"},"ts":1398437197000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":".body will be an in-the-process-of-being-read stream","msgtype":"m.text"},"ts":1398437202000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or that","msgtype":"m.text"},"ts":1398437207000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"it will be exhausted when the promise fulfills","msgtype":"m.text"},"ts":1398437211000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"what if you read from .body and the invoke .to?","msgtype":"m.text"},"ts":1398437222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to would reject","msgtype":"m.text"},"ts":1398437230000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1398437232000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"or invoke .to and read from body?","msgtype":"m.text"},"ts":1398437235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would give you the JSON representation of the rest of the body","msgtype":"m.text"},"ts":1398437240000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"which would probably be a SyntaxError","msgtype":"m.text"},"ts":1398437248000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1398437255000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"if you invoke .to and .read() from the body they're going to interfere with each other pretty badly","msgtype":"m.text"},"ts":1398437265000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Is there a way to tell if you're getting the first bytes of a stream?","msgtype":"m.text"},"ts":1398437268000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"but think of this in terms of desugaring","msgtype":"m.text"},"ts":1398437269000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"like a current position, or something","msgtype":"m.text"},"ts":1398437284000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"because to() could throw if that isn't zero","msgtype":"m.text"},"ts":1398437298000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Domenic_: normally we defend somewhat against such errors","msgtype":"m.text"},"ts":1398437315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, as long as it's thought of in terms of defense, that makes sense to me.","msgtype":"m.text"},"ts":1398437332000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(by throw I mean reject)","msgtype":"m.text"},"ts":1398437334000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not in the base stream interface (since bytes are not necessarily a concept at that level). But byte streams could easily add such a property.","msgtype":"m.text"},"ts":1398437351000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: if someone has a use case we could allow it I suppose","msgtype":"m.text"},"ts":1398437355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I feel like .read() + .to() might have a use case, but the reverse I can't think of one.","msgtype":"m.text"},"ts":1398437382000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: so the only thing that remains then is how to pass additional info along with a stream","msgtype":"m.text"},"ts":1398437390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: so you have bytes + encoding for instance which a TransformStream can use if needed","msgtype":"m.text"},"ts":1398437408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I am thinking on that. will open an issue.","msgtype":"m.text"},"ts":1398437410000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"the model right now is that the destination doesn't know about what's being piped to it. the pipe just writes into it like anyone else","msgtype":"m.text"},"ts":1398437435000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"but this is a clear use case motivating the ability to either tell the destination metadata first, or have the destination query the source","msgtype":"m.text"},"ts":1398437462000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"in node this is handled fairly jankily. source does dest.emit('pipe', source) when piping begins.","msgtype":"m.text"},"ts":1398437546000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"great","msgtype":"m.text"},"ts":1398437579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I feel like we made some progress on this API","msgtype":"m.text"},"ts":1398437596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"People who leave writing talks late: I do not know how you survive","msgtype":"m.text"},"ts":1398437786000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"not all of us have fancy explosions in our talks jake ;)","msgtype":"m.text"},"ts":1398438275000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"I'm using that joke again. I leaned how to do repeats at the BBC","msgtype":"m.text"},"ts":1398438298000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if we can turn JakeA into some kind of media element","msgtype":"m.text"},"ts":1398438354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Play, pause, repeat","msgtype":"m.text"},"ts":1398438374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"As long as I inherit from stream, I get exhausted a lot","msgtype":"m.text"},"ts":1398438409000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"especially after a small amount of exercise","msgtype":"m.text"},"ts":1398438428000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"pub.pipe(jake).pipe(bed).pipe(talk).repeat()","msgtype":"m.text"},"ts":1398438499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1398438513000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(Obvious disclaimer: I have no idea what I'm doing)","msgtype":"m.text"},"ts":1398438523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I need a t-shirt with that. Or \"cheerfully incompetent\"","msgtype":"m.text"},"ts":1398438580000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"TypeError: sessionStorage is null","msgtype":"m.text"},"ts":1398438665000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WTF?","msgtype":"m.text"},"ts":1398438668000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that in \"private browsing\"?","msgtype":"m.text"},"ts":1398438695000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1398438716000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://w3c-test.org/websockets/unload-a-document/001.html","msgtype":"m.text"},"ts":1398438718000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In gecko","msgtype":"m.text"},"ts":1398438720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wow the new html spec buttons look like shit at 2560x1440. they looked great at 1600x900 on my work computer.","msgtype":"m.text"},"ts":1398438957000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"They look like shit at 1600x900 on my computer","msgtype":"m.text"},"ts":1398439018000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So much for device independence!","msgtype":"m.text"},"ts":1398439026000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"mathiasbynens: the fix was to fix the link to point to the right url :-)","msgtype":"m.text"},"ts":1398447017000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic_: send me a screenshot showing the \"looks like shit\"? (i made them all smaller, maybe that's the difference?)","msgtype":"m.text"},"ts":1398447143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: if you have a better idea, let me know! i'm scraping the bottom of the barrel for ideas for making the top of the spec more approachable","msgtype":"m.text"},"ts":1398447168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's the way they spread wayyy across the window instead of being a 3x3 grid","msgtype":"m.text"},"ts":1398447186000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah that's intentional","msgtype":"m.text"},"ts":1398447209000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the 3x3 grid was making weird optical artefacts and taking way too much room","msgtype":"m.text"},"ts":1398447225000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: It's hard to imagine how it could look worse than http://i.imgur.com/NkwmZz3.png","msgtype":"m.text"},"ts":1398447374000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is the single page spec on my computer","msgtype":"m.text"},"ts":1398447386000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(after a bit of scrolling and hovering)","msgtype":"m.text"},"ts":1398447402000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well that's just a bug","msgtype":"m.text"},"ts":1398447412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1398447424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's a bug","msgtype":"m.text"},"ts":1398447427000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i mean it's a bug with the browser, not the page","msgtype":"m.text"},"ts":1398447438000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(that we can easilly avoid by not having the gradient)","msgtype":"m.text"},"ts":1398447438000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and it's bad design of the boxes","msgtype":"m.text"},"ts":1398447447000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the overflowing text)","msgtype":"m.text"},"ts":1398447453000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ooh, the overflowing text is interesting","msgtype":"m.text"},"ts":1398447473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess you don't have Helvetica Neue","msgtype":"m.text"},"ts":1398447479000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's a good font on your system that's sans-serif and narrow?","msgtype":"m.text"},"ts":1398447491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And bad design in general (the use of underline at least, possibly the choice of colours, the drop shadow)","msgtype":"m.text"},"ts":1398447527000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I am not a designer, so that might not be a useful critique, but those elements seem bad to me)","msgtype":"m.text"},"ts":1398447551000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have no idea. Surely the boxes should make sure they are wide enough for the contained text","msgtype":"m.text"},"ts":1398447617000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"obviously opinions differ on whether the general approach is ugly, but since i'm out of other ideas, the only way i can make progress on that is if someone gives a better idea","msgtype":"m.text"},"ts":1398447713000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the boxes are fixed-width so that they line up in a grid","msgtype":"m.text"},"ts":1398447723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"CSS doesn't to my knowledge give me a way to set all of them to the max of their needed widths","msgtype":"m.text"},"ts":1398447734000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though that certainly would be nice","msgtype":"m.text"},"ts":1398447743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well then I guess you need a script","msgtype":"m.text"},"ts":1398447760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(note that the general style here is very similar to what whatwg.org has had for years)","msgtype":"m.text"},"ts":1398447785000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"But I think I have given concrete suggestions (remove the gradient, the drop shadow, and the underline)","msgtype":"m.text"},"ts":1398447801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the gradient is cool, the drop shadow is cool, and the underline is needed to show it's a link :-P","msgtype":"m.text"},"ts":1398447821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, no, no","msgtype":"m.text"},"ts":1398447829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i mean, this is all aethetics, so it's hard to really argue one way or the other","msgtype":"m.text"},"ts":1398447859000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i actually prefer the gradient that firefox does on the single-page spec","msgtype":"m.text"},"ts":1398447878000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just four bands","msgtype":"m.text"},"ts":1398447883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"might switch to that intentionally","msgtype":"m.text"},"ts":1398447887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: google's search results suddenly stopped underlining the main link ... drives me crazy","msgtype":"m.text"},"ts":1398448058000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1398448068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hard to read","msgtype":"m.text"},"ts":1398448072000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"man, gradients in blink are all kinds of buggy","msgtype":"m.text"},"ts":1398448863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Has anyone made (spec, implementation) headway on \"replace DOMError with DOMException\" ?","msgtype":"m.text"},"ts":1398449014000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"what has happened to the html spec","msgtype":"m.text"},"ts":1398450540000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"uh, dom spec has the same odd background","msgtype":"m.text"},"ts":1398450602000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"green text with dark gray background isn't too easy to read","msgtype":"m.text"},"ts":1398450632000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i'm playing with the spec style sheet. i'm not finding something i like, though. so if you have any ideas, do let me know :-)","msgtype":"m.text"},"ts":1398450637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it shouldn't be a dark grat background","msgtype":"m.text"},"ts":1398450656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"can you send me a screenshot?","msgtype":"m.text"},"ts":1398450661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gray","msgtype":"m.text"},"ts":1398450663000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not too dark","msgtype":"m.text"},"ts":1398450683000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(if you're using chrome, chrome has all kinds of bugs with this)","msgtype":"m.text"},"ts":1398450685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, it looks totally different in chrome","msgtype":"m.text"},"ts":1398450723000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"are you perhaps using some old blink/webkit only gradient syntax?","msgtype":"m.text"},"ts":1398450740000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1398450747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox renders it right","msgtype":"m.text"},"ts":1398450750000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"chrome gets it all wrong","msgtype":"m.text"},"ts":1398450754000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyhow, what is wrong with the old background?","msgtype":"m.text"},"ts":1398450789000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"nothing, particularly.","msgtype":"m.text"},"ts":1398450799000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or are you just making the test case harder to load in browsers","msgtype":"m.text"},"ts":1398450803000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just seeing if i can find something better.","msgtype":"m.text"},"ts":1398450805000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/harder/slower/","msgtype":"m.text"},"ts":1398450807000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1398450809000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"did the spec just turn into an acid test?","msgtype":"m.text"},"ts":1398450811000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"the initial reason for playing with the background was that i was trying to find a way to remove the weird artefacts between the buttons on the html spec","msgtype":"m.text"},"ts":1398450829000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"KevinMarks_: it has never been an acid test, but something more useful","msgtype":"m.text"},"ts":1398450841000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but those are gone by just making the buttons smaller, now","msgtype":"m.text"},"ts":1398450842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"goes back to the smooth gradient","msgtype":"m.emote"},"ts":1398450868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in chrome I see a smooth gradient","msgtype":"m.text"},"ts":1398450886000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but oddly slow scrolling speed","msgtype":"m.text"},"ts":1398450892000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"chrome's a disaster","msgtype":"m.text"},"ts":1398450916000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"trying zooming in and out","msgtype":"m.text"},"ts":1398450919000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or selecting text","msgtype":"m.text"},"ts":1398450931000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and the bands are the wrong widths","msgtype":"m.text"},"ts":1398450992000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and sometiems it's at the wrong angle","msgtype":"m.text"},"ts":1398450996000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it repaints badly","msgtype":"m.text"},"ts":1398450999000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: so I was going to look at the spec and what it says about img elements and img loading in case the element is from a document which isn't in any current/active browsing context","msgtype":"m.text"},"ts":1398451036000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"looks like blink just doesn't let one to load a new image using such img element","msgtype":"m.text"},"ts":1398451055000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"gecko doesn't have such limitation","msgtype":"m.text"},"ts":1398451062000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this is an img that's in a browsing context but not active?","msgtype":"m.text"},"ts":1398451072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1398451086000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"say, img element from an iframe","msgtype":"m.text"},"ts":1398451092000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and then iframe is removed from its parent doc","msgtype":"m.text"},"ts":1398451100000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the iframe in that case loses its browsing context, no?","msgtype":"m.text"},"ts":1398451130000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or a new page is loaded to the iframe or so","msgtype":"m.text"},"ts":1398451136000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hixie: right","msgtype":"m.text"},"ts":1398451147000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"\"When an iframe element is removed from a document, the user agent must discard the nested browsing context.\"","msgtype":"m.text"},"ts":1398451148000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there the img wouldn't have a browsing context at all","msgtype":"m.text"},"ts":1398451160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not just not an active document in a browsing context","msgtype":"m.text"},"ts":1398451166000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, what about the case when a new page is loaded to the iframe","msgtype":"m.text"},"ts":1398451205000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"looks like the spec is unclear on all this","msgtype":"m.text"},"ts":1398451279000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if there's no browsing context, \"fetch\" doesn't do anything. if there's a browsing context and it's not active, \"fetch\" queues up the tasks but they don't do anything until the document is active.","msgtype":"m.text"},"ts":1398451314000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the img would suddenly update when you navigate back to that page in the session history, in theory","msgtype":"m.text"},"ts":1398451339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which seems unlikely to match browsers","msgtype":"m.text"},"ts":1398451343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but who knows","msgtype":"m.text"},"ts":1398451351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i haven't tested it","msgtype":"m.text"},"ts":1398451354000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"blink say something like \"request cancelled\" or some such in the console","msgtype":"m.text"},"ts":1398451395000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, but ok, queuing makes sense, possibly","msgtype":"m.text"},"ts":1398451445000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i'm soon going to be rewriting the img loading section, so if this needs to be adjusted, now's a good time to do it","msgtype":"m.text"},"ts":1398451839000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: In the interests of being constructive, I think http://imgur.com/zhxdXcC is an improvement","msgtype":"m.text"},"ts":1398452339000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although that brown is still particularly ugly","msgtype":"m.text"},"ts":1398452360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you could just make it a 2048 clone and use their colours","msgtype":"m.text"},"ts":1398453599000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"jgraham: that's too big, though. takes up so much room that you can hardly see any of the ToC on anything but a big screen.","msgtype":"m.text"},"ts":1398453967000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: (it's more or less what we had yesterday)","msgtype":"m.text"},"ts":1398453975000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: (also i can't tell that those are links)","msgtype":"m.text"},"ts":1398454009000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: (and it suffers from the intersection optical illusion problem that i was trying to get rid of with the gradient)","msgtype":"m.text"},"ts":1398454044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: (also, the green isn't whatwg green and the other colours are a bit bright... we were trying to make them darker yesterday because people complained about it being too in your face)","msgtype":"m.text"},"ts":1398454183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Being able to see the ToC isn't very useful anyway. The brightness is intentional because your colours are really ugly and muddy. There's a reason that no one makes UIs in dark colours. Also I think it is quite easy to guess that they are links. I mean at least as easy as it is to guess that the android/iOS/windows UI elements for launching applications are clickable","msgtype":"m.text"},"ts":1398454538000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the green is the same hue/saturation but 50% brighter","msgtype":"m.text"},"ts":1398454573000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"lots of UIs are dark","msgtype":"m.text"},"ts":1398454584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Pretty sure the lat time I saw that teal colour in a UI was a non-default windows 3.1 theme","msgtype":"m.text"},"ts":1398454649000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the launcher on Android uses icons, with a pictures and a label, which has a long history of being clickable. Here we're making things look just like labels.","msgtype":"m.text"},"ts":1398454665000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't think there's a parallel.","msgtype":"m.text"},"ts":1398454669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my mail client, my irc client, and my editor all have black backgrounds. Can't get much darker than that.","msgtype":"m.text"},"ts":1398454714000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the buttons at the top of http://www.apple.com/ are dark","msgtype":"m.text"},"ts":1398454747000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(and don't look clickable, but that's another story)","msgtype":"m.text"},"ts":1398454764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK, let me rephrase","msgtype":"m.text"},"ts":1398454768000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Those colours are ugly","msgtype":"m.text"},"ts":1398454774000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Brighter colours are less ugly","msgtype":"m.text"},"ts":1398454786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yesterday jcgregorio argued the opposite.","msgtype":"m.text"},"ts":1398454795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Your boxes don't look clickable","msgtype":"m.text"},"ts":1398454795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no, the boxes don't. but the text is underlined, so the text is obviously a link.","msgtype":"m.text"},"ts":1398454815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hi all. Is it possible to make SVG elements to have relative coordinates (to previous element). I want to implement collapsible tree control (where you can expand items by clicking on [+]). I consider html+canvas and svg. In html it's not easy to draw. But in svg it's hard to make simething to collapse like in html (display: none). In svg it's possible to make things like display:hidden.","msgtype":"m.text"},"ts":1398454819000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1398454819000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There is nothing about your text that says link to me","msgtype":"m.text"},"ts":1398454832000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1398454844000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if underline doesn't mean \"link\" to you, i don't know what to say","msgtype":"m.text"},"ts":1398454855000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Huge amounts of the web doesn't use underline for links anymore","msgtype":"m.text"},"ts":1398454881000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway, i'm not a fan of this whole box approach","msgtype":"m.text"},"ts":1398454881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"huge amounts of the web suck :-)","msgtype":"m.text"},"ts":1398454890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1398454898000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Because it's ugly and makes the text hard to read","msgtype":"m.text"},"ts":1398454899000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Despite this people still manage to figure out which things are links","msgtype":"m.text"},"ts":1398454950000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anyway. as i said before, what i'd really like is some better solution that gets away from this whole block paradigm","msgtype":"m.text"},"ts":1398455069000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sure","msgtype":"m.text"},"ts":1398455115000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"some sites use a similar grid approach but with icons, but i'd rather not have to link in a bunch of images","msgtype":"m.text"},"ts":1398455152000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(not to mention having to get the artwork)","msgtype":"m.text"},"ts":1398455159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In the meantime, can we have something that isn't going to actively make me add a user stylesheet if it doesn't change?","msgtype":"m.text"},"ts":1398455166000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"give me a break, the current style isn't that bad","msgtype":"m.text"},"ts":1398455193000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's way better than what we had before","msgtype":"m.text"},"ts":1398455200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it's not like you're gonna spend any time actually looking at the top of the spec","msgtype":"m.text"},"ts":1398455226000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't know what to say. I actually am going to turn it off if it stays like this. That's just a fact","msgtype":"m.text"},"ts":1398455229000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1398455245000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, these links aren't useful to either you or me anyway","msgtype":"m.text"},"ts":1398455298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so making them display:none would be an improvement for both of us","msgtype":"m.text"},"ts":1398455312000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but what i'm going for is trying to get new readers to see that there's useful things they could look at","msgtype":"m.text"},"ts":1398455334000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sure, I appreciate the idea","msgtype":"m.text"},"ts":1398455433000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it could be more annoying, you could steal http://leaverou.github.io/animatable/","msgtype":"m.text"},"ts":1398455539000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"jgraham: i played with it some more","msgtype":"m.text"},"ts":1398456226000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wondering what zcorpan meant by the \"xml\" restriction for <embed>, and \"it only gives a warning for foo:bar foo,bar etc, rather than an error\"","msgtype":"m.text"},"ts":1398456463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess he meant \"Any namespace-less attribute other than name, align, hspace, and vspace may be specified on the embed element, so long as its name is XML-compatible and contains no uppercase ASCII letters\"","msgtype":"m.text"},"ts":1398456490000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"How to make part of SVG to collapse?","msgtype":"m.text"},"ts":1398456519000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"and the warning in that case comes from the parser","msgtype":"m.text"},"ts":1398456528000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: \"Attribute names are said to be XML-compatible if they match the Name production defined in XML, they contain no U+003A COLON characters (:), and their first three characters are not an ASCII case-insensitive match for the string \"xml\".\"","msgtype":"m.text"},"ts":1398456545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: it seems there's not many people here who know svg well enough to help you :-(","msgtype":"m.text"},"ts":1398456560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm not sure that I need SVG. I want to visualize processes CPU consumption. For each process I have a plot that shows CPU utilization over the time. And for each process I know its children. So I want to show a process tree with the ability to collapse unneded subtree.","msgtype":"m.text"},"ts":1398456773000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Hixie: yeah so as far as the validator goes, the HTML parser already checks for XML-compatibility of attribute names now, and emits a warning if they're not XML-compatible. But in the case of embed, I guess it needs to be an error to conform to the spec. I guess we could have the parser check to see what element it has open at the point when it emits the current warning message, and if it's embed, change to emitting it as an error instead","msgtype":"m.text"},"ts":1398456811000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"HTML works better for collapsion. But SVG works better for plot drawing...","msgtype":"m.text"},"ts":1398456819000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"MikeSmith: well note that the i expect zcorpan to file a bug (if he hasn't already) asking for this to change","msgtype":"m.text"},"ts":1398456853000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: since apparently the very stable XML 1.0, fifth edition, has errata that removes this reservation.","msgtype":"m.text"},"ts":1398456873000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or something.","msgtype":"m.text"},"ts":1398456877000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but don't worry! TR/ drafts are STABLE.","msgtype":"m.text"},"ts":1398456885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1398456952000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1398456954000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"IZh you could look at d3.js - that makes interactive SVG easier","msgtype":"m.text"},"ts":1398457222000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"IZh: or put multiple SVG charts inline in HTML and use the HTML to collapse them","msgtype":"m.text"},"ts":1398457259000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"KevinMarks_: I thought about it. May be lots of svgs is better (although it will be hundreds or thousand). But it was strange to me that there are no more easy ways.","msgtype":"m.text"},"ts":1398457398000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"if they're individually linkable, that may be more generally useful - then you can share one weird one","msgtype":"m.text"},"ts":1398457448000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"IZh: By \"collapse\", what do you mean? Hide them?","msgtype":"m.text"},"ts":1398457450000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not only hide, but move all elements below it up.","msgtype":"m.text"},"ts":1398457489000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Like in html when you remove a paragraph, all subsequent paragraphs will be shifted up.","msgtype":"m.text"},"ts":1398457529000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Oh, if you're doing SVG, you have to handle all layout yourslef.","msgtype":"m.text"},"ts":1398457537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SVG is like using HTML with \"* { position: absolute !important; }\" applied.","msgtype":"m.text"},"ts":1398457557000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's for drawing, not for documents.","msgtype":"m.text"},"ts":1398457574000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But in svg I didn' find a way to provide relative coordinates. It seems, they are all absolute.","msgtype":"m.text"},"ts":1398457588000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Correct.","msgtype":"m.text"},"ts":1398457594000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So hiding the element doesn't move up next elements.","msgtype":"m.text"},"ts":1398457615000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Yes, that's what I'm saying.","msgtype":"m.text"},"ts":1398457623000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But why they don't have relative coords? :-)","msgtype":"m.text"},"ts":1398457672000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Of course, all could be done with the help of js","msgtype":"m.text"},"ts":1398457695000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"But I first tried to find a way without it.","msgtype":"m.text"},"ts":1398457717000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Because it's a drawing language, not a document language.  (Also, because the WG has traditionally been dominated by tool vendors, who don't care about hand-authoring, rather than people representing authors.)","msgtype":"m.text"},"ts":1398457820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Either use HTML for your document structure, using SVG for the actual drawings when you need it, or do the whole thing in SVG with a bunch of JS to handle layout.","msgtype":"m.text"},"ts":1398457847000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I recommend the former.","msgtype":"m.text"},"ts":1398457856000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I tried to avoid thousand svgs in one document. But it seems, I have no choice. :-)","msgtype":"m.text"},"ts":1398458041000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"There's no difference between 1k <svg> diagrams and a giant <svg> containing 1k diagrams.","msgtype":"m.text"},"ts":1398458126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, a lot of HTTP setup and teardowns?","msgtype":"m.text"},"ts":1398458168000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"or you mean inline SVG?","msgtype":"m.text"},"ts":1398458175000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"Inline","msgtype":"m.text"},"ts":1398458186000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"KevinMarks_: Inline SVG.","msgtype":"m.text"},"ts":1398458194000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah, OK.","msgtype":"m.text"},"ts":1398458206000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"Yeah, 1k external resources is clearly worse, but there's no reason to do that.","msgtype":"m.text"},"ts":1398458208000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well the reason is creating separate links for each diagram so you can share just one","msgtype":"m.text"},"ts":1398458238000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"with existing img UA model","msgtype":"m.text"},"ts":1398458254000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"You can do this too, with an appropriately smart preprocessor.","msgtype":"m.text"},"ts":1398458264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or img with a data URI for the SVG","msgtype":"m.text"},"ts":1398458294000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"And just make them linkable with an ID.  Why link to them separately?","msgtype":"m.text"},"ts":1398458311000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, http://dev.w3.org/csswg/css-syntax/#token-diagrams is just fine.","msgtype":"m.text"},"ts":1398458317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.bootchart.org/images/bootchart.png","msgtype":"m.text"},"ts":1398458457000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"as long as you don't want to copy one image","msgtype":"m.text"},"ts":1398458463000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"I want something like this.","msgtype":"m.text"},"ts":1398458469000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"But I want to collapse/expand a subtree of processes","msgtype":"m.text"},"ts":1398458497000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Like in a tree-like folder view.","msgtype":"m.text"},"ts":1398458517000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"d3 is good at that kind of thing https://github.com/mbostock/d3/wiki/Gallery","msgtype":"m.text"},"ts":1398458599000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"d3 is a library. But what will be in the DOM? Lots of <svg>? Is seems there is no other way.","msgtype":"m.text"},"ts":1398458714000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"Or to regenerate big image frow the data on the fly by d3.js.","msgtype":"m.text"},"ts":1398458755000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"From","msgtype":"m.text"},"ts":1398458762000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"yes, lots of svg in the dom","msgtype":"m.text"},"ts":1398458786000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"does validator.nu have a \"check the referer\" option?","msgtype":"m.text"},"ts":1398458789000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or did that get killed along with badges","msgtype":"m.text"},"ts":1398458804000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IZh: I have no clue why you think \"lots of <svg>\" is a bad thing.  It's not.  Just let it happen.","msgtype":"m.text"},"ts":1398458833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: does not have that option","msgtype":"m.text"},"ts":1398458858000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"SVG is great, shame more sites don't support it as an image type","msgtype":"m.text"},"ts":1398458899000,"senderName":"KevinMarks_","senderId":"KevinMarks_@irc"},
{"content":{"body":"TabAtkins: I thought it will be more easy for the browser to handle one big document than to handle 1000 inline documents.","msgtype":"m.text"},"ts":1398458942000,"senderName":"IZh","senderId":"IZh@irc"},
{"content":{"body":"MikeSmith: k","msgtype":"m.text"},"ts":1398459018000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"MikeSmith: is there a bookmarklet for validator.nu i could use?","msgtype":"m.text"},"ts":1398459029000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: there probably is but I don't know of any specific one. there are some browser plugins I know of","msgtype":"m.text"},"ts":1398459163000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1398459169000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"abarth: ping","msgtype":"m.text"},"ts":1398464773000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: hiya","msgtype":"m.text"},"ts":1398464797000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: do you guys have any special rules regarding loading data from filesystem:// in sandboxed pages?","msgtype":"m.text"},"ts":1398464820000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we've certainly had bugs in that area","msgtype":"m.text"},"ts":1398464859000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but I thought we fixed them","msgtype":"m.text"},"ts":1398464880000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the problem was that those URLs contain an origin string","msgtype":"m.text"},"ts":1398464889000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"and sandboxed iframes have origins that can't be represented a strings","msgtype":"m.text"},"ts":1398464901000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"that's not quite the attack I was thinking of though","msgtype":"m.text"},"ts":1398464936000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/platform/weborigin/SecurityOrigin.cpp&l=47","msgtype":"m.text"},"ts":1398464948000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i think we solve that problem with the security origin cache","msgtype":"m.text"},"ts":1398464957000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"which lets us use a memory address to represent a unique origin in some cases","msgtype":"m.text"},"ts":1398464968000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: speaking of origins. Did you see the recent discussion about origins for blob: URLs and data: URLs?","msgtype":"m.text"},"ts":1398465994000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"abarth: i put forward a proposal to fix the current mess of origins in data: URLs. I believe that different browsers still have different security handling of data:","msgtype":"m.text"},"ts":1398466036000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"a very handwavy proposal still","msgtype":"m.text"},"ts":1398466048000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: oh, what's the proposal","msgtype":"m.text"},"ts":1398466307000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1398466310000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"abarth: basically treat data: as out-of-origin unless the loader explicitly opts in to something else","msgtype":"m.text"},"ts":1398466341000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"at least in cases where the contents of the data: can run script","msgtype":"m.text"},"ts":1398466354000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"ah, something like that could work","msgtype":"m.text"},"ts":1398466390000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"so for <iframe src=\"data:...\"> it would be considered something similar to a sandboxed origin, unless you do <iframe src=\"data:...\" allowinheritorigin?","msgtype":"m.text"},"ts":1398466393000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":">","msgtype":"m.text"},"ts":1398466396000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we're working towards doing something similar internally in gecko","msgtype":"m.text"},"ts":1398466411000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"there's a little trickiness there","msgtype":"m.text"},"ts":1398466434000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"because you haven't linked the allowinheritorigin to the contents of the data URL in a strong way","msgtype":"m.text"},"ts":1398466455000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"yeah, navigation would get tricky","msgtype":"m.text"},"ts":1398466470000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the trouble we have in our implementation is that when we're asked to load a URL in a frame","msgtype":"m.text"},"ts":1398466514000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"is that what you mean?","msgtype":"m.text"},"ts":1398466515000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"(yes)","msgtype":"m.text"},"ts":1398466518000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"we don't have a fool-proof way to figure out where the load request came from","msgtype":"m.text"},"ts":1398466533000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"just shoot from the hip, that's what we do :)","msgtype":"m.text"},"ts":1398466558000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"docshell is awesome","msgtype":"m.text"},"ts":1398466561000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that might just be some work for us to boil that ocean and keep careful track of where the load comes from","msgtype":"m.text"},"ts":1398466564000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it's harder in WebKit, but I guess that's more Apple's problem now","msgtype":"m.text"},"ts":1398466594000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i think the idea would be to default all places to \"treat data: as sandbox-origin\", and then only whitelist particular code paths","msgtype":"m.text"},"ts":1398466606000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"in WebKit, the URL of the load can be mutated in arbitrary ways in the middle of the load","msgtype":"m.text"},"ts":1398466607000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"Blink still has all that machinery, but we can rip it out","msgtype":"m.text"},"ts":1398466637000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"hmm... interesting","msgtype":"m.text"},"ts":1398466655000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we have similar abilities","msgtype":"m.text"},"ts":1398466662000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"an addon can redirect and say \"don't load that URL, load this one instead\"","msgtype":"m.text"},"ts":1398466681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"what if they give a data URL?","msgtype":"m.text"},"ts":1398466690000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"does it get the origin of the site that originally asked to load http://example.com ?","msgtype":"m.text"},"ts":1398466703000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it's a bit of a mess what we do now, so i don't know","msgtype":"m.text"},"ts":1398466712000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but the idea would be to treat it as sandbox-origin","msgtype":"m.text"},"ts":1398466727000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah, that makes sense","msgtype":"m.text"},"ts":1398466745000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"what's the usecase for making it same-origin?","msgtype":"m.text"},"ts":1398466776000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"i'm curious why srcdoc doesn't work instead","msgtype":"m.text"},"ts":1398466789000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"for workers i think there are strong use cases","msgtype":"m.text"},"ts":1398466799000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i.e. doing new Worker(\"data:...\")","msgtype":"m.text"},"ts":1398466814000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh, that case is much easier than the iframe case","msgtype":"m.text"},"ts":1398466824000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"in which case you want to consider the URL same-origin","msgtype":"m.text"},"ts":1398466827000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"because there's no navigation to worry about","msgtype":"m.text"},"ts":1398466835000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1398466841000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"for <iframe> i'm not sure. I'm sure people do use <iframe src=\"data:...\">, but i'm not sure if they have strong use cases","msgtype":"m.text"},"ts":1398466867000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so, you'd write new Worker(\"data:...\", { dataURLsInheritOrigins: true } ) ?","msgtype":"m.text"},"ts":1398466873000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"yeah, something like that","msgtype":"m.text"},"ts":1398466883000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"*handwave*","msgtype":"m.text"},"ts":1398466886000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah, that would be easy for us to implement","msgtype":"m.text"},"ts":1398466893000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"the worker loading path is complicated, but it's just a straight line :)","msgtype":"m.text"},"ts":1398466923000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1398466986000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"a question is what to do if you write: new Worker(\"http://...\", { dataURLsInheritOrigins: true })","msgtype":"m.text"},"ts":1398467028000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"and the http server redirects to data:","msgtype":"m.text"},"ts":1398467038000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I'd be inclined to say that it should be treated like sandbox-origin (which means that it'll fail)","msgtype":"m.text"},"ts":1398467088000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I think we block redirects to data URLs entirely","msgtype":"m.text"},"ts":1398467443000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1398467745000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"we don't","msgtype":"m.text"},"ts":1398467747000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but we always treat them as sandbox-origin I think","msgtype":"m.text"},"ts":1398467763000,"senderName":"sicking","senderId":"sicking@irc"}
]