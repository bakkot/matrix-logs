[
{"content":{"body":"how come browsers still add new history entries with replaceState?","msgtype":"m.text"},"ts":1567563285000,"senderName":"devsnek","senderId":"devsnek@irc"},
{"content":{"body":"gsnedders: well, W3C still enabled them to do so; I feel like that line of reasoning is too often used to absolve the W3C, which certainly carries a certain amount of authority and power on its own","msgtype":"m.text"},"ts":1567583730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, is https://infra.spec.whatwg.org/#list-contain supposed to be used with an item or an index?","msgtype":"m.text"},"ts":1567589200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Do we care if TextEncoder.encodeInto() can throw on OOM after already having written something to the provided buffer?","msgtype":"m.text"},"ts":1567590953000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: OOM can occur due to JS engine-internal bookkeeping when the input string is a rope","msgtype":"m.text"},"ts":1567591020000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: I _could_ make it so that all memory is allocated up front and OOM is thrown before anything is written, but that would be a tiny bit slower for the non-OOM case","msgtype":"m.text"},"ts":1567591063000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"how recoverable are OOM exceptions in JS anyway?","msgtype":"m.text"},"ts":1567591259000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: either I think","msgtype":"m.text"},"ts":1567591348000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: JS OOM is undefined behavior unfortunately","msgtype":"m.text"},"ts":1567591389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not in the C sense, I hope","msgtype":"m.text"},"ts":1567591419000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: there’ve arguments that it should crash the agent cluster","msgtype":"m.text"},"ts":1567591424000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I guess that means that it's OK to have written something in the buffer then","msgtype":"m.text"},"ts":1567591450000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: until OOM is defined, yes","msgtype":"m.text"},"ts":1567591495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1567591500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: OOM exceptions are… sometimes recoverable in JS?","msgtype":"m.text"},"ts":1567600523000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: normally with things that allocate big chunks","msgtype":"m.text"},"ts":1567600538000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Things that cause smaller allocs should in theory be recoverable in all major VMs, AFAIK, but then you get into rarely tested OOM branches.","msgtype":"m.text"},"ts":1567600570000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: in general things like  TextEncoder.encodeInto() are kinda undefined if they OOM during the operation","msgtype":"m.text"},"ts":1567600643000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: OK. In this case, chances are the OOMing allocation would not necessarily be huge. could be 128*sizeof(void*) or any double of that","msgtype":"m.text"},"ts":1567602380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, I wouldn't worry too much about behaviour in that case provided it is safe","msgtype":"m.text"},"ts":1567602419000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"TabAtkins: ta, that worked","msgtype":"m.text"},"ts":1567607643000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"MikeSmith: \"From the W3C specification for the Anchor tag:\" https://www.bennadel.com/blog/3693-anchor-tags-can-contain-block-level-elements-as-of-html5.htm","msgtype":"m.text"},"ts":1567632304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"points to http://w3c.github.io/html-reference/a.html#a-changes","msgtype":"m.text"},"ts":1567632319000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe that needs a warning banner","msgtype":"m.text"},"ts":1567632383000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I thought I had already set up a redirect for that..","msgtype":"m.text"},"ts":1567634091000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: the w3.org url redirects. not the w3c.github.io","msgtype":"m.text"},"ts":1567634115000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1567634125000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'll fix it today","msgtype":"m.text"},"ts":1567634138000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]