[
{"content":{"body":"gotcha. I definitely agree then that anything that gets a DOM node should have Element.id/Element.className","msgtype":"m.text"},"ts":1289347200000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"and should work w/ getElementById, etc.","msgtype":"m.text"},"ts":1289347201000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"should we make all elements HTMLElements? :)","msgtype":"m.text"},"ts":1289347260000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: I seem to be able to use Element.id on SVG elements in Safari","msgtype":"m.text"},"ts":1289347320000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"and then fetch them w/ getElementById, etc.","msgtype":"m.text"},"ts":1289347321000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"but maybe that's browser-specific?","msgtype":"m.text"},"ts":1289347380000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"try with non-SVG, non-MathML, non-HTML elements","msgtype":"m.text"},"ts":1289347381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there a page someplace w/ some of those? I'm not sure if I have a use for such...","msgtype":"m.text"},"ts":1289347440000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"also non-XBL, non-XUL if you happen to use some Gecko flavor","msgtype":"m.text"},"ts":1289347441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data:text/xml,<foo id=\"bar\"/>","msgtype":"m.text"},"ts":1289347442000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"javascript:alert(document.documentElement.id)","msgtype":"m.text"},"ts":1289347443000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan, one step at the time :)","msgtype":"m.text"},"ts":1289347444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jacobolus: SVGElement has an id attribute http://www.w3.org/TR/SVG/types.html#InterfaceSVGElement","msgtype":"m.text"},"ts":1289347500000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"weinig: gotcha","msgtype":"m.text"},"ts":1289347501000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"is the use of non-{HTML/SVG/MathML/XUL} elements common?","msgtype":"m.text"},"ts":1289347560000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"annevk: ISTM that anything that's going to be in the DOM should get an ID, so +1 from me (not that my opinion necessarily counts for anything)","msgtype":"m.text"},"ts":1289347680000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"it's not common, but it would simplify things and if we ever get more XML vocabularies the right answer is implied","msgtype":"m.text"},"ts":1289347980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XML should have just reserved id for an ID attribute instead of xml:id","msgtype":"m.text"},"ts":1289348100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sadly I think there are some obscure DTDs that use an attribute named \"id\" for a non-id purpose","msgtype":"m.text"},"ts":1289348101000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there's one I think","msgtype":"m.text"},"ts":1289348160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ChemML or some such?","msgtype":"m.text"},"ts":1289348161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems like something to put into http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-745549614 to me","msgtype":"m.text"},"ts":1289348162000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"but they don't have a DOM :)","msgtype":"m.text"},"ts":1289348163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jacobolus, it's http://www.w3.org/TR/domcore/ now","msgtype":"m.text"},"ts":1289348220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"keep up ;p","msgtype":"m.text"},"ts":1289348221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, into http://www.w3.org/TR/domcore/#interface-element then","msgtype":"m.text"},"ts":1289348222000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1289348223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1289348224000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: just take your red box there and make it part of the spec. sounds great :)","msgtype":"m.text"},"ts":1289348280000,"senderName":"jacobolus","senderId":"jacobolus@irc"},
{"content":{"body":"is irc.w3.org down?","msgtype":"m.text"},"ts":1289353920000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"I'm unable to connect as well","msgtype":"m.text"},"ts":1289353980000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"looks like it's back now","msgtype":"m.text"},"ts":1289355300000,"senderName":"gavin","senderId":"gavin@irc"},
{"content":{"body":"hi all :)","msgtype":"m.text"},"ts":1289360340000,"senderName":"zaythan","senderId":"zaythan@irc"},
{"content":{"body":"annevk, seems accurate.  In real life you'd probably use just <bdi>, though, not <bdi dir=rtl>, for that example (since it's probably auto-generated by an application that doesn't know the direction of the string).","msgtype":"m.text"},"ts":1289365980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I haven't had a chance to look over the details of what Hixie did for dir=auto.","msgtype":"m.text"},"ts":1289366040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"othermaciej: is http://www.w3.org/html/wg/tracker/issues/128 going to be put to poll soon? I'd like to have the Chairs' decision soonish considering that Firefox 4 is close to shipping","msgtype":"m.text"},"ts":1289371080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I believe the chairs are still planning to ask for counter proposals for issue 128 before taking it to a poll","msgtype":"m.text"},"ts":1289375460000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so if you have some urgency around trying to get it resolved before Firefox 4 ships, I think that is a legitimate reason for asking the chairs to consider prioritizing it higher","msgtype":"m.text"},"ts":1289375580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Hixie already filed a counter-CP","msgtype":"m.text"},"ts":1289376240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: it seems unlikely that someone would write a CP with a third way","msgtype":"m.text"},"ts":1289376241000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yeah, I'm not sure myself what else they are expecting","msgtype":"m.text"},"ts":1289376300000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but that is what I understand they are intending","msgtype":"m.text"},"ts":1289376360000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1289376361000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I wish the Decision cycle was faster in general","msgtype":"m.text"},"ts":1289376362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1289376420000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think given the number of issues that LC is likely to generate, it's going to need to be faster","msgtype":"m.text"},"ts":1289376421000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"about issue 128 in particular I can discuss it with the chairs on the HTML WG telcon this week","msgtype":"m.text"},"ts":1289376480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tomorrow","msgtype":"m.text"},"ts":1289376481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1289376482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if you are able to attend the call yourself, that would be helpful also","msgtype":"m.text"},"ts":1289376483000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm. if the call starts at 18 Helsinki time, I'd miss the start of the call but might be able to make it to the second half","msgtype":"m.text"},"ts":1289376780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: ?","msgtype":"m.text"},"ts":1289376840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Sorry, thought my connection had dropped","msgtype":"m.text"},"ts":1289376900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hsivonen: there typically isn't a second half -- the calls don't often run more than 30 minutes these days","msgtype":"m.text"},"ts":1289376901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: so it's probably better for you not to try to rush to make the second half of the call","msgtype":"m.text"},"ts":1289376902000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if there's not likely to be one","msgtype":"m.text"},"ts":1289377020000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1289377021000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hmm, is anybody around yet who has admin access to the whatwg mailing list config/","msgtype":"m.text"},"ts":1289377022000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems like the spammer is going to be at it for a while","msgtype":"m.text"},"ts":1289377080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1289377081000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"even more yet","msgtype":"m.text"},"ts":1289377082000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jebus, the torrent of spam to the mailing list is annoying","msgtype":"m.text"},"ts":1289377083000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Гоннов is nice name at least","msgtype":"m.text"},"ts":1289377140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The spam wasn't nice, but I don't think Alexandre replying to the guy is going to help","msgtype":"m.text"},"ts":1289379660000,"senderName":"Peter`","senderId":"Peter`@irc"},
{"content":{"body":"it helped the spammer since the links got in yet another message","msgtype":"m.text"},"ts":1289380140000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: probably fairly soonish, yes - we want to give anyone else with an interest in creating additional proposals the opportunity to speak up","msgtype":"m.text"},"ts":1289380740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: oh is this the process step where the counter-proposal clock starts only after the initial proposal deadline has passed even when the counter-proposal has already been written?","msgtype":"m.text"},"ts":1289380860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: we should probably short circuit it since we already have a proposal and counter-proposal, and odds of a third distinct proposal do not seem high","msgtype":"m.text"},"ts":1289380920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: yeah","msgtype":"m.text"},"ts":1289380980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: http://ukwebfocus.wordpress.com/2010/11/10/experiences-migrating-from-xhtml-1-to-html5/ (in case you want to comment with your validator hat on)","msgtype":"m.text"},"ts":1289385420000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: thanks","msgtype":"m.text"},"ts":1289386140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: should we make all elements HTMLElements? :)  ","msgtype":"m.text"},"ts":1289386320000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"yes why not (it would simplify the mathml story if math elements inherited from that, and I can't see why other vocabularies wouldn't also benefit)","msgtype":"m.text"},"ts":1289386321000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: i think it's better to more stuff to Element that we want to have everywhere","msgtype":"m.text"},"ts":1289386500000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I think it should true that all elements in the HTML namespace and only those element implement HTMLElement","msgtype":"m.text"},"ts":1289386501000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"analogously for SVGElement and the SVG namespace","msgtype":"m.text"},"ts":1289386560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and if we want stuff on all elements, those things should be hoisted to Element","msgtype":"m.text"},"ts":1289386561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/more/move/","msgtype":"m.text"},"ts":1289386620000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: do you know if Mozilla has any plans to support XSLT 2.0 or XPath 2.0?","msgtype":"m.text"},"ts":1289386680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that works for me, if Element (if used in a browser) really is the baseline for what's expected (innerHTML, id, ..)","msgtype":"m.text"},"ts":1289386740000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"(or do you know who might know, if you don't?)","msgtype":"m.text"},"ts":1289386741000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the guardians of XSLT in Gecko are peterv and sicking","msgtype":"m.text"},"ts":1289387280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1289387340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I somehow first read that as \"pervert\" and \"sickening.\"","msgtype":"m.text"},"ts":1289387341000,"senderName":"nw","senderId":"nw@irc"},
{"content":{"body":"Says something about me, I guess...","msgtype":"m.text"},"ts":1289387400000,"senderName":"nw","senderId":"nw@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1289387401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do you know if Opera has any plans to support XSLT 2.0 or XPath 2.0, or who to ask about it?","msgtype":"m.text"},"ts":1289387520000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, your issue-137 email points to 133","msgtype":"m.text"},"ts":1289387521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oops","msgtype":"m.text"},"ts":1289387522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, I'm pretty sure we have more useful things to implement","msgtype":"m.text"},"ts":1289387580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej, messaged you a name for a second opinion","msgtype":"m.text"},"ts":1289387640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1289387641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess I should escalate the <u> bug into an ISSUE as a follow-up to the f2f meeting","msgtype":"m.text"},"ts":1289388840000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"more new elements yay","msgtype":"m.text"},"ts":1289388900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"new\"","msgtype":"m.text"},"ts":1289388901000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"has there been a resolution for 11254?","msgtype":"m.text"},"ts":1289388902000,"senderName":"boogyman","senderId":"boogyman@irc"},
{"content":{"body":"count is at 108 including <device>","msgtype":"m.text"},"ts":1289388903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"boogyman, if there's no resolution in the bug, there's no resolution","msgtype":"m.text"},"ts":1289389020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"othermaciej. so are you guys seriously considering taking it on?","msgtype":"m.text"},"ts":1289389080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a WebKit volunteer contributor wants to do it","msgtype":"m.text"},"ts":1289389081000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: will (s)he maintain it?","msgtype":"m.text"},"ts":1289389140000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: this same person did most of our MathML support, so it's plausible he/she could implement and maintain a large project","msgtype":"m.text"},"ts":1289389200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1289389201000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"however, I am worried about the compatibility breakage, the fact that other browser vendors do not seem super enthusiastic, and about the amount of code it would take","msgtype":"m.text"},"ts":1289389260000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that XSLT and XPath are not backwards compatible is kind of a deal breaker","msgtype":"m.text"},"ts":1289389261000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on top of that, they're hardly used","msgtype":"m.text"},"ts":1289389320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think the experience of XSLT 1 on the web suggests that it is a direction that is worth significant further investment","msgtype":"m.text"},"ts":1289389321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"a few of my friends are heavily involved with an XML editor, but they are writing most things from scratch in ECMAScript","msgtype":"m.text"},"ts":1289389322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For the platform","msgtype":"m.text"},"ts":1289389323000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's claimed by some that the compat breakage is unlikely to be a big deal in practice","msgtype":"m.text"},"ts":1289389324000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I do not have the data to make a real assessment","msgtype":"m.text"},"ts":1289389380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"then we should maybe just drop the feature","msgtype":"m.text"},"ts":1289389381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I would much rather we applied the engineering effort to something that people are actually demanding","msgtype":"m.text"},"ts":1289389382000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the lists of compat breakage in XSLT 2.0 and XPath 2.0 look pretty long","msgtype":"m.text"},"ts":1289389383000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk, what platform?","msgtype":"m.text"},"ts":1289389384000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"if there's no breakage, the feature is vastly underimportant","msgtype":"m.text"},"ts":1289389385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webr3, ?","msgtype":"m.text"},"ts":1289389440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also as far as XPath API goes, I'm not sure how the XPath version would be determined","msgtype":"m.text"},"ts":1289389441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the vast majority of actual xslt1 styesheets will work unchanged on a v2 engine","msgtype":"m.text"},"ts":1289389442000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"jgraham, there is a group of people who are vocally interested in XSLT 2.0/XPath 2.0, not clear how much that extends to mainstream web developers","msgtype":"m.text"},"ts":1289389443000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how big is the minority that won't work?","msgtype":"m.text"},"ts":1289389444000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"5%? 1%? .0001%?","msgtype":"m.text"},"ts":1289389500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk, ignore i strapped jgrahams \"for the platform\" on to the end of your sentence by mistake","msgtype":"m.text"},"ts":1289389501000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"I think it would be more worthwhile use of time to spec out the IE XPath DOM API to replace all the document.evaluate nastiness","msgtype":"m.text"},"ts":1289389502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how long is a piece of string?","msgtype":"m.text"},"ts":1289389503000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Saxon doesn't do XSLT versioning","msgtype":"m.text"},"ts":1289389504000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"And just keep XPath 1 but with an API that miught enougrage people to use it","msgtype":"m.text"},"ts":1289389505000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it just treats XSLT 1.0 as XSLT 2.0 and emits a warning","msgtype":"m.text"},"ts":1289389506000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"david_carlisle, this is a question that, at least so far as deployed content goes, can be answered with data","msgtype":"m.text"},"ts":1289389507000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"taht is the specified xslt2 behaviour, not a saxon thing","msgtype":"m.text"},"ts":1289389560000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"othermaciej - whatever percentage it is, it's likely to rise considerably as more people move to client side applications wth deployed xml-based server side stacks","msgtype":"m.text"},"ts":1289389561000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"when I was worried about this, I was lead to believe that there's no practical stuff to worry about, only theory","msgtype":"m.text"},"ts":1289389562000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"XSLT 2.0 is supposed to have a 1.0 compat mode","msgtype":"m.text"},"ts":1289389563000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"which is not 100% compatible, but less incompatible than full 2.0 mode","msgtype":"m.text"},"ts":1289389564000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: oh, maybe Saxon enabled that or something","msgtype":"m.text"},"ts":1289389565000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: in any case, it warned that it's not 100% compatible, I was worried and was told not to worry","msgtype":"m.text"},"ts":1289389566000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(fun fact; HTML5 has about the same number of elements as DocBook 1)","msgtype":"m.text"},"ts":1289389620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have zero knowledge about what would actually break","msgtype":"m.text"},"ts":1289389621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I remember people saying the same thing about XHTML 2","msgtype":"m.text"},"ts":1289389622000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I think there was a group of people who were vocally interested in XSLT 1.0 but it still has no real traction","msgtype":"m.text"},"ts":1289389680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"my main worries about XSLT/XPath 2.0 are: getting dragged into implementing the optional schema-aware features and using up the finite attention of engineers who have rare knowledge that could be used better","msgtype":"m.text"},"ts":1289389681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for my own stylesheets I had to change probably a few dozen lines out of a few tens of thousands of lines,  so that;s a very small percentage, but on the other hand a rather larger percentage (I don't remember) of top level stylesheets did need a change, so it depends what you want to measure.","msgtype":"m.text"},"ts":1289389740000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: don't touch the schema aware part:-)","msgtype":"m.text"},"ts":1289389741000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Having to change anything on the web is a big problem","msgtype":"m.text"},"ts":1289389742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"We can't just suddenly land some feature that breaks a bank or whatever and say \"oh well you only have to change a little bit\"","msgtype":"m.text"},"ts":1289389800000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"from the browser point of view, if we ship something that requires deployed XSLT stylesheets to be changed, it doesn't matter much how few lines need to be changed in each one","msgtype":"m.text"},"ts":1289389801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"david_carlisle: well, if browsers say they are doing XSLT 2.0 and someone puts schema-awareness in an acid test and someone caves, we'd all be in trouble","msgtype":"m.text"},"ts":1289389802000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: I thought we had a rule on this channel that you aren't supposed to say \"XSLT stylesheet\" and are supposed to say \"XSLT transformation\" :-)","msgtype":"m.text"},"ts":1289389860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the schema awareness is an explict extra conformance layer in the language, so it's just a matter of what you say is implemented. At with saxon, the free one is not schema aware the paid for one is, but that ism't a saxon split you can tell from the language spec these different layers","msgtype":"m.text"},"ts":1289389861000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: sorry for not being up to speed on the official terminology","msgtype":"m.text"},"ts":1289389862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if web developers (and browser implementers) thought more about xslt and less about javascript they'ed be happier more well rounded people.","msgtype":"m.text"},"ts":1289389920000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"and i always say stylesheet","msgtype":"m.text"},"ts":1289389921000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"wouldn't like to bet on that claim :)","msgtype":"m.emote"},"ts":1289389980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nor i","msgtype":"m.emote"},"ts":1289389981000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"(that they would be happier, more well rounded people)","msgtype":"m.text"},"ts":1289389982000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or of course you could use lisp and be even happier","msgtype":"m.text"},"ts":1289390040000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"in my opinion, for any given web technology, the more you think about it, the greater the risk to your sanity","msgtype":"m.text"},"ts":1289390041000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The HTML5 spec says \"XSLT transform\" or \"XSLT transformation\", because CSS is the one true style sheet language","msgtype":"m.text"},"ts":1289390100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"You can write lisp and compile it down to javascript :)","msgtype":"m.text"},"ts":1289390101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then replace your HTML with sexps","msgtype":"m.text"},"ts":1289390102000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"well I would use lisp (dsssl) but round brackets went out of vogue so we started using angle ones to be trendy (xslt) but javascript uses curly brackets so is clearly all wrong. (in depth comparative language review over)","msgtype":"m.text"},"ts":1289390220000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"(more seriously: it seems incorrect to call a transformation to an HTML tree styling, so the HTML5 spec doesn't call it styling)","msgtype":"m.text"},"ts":1289390221000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"crap","msgtype":"m.text"},"ts":1289390222000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"what's eating cpu and memory this time :S","msgtype":"m.text"},"ts":1289390223000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: that stylesheet/transform nonsense (presumably indicative of a committee disagreement) causes all sorts of confusion with people suggesting baroque rules of when to use which word, so I always just tell people to use stylesheet","msgtype":"m.text"},"ts":1289390340000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"david_carlisle: I try to say \"transform\", since it is correct and avoids suggesting that XSLT in browsers is an alternative to CSS","msgtype":"m.text"},"ts":1289390341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"whatever, just use the same word always and don't (as some have done) spend hours trying to classify some as one and some as the other.","msgtype":"m.text"},"ts":1289390400000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"the word \"transform\" seems fine for all purposes","msgtype":"m.text"},"ts":1289390460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: Managed to trip another CPU and memory guzzling problem in Firefox again. I sure am lucky eh? :)","msgtype":"m.text"},"ts":1289390461000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"maybe browsers should have ditched there html/css engines, implemented xsl-fo, and then xslt would have been a replacement for css. Oops I said it, i'd better go now...","msgtype":"m.text"},"ts":1289390462000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"I don't really ever think of it as a stylesheet, I just use the word for historical reasons (e.g. the fact that the xml-stylesheet PI is used to invoke an XSLT trnasform)","msgtype":"m.text"},"ts":1289390463000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"funny use of the word \"should\"!","msgtype":"m.text"},"ts":1289390464000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"david_carlisle, CSS uses curly braces too","msgtype":"m.text"},"ts":1289390520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"quite","msgtype":"m.text"},"ts":1289390521000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"and given the popularity...","msgtype":"m.text"},"ts":1289390522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good reason for replacing it with xslfo","msgtype":"m.text"},"ts":1289390523000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"angle brackets are clearly far superior to curly braces","msgtype":"m.text"},"ts":1289390580000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"asmodai: It's unfortunate that those things happen to you. bug filing time I guess.","msgtype":"m.text"},"ts":1289390581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the fact that xslt + xsl-fo has no reasonable story for styling a dynamically changing document makes it non-viable as a css replacement","msgtype":"m.text"},"ts":1289390582000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(nor a story for changing the true \"model\" DOM client side instead of the transformed \"presentation\" DOM)","msgtype":"m.text"},"ts":1289390640000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"solve those problems, and it might be worthwhile to have a conversation","msgtype":"m.text"},"ts":1289390700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"except not even then, because CSS is good enough","msgtype":"m.text"},"ts":1289390760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"True but there is a large class of documents that don't change in real time in the client, some of them last for thousands of years, and xslt really comes from that tradition","msgtype":"m.text"},"ts":1289390761000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"You probably want a time machine too","msgtype":"m.text"},"ts":1289390762000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So that you can solve it before the legacy lock in","msgtype":"m.text"},"ts":1289390763000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you can't \"replace\" the CSS layout engine with something that only handles a subset of Web use cases","msgtype":"m.text"},"ts":1289390764000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That is a surprisingly small class of web documents","msgtype":"m.text"},"ts":1289390765000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you can't \"replace","msgtype":"m.text"},"ts":1289390820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"\" it at all really","msgtype":"m.text"},"ts":1289390821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but there's more reasons than just compat why it would be bad","msgtype":"m.text"},"ts":1289390822000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well yess that's why XSLt is used a lot more on the server (or before the document gets to the server) than on the client","msgtype":"m.text"},"ts":1289390823000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"hsivonen: been trying to find out what page/page combination triggered it","msgtype":"m.text"},"ts":1289390880000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"so I hope you can understand why \"maybe browsers should have ditched there html/css engines, implemented xsl-fo, and then xslt would have been a replacement for css\" is not even a valid syllogism, let alone something that ever would have been likely to happen","msgtype":"m.text"},"ts":1289390940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"er yes","msgtype":"m.text"},"ts":1289390941000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"Im now watching an internal presentation introduciing Fortran \"the most advanced programming language available today2\"filmed in 1958... must go","msgtype":"m.text"},"ts":1289391000000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1289391060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, on the server...","msgtype":"m.text"},"ts":1289391300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"PHP is also used on the server","msgtype":"m.text"},"ts":1289391301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1289391302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: Think I might have caught it, at least part of it. Seems the latest PageSpeed addin update is causing issues. keeping CPU at like >70% and growing memory with megabytes per second. At least with the pages I have open","msgtype":"m.text"},"ts":1289391420000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"grrr, or maybe not, hate heidenbugs","msgtype":"m.text"},"ts":1289392140000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"annevk: yeah, on the server...   yes but there are many places where xslt on the client works well, content mathml to presentation for example (or presentation mathml to whatever html/css/javascript works on a system without mathml support) and in general (the original xml vision) of serving semantically richer markup and converting for display on the client is much easier in xslt than javascript and not totally without merit, even if it's not a","msgtype":"m.text"},"ts":1289392440000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"topic with mass appeal. (but then I'm a pure mathematician, that doesn't have mass appeal either)","msgtype":"m.text"},"ts":1289392441000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"except that vision does not work","msgtype":"m.text"},"ts":1289393040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you need something like HTML; a language whose semantics are widely understood","msgtype":"m.text"},"ts":1289393100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not a language of which only you understand the semantics","msgtype":"m.text"},"ts":1289393101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk; it depends.  You need HTML that is widely understood, but you may also need some other source language that is not widely understood (which is why you are translating to html) but that you want to share with those that do understand it (which is why you don't just want to translate on the server)","msgtype":"m.text"},"ts":1289393760000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"There are alsternatives to client side transform (justserve two files, or use conneg or something) but just because there are alternatives doesn't mean that it's a bad idea","msgtype":"m.text"},"ts":1289393761000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"sorry I can't type and eat at the same time (actually I can't type even when im not eating) apply spelling correction to the above","msgtype":"m.text"},"ts":1289393880000,"senderName":"david_carlisle","senderId":"david_carlisle@irc"},
{"content":{"body":"asmodai: the extension might poke at stuff in a cross-compartment way or something","msgtype":"m.text"},"ts":1289396100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"did sicking volunteer to write a fourth CP for ISSUE-27?","msgtype":"m.text"},"ts":1289396280000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: No, it's not the extension","msgtype":"m.text"},"ts":1289396340000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: disabled both ones that got updated.","msgtype":"m.text"},"ts":1289396341000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: ok","msgtype":"m.text"},"ts":1289396342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: according to the minutes, sicking volunteered to write a fourth CP for ISSUE-27","msgtype":"m.text"},"ts":1289396400000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: So far only managed to trace it, sort of, to www.speedtree.com and www.facefx.com being open at the same time ","msgtype":"m.text"},"ts":1289396401000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: I wonder if they share the ad provider or something of that nature","msgtype":"m.text"},"ts":1289396460000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what change proposal would sicking write?","msgtype":"m.text"},"ts":1289396520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: delegating rel registry to microformats.org","msgtype":"m.text"},"ts":1289396521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Only symptom I noticed is that those open with the ones I already have open causes my dual core to show 20%-40% CPU utilization even if the tab is not focused on either of those two sites.","msgtype":"m.text"},"ts":1289396580000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: The memory leaks apparently needs 4-5 extra pages open, which I had closed trying to nail this issue. :S","msgtype":"m.text"},"ts":1289396581000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: I seriously dislike trying to come up with a repro case like this :(","msgtype":"m.text"},"ts":1289396582000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"bloody heisenbugs","msgtype":"m.text"},"ts":1289396640000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen, yeah, that is said in the minutes","msgtype":"m.text"},"ts":1289396700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"with \"new information\" being experience with IANA","msgtype":"m.text"},"ts":1289396760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should we raise this on list?","msgtype":"m.text"},"ts":1289396761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: probably worthwhile to mention on the list","msgtype":"m.text"},"ts":1289396820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i will","msgtype":"m.text"},"ts":1289396821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aside, I find it questionable that when I file a crash bug using the Ubuntu crash reporting tool, the command line I used that contains potentially private file names is posted to launchpad publicly","msgtype":"m.text"},"ts":1289396880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1289396881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"now everyone can tell the names of the patches I'm working on","msgtype":"m.text"},"ts":1289396882000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"though I'm disclosing that information usually anyway for non-security bugs","msgtype":"m.text"},"ts":1289396883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: ouchies","msgtype":"m.text"},"ts":1289397060000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"zcorpan: just a quick note that I think I got it now - but I don't see why not supporting percent would be a bug then...","msgtype":"m.text"},"ts":1289397120000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy, UAs are required to process invalid content in the same way","msgtype":"m.text"},"ts":1289397240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nessy, otherwise sites start using width=\"50%\" and expect it to be treated as width=\"50\" for instance","msgtype":"m.text"},"ts":1289397241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so we distinguish between different kinds of invalid?","msgtype":"m.text"},"ts":1289397242000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1289397300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, 50% is different invalid from 50px","msgtype":"m.text"},"ts":1289397301000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"we distinguish between authors and user agents","msgtype":"m.text"},"ts":1289397302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not different invalid","msgtype":"m.text"},"ts":1289397303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it has different behavior","msgtype":"m.text"},"ts":1289397304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so… it's invalid from a standard POV, but it's kinda valid for an author, because browsers show a defined behaviour?","msgtype":"m.text"},"ts":1289397360000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"(where \"it\" are both those examples ;-)","msgtype":"m.text"},"ts":1289397420000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"you are trying to draw lines that are not really there","msgtype":"m.text"},"ts":1289397600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is as invalid as e.g. <style>body{background:green</style>","msgtype":"m.text"},"ts":1289397660000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm trying to consolidate in my own mind how \"invalid\" and \"defined behaviour\" gel","msgtype":"m.text"},"ts":1289397661000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"well, the way we write specifications they are mostly orthogonal","msgtype":"m.text"},"ts":1289397720000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the sense that everything \"works\" and a subset of that is \"valid\"","msgtype":"m.text"},"ts":1289397721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(the subset that makes sense, ideally)","msgtype":"m.text"},"ts":1289397722000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So - it's not just because sometimes markup is incomplete, it's also because people have expectations from things that used to work?","msgtype":"m.text"},"ts":1289397780000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"s/work/be valid/","msgtype":"m.text"},"ts":1289397781000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"nessy: what authors need to know is what is valid","msgtype":"m.text"},"ts":1289397900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nessy: no need to say what browsers will do when they break the rules","msgtype":"m.text"},"ts":1289397960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"imho :)","msgtype":"m.text"},"ts":1289397961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gotta go","msgtype":"m.text"},"ts":1289397962000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well, for things that get typically done wrong, it makes sense to mention it IMHO","msgtype":"m.text"},"ts":1289398020000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"anyway :)","msgtype":"m.text"},"ts":1289398021000,"senderName":"nessy","senderId":"nessy@irc"},
{"content":{"body":"hsivonen: so it seems like James is amenable to having functionality from the jing validator-nu branch ported back to the trunk","msgtype":"m.text"},"ts":1289399760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though he mentions \"Some of them may be hard to do in a general-purpose way\"","msgtype":"m.text"},"ts":1289399820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I would like to start with any low-hanging fruit","msgtype":"m.text"},"ts":1289399880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if there is any","msgtype":"m.text"},"ts":1289399881000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, anything that I might be able to port back that doesn't have the problem of being hard to do in a general-purpose way","msgtype":"m.text"},"ts":1289399940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Are there tests out there showing what Opera/Firefox/Safarire/IE/ returns for \" \" <- (non breaking space in innerHTML)","msgtype":"m.text"},"ts":1289401080000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"wonders if \"Safa-rire\" was intentional","msgtype":"m.emote"},"ts":1289401140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I'm so used of calling things with different names that I do not realize when I write them. unintentional but play of words I always do. Safa-rire and Caca-script among others","msgtype":"m.text"},"ts":1289401200000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I have noticed also that I do some typos in handwriting that I have acquired because of the keyboard mistyping. braiiiiins","msgtype":"m.text"},"ts":1289401320000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"You mean, what they do when you set an element's innerHTML to a non-breaking space?","msgtype":"m.text"},"ts":1289401321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like in what way?","msgtype":"m.text"},"ts":1289401380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"a text area form: You type a non breaking space. What is sent to the server? Opera seems to send the correct unicode character, but firefox seems to send the entity &nbsp;  (Not sure)","msgtype":"m.text"},"ts":1289401440000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Well, that's easy to test.","msgtype":"m.text"},"ts":1289401500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yes I was wondering it had already been done. :)","msgtype":"m.text"},"ts":1289401560000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Isn't the innerHTML case just http://software.hixie.ch/utilities/js/live-dom-viewer/saved/699 ?","msgtype":"m.text"},"ts":1289401680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Opera 10.something, Firefox 4, Chrome dev all seem to submit as %A0 in this test-case: <!doctype html><form><input name=foo value=\"&nbsp;\"><input type=submit></form>","msgtype":"m.text"},"ts":1289401860000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But for innerHTML, Firefox and Chrome change it to &nbsp;, Opera changes it to a literal.","msgtype":"m.text"},"ts":1289401980000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Opera sounds the most reasonable here.  What does IE do?","msgtype":"m.text"},"ts":1289401981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(And what does the spec say?)","msgtype":"m.text"},"ts":1289401982000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString","msgtype":"m.text"},"ts":1289402040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Gecko and WebKit are correct per spec, Opera is wrong.","msgtype":"m.text"},"ts":1289402041000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yep it seems ","msgtype":"m.text"},"ts":1289402042000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I wonder about IE","msgtype":"m.text"},"ts":1289402100000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Thanks AryehGregor ","msgtype":"m.text"},"ts":1289402820000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"I was horrified by the fact that the current spec has a predefined behavior for the 'top' fragment identifier -> http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#scroll-to-fragid","msgtype":"m.text"},"ts":1289403840000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"Is this implemented by IE or other browsers? It doesn't work on my Firefox 3.6","msgtype":"m.text"},"ts":1289403900000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"It probably is","msgtype":"m.text"},"ts":1289403901000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It was supported by IE. Not sure about other browsers.","msgtype":"m.text"},"ts":1289404020000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Works in Opera","msgtype":"m.text"},"ts":1289404080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wow.","msgtype":"m.text"},"ts":1289404081000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"I agree it seems kinda silly","msgtype":"m.text"},"ts":1289404082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Welcome to the web?","msgtype":"m.text"},"ts":1289404140000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It would be silly if this is listed in the \"HTML5 difference from HTML4\" document as a new HTML5 feature","msgtype":"m.text"},"ts":1289404141000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"can't list everything","msgtype":"m.text"},"ts":1289404200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Just as much a new HTML5 feature as innerHTML","msgtype":"m.text"},"ts":1289404201000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, but it can't really be needed that much for compat","msgtype":"m.text"},"ts":1289404260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Perhaps you could drop it :)","msgtype":"m.text"},"ts":1289404320000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"we added it for compat","msgtype":"m.text"},"ts":1289404321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"people use that stuff","msgtype":"m.text"},"ts":1289404322000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems weird that gecko gets away without it","msgtype":"m.text"},"ts":1289404380000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But whatever","msgtype":"m.text"},"ts":1289404381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and I don't really see what's wrong with it","msgtype":"m.text"},"ts":1289404382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Magic global definitions are generally quite bad","msgtype":"m.text"},"ts":1289404440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it's not really worse than the acceptness badness of the platform","msgtype":"m.text"},"ts":1289404441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*accepted","msgtype":"m.text"},"ts":1289404442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is there a listing for circumstances under which canvas cross origin restrictions are relaxed? i cannot seem to find one, but my bookmarklet seems to run in the context of the current origin.","msgtype":"m.text"},"ts":1289405400000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: Bookmarklets are same-origin in general","msgtype":"m.text"},"ts":1289405760000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, would you suggest i make a greasemonkey script then?","msgtype":"m.text"},"ts":1289405820000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"or is that same-origin too?","msgtype":"m.text"},"ts":1289405821000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"I'd hope so","msgtype":"m.text"},"ts":1289405822000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Browser extensions might be a good bed","msgtype":"m.text"},"ts":1289406060000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*bet","msgtype":"m.text"},"ts":1289406061000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"depending on just what you want to do and what APIs the browsers have","msgtype":"m.text"},"ts":1289406062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, filter every image on a page. just for fun, so i'll don't do anything to complicated.","msgtype":"m.text"},"ts":1289406120000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"hsivonen: he did - I am not sure if he still plans to","msgtype":"m.text"},"ts":1289406360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yay. Fixing rev 5666 seems like lots of fun!","msgtype":"m.text"},"ts":1289407440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(that was sarcasm)","msgtype":"m.text"},"ts":1289407441000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Dr Graham using sarcasm? Well I never!","msgtype":"m.text"},"ts":1289407800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: Re http://www.w3.org/Bugs/Public/show_bug.cgi?id=11011 : /abc (?idef)/ is a syntax error, it should be /abc (?i)def/ or /abc ((?i)def)/","msgtype":"m.text"},"ts":1289408280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so the main problem with most current registries is that they encode only \"REC\" stuff","msgtype":"m.text"},"ts":1289410020000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whereas the web consists of a lot of non-\"REC\" stuff","msgtype":"m.text"},"ts":1289410021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i.e. web registries need to accept the transient nature of the web","msgtype":"m.text"},"ts":1289410200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does MIME type regitration really happen only at REC stage?","msgtype":"m.text"},"ts":1289410380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it seems like, if we had provisional registration very early in the process, it would make it more likely that registry experts could give feedback before it's too late","msgtype":"m.text"},"ts":1289410440000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"by the time the spec gets to REC, it is almost certainly too late to materially change the registration","msgtype":"m.text"},"ts":1289410441000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, e.g. text/cache-manifest has had no MIME review so far","msgtype":"m.text"},"ts":1289410442000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera currently has a few something/x-opera-... MIME types because people thought registering was too hard","msgtype":"m.text"},"ts":1289410500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I have a really hard time seeing what is wrong with a wiki, or a more structured form of that","msgtype":"m.text"},"ts":1289410560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think if we go with the w3c xpointer-style registry for link relations, and if it works out well, then we should consider using it for the other registries in HTML5","msgtype":"m.text"},"ts":1289410860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the worse cases are actually when there's no good media type, as with fonts","msgtype":"m.text"},"ts":1289410861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(meta name, meta http-equiv, maybe canvas contexts? can't remember what else)","msgtype":"m.text"},"ts":1289410920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is there any MIME type appropriate for TrueType fonts?","msgtype":"m.text"},"ts":1289410921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"font/otf?","msgtype":"m.text"},"ts":1289410922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is font/* even a real MIME type namespace?","msgtype":"m.text"},"ts":1289410923000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's not","msgtype":"m.text"},"ts":1289410924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the idea was that it would be though, but it never happened and now it is too late","msgtype":"m.text"},"ts":1289410980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think those are the registries HTML5 currently has, yes","msgtype":"m.text"},"ts":1289410981000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if it works out I hope URL schemes etc. will move towards that too","msgtype":"m.text"},"ts":1289410982000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"isn't sure there will ever be enough canvas contexts for there to be any value in a registry","msgtype":"m.emote"},"ts":1289411100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I'm only aware of about three that exist)","msgtype":"m.text"},"ts":1289411160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1289411220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: firefox supports #top in quirks mode","msgtype":"m.text"},"ts":1289411280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Philip`: The 2d, opera 2d, and webgl contexts, right?","msgtype":"m.text"},"ts":1289411340000,"senderName":"tabatkins","senderId":"tabatkins@irc"},
{"content":{"body":"we had opera-3d as well","msgtype":"m.text"},"ts":1289411400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but they are being phased out","msgtype":"m.text"},"ts":1289411401000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tabatkins: Yeah","msgtype":"m.text"},"ts":1289411402000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I don't think opera-3d was ever in a non-experimental build","msgtype":"m.text"},"ts":1289411460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that sounds likely","msgtype":"m.text"},"ts":1289411461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't understand why (?i) can't be added to javascript","msgtype":"m.text"},"ts":1289411640000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if everyone agrees that it's the best solution, why not go for it?","msgtype":"m.text"},"ts":1289411641000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Web ECMAScript already has stuff that ES5 sticks its head in the sand... and firefox also already supports a non-standard regexp flag","msgtype":"m.text"},"ts":1289411700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"say it on the list","msgtype":"m.text"},"ts":1289411760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it might be that ES folks would be willing to add it","msgtype":"m.text"},"ts":1289411940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"though I expect \"/foobar/i\" is a more familiar syntax than \"(?i foobar)\"","msgtype":"m.text"},"ts":1289412000000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"my suggestion was simply to allow the full ES regexp literal syntax in pattern=\"\", as an alternative to the ES pattern syntax","msgtype":"m.text"},"ts":1289412001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so you could say pattern=\"/whatever/i\"","msgtype":"m.text"},"ts":1289412060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"this would avoid adding any attributes to HTML5, but would make the pattern microsyntax a hair more complicated","msgtype":"m.text"},"ts":1289412061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Support both syntaxes at once?","msgtype":"m.text"},"ts":1289412062000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1289412063000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"That'd be somewhat ambiguous","msgtype":"m.text"},"ts":1289412064000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just check for initial / to decide which to use","msgtype":"m.text"},"ts":1289412065000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I suspect ES pattern syntax requires / to be escaped anyway, or regexp literals wouldn't work","msgtype":"m.text"},"ts":1289412120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"anyway I also think it's fine to punt on it for now and return to the issue once we have a better handle on how pattern=\"\" gets used","msgtype":"m.text"},"ts":1289412180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"/ doesn't need to be escaped in e.g. new RegExp(\"/...\")","msgtype":"m.text"},"ts":1289412181000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(where it's interpreted as matching a literal '/' character)","msgtype":"m.text"},"ts":1289412240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: I'm not sure how to possibly resolve the ?HR issue without creating a new constructor(s).  You even say that having .responseText and .responseXML would be confusing.  If it's confusing, why not just take the solution that's *not* confusing?","msgtype":"m.text"},"ts":1289412360000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: hey, do you have any updated info about plans from the Chrome team for the HTML5 context-menu feature?","msgtype":"m.text"},"ts":1289412900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I remember we discussed is quite a while back","msgtype":"m.text"},"ts":1289412901000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I talked to an engineer about it a few weeks back, and had an involved discussion about how things work.  Havne't followed up on it.","msgtype":"m.text"},"ts":1289412902000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Philip`, oh, shows how much I've ever used that feature.  I assumed it worked like (?:foo) to avoid capturing.","msgtype":"m.text"},"ts":1289413200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: The syntax is not that consistent :-)","msgtype":"m.text"},"ts":1289413320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"What is the proper way to label a group of radio inputs?","msgtype":"m.text"},"ts":1289414100000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Labelling the group itself?  A heading, usually.","msgtype":"m.text"},"ts":1289414220000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Or a fieldset legend, if that's appropriate.","msgtype":"m.text"},"ts":1289414280000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Thanks TabAtkins_, I find myself wanting a way to label a group the same way I label a control, perhaps a fieldset is appropriate, but I have a connotation in my head that a new fieldset means a subject change (when really I'm just trying to intelligently group some radios together)","msgtype":"m.text"},"ts":1289414460000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"As usual, the answer is to not stress about it.  ^_^","msgtype":"m.text"},"ts":1289414520000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"It's not to have you guys create a new html5 element?  Oh, okay. :D","msgtype":"m.text"},"ts":1289414521000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Another heading element?  Zeus forbid...","msgtype":"m.text"},"ts":1289414580000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"would just get confused with another","msgtype":"m.emote"},"ts":1289414581000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is confused enough as is","msgtype":"m.emote"},"ts":1289414582000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"<grouplabel> :P","msgtype":"m.text"},"ts":1289414640000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"and<group> naturally","msgtype":"m.text"},"ts":1289414700000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Otherwise known as <h1> and <section>.","msgtype":"m.text"},"ts":1289414760000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Or <legend> and <fieldset>","msgtype":"m.text"},"ts":1289414761000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Or <label> and <select>","msgtype":"m.text"},"ts":1289414762000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"ia fielset a sectioning element?","msgtype":"m.text"},"ts":1289415060000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"this \"top\" fragid… looks like a magic mushroom. Designed in Amsterdam?","msgtype":"m.text"},"ts":1289415180000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"JonathanNeal: Don't think so, no.","msgtype":"m.text"},"ts":1289415240000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"karlcow, Redmond, I suppose","msgtype":"m.text"},"ts":1289415241000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"finds and lols @ TabAtkins_'s WFM on a recent bug","msgtype":"m.emote"},"ts":1289420100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Node.document? I wonder who invented that...","msgtype":"m.text"},"ts":1289420700000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, is that different from ownerDocument?","msgtype":"m.text"},"ts":1289420701000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1289420702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it is shorter though :)","msgtype":"m.text"},"ts":1289420760000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"They should have used Node.d :)","msgtype":"m.text"},"ts":1289420761000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And Opera++","msgtype":"m.text"},"ts":1289420820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You're welcome, Hixie.  ^_^","msgtype":"m.text"},"ts":1289421360000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"a new constructor does not automatically make matters less confusing","msgtype":"m.text"},"ts":1289421420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: A new constructor solves the issue of .responseText being potentially available when it doesnt' really do anything (or maybe throws on access).","msgtype":"m.text"},"ts":1289421720000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I'm not really sure that is the issue","msgtype":"m.text"},"ts":1289421900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or a issue, for that matter","msgtype":"m.text"},"ts":1289421901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I thought that was basically the whole issue - whether or not they exist, what they do if they do exist, et.","msgtype":"m.text"},"ts":1289422200000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"annevk: Is there another issue you're aware of?","msgtype":"m.text"},"ts":1289422500000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"the main issue seems to be limited memory","msgtype":"m.text"},"ts":1289422560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and then there's various constraints","msgtype":"m.text"},"ts":1289422561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but I should really get some sleep","msgtype":"m.text"},"ts":1289422562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Quitter!","msgtype":"m.text"},"ts":1289422563000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"colleague of yours summed up some more negatives with new objects","msgtype":"m.text"},"ts":1289422620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, but I don't know how valid I think those are.","msgtype":"m.text"},"ts":1289422621000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"well, I think they're valid","msgtype":"m.text"},"ts":1289422680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Complaining about binding gunk is a *pure* impl concern, with no effect on authors or users (unlike memory usage).  Rejecting something that may be simpler for authors just because the backend plumbing in the implementation might be a little bit heftier (not more complicated) seems like a bad move.","msgtype":"m.text"},"ts":1289422800000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"having nearly-duplicate bindings is a burden on authors","msgtype":"m.text"},"ts":1289422860000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"it complicates testing a lot, it requires authors to make informed decisions and for the foreseeable future to have different constructor codepaths, different prototype paths, etc.","msgtype":"m.text"},"ts":1289422920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jamesr_: It was precisely the non-duplicate part that seems to be the problem, though.","msgtype":"m.text"},"ts":1289422980000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"it's like","msgtype":"m.text"},"ts":1289423040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok i wrote a counter-CP for <link rel=noreferrer>","msgtype":"m.text"},"ts":1289423100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"o i know, lets do Cookie2","msgtype":"m.text"},"ts":1289423101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't really see any issues with putting responseType/response on the XHR object","msgtype":"m.text"},"ts":1289423102000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"now you have 2 problems","msgtype":"m.text"},"ts":1289423103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or in the XHR case, 4","msgtype":"m.text"},"ts":1289423104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"code that only wants to think about .responseText will work fine since it won't mutate responseType","msgtype":"m.text"},"ts":1289423105000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hixie, changing it to rel=anonymous would make some sense","msgtype":"m.text"},"ts":1289423160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, especially if we add a way to <img>, <script>, and <video>/<audio> to set it too","msgtype":"m.text"},"ts":1289423220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and <form>?","msgtype":"m.text"},"ts":1289423221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sure.  annevk, wasn't it you specifically that was complaining about it being potentially confusing that .responseText would still be available on a binary request?","msgtype":"m.text"},"ts":1289423222000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Boris and I, yes","msgtype":"m.text"},"ts":1289423280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So...","msgtype":"m.text"},"ts":1289423281000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I'm confused then.","msgtype":"m.text"},"ts":1289423282000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"binary logic does that to you ;p","msgtype":"m.text"},"ts":1289423283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Binary logic is 'murrican.","msgtype":"m.text"},"ts":1289423340000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"That I think it is confusing does not mean I want to go to the extreme of having more objects","msgtype":"m.text"},"ts":1289423341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It just means I will not get my way","msgtype":"m.text"},"ts":1289423342000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the XHR interface is horrible and gross and confusing, but there's not very much we can do to fix that at this point","msgtype":"m.text"},"ts":1289423400000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"that work was mostly done a decade ago","msgtype":"m.text"},"ts":1289423401000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"maybe over a decade now","msgtype":"m.text"},"ts":1289423460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mozilla added it in 2000, I believe","msgtype":"m.text"},"ts":1289423461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So the idea is just that we make .response always return the correct type, and leave .responseText and .responseXML for when the type is set to Text or whatever.","msgtype":"m.text"},"ts":1289423462000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1289423463000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"something like that","msgtype":"m.text"},"ts":1289423520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's fine with me, I just thought you'd want to address your objection, and I think new constructors is the only way to do that. ^_^","msgtype":"m.text"},"ts":1289423521000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I suspect something like \"legacy\" / \"text\" / \"document\" / \"arraybuffer\" / \"blob\" or some such would be it depending on impl strategies","msgtype":"m.text"},"ts":1289423580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"addressing objections by compromise generally leads to poor design :(","msgtype":"m.text"},"ts":1289423581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(not that XHR is nicely designed or anything :) )","msgtype":"m.text"},"ts":1289423582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, \"legacy\" seems pretty nice.  Perhaps .response could contain nothing if the type was \"legacy\"?","msgtype":"m.text"},"ts":1289423640000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i think jonas' suggestion was that empty string would be the default value and it would mean the old way","msgtype":"m.text"},"ts":1289423641000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"yeah ok","msgtype":"m.text"},"ts":1289423700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, so you could test .responseType as a boolean and see if you're allowed to grab from .response or not?","msgtype":"m.text"},"ts":1289423701000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i don't think anyone will actually set the 'legacy' value","msgtype":"m.text"},"ts":1289423702000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"haven't really thought out how the API should look... still don't like the name responseType","msgtype":"m.text"},"ts":1289423703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i dunno about the name. i like the properties of it","msgtype":"m.text"},"ts":1289423880000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i'd really prefer if we had separate APIs for interacting with the network and interpreting the results and good easy ways to chain them together","msgtype":"m.text"},"ts":1289424180000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1289424181000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"one thing people have mentioned is they want to download a chunk of data and interpret portions of it as (say) utf-8 text","msgtype":"m.text"},"ts":1289424240000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"but interpret another portion as an ArrayBuffer of floats or whatever","msgtype":"m.text"},"ts":1289424241000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"You want good APIS on the web?","msgtype":"m.text"},"ts":1289424300000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"since the networking API is also the text decoding API there's no good way to do that now without base64ing the binary portion or something equally yucky","msgtype":"m.text"},"ts":1289424301000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Ha. Haha. Hahaha.","msgtype":"m.text"},"ts":1289424302000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Right, but changing over to using .responseType='arraybuffer' lets you then interpret the bytes as anything you want.","msgtype":"m.text"},"ts":1289424360000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"yeah, that gets closer. we also need a way to pass a view into an arraybuffer to the browser and tell it to do text decoding","msgtype":"m.text"},"ts":1289424361000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1289424480000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Luckily, that's orthogonal (as it should be).","msgtype":"m.text"},"ts":1289424481000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"yup. gettin' there","msgtype":"m.text"},"ts":1289424482000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i think it'll take some work to get this to be a little less awkward","msgtype":"m.text"},"ts":1289424540000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hixie: I take it you also nuked the spam so it won't show up in the archives either?","msgtype":"m.text"},"ts":1289424660000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"Unless he wants to get the archives blacklisted by Google, I suspect he has.","msgtype":"m.text"},"ts":1289424720000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"really book + nap time now","msgtype":"m.text"},"ts":1289425440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1289425441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"would prefer a constant to a string for .response, assuming we go down that road, fwiw","msgtype":"m.emote"},"ts":1289426940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/.response/.responseType/","msgtype":"m.text"},"ts":1289427000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The only problem with constants is figuring out where to place them.  A constant on XMLHTTPRequest would be *horrible* for typing.","msgtype":"m.text"},"ts":1289427001000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"XMLHttpRequest.responseType = XMLHttpRequest.RESPONSE_ARRAYBUFFER (or something)","msgtype":"m.text"},"ts":1289427060000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Still a bit better than strings I think","msgtype":"m.text"},"ts":1289427420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I violently disagree.","msgtype":"m.text"},"ts":1289427421000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Well even just using emacs and M+/ I can likely autocomplete the XMLHttpRequest part","msgtype":"m.text"},"ts":1289427422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A string value is best, with .responseType resetting to '' if it doesn't recognize the value (like input@type does).","msgtype":"m.text"},"ts":1289427480000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I am deeply opposed to gratuitous verbosity.","msgtype":"m.text"},"ts":1289427481000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I am deeply opposed to using strings to indicate one of a finite number of choices where it can be avoided","msgtype":"m.text"},"ts":1289427482000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although I have been known to do it occasionally","msgtype":"m.text"},"ts":1289427540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have always felt it was wrong","msgtype":"m.text"},"ts":1289427541000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If the API object was actually named XHR instead of XMLHttpRequest, I'd be more inclined to accept constants.","msgtype":"m.text"},"ts":1289427542000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Given that this will all be abstracted away by libraries anyway a little verbosity doesn't seem like a big deal","msgtype":"m.text"},"ts":1289427600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I am violently opposed to that point of view.  ^_^","msgtype":"m.text"},"ts":1289427601000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Although I guess one could ask WWJD (jQuery)","msgtype":"m.text"},"ts":1289427660000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well it is kind of a \"tools will save us\" argument","msgtype":"m.text"},"ts":1289427661000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The web platform should be the API you program to by default.  We shouldn't design for libraries, unless we are explicitly trying to design a low-level api (like indexeddb).","msgtype":"m.text"},"ts":1289427662000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"But I have already given up hope on the DOM in general and XHR in particular being pretty","msgtype":"m.text"},"ts":1289427663000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(add commas)","msgtype":"m.text"},"ts":1289427664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well it *isn't* the API that people program by default","msgtype":"m.text"},"ts":1289427720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm surprised you didn't go with s//,/","msgtype":"m.text"},"ts":1289427721000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"would have been s//,/g","msgtype":"m.text"},"ts":1289427722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"It sucks\" shouldn't be an argument to make it suck more.","msgtype":"m.text"},"ts":1289427723000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Yeah, which is why using strings is a bad idea :)","msgtype":"m.text"},"ts":1289427780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Strings are perfectly acceptable and familiar.  What's your reason for hating them?","msgtype":"m.text"},"ts":1289427781000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Because there are only a few well defined options. ","msgtype":"m.text"},"ts":1289427782000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Using strings makes that unclear and makes it easier to make mistakes","msgtype":"m.text"},"ts":1289427840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Particularly in tooled-up dev environements that will autocomplete for you","msgtype":"m.text"},"ts":1289427841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't see how this would prevent auto-completion.","msgtype":"m.text"},"ts":1289427900000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"virtuelv: i don't have any control over the archives","msgtype":"m.text"},"ts":1289427960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It seems harder to build autocompletion that knows that the input foo.responseText = \" should result in the right autocompletion options","msgtype":"m.text"},"ts":1289427961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Argh","msgtype":"m.text"},"ts":1289428020000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Type","msgtype":"m.text"},"ts":1289428021000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1289428022000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Compared to the constants case where XMLHttpRequest is a known global object and had known properties","msgtype":"m.text"},"ts":1289428023000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Unrelated: Ooh, json should be a responsetype too.  I use the \"json\" type in jquery all the time.)","msgtype":"m.text"},"ts":1289428024000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Yes, it should","msgtype":"m.text"},"ts":1289428080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Harder, yeah.  But not so much that it's unreasonable.","msgtype":"m.text"},"ts":1289428081000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I don't really use IDEs that do that sort of thing, but are they really clever enough to do the first autocompletion in javascript?","msgtype":"m.text"},"ts":1289428140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It seems like it would be hugely difficult","msgtype":"m.text"},"ts":1289428141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Or very prone to false positives","msgtype":"m.text"},"ts":1289428200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because you can't know the type of foo","msgtype":"m.text"},"ts":1289428201000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So you can't work out what foo.responseType refers to","msgtype":"m.text"},"ts":1289428260000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So at best you can guess that the rhs of an assignment to a property called response type should be one of the magic strings","msgtype":"m.text"},"ts":1289428261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I doubt the false positive rate for that would be too high.","msgtype":"m.text"},"ts":1289428262000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Alternately: I don't really care about autocompletion, and don't use it anywhere.","msgtype":"m.text"},"ts":1289428320000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Maybe not for this specific case, but if you implemented that feature in general","msgtype":"m.text"},"ts":1289428321000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, like I say I mainly use the magic of M+/","msgtype":"m.text"},"ts":1289428322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I don't think we should go out of our way to make this hard","msgtype":"m.text"},"ts":1289428323000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: oh, I see - you actually seem to need raw access to the mbox files and delete them from there before regenerating it","msgtype":"m.text"},"ts":1289428324000,"senderName":"virtuelv","senderId":"virtuelv@irc"},
{"content":{"body":"virtuelv: yeah, i don't have access to that at all, that's all done by dreamhost","msgtype":"m.text"},"ts":1289428380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: XSLT transformation.","msgtype":"m.text"},"ts":1289428381000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: DOM model.","msgtype":"m.text"},"ts":1289428382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"guesses at the rules of this game","msgtype":"m.emote"},"ts":1289428440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Really, you can probably just ask Dreamhost to kill them for you.)","msgtype":"m.text"},"ts":1289428441000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"probably","msgtype":"m.text"},"ts":1289428442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(The game is \"what's the most ridiculous way Hixie could remove the child porn from the archives?\".)","msgtype":"m.text"},"ts":1289428443000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"aah","msgtype":"m.text"},"ts":1289428444000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wait, is there actual child porn? i thought it was just links","msgtype":"m.text"},"ts":1289428445000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, sure.","msgtype":"m.text"},"ts":1289428500000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"I only looked at one because it had responses, and I only saw links.","msgtype":"m.text"},"ts":1289428501000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i have to admit that my filters actually caught everything so i wasn't aware of the problem until it was mentioned on irc","msgtype":"m.text"},"ts":1289428502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i can't say i looked at the mails themselves","msgtype":"m.text"},"ts":1289428503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"beyond the subject lines","msgtype":"m.text"},"ts":1289428504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I have my filters specifically set up to never auto-spam anything from whatwg, because otherwise emails from @google.com trigger false-positives and get spammed.","msgtype":"m.text"},"ts":1289428620000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1289428800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm, seems travis has a point about the load event for inline scripts. Where did that come from?","msgtype":"m.text"},"ts":1289428920000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Is there anything fundamentally wrong with having an @rule without a space between the keyword and other information?  Specifically, I'm wondering if it's okay to have an @this keyword for nesting selectors, and just make it the @this act like an element reference, so you can do @this:hover to specialize the selector for hover.","msgtype":"m.text"},"ts":1289429460000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i don't really understand the proposal","msgtype":"m.text"},"ts":1289429520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"btw, mac os x has really nice ui for rtl editing","msgtype":"m.text"},"ts":1289429521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when you're between an ltr and an rtl span, the cursor splits in half!","msgtype":"m.text"},"ts":1289429522000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's neat","msgtype":"m.text"},"ts":1289429523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I thought we copied the split cursor from Windows","msgtype":"m.text"},"ts":1289430060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(split caret really)","msgtype":"m.text"},"ts":1289430061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1289430120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"haven't used windows in a while","msgtype":"m.text"},"ts":1289430121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.w3.org/2010/11/10-webperf-minutes.html","msgtype":"m.text"},"ts":1289430660000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Moving forward with Private Domain definition of same origin, where hello.bar.com is the same private domain as foo.bar.com\"","msgtype":"m.text"},"ts":1289430661000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tries to read through list mail to see what the use case is","msgtype":"m.emote"},"ts":1289430720000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thinks MikeSmith needs a new hobby","msgtype":"m.emote"},"ts":1289431260000,"senderName":"robman","senderId":"robman@irc"},
{"content":{"body":"Hixie: Okay, like, say you have a long complicated selector pointing to a button.  You want to provide some styles, and additional style it in :hover, :active, :focus, etc.  Maybe style it differently when it has .disabled too.","msgtype":"m.text"},"ts":1289431440000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"robman: I tried cross-stitch but I never felt fully accepted in the cross-stitch community","msgtype":"m.text"},"ts":1289431441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"they're a bunch of pricks","msgtype":"m.text"},"ts":1289431500000,"senderName":"robman","senderId":"robman@irc"},
{"content":{"body":"har har har (dad joke0","msgtype":"m.text"},"ts":1289431501000,"senderName":"robman","senderId":"robman@irc"},
{"content":{"body":"Hixie: Writing out the long selector every time, like you do today, is both overly verbose and brittle, as any change to the base selector has to be reflected across all the instances.","msgtype":"m.text"},"ts":1289431502000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"TabAtkins_: ah","msgtype":"m.text"},"ts":1289431503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So instead, something like \"long > verbose > selector { prop: value; @this:hover { prop: value; }}\"","msgtype":"m.text"},"ts":1289431504000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"would you want to be able to use combinators in this featyre?","msgtype":"m.text"},"ts":1289431560000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"feature","msgtype":"m.text"},"ts":1289431561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1289431562000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"long > verbose > selector { prop: value; @this + more > elems { prop: value; }}","msgtype":"m.text"},"ts":1289431563000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i.e. \"my long selector\" and \"my long selector child\"?","msgtype":"m.text"},"ts":1289431564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would love such a feature","msgtype":"m.emote"},"ts":1289431565000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1289431566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"@this seems like a really ugly way to do it, but i could see it making sense","msgtype":"m.text"},"ts":1289431567000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"@this is just the best name we've come up with so far.","msgtype":"m.text"},"ts":1289431620000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i'd recommend reusing whatever syntax we use to refer to the subject with :matches()","msgtype":"m.text"},"ts":1289431621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which i think is currently \"#\"","msgtype":"m.text"},"ts":1289431622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then do:","msgtype":"m.text"},"ts":1289431623000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"@group my long selector { # { color: black; } #:hover { color: red; } #:hover em { color: pink; } }","msgtype":"m.text"},"ts":1289431680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, so within the top-level @group block, # has a special meanign?","msgtype":"m.text"},"ts":1289431681000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1289431682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you could even nest them","msgtype":"m.text"},"ts":1289431683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's very possible too.","msgtype":"m.text"},"ts":1289431684000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"@group .REC { @group # p { @group #.copyright { ... } ... } ... }","msgtype":"m.text"},"ts":1289431740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"would be a long-winded way of writing  .REC p.copyright { ... }","msgtype":"m.text"},"ts":1289431741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(but it'd be less long-winded if you started having more rules, obviously)","msgtype":"m.text"},"ts":1289431800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This sounds intriguing.\\","msgtype":"m.text"},"ts":1289431801000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":":matches() uses '#' in a similar way","msgtype":"m.text"},"ts":1289431802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<TabAtkins_> Hixie: Okay, like, say you have a long complicated selector pointing to a button. <- bad architecture. implies that the style is location specific, which should be avoided in first place :>","msgtype":"m.text"},"ts":1289431803000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I'm also pretty excited about the potential optimization potential here, since this is an explicit indicator of scoping","msgtype":"m.text"},"ts":1289431860000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"body > p:matches(# + footer) { ... } /* matches the <p> before <footer> where both a children of <body> */","msgtype":"m.text"},"ts":1289431861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i.e. a .whatever-button should look the same no matter where you place it","msgtype":"m.text"},"ts":1289431862000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"generally i'd say using classes is bad architecture","msgtype":"m.text"},"ts":1289431863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aho: Not always.  The long complicated part could be just jumping down into the article of a page structurally, rather than requiring the author to tag the article with an id.","msgtype":"m.text"},"ts":1289431864000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"and location specific is good practice :-)","msgtype":"m.text"},"ts":1289431865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"location specific is f-ing awful :)","msgtype":"m.text"},"ts":1289431920000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it doesn't scale","msgtype":"m.text"},"ts":1289431921000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"\"body > section > article button\" is long enough to be annoying.","msgtype":"m.text"},"ts":1289431922000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"scales fine","msgtype":"m.text"},"ts":1289431923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"especially if you have @group","msgtype":"m.text"},"ts":1289431924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which you currently don't have anywhere .)","msgtype":"m.text"},"ts":1289431925000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":".class is bad because it implies you're not using semantics well enough :-)","msgtype":"m.text"},"ts":1289431926000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the semantics aren't fine-grained enough","msgtype":"m.text"},"ts":1289431980000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"they often are, if you're willing to make things context-aware in the style sheet","msgtype":"m.text"},"ts":1289431981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean... location specific? :>","msgtype":"m.text"},"ts":1289431982000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1289432040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whatever you call it :-)","msgtype":"m.text"},"ts":1289432041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i tend to think of location as physical location, so i prefer the word context","msgtype":"m.text"},"ts":1289432042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but either is fine","msgtype":"m.text"},"ts":1289432043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i call it... bloaty, fragile, repetitive, specificity wars, etc ;)","msgtype":"m.text"},"ts":1289432044000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"*shrug*","msgtype":"m.text"},"ts":1289432100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or just... \"more work\"","msgtype":"m.text"},"ts":1289432101000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I tend to use as few classes and ids as possible in my doc.  I generally only scatter them around as scoping hooks so I can prefix a structural selector with them.","msgtype":"m.text"},"ts":1289432102000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"http://www.slideshare.net/stubbornella","msgtype":"m.text"},"ts":1289432220000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"css bloat & 5 mistakes of massive css","msgtype":"m.text"},"ts":1289432221000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"aho - oocss rawks 8)","msgtype":"m.text"},"ts":1289432280000,"senderName":"robman","senderId":"robman@irc"},
{"content":{"body":"i totally agree with her :>","msgtype":"m.text"},"ts":1289432281000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"ye","msgtype":"m.text"},"ts":1289432282000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"love the concept","msgtype":"m.text"},"ts":1289432283000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I've written and mainted stylesheets for a middle-size company using mostly structural selectors.  The sheets were neither fragile nor bloated.","msgtype":"m.text"},"ts":1289432284000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Repetitive, yes, which is a problem I want to solve.","msgtype":"m.text"},"ts":1289432285000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i'm doing ecommerce thingies most of the time","msgtype":"m.text"},"ts":1289432340000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"last 2 clients were toyota and audi for example... they want really complicated stuff","msgtype":"m.text"},"ts":1289432341000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i find if you use the semantics properly, and make good use of everything HTML provides, and use CSS features like pseudo-classes and attribute selectors, etc, that context-based selectors tend to be more reliable and simpler to maintain than using classes","msgtype":"m.text"},"ts":1289432342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ie6","msgtype":"m.text"},"ts":1289432400000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"there","msgtype":"m.text"},"ts":1289432401000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i said it","msgtype":"m.text"},"ts":1289432402000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":f","msgtype":"m.text"},"ts":1289432403000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Why should I care about IE6?","msgtype":"m.text"},"ts":1289432404000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"stopped supporting that years ago.","msgtype":"m.emote"},"ts":1289432405000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"audi got like 60-70% ie6 internally","msgtype":"m.text"},"ts":1289432406000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"i target standards-compliant browsers only, not deployed browsers, so my situation may be less representative :-)","msgtype":"m.text"},"ts":1289432407000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cant really skip ie6 there, can i?","msgtype":"m.text"},"ts":1289432408000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"however, you didn't say that context-aware rules didn't work with deployed browsers, you said they were bloaty and fragile","msgtype":"m.text"},"ts":1289432460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, but I don't care about audi in that case.  I wouldn't accept a job with them, and wouldn't accept a contract without a hefy extra fee.","msgtype":"m.text"},"ts":1289432461000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"well, the better term is unpredictable... perhaps","msgtype":"m.text"},"ts":1289432462000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"like a h2 will look different depending on where you put it","msgtype":"m.text"},"ts":1289432463000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"that's a bad thing","msgtype":"m.text"},"ts":1289432520000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"...yes?","msgtype":"m.text"},"ts":1289432521000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"No, that's how things are supposed to work.","msgtype":"m.text"},"ts":1289432522000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"An <h2> in my <nav> should be different than one in my <article>.","msgtype":"m.text"},"ts":1289432523000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"check nicole's talks","msgtype":"m.text"},"ts":1289432524000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I've seen them before.  I disagree.  ^_^","msgtype":"m.text"},"ts":1289432525000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"but she's right","msgtype":"m.text"},"ts":1289432526000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"No...?","msgtype":"m.text"},"ts":1289432527000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"(at a bigger scale you really have to do it that way)","msgtype":"m.text"},"ts":1289432580000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"annevk, around?","msgtype":"m.text"},"ts":1289432581000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"unless you want to write 2-4 times as much css","msgtype":"m.text"},"ts":1289432582000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Like I said, I've maintained decent-size websites using my techniques, and didn't have to write a ton of CSS.","msgtype":"m.text"},"ts":1289432583000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"More importantly, I didn't have to write a lot of HTML with classes and ids thrown around all over the place, nor did the other people responsible for editting the site who are much less HTML-savvy.","msgtype":"m.text"},"ts":1289432640000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i usually have to write crazy amounts of css because the layouts are really complicated and detailed","msgtype":"m.text"},"ts":1289432641000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Write cleaner layouts.  ^_^","msgtype":"m.text"},"ts":1289432642000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i don't do the design... and in these cases we aren't involved in that step at all","msgtype":"m.text"},"ts":1289432700000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I identify the break points in the page structure, where what's inside doesn't have much relevance to what's outside, and tag them.  Then I hook structural selectors off of those tags.","msgtype":"m.text"},"ts":1289432701000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"look, with a simple layout i can easily get away with very little extra markup and very little css :>","msgtype":"m.text"},"ts":1289432820000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I assure you that I've gotten away with this with relatively complex layouts.  I've been a webdev for years. ^_^","msgtype":"m.text"},"ts":1289432821000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"the problem are complex layouts which also need to work in crap browsers","msgtype":"m.text"},"ts":1289432822000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Correct.","msgtype":"m.text"},"ts":1289432823000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"cant do anything about either factor","msgtype":"m.text"},"ts":1289432880000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Lowest-common-denominator means you have to write things very explicitly.  That has nothing to do with best practice for modern browsers.","msgtype":"m.text"},"ts":1289432881000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"well... d'oh :P","msgtype":"m.text"},"ts":1289432882000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I mean, ffs, IE6 doesn't support the child selector.  ","msgtype":"m.text"},"ts":1289432883000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"child combinator","msgtype":"m.text"},"ts":1289432884000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"yea","msgtype":"m.text"},"ts":1289432885000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"s/selector/combinator/","msgtype":"m.text"},"ts":1289432886000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"big problem","msgtype":"m.text"},"ts":1289432887000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"current project doesnt support ie6... it's a lot more fun","msgtype":"m.text"},"ts":1289432940000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"<:","msgtype":"m.text"},"ts":1289432941000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"So *anything* you do for IE6 has *zero* applicability for other browsers.  In fact, trying to apply IE6-inspired lessons is probably actively harmful, since you often want to avoid the descendant selector as much as possible.","msgtype":"m.text"},"ts":1289432942000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"i agree that classes are probably the best way to do things if you target IE6","msgtype":"m.text"},"ts":1289432943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then again, if you target IE6 you're probably better off using <table>s for layout, too","msgtype":"m.text"},"ts":1289432944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doesn't mean that it's the best way to do things in theory","msgtype":"m.text"},"ts":1289432945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Agreed.","msgtype":"m.text"},"ts":1289432946000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"naaah... these concepts aren't about ie6","msgtype":"m.text"},"ts":1289433000000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's about doing things in reverse","msgtype":"m.text"},"ts":1289433001000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"define structures, write css, create markup... and it looks right to begin with","msgtype":"m.text"},"ts":1289433002000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"little tiny bricks which can be combined in arbitrary ways","msgtype":"m.text"},"ts":1289433003000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I create markup then write CSS, and it looks right to begin with.","msgtype":"m.text"},"ts":1289433060000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"then you create new markup","msgtype":"m.text"},"ts":1289433061000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"and then you need to write more css","msgtype":"m.text"},"ts":1289433062000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":":>","msgtype":"m.text"},"ts":1289433063000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's all about excessive reuse","msgtype":"m.text"},"ts":1289433064000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"...yes?  It's new markup, which doesn't have any style rules yet.  On the other hand, if it's just a new kind of existing content, then it's already covered.","msgtype":"m.text"},"ts":1289433065000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"That is, if I'm just making a new page within an existing site, I can probably get away with no CSS, or maybe just a handful of rules to cover that specific page.","msgtype":"m.text"},"ts":1289433120000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"it's a new combination of existing building blocks","msgtype":"m.text"},"ts":1289433121000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"top down vs bottom up, basically","msgtype":"m.text"},"ts":1289433122000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"If so, then I don't need any new CSS if I've done my job right from the beginning.","msgtype":"m.text"},"ts":1289433180000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"If I'm just resuing existing constructs but need new CSS for it, then I did something wrong in my initial coding.","msgtype":"m.text"},"ts":1289433181000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"the best practice is to write the HTML first, without any CSS at all, no classes and IDs except those needed by script, and only then to write the CSS -- because you can then write multiple alternative style sheets without having to worry about changing the markup at all","msgtype":"m.text"},"ts":1289433182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it just doesn't make sense to use classes in such a scenario","msgtype":"m.text"},"ts":1289433183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, apparently it's easier to do it right if you start with tiny pieces and create everything out of those things","msgtype":"m.text"},"ts":1289433240000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"it's like lego :)","msgtype":"m.text"},"ts":1289433241000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Building it from the bottom up means you have to be more explicit, which can be easier in some circumstances.  I like the cleanliness and easy maintainabily of taking a more holistic view.","msgtype":"m.text"},"ts":1289433300000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"there is no holistic view if there are hundrets of components which need to look correct and uniform","msgtype":"m.text"},"ts":1289433360000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Actually, making everything look uniform is easier, I would think, by designing the rules top-down.","msgtype":"m.text"},"ts":1289433361000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"our relatively simple shop system got over 200 different components for example","msgtype":"m.text"},"ts":1289433362000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"Rather than repeating for each component what a heading should look like.","msgtype":"m.text"},"ts":1289433420000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"IM(hard earned)E it's a *lot* easier (and quicker and far more maintainable) with tiny legos","msgtype":"m.text"},"ts":1289433480000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"I don't think you can claim that such an approach is less bloaty, though.","msgtype":"m.text"},"ts":1289433481000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"it also results in way smaller css files","msgtype":"m.text"},"ts":1289433482000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"especially if there are several update cycles","msgtype":"m.text"},"ts":1289433483000,"senderName":"aho","senderId":"aho@irc"},
{"content":{"body":"A hundred \".component1 > h1\", \".component2 > h1\", \".component3 > h1\" rules is quite a bit more verbose than a single consistent \".component > h1\" rule.","msgtype":"m.text"},"ts":1289433484000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"you can use multiple classes :>","msgtype":"m.text"},"ts":1289433540000,"senderName":"aho","senderId":"aho@irc"}
]