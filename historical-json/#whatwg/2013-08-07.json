[
{"content":{"body":"is http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2433 an improvement on the readability of the diff? (click \"rendered view\", compare with http://html5.org/tools/web-apps-tracker?from=8035&to=8036 )","msgtype":"m.text"},"ts":1375868098000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Interesting","msgtype":"m.text"},"ts":1375868185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: yea, that's a big improvement","msgtype":"m.text"},"ts":1375868266000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"now i wonder if it's good enough to implement it with a simple regex","msgtype":"m.text"},"ts":1375868324000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"simple regex will break with e.g. commented out tags","msgtype":"m.text"},"ts":1375868357000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"more complex regex can deal with that case but will still break with something else","msgtype":"m.text"},"ts":1375868395000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tags wrapping lines probably just won't work","msgtype":"m.text"},"ts":1375868608000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"unless somebody comes up with something clever","msgtype":"m.text"},"ts":1375868646000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"consider e.g. a diff like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2434","msgtype":"m.text"},"ts":1375868843000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: could you add a button to remove the elements for highlighting?","msgtype":"m.text"},"ts":1375869011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: writing a simple tokenizer might be better","msgtype":"m.text"},"ts":1375869056000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah.  and forget the state when switching from a removed line to another type of line","msgtype":"m.text"},"ts":1375869098000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: and then we could remove the tags by default, maybe, that might look best","msgtype":"m.text"},"ts":1375869102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"people have been asking for a no-tags-view","msgtype":"m.text"},"ts":1375869138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2435","msgtype":"m.text"},"ts":1375869155000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"pretty cool","msgtype":"m.text"},"ts":1375869217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tokenizer would fix the <code \\n title= issues","msgtype":"m.text"},"ts":1375869237000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: nice","msgtype":"m.text"},"ts":1375871373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: do you have an instance of https://bitbucket.org/ms2ger/test-runner on the Web somewhere?","msgtype":"m.text"},"ts":1375871945000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or does anybody else","msgtype":"m.text"},"ts":1375871957000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think the webappsec people have a fork","msgtype":"m.text"},"ts":1375872221000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1375872900000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"So ArrayBuffer() and new ArrayBuffer() are identical.","msgtype":"m.text"},"ts":1375873777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if they did that because of compatibility or some other reason.","msgtype":"m.text"},"ts":1375873799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Even setting [[Prototype]]?","msgtype":"m.text"},"ts":1375873898000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: isn't it usual for constructors to have identical result when called without new?","msgtype":"m.text"},"ts":1375874054000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=22808 (I just emailed es-discuss about it)","msgtype":"m.text"},"ts":1375874086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: If the [[Call]] returns an object, yes.","msgtype":"m.text"},"ts":1375874119000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"XMLHttpRequest() is the same as new XMLHttpRequest()","msgtype":"m.text"},"ts":1375874176000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not in Chrome","msgtype":"m.text"},"ts":1375874211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh. interesting. i thought everyone did that","msgtype":"m.text"},"ts":1375874251000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://media.blackhat.com/us-13/US-13-Stone-Pixel-Perfect-Timing-Attacks-with-HTML5-WP.pdf","msgtype":"m.text"},"ts":1375874859000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk, Chrome bug :)","msgtype":"m.text"},"ts":1375875414000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that depends on what we think is best","msgtype":"m.text"},"ts":1375875429000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Making them equivalent :)","msgtype":"m.text"},"ts":1375875462000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"false","msgtype":"m.text"},"ts":1375875588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Where is XmlHttpRequest defined for worker scopes?","msgtype":"m.text"},"ts":1375876835000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: http://xhr.spec.whatwg.org/ defines it for both simultaneously","msgtype":"m.text"},"ts":1375876861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: see http://lists.w3.org/Archives/Public/www-dom/2013JulSep/0101.html for some general issues about making it clearer what happens in workers (though for XMLHttpRequest I think it's pretty clearly outlined in the specification already, although not in the best possible way yet)","msgtype":"m.text"},"ts":1375876920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hah, that answers my second question","msgtype":"m.text"},"ts":1375876980000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I can't actually find the definition, was expecting to see \"partial interface WorkerGlobalScope\" somewhere","msgtype":"m.text"},"ts":1375877119000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"the xhr spec talks about workers, but can't find the bit where the interface is defined","msgtype":"m.text"},"ts":1375877149000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the interface is shared basically","msgtype":"m.text"},"ts":1375877163000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: IDL puts them on the global","msgtype":"m.text"},"ts":1375877178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think my inexperience with IDL is showing. I see the definition of the XMLHttpRequest constructor, but I don't see the bit that says this constructor should be a property of Window instances (or WorkerGlobalScope instances)","msgtype":"m.text"},"ts":1375877551000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I see \"If the JavaScript global environment is a worker environment, implementations must act as if Document and Document? in the above IDL were not exposed.\" - is that implicitly mandating that XMLHttpRequest should exist on WorkerGlobalScope?","msgtype":"m.text"},"ts":1375877901000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no, that bit is defined by IDL","msgtype":"m.text"},"ts":1375879421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: see http://dev.w3.org/2006/webapi/WebIDL/#es-platform-objects","msgtype":"m.text"},"ts":1375879476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: the bit that's currently missing is being explicit about the globals, hopefully that'll get fixed soonish","msgtype":"m.text"},"ts":1375879533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: got ya","msgtype":"m.text"},"ts":1375881047000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: does that mean that HTMLDivElement should exist in a worker?","msgtype":"m.text"},"ts":1375881147000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: everything Node is banned","msgtype":"m.text"},"ts":1375881177000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but again that's currently not as crystal clear as it could be","msgtype":"m.text"},"ts":1375881197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: see the email I pointed to and the bug report, once that's fixed the specifications will be better","msgtype":"m.text"},"ts":1375881222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh ok","msgtype":"m.text"},"ts":1375881237000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: So, it looks like Promise doesn't currently exist in workers in Chrome, how would I explain in a ticket that it should be there?","msgtype":"m.text"},"ts":1375881266000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Trying to work out how this stuff is defined","msgtype":"m.text"},"ts":1375881277000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it sounds like you haven't read that email yet ;)","msgtype":"m.text"},"ts":1375881301000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: note also that it was in reply to a guy from Google who is probably implementing promises in Chrome at the moment","msgtype":"m.text"},"ts":1375881327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wasn't clear if there was nothing in the spec to say they should be in workers, or whether _something_ is there but it isn't clear","msgtype":"m.text"},"ts":1375881402000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: fair","msgtype":"m.text"},"ts":1375881417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is it simply undefined at the moment, aside from that email?","msgtype":"m.text"},"ts":1375881432000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yes","msgtype":"m.text"},"ts":1375881458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think we'll end up with something like [Global=Window|Workers] or some such annotation","msgtype":"m.text"},"ts":1375881497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes sense, cheers!","msgtype":"m.text"},"ts":1375881836000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I tried to figure out a way to make zip URLs work after yet more private requests, but I couldn't: https://gist.github.com/annevk/6174119","msgtype":"m.text"},"ts":1375883440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders why people would want to break new-less constructors","msgtype":"m.emote"},"ts":1375883500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: some type of subclassing I don't fully grok yet","msgtype":"m.text"},"ts":1375883525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ms2ger: I found https://github.com/slightlyoff/Promises/issues/71. It assumes you understand the @@create/constructor separation though and why that's necessary for subclassing.","msgtype":"m.text"},"ts":1375885004000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: very curious to hear a response to your thread though, I do wonder why ArrayBuffer behaves as it does.","msgtype":"m.text"},"ts":1375885061000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Maybe because Array does the same. It seems quite a few built-ins have already spoiled the non-new well...","msgtype":"m.text"},"ts":1375885097000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, i would have preferred a consistent story there","msgtype":"m.text"},"ts":1375885134000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"if they end up saying \"oh it's OK for ArrayBuffer because X,\" I look forward to finding out why X doesn't apply to everything else.","msgtype":"m.text"},"ts":1375885174000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"You're about a decade late, I guess","msgtype":"m.text"},"ts":1375885182000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: yup","msgtype":"m.text"},"ts":1375885206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the tagline of web api development","msgtype":"m.text"},"ts":1375885215000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"All too true :/","msgtype":"m.text"},"ts":1375885339000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: so playing with jQuery, it seems collection.find() basically runs the selector against each element in collection and returns the union of matched elements, in tree order","msgtype":"m.text"},"ts":1375885900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: seems reasonable for find/findAll","msgtype":"m.text"},"ts":1375885930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah. I think that is what Elements#findAll does right now?","msgtype":"m.text"},"ts":1375885950000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: there's no Elements and there's no definition of that anywhere","msgtype":"m.text"},"ts":1375885968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: there's only your gist, and I don't think it defines behavior","msgtype":"m.text"},"ts":1375885983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what does it not define?","msgtype":"m.text"},"ts":1375885990000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: oh wait","msgtype":"m.text"},"ts":1375886030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: so your thing will fail on HTMLElement.prototype :/","msgtype":"m.text"},"ts":1375886096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: can fix that in prose of course, but having no proper branding for elements sucks","msgtype":"m.text"},"ts":1375886123000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure it will *fail* exactly... what does calling HTMLElement.prototype.querySelectorAll(...) return?","msgtype":"m.text"},"ts":1375886186000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"yeah ok that doesn't work","msgtype":"m.text"},"ts":1375886200000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(in Firefox at least)","msgtype":"m.text"},"ts":1375886222000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: does it not work to just pass through the base URL and origin to the \"nested\" URL? eg. so <img src=zip:/i!pony.gif> would parse out \"/i\" and \"!pony.gif\", then parse \"/i\" as a URL with the same base as the zip: was given","msgtype":"m.text"},"ts":1375886253000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(guessing you've thought of this, trying to understand the problem)","msgtype":"m.text"},"ts":1375886265000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"finds out about peer dependencies, kiss Domenic_","msgtype":"m.emote"},"ts":1375886300000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zewt: that's the processing model proposed","msgtype":"m.text"},"ts":1375886302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: :)","msgtype":"m.text"},"ts":1375886379000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i guess the trickiness in the iframe case is if you expect to be able to serve a whole iframe and its resources from a ZIP, where the relative urls inside the iframe would be relative to the zip","msgtype":"m.text"},"ts":1375886434000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"allowing that sort of seems nasty","msgtype":"m.text"},"ts":1375886446000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: yeah this branding stuff is annoying, hmm. I guess Allen's answer here would be to just check for the existence of querySelectorAll. But that creates more issues. Still, I'd hate to add X.isX to everything just to avoid the X.prototype case.","msgtype":"m.text"},"ts":1375886476000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i guess the same thing would happen if you expect to be able to enter a ZIP URL into the address bar and load a whole website out of it","msgtype":"m.text"},"ts":1375886478000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"don't know if that's something people really want (most cases that come to mine for me are zips of icons to get rid of sprite sheets, or zips of JS to avoid having to coalesce scripts)","msgtype":"m.text"},"ts":1375886591000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(... mind)","msgtype":"m.text"},"ts":1375886625000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Even in the case of only allowing fetching you have to special case zip to extract the correct origin out of the URL.","msgtype":"m.text"},"ts":1375886672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We could definitely make it fetch-only and the navigate algorithm would simply do something else.","msgtype":"m.text"},"ts":1375886737000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: that's not an answer actually","msgtype":"m.text"},"ts":1375886844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: not if you want to explain the whole platform in terms of JavaScript","msgtype":"m.text"},"ts":1375886855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this really wants to be something like http://foo/bar!path; curse you, web-compatibility (another tagline)","msgtype":"m.text"},"ts":1375886860000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"annevk: it's not a good answer, but why wouldn't it be an answer?","msgtype":"m.text"},"ts":1375886871000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: the amount of instance checks the platform makes is enormous","msgtype":"m.text"},"ts":1375886876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah i see what you mean","msgtype":"m.text"},"ts":1375886885000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"You want to solve this for the general case, not this specific case","msgtype":"m.text"},"ts":1375886903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's a pretty compelling argument I guess.","msgtype":"m.text"},"ts":1375886911000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Also, it seems querySelector is on HTMLElement.prototype","msgtype":"m.text"},"ts":1375886960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And it'll give you \"TypeError: 'querySelector' called on an object that does not implement interface Element.\" of course.","msgtype":"m.text"},"ts":1375886992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh interesting, it's on Element.prototype in Firefox","msgtype":"m.text"},"ts":1375887010000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"oh but yes that's not the point you were making, i get it","msgtype":"m.text"},"ts":1375887038000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Oh right. I meant you can invoke it from there.","msgtype":"m.text"},"ts":1375887066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, try to.","msgtype":"m.text"},"ts":1375887074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_: duck-typing btw also seems very bad","msgtype":"m.text"},"ts":1375887599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i am unsure either way on that.","msgtype":"m.text"},"ts":1375887744000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zewt: yeah, if only we didn't allow everything single code point in paths...","msgtype":"m.text"},"ts":1375888758000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tried to think of some weird codepoint that nobody is actually using, but hard to prove and would be a really nasty hack anyway...","msgtype":"m.text"},"ts":1375888813000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i just thought of perhaps the nastiest hack in a while: use an unpaired surrogate! D:","msgtype":"m.text"},"ts":1375888862000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"U+0000 ...","msgtype":"m.text"},"ts":1375888870000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that'd only work through script","msgtype":"m.text"},"ts":1375888881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins, yeah, if you could just convince Allen...","msgtype":"m.text"},"ts":1375889172000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: context?","msgtype":"m.text"},"ts":1375889332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The Word tweet","msgtype":"m.text"},"ts":1375889342000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's an Ecma requirement actually","msgtype":"m.text"},"ts":1375889512000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Allen hates it quite a lot too","msgtype":"m.text"},"ts":1375889519000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"That's FUD, afaict","msgtype":"m.text"},"ts":1375889548000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(Although this Anolis HTML format thing seems kinda crazy to me, personally.)","msgtype":"m.text"},"ts":1375889555000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Why's thatN","msgtype":"m.text"},"ts":1375889573000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1375889574000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Of course, any crazy parts are Bert's fault","msgtype":"m.text"},"ts":1375889591000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smiles","msgtype":"m.emote"},"ts":1375889853000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I dunno, I'm sure it's all there for a good reason. But from the outside all these different random wrapper tags seem strange. <var title> vs. <code> vs. <a> vs. <span>, and they get translated between each other during a translation process... And, it's hard to see what it gains vs. markdown, in terms of real tangible gains. It loses readability and","msgtype":"m.text"},"ts":1375889921000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"authorability of the source pretty hard (having to know which esoteric wrapper tag you need for which type of term).","msgtype":"m.text"},"ts":1375889921000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"The only way I was able to submit pull requests was by copying and pasting similar paragraphs and tweaking wording.","msgtype":"m.text"},"ts":1375889963000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"(pull requests to the DOM spec)","msgtype":"m.text"},"ts":1375889971000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hold on. Hold on. HTML is an order of magnitude better than Word. Period.","msgtype":"m.text"},"ts":1375890381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If we can make Anolis better, I'm all for it, but lets not try to compare the two.","msgtype":"m.text"},"ts":1375890425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(AFAICT ECMA will do whatever TC39 wants so if Allen actually hates it (and I've anecdotal evidence to the contrary) it'd have changed I think.)","msgtype":"m.text"},"ts":1375890473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha yes, HTML >>> Word definitely, Anolis comments were just an aside.","msgtype":"m.text"},"ts":1375890766000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Didn't know that about Ecma, interesting.","msgtype":"m.text"},"ts":1375890790000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Ecma seems to exist mostly around TC39. It's kinda weird.","msgtype":"m.text"},"ts":1375891014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_, so var/code/a/span get linked, and then spans are dropped, because they're pointless","msgtype":"m.text"},"ts":1375891178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"get linked, that is, unless there's nothing to link to, which you can make explicit with title=\"\"","msgtype":"m.text"},"ts":1375891200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"document.write() is frowned upon, right?","msgtype":"m.text"},"ts":1375891689000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1375891709000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, should the signature of .find() be changed to find(relativeSelectors, referenceElements...)?","msgtype":"m.text"},"ts":1375892136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why wouldn't you just do referenceElements.find(relativeSelectors)","msgtype":"m.text"},"ts":1375892255000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"in jQuery you generally either do $(relativeSelector, referenceElement) or $(referenceElement).find(relativeSelector)","msgtype":"m.text"},"ts":1375892301000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"So shouldn't we provide both?","msgtype":"m.text"},"ts":1375892341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so you mean like window.find(relativeSelector, referenceElement)?","msgtype":"m.text"},"ts":1375892362000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"parentNode.find()","msgtype":"m.text"},"ts":1375892386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i don't see the utility. the reason jQuery has the two-argument form is because it's global and short","msgtype":"m.text"},"ts":1375892418000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"having to select a parent node and then use two arguments (for a total of three entities involved) is not a savings","msgtype":"m.text"},"ts":1375892436000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"well parent can be document","msgtype":"m.text"},"ts":1375892470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or a document fragment","msgtype":"m.text"},"ts":1375892474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i think it's easier to just do referenceElement.find(relativeSelector)","msgtype":"m.text"},"ts":1375892517000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i am missing the use case that this does not cover","msgtype":"m.text"},"ts":1375892546000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yeah so I was reading this based on Selectors API 2, but that does seem kind of weird","msgtype":"m.text"},"ts":1375892674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1375892739000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1375892755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as in, i forgot about selectors 2, but now i see where you're coming from","msgtype":"m.text"},"ts":1375892786000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"it is weird though, i don't see any reason why selectors 2 does that","msgtype":"m.text"},"ts":1375892812000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"zcorpan: I dunno, but I'm willing to support that.","msgtype":"m.text"},"ts":1375893116000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: (Read \"I dunno\" as \"no\".)","msgtype":"m.text"},"ts":1375893128000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: sounds good to me","msgtype":"m.text"},"ts":1375893363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Now I just need to figure out how to write down \"Elements\"","msgtype":"m.text"},"ts":1375893398000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how will these things be created anyway? Element.find() returns an Element, but Element.findAll() returns an Elements?","msgtype":"m.text"},"ts":1375893732000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"well instances of Element would, yes, also instances of Document / DocumentFragment","msgtype":"m.text"},"ts":1375893765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right ok. so basically what selectors level 2 does, but a bit better.","msgtype":"m.text"},"ts":1375893810000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"and the reason for document having this is because document.documentElement.find is too long to type compared to document.find?","msgtype":"m.text"},"ts":1375893855000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i guess the former wouldn't find \"html\", nevermind","msgtype":"m.text"},"ts":1375893875000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Hixie: I'm rewriting some of the font-load-events stuff this week, since jdaggett doesn't have time to rewrite to reflect the consensus from last f2f.","msgtype":"m.text"},"ts":1375894084000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also need to have @@unscopeable for find/findAll","msgtype":"m.text"},"ts":1375894270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"because of the inline-event-handlers-implicitly-do-`with` thing?","msgtype":"m.text"},"ts":1375894310000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"No they do something weirder than that","msgtype":"m.text"},"ts":1375894352000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, they're explainable with `with`, just three (I think) nested `with`s.","msgtype":"m.text"},"ts":1375894873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"...","msgtype":"m.text"},"ts":1375894981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":O","msgtype":"m.text"},"ts":1375894993000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1375895052000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that's weirder than implicit-with dude :p","msgtype":"m.text"},"ts":1375895217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bah, only by a linear factor.","msgtype":"m.text"},"ts":1375895252000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: http://www.whatwg.org/specs/web-apps/current-work/#event-handler-content-attributes step 6","msgtype":"m.text"},"ts":1375895333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool thanks. different topic: what do you think of \"modular\" specs? whatwg has a lot, and it seems cool, but slightlyoff expressed skepticism on twitter the other day and i can see both sides.","msgtype":"m.text"},"ts":1375895660000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: It doesn't make much sense to me to put URL and Encoding in the same document. I'd love to hear the argument for that.","msgtype":"m.text"},"ts":1375895732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"It's all part of the web\"","msgtype":"m.text"},"ts":1375895744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: HTML has a lot in the same document though, so not all of our stuff is modular.","msgtype":"m.text"},"ts":1375895746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, but pieces of html seem to keep breaking off.","msgtype":"m.text"},"ts":1375895771000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"whatwg has a lot ?","msgtype":"m.text"},"ts":1375895780000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"whatwg doesn't have too many specs","msgtype":"m.text"},"ts":1375895781000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/whatwg/ seems like a lot to me","msgtype":"m.text"},"ts":1375895800000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Do you know how many the CSSWG publishes?","msgtype":"m.text"},"ts":1375895813000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: http://the-pastry-box-project.net/anne-van-kesteren/2013-may-7/ seems still relevant.","msgtype":"m.text"},"ts":1375895814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And they cover a lot less","msgtype":"m.text"},"ts":1375895821000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: if that's a lot you haven't seen many W3C drafts I'm afraid. :/","msgtype":"m.text"},"ts":1375895833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm i guess so","msgtype":"m.text"},"ts":1375895846000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"But I think HTML could benefit from being split up somewhat","msgtype":"m.text"},"ts":1375895868000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Though it's all intertwined, unfortunately","msgtype":"m.text"},"ts":1375895883000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes, splitting HTML might improve readability","msgtype":"m.text"},"ts":1375895916000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: oh cool hadn't seen that link","msgtype":"m.text"},"ts":1375895941000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: I think the way to address slightlyoff's concern is by ensuring you know most of what's going on and ensuring some kind of consistency.","msgtype":"m.text"},"ts":1375895953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie would prefer having most things in one document. But then taking over editing of the DOM specification is something he's not interested in, so...","msgtype":"m.text"},"ts":1375896226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It would be interesting to generate a merged document, perhaps","msgtype":"m.text"},"ts":1375896291000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"doesn't volunteer","msgtype":"m.emote"},"ts":1375896295000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hah, that spec list is *nothing* before the might of the CSSWG!","msgtype":"m.text"},"ts":1375896322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But to properly merge it you want to do more than just having it as a chapter.","msgtype":"m.text"},"ts":1375896327000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1375896337000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hixie's build system doesn't help :)","msgtype":"m.text"},"ts":1375896349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_: also, I'll take slightlyoff's arguments here more seriously once he writes a couple of specs","msgtype":"m.text"},"ts":1375896509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oooh burnnn","msgtype":"m.text"},"ts":1375896523000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"./topic I'll take slightlyoff's arguments here more seriously once he writes a couple of specs","msgtype":"m.text"},"ts":1375896741000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hm, what's the special meaning of span/code/i/abbr/var in Anolis xrefs?","msgtype":"m.text"},"ts":1375896811000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, they're xreffed","msgtype":"m.text"},"ts":1375896835000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, yeah, but Domenic said that they have particular uses?  It's not recorded in the docs.","msgtype":"m.text"},"ts":1375896852000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Not really, no","msgtype":"m.text"},"ts":1375896880000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: ah damn, conflicting with Array.prototype.find, how did we miss that.","msgtype":"m.text"},"ts":1375902026000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: when was Array.prototype.find added?","msgtype":"m.text"},"ts":1375902915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://gist.github.com/rwldrn/5079436 is from five months ago","msgtype":"m.text"},"ts":1375902949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yours is about a month old and Selectors API 2 is way older... And jQuery uses find(). Seems pretty obvious why that was missed :)","msgtype":"m.text"},"ts":1375902998000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah i think it was around then, es-discuss email maybe a month prior => TC39 meeting agreement => that gist","msgtype":"m.text"},"ts":1375903011000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"well, can't believe *I* missed that, I guess.","msgtype":"m.text"},"ts":1375903029000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"maybe query()","msgtype":"m.text"},"ts":1375903102000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"So Allen's position makes sense, but is completely out-of-sync with most of the platform. It might still work though.","msgtype":"m.text"},"ts":1375903109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, yeah.","msgtype":"m.text"},"ts":1375903117000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i think my followup email outlines something more concrete","msgtype":"m.text"},"ts":1375903135000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"select/selectAll","msgtype":"m.text"},"ts":1375903138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh duh that's very nice","msgtype":"m.text"},"ts":1375903146000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"changing gist","msgtype":"m.text"},"ts":1375903153000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"The names might be taken unfortunately.","msgtype":"m.text"},"ts":1375903170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but yeah we still want to use native QSA, probably not triggering any old querySelectorAll method, for optimization reasons if nothing else.","msgtype":"m.text"},"ts":1375903173000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Also, querySelector takes selectorList whereas this would take relativeSelectorList","msgtype":"m.text"},"ts":1375903219000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"selectorList?","msgtype":"m.text"},"ts":1375903254000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"What's the justification for the noscript parsing depending on the scripting enabled flag? It seems like it could easily result in different parse trees.","msgtype":"m.text"},"ts":1375903257000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Domenic_: \"img, p\"","msgtype":"m.text"},"ts":1375903272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: that's how <noscript> works","msgtype":"m.text"},"ts":1375903299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm ok. So you're saying just prepending `\":scope \"` doesn't do the trick.","msgtype":"m.text"},"ts":1375903302000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"fwiw I think \"select\" is a better name than \"find\"","msgtype":"m.text"},"ts":1375903317000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders, isn't that the point?","msgtype":"m.text"},"ts":1375903328000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: agreed, `select` is excellent.","msgtype":"m.text"},"ts":1375903346000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: you need to absolutize: http://dev.w3.org/csswg/selectors/#absolutizing","msgtype":"m.text"},"ts":1375903353000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I dunno. It just seems evil.","msgtype":"m.text"},"ts":1375903387000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"For once CSS has defined all the primitives we need.","msgtype":"m.text"},"ts":1375903389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh wait, it's not CSS, it's Selectors!","msgtype":"m.text"},"ts":1375903397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham, annevk: why does html5lib impl the scripting enabled case?","msgtype":"m.text"},"ts":1375903407000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what am i doing looking at selectors level 2 when we've got a level 4 hanging around!?!","msgtype":"m.text"},"ts":1375903424000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"anyone feel like implementing the hide-tags thing in web-apps-tracker?","msgtype":"m.text"},"ts":1375903425000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1375903430000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"gsnedders: I think we wanted to closely align with browsers","msgtype":"m.text"},"ts":1375903437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic_, selectors level 4, selectors api level 2","msgtype":"m.text"},"ts":1375903437000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic_, in case that was serious","msgtype":"m.text"},"ts":1375903445000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hah ok, yeah assumed it was something like that","msgtype":"m.text"},"ts":1375903457000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"annevk: Except it doesn't, because if they parse with scripting enabled they'll do stuff with document.write, and if they parse with it disabled they again won't match us.","msgtype":"m.text"},"ts":1375903485000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: sure sure, more closely","msgtype":"m.text"},"ts":1375903507000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Selectors API 2 will be eaten by DOM. Then there'll be one Selectors left.","msgtype":"m.text"},"ts":1375903538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: maybe html5lib should have it configurable","msgtype":"m.text"},"ts":1375903541000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: I'm not saying I still agree with that btw","msgtype":"m.text"},"ts":1375903555000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: Oh, it should.","msgtype":"m.text"},"ts":1375903558000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Because realistically people scraping websites expect that","msgtype":"m.text"},"ts":1375903574000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"zcorpan: Just nobody has bothered to do it. :)","msgtype":"m.text"},"ts":1375903575000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"i wonder if prototyping this in jsdom would be useful.","msgtype":"m.text"},"ts":1375903586000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Domenic_: The algorithm to absolutize a relative selector is in Selectors 4.","msgtype":"m.text"},"ts":1375903603000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Do they really get better resulting frm scripting enabled?","msgtype":"m.text"},"ts":1375903609000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well it depends if you think that any websites use <noscript> in a useful way","msgtype":"m.text"},"ts":1375903635000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I doubt that","msgtype":"m.text"},"ts":1375903638000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"apparently discourse (codinghorror's new forum thing) is using it for seo","msgtype":"m.text"},"ts":1375903657000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"On the face of it, if we want to match browsers, we should be scripting disable.","msgtype":"m.text"},"ts":1375903661000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*disabled","msgtype":"m.text"},"ts":1375903664000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://eviltrout.com/2013/06/19/adding-support-for-search-engines-to-your-javascript-applications.html","msgtype":"m.text"},"ts":1375903671000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Well I don't think it's that important","msgtype":"m.text"},"ts":1375903676000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So is the stuff that I didn't want in DOM in selectors?","msgtype":"m.text"},"ts":1375903684000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I should rereview, then","msgtype":"m.text"},"ts":1375903690000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: yeah just pointed to it. You guys are awesome for having done that already.","msgtype":"m.text"},"ts":1375903702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And/or Lachy should rewrite his PR","msgtype":"m.text"},"ts":1375903702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ah, I see.","msgtype":"m.text"},"ts":1375903713000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, we defined it for Lachy, and sent him an email detailing what things he can change/remove from his spec.","msgtype":"m.text"},"ts":1375903729000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: Given that he seems to be mostly MIA I'll have a go at it.","msgtype":"m.text"},"ts":1375903733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Great","msgtype":"m.text"},"ts":1375903748000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I think I'll start with the non-controversial stuff. querySelector / querySelectorAll / matches. And then figure out how to do the other two and the new collection API.","msgtype":"m.text"},"ts":1375903778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, sounds like a sensible approach","msgtype":"m.text"},"ts":1375903798000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins, yes, I need to deal with that","msgtype":"m.text"},"ts":1375903798000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ah, there's Lachy","msgtype":"m.text"},"ts":1375903806000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Whoa, a wild Lachy appears!","msgtype":"m.text"},"ts":1375903843000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Only L3, though :(","msgtype":"m.text"},"ts":1375903864000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Maybe Lachy is like http://en.wikipedia.org/wiki/Beetlejuice","msgtype":"m.text"},"ts":1375903890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: No, we only mentioned his name twice.","msgtype":"m.text"},"ts":1375903941000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, basicaly the reason I didn't update the selectors api spec is that Ive been intending for it to be superseded by DOM, which I need to finish incorporating it into.","msgtype":"m.text"},"ts":1375904009000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: kk, no problem","msgtype":"m.text"},"ts":1375904053000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, I just said \"him\"","msgtype":"m.text"},"ts":1375904106000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: abbr/i/var aren't xreffed anymore (unless you turn on some flag)","msgtype":"m.text"},"ts":1375904400000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Oh, then the docs need to be updated.","msgtype":"m.text"},"ts":1375904416000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"likely :-(","msgtype":"m.text"},"ts":1375904429000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"So what's still xreffed? <a>, <span>, <code>?","msgtype":"m.text"},"ts":1375904443000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk, I can do it.  Ive just been on extended holiday. But now that I have a new job, I can start getting back into spec work.","msgtype":"m.text"},"ts":1375904444000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"TabAtkins: <span> and <code>. <a> is TODO","msgtype":"m.text"},"ts":1375904462000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1375904472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Do you just take any <code>/<span>, or is there some explicit flag marking it as an attempted ref?","msgtype":"m.text"},"ts":1375904558000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh i implemented <a> but Ms2ger hasn't merged yet. https://bitbucket.org/ms2ger/anolis/pull-request/11/enable-usage-of-instead-of-for-xrefs-also/diff","msgtype":"m.text"},"ts":1375904607000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hrm, why didn't I?","msgtype":"m.text"},"ts":1375904636000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I can recognize anolis xrefs; they're not hard.","msgtype":"m.text"},"ts":1375904648000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: any that doesn't have empty title attribute","msgtype":"m.text"},"ts":1375904649000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Okay.","msgtype":"m.text"},"ts":1375904655000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'd probably want to trigger it via a command-line option, then.","msgtype":"m.text"},"ts":1375904667000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan, any reason not to merge it?","msgtype":"m.text"},"ts":1375904675000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Like --anolis-compat or something.","msgtype":"m.text"},"ts":1375904678000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ms2ger: i think i tested it, but pls look it over in case i did something utterly stupid","msgtype":"m.text"},"ts":1375904715000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"On first sight, no, but the code is horrible","msgtype":"m.text"},"ts":1375904744000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"well yeah","msgtype":"m.text"},"ts":1375904770000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: anolis also supports data-anolis-xref=\"\" or some such but i think nobody uses it because it's just more verbose compared to title","msgtype":"m.text"},"ts":1375904839000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"The anolis documentation uses it","msgtype":"m.text"},"ts":1375904854000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Yo, in http://example.com/foo and http://example.com/foo/, the two are identical except that the second has a second, empty path segment, right?","msgtype":"m.text"},"ts":1375904864000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes","msgtype":"m.text"},"ts":1375904880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ok.","msgtype":"m.text"},"ts":1375904886000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan, anyway, merged it; I'll hear if it breaks anything","msgtype":"m.text"},"ts":1375904908000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Lachy: where do you work now?","msgtype":"m.text"},"ts":1375904947000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: thanks","msgtype":"m.text"},"ts":1375904950000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk, it's a company called Aspiro TV. They provide media streaming services and applications for their clients.","msgtype":"m.text"},"ts":1375905851000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'm doing front end development for an application built as a hybrid web app/native app for devices","msgtype":"m.text"},"ts":1375905900000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"is firefox going to disallow <iframe src=viewsource:...> given the pixel perfect timing attack thing?","msgtype":"m.text"},"ts":1375906233000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: could always use viewsource.in :)","msgtype":"m.text"},"ts":1375906257000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: the user wouldn't be logged in via that service","msgtype":"m.text"},"ts":1375906314000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gotcha","msgtype":"m.text"},"ts":1375906777000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Ms2ger: Did you ever turn on attribute sorting?","msgtype":"m.text"},"ts":1375907060000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"I don't recall","msgtype":"m.text"},"ts":1375907095000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I don't think you did","msgtype":"m.text"},"ts":1375907183000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"Okay, so if I add an --anolis-compat flag, that's just a matter of recognizing <code> as a maybe-link (I already recognize <i> as such), and recognizing data-anolis-xref as an alternative for title.","msgtype":"m.text"},"ts":1375907340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then doing the cross-spec stuff that you do differently.","msgtype":"m.text"},"ts":1375907350000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(My cross-spec stuff is based on data parsed by Shepherd.)","msgtype":"m.text"},"ts":1375907363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Alternately, just ignoring that and getting Shepherd to parse more specs.","msgtype":"m.text"},"ts":1375907396000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, Anolis doesn't type any definitions/links, right?  Every definition lives in a global namespace?","msgtype":"m.text"},"ts":1375907413000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: cross-spec references are per spec","msgtype":"m.text"},"ts":1375907440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, bleh.","msgtype":"m.text"},"ts":1375907453000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's a public database","msgtype":"m.text"},"ts":1375907469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: https://github.com/whatwg/xref/","msgtype":"m.text"},"ts":1375907478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, so you just use PRs to amend the set of cross-refs?","msgtype":"m.text"},"ts":1375907525000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Pretty much everyone who uses it has push access, I think","msgtype":"m.text"},"ts":1375907545000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"funny when i file a bug and later it digs into issues that go over my head (https://www.w3.org/Bugs/Public/show_bug.cgi?id=18242 )","msgtype":"m.text"},"ts":1375910197000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: not as funny as when you file a bug on a spec i edit and it goes over _my_ head (https://www.w3.org/Bugs/Public/show_bug.cgi?id=18242) :-P","msgtype":"m.text"},"ts":1375910671000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1375910719000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"in other news, i need a term that doesn't really mean anything, but expresses the property of A being something relative to B, without implying a mutual relationship, and that brings to mind the idea of control or authority","msgtype":"m.text"},"ts":1375910760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to replace the term \"A is friends with B\" in the spec, which unfortunately does imply a mutual relationship","msgtype":"m.text"},"ts":1375910779000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hands out paint brushes and waits","msgtype":"m.emote"},"ts":1375910797000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders what a non-mutual relationship is","msgtype":"m.emote"},"ts":1375910952000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: e.g. stalking maybe?","msgtype":"m.text"},"ts":1375911050000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Yeah, that was exactly the example I just came up with","msgtype":"m.text"},"ts":1375911062000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So there we go","msgtype":"m.text"},"ts":1375911073000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"A stalks B\"","msgtype":"m.text"},"ts":1375911080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"A is in unrequited love with B\"","msgtype":"m.text"},"ts":1375911238000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"A is boss over B\"","msgtype":"m.text"},"ts":1375911272000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"A is secretly wiretapping B\"","msgtype":"m.text"},"ts":1375911296000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"A is twisting B's nipples\"","msgtype":"m.text"},"ts":1375911439000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: \"boss over\" has the inverse \"employee of\"","msgtype":"m.text"},"ts":1375911539000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: ok, strike that one","msgtype":"m.text"},"ts":1375911581000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: there, you have several to choose from :-)","msgtype":"m.text"},"ts":1375911762000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"A is spying on B\"","msgtype":"m.text"},"ts":1375911832000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"A is hiding from B\"","msgtype":"m.text"},"ts":1375911938000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=22625 - should the bugfiler do something smart with <sub>/<sup>? (or other elements?)","msgtype":"m.text"},"ts":1375912621000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Anyone know the progress of the \"async image\" stuff, where some attribute on the <img> would make it not fire the request until the browser thought it was about to display?","msgtype":"m.text"},"ts":1375912825000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there's a bug filed about that at least","msgtype":"m.text"},"ts":1375912955000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: it that not the thing that somebody in the Web Performance group was speccing out?","msgtype":"m.text"},"ts":1375913002000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"after scope-creeping it into an attribute for script and other elements","msgtype":"m.text"},"ts":1375913040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1375913064000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/ResourcePriorities/Overview.html","msgtype":"m.text"},"ts":1375913181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yeah, that's what I'm looking for.  Cool.","msgtype":"m.text"},"ts":1375913300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm surprised they didn't turn it into loadpriority=integer","msgtype":"m.text"},"ts":1375913556000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Over-engineer all the things","msgtype":"m.text"},"ts":1375913565000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's what we got requested for XHR","msgtype":"m.text"},"ts":1375913690000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it may very well return","msgtype":"m.text"},"ts":1375913694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"although talking to our HTTP guys a couple of weeks ago it seems that'd be pretty premature optimization, though lazyload might be good","msgtype":"m.text"},"ts":1375913736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even better would be to load the images the user is looking at first","msgtype":"m.text"},"ts":1375913748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I don't at all trust that authors are better at resource prioritization than browsers","msgtype":"m.text"},"ts":1375913766000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well there's no reason you can't prioritise images that would be visible, if you are a browser","msgtype":"m.text"},"ts":1375913818000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It's not architecturally pure since it couples networking and layout, but that happens already, so...","msgtype":"m.text"},"ts":1375913842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"A is a classmate of B","msgtype":"m.text"},"ts":1375914204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"B is at risk of random bullying from A","msgtype":"m.text"},"ts":1375914299000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh, I guess just \"A is at risk from B\" works","msgtype":"m.text"},"ts":1375914418000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't think Hixie will like these suggestions :)","msgtype":"m.emote"},"ts":1375914431000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: slightlyoff doesn't need to write specs; he just thinks of stuff and people implement it","msgtype":"m.text"},"ts":1375914452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"A is a kidney donor for B\"","msgtype":"m.text"},"ts":1375914462000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1375914469000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"damn, y'all","msgtype":"m.text"},"ts":1375914545000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff, thoughts on specification modularization in long form might work ;) I might not even disagree, it's just, you know, easier said than done","msgtype":"m.text"},"ts":1375914656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sure","msgtype":"m.text"},"ts":1375914699000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"but I warn you that my long form is LOOOOONG","msgtype":"m.text"},"ts":1375914731000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: you're gonna write a spec to rule them all? ;)","msgtype":"m.text"},"ts":1375914897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"-> zzz","msgtype":"m.emote"},"ts":1375915063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nah, but I'll make a nuanced case for an \"integration phase\"","msgtype":"m.text"},"ts":1375915365000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"= )","msgtype":"m.text"},"ts":1375915369000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"\"A is in unrequited love with B\" is good, but unfortunately implies a negative reverse relationship. \"is boss over\" is similar. \"is at risk of random bullying from\" is actually the best so far...","msgtype":"m.text"},"ts":1375915409000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can see XMLHttpRequest ending up in Fetch eventually. Dunno about URL and Encoding et al. Seem pretty unrelated.","msgtype":"m.text"},"ts":1375915422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"slightlyoff: WELCOME TO SFFFFFFFFFFFF","msgtype":"m.text"},"ts":1375915443000,"senderName":"nimbu","senderId":"nimbu@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1375915454000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"where the parties are full of minor internet celebrities and the streets full of hobos","msgtype":"m.text"},"ts":1375915531000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: \"is scared of\"?","msgtype":"m.text"},"ts":1375915557000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"doesn't actually think that's a good idea but wants to know if that's the right kind of relationship","msgtype":"m.emote"},"ts":1375915583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"idolises\"?","msgtype":"m.text"},"ts":1375915701000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: tangentially?","msgtype":"m.text"},"ts":1375915735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: yeah, that would work","msgtype":"m.text"},"ts":1375915940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though it's more \"is not scared of\" that has the connotations i'm looking for","msgtype":"m.text"},"ts":1375915959000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"likes\", maybe","msgtype":"m.text"},"ts":1375915965000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"is a fan of\"","msgtype":"m.text"},"ts":1375915977000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"is familiar with\"","msgtype":"m.text"},"ts":1375915993000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that one might work best so far","msgtype":"m.text"},"ts":1375915997000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wish there was a \"last person to touch this bug\" field in bugzilla","msgtype":"m.text"},"ts":1375917110000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it would make a lot of my workflows easier","msgtype":"m.text"},"ts":1375917121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"is threatened by\"?","msgtype":"m.text"},"ts":1375919485000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]