[
{"content":{"body":"Think ondras is asking if there is no openssl -pubout equivalent, not having that isn't critical but having it is probably useful. I don't know any algorithms where this would be impossible, so not sure if there is a really good excuse for not having it aside from it not being a wide audience API","msgtype":"m.text"},"ts":1507773838000,"senderName":"sangwhan","senderId":"sangwhan@irc"},
{"content":{"body":"Domenic: GPHemsley: Iâ€™m thinking we should add a MIMEType object too, in due course","msgtype":"m.text"},"ts":1507789593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Once all other questions are resolved","msgtype":"m.text"},"ts":1507789609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sangwhan: my case: the client will be generating a keypair, sending the pubkey to the server, storing the privkey in localStorage to sign stuff later.","msgtype":"m.text"},"ts":1507790346000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"sangwhan: my point is, whether I need to store the pubkey in localStorage as well (if the server needs it again), or if it is derivable from the (already stored) privkey","msgtype":"m.text"},"ts":1507790382000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"Is there some kind of solution to add footnotes (or similar) to Bikeshed?","msgtype":"m.text"},"ts":1507793532000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"E.g. to link the (a) in https://heycam.github.io/webidl/#distinguishable-table to it's description right below.","msgtype":"m.text"},"ts":1507793682000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I have a bunch of other cases in the spec where this would be useful. It doable by hand, but then it implies scoping identifiers somehow, which is error prone.","msgtype":"m.text"},"ts":1507793757000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: ^","msgtype":"m.text"},"ts":1507793765000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: I *think* that boils down to (1) an incrementing integer (e.g. <sup><a href=\"#path-to-note\">[INT++]</a></sup>), and (2) some form of mechanism to go back to where the footnote was referenced, similar to what's already in place with DFNs and the like.","msgtype":"m.text"},"ts":1507794243000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: also maybe this is completely overkill.","msgtype":"m.text"},"ts":1507794253000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: Do you know if there's a defined session history entry limit in the spec, or the 50 entries limit is just an implementation practice happened to be used in most browsers?","msgtype":"m.text"},"ts":1507796198000,"senderName":"freesamael","senderId":"freesamael@irc"},
{"content":{"body":"(I couldn't find the defined limit in spec)","msgtype":"m.text"},"ts":1507796215000,"senderName":"freesamael","senderId":"freesamael@irc"},
{"content":{"body":"freesamael: I haven't seen a defined a limit","msgtype":"m.text"},"ts":1507796341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"freesamael: generally we leave that up to impl, unless it becomes a compat problem (such as with redirects, where we do define a limit)","msgtype":"m.text"},"ts":1507796363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see. Thx.","msgtype":"m.text"},"ts":1507796425000,"senderName":"freesamael","senderId":"freesamael@irc"},
{"content":{"body":"annevk: mind giving https://github.com/heycam/webidl/pull/459 a quick double check ?","msgtype":"m.text"},"ts":1507798189000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"acks are sorted on last name?","msgtype":"m.text"},"ts":1507798435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1507798437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: it looks good except I'd drop \"CSS\"","msgtype":"m.text"},"ts":1507798450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: since the technology is selectors and it's supposedly independent from CSS (even though everyone calls it CSS selectors)","msgtype":"m.text"},"ts":1507798476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk:  apparently (wrt to acks sort order)","msgtype":"m.text"},"ts":1507798510000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(well, not just supposedly, these days there's DOM APIs)","msgtype":"m.text"},"ts":1507798513000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Should I add a [[selectors4]] reference?","msgtype":"m.text"},"ts":1507798558000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'd drop the 4 if you do","msgtype":"m.text"},"ts":1507798794000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, obv.","msgtype":"m.text"},"ts":1507798804000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it probably makes sense since you don't want to assume too much knowledge from the reader","msgtype":"m.text"},"ts":1507798833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"this might be an interesting example for that reference discussion","msgtype":"m.text"},"ts":1507798852000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that said, the syntax error is actually thrown from DOM, not SELECTORS","msgtype":"m.text"},"ts":1507798862000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: you could ref DOM instead, since it has all the relevant info","msgtype":"m.text"},"ts":1507798884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: by \"reference discussion\" do you mean the \"footnotes\" I was mentioning above?","msgtype":"m.text"},"ts":1507798940000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I don't see the assert discussed in https://github.com/heycam/webidl/issues/118 in the commit that closed the issue","msgtype":"m.text"},"ts":1507798975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: https://github.com/whatwg/meta/issues/41","msgtype":"m.text"},"ts":1507799013000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, filed https://github.com/heycam/webidl/issues/449 for that","msgtype":"m.text"},"ts":1507799019000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1507799108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: tobie: thanks!","msgtype":"m.text"},"ts":1507799691000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: thank you!","msgtype":"m.text"},"ts":1507799704000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"kochi: also see the PR I sent to DOM","msgtype":"m.text"},"ts":1507799723000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: whatwg/dom#518?","msgtype":"m.text"},"ts":1507799761000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: yes","msgtype":"m.text"},"ts":1507799786000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"kochi: as imho that's the root of the initial confusion.","msgtype":"m.text"},"ts":1507799805000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: absolutely.  thanks for doing all the stuff.","msgtype":"m.text"},"ts":1507799838000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"tobie: as already annevk reviewed the PR, I don't have anything to add and it looks great to me.","msgtype":"m.text"},"ts":1507800232000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"JakeA: sorry, I missed that you wanted my review on those SW abort tests","msgtype":"m.text"},"ts":1507804563000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I'm not really sure I'm the right candidate, but I'll look through them","msgtype":"m.text"},"ts":1507804577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no worries, I only pushed them a day ago I think","msgtype":"m.text"},"ts":1507804604000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: says 4 days here","msgtype":"m.text"},"ts":1507804689000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: shit, time flies","msgtype":"m.text"},"ts":1507804711000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh my, I'm confusing days and commits","msgtype":"m.text"},"ts":1507804712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Further evidence I'm not qualified","msgtype":"m.text"},"ts":1507804731000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"haha well I just took your world for it","msgtype":"m.text"},"ts":1507804746000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"word*","msgtype":"m.text"},"ts":1507804758000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks for commenting on that push thing","msgtype":"m.text"},"ts":1507807167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: we should indeed do the lower-level thing first","msgtype":"m.text"},"ts":1507807182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(but someone should also figure out if we want to keep the current architecture where a push is tied to the connection)","msgtype":"m.text"},"ts":1507807204000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no problem! I think the push cache has to sit beyond the HTTP cache, otherwise it risks skipping stuff like CSP.","msgtype":"m.text"},"ts":1507807644000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"foolip: https://github.com/w3c/web-platform-tests/issues/7693 would be nice for the roadmap","msgtype":"m.text"},"ts":1507809302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: there's some other older issues in w3c/wptserve too that are still relevant I guess","msgtype":"m.text"},"ts":1507809329000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: Not currently, no. For now, just link it manually. Feel free to open an issue tho - if we can collect results I can see if there's a pattern that would be useful to capture.","msgtype":"m.text"},"ts":1507814080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1507814102000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"annevk: JakeA: is there a reason we can't use the WebSockets API on top of H2 under the hood?  aren't network layers a useful abstraction? just curious about some of the motivations","msgtype":"m.text"},"ts":1507819435000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I think it's because nobody defined how it would work","msgtype":"m.text"},"ts":1507819480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: WebSocket now is an HTTP/1 handshake followed by framed data over a single connection","msgtype":"m.text"},"ts":1507819529000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: to do it over HTTP/2 would require new H/2 frames or layering on top of H/2 frames, I'd imagine","msgtype":"m.text"},"ts":1507819566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1507819716000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Didn't someone draft that?","msgtype":"m.text"},"ts":1507819747000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://tools.ietf.org/html/draft-hirano-httpbis-websocket-over-http2-01","msgtype":"m.text"},"ts":1507819789000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But it was abandoned","msgtype":"m.text"},"ts":1507819793000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Give me full-duplex fetch first and then we'll see if we still need WebSocket or just smaller frames in H2","msgtype":"m.text"},"ts":1507819974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"agree","msgtype":"m.text"},"ts":1507819982000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"d","msgtype":"m.text"},"ts":1507819983000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: oh, alex linked to that in his gist","msgtype":"m.text"},"ts":1507820225000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: JakeA: if we did do `.src = Response()` type integration... would you want it to be `.src` or `.srcobj`?","msgtype":"m.text"},"ts":1507824767000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: prolly the latter for consistency with existing APIs and to not break things that assume .src is a string","msgtype":"m.text"},"ts":1507824954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: I  totally forgot that was something I volunteered for looking into; I'll have a look tomorrow, but it might be a while","msgtype":"m.text"},"ts":1507824995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: its ok... not like I have time to implement it (although it may not be that hard)","msgtype":"m.text"},"ts":1507825016000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: if we could tap into the same `respondWith()` resolved a Response logic it might be dead easy","msgtype":"m.text"},"ts":1507825067000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: nothing is on the SW TPAC agenda yet... I guess I could try to propose something there","msgtype":"m.text"},"ts":1507825369000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: which APIs were you thinking anyway? For <audio> and <video> there's quite a simple entry point; I suspect for <img> it would be quite involved specification-wise","msgtype":"m.text"},"ts":1507826680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I was thinking for everything... if it supports a ServiceWorker interception/respondWith() it seems like we should be able to manually synthesize a response... was my naive thinking","msgtype":"m.text"},"ts":1507826778000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: makes sense, though I suspect we'll have some different challenges for each endpoint, even though if you imagine a service worker it's rather easy","msgtype":"m.text"},"ts":1507826880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe I should start blocking email that copies mailing lists","msgtype":"m.text"},"ts":1507831902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"has anyone heard of the disableRemotePlayback attribute?","msgtype":"m.text"},"ts":1507845360000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"or seen / read the Remote Playback API spec? https://w3c.github.io/remote-playback/","msgtype":"m.text"},"ts":1507845399000,"senderName":"tantek","senderId":"tantek@irc"}
]