[
{"content":{"body":"the \"Participate\" and \"Tests\" headers of the DOM Standard look weird","msgtype":"m.text"},"ts":1506311971000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"there are unclosed parens","msgtype":"m.text"},"ts":1506311974000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"is it a known issue?","msgtype":"m.text"},"ts":1506311977000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"xfq: hmm yeah, something broken there","msgtype":"m.text"},"ts":1506312631000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe a regression in bikeshed","msgtype":"m.text"},"ts":1506312792000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the source just has this:","msgtype":"m.text"},"ts":1506312828000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"!Participate: <a href=https://github.com/whatwg/dom>GitHub whatwg/dom</a> (<a href=https://github.com/whatwg/dom/issues/new>new issue</a>, <a href...","msgtype":"m.text"},"ts":1506312833000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"!Tests: <a href=https://github.com/w3c/web-platform-tests/tree/master/dom>web-platform-tests dom/</a> (<a href=https://github.com/w3c/web-platform-tests/...","msgtype":"m.text"},"ts":1506312867000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":",,,","msgtype":"m.text"},"ts":1506312986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and I can’t reproduce it locally","msgtype":"m.text"},"ts":1506312995000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but then my bikeshed isn’t the latest","msgtype":"m.text"},"ts":1506313011000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm just updated my bikeshed to the latest but I still can’t reproduce this","msgtype":"m.text"},"ts":1506313289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"xfq: file a DOM spec bug?","msgtype":"m.text"},"ts":1506313311000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Infra (13 September 2017) also has this issue, but URL (18 September 2017) doesn't","msgtype":"m.text"},"ts":1506317727000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1506317747000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have no idea what the cause might be","msgtype":"m.text"},"ts":1506317760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe annevk will","msgtype":"m.text"},"ts":1506317769000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the closest issue I can find is: https://github.com/tabatkins/bikeshed/issues/1097","msgtype":"m.text"},"ts":1506317794000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"Bikeshed issue","msgtype":"m.text"},"ts":1506317809000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We just need to generate new copies","msgtype":"m.text"},"ts":1506317821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so just triggering Travis will solve this issue?","msgtype":"m.text"},"ts":1506317866000,"senderName":"xfq","senderId":"xfq@irc"},
{"content":{"body":"I suspect so","msgtype":"m.text"},"ts":1506317884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yup, dom just happened to last generate in the few hours when the bug was present.","msgtype":"m.text"},"ts":1506317885000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can look at it in a couple of hours","msgtype":"m.text"},"ts":1506317920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: are worklets JavaScript modules?","msgtype":"m.text"},"ts":1506322482000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I wonder if we resolved that already","msgtype":"m.text"},"ts":1506322489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We did: https://drafts.css-houdini.org/worklets/","msgtype":"m.text"},"ts":1506323434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: would be good to have a thumbs up/down from you on https://github.com/whatwg/fetch/pull/527","msgtype":"m.text"},"ts":1506326790000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: mostly about the service worker selection for worklets part","msgtype":"m.text"},"ts":1506326808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: same goes for you, if you have the time","msgtype":"m.text"},"ts":1506326842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks for the notice. I'll check it out","msgtype":"m.text"},"ts":1506326911000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"looking now","msgtype":"m.text"},"ts":1506328464000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"mkwst: I guess you're okay with https://github.com/whatwg/fetch/pull/527 going with distinct destinations for the different worklet types?","msgtype":"m.text"},"ts":1506329773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkwst: it seems a little safer to just mark them differently from the outset","msgtype":"m.text"},"ts":1506329788000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yes. Totally fine with that. We can always reduce granularity in the future if we feel the need, but starting with more specific data seems right.","msgtype":"m.text"},"ts":1506330932000,"senderName":"mkwst","senderId":"mkwst@irc"},
{"content":{"body":"In https://html.spec.whatwg.org/multipage/media.html#concept-media-load-algorithm,","msgtype":"m.text"},"ts":1506334866000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Shouldn't the step '⌛ Otherwise the media element has no assigned media provider object and has neither a src attribute nor a source element child: set the networkState to NETWORK_EMPTY, and abort these steps; the synchronous section ends.' also set the delaying-the-load-event flag back to false?","msgtype":"m.text"},"ts":1506334886000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"foolip: ^^","msgtype":"m.text"},"ts":1506335084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Btw, TabAtkins landed <script type=idl> in Bikeshed which avoids the need to escape < & >. Also works better with syntax highlighting","msgtype":"m.text"},"ts":1506335221000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://tabatkins.github.io/bikeshed/#idl","msgtype":"m.text"},"ts":1506335225000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"hmm, who do we know who is still at Opera and can help us find stuff? both test-related (either by finding stuff around or in VCS history or bugs) and looking up bugs?","msgtype":"m.text"},"ts":1506335236000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: yes, that would make sense, can you file an issue?","msgtype":"m.text"},"ts":1506335282000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: Ok.","msgtype":"m.text"},"ts":1506335288000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: bratell/jl?","msgtype":"m.text"},"ts":1506335360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: mstensho?","msgtype":"m.text"},"ts":1506335397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: rune","msgtype":"m.text"},"ts":1506335420000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, true, they're all still there","msgtype":"m.text"},"ts":1506335436000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"foolip: https://github.com/whatwg/html/issues/3065","msgtype":"m.text"},"ts":1506335488000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"foolip: Failing to set it back to false in Servo made /html/semantics/embedded-content/media-elements/loading-the-media-resource/resource-selection-invoke-play.html timeout,","msgtype":"m.text"},"ts":1506335987000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"and I don't really understand why, hah.","msgtype":"m.text"},"ts":1506335993000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Do tests time out if we don't fire the load event, in general?","msgtype":"m.text"},"ts":1506336030000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: what's the correct way to hook an event handler up to its associated event?","msgtype":"m.text"},"ts":1506336902000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I've seen it done a few different ways","msgtype":"m.text"},"ts":1506336907000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"And none of them are done in https://dom.spec.whatwg.org/#aborting-ongoing-activities, so I should fix that","msgtype":"m.text"},"ts":1506336939000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: a dictionary object passed from JS also has its own realm, right?","msgtype":"m.text"},"ts":1506337931000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: if I want to pass that onto an algorithm goes in parallel, would it be a good practice to convert it to a internal struct? Or would just passing it as-is be okay?","msgtype":"m.text"},"ts":1506338008000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"I don't know if ES already defines the realm for arbitrary objects","msgtype":"m.text"},"ts":1506338245000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: testharness.js tests?","msgtype":"m.text"},"ts":1506338312000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jungkees: it’s converted to an IDL dictionary at the boundary which has no Realm so should be fine","msgtype":"m.text"},"ts":1506339119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: Yes.","msgtype":"m.text"},"ts":1506339169000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jungkees: the only somewhat weird thing is passing dictionaries across \"in parallel\" boundaries","msgtype":"m.text"},"ts":1506339225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: I think that should be okay, provided you don't mutate it, but at some point we need to document how that works","msgtype":"m.text"},"ts":1506339252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: no, it shouldn't matter","msgtype":"m.text"},"ts":1506339427000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: yeah, currently \"run a worker\" also takes a dictionary from the main thread and access it inside the worker thread","msgtype":"m.text"},"ts":1506339517000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"gsnedders: Well, that is weird then.","msgtype":"m.text"},"ts":1506339527000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"gsnedders: /html/semantics/embedded-content/media-elements/loading-the-media-resource/resource-selection-invoke-play.html times out locally if I don't account for https://github.com/whatwg/html/issues/3065","msgtype":"m.text"},"ts":1506339592000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"And it's not a test case that times out, but the whole test.","msgtype":"m.text"},"ts":1506339608000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"jungkees: ah, good to know","msgtype":"m.text"},"ts":1506339626000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: I suspect we don't want to formalize it too much right now, first figure out what all the various usage patterns will be and what kind of issues arise","msgtype":"m.text"},"ts":1506339664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: still very early days for \"in parallel\"","msgtype":"m.text"},"ts":1506339672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: will look in a few mins","msgtype":"m.text"},"ts":1506339694000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: okay. I don't think there are many cases for dictionary indeed","msgtype":"m.text"},"ts":1506339716000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: a tricky part that I encountered is.. I'd want to pass a struct to an internal algorithm","msgtype":"m.text"},"ts":1506339768000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: and that struct should somehow carry information in a dictionary given from JS","msgtype":"m.text"},"ts":1506339807000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: I'm not sure if I can set an item in a struct to a dictionary itself. Would that make sense?","msgtype":"m.text"},"ts":1506339847000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: otherwise, I'll need to convert the dictionary to a struct only for a reason to pass that along","msgtype":"m.text"},"ts":1506339897000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: that's fine","msgtype":"m.text"},"ts":1506339899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: sounds good :)","msgtype":"m.text"},"ts":1506339916000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: again, at some point we should be more clear on the rules and all the various types, but structs holding IDL types should be okay","msgtype":"m.text"},"ts":1506339928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: okay","msgtype":"m.text"},"ts":1506339943000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"nox: how much is this blocking you btw?","msgtype":"m.text"},"ts":1506340296000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It's not. I'm just very confused why it would happen. Pay me no mind.","msgtype":"m.text"},"ts":1506340406000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: ack","msgtype":"m.text"},"ts":1506340500000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"JakeA: sorry if I'm being confusing... I don't really want FetchEvent to be a unique snowflake... but I thought there were objections from other people (annevk?) to more widely observing the state of event handlers","msgtype":"m.text"},"ts":1506352659000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: it would be nice to have some common api to \"enableEvent('fetch')\" or \"disableEvent('message')\", etc","msgtype":"m.text"},"ts":1506352699000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm not against that API, although I worry about the amount of state we're adding to service workers. Maybe it's fine. But with the Facebook case I'm wondering if we went too narrow with navigation preload, and perhaps we should make it just fetchPreload, where \"navigation\" is an option","msgtype":"m.text"},"ts":1506352821000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Trying to understand their problem better","msgtype":"m.text"},"ts":1506352837000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't fully know their use cases, but it feels like some of the problem is that things are just not optimized well in browsers well for what they want... not sure I want to add too many weird apis to work around problems that might get resolved as we fix perf issues","msgtype":"m.text"},"ts":1506352966000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: agreed","msgtype":"m.text"},"ts":1506352981000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: once we understand the problem fully, we'll be in a better position to decide if this is a Chrome-world problem, or something that can never be fast and we need to offer another path","msgtype":"m.text"},"ts":1506353023000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't think FF is immune to these problems either","msgtype":"m.text"},"ts":1506353071000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: we've started collecting SW start times more explicitly: https://mzl.la/2wh9v2G","msgtype":"m.text"},"ts":1506353139000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"95-percentile is kind of crazy","msgtype":"m.text"},"ts":1506353147000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"oh wait... thats the submissions line","msgtype":"m.text"},"ts":1506353171000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://mzl.la/2wg5qfe","msgtype":"m.text"},"ts":1506353181000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I wish *.specs.whatwg.org would redirect to *.spec.whatwg.org.","msgtype":"m.text"},"ts":1506357460000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"wanderview: I generally think that's a bad thing, but for service workers that ship has sailed","msgtype":"m.text"},"ts":1506360484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: file an issue at https://github.com/whatwg/misc-server/issues/new?","msgtype":"m.text"},"ts":1506360502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: should be doable, although maybe we should wait for let's encrypt to support wildcards","msgtype":"m.text"},"ts":1506360553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Thanks for the pointer.","msgtype":"m.text"},"ts":1506360589000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Is it just me or everything about the fetching of the poster frame of video elements has some hand-waving?","msgtype":"m.text"},"ts":1506367704000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I expected it to be piggy-backing the wording on the image element in some sort. Not just \"If an image is thus obtained, the poster frame is that image. Otherwise, there is no poster frame.\"","msgtype":"m.text"},"ts":1506367749000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"foolip: hoping onto irc as this will be easier to solve if we're sync","msgtype":"m.text"},"ts":1506372857000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: so what I think you should do is merge the WICG PR first.","msgtype":"m.text"},"ts":1506372894000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: here I am","msgtype":"m.text"},"ts":1506372898000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I can't do that, need someone with write access to that repo","msgtype":"m.text"},"ts":1506372913000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: oh. :D","msgtype":"m.text"},"ts":1506372922000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"cwilso: ^","msgtype":"m.text"},"ts":1506372923000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"cwilso: this is https://github.com/WICG/admin/pull/36","msgtype":"m.text"},"ts":1506372970000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"or perhaps yoav? ^","msgtype":"m.text"},"ts":1506372999000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: do the BIGNAMES need to be globally unique?","msgtype":"m.text"},"ts":1506373031000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yes","msgtype":"m.text"},"ts":1506373045000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"huh, well OK","msgtype":"m.text"},"ts":1506373054000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: AND they need to persist from update to update","msgtype":"m.text"},"ts":1506373084000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Then what'll we do with the old one? Delete it manually?","msgtype":"m.text"},"ts":1506373090000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: moving stuff from org to org is super rare, so we're in mostly unchartered territories, here.","msgtype":"m.text"},"ts":1506373140000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: we'll probably need to do it manually","msgtype":"m.text"},"ts":1506373157000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ok, but wicg->w3c must be pretty common?","msgtype":"m.text"},"ts":1506373163000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"maybe?","msgtype":"m.text"},"ts":1506373184000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: is most wicg stuff just not in specref, given the short biblio.json there?","msgtype":"m.text"},"ts":1506373186000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I dunno","msgtype":"m.text"},"ts":1506373200000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: it might be that most don't need to be referenced until they move to W3C","msgtype":"m.text"},"ts":1506373256000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: WICG is recent, so it could be that you're one of the first to do that migration.","msgtype":"m.text"},"ts":1506373272000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: the first whatwg->wicg for sure, yes","msgtype":"m.text"},"ts":1506373301000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but it seems like wicg things in general just aren't added to specref, unless I'm missing something","msgtype":"m.text"},"ts":1506373319000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: for context, specref is massive ball of scotch tape + band aid","msgtype":"m.text"},"ts":1506373326000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: and here I am trying to build something robust and cool on top of it","msgtype":"m.text"},"ts":1506373347000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: for which I have pretty much not time","msgtype":"m.text"},"ts":1506373349000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: https://foolip.github.io/day-to-day/ is the thing","msgtype":"m.text"},"ts":1506373362000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: there's a whole bunch of pretty robust things built on top of specref","msgtype":"m.text"},"ts":1506373394000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: how can I filter for \"real\" specs, is that an unsolved problem?","msgtype":"m.text"},"ts":1506373416000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: define \"real\"","msgtype":"m.text"},"ts":1506373428000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: specs that define CSS properties, IDL or HTTP headers","msgtype":"m.text"},"ts":1506373443000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"that's not going to happen","msgtype":"m.text"},"ts":1506373465000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1506373467000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Uh, which would make ecmascript not a real spec I guess","msgtype":"m.text"},"ts":1506373474000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"BUT, if you're working on something wpt-related","msgtype":"m.text"},"ts":1506373488000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it is wpt-related, and the non-trivial bit if figuring out which directories in wpt correspond to each spec","msgtype":"m.text"},"ts":1506373520000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: Have you talked to TabAtkins? Shepherd has a list of at least CSS and IDL-providing specs.","msgtype":"m.text"},"ts":1506373536000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"foolip: that should be rather trivial","msgtype":"m.text"},"ts":1506373540000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: as the tagging there is Specref-based","msgtype":"m.text"},"ts":1506373557000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"*wakes up*","msgtype":"m.text"},"ts":1506373580000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"foolip: merged","msgtype":"m.text"},"ts":1506373584000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"cwilso: ty","msgtype":"m.text"},"ts":1506373590000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"cwilso: thank!","msgtype":"m.text"},"ts":1506373592000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: Ooh, that day-to-day thing is cool","msgtype":"m.text"},"ts":1506373597000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: glad you like it, trying to make it not suck and then include many more specs","msgtype":"m.text"},"ts":1506373618000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"was literally off getting coffee.  :)","msgtype":"m.emote"},"ts":1506373621000,"senderName":"cwilso","senderId":"cwilso@irc"},
{"content":{"body":"TabAtkins: ignoring specs that nobody probably cares about isn't entirely trivial it seems. would sheperd help?","msgtype":"m.text"},"ts":1506373642000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: To check for things defining CSS or IDL, you can always pull the Bikeshed datafiles and read over the definitions to see what specs define them.","msgtype":"m.text"},"ts":1506373647000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or use Bikeshed directly, so you can use its parsing/etc.","msgtype":"m.text"},"ts":1506373661000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolip: if you know the directory of a test in wpt, then you know its specref id","msgtype":"m.text"},"ts":1506373686000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Oh yeah, and I do have a dfn type for headers, so that should theoretically work too.","msgtype":"m.text"},"ts":1506373686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes, I am cloning all the repos anyway, could probably work it out somehow","msgtype":"m.text"},"ts":1506373722000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: there are exceptions that I'm having to deal with, like webrtc-pc vs webrtc, and HTML's many directories","msgtype":"m.text"},"ts":1506373741000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"You can just iterate thru the refs, checking if they're a dfn type you want to care about, and collecting the specs they're associate with. Then you can check the spec db to get their URLs. This doesn't translate over into GitHubs, tho.","msgtype":"m.text"},"ts":1506373759000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: iterating over shepherd, you mean?","msgtype":"m.text"},"ts":1506373783000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I'm now working from something that guesses the git URL from the spec's URL, which I think will work with very few exceptions","msgtype":"m.text"},"ts":1506373810000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Nah, over Bikeshed's db.","msgtype":"m.text"},"ts":1506373813000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolip: well obviously the webrtc folks are doing their thing","msgtype":"m.text"},"ts":1506373818000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: it was probably the right name once upon a time","msgtype":"m.text"},"ts":1506373837000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: in which case it should still be in specref","msgtype":"m.text"},"ts":1506373853000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: maybe?","msgtype":"m.text"},"ts":1506373871000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Boot up a reference manager (check cli.py, under the `command == \"refs\"` section, for how to do that), then call `.queryRefs(type=\"property\")`/etc.","msgtype":"m.text"},"ts":1506373876000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"tobie: are you only using biblio.json and similar, or also crawling around github orgs for new repos?","msgtype":"m.text"},"ts":1506373889000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"The specs db is in ReferanceManager.specs, it's just a dictionary of spec names => spec info; it'll match up with the `spec` data field in the refs.","msgtype":"m.text"},"ts":1506373913000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolip: not doing crawling","msgtype":"m.text"},"ts":1506373940000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: just poking the different ref sources hourly","msgtype":"m.text"},"ts":1506373983000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: mkay, well it mostly works, so thank you :)","msgtype":"m.text"},"ts":1506374041000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: for ref, here's the code that handles the labeling for wpt: https://github.com/tobie/ganesh/blob/master/lib/metadata/raw-labels.js","msgtype":"m.text"},"ts":1506374107000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: should probably include webrtc-pc in there","msgtype":"m.text"},"ts":1506374184000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"of course wpt labels aren't exactly the same as specs (in particular for a bunch of stuff that is defined in whatwg html, but in separate wpt directories)","msgtype":"m.text"},"ts":1506374256000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"tobie: hmm, looks like a wpt dir -> shortname mapping?","msgtype":"m.text"},"ts":1506374257000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yes","msgtype":"m.text"},"ts":1506374288000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Mek: yeah-that's sort of subar","msgtype":"m.text"},"ts":1506374333000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I guess I could start from wpt and work out what specs they belong to, but doing it the other way also allows me to discover specs with no wpt dirs, which I could then rectify","msgtype":"m.text"},"ts":1506374338000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"subpar","msgtype":"m.text"},"ts":1506374338000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"basically I'm going for a 1 spec repo + dir => many test repo + dir mapping","msgtype":"m.text"},"ts":1506374394000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"(css is all one repo, hence the +dir)","msgtype":"m.text"},"ts":1506374410000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"we'll see, hacking away","msgtype":"m.text"},"ts":1506374419000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: css is organized by shortname within that repo","msgtype":"m.text"},"ts":1506374434000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: well, with the complication of versioned directories","msgtype":"m.text"},"ts":1506374452000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"they all match, iirc, gsnedders fixed them","msgtype":"m.text"},"ts":1506374453000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"which is also a complication for the specs themselves of course","msgtype":"m.text"},"ts":1506374463000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I've given up on trying to make sense of how the CSSWG organizes its work","msgtype":"m.text"},"ts":1506374487000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(Sorry Tab)","msgtype":"m.text"},"ts":1506374500000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: please tell us it's actually very simple to understand :)","msgtype":"m.text"},"ts":1506374515000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Not a clue, ask fantasai and gsnedders I guess.","msgtype":"m.text"},"ts":1506374541000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ha, gsnedders just rants about versioned directories like me, no help there","msgtype":"m.text"},"ts":1506374560000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"I guess it's down to fantasai","msgtype":"m.text"},"ts":1506374568000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Oh wait, is this about WPT specifically, or just our spec organization in general?","msgtype":"m.text"},"ts":1506374573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Sort of both","msgtype":"m.text"},"ts":1506374594000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"TabAtkins: I was just building my little toy, the only thing I want to do with it now is map specs to tests","msgtype":"m.text"},"ts":1506374609000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and additionally whether and how they map","msgtype":"m.text"},"ts":1506374618000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"although another thing I'd like to do is find specs that don't link to wpt and fix those","msgtype":"m.text"},"ts":1506374640000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"if they all did then I'd have my mapping right there","msgtype":"m.text"},"ts":1506374648000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: well if they have tests elsewhere, no one runs them so…","msgtype":"m.text"},"ts":1506374673000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: outside of ES + WebGL(?)","msgtype":"m.text"},"ts":1506374693000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: wasm too","msgtype":"m.text"},"ts":1506374702000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"and yes, webgl is still external","msgtype":"m.text"},"ts":1506374713000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"wasm has a spec?","msgtype":"m.text"},"ts":1506374721000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1506374724000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"ducks","msgtype":"m.emote"},"ts":1506374744000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: dunno, when I go look for it I usually find things aimed at web developers","msgtype":"m.text"},"ts":1506374755000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: There is a spec, yes. It's currently written in some tool intended for Python library documentation.","msgtype":"m.text"},"ts":1506374786000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://webassembly.github.io/spec/","msgtype":"m.text"},"ts":1506374793000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"TabAtkins: I know, we've just added more legacy stuff to WebIDL for it","msgtype":"m.text"},"ts":1506374811000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I and some wasm folks tried our damnedest to make it be in Bikeshed, but apparently Andreas has the final say for some reason, and he demanded it.","msgtype":"m.text"},"ts":1506374814000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foolip: if the goal is to move everything to wpt, which imho it should be, then you shouldn't incentivize folks to do their own thing on the side by helping them out with tooling","msgtype":"m.text"},"ts":1506374885000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: unless there are very good reasons to do so, obv","msgtype":"m.text"},"ts":1506374908000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: so I work up from wpt and eventually manually add stuff that's not in it for good reasons","msgtype":"m.text"},"ts":1506375012000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: but that's just my $.02","msgtype":"m.text"},"ts":1506375033000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'm actually not convinced that wpt should devour everything, or at least not be the source of truth for everything","msgtype":"m.text"},"ts":1506375144000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"tobie: because v8 is a separate project from chromium, and I think they should be able to change test262 together with their code","msgtype":"m.text"},"ts":1506375198000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah test262 doesn't belong in wpt","msgtype":"m.text"},"ts":1506375227000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: which could mean mirroring in one wpt directory into v8, but mirroring test262 itself would also work","msgtype":"m.text"},"ts":1506375229000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: not sure about wasm and/or WebGL","msgtype":"m.text"},"ts":1506375255000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: these three exceptions can work for all I care","msgtype":"m.text"},"ts":1506375267000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: and can be handled manually","msgtype":"m.text"},"ts":1506375275000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"(imho)","msgtype":"m.text"},"ts":1506375281000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: once the infrastructure around wpt is compelling enough I doubt we'll be accumulating more exceptions","msgtype":"m.text"},"ts":1506375298000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: agreed","msgtype":"m.text"},"ts":1506375313000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: where should I report bugs in https://www.w3.org/2002/01/tr-automation/tr.rdf?","msgtype":"m.text"},"ts":1506376453000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip:  sysreq⊙wo","msgtype":"m.text"},"ts":1506376987000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: thanks","msgtype":"m.text"},"ts":1506377002000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: alright; merged and closed a bunch of things","msgtype":"m.text"},"ts":1506377609000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: gave you commit rights to the repo and now going back to webidl mixins","msgtype":"m.text"},"ts":1506377651000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: awesome, I'll try not to delete it","msgtype":"m.text"},"ts":1506377662000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"nothing gets merged to heroku unless the test suite is green","msgtype":"m.text"},"ts":1506377738000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"foolip: so the risks of you doing anything bad beyond wasting my time are pretty low","msgtype":"m.text"},"ts":1506377771000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: I'll have to apply myself then","msgtype":"m.text"},"ts":1506377814000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: disabling travis isn't rocket science, so…","msgtype":"m.text"},"ts":1506377952000,"senderName":"tobie","senderId":"tobie@irc"}
]