[
{"content":{"body":"annevk: in https://github.com/whatwg/fullscreen/pull/79 do you want me to remove the \"type:dfn; for:list; text:for each\" default and use for attributes everywhere?","msgtype":"m.text"},"ts":1494403933000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: oh I didn't spot that","msgtype":"m.text"},"ts":1494403959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I somewhat prefer not relying on that feature if it's not needed","msgtype":"m.text"},"ts":1494403976000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: but I'm okay with you ignoring those comments","msgtype":"m.text"},"ts":1494403994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: since you're doing a bunch of the work now","msgtype":"m.text"},"ts":1494404003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it does somewhat increase the likelihood that the wrong this is used by mistake, but there's just one \"for each\" right?","msgtype":"m.text"},"ts":1494404023000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: it's also there for sets and we might get it for strings and such","msgtype":"m.text"},"ts":1494404045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, actually #map-iterate exists as well","msgtype":"m.text"},"ts":1494404070000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"for=set and for=list prolly point to the same dfn though","msgtype":"m.text"},"ts":1494404082000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, they are","msgtype":"m.text"},"ts":1494404088000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"but still seems good to keep the types correct if we ever get tooling","msgtype":"m.text"},"ts":1494404104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll remove that final list, and then the spec will have just ordered sets, and can use \"type:dfn; for:set; text:for each\", or would you prefer to spell it out anyway?","msgtype":"m.text"},"ts":1494404147000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: you should do your preference since you're mostly editing these days","msgtype":"m.text"},"ts":1494404200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, will do","msgtype":"m.text"},"ts":1494404221000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: regarding wording, is there another spec that extensively uses infra that I can cargo cult? Now I'm wondering if \"Let x be an empty ordered set\" or \"new ordered set\" is the coolest phrasing.","msgtype":"m.text"},"ts":1494404313000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I use a \"a new set\" personally","msgtype":"m.text"},"ts":1494404622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: nothing uses it as much as they should yet","msgtype":"m.text"},"ts":1494404634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wants to be like annevk","msgtype":"m.emote"},"ts":1494404635000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: actually, \"To remove an element from a top layer, remove element from top layer.\" is very silly even if not circular due to the links. WDYT, should HTML just operate on it as an ordered set directly?","msgtype":"m.text"},"ts":1494405361000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah, if there are no side effects","msgtype":"m.text"},"ts":1494405407000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: it seems weird that there would be nothing to update though, maybe there's an XXX step in there to do layout?","msgtype":"m.text"},"ts":1494405426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as implemented there actually are, there are flags set on the element so that it can later be quickly tested for \"is in top layer\"","msgtype":"m.text"},"ts":1494405443000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: optimizations aren't worth defining","msgtype":"m.text"},"ts":1494405464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but layout would be observable possibly","msgtype":"m.text"},"ts":1494405478000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right, but it does mean that both for adding and removing, we're going through an extra layer","msgtype":"m.text"},"ts":1494405507000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"well, the layout could just as well iterate the top layer and just be slower, so it's an optimization","msgtype":"m.text"},"ts":1494405527000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"yeah true, layout wouldn't be done there, that would be done when someone asks for it (or you hit an animation frame)","msgtype":"m.text"},"ts":1494405613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, I'm convinced we can just remove it","msgtype":"m.text"},"ts":1494405623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll prepare the HTML PR then","msgtype":"m.text"},"ts":1494405791000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: done, and is there anything else in infra that fullscreen can/should use?","msgtype":"m.text"},"ts":1494406480000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: probably... I haven't studied it closely","msgtype":"m.text"},"ts":1494406537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Looking now, I see while/continue/break, will do those too then","msgtype":"m.text"},"ts":1494406603000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"OK, done, sorry for the quick churn","msgtype":"m.text"},"ts":1494406783000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: landed both, tweaked commit messages a bit","msgtype":"m.text"},"ts":1494407134000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks!","msgtype":"m.text"},"ts":1494407161000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Oh right, forgot Meta on HTML :)","msgtype":"m.text"},"ts":1494407173000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Oh, am I confused about Editorial: and Meta: still?","msgtype":"m.text"},"ts":1494407203000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: it seemed more than Meta since it's actually changing text","msgtype":"m.text"},"ts":1494407233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, it did end up bigger than it started out as","msgtype":"m.text"},"ts":1494407255000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"Meta is no-op as far as content goes imo","msgtype":"m.text"},"ts":1494407263000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Curious if TabAtkins was able to organize markup for arguments names of abstract ops in Bikeshed.","msgtype":"m.text"},"ts":1494408881000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I've got a recursive algorithm and I'm writing stuff like, \"invoke [=operation=], passing it the child of |P| as |P| and |I| as |I|\", which I don't think reads very well. :(","msgtype":"m.text"},"ts":1494409032000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I still don't name my arguments, just \"passing the child of |P| and |I|\"","msgtype":"m.text"},"ts":1494424046000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So navigate goes async at some point, and then uses two tasks to get back in sync","msgtype":"m.text"},"ts":1494424347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is probably bogus?","msgtype":"m.text"},"ts":1494424355000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Given 1. Dispatch event. 2. Go async. 3. Queue task. | Does that mean that if in 1 I do setTimeout 0 it runs before 3? Must, right?","msgtype":"m.text"},"ts":1494424425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So setTimeout during beforeunload will run before unload","msgtype":"m.text"},"ts":1494424448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(For those following along. I ended up having to change base URLs yesterday. But in order to change base URLs one has to change how documents are allocated. So that's where we are... Pretty much full circle, but not quite.)","msgtype":"m.text"},"ts":1494424547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: well, the problem is both |P| and |I| are interfaces, so you just distinguish them by order?","msgtype":"m.text"},"ts":1494425600000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: this is sort of a dumb question with an obvious answer, so sorry. :)","msgtype":"m.text"},"ts":1494425675000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Domenic: yes, order!","msgtype":"m.text"},"ts":1494425853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oops, meant that for tobie","msgtype":"m.text"},"ts":1494425861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Order all the things","msgtype":"m.text"},"ts":1494425876000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, it's just painful to read. I'm descending the inheritance tree and so I have to keep a hold of both the current place in the tree and the end node.","msgtype":"m.text"},"ts":1494426032000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"Inside of a recursive algorithm.","msgtype":"m.text"},"ts":1494426062000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"I'll finish the thing and ask for feedback. I'm sure there's a simpler way to do this.","msgtype":"m.text"},"ts":1494426089000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"tobie: you could try Invoke X with P's child and I.","msgtype":"m.text"},"ts":1494426107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tobie: which reads fairly okay to me","msgtype":"m.text"},"ts":1494426114000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll give that a try","msgtype":"m.text"},"ts":1494426145000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"present+ Florian","msgtype":"m.text"},"ts":1494431904000,"senderName":"frivoal_","senderId":"frivoal_@irc"},
{"content":{"body":"rossen seems barely audible to me","msgtype":"m.emote"},"ts":1494431993000,"senderName":"frivoal_","senderId":"frivoal_@irc"},
{"content":{"body":"much better","msgtype":"m.emote"},"ts":1494432020000,"senderName":"frivoal_","senderId":"frivoal_@irc"},
{"content":{"body":"frivoal_ wrong channel :)","msgtype":"m.emote"},"ts":1494432058000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"thanks!","msgtype":"m.emote"},"ts":1494432068000,"senderName":"frivoal_","senderId":"frivoal_@irc"},
{"content":{"body":"sorry everyone for the noise","msgtype":"m.emote"},"ts":1494432092000,"senderName":"frivoal_","senderId":"frivoal_@irc"},
{"content":{"body":"CSS selectors can match on namespaces, e.g. svg|g. Should Element.matches support that? An element has local prefix/namespace mappings.","msgtype":"m.text"},"ts":1494433258000,"senderName":"vandenoever","senderId":"vandenoever@irc"},
{"content":{"body":"I see that dom.spec.whatwg.org says 'Support for namespaces within selectors is not planned and will not be added. ' Is there a rationale for that?","msgtype":"m.text"},"ts":1494433333000,"senderName":"vandenoever","senderId":"vandenoever@irc"},
{"content":{"body":"vandenoever: not enough namespaces to go around","msgtype":"m.text"},"ts":1494433847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what do you mean? There are plenty of namespaces. In WebODF the namespaces are very important to make it work.","msgtype":"m.text"},"ts":1494435362000,"senderName":"vandenoever","senderId":"vandenoever@irc"},
{"content":{"body":"vandenoever: in terms of what browsers expose there's just SVG and HTML, and MathML if you're lucky","msgtype":"m.text"},"ts":1494435457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"vandenoever: I'm not familiar with WebODF","msgtype":"m.text"},"ts":1494435473000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"vandenoever: but also, I gotta go, I recommend filing an issue at https://github.com/whatwg/dom/issues/new describing your use case (and if that's WebODF, please explain the basic setup, since unless you're actually serving XML documents to the browser and render those with CSS somehow (and do something weird for links and images and such) it's not really","msgtype":"m.text"},"ts":1494435612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clear to me how it's applicable","msgtype":"m.text"},"ts":1494435612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: any reason you assigned mkwst to https://github.com/whatwg/html/pull/2588 ? Seems pretty quick","msgtype":"m.text"},"ts":1494447005000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: You might wanna actually read over the https://github.com/heycam/webidl/issues/345 thread and try commenting again; right now it looks like you only bothered to read my last comment and threw an offhand rejection, which is pretty rude to me and bz.","msgtype":"m.text"},"ts":1494451015000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'm looking through the Bikeshed docs for a way to label algorithm steps and then link to them elsewhere. Does it have this feature?","msgtype":"m.text"},"ts":1494455562000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"},
{"content":{"body":"Not yet, but https://github.com/tabatkins/bikeshed/issues/796 is open to track it.  If you give them an ID, they'll generate a permalink thing.","msgtype":"m.text"},"ts":1494455611000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Got it. Thanks!","msgtype":"m.text"},"ts":1494455748000,"senderName":"jugglinmike","senderId":"jugglinmike@irc"}
]