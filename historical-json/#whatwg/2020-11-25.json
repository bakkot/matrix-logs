[
{"content":{"body":"interesting bug or feature: url(https:/w/skins/Vector/resources/skins.vector.styles/images/user-avatar.svg?b7f58)","msgtype":"m.text"},"ts":1606263211000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"apparently both Firefox and Chrome accept this","msgtype":"m.text"},"ts":1606263220000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"it's not quite a path url, nor is it a qualified url. it's got a protocol, and a full path, but no domain","msgtype":"m.text"},"ts":1606263239000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"and... it's taken to mean fill in the current domain","msgtype":"m.text"},"ts":1606263249000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"> new URL('https:/w/foo')","msgtype":"m.text"},"ts":1606265076000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"URL { host: \"w\", origin: \"https://w\", protocol: \"https\", href: \"https://w/foo\" }","msgtype":"m.text"},"ts":1606265076000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"seems to normalize as if there are two slashes, and treating first directory as domain","msgtype":"m.text"},"ts":1606265092000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"which isn't unreasonable either but not what browsers actually do it seems","msgtype":"m.text"},"ts":1606265109000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"at least, not in CSS url() context","msgtype":"m.text"},"ts":1606265114000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Krinkle: what you're seeing in CSS url() is equivalent to new URL(\"https:/w/foo\", \"https://example.com\")","msgtype":"m.text"},"ts":1606265137000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"confirmed, Firefox also does this for <a href=\"https:/w/foo'\"> goes to /w/foo","msgtype":"m.text"},"ts":1606265156000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"andreubotella: ooh, interesting!","msgtype":"m.text"},"ts":1606265178000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"https://url.spec.whatwg.org/#scheme-state, steps 6 and 7","msgtype":"m.text"},"ts":1606265193000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I didn't know that argument existed, but also - I wonder what quirk demands that the slash parsing itself varies based on there being a base","msgtype":"m.text"},"ts":1606265202000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"2.6 and 2.7 I mean","msgtype":"m.text"},"ts":1606265232000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"right, so it specifically calls for this where having a base informs how this (arguably, error) scenario is handled.","msgtype":"m.text"},"ts":1606265291000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"if you go to Wikipedia now, and inspect the \"person\" icon at the top right, you'll find this (accidentally) in action.","msgtype":"m.text"},"ts":1606265321000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"slipped passed our QA and testing :)","msgtype":"m.text"},"ts":1606265344000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Thanks for the spec lookup, appreciate it!","msgtype":"m.text"},"ts":1606265404000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I can see how it would :)","msgtype":"m.text"},"ts":1606265411000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"I'm not sure what the reasoning was, try filing an issue","msgtype":"m.text"},"ts":1606265428000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"the case where there is a base URL, I think it's behaving quite reasonably. I mostly think of relative URls as filling in from the left, but sure why not fill in the middle. also web-compat probably makes it hard to break now e.g. if these mistakes exist in the wild.","msgtype":"m.text"},"ts":1606265575000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"for the base-less case, there might be an argument for it to throw or something, treating the first directory as the origin seems likely to mask mistakes and seems less likely to be intentional. But then again, it's very close to a real URL if you added just one more slash.","msgtype":"m.text"},"ts":1606265617000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I can see how these two different worlds collided into a single spec :)","msgtype":"m.text"},"ts":1606265630000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I don't know if we curerntly have a notion of \"I want proper\" and \"I want whatever you can give me\" as a distinction in the spec. E.g. one for resolving the address bar, and one for programmatic use of 'new URL' where you might want stricter","msgtype":"m.text"},"ts":1606265696000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"the URL parser doesn't throw, no matter how malformed the input","msgtype":"m.text"},"ts":1606265728000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"right, I see. ok, that seems reasonable then","msgtype":"m.text"},"ts":1606265743000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"and I suspect introducing something like that now for new URL would break sites","msgtype":"m.text"},"ts":1606265746000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1606265751000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I've got a big backlog full of issues due to decodeURIComponent() sometimes throwing for malformed URIs","msgtype":"m.text"},"ts":1606265770000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"e.g. when people mess with percent encoding or some kind of script breaking a url.","msgtype":"m.text"},"ts":1606265796000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"instantly breaks out of deep code paths requiring local try-catch all over","msgtype":"m.text"},"ts":1606265808000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"what is the best way to send a notification that is compatible with a maximum of mobile devices? service worker?","msgtype":"m.text"},"ts":1606275237000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"Notification constructor did not work for me on chrome/samsung browsers on android","msgtype":"m.text"},"ts":1606275298000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"worked in firefox","msgtype":"m.text"},"ts":1606275303000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"and not IOS of course","msgtype":"m.text"},"ts":1606275309000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"https://whatwebcando.today/local-notifications.html","msgtype":"m.text"},"ts":1606279866000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"derpadmin: yeah, PWA and offline SW landed","msgtype":"m.text"},"ts":1606279879000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"But notifications and background sync not yet it seems","msgtype":"m.text"},"ts":1606279889000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"thanks Krinkle","msgtype":"m.text"},"ts":1606279957000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"I had a hard time wrapping my head around the 3 different way to do it","msgtype":"m.text"},"ts":1606279986000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"I succeeded but failed","msgtype":"m.text"},"ts":1606280001000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"failed on success as they say :)","msgtype":"m.text"},"ts":1606280012000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"Not even listed at WebKit status it seems :( - https://webkit.org/status/#?search=noti","msgtype":"m.text"},"ts":1606280112000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Yeah..","msgtype":"m.text"},"ts":1606280127000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"I have an error with the example","msgtype":"m.text"},"ts":1606280968000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"it is basically the same example I was reading on codelabs.developers.google.com","msgtype":"m.text"},"ts":1606280989000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"Service Worker registration error: TypeError: reg is undefined","msgtype":"m.text"},"ts":1606281019000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"trying to copy paste and try the code in another server now","msgtype":"m.text"},"ts":1606281041000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"as is","msgtype":"m.text"},"ts":1606281045000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"did you managed to made the example code you linked me run Krinkle ?","msgtype":"m.text"},"ts":1606282803000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"derpadmin: I have not, I didn't realize there was sample code there","msgtype":"m.text"},"ts":1606282858000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"probably not the best source for that sort of thing :)","msgtype":"m.text"},"ts":1606282868000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"well, it is pretty much the example floating around for service workers","msgtype":"m.text"},"ts":1606282965000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"ServiceWorkerRegistration.showNotification","msgtype":"m.text"},"ts":1606282975000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"trying with this syntax now","msgtype":"m.text"},"ts":1606282982000,"senderName":"derpadmin","senderId":"derpadmin@irc"},
{"content":{"body":"> There is an XXX in the .webidl, since nullability of signal is unclear in the spec pr.","msgtype":"m.text"},"ts":1606295364000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"smaug___ can you clarify that? I just used the same format `fetch` uses for the signal as prior art. I think it means the signal _may_ be null? I might be misunderstanding","msgtype":"m.text"},"ts":1606295364000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"Discussion happened here: https://github.com/whatwg/dom/pull/919#discussion_r520717577","msgtype":"m.text"},"ts":1606295466000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: I think for fetch() it’s nullable so passing a Request works; might no longer be needed if we can make getters return undefined more easily, but doesn’t seem worth changing at this point…","msgtype":"m.text"},"ts":1606313093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"benjamingr__: I think the spec pr had a question about it","msgtype":"m.text"},"ts":1606319157000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so I'll tweak the Gecko patch once the spec has been updated","msgtype":"m.text"},"ts":1606319216000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(tweak it if needed)","msgtype":"m.text"},"ts":1606319227000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"well, at least remove XXX comment if nothing else","msgtype":"m.text"},"ts":1606319245000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is there any use case for signal to be nullable?","msgtype":"m.text"},"ts":1606319306000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so n00b question: nullable means you don't have to pass it or you may pass literal `null`?","msgtype":"m.text"},"ts":1606320296000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"nullable means that you can pass null","msgtype":"m.text"},"ts":1606320405000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"benjamingr__: optional is the default for dictionary members","msgtype":"m.text"},"ts":1606323131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh then it probably shouldn't be nullable but it it should be optional","msgtype":"m.text"},"ts":1606323387000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"it is optional by default","msgtype":"m.text"},"ts":1606331545000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"non-optional would need 'required'","msgtype":"m.text"},"ts":1606331567000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"OK, I think that's just a misunderstanding on my part - I'll fix it in the spec - should I also add a WPT to ensure passing `null` is not allowed?","msgtype":"m.text"},"ts":1606332610000,"senderName":"benjamingr__","senderId":"benjamingr__@irc"},
{"content":{"body":"benjamingr__: that sounds reasonable","msgtype":"m.text"},"ts":1606337033000,"senderName":"smaug____","senderId":"smaug____@irc"}
]