[
{"content":{"body":"have to pipe all of Mark Watson's e-mail public-html messages to \"lynx -stdin -force_html\" in order to figure out which parts are where he's quoting somebody and which parts he's saying himself","msgtype":"m.text"},"ts":1339116101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, need to do it for other messages to the list","msgtype":"m.text"},"ts":1339116303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's just that Mark's messages are ones that I actually want to read","msgtype":"m.text"},"ts":1339116324000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"In this case, it seems entirely reasonable for other browsers (e.g., Firefox) to want to implement this feature.  By putting it on navigator, we invite them to implement it as well.\"","msgtype":"m.text"},"ts":1339127037000,"senderName":"kennyluck","senderId":"kennyluck@irc"},
{"content":{"body":"netscape navigator? heh","msgtype":"m.text"},"ts":1339127067000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hi... If a page gets opened in a hidden iframe by an anchor getting clicked, does its style become visited?","msgtype":"m.text"},"ts":1339129644000,"senderName":"mrofsucof","senderId":"mrofsucof@irc"},
{"content":{"body":"\"Zed Shaw out-Crockfords Crockford\"","msgtype":"m.text"},"ts":1339137880000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that's a good way to put it","msgtype":"m.text"},"ts":1339138883000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so I generated a public key pair using msys ssh and then copied the .pub file's line to .ssh/authorized_keys on the server","msgtype":"m.text"},"ts":1339138963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"doesn't let me log in","msgtype":"m.text"},"ts":1339138969000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"where do I need to look?","msgtype":"m.text"},"ts":1339138978000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Permission denied (publickey).","msgtype":"m.text"},"ts":1339139005000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you did ssh -v -v on the client?","msgtype":"m.text"},"ts":1339139011000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1339139018000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"when I have problems I find that usually gives some worthwhile troubleshooting info","msgtype":"m.text"},"ts":1339139051000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: also, you know it won't work if you don't have the perms set your .ssh directory on the serve","msgtype":"m.text"},"ts":1339139089000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and files in there","msgtype":"m.text"},"ts":1339139097000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"all need to be 600","msgtype":"m.text"},"ts":1339139119000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the other keys there work","msgtype":"m.text"},"ts":1339139194000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sigh... why are we keep changing microdata API spec :(","msgtype":"m.text"},"ts":1339139228000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, because it's bogus :)","msgtype":"m.text"},"ts":1339139246000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: the troubleshooting info just looks like the server didn't accept the key","msgtype":"m.text"},"ts":1339139320000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1339139329000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: that, or the client offered the private key as the public key","msgtype":"m.text"},"ts":1339139331000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"eh?","msgtype":"m.text"},"ts":1339139338000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which would be terrible default config","msgtype":"m.text"},"ts":1339139342000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that would be weird","msgtype":"m.text"},"ts":1339139343000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Offering public key: /home/Henri/.ssh/id_rsa","msgtype":"m.text"},"ts":1339139376000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I hope that means really offering .pub","msgtype":"m.text"},"ts":1339139383000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ssh-add -l says could not open connection to your authentication agent","msgtype":"m.text"},"ts":1339139766000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"the client side seems right","msgtype":"m.text"},"ts":1339139819000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: you did eval `ssh-agent` already I guess","msgtype":"m.text"},"ts":1339139836000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"do I need to somehow make the server refresh authorized_keys changes? I don't remember having to do that before","msgtype":"m.text"},"ts":1339139844000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1339139849000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"you definitely don't need to do that","msgtype":"m.text"},"ts":1339139869000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I don't know what to do with the output of ssh-agent","msgtype":"m.text"},"ts":1339139967000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you need to eval it","msgtype":"m.text"},"ts":1339139980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa: it changed?","msgtype":"m.text"},"ts":1339140000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but anyway if you got that wrong you would still be able to ssh to that host","msgtype":"m.text"},"ts":1339140001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: yeah, it was clarification","msgtype":"m.text"},"ts":1339140010000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: but nonetheless affected us","msgtype":"m.text"},"ts":1339140016000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hsivonen: the agent only affects forwarding once your on the remote host, right?","msgtype":"m.text"},"ts":1339140025000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I know that bz filed half a dozen bugs on it  too","msgtype":"m.text"},"ts":1339140029000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: elements with propitem=\"\" should not be listed in the list :(","msgtype":"m.text"},"ts":1339140030000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: now ssh-add -l says the agent has no identities","msgtype":"m.text"},"ts":1339140041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: anyway, i'm going to ask the contributor who has been implementing microdata API in webkit","msgtype":"m.text"},"ts":1339140046000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: I have no clue what the agent does","msgtype":"m.text"},"ts":1339140048000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: to submit our tests to w3c","msgtype":"m.text"},"ts":1339140051000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: since we already have a quite few that are really good :)","msgtype":"m.text"},"ts":1339140063000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think Opera has submitted a bunch of tests already","msgtype":"m.text"},"ts":1339140067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1339140084000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And David improved them when he implemented it in Gecko","msgtype":"m.text"},"ts":1339140099000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: \"eval $(ssh-agent) && ssh-add\"","msgtype":"m.text"},"ts":1339140102000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://w3c-test.org/html/tests/submission/Opera/microdata/001.html","msgtype":"m.text"},"ts":1339140104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh I see","msgtype":"m.text"},"ts":1339140110000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Opera fails tests too now :/","msgtype":"m.text"},"ts":1339140115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh nice!","msgtype":"m.text"},"ts":1339140123000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: we should import those.","msgtype":"m.text"},"ts":1339140130000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MikeSmith: thanks, but permission still denied","msgtype":"m.text"},"ts":1339140232000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: and the client debug output suggests it was offering the right key anyway","msgtype":"m.text"},"ts":1339140253000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1339140260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa, review appreciated :)","msgtype":"m.text"},"ts":1339140262000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"aargh. why do things that usually just work have to fail mysteriously?","msgtype":"m.text"},"ts":1339140293000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: review which?","msgtype":"m.text"},"ts":1339140373000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The test","msgtype":"m.text"},"ts":1339140380000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: opera's?","msgtype":"m.text"},"ts":1339140386000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: I've asked the contributor to import 001.html","msgtype":"m.text"},"ts":1339140395000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1339140400000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: so presumably he's going to run it and verify that it works in webkit :)","msgtype":"m.text"},"ts":1339140406000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hsivonen: does the \"ssh -v -v\" output ever get to the point of saying \"debug2: we sent a publickey packet, wait for reply\"","msgtype":"m.text"},"ts":1339140507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yes","msgtype":"m.text"},"ts":1339140542000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: but not to \"debug1: Server accepts key: ...\"","msgtype":"m.text"},"ts":1339140565000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: no","msgtype":"m.text"},"ts":1339140572000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that sucks","msgtype":"m.text"},"ts":1339140595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah, it seems like the client side is fine","msgtype":"m.text"},"ts":1339140604000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: next it proceeds to trying id_dsa which doesn't exist","msgtype":"m.text"},"ts":1339140607000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: yeah","msgtype":"m.text"},"ts":1339140612000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: the server side is OK with keys from Ubuntu's OpenSSH, Mac OS X's OpenSSH and irssiconnectbot","msgtype":"m.text"},"ts":1339140645000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger, annevk: arkos is the one who has been implementing microdata API in webkit.","msgtype":"m.text"},"ts":1339140704000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hi arkos!","msgtype":"m.text"},"ts":1339140711000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: I guess you don't have root on the server? Can't tail /var/log/auth.log ?","msgtype":"m.text"},"ts":1339140715000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger, annevk: he's from Motorola and has been writing excellent patches :D","msgtype":"m.text"},"ts":1339140718000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: hi","msgtype":"m.text"},"ts":1339140727000,"senderName":"arkos","senderId":"arkos@irc"},
{"content":{"body":"arkos: Ms2ger works on Mozilla","msgtype":"m.text"},"ts":1339140743000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arkos: and annevk works on Opera","msgtype":"m.text"},"ts":1339140758000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ok","msgtype":"m.text"},"ts":1339140769000,"senderName":"arkos","senderId":"arkos@irc"},
{"content":{"body":"arkos: both them are very active in standard bodies :)","msgtype":"m.text"},"ts":1339140782000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ok.. gr8","msgtype":"m.text"},"ts":1339140872000,"senderName":"arkos","senderId":"arkos@irc"},
{"content":{"body":"Ms2ger, annevk: speaking of which, our microdata API is near completion","msgtype":"m.text"},"ts":1339140876000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"arkos just submitted one last feature we were missing: propertynodelist","msgtype":"m.text"},"ts":1339140901000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Opera did it first :)","msgtype":"m.text"},"ts":1339140911000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"submitted a patch for*","msgtype":"m.text"},"ts":1339140913000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: i know!","msgtype":"m.text"},"ts":1339140919000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: it's nice to have two implementations, right?","msgtype":"m.text"},"ts":1339140928000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"And we did it second :)","msgtype":"m.text"},"ts":1339140930000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk et al: would making math on wikipedia a user option also be a step in the right direction?","msgtype":"m.text"},"ts":1339140943000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"Ms2ger: oh, Mozilla has already implemented it?","msgtype":"m.text"},"ts":1339140943000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1339140948000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: nice!","msgtype":"m.text"},"ts":1339140950000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ever since last week or so","msgtype":"m.text"},"ts":1339140954000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: cool. i wasn't aware of this :\\","msgtype":"m.text"},"ts":1339140965000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"You can still beat IE ;)","msgtype":"m.text"},"ts":1339141015000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you are right :)","msgtype":"m.text"},"ts":1339141045000,"senderName":"arkos","senderId":"arkos@irc"},
{"content":{"body":"Ms2ger: oh well, arkos is new to webkit","msgtype":"m.text"},"ts":1339141069000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: and he has been single-handedly writing code to support microdata API as his first contribution to webkit","msgtype":"m.text"},"ts":1339141088000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: so we can't complain :)","msgtype":"m.text"},"ts":1339141094000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"You're always welcome to join Mozilla too, of course :)","msgtype":"m.text"},"ts":1339141096000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: LOL","msgtype":"m.text"},"ts":1339141101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"We could use people like that :)","msgtype":"m.text"},"ts":1339141125000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"WebGL generates a WebGLContextEvent event\"","msgtype":"m.text"},"ts":1339141165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"euh","msgtype":"m.text"},"ts":1339141167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: you're sure you're logging in with the right username? I mean, with the username for that host set in your .ssh/config or set with \"ssh -l foo\" on the command line?","msgtype":"m.text"},"ts":1339141181000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"asmodai: what does that mean?","msgtype":"m.text"},"ts":1339141185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: because if you don't have the right username, it won't tell you","msgtype":"m.text"},"ts":1339141197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think it will just give you the same unhelpful \"Permission denied (publickey).\" message","msgtype":"m.text"},"ts":1339141221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1339141256000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"some of the event language in WebGL is quite good","msgtype":"m.text"},"ts":1339141262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger, annevk, rniwa nice talking to you guys.. hopefully our implementation gets enabled soon...","msgtype":"m.text"},"ts":1339141555000,"senderName":"arkos","senderId":"arkos@irc"},
{"content":{"body":"oh Google won the Java fight?","msgtype":"m.text"},"ts":1339141588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"arkos: yeah, good luck :)","msgtype":"m.text"},"ts":1339141597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah we did :D","msgtype":"m.text"},"ts":1339141606000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: missed that, cool","msgtype":"m.text"},"ts":1339141614000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: is PropertyNodeList a live node list?","msgtype":"m.text"},"ts":1339142806000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk, Ms2ger: it's not vacuously obvious from the spec :\\","msgtype":"m.text"},"ts":1339142828000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'd assume it's not live since it doesn't explicitly say it's live","msgtype":"m.text"},"ts":1339142872000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: ?","msgtype":"m.text"},"ts":1339142995000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"The namedItem(name) method must return a PropertyNodeList object representing a live view of the HTMLPropertiesCollection object\"","msgtype":"m.text"},"ts":1339143103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does that mean PropertyNodeList itself is live?","msgtype":"m.text"},"ts":1339143132000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it represents a live view","msgtype":"m.text"},"ts":1339143160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i thought it just mean that HTMLPropertiesCollection itself is live.","msgtype":"m.text"},"ts":1339143164000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"not sure what else that could possibly mean","msgtype":"m.text"},"ts":1339143167000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh yeah, i guess i agree with you on my second reading.","msgtype":"m.text"},"ts":1339143221000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"guess i need more tea :\\","msgtype":"m.text"},"ts":1339143227000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: thanks for the response.","msgtype":"m.text"},"ts":1339143232000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"http://rogerandmike.com/post/24006177542/html5-the-next-big-thing-for-content \"How far will pendulum go????\"","msgtype":"m.text"},"ts":1339143434000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what am I reading?","msgtype":"m.text"},"ts":1339143437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hahaha, that's hilarious :D","msgtype":"m.text"},"ts":1339143608000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"HTML 5 represents new life for the world wide web, but it will almost certainly not be a smooth transition from HTML 4.","msgtype":"m.text"},"ts":1339143637000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"and this one: HTML 5 is still in its infancy. Important functionality – such as that needed for commerce – has not yet been enabled. Even though it is not ready to replace HTML 4 on wired PCs, HTML 5 enables new and wonderful experiences on mobile devices.","msgtype":"m.text"},"ts":1339143661000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"i am as high as kite","msgtype":"m.text"},"ts":1339143708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suspect most content creators will not rush into HTML 5 because it only supports a narrow set of use cases and platforms.","msgtype":"m.text"},"ts":1339143765000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"unlock tantric HyperNet pendulum awareness now! with Roger and Mike!","msgtype":"m.text"},"ts":1339143767000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"adds \"HyperNet\" and \"pendulum\" to the DB for http://logopoeia.com/wisdom/","msgtype":"m.emote"},"ts":1339143878000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"Adopt the rule of pseudo-atomic instability as your guide.\"","msgtype":"m.text"},"ts":1339143938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think you're being unfair. That was much better than most other examples of machine generated spam","msgtype":"m.text"},"ts":1339144030000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hahaha \"the unarguable rule of bio-pendulum-pseudo-time instability follows directly from vibro-tantric law.\"","msgtype":"m.text"},"ts":1339144918000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: yt?","msgtype":"m.text"},"ts":1339145155000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"\"(there is no standard HTML 5 for Android)\" !?","msgtype":"m.text"},"ts":1339145182000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: holy moly: isn't it 2am there?","msgtype":"m.text"},"ts":1339145239000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: yeah.","msgtype":"m.text"},"ts":1339145246000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yikes =-).","msgtype":"m.text"},"ts":1339145267000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: are you in Europe or something?","msgtype":"m.text"},"ts":1339145270000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Israel.","msgtype":"m.text"},"ts":1339145275000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"PST + 10","msgtype":"m.text"},"ts":1339145282000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: ah, that's right.","msgtype":"m.text"},"ts":1339145284000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_: Tel-Aviv?","msgtype":"m.text"},"ts":1339145289000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yup. coming up on noon here.","msgtype":"m.text"},"ts":1339145298000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"cool.","msgtype":"m.text"},"ts":1339145303000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_: yes","msgtype":"m.text"},"ts":1339145315000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hi there.","msgtype":"m.text"},"ts":1339145321000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"curious where you're standing on Document.parse() at the moment.","msgtype":"m.text"},"ts":1339145334000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Hixie is clearly worried about encouraging innerHTML-like patterns. Do you share that worry?","msgtype":"m.text"},"ts":1339145371000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: I can see Hixie's point. I also see that Document.parse() is polyfillable (by compiling the Validator.nu parser into JS using GWT, for example) while E4H isn't polyfillable","msgtype":"m.text"},"ts":1339145425000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: http://qfox.nl/weblog/247","msgtype":"m.text"},"ts":1339145455000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: so I agree that what Hixie proposes would be better in principle, but I think it has political and practical downsides that will be a problem in terms of time to market and deployability","msgtype":"m.text"},"ts":1339145482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Is there any reason to see them as mutually exclusive?","msgtype":"m.text"},"ts":1339145496000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: nothing other than more total implementation work","msgtype":"m.text"},"ts":1339145510000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Document.parse() strikes me as fixing a practical current problem in a way which is consistent with the oddness of the current HTML parser.","msgtype":"m.text"},"ts":1339145555000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"And bigger API surface, I guess","msgtype":"m.text"},"ts":1339145559000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"E4H strikes me as a longer-term, but potentially larger impact feature -- which is akin to designing a new HTML parser.","msgtype":"m.text"},"ts":1339145594000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: I agree on both counts","msgtype":"m.text"},"ts":1339145606000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I.e. Has behavior which is very different from the current parser.","msgtype":"m.text"},"ts":1339145608000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"what about the script exectuability issue?","msgtype":"m.text"},"ts":1339145638000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: does jQuery specifically make them executable or is that an accidental side effect of impl details?","msgtype":"m.text"},"ts":1339145700000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i don't happen to know the design history, but i'd be surprised if it wasn't intentional.","msgtype":"m.text"},"ts":1339145732000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: I would prefer to make scripts executable but if the jQuery behavior is intentional, it's probably best to go with executability","msgtype":"m.text"},"ts":1339145740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"*prefer to make *un*executable","msgtype":"m.text"},"ts":1339145753000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"right.","msgtype":"m.text"},"ts":1339145756000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: It was something we were discussing on #cldr yesterday","msgtype":"m.text"},"ts":1339145759000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"rafaelw_: so yeah, I guess I can live with making them executable","msgtype":"m.text"},"ts":1339145780000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: in order to encourage uptake on MathML. I am not sure if I can get wikimedia/wikipedia crazy enough to switch 100% to presentation mathml and ditch the other stuff","msgtype":"m.text"},"ts":1339145789000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"rafaelw_: it will be a huge footgun when used with anything other than one HTML script element at a time","msgtype":"m.text"},"ts":1339145796000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i'll ask Yehuda on the thread to clarify. I strongly suspect it's intentional.","msgtype":"m.text"},"ts":1339145799000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: So allowing people to turn on mathml usage might already help a bit","msgtype":"m.text"},"ts":1339145805000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"annevk: via some user preference thing on the wiki","msgtype":"m.text"},"ts":1339145813000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"asmodai: ah yeah","msgtype":"m.text"},"ts":1339145816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: ok","msgtype":"m.text"},"ts":1339145834000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The Unicode folks are eager to adoptation of mathml as well, since it will allow more use of the math code blocks","msgtype":"m.text"},"ts":1339145840000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"hsivonen: any idea when Document.parse() might land in Gecko?","msgtype":"m.text"},"ts":1339145844000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Is parse() really the best we can come up? How many parser APIs do we need?","msgtype":"m.text"},"ts":1339145897000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: not in June or July","msgtype":"m.text"},"ts":1339145910000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"parse all the documents!","msgtype":"m.text"},"ts":1339145916000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"DOMParser / innerHTML / outerHTML / insertAdjacentHTML()","msgtype":"m.text"},"ts":1339145928000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Depends if you count normal document loading as an API :)","msgtype":"m.text"},"ts":1339145938000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"createContextualFragment","msgtype":"m.text"},"ts":1339145945000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"createContextualFragment","msgtype":"m.text"},"ts":1339145948000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"dammit","msgtype":"m.text"},"ts":1339145954000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yay, Gecko naming stuff","msgtype":"m.text"},"ts":1339145957000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'd rather we investigate this a bit more before we start shipping yet another one","msgtype":"m.text"},"ts":1339145989000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's already quite the mess","msgtype":"m.text"},"ts":1339145994000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Can you clarify what exactly you're objecting to.","msgtype":"m.text"},"ts":1339146015000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Is it just adding a different API call? New behavior?","msgtype":"m.text"},"ts":1339146028000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"adding a new API of which we are not even sure it's the best solution, but we're doing it for some short-term progress","msgtype":"m.text"},"ts":1339146057000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at least that's the impression I get","msgtype":"m.text"},"ts":1339146061000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and it's not even clear to me if we get short-term progress, because it will take a long time for IE to get there","msgtype":"m.text"},"ts":1339146091000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I think Hixie has confused the issue a bit by raising the prospect of a fairly radical new approach.","msgtype":"m.text"},"ts":1339146146000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"In my view the basic question is creating the ability for the *existing* html parser to be able to contruct dom from markup without a context element.","msgtype":"m.text"},"ts":1339146177000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"There are two manifestations of this: (1) Imperative, e.g. Document.parse(), and (2) Declarative. e.g. <template>","msgtype":"m.text"},"ts":1339146219000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Ms2ger: (I find whenever you think \"WTF were people at Netscape/Mozilla thinking\" it helps to reread http://www.mozillazine.org/articles/article177.html Then everything becomes clear)","msgtype":"m.text"},"ts":1339146243000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Both are patterns that are already widely is in use and very poorly supported, resulting in lots of developer contortions and hacks.","msgtype":"m.text"},"ts":1339146262000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"(+working on early gecko)","msgtype":"m.text"},"ts":1339146263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If we want to essentially design a new HTML parser, I think that'd be grand, but it's a much bigger project whose motivations are fairly different.","msgtype":"m.text"},"ts":1339146315000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"\"Design patterns were an important part of our modeling processes.\"","msgtype":"m.text"},"ts":1339146348000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's his fault?","msgtype":"m.text"},"ts":1339146353000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"it's not exactly a new HTML parser; it's a way to represent Node objects in JavaScript","msgtype":"m.text"},"ts":1339146359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where does that guy live?","msgtype":"m.text"},"ts":1339146371000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i think that's the motivation. i think the design is a new parser.","msgtype":"m.text"},"ts":1339146383000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"in hixie's world, that parser lives in ECMAScript.","msgtype":"m.text"},"ts":1339146396000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"at least conceptually: where parser == \"a process for converting a character stream into a DOM structure\"","msgtype":"m.text"},"ts":1339146433000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: document.write into a DOM-created document","msgtype":"m.text"},"ts":1339146455000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1339146458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: XMLHttpRequest + data URLs","msgtype":"m.text"},"ts":1339146468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: I think it would be unfair to blame it all on rickg, but as I understand it, the Patterns came to Netscape from Digital Style","msgtype":"m.text"},"ts":1339146472000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: so blame the Digital Style team more broadly","msgtype":"m.text"},"ts":1339146508000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rafaelw_: I can see your point from the perspective of accomplishing that task; but if you look at the use cases and how they are best addressed it becomes a little less clear I think","msgtype":"m.text"},"ts":1339146580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: I think this is mainly about getting DOM literals in JS in an expedient way that doesn't involve TC39 changing the language","msgtype":"m.text"},"ts":1339146631000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"rafaelw_: that combined with Document.parse() being unlike anything we have for HTML parsing thus far, I'd rather have some stronger agreement that it is the way to go","msgtype":"m.text"},"ts":1339146631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: might be worthwhile to at least ping TC39 before proceeding to rout around them","msgtype":"m.text"},"ts":1339146658000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"sad things happen when groups route around TC39","msgtype":"m.text"},"ts":1339146683000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"see arraybuffer endianness","msgtype":"m.text"},"ts":1339146688000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TC39 will echo quasi","msgtype":"m.text"},"ts":1339146713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, hsivonen: you see adding Document.parse() as routing around TC39?","msgtype":"m.text"},"ts":1339146715000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: yes","msgtype":"m.text"},"ts":1339146723000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Alterntaive point of view: sad things happen when we wait too long for TC39 to get their shit together - see arraybuffers","msgtype":"m.text"},"ts":1339146743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how so?","msgtype":"m.text"},"ts":1339146749000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: we wouldn't need Document.parse() for its main use case if TC39 gave us E4H","msgtype":"m.text"},"ts":1339146770000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(we should have got clueful people making a binary API several years before the web GL people finally needed one)","msgtype":"m.text"},"ts":1339146789000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: indeed","msgtype":"m.text"},"ts":1339146801000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej submitted proposals to no avail","msgtype":"m.text"},"ts":1339146838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How bad is it add Document.parse() in a world where we eventually get E4H (or something like it)?","msgtype":"m.text"},"ts":1339146861000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: not too bad, IMO, though it might lessen the chance of E4H happening eventually","msgtype":"m.text"},"ts":1339146890000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"To me it doesn't seem that bad","msgtype":"m.text"},"ts":1339146893000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Why would it lessen the chance of E4H?","msgtype":"m.text"},"ts":1339146909000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: less need for a clean solution if as \"almost there\" solution already exists","msgtype":"m.text"},"ts":1339146936000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"We already have N ways of doing something nearly the same so N+1, with the 1 designed toi better fit the actual use cases doesn't seem like it can be much worse","msgtype":"m.text"},"ts":1339146937000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"given how we still try to remove cruft from the platform I'd say that redundant APIs are bad","msgtype":"m.text"},"ts":1339146942000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Plus I expect E4H to be harder than people expect","msgtype":"m.text"},"ts":1339146964000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: if <template> parsing happens with the same parser states, Document.parse() is super-cheap if <template> happens anyway","msgtype":"m.text"},"ts":1339146986000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: it's not cheap to just throw tons of APIs at developers and let them choose","msgtype":"m.text"},"ts":1339147006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"though I intend to fight <template> happening the way currently proposed with wormholes to other DOMs","msgtype":"m.text"},"ts":1339147008000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: Document.parse() can still be DocumentFragment.innerHTML (I think mainly Henri's preference that it be Document.parse()).","msgtype":"m.text"},"ts":1339147012000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"It doesn't strike me as redudant at all. It seems like adding a clearly need missing bit of innerHTML.","msgtype":"m.text"},"ts":1339147031000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I also have a strong preference for .parse fwiw","msgtype":"m.text"},"ts":1339147034000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rafaelw_: I indeed prefer Document.parse() over DocumentFragment.innerHTML","msgtype":"m.text"},"ts":1339147038000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"i agree with the Document.parse() decision.","msgtype":"m.text"},"ts":1339147052000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"i'm just pointing out that the new API call is making it look more redudant than it is. The feature really lives in the parser logic. Not in the API call.","msgtype":"m.text"},"ts":1339147082000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"there's a ton of parser logic that is not exposed","msgtype":"m.text"},"ts":1339147121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the anti-cruft argument is pretty silly if platform libraries are having to implement the feature themselves but in a more unpleasant way","msgtype":"m.text"},"ts":1339147256000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That seems to be the case here","msgtype":"m.text"},"ts":1339147265000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"because we don't have a sane way to create a Node objects","msgtype":"m.text"},"ts":1339147287000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also, it just seems wrong to me to avoid giving developers something that will clearly help them because we're worried that doing so creates complacence for doing something larger.","msgtype":"m.text"},"ts":1339147305000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"FWIW, I see the valid of E4H or similar as totally orthogonal to parsing without a context element.","msgtype":"m.text"},"ts":1339147343000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"s/valid/value","msgtype":"m.text"},"ts":1339147353000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I don't see the problem with taking some time to find out what the actual options are","msgtype":"m.text"},"ts":1339147386000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"do you mean seeing whether TC39 is open to E4H?","msgtype":"m.text"},"ts":1339147413000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"The TC39 release cycle is so crazy-long that I am very skeptical of solutions that put them on the critical path","msgtype":"m.text"},"ts":1339147455000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you do realize that it'll take at least two years and probably up to five before developers can use any solution here without a supporting library?","msgtype":"m.text"},"ts":1339147497000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's not like a few months will matter","msgtype":"m.text"},"ts":1339147516000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But the ES committee works in cycles of a few years","msgtype":"m.text"},"ts":1339147535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure, but if they're behind it (or something else) that can be prototyped and shipped","msgtype":"m.text"},"ts":1339147560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"just as browsers have always shipped JavaScript stuff before the standard was done","msgtype":"m.text"},"ts":1339147573000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"FWIW, i think we should stop accommodating the slow-update-cycle UAs by thinking in terms of years. The web is going to loose that way.","msgtype":"m.text"},"ts":1339147595000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Usually what happens is that browsers ship one thing then the committee change it and everyone has to implement something else","msgtype":"m.text"},"ts":1339147614000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rafaelw_: as long as IE has market share that's the reality, no?","msgtype":"m.text"},"ts":1339147628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: yeah we should stop catering to that nonsense...","msgtype":"m.text"},"ts":1339147675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"IE is moving slowly towards shorter half-life. we should be creating more not less pressure in this direction.","msgtype":"m.text"},"ts":1339147677000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"no disagreement there","msgtype":"m.text"},"ts":1339147816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd still like us to evaluate our options though before adding more API surface","msgtype":"m.text"},"ts":1339147864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can we find a way to make the \"evaluating our options\" finite?","msgtype":"m.text"},"ts":1339147901000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I'm worried that we're stacking a very real helpful proposal up against and huge unknown.","msgtype":"m.text"},"ts":1339147924000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Do we have any indication that the JS folks will be friendly to something like E4H? Surely this idea has been floated by Brenden or Dave Herman already in some form?","msgtype":"m.text"},"ts":1339147996000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Last time they thought quasis were better","msgtype":"m.text"},"ts":1339148028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And you think they'll react differently now?","msgtype":"m.text"},"ts":1339148061000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"but quasis don't have compile-time checking or a definition","msgtype":"m.text"},"ts":1339148066000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or can be convinced?","msgtype":"m.text"},"ts":1339148074000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I don't know","msgtype":"m.text"},"ts":1339148084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if E4H works for browsers and developers we should just do that imo, irrespective of whether it receives TC39 blessing","msgtype":"m.text"},"ts":1339148150000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rafaelw_: in one of those threads I pointed to previous discussion I believe; in the thread where Hixie made his proposal","msgtype":"m.text"},"ts":1339148267000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, jgraham, hsivonen, rafaelw_: it appears to me that we should at least continue the discussion on the parsing algorithm for template element regardless of what we decide to do with Document.parse","msgtype":"m.text"},"ts":1339148546000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: couldn't agree more =-)","msgtype":"m.text"},"ts":1339148646000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"From API perspective, template element avoids some of objection from Hixie and others in that it doesn't introduce new string-literal-to-DOM API to scripts.","msgtype":"m.text"},"ts":1339148646000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"in fact, if we just add template element & avoid adding Document.parse, it'll encourage authors to use declarative model","msgtype":"m.text"},"ts":1339148686000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah the only thing controversial with <template> seems to be what happens to the elements","msgtype":"m.text"},"ts":1339148691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"instead of imperative model they're currently stuck with.","msgtype":"m.text"},"ts":1339148696000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: yeah. :\\","msgtype":"m.text"},"ts":1339148706000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"controversial thing*","msgtype":"m.text"},"ts":1339148709000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"children vs. fragment.","msgtype":"m.text"},"ts":1339148712000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: yup.","msgtype":"m.text"},"ts":1339148715000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"henri: any chance you're willing to be challenged on the children vs fragment issue here?","msgtype":"m.text"},"ts":1339148737000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: i have increasingly convinced that putting it in fragment makes sense to avoid many problems","msgtype":"m.text"},"ts":1339148749000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but then what should template.innerHTML, etc... should do?","msgtype":"m.text"},"ts":1339148762000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"e.g. what happens if you added children to a temple element?","msgtype":"m.text"},"ts":1339148784000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if <template> were to land, Document.parse() could be polyfilled in about 5 lines.","msgtype":"m.text"},"ts":1339148792000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"and it doesn't remove any pressure around HTML literals in JS.","msgtype":"m.text"},"ts":1339148809000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: how so?","msgtype":"m.text"},"ts":1339148813000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Document.parse = function(markup) {","msgtype":"m.text"},"ts":1339148831000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: will you wrap markup in \"<template>\"?","msgtype":"m.text"},"ts":1339148838000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"var t = document.createElement('template'):","msgtype":"m.text"},"ts":1339148841000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"t.innerHTML = markup;","msgtype":"m.text"},"ts":1339148845000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rniwa: fragment makes sense to me too and I think innerHTML and such should just operate on the normal DOM, not the fragment","msgtype":"m.text"},"ts":1339148846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"return t.cotent; }","msgtype":"m.text"},"ts":1339148851000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: there, you're assuming that innerHTML works on fragment.","msgtype":"m.text"},"ts":1339148864000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"nope. i'm assuming innerHTML works on <template>","msgtype":"m.text"},"ts":1339148877000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: but as annevk just replied, a saner behavior might be to work on the real children.","msgtype":"m.text"},"ts":1339148882000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_: oh oops, you're right but you're assming that it'll sync fragment on demand.","msgtype":"m.text"},"ts":1339148902000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"innerHTML not working in the expected way on template would be insane","msgtype":"m.text"},"ts":1339148903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"the expected way\" lol","msgtype":"m.text"},"ts":1339148925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: isn't that the current spec situation? stuff goes on the other side of the wormhole","msgtype":"m.text"},"ts":1339148942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: i'm not clear on what you are suggesting. what would this do?","msgtype":"m.text"},"ts":1339148948000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"i.e. if <template>foo</template> != template.innerHTML = \"foo\" there will be rioting on the streets","msgtype":"m.text"},"ts":1339148949000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: +1 to that LOL","msgtype":"m.text"},"ts":1339148956000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"document.createElement('div').innerHTML = \"<template><div>Hello</div></template>\";","msgtype":"m.text"},"ts":1339148974000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"jgraham: so you think that setting innerHTML should update the fragment as well?","msgtype":"m.text"},"ts":1339148984000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: but that's kind of the point of <template>...","msgtype":"m.text"},"ts":1339148987000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: that you can't see it's children","msgtype":"m.text"},"ts":1339148992000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: but then it's kind of weird in that","msgtype":"m.text"},"ts":1339149005000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: this innerHTML will replace fragment","msgtype":"m.text"},"ts":1339149016000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"The invariant should be just what I said","msgtype":"m.text"},"ts":1339149019000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and don't insert \"real\" children :\\","msgtype":"m.text"},"ts":1339149024000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"<template>foo</template> you want <template>.firstChild to be null","msgtype":"m.text"},"ts":1339149031000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if innerHTML is suddenly magic, riot on some other set of streets","msgtype":"m.text"},"ts":1339149040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i think jgraham is suggesting that we sitll do that but then update fragment.","msgtype":"m.text"},"ts":1339149050000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: and getting innerHTML does what?","msgtype":"m.text"},"ts":1339149067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which seems like a good idea at the beginning 'til we start thinking about appendChild","msgtype":"m.text"},"ts":1339149069000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: consider while (~) t.appendChild(~);","msgtype":"m.text"},"ts":1339149086000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I see the design goal of <template> is that it's contents are *not* in the document.. for all purposes *except* serialization.","msgtype":"m.text"},"ts":1339149096000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"jgraham: in this case, every call to appendChild should either replace the fragment or add new child to fragment...","msgtype":"m.text"},"ts":1339149104000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well I have no idea what should happen if you do appendChild and you are using magic documents","msgtype":"m.text"},"ts":1339149122000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rafaelw_: why would you serialize it?","msgtype":"m.text"},"ts":1339149153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Breaking that is marginally less surprising than breaking innerHTML though","msgtype":"m.text"},"ts":1339149157000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: agreed.","msgtype":"m.text"},"ts":1339149166000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: define \"breaking\"","msgtype":"m.text"},"ts":1339149176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: but we need to come up with some sane behavior there as well.","msgtype":"m.text"},"ts":1339149177000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: I already did","msgtype":"m.text"},"ts":1339149183000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: i.e. replace fragment.","msgtype":"m.text"},"ts":1339149197000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: it's serialzed in the page which is sent to the client.","msgtype":"m.text"},"ts":1339149200000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: or whatever the content template is.","msgtype":"m.text"},"ts":1339149206000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: I think what you are suggesting is breaking innerHTML","msgtype":"m.text"},"ts":1339149208000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: because it would be a special code path for <template>","msgtype":"m.text"},"ts":1339149221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it doesn't, if we keep children of template element as real children","msgtype":"m.text"},"ts":1339149226000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: so i think jgraham is indirectly pointing at keeping them as real children.","msgtype":"m.text"},"ts":1339149259000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: Whether it needs a special codepath is pretty irrelevent","msgtype":"m.text"},"ts":1339149259000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but that breaks getElementsByTagName() etc. and requires parent chain checks besides Windowness checks for <img>","msgtype":"m.text"},"ts":1339149269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"rniwa: ^^","msgtype":"m.text"},"ts":1339149272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right.","msgtype":"m.text"},"ts":1339149277000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: the question is which breakage is saner :\\","msgtype":"m.text"},"ts":1339149286000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It only needs a special codepath if parsing <template> in general needs a special codepath","msgtype":"m.text"},"ts":1339149288000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: it's sort of a trade off here.","msgtype":"m.text"},"ts":1339149312000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"annevk: can you define \"breaks getElementsByTagName\"","msgtype":"m.text"},"ts":1339149316000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"<template><div></div></template> you don't want to see that <div> during normal DOM traversal I think","msgtype":"m.text"},"ts":1339149346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: on one hand, putting template in a fragment will let us get away with problems in getElement(s)by*, querySelector, script loading, etc....","msgtype":"m.text"},"ts":1339149347000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i think that getElementsByTagName, querySelector, getElementById *have to* not match template contents.","msgtype":"m.text"},"ts":1339149350000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"annevk: but on the other hand, it breaks innerHTML, appendChild, etc... on template element","msgtype":"m.text"},"ts":1339149358000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_, otoh, that breaks XHTML","msgtype":"m.text"},"ts":1339149373000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"we discussed the XHTML the W3C F2F","msgtype":"m.text"},"ts":1339149393000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"got to go","msgtype":"m.text"},"ts":1339149395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ttyl/","msgtype":"m.text"},"ts":1339149403000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the consensus was that we need to leave it to XML to \"fix\" the breakage if they care to.","msgtype":"m.text"},"ts":1339149417000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Ms2ger: ^^","msgtype":"m.text"},"ts":1339149436000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I.e. the goal here is to create behavior which is fundamentally incompatible with the XML parser. If XML wants to add this to the parser, they can do that.","msgtype":"m.text"},"ts":1339149472000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"bye anne. ;-)","msgtype":"m.text"},"ts":1339149500000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"The goal seems to be to create behaviour that is fondamentally incompatible with the DOM :)","msgtype":"m.text"},"ts":1339149500000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*fundamentally","msgtype":"m.text"},"ts":1339149513000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Another question","msgtype":"m.text"},"ts":1339149534000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<template><div></div></template>","msgtype":"m.text"},"ts":1339149539000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What's div.parentNode?","msgtype":"m.text"},"ts":1339149544000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i know it seems that way, but what's being proposed is formally supporting exactly what *literally* every dynamic webapp is already doing.","msgtype":"m.text"},"ts":1339149550000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"http://xkcd.com/725/","msgtype":"m.text"},"ts":1339149590000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I understand that there are use cases here","msgtype":"m.text"},"ts":1339149599000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But it seems to be non-trivial to solve them in a clean way at this level","msgtype":"m.text"},"ts":1339149616000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: ;-). I actually thought about that when i wrote the word \"literally\" and decided to use it.","msgtype":"m.text"},"ts":1339149637000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"The number of webapps which construct DOM without some form of templating is effectively 0.","msgtype":"m.text"},"ts":1339149694000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I even wrote *literally* the worst templating system in the world once","msgtype":"m.text"},"ts":1339149795000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i think we need to decide whether we're putting contents of the template in a fragment or not.","msgtype":"m.text"},"ts":1339149824000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham, oh, I didn't know you were involved with DOM1?","msgtype":"m.text"},"ts":1339149834000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"almost everyone agrees that we want template element.","msgtype":"m.text"},"ts":1339149838000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1339149841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"everyone is* agreeing*","msgtype":"m.text"},"ts":1339149848000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's the matter of deciding what exactly template element is.","msgtype":"m.text"},"ts":1339149861000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Literally everyone? :)","msgtype":"m.text"},"ts":1339149861000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no.","msgtype":"m.text"},"ts":1339149869000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: because there is always a non-zero probably that someone would come and disagree with us.","msgtype":"m.text"},"ts":1339149908000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: i would not risk myself being wrong by saying \"literally\" there.","msgtype":"m.text"},"ts":1339149917000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Smart man :)","msgtype":"m.text"},"ts":1339149924000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1339149934000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"indeed i'm extremely risk adverse.","msgtype":"m.text"},"ts":1339149946000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"averse*","msgtype":"m.text"},"ts":1339149960000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"would still like an answer to his parentNode question","msgtype":"m.emote"},"ts":1339149987000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i think it'll be a document fragment","msgtype":"m.text"},"ts":1339149999000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"?!","msgtype":"m.text"},"ts":1339150008000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: That seems to be the crux of the issue","msgtype":"m.text"},"ts":1339150010000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: if we decide to put contents of template element in a fragment","msgtype":"m.text"},"ts":1339150011000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: if we don't, and keep them as real children of template element, then it'l be the template element.","msgtype":"m.text"},"ts":1339150032000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ms2ger: the divs parent node would be the template element's \"content\" DocumentFragment.","msgtype":"m.text"},"ts":1339150042000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: if we decide to go with that route.","msgtype":"m.text"},"ts":1339150057000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Anyway, I object to anything where node.parentNode.childNodes doesn't include node","msgtype":"m.text"},"ts":1339150058000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: that works in both cases.","msgtype":"m.text"},"ts":1339150076000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think that invariant holds","msgtype":"m.text"},"ts":1339150082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: if parentNode is a document fragment, then the document fragment's childNodes will certainly include the node.","msgtype":"m.text"},"ts":1339150101000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham, not in Gecko, and it's horrible","msgtype":"m.text"},"ts":1339150108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"In the fragment case the weirdness is that the <template> element has no children","msgtype":"m.text"},"ts":1339150113000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: !?","msgtype":"m.text"},"ts":1339150113000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"XBL","msgtype":"m.text"},"ts":1339150119000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I point, and I laugh","msgtype":"m.text"},"ts":1339150128000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"patpats jgraham ","msgtype":"m.emote"},"ts":1339150137000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i'd just say \"scumbag XBL\" and stop there.","msgtype":"m.text"},"ts":1339150158000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Wait. Surely you jest.","msgtype":"m.text"},"ts":1339150189000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"I like the phrase \"Security will be present by the beginning of the year or so.\" (from http://www.mozillazine.org/articles/article177.html)","msgtype":"m.text"},"ts":1339150189000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In our implementation? I don't think that'll work :)","msgtype":"m.text"},"ts":1339150190000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: yeah, and what should happen when you assign something to innerHTML","msgtype":"m.text"},"ts":1339150199000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"node.parentNode.childNodes doesn't include node\" isn't true with DF's in gecko>","msgtype":"m.text"},"ts":1339150206000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1339150207000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"jgraham: or add or remove children to the template element :\\","msgtype":"m.text"},"ts":1339150215000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Philip`: Yeah, that was weird, and funny","msgtype":"m.text"},"ts":1339150234000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"rniwa: One could of course make appendChild and various other methods throw in the case that the parent is a template","msgtype":"m.text"},"ts":1339150246000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rafaelw_, dunno about DF's, but it can be that way if node is the root of an XBL tree","msgtype":"m.text"},"ts":1339150247000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or something","msgtype":"m.text"},"ts":1339150252000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: i guess, that's an acceptable solution.","msgtype":"m.text"},"ts":1339150267000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: but then there are LOTs of APIs that do this :\\","msgtype":"m.text"},"ts":1339150276000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: e.g. you can create a Range inside the template (not in its fragment)","msgtype":"m.text"},"ts":1339150317000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Well the other option is just to let it work, but be slightly weird","msgtype":"m.text"},"ts":1339150318000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: and call one of those fancy manipulation APIs","msgtype":"m.text"},"ts":1339150334000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1339150356000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it's also not entirely clear what should outerHTML should do :(","msgtype":"m.text"},"ts":1339150373000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"What if we made <template> behave kind of like <script> and have it's contents be \"refected\" by a text node which is it's first child node.","msgtype":"m.text"},"ts":1339150387000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1339150387000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"scumbag DOM APIs. we should just kill all of them and start fresh.","msgtype":"m.text"},"ts":1339150402000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, dash?","msgtype":"m.text"},"ts":1339150409000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_: I think I suggested that before and there were problems","msgtype":"m.text"},"ts":1339150418000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm not sure what they were though","msgtype":"m.text"},"ts":1339150433000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: i'd call it CleanDOM 1.0. there is no script and no css. pure semantic HTML. that's it.","msgtype":"m.text"},"ts":1339150435000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: in fact, there's not even DOM!","msgtype":"m.text"},"ts":1339150444000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's XHTML2? :)","msgtype":"m.text"},"ts":1339150453000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah. you did. i didn't like it at the time, but given the worry about breaking the existing assumptions, it's starting to look more appealing.","msgtype":"m.text"},"ts":1339150473000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: what should happen if someone tried to add non-text node to template?","msgtype":"m.text"},"ts":1339150513000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Also","msgtype":"m.text"},"ts":1339150517000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm... but then there's the problem of sub-templates.","msgtype":"m.text"},"ts":1339150524000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"<sigh>","msgtype":"m.text"},"ts":1339150529000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"rafaelw_: yeah, i was about to say that :\\","msgtype":"m.text"},"ts":1339150539000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"We've just got replaceChild() and friends specced right, please don't mess with them :)","msgtype":"m.text"},"ts":1339150550000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_: i think that was one big reason you didn't want the text-based template","msgtype":"m.text"},"ts":1339150551000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: are you sure it's spec'ed \"right\"? i bet there are few bugs, etc... hanging there :P","msgtype":"m.text"},"ts":1339150592000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, in WebKit? Yes ;)","msgtype":"m.text"},"ts":1339150601000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: doesn't lifting template contents into a documentfragment meet that requirement?","msgtype":"m.text"},"ts":1339150601000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Ms2ger: LOL","msgtype":"m.text"},"ts":1339150606000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, (seriously)","msgtype":"m.text"},"ts":1339150612000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_, haven't thought much about it","msgtype":"m.text"},"ts":1339150622000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i know. i'm painfully aware of that.","msgtype":"m.text"},"ts":1339150630000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: haven't gotten cycle to fix them :(","msgtype":"m.text"},"ts":1339150634000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_, it seems weird, but maybe it's the best approach","msgtype":"m.text"},"ts":1339150637000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: maybe you can convince ojan to work on it :)","msgtype":"m.text"},"ts":1339150644000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa, anything my tests don't catch? :)","msgtype":"m.text"},"ts":1339150652000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"the current proposal is that it messes with parsing and serialization, but nothing else.","msgtype":"m.text"},"ts":1339150669000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"That's even worse, I can't even punt that to annevk :(","msgtype":"m.text"},"ts":1339150717000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_: i think we need to define what innerHTML, appendChild, etc... on template element should do.","msgtype":"m.text"},"ts":1339150723000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it appears that there are some tricky issues there.","msgtype":"m.text"},"ts":1339150736000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1339150756000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wonders if hsivonen is still around.","msgtype":"m.emote"},"ts":1339150757000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"el.innerHTML = '<template><div></div></template>'","msgtype":"m.text"},"ts":1339150771000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"el.appendChild(document.createElement('template')).appendChild(document.createElement('div'))","msgtype":"m.text"},"ts":1339150790000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I kinda find it strange that something that is not concrete but an \"idea\" (a template) is in the HTML at all. It makes for this problem of having to hide it.","msgtype":"m.text"},"ts":1339150803000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Ms2ger: if we put the template's content in a fragment, then the latter won't \"work\".","msgtype":"m.text"},"ts":1339150810000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: well, i guess we can make it work if we spec appendChild to work on fragment instead.","msgtype":"m.text"},"ts":1339150836000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: but that's kind of weird :\\","msgtype":"m.text"},"ts":1339150840000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":" <script>var mytmpl=<div class=whatever></div>;</script>  /  <template id=mytmpl><div class=whatever></div></template>","msgtype":"m.text"},"ts":1339150843000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"rniwa, I'll murder you slowly and painfully if you do that :)","msgtype":"m.text"},"ts":1339150853000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i think it's desireable that the latter doesnt' \"work\".","msgtype":"m.text"},"ts":1339150873000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Velmont, hmm, I see what you did there :)","msgtype":"m.text"},"ts":1339150876000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: i don't think i'll suggest anything as insane as that :)","msgtype":"m.text"},"ts":1339150884000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_: throws an exception?","msgtype":"m.text"},"ts":1339150899000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: .. hmm, what did I do`? :P","msgtype":"m.text"},"ts":1339150908000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"E4H? :)","msgtype":"m.text"},"ts":1339150914000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yeah!","msgtype":"m.text"},"ts":1339150917000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"i've started to think that throwing  exceptions as jgraham suggested might be the sanest solution","msgtype":"m.text"},"ts":1339150920000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if we go with the fragment approach.","msgtype":"m.text"},"ts":1339150924000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"broke something when updating testharness.js","msgtype":"m.emote"},"ts":1339150944000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_, Ms2ger: but then we still have to deal with innerHTML, and innerHTMl and appendChild behaving differently is also kind of weird.","msgtype":"m.text"},"ts":1339150952000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'm not sure that makes sense.","msgtype":"m.text"},"ts":1339150955000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Ms2ger: Updating in which direction?","msgtype":"m.text"},"ts":1339150961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"scripts don't throw if you append element children.","msgtype":"m.text"},"ts":1339150966000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"(push or pull)","msgtype":"m.text"},"ts":1339150969000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: possibly the wrong one...","msgtype":"m.text"},"ts":1339150971000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"jgraham, importing the new version","msgtype":"m.text"},"ts":1339150971000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: OK","msgtype":"m.text"},"ts":1339150981000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"pull from w3.org, push to m.o","msgtype":"m.text"},"ts":1339150983000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_: so what happens when you append children via appendChild to a template element?","msgtype":"m.text"},"ts":1339150996000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_: will it just silently fail?","msgtype":"m.text"},"ts":1339151001000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rafaelw_, rniwa, img elements don't throw either","msgtype":"m.text"},"ts":1339151002000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Just put them in the DOM?","msgtype":"m.text"},"ts":1339151009000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"probably the same thing.","msgtype":"m.text"},"ts":1339151010000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Ms2ger: I put big warnings when I updated operas version, -- but noone bugged me about it. So went fine for us, I believe.","msgtype":"m.text"},"ts":1339151013000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"they append and live as children, but that just doesn't accomplish anything very interesting.","msgtype":"m.text"},"ts":1339151032000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Velmont, might be some of the changes to threport.js I sneaked in","msgtype":"m.text"},"ts":1339151048000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, rafaelw_: so document.createElement('template').appendChild(e) will insert e as the \"real","msgtype":"m.text"},"ts":1339151049000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1339151058000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"\" child of the template element?","msgtype":"m.text"},"ts":1339151060000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":".childNodes will be [e]","msgtype":"m.text"},"ts":1339151060000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes.","msgtype":"m.text"},"ts":1339151070000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1339151073000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but then it's weird that innerHTML works on fragment then.","msgtype":"m.text"},"ts":1339151095000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i think script is the precedent here.","msgtype":"m.text"},"ts":1339151101000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"yes. but again the \"weirdness\" *is* the design goal.","msgtype":"m.text"},"ts":1339151124000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"innerHTML on fragment?","msgtype":"m.text"},"ts":1339151129000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: innerHTMl on template","msgtype":"m.text"},"ts":1339151137000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"BTW pliniss wants to update testharnessreport.js on the W3C server to extract metadata from tests that you add with syntax like test(function() {}, \"My foo test\", {help:\"http://spec/link\"})","msgtype":"m.text"},"ts":1339151141000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does that seem OK to others?","msgtype":"m.text"},"ts":1339151158000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*Linss","msgtype":"m.text"},"ts":1339151164000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i've started to think that if we eventually want Document.parse, etc...","msgtype":"m.text"},"ts":1339151165000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Oops","msgtype":"m.text"},"ts":1339151173000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But that seems correct","msgtype":"m.text"},"ts":1339151177000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"then template.innerHTML should probably work like tempalte.appendChild as well","msgtype":"m.text"},"ts":1339151178000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"plinss","msgtype":"m.text"},"ts":1339151179000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/correct/sane/","msgtype":"m.text"},"ts":1339151185000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"meaning that it doesn't do anything interesting.","msgtype":"m.text"},"ts":1339151190000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: what would","msgtype":"m.text"},"ts":1339151208000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"because if we expose parse on DocumentFragment, for example,","msgtype":"m.text"},"ts":1339151209000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I think that special-casing template.innerHTML would be weird","msgtype":"m.text"},"ts":1339151218000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"myDiv.innerHTML = \"<template><div>Foo</div></template>\"","msgtype":"m.text"},"ts":1339151220000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"Good, doog. Maybe I will put his patch somewhere it can get proper review","msgtype":"m.text"},"ts":1339151221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"do?","msgtype":"m.text"},"ts":1339151221000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"then we can just do template.content.parse(~)","msgtype":"m.text"},"ts":1339151224000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"WTF","msgtype":"m.text"},"ts":1339151229000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Doog?","msgtype":"m.text"},"ts":1339151235000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Did I just type good backwards?","msgtype":"m.text"},"ts":1339151237000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: hmm. yea. Not doing    test(function() {}, { desc: 'My foo test', help: 'http://spec' })  though?","msgtype":"m.text"},"ts":1339151238000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"You did","msgtype":"m.text"},"ts":1339151241000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That is...","msgtype":"m.text"},"ts":1339151250000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Velmont, eh, more typing :)","msgtype":"m.text"},"ts":1339151251000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rafaelw_: that should work. it'll create template with content fragment generated with \"<div>foo</div\">","msgtype":"m.text"},"ts":1339151275000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: I'm just asking the question man! :P","msgtype":"m.text"},"ts":1339151282000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"rafaelw_: i'm talking about document.createElement('template').innerHTML = ~","msgtype":"m.text"},"ts":1339151286000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Velmont: Since titles are non-optional (sort of) that doesn't seem like a big win","msgtype":"m.text"},"ts":1339151290000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and suggesting that it should behave like document.createElement('template').appendChild(~)","msgtype":"m.text"},"ts":1339151305000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: Yeah.","msgtype":"m.text"},"ts":1339151316000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"in that it'll just add it to the real DOM, and not to the content fragment it has.","msgtype":"m.text"},"ts":1339151317000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(although I have found myself writing things like async_test(undefined, {timeout:4000}) when I wanted to use document.title as the test title","msgtype":"m.text"},"ts":1339151330000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1339151334000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hmm... I gotta go, but i'll look forward to hearing why. =-).","msgtype":"m.text"},"ts":1339151341000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"bye all.","msgtype":"m.text"},"ts":1339151344000,"senderName":"rafaelw_","senderId":"rafaelw_@irc"},
{"content":{"body":"bye","msgtype":"m.text"},"ts":1339151350000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"rafaelw_: bye.","msgtype":"m.text"},"ts":1339151361000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"See you","msgtype":"m.text"},"ts":1339151368000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: Exposing all the variables then?","msgtype":"m.text"},"ts":1339151392000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"jgraham, though, how much metadata does he want to put there?","msgtype":"m.text"},"ts":1339151397000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, jgraham: i'm increasingly convinced that if we keep innerHTML, appendChild, etc... to be regular DOM API and let them mutate \"real\" DOM","msgtype":"m.text"},"ts":1339151410000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"then fragment approach might be quite sane.","msgtype":"m.text"},"ts":1339151421000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: I think he wants it to be possible to put all the things that the CSS WG already use","msgtype":"m.text"},"ts":1339151421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(the full object). -- Although that kinda punts the standardization issue to somewhere else.","msgtype":"m.text"},"ts":1339151427000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Let me put the patch somewhere","msgtype":"m.text"},"ts":1339151460000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"isn't entirely sure what Velmont is saying","msgtype":"m.emote"},"ts":1339151467000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"neither","msgtype":"m.emote"},"ts":1339151476000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1339151484000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Ms2ger: If the full object is exposed to testharnessreport.js   you could write   test(..., { ohmanfancyproprietarystuff: 'infoz' })    and the report could use that information. But I guess we'd want to have people use the same properties for common stuff that we all really want.","msgtype":"m.text"},"ts":1339151554000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"And not call it like   operas_special_spec_link='http://the-spec/bla'","msgtype":"m.text"},"ts":1339151576000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"But I guess it's all theorethical, because the web won't use it, mostly us few selected test writers :P","msgtype":"m.text"},"ts":1339151616000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"good night guys ;)","msgtype":"m.text"},"ts":1339151663000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"gn","msgtype":"m.text"},"ts":1339151666000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hm. Doesn't make sense, just ignore my last sentences :P","msgtype":"m.text"},"ts":1339151684000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"OK :)","msgtype":"m.text"},"ts":1339151689000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/jgraham/testharness.js/commit/dc0ded17117ac14705a1f9aa0f6466b8aae3c845","msgtype":"m.text"},"ts":1339152257000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: is that something you think is going to be generally useful, or is yet another thing that only the CSS WG is ever likely to actually use?","msgtype":"m.text"},"ts":1339152769000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I have no idea. I mean, my experience is that test metadata sounds like a great idea and actually doesn't work very well","msgtype":"m.text"},"ts":1339152812000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But maybe my experience is wrong","msgtype":"m.text"},"ts":1339152825000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I guess it doesn't hurt to have it as an option for anybody to make use of it","msgtype":"m.text"},"ts":1339152847000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"as long at it doesn't creep into becoming a requirement at least","msgtype":"m.text"},"ts":1339152864000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"That is basically my feeling","msgtype":"m.text"},"ts":1339152870000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I would rather people spend time writing tests than spend time trying to work out what all the required metadata is, and what the right values are","msgtype":"m.text"},"ts":1339152921000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<template> is basically XML Data Islands","msgtype":"m.text"},"ts":1339153400000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but Opera did it first of course","msgtype":"m.text"},"ts":1339153451000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I see you got a open pull request from tobie there to add a readme file","msgtype":"m.text"},"ts":1339153473000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Opera Awesome Islands","msgtype":"m.text"},"ts":1339153507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Duplicating the docs? :/","msgtype":"m.text"},"ts":1339153525000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: Yeah I guess I should fix that","msgtype":"m.text"},"ts":1339153535000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"would be good to have some kind of readme","msgtype":"m.text"},"ts":1339153565000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Going from git to hg is a bit of a pain :(","msgtype":"m.text"},"ts":1339153568000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah yeah","msgtype":"m.text"},"ts":1339153578000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: there's docs?","msgtype":"m.text"},"ts":1339153595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"In testharness.js","msgtype":"m.text"},"ts":1339153603000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That's what he copied","msgtype":"m.text"},"ts":1339153608000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1339153612000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1339153613000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Right, I am not that sure about duplicating the docs","msgtype":"m.text"},"ts":1339153621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's not so good","msgtype":"m.text"},"ts":1339153624000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't think the docs should be duplicating","msgtype":"m.text"},"ts":1339153634000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the readme can just say \"docs are in the source of testharness.js\"","msgtype":"m.text"},"ts":1339153655000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Time to add a readme file: 2 minutes. Time to try and work out how to remove the one line change that accidentially made it into the local commit at the same time: 15 minutes. Mercurial: where mistakes should be punished by making you learn an entire new revision control system to fix them.","msgtype":"m.text"},"ts":1339154919000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hg revert foo/bar","msgtype":"m.text"},"ts":1339154946000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"That adds an extra commit","msgtype":"m.text"},"ts":1339154999000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh, why'd you commit before checking if it was right?","msgtype":"m.text"},"ts":1339155020000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Because in git you only commit the things that you asked to commit. In hg it commits all changes.","msgtype":"m.text"},"ts":1339155072000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, that's really annoying in git :)","msgtype":"m.text"},"ts":1339155093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well you can always use -a","msgtype":"m.text"},"ts":1339155112000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1339155129000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Also, if you make a mistake and want to fix it you can use the same tools as you use for other operations","msgtype":"m.text"},"ts":1339155154000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Every time I'm forced to use git, I end up doing commit, cursing, and commit -a","msgtype":"m.text"},"ts":1339155158000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Fortunately that isn't often :)","msgtype":"m.text"},"ts":1339155200000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: \"asseertions\"","msgtype":"m.text"},"ts":1339155402000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, thanks for adding it","msgtype":"m.text"},"ts":1339155418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"They're like assertions but eith more eeeee!","msgtype":"m.text"},"ts":1339155430000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1339155437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"eith is also like with but with more eeeee!","msgtype":"m.text"},"ts":1339155446000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"a-seer-tions","msgtype":"m.text"},"ts":1339155450000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"puts e cowboy hat on MikeeeSmith's head","msgtype":"m.emote"},"ts":1339155850000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, I think you can do hg qimport tip tmp; hg qpop; $EDITOR .hg/patches/tmp; hg qpush; hg qfinish tip","msgtype":"m.text"},"ts":1339157030000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or something.","msgtype":"m.text"},"ts":1339157034000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No, that's not right.","msgtype":"m.text"},"ts":1339157040000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hg qimport tip -n tmp; hg qpop; $EDITOR .hg/patches/tmp; hg qpush; hg qfinish tmp","msgtype":"m.text"},"ts":1339157048000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Something like that.","msgtype":"m.text"},"ts":1339157050000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which, yes, is ludicrous and broken.","msgtype":"m.text"},"ts":1339157061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's hg, what do you expect.","msgtype":"m.text"},"ts":1339157065000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"To be fair, git's commit -a is weird.  svn also defaults to it.","msgtype":"m.text"},"ts":1339157088000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"hg rollback works here, too.","msgtype":"m.text"},"ts":1339157100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That's probably the most sensible, if you haven't done anything else in between.","msgtype":"m.text"},"ts":1339157108000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Yeah, hg rollback would have worked in this case","msgtype":"m.text"},"ts":1339157169000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But yeah, I ended up using mq, which is sort of absurd","msgtype":"m.text"},"ts":1339157192000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"WebKit has so many CORS bugs...","msgtype":"m.text"},"ts":1339160946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. http://trac.webkit.org/browser/trunk/Source/WebCore/loader/CrossOriginAccessControl.cpp#L142 has no checks for duplicate Access-Control-Allow-Origin headers","msgtype":"m.text"},"ts":1339161023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"then a little further on it does some kind of origin-based check rather than a string equality check","msgtype":"m.text"},"ts":1339161047000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Is there a testsuite?","msgtype":"m.text"},"ts":1339161144000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1339161242000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Sucks if they are ignoring it","msgtype":"m.text"},"ts":1339161359000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"Moving the Stable Web Forward\"","msgtype":"m.text"},"ts":1339163623000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Stable o_O","msgtype":"m.text"},"ts":1339163710000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"You need a lot of horses power for these browsers these days","msgtype":"m.text"},"ts":1339164011000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"jgraham: I'm bitten by those hg bugs/annoyances all the time as well.","msgtype":"m.text"},"ts":1339164845000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"\"features\" is the word you're looking for :)","msgtype":"m.text"},"ts":1339165075000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Hmm, so gecko and webkit don't seem to execute scripts in documents create by DOMImplementation.createHTMLDocument()","msgtype":"m.text"},"ts":1339165296000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'll believe that","msgtype":"m.text"},"ts":1339165306000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well your spec doesn't seem to agree with your beliefs :)","msgtype":"m.text"},"ts":1339165356000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'll believe that too :)","msgtype":"m.text"},"ts":1339165375000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Actually","msgtype":"m.text"},"ts":1339165465000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham, surely this falls under the \"no defaultView\" condition?","msgtype":"m.text"},"ts":1339165486000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ooh, maybe","msgtype":"m.text"},"ts":1339165504000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Where's that?","msgtype":"m.text"},"ts":1339165508000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#concept-n-script","msgtype":"m.text"},"ts":1339165565000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yes, that makes sense","msgtype":"m.text"},"ts":1339165621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So this should parse as if scripting is disabled also","msgtype":"m.text"},"ts":1339165644000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: I haven't been following <template> too closely. What's the confusion about qSA?","msgtype":"m.text"},"ts":1339172433000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"<!doctype html><template><div></div></template>","msgtype":"m.text"},"ts":1339172524000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"What's document.querySelectorAll(\"div\")?","msgtype":"m.text"},"ts":1339172542000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"empty set","msgtype":"m.text"},"ts":1339172555000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"That is definitely what's expected by developers.","msgtype":"m.text"},"ts":1339172565000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"By literally all developers?","msgtype":"m.text"},"ts":1339172577000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I want to say \"yes\", but I obviously do not have empirical data on that.","msgtype":"m.text"},"ts":1339172600000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"Everyone uses <script type=\"x\"> or <textarea> or whatever to ensure that behavior today.","msgtype":"m.text"},"ts":1339172618000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"If it's not expected, then why use <template>?","msgtype":"m.text"},"ts":1339172664000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"<div style=\"display: none;\" id=\"my-tempalte\">","msgtype":"m.text"},"ts":1339172679000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"document.parse( document.getElementById( \"my-template\" ) )","msgtype":"m.text"},"ts":1339172700000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"You're parsing an element..?","msgtype":"m.text"},"ts":1339172767000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sorry, .innerHTML","msgtype":"m.text"},"ts":1339172838000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"Or I gues just clone it.","msgtype":"m.text"},"ts":1339172847000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"The point is that everyone today is making sure their template contents are not actually part of the DOM.","msgtype":"m.text"},"ts":1339172872000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"If anyone has some weird case where they want it to be, why would they use <template>?","msgtype":"m.text"},"ts":1339172892000,"senderName":"scott_gonzalez","senderId":"scott_gonzalez@irc"},
{"content":{"body":"TabAtkins: ok, i added the definition of :hover to the HTML spec.","msgtype":"m.text"},"ts":1339172933000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Anyway, I'm probably convinced that it shouldn't match, but I wouldn't say everyone definitely agrees with me :)","msgtype":"m.text"},"ts":1339172960000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"public-html is going to be a historical gem","msgtype":"m.text"},"ts":1339176191000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"who was it earlier here taking about abnormal psychology?","msgtype":"m.text"},"ts":1339176274000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"rafaelw_: I got bored reading scrollback, so this may have been discussed after I stopped reading, but the goal of the \"<template> contents are shoved into a separate document\" is solely so that stray queries against the doc don't accidentally return their contents.","msgtype":"m.text"},"ts":1339176617000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"For all other purposes, ideally they'd be treated like normal contents in the normal DOM.","msgtype":"m.text"},"ts":1339176632000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If we gain the correct qSA behavior for free, but have to manually handle a bunch of manipulation APIs like .innerHTML, it may not be worth it, and we should swap and just manually handle qSA and friends.","msgtype":"m.text"},"ts":1339176694000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Where \"manually\" means some form of \"generically, for all things that query against the document looking for nodes\".","msgtype":"m.text"},"ts":1339176726000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the only reason i am aware of for parsing into another doc's docfrag is to neuter the content","msgtype":"m.text"},"ts":1339177244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"What do you mean by \"parsing into another doc's docfrag\"?","msgtype":"m.text"},"ts":1339177324000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"another Document's DocumentFragment","msgtype":"m.text"},"ts":1339177379000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's the \"parsing into\" that I'm unclear about. Which APIs are you talking about?","msgtype":"m.text"},"ts":1339177395000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"<template> parsing","msgtype":"m.text"},"ts":1339177433000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no api","msgtype":"m.text"},"ts":1339177435000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I still don't know what you're talking about. ;_;","msgtype":"m.text"},"ts":1339177454000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You're using words in combinations that I'm not quite sure about.","msgtype":"m.text"},"ts":1339177468000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1339177471000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sorry :-)","msgtype":"m.text"},"ts":1339177473000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"when you have an HTML doc","msgtype":"m.text"},"ts":1339177477000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with a <template>","msgtype":"m.text"},"ts":1339177480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the contents of that element are parsed by the HTML parser into a separate document's documentfragment object","msgtype":"m.text"},"ts":1339177492000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"instead of into the document of the parser","msgtype":"m.text"},"ts":1339177497000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the goal of this is to neuter the dom","msgtype":"m.text"},"ts":1339177509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of the template","msgtype":"m.text"},"ts":1339177513000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1339177523000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so not \"solely so that stray queries against the doc don't accidentally return their contents\" :-)","msgtype":"m.text"},"ts":1339177551000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"By \"neuter\" you presumably mean preventing image loads, etc.?","msgtype":"m.text"},"ts":1339177565000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1339177570000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That doens't require a new doc though, afaict.","msgtype":"m.text"},"ts":1339177582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, i mean, we could always spec new magic","msgtype":"m.text"},"ts":1339177598000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but this is pretty magical stuff already so personally i'd rather just reuse what we have already","msgtype":"m.text"},"ts":1339177610000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, we already have neutered documents?","msgtype":"m.text"},"ts":1339177625000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sure, e.g. createDocument(), XMLHttpRequest docs","msgtype":"m.text"},"ts":1339177641000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hm, okay.","msgtype":"m.text"},"ts":1339177652000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if loonie number two says, \"loonie number one is not batshit insane, you are\", does that cancel out the looniness?","msgtype":"m.text"},"ts":1339178163000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"No, it squares it.","msgtype":"m.text"},"ts":1339178187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also, what's the thread with all the looniness?","msgtype":"m.text"},"ts":1339178195000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: public-html-stridency","msgtype":"m.text"},"ts":1339178471000,"senderName":"[tm]","senderId":"[tm]@irc"},
{"content":{"body":"...that's not a real email thread.","msgtype":"m.text"},"ts":1339178573000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: there was some discussion about what should happen when you call appendChild, removeChild, etc... on the template element itself","msgtype":"m.text"},"ts":1339179206000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(not it's content fragment)","msgtype":"m.text"},"ts":1339179211000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: or assign/retreive values to/from innerHTML of the template element.","msgtype":"m.text"},"ts":1339179226000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah, DOM manipulation on the <template> seems like it should work, particularly .innerHTML.","msgtype":"m.text"},"ts":1339179381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though I wouldn't be *too* sad if it didn't (and you had to descend into its doc first), it just seems weird.","msgtype":"m.text"},"ts":1339179401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I would be very upset if innerHTML doesn't work but am pretty unbothered what happens with appendChild and friends","msgtype":"m.text"},"ts":1339179619000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(you can already do things like append children to a void element which makes equally little sense)","msgtype":"m.text"},"ts":1339179647000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins, jgraham: on the other hand, innerHTML and appendChild behaving differently is also confusing","msgtype":"m.text"},"ts":1339179926000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1339179936000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i would be personally more annoyed with that than innerHTML not replacing the content fragment.","msgtype":"m.text"},"ts":1339179947000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if we added innerHTML on the content fragment, we can just do","msgtype":"m.text"},"ts":1339179957000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"templateElement.content.innerHTML = ~","msgtype":"m.text"},"ts":1339179965000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham: not sure if you're okay with that idea.","msgtype":"m.text"},"ts":1339179978000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Are we back there? :)","msgtype":"m.text"},"ts":1339179993000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: all the way!","msgtype":"m.text"},"ts":1339180004000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I wonder if you could just make <template> an ElementProxy or something that forwarded all method calls to template.content","msgtype":"m.text"},"ts":1339180303000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(with some exceptions of course)","msgtype":"m.text"},"ts":1339180317000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That makes sense to me.","msgtype":"m.text"},"ts":1339180353000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sicking: i've attempted to add some signal to the issue-204 thread; if you find the time, I'd be very grateful for a followup to http://lists.w3.org/Archives/Public/public-html/2012Jun/0066.html","msgtype":"m.text"},"ts":1339180455000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: sorry, won't have time for a bit. Last day before vacation today and i have a lot to finish up before heading out :(","msgtype":"m.text"},"ts":1339180554000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"like packing :)","msgtype":"m.text"},"ts":1339180556000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"That doesn't make sense to me :)","msgtype":"m.text"},"ts":1339180577000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hober, you know, if you have a finite amount of signal and an infinite amount of noise, the s:n ratio remains zero :)","msgtype":"m.text"},"ts":1339180649000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"sicking: that's fine :)","msgtype":"m.text"},"ts":1339180661000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Ms2ger: indeed.","msgtype":"m.text"},"ts":1339180668000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: I liked the summary, made me not feel guilty for only reading the headlines :]","msgtype":"m.text"},"ts":1339182106000,"senderName":"Velmont","senderId":"Velmont@irc"},
{"content":{"body":"Anyone ever been to the Dublin Web Summit?","msgtype":"m.text"},"ts":1339182905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Got invited to speak there, wondering if it's worth a trip to Europe.","msgtype":"m.text"},"ts":1339182915000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then again, that'll be my first time to Ireland, which is pretty attractive all by itself.","msgtype":"m.text"},"ts":1339182954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No idea about the conference, but Ireland is worth a visit (irrespective of your taste for Guinness)","msgtype":"m.text"},"ts":1339183145000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Gradually making myself like the taste of stouts.","msgtype":"m.text"},"ts":1339183162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(I have a problem with bitter flavors that I'm training myself out of.)","msgtype":"m.text"},"ts":1339183176000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, ojan?","msgtype":"m.text"},"ts":1339183197000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"i'm here","msgtype":"m.text"},"ts":1339183215000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"what's up?","msgtype":"m.text"},"ts":1339183217000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"rniwa volunteered you to fix some of his bugs ;)","msgtype":"m.text"},"ts":1339183231000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"lol...not likely :)","msgtype":"m.text"},"ts":1339183239000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Ms2ger: which bugs?","msgtype":"m.text"},"ts":1339183253000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: appendChild, etc....","msgtype":"m.text"},"ts":1339183265000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: we don't match the spec exactly","msgtype":"m.text"},"ts":1339183273000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'm certainly happy to review patches fixing bugs in that area :)","msgtype":"m.text"},"ts":1339183316000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Well played","msgtype":"m.text"},"ts":1339183330000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You know this game, sir","msgtype":"m.text"},"ts":1339183337000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ojan: LOL.","msgtype":"m.text"},"ts":1339183466000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"we've got to find someone who's motivated enough to fix these :\\","msgtype":"m.text"},"ts":1339183476000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: maybe we can find some friendly Motorola contributor to do it.","msgtype":"m.text"},"ts":1339183488000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1339183492000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ojan: they're big on fixing compatibility problems :D","msgtype":"m.text"},"ts":1339183497000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"MD first","msgtype":"m.text"},"ts":1339183498000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TabAtkins: i've never cared for beer, and i have a basic issue with the idea of drinks that i have to teach myself to like","msgtype":"m.text"},"ts":1339183509000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"seriously though...i do want to see us fix these issues","msgtype":"m.text"},"ts":1339183524000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"zewt: That's a silly position, unless you've never started liking anything at all that you disliked as a child.","msgtype":"m.text"},"ts":1339183531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i just have too much on my plate to fix everythign i want to see fixed :)","msgtype":"m.text"},"ts":1339183535000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"pretty sure my dislike for beer doesn't come from not liking it as a child :)","msgtype":"m.text"},"ts":1339183546000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"oh...we have a new eng who might want to do this....","msgtype":"m.text"},"ts":1339183552000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"Ms2ger, rniwa: are there bugs filed?","msgtype":"m.text"},"ts":1339183560000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"For example, sharp chedder or a good blue cheese are hard to like initially, but very delicious once you train yourself.","msgtype":"m.text"},"ts":1339183561000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ojan: maybe.","msgtype":"m.text"},"ts":1339183579000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Beer was the last of the alcoholic trinity that I was able to enjoy, though.","msgtype":"m.text"},"ts":1339183596000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ojan: one thing we need to do is to figure out figure out all the bugs in our code first.","msgtype":"m.text"},"ts":1339183604000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Once you get over the hump, there are a *lot* of delicious ones.","msgtype":"m.text"},"ts":1339183608000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ojan: i don't think bugs filed for all of them.","msgtype":"m.text"},"ts":1339183614000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan, I've got tests! ;)","msgtype":"m.text"},"ts":1339183631000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger, rniwa: well...if you CC me on bugs, i'll run them by the new guy and see if he wants to take a stab","msgtype":"m.text"},"ts":1339183699000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"ojan: heh, there's no better way to learn the way around a codebase than fixing bugs","msgtype":"m.text"},"ts":1339183729000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"ojan, and even better, rniwa can make them run on your bots :)","msgtype":"m.text"},"ts":1339183753000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sounds like a good idea :)","msgtype":"m.text"},"ts":1339183830000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: we're still discussing about how to import W3C tests into our repository","msgtype":"m.text"},"ts":1339183841000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: and we haven't had a good resolution on it :\\","msgtype":"m.text"},"ts":1339183848000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"pulls up Chrome","msgtype":"m.emote"},"ts":1339183905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Inserting an element before a doctype","msgtype":"m.text"},"ts":1339184105000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Known?","msgtype":"m.text"},"ts":1339184107000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"\"Add inputmode attribute support, as per XHTML Basic 1.1\"","msgtype":"m.text"},"ts":1339184222000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rniwa, what does Node::inDocument() mean?","msgtype":"m.text"},"ts":1339184741000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: means that the node is still attached to the document.","msgtype":"m.text"},"ts":1339184772000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: Node::document() returns the owner document","msgtype":"m.text"},"ts":1339184788000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Mm","msgtype":"m.text"},"ts":1339184814000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"And it's always true for documents?","msgtype":"m.text"},"ts":1339184831000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: think so","msgtype":"m.text"},"ts":1339184872000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: see ConstructionType","msgtype":"m.text"},"ts":1339184903000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: in Node.h","msgtype":"m.text"},"ts":1339184906000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: CreateDocument = CreateContainer | InDocumentFlag","msgtype":"m.text"},"ts":1339184919000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Whoa, you have an implementation of Notation","msgtype":"m.text"},"ts":1339184995000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Notation?","msgtype":"m.text"},"ts":1339185029000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: yeah...","msgtype":"m.text"},"ts":1339185045000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jgraham, http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5431D1B9","msgtype":"m.text"},"ts":1339185064000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh My","msgtype":"m.text"},"ts":1339185101000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The file claims it's never instantiated, though","msgtype":"m.text"},"ts":1339185119000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rniwa, HTML DOM?","msgtype":"m.text"},"ts":1339185250000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: i know, right?","msgtype":"m.text"},"ts":1339185288000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: i don't even know who added that code.","msgtype":"m.text"},"ts":1339185297000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: it prepares my involvement to webkit","msgtype":"m.text"},"ts":1339185301000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"No, for the insertBefore bugs","msgtype":"m.text"},"ts":1339185311000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"JQUERY HAS ANSWERED","msgtype":"m.text"},"ts":1339185804000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"SCRIPTING IS INTENTIONAL :D","msgtype":"m.text"},"ts":1339185810000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Velmont: :)","msgtype":"m.text"},"ts":1339185994000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1339186368000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ojan, rniwa, enjoy :)","msgtype":"m.text"},"ts":1339187027000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"rniwa: i think it would be exactly the kind of crazy confusing behaviour the Web is famous for for things like appendChild and innerHTML to do the \"useful\" thing instead of being consistent with what they do everywhere else","msgtype":"m.text"},"ts":1339190256000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No more so than the HTML parser doing the \"useful\" thing","msgtype":"m.text"},"ts":1339190632000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"except we don't really have an alternative for the parser","msgtype":"m.text"},"ts":1339191007000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"plus the parser has plenty of precedent for doing different things for different tags","msgtype":"m.text"},"ts":1339191034000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i agree with you too.","msgtype":"m.text"},"ts":1339191057000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: i think it's probably saner for those APIs not to work on content fragment","msgtype":"m.text"},"ts":1339191087000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so we need at least 3 specifications to define :hover?","msgtype":"m.text"},"ts":1339191581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"brilliant","msgtype":"m.text"},"ts":1339191583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no implementor is going to find that out :/","msgtype":"m.text"},"ts":1339191612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"show all three specs on the same page; hover an icon to pick which to see","msgtype":"m.text"},"ts":1339191654000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"the most important spec of those, hit testing, doesn't exist of course","msgtype":"m.text"},"ts":1339191751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i don't want to put it in html, but since they won't put it in selectors... (same with :active and the others)","msgtype":"m.text"},"ts":1339191832000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my cynical opinion of non-tree selectors defined by the CSS WG is that it's syntax plus some fluff words to give a rough hint of how things are supposed to work without actually defining how they work","msgtype":"m.text"},"ts":1339192043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which seems rather pointless","msgtype":"m.text"},"ts":1339192060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i don't really understand the reluctance","msgtype":"m.text"},"ts":1339192173000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh I do, it's the idea that CSS is unrelated to everything else and therefore the specifications must be alien of that too","msgtype":"m.text"},"ts":1339192270000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's crazy","msgtype":"m.text"},"ts":1339192396000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1339192432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How long till someone writes a \"CSS applied to DOM\" spec?","msgtype":"m.text"},"ts":1339192485000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: that's what i don't understand","msgtype":"m.text"},"ts":1339192491000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's the mindset of some relatively influential people within the CSS WG","msgtype":"m.text"},"ts":1339192580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: I don't think it makes sense, but they seem kind of fixed on that","msgtype":"m.text"},"ts":1339192597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Uh, what?","msgtype":"m.text"},"ts":1339192614000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: I gave up arguing on this though","msgtype":"m.text"},"ts":1339192620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and then later left the WG entirely)","msgtype":"m.text"},"ts":1339192641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"CSS defines how :hover works generically.  HTML defines a special additional case that causes :hover to match, based on stuff that only exists in HTML.","msgtype":"m.text"},"ts":1339192683000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Don't bullshit, anne. ^_^","msgtype":"m.text"},"ts":1339192719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's exactly what I was just saying...","msgtype":"m.text"},"ts":1339192751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well plus that hit testing is not defined","msgtype":"m.text"},"ts":1339192760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, bedtime","msgtype":"m.text"},"ts":1339192767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd love to define hit-testing, but I don't know what actually needs to be defined.","msgtype":"m.text"},"ts":1339192838000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like, at what level are we missing stuff?","msgtype":"m.text"},"ts":1339192842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: The reluctance to put @label-related stuff into Selectors is that CSS applies to more than HTML, so if there are things that are specific to the host language, they should be defined by the host language.","msgtype":"m.text"},"ts":1339193021000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And, as long as the host spec is being actively editted, like HTML is, that's fine.","msgtype":"m.text"},"ts":1339193044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If that wasn't true, we'd include it in the CSS spec just to have it defined somewhere.","msgtype":"m.text"},"ts":1339193058000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But seriously, if someone can explain to me what's actually needed for hit-testing, I'll write the spec for it.","msgtype":"m.text"},"ts":1339193153000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: the problem with hit-testing is that a lot of it will be necessarily platform dependent","msgtype":"m.text"},"ts":1339193413000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: e.g. hit testing for editing can't be spec'ed one way or other because each platform uses different conventions with respect to bidiretional text for example.","msgtype":"m.text"},"ts":1339193459000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Is it?  I mean, you have a coordinate, and a formatted page.  Defining which element that coordinate hits shouldn't be difficult, I would assume.","msgtype":"m.text"},"ts":1339193472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i agree with anne that there's no point being generic. selectors should just give up and realise there is only one host language really.","msgtype":"m.text"},"ts":1339193475000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"YO","msgtype":"m.text"},"ts":1339193476000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"TabAtkins: it is, unfortunately.","msgtype":"m.text"},"ts":1339193493000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hixie: But there isn't.  SVG is a valid second host language.","msgtype":"m.text"},"ts":1339193495000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: it's the same language.","msgtype":"m.text"},"ts":1339193502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rniwa: Okay, then I don't understand.  ^_^  I'll need some more details at some point.","msgtype":"m.text"},"ts":1339193506000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hit-testing on element might work","msgtype":"m.text"},"ts":1339193511000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: \"html+svg+math+xml+css+dom+js+...\"","msgtype":"m.text"},"ts":1339193514000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: but definitely not when you have text","msgtype":"m.text"},"ts":1339193518000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: presumably, you want to spec hit-testing on text as well right?","msgtype":"m.text"},"ts":1339193539000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's kind of odd to have a spec that only specifies hit-testing on elements without text :\\","msgtype":"m.text"},"ts":1339193550000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: For the purposes of CSS, no.  I dunno if it's useful to specify text hit-testing.","msgtype":"m.text"},"ts":1339193563000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok.","msgtype":"m.text"},"ts":1339193572000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"writes all his web pages in MathML with inline HTML and SVG","msgtype":"m.emote"},"ts":1339193573000,"senderName":"shepazu","senderId":"shepazu@irc"},
{"content":{"body":"TabAtkins: how about things like first-lettter?","msgtype":"m.text"},"ts":1339193577000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: ::first-letter is exactly the same as any other element for this purpose.","msgtype":"m.text"},"ts":1339193614000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: and how about inline elements that are intersparsed because of UBA?","msgtype":"m.text"},"ts":1339193637000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Their boxes still have definite positions given by the layout algorithm already.","msgtype":"m.text"},"ts":1339193658000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(iirc, it's somewhat handwavey on that point, though)","msgtype":"m.text"},"ts":1339193671000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hm... i guess.","msgtype":"m.text"},"ts":1339193678000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins: oh yeah, i guess it works as long as you don't define what happens to selection","msgtype":"m.text"},"ts":1339193695000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"By the time you're doing hit-testing, you've already done layout and positioning, and just have a bunch of elements with geometry.","msgtype":"m.text"},"ts":1339193697000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, doing selection requires specifying it on text instead of elements.","msgtype":"m.text"},"ts":1339193720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"okay, that makes sense :)","msgtype":"m.text"},"ts":1339193731000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"when I hear the word hit-testing, I automatically assume it involves text","msgtype":"m.text"},"ts":1339193748000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"because that's what browsers do.","msgtype":"m.text"},"ts":1339193752000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"defining hit-testing with transforms would be great","msgtype":"m.text"},"ts":1339193755000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"The two algorithms are pretty disjoint - you'd first hit-test against geometry to see which element was hit, then do it against text to see where in the element's text was hit.","msgtype":"m.text"},"ts":1339193760000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's a non-trivial, non-interoperable thing completely unrelated to text","msgtype":"m.text"},"ts":1339193765000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr: yeah, but that'll be hard to spec & implement :\\","msgtype":"m.text"},"ts":1339193781000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"jamesr_: Interesting that it's non-trivial.  The definition is pretty trivial when you work directly with geometry.","msgtype":"m.text"},"ts":1339193788000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: not in webkit but you could create a conceptual boundary like that, yes","msgtype":"m.text"},"ts":1339193809000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Yeah, I have no idea what sort of division would be most useful for browsers.","msgtype":"m.text"},"ts":1339193828000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i think it's okay as long as the spec isn't algorithmic","msgtype":"m.text"},"ts":1339193864000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Surely hit-testing for :hover and mousein/out events and such doesn't care about text?","msgtype":"m.text"},"ts":1339193875000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, if you have inlines they involve text, right?","msgtype":"m.text"},"ts":1339193899000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"their position i mean","msgtype":"m.text"},"ts":1339193904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: No, they involve the layout boxes generated by the text.","msgtype":"m.text"},"ts":1339193912000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The geometry of the text itself is irrelevant.","msgtype":"m.text"},"ts":1339193921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i guess i don't really understand the question","msgtype":"m.text"},"ts":1339193922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Me too, I think.","msgtype":"m.text"},"ts":1339193933000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seems like the geometry of the text is what affects where the inlines will end up, but *shrug*","msgtype":"m.text"},"ts":1339193942000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"See: \"I don't know what actually needs to be defined\".","msgtype":"m.text"},"ts":1339193945000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"we'll have to ask anne tomorrow :-)","msgtype":"m.text"},"ts":1339193951000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Geometry of the text is completely UA specific.","msgtype":"m.text"},"ts":1339193957000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Based on the text layout engine.","msgtype":"m.text"},"ts":1339193962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"define what you all mean by \"geometry of text\"","msgtype":"m.text"},"ts":1339194020000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"anyways, CSSOM appears to expose CaretPosition or something","msgtype":"m.text"},"ts":1339194052000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that is potentially text related","msgtype":"m.text"},"ts":1339194063000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"TabAtkins, intersection! subdivision! not-rectangularity","msgtype":"m.text"},"ts":1339194064000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"surely the TrueType spec defines what the text geometry needs to be","msgtype":"m.text"},"ts":1339194066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, 3d transforms are non-interoperable today","msgtype":"m.text"},"ts":1339194074000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"(or last i checked)","msgtype":"m.text"},"ts":1339194080000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"jamesr_: Bah, that's all efficiency.  Conceptually it's: take a bunch of elements, get their hittable geometry, transform as appropriate, sort by descending z-order, then find the first that contains the given point.","msgtype":"m.text"},"ts":1339194187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sort what by descending z-order? there is no global sort order for elements","msgtype":"m.text"},"ts":1339194219000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hixie: Tell that to the engines and their slightly non-interop text behavior for bunches of things.","msgtype":"m.text"},"ts":1339194223000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes there is.","msgtype":"m.text"},"ts":1339194227000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"only if you subdivide","msgtype":"m.text"},"ts":1339194233000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Oh, with 3d transforms involved, yeah.","msgtype":"m.text"},"ts":1339194245000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"right. http://greggman.com/downloads/examples/intersecting-elements-3d-css.html","msgtype":"m.text"},"ts":1339194263000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"TabAtkins: \"slightly\" doesn't mean there's no interop, it just means interop is defined to be within certain error margins.","msgtype":"m.text"},"ts":1339194282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: that's pretty common on the web","msgtype":"m.text"},"ts":1339194287000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"without 3d it's pretty simple and probably fairly easy to spec","msgtype":"m.text"},"ts":1339194313000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hixie: I'm not going to be the one to define that, particularly with things like synthetic bolding and the like.","msgtype":"m.text"},"ts":1339194317000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm willing to say \"lay out the text, and give us the bounding box\".","msgtype":"m.text"},"ts":1339194327000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: clearly i'm not volunteering for that either :-)","msgtype":"m.text"},"ts":1339194352000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jamesr_: Yeah, should be.","msgtype":"m.text"},"ts":1339194354000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interestingly, i found out that in IE some invisible elements are invisible to hit-testing","msgtype":"m.text"},"ts":1339194381000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Hm? You mean like visibility:hidden?","msgtype":"m.text"},"ts":1339194396000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or like \"color:transparent; background:transparent;\"?","msgtype":"m.text"},"ts":1339194404000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"setting background-color: grey changed whether an element got clicks or not","msgtype":"m.text"},"ts":1339194408000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"latter","msgtype":"m.text"},"ts":1339194412000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"lolwut","msgtype":"m.text"},"ts":1339194415000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I assume they're optimizing away the draw, and it accidentally skips the \"add to hit-test structure\" too.","msgtype":"m.text"},"ts":1339194447000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i was wondering if it was a clickjack defense","msgtype":"m.text"},"ts":1339194455000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"Ooh, maybe.","msgtype":"m.text"},"ts":1339194462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"behavior was different for <div> vs <canvas>","msgtype":"m.text"},"ts":1339194464000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"IE has done this for ages","msgtype":"m.text"},"ts":1339194544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wrote a spec for it once (as best i could)","msgtype":"m.text"},"ts":1339194553000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it was terrifyingly complicated","msgtype":"m.text"},"ts":1339194566000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah, it is IEism from IE4 or so","msgtype":"m.text"},"ts":1339194633000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Bleh.","msgtype":"m.text"},"ts":1339194656000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: FYI, https://bugzilla.mozilla.org/show_bug.cgi?id=102695","msgtype":"m.text"},"ts":1339194910000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: Thanks!","msgtype":"m.text"},"ts":1339195843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie, any idea where that spec you wrote is these days?","msgtype":"m.text"},"ts":1339196535000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i'm morbidly curious","msgtype":"m.text"},"ts":1339196609000,"senderName":"jamesr_","senderId":"jamesr_@irc"}
]