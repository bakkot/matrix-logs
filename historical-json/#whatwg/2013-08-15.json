[
{"content":{"body":"Chrome also opens data:text/xml,<?xml version=\"1.9\"?><script xmlns=\"http://www.w3.org/1999/xhtml\">alert(1)</script> so whether it supports XML 1.1 or XML 1.0 5th Edition is a bit unclear","msgtype":"m.text"},"ts":1376560511000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe it jsut doesn't care that much since XML is a minor use case","msgtype":"m.text"},"ts":1376560583000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No it fails on 2.0","msgtype":"m.text"},"ts":1376560623000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If I do data:text/xml,<?xml version=\"1.1\"?><script%85xmlns=\"http://www.w3.org/1999/xhtml\">alert(1)</script> however I get \"warning on line 1 at column 19: Unsupported version '1.1'\"","msgtype":"m.text"},"ts":1376560710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/lifthrasiir/rust-encoding","msgtype":"m.text"},"ts":1376563645000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"lucky you","msgtype":"m.text"},"ts":1376563672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no \"streaming\" api though","msgtype":"m.text"},"ts":1376563685000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"oh really?","msgtype":"m.text"},"ts":1376563710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that's kinda essential","msgtype":"m.text"},"ts":1376563715000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1376563733000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Apparently Dan Connolly considers XML 1.1 to be killed: http://visitmix.com/opinions/web-standards-gone-wild Too bad they didn't mark it as such so we get still harassed about it in bug reports.","msgtype":"m.text"},"ts":1376564372000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does anyone know whwere i can find an authoritative spec of html5","msgtype":"m.text"},"ts":1376565142000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"normative only please","msgtype":"m.text"},"ts":1376565157000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: http://whatwg.org/C","msgtype":"m.text"},"ts":1376565215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there something without all the samples","msgtype":"m.text"},"ts":1376565294000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: no, but you could execute some script or use CSS that hides them pretty easily...","msgtype":"m.text"},"ts":1376565325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what element rules should i apply then","msgtype":"m.text"},"ts":1376565345000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"good call btw","msgtype":"m.text"},"ts":1376565347000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"i found an xsd for html5 by MSFT but it lists put as a html method","msgtype":"m.text"},"ts":1376565412000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"is this valid for form submission?","msgtype":"m.text"},"ts":1376565417000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fs-method says no","msgtype":"m.text"},"ts":1376565496000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"famicom`: .example { display:none } .note { display:none }","msgtype":"m.text"},"ts":1376565597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"famicom`: would go a long way","msgtype":"m.text"},"ts":1376565607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"thanks :)","msgtype":"m.text"},"ts":1376565628000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"are there any differences with the dom interface and the html5 spec?","msgtype":"m.text"},"ts":1376565961000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: what do you mean?","msgtype":"m.text"},"ts":1376566252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"honestly, i need a clear and concise spec","msgtype":"m.text"},"ts":1376566281000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"http://www.w3.org/TR/html4/strict.dtd","msgtype":"m.text"},"ts":1376566282000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"i miss those \"(","msgtype":"m.text"},"ts":1376566285000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: that's from a time when we didn't really explain what was going on","msgtype":"m.text"},"ts":1376566385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Their incompleteness and inaccuracy?","msgtype":"m.text"},"ts":1376566387000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"no, their what's the term","msgtype":"m.text"},"ts":1376566419000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"conciseness?","msgtype":"m.text"},"ts":1376566440000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: they were concise because they were incomplete and inaccurate and full of holes","msgtype":"m.text"},"ts":1376566468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"famicom`: if you prefer that, it's better to not read a standard, but a tutorial of sorts","msgtype":"m.text"},"ts":1376566490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and you are?","msgtype":"m.text"},"ts":1376566501000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"Anne?","msgtype":"m.text"},"ts":1376566515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"of?","msgtype":"m.text"},"ts":1376566519000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"of?","msgtype":"m.text"},"ts":1376566533000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"im not following you, what is wrong with a dtd or xsd schema definitinon for that matter","msgtype":"m.text"},"ts":1376566557000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"i understand that html is an evolving language","msgtype":"m.text"},"ts":1376566565000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"but we have no guidelines of what is \"correct\"","msgtype":"m.text"},"ts":1376566594000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"apart from implementation","msgtype":"m.text"},"ts":1376566607000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: reading http://hsivonen.iki.fi/thesis/html5-conformance-checker.xhtml might give you an idea of issues with schema languages","msgtype":"m.text"},"ts":1376566634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"famicom`: actually we do, the specification covers what is correct, in English","msgtype":"m.text"},"ts":1376566648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1376566664000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"I believe annevk is Anne of Kestern","msgtype":"m.text"},"ts":1376566736000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so there isnt a single machine parsable deifinition around","msgtype":"m.text"},"ts":1376566738000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"hyey anne","msgtype":"m.text"},"ts":1376566758000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"nederlander?","msgtype":"m.text"},"ts":1376566760000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"ah ik zie het nu","msgtype":"m.text"},"ts":1376566809000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"respect \\o/","msgtype":"m.text"},"ts":1376566818000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"i read this guys blogs before","msgtype":"m.text"},"ts":1376566822000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"anne is your main focuss purely markup languages?","msgtype":"m.text"},"ts":1376567020000,"senderName":"famicom`","senderId":"famicom`@irc"},
{"content":{"body":"famicom`: currently URLs and platform APIs","msgtype":"m.text"},"ts":1376570366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"odinho: thanks","msgtype":"m.text"},"ts":1376570458000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Are there places in the platform that take domain names but not \"[IPv6]\" notation?","msgtype":"m.text"},"ts":1376572627000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"var dummy = document.createElement('iframe'); dummy.src = 'http://google.com/Â©'; console.log(dummy.src);","msgtype":"m.text"},"ts":1376573766000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"\"http://google.com/%C2%A9\" in Blink","msgtype":"m.text"},"ts":1376573774000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Found another bug in https://tools.ietf.org/html/rfc6454 Apparently it uses IDNA 2008.","msgtype":"m.text"},"ts":1376573880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh no, bad example","msgtype":"m.text"},"ts":1376573890000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: not sure what you mean by that :)","msgtype":"m.text"},"ts":1376573903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i was talking about something else, but gave a bad example","msgtype":"m.text"},"ts":1376573920000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"in some browsers, a special symbol in the TLD part of the hostname gets normalized to its URL-encoded equivalent","msgtype":"m.text"},"ts":1376573949000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"in Firefox that is not the case","msgtype":"m.text"},"ts":1376573954000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"TLD is not special per any spec","msgtype":"m.text"},"ts":1376574029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"var dummy = document.createElement('iframe'); dummy.src = 'http://google.comâ'; console.log(dummy.src);","msgtype":"m.text"},"ts":1376574071000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"â \"http://google.coma/s\" in WebKit/Blink","msgtype":"m.text"},"ts":1376574080000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"no wait, just in WebKit","msgtype":"m.text"},"ts":1376574107000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"in Blink itâs \"http://google.coma%2Fs/\"","msgtype":"m.text"},"ts":1376574112000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Firefox acts as WebKit","msgtype":"m.text"},"ts":1376574132000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"That makes a surprising amount of sense, but is actually bad...","msgtype":"m.text"},"ts":1376574202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what behavior makes the most sense?","msgtype":"m.text"},"ts":1376574226000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"btw in old Opera 12 itâs option 3: \"http://google.xn--com-cg1a/\"","msgtype":"m.text"},"ts":1376574249000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"WebKit / Gecko only apply Unicode normalization. I guess Chrome then filters out certain bad code points via percent escaping. But since percent escaping doesn't make sense anymore at that point, it might be better to fail parsing the URL...","msgtype":"m.text"},"ts":1376574323000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, pretty weird","msgtype":"m.text"},"ts":1376574335000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"The normalization is what IDNA 2003 requires. But I suspect this code point is not from Unicode 3.2","msgtype":"m.text"},"ts":1376574360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://codepoints.net/U+2101 added in Unicode v1.1","msgtype":"m.text"},"ts":1376574392000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"\"We present JSCert, a mechanised specification of ECMAScript 5 in the Coq proof assistant, and JSRef, a reference interpreter for JavaScript extracted from Coq to OCaml.\"","msgtype":"m.text"},"ts":1376574415000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"matjas: okay, then maybe the mapping is not from Unicode 3.2","msgtype":"m.text"},"ts":1376574525000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah, gotcha","msgtype":"m.text"},"ts":1376574545000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: cannot find 2101 in http://tools.ietf.org/html/rfc3454","msgtype":"m.text"},"ts":1376574546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Should I be scared by http://lxr.mozilla.org/mozilla-central/source/netwerk/dns/nsIIDNService.idl#19 citing https://tools.ietf.org/html/draft-ietf-idn-idna-06 rather than a final specification?","msgtype":"m.text"},"ts":1376574896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"those draft URLs are the worst","msgtype":"m.text"},"ts":1376574911000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"i had people filing bugs on my oauth2 library based on multi-year-old drafts","msgtype":"m.text"},"ts":1376574926000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Seems http://lxr.mozilla.org/mozilla-central/source/netwerk/dns/nsIDNService.cpp cites final (2003) RFCs it seems. Guess nobody updated the .idl...","msgtype":"m.text"},"ts":1376575063000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: https://github.com/lifthrasiir/rust-encoding actually does have a streaming API, just not in the readme","msgtype":"m.text"},"ts":1376576486000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"for the record, I filed https://code.google.com/p/chromium/issues/detail?id=273712","msgtype":"m.text"},"ts":1376576510000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"It also tries to mimic the specâs TextEncoder and TextDecoder APIs, which I think is not a great idea for non-JavaScript","msgtype":"m.text"},"ts":1376576522000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"SimonSapin: yeah, seems bad","msgtype":"m.text"},"ts":1376576546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SimonSapin: also seems bad to add extensions such as \"ascii\"","msgtype":"m.text"},"ts":1376576554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well, itâs implemented, but not associated with any string label","msgtype":"m.text"},"ts":1376576602000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"matjas: fwiw, I'm not entirely sure what the correct behavior is, but what Gecko does is bad too as when you'd serialize and then parse the URL again you'd get a different result","msgtype":"m.text"},"ts":1376576617000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, I would like to implement typogrify/smartypants like filters using html5lib. I don't really like their approach with regex and I would like to implement more rules (for french typography). I was thinking about taking the existing htmlserializer and adding my own filters in there. DO you think it is a good idea? Any advices regarding this?","msgtype":"m.text"},"ts":1376576811000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"That sounds quite reasonable","msgtype":"m.text"},"ts":1376576833000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although I don't really know what those other things do","msgtype":"m.text"},"ts":1376576842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, should I modify directly the htmlserializer? Or should it be a \"Filter\"?","msgtype":"m.text"},"ts":1376577234000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"matjas: it seems like 2101 changed between http://www.unicode.org/Public/3.2-Update/DerivedNormalizationProps-3.2.0.txt and http://www.unicode.org/Public/UNIDATA/DerivedNormalizationProps.txt :/","msgtype":"m.text"},"ts":1376577408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"aleray: Making a filter seems to be more sensible","msgtype":"m.text"},"ts":1376577539000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, nice thanks. I will try this","msgtype":"m.text"},"ts":1376577563000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"jgraham, trying this simple example: http://dpaste.com/1344361/ I get an error: TypeError: unhashable type","msgtype":"m.text"},"ts":1376578858000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"any idea?","msgtype":"m.text"},"ts":1376578861000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: I haven't looked at the code for too long to answer off the top of my head. Can you paste the full tb?","msgtype":"m.text"},"ts":1376578991000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, yes","msgtype":"m.text"},"ts":1376579009000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"jgraham, http://dpaste.com/1344363/","msgtype":"m.text"},"ts":1376579037000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"It appears to be getting something other than a string for an attribute name","msgtype":"m.text"},"ts":1376579264000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But I don't know why it should see an attribute at all","msgtype":"m.text"},"ts":1376579360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, the value of token is \"{u'namespace': u'http://www.w3.org/1999/xhtml', u'type': u'StartTag', u'name': u'p', u'data': {}}\"","msgtype":"m.text"},"ts":1376579761000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"if it helps","msgtype":"m.text"},"ts":1376579768000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: Oh","msgtype":"m.text"},"ts":1376580125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It looks like the sanitiser is expecting the attributes to be a list","msgtype":"m.text"},"ts":1376580142000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I wonder if this ever worked or if gsnedders changed it recently","msgtype":"m.text"},"ts":1376580160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham, in my case it what just to test out the filter thing... I don't plan to use the sanitizer filter.","msgtype":"m.text"},"ts":1376580235000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"but I guess it might be useful for other people","msgtype":"m.text"},"ts":1376580258000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"jgraham: Ages ago.","msgtype":"m.text"},"ts":1376580263000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: That is https://github.com/html5lib/html5lib-python/issues/72 no?","msgtype":"m.text"},"ts":1376580287000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Or rather it is caused by that.","msgtype":"m.text"},"ts":1376580305000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: Look at any other filter. :)","msgtype":"m.text"},"ts":1376580342000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"aleray: The rest work, AFAIK.","msgtype":"m.text"},"ts":1376580348000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"OK, so another question: I have written the following: http://dpaste.com/1344381/. It works, but the & of \"&hellip;\" get escaped when I serialize. so it become \"&amp;hellip;\"","msgtype":"m.text"},"ts":1376580423000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"can I avoid it?","msgtype":"m.text"},"ts":1376580429000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: You want to use the Unicode character \\u2026","msgtype":"m.text"},"ts":1376580473000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, thanks","msgtype":"m.text"},"ts":1376580484000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"aleray: Instead of using the character reference. The serializer will deal with escaping things as character references as needed.","msgtype":"m.text"},"ts":1376580494000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, euh?","msgtype":"m.text"},"ts":1376580516000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"didn't get it","msgtype":"m.text"},"ts":1376580520000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"wonders what the objection to dropping the tokenizer sanitizer mixin was","msgtype":"m.emote"},"ts":1376580554000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I was possibly the one that objected)","msgtype":"m.text"},"ts":1376580572000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(apart from the fact that people are using it)","msgtype":"m.text"},"ts":1376580582000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"aleray: The filters have no concept of character references like &hellip;. They merely have runs of characters. The serializer will convert the characters to character references if needed.","msgtype":"m.text"},"ts":1376580619000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: It's going for 1.0.","msgtype":"m.text"},"ts":1376580628000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: And the tokenizer-parser distinction is becoming an internal API.","msgtype":"m.text"},"ts":1376580645000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Like it was in the beginning you mean :)","msgtype":"m.text"},"ts":1376580685000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thank you both, I need to look further at it but your advices were useful","msgtype":"m.text"},"ts":1376580699000,"senderName":"aleray","senderId":"aleray@irc"},
{"content":{"body":"I think that's quite sensible","msgtype":"m.text"},"ts":1376580704000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Also, pip now installs 0.95 again, because it now ignores pre-release versions by default.","msgtype":"m.text"},"ts":1376580738000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"calling it 1.0b was probably a mistake","msgtype":"m.text"},"ts":1376580786000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"It could have been 0.99","msgtype":"m.text"},"ts":1376580791000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I would support re-releasing it as 0.99)","msgtype":"m.text"},"ts":1376580804000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And just keep adding 9s :)","msgtype":"m.text"},"ts":1376580821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1376580983000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: https://github.com/html5lib/html5lib-python/pull/93 is the only API change I want to make for 1.0","msgtype":"m.text"},"ts":1376581112000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: And then fix saniziter and then I think we can call it 1.0","msgtype":"m.text"},"ts":1376581143000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But it's not finished!","msgtype":"m.text"},"ts":1376581165000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It never will be.","msgtype":"m.text"},"ts":1376581181000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I think \"remove the tokenizer sanitizer\" counts as an API change :)","msgtype":"m.text"},"ts":1376581196000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh happy span time, github is down again","msgtype":"m.text"},"ts":1376582210000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*spam","msgtype":"m.text"},"ts":1376582213000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yay centralization. status.github.com \"Major service outage.\"","msgtype":"m.text"},"ts":1376582215000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Although happy span time seems almost on-topic for the channel","msgtype":"m.text"},"ts":1376582233000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hmm. File.lastModifiedDate is a Date object too","msgtype":"m.text"},"ts":1376582616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"RFC3454 is beautiful... Section 5 states that remaining subsections are non-normative. Section 6 states \"The characters in section 5.8 MUST be prohibited.\"","msgtype":"m.text"},"ts":1376583741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh i implemented some stringprep profile at some point ... typical rfc nightmare","msgtype":"m.text"},"ts":1376584203000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"So yeah... I'm wondering what to do here. Just reference IDNA 2003 and override the Unicode version... Or define loads of it locally...","msgtype":"m.text"},"ts":1376584382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1376585317000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"found https://twitter.com/t/status/368053711794634752 funny","msgtype":"m.emote"},"ts":1376586233000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger did you get that today is the 227th day of the year?","msgtype":"m.text"},"ts":1376586680000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Yeah, I know you use that format","msgtype":"m.text"},"ts":1376586691000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I found the juxtaposition with the comic denouncing it funny","msgtype":"m.text"},"ts":1376586716000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"famicom`: a machine-readable version of the spec would just be the source code for a browser","msgtype":"m.text"},"ts":1376588625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So where does one get Anolis these days","msgtype":"m.text"},"ts":1376589021000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"bitbucket","msgtype":"m.text"},"ts":1376589034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"so i have to install hg, fun times","msgtype":"m.text"},"ts":1376589050000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"the setup instructions at http://hg.gsnedders.com/anolis/raw-file/1.0/README.html are accurate still, despite the new repo location?","msgtype":"m.text"},"ts":1376589083000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Should be pretty much the same, yes","msgtype":"m.text"},"ts":1376589216000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or http://pythonhosted.org/anolis/","msgtype":"m.text"},"ts":1376589228000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, you can probably also use pip or whatever","msgtype":"m.text"},"ts":1376589253000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"<base href=about:blank> isn't something i've considered before","msgtype":"m.text"},"ts":1376596262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"seems it's ignored in blink","msgtype":"m.text"},"ts":1376596342000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not ignored in gecko but gecko doesn't like resolving to about:blank, or something, at least clicking the link here does nothing http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2461","msgtype":"m.text"},"ts":1376596415000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i wonder if we can change setProperty(value) without the priority argument to just change the value and not the priority","msgtype":"m.text"},"ts":1376597581000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it seems a bit unexpected that it unsets !important","msgtype":"m.text"},"ts":1376597642000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I'll bet we could.","msgtype":"m.text"},"ts":1376598151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan: I'm betting most applications don't realize they're unsetting !important, and that for nearly all, it doesn't actually matter.","msgtype":"m.text"},"ts":1376598170000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah. and when it does matter, it means that the new value doesn't get applied, which seems like a bug in the code","msgtype":"m.text"},"ts":1376598217000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Right.","msgtype":"m.text"},"ts":1376598247000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"suggested that on the list","msgtype":"m.text"},"ts":1376598304000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm not supposed to be working today :-P","msgtype":"m.text"},"ts":1376598327000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"darobin: respec.js is *so good*","msgtype":"m.text"},"ts":1376598735000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"man, i really should fix the stack of open elements to not grow downwards","msgtype":"m.text"},"ts":1376599682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's such a dumb thing","msgtype":"m.text"},"ts":1376599685000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1376600277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: glad you like it :) It needs a good overhaul though. I'll probably be giving it a good scrubbing at the end of the month (notably IDL and docs)","msgtype":"m.text"},"ts":1376600824000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: ya docs would be the most helpful, i discovered most things i needed by looking through the source and the templates","msgtype":"m.text"},"ts":1376600871000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"ouch, sorry to hear that","msgtype":"m.text"},"ts":1376600888000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: so far the undocumented features i used include class=\"issue\" and overrideCopyright","msgtype":"m.text"},"ts":1376600892000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"there's http://dev.w3.org/2009/dap/ReSpec.js/documentation.html but it's outdated","msgtype":"m.text"},"ts":1376600898000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I have a week cordoned off just to work on the docs","msgtype":"m.text"},"ts":1376600912000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I'm off to bed now, but if you have suggestions feel free to file issues, I'll be happy to take them","msgtype":"m.text"},"ts":1376600956000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"awesome, will do!","msgtype":"m.text"},"ts":1376600970000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins, Chrome implements CSS Variables, right?","msgtype":"m.text"},"ts":1376604724000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins, I can't seem to find how to turn it on or get it to work","msgtype":"m.text"},"ts":1376604736000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yes, but prefixed and behind a flag. ;_;","msgtype":"m.text"},"ts":1376604738000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it's in \"Experimental CSS Features\"","msgtype":"m.text"},"ts":1376604746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, mayb e Enable experimental Web Platform features?","msgtype":"m.text"},"ts":1376604789000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Sure, maybe.","msgtype":"m.text"},"ts":1376604795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"can't find Experimental CSS Features in about:flags","msgtype":"m.text"},"ts":1376604797000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"TabAtkins, that did it, thanks :)","msgtype":"m.text"},"ts":1376604830000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"(works without a prefix though, so that's good)","msgtype":"m.text"},"ts":1376604892000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Oh, we changed it! Nice!","msgtype":"m.text"},"ts":1376604909000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, webkit/blink impl of setProperty(prop, val, '') doesn't unset !important, instead it does nothing if prop is currently important","msgtype":"m.text"},"ts":1376605716000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"you have to call removeProperty first if you want to remove the important","msgtype":"m.text"},"ts":1376605843000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"IE10 does that as well","msgtype":"m.text"},"ts":1376606025000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"man, nsAttrAndChildArray is not deeply documented","msgtype":"m.text"},"ts":1376606562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at least, not as far as i can find","msgtype":"m.text"},"ts":1376606573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: \"Does nothing\" meaning the call is silently ignored?","msgtype":"m.text"},"ts":1376607171000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes","msgtype":"m.text"},"ts":1376607188000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Interesting.","msgtype":"m.text"},"ts":1376607193000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i guess conceptually like a declarative not-important decl","msgtype":"m.text"},"ts":1376607233000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"which might be desirable","msgtype":"m.text"},"ts":1376607273000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can't think of a way in which it would be desirable. ^_^","msgtype":"m.text"},"ts":1376607297000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"let's say you write your css and you want something to *not* change style because of some js library that changes styles of things, so you put !important","msgtype":"m.text"},"ts":1376607401000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"If people could reply to my IDNA email (you know who), that'd be great... I think for now I'll go with referencing IDNA 2003 and overriding the Unicode version as well as making it crystal clear IDNA 2008 did not obsolete IDNA 2003 for the purposes of the URL Standard...","msgtype":"m.text"},"ts":1376609634000,"senderName":"annevk","senderId":"annevk@irc"}
]