[
{"content":{"body":"terinjokes: yeah, IMO conversions should throw; we've been adding a few tests for that.","msgtype":"m.text"},"ts":1496709008000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That said symbols should maybe get a special exception?","msgtype":"m.text"},"ts":1496709029000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: as a user, i would be a tad surprised by console.log throwing","msgtype":"m.text"},"ts":1496709238000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"I mean, would you be surprised if the argument was { toString() { throw x; } }?","msgtype":"m.text"},"ts":1496709289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i think this goes back to the conversations about if console logging is observable","msgtype":"m.text"},"ts":1496709319000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"i don't remember the resolution to those","msgtype":"m.text"},"ts":1496709352000,"senderName":"terinjokes","senderId":"terinjokes@irc"},
{"content":{"body":"How do you rename things on MDN? https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs","msgtype":"m.text"},"ts":1496785692000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: There's an \"Edit Page Title\" right under the page title when you're editting.","msgtype":"m.text"},"ts":1496785751000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: thank you.... -_-","msgtype":"m.text"},"ts":1496785772000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"^_^","msgtype":"m.text"},"ts":1496785781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hello, I just noticed that some types of input elements (like `input[type=number]`) do not provide selectionStart/selectionEnd getters (and related methods/properties).)","msgtype":"m.text"},"ts":1496788281000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"There's Bugzilla issue on the topic, closed as wontfix because the W3C spec doesn't mention that functionality for type=number... It would be nice to have those though, for UA whose widgets are plain text inputs that can be selected.","msgtype":"m.text"},"ts":1496788427000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Should I open an issue at https://github.com/whatwg/dom, or is it a lost cause (if so, I'd love to know why).","msgtype":"m.text"},"ts":1496788515000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"They're not provided because type=number/etc don't necessarily have text-based input; there's no guarantee that a selection can even exist.","msgtype":"m.text"},"ts":1496789776000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it should be mandatory that they don't have text-based input. I hate entering dates and stuff on mobile browsers without the keypad UI :<","msgtype":"m.text"},"ts":1496789836000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins, That was my guess, but it would be nice for UAs that do implement them as text fields to provide them (be them noops on other platforms).","msgtype":"m.text"},"ts":1496790213000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"UAs shouldn't do that in the first place, and having APIs that work differently like that encourages bad design - it's easy to test on the one browser you usually use, and not realize you have a broken site for someone using another browser.","msgtype":"m.text"},"ts":1496790288000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(By \"shouldn't do that\", I mean \"provide text-based input\"; like caitp said, giving better input methods is *way* better for the user.)","msgtype":"m.text"},"ts":1496790321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My current problem is: I have a client that wants me to emulate `maxLength` on an input[type=number] field. It can be done in JS, except for taking care of selections.","msgtype":"m.text"},"ts":1496790352000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"If the field has reached the limit, you can't select some of it to type over.","msgtype":"m.text"},"ts":1496790419000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"What would you suggest as a better input method for numbers on devices with a physical keyboard?","msgtype":"m.text"},"ts":1496790496000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"pygy: you can do max=\"999\"","msgtype":"m.text"},"ts":1496790532000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pygy: a better input method is e.g. a keypad (with no selection allowed)","msgtype":"m.text"},"ts":1496790553000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That won't limit the text size","msgtype":"m.text"},"ts":1496790567000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Instead of preventing typing, just show a validation message if the .valueAsNumber is too large?","msgtype":"m.text"},"ts":1496790570000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yes it will...","msgtype":"m.text"},"ts":1496790571000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It will limit it to at most 3","msgtype":"m.text"},"ts":1496790576000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The field will be marked as invalid, but you can type more http://jsbin.com/kalijiridi/edit?html,output","msgtype":"m.text"},"ts":1496790669000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Sure, yeah, that's what I meant","msgtype":"m.text"},"ts":1496790693000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"You can never stop people from typing more, even with maxlength=\"\"","msgtype":"m.text"},"ts":1496790698000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But maxlength doesn't work for numbers","msgtype":"m.text"},"ts":1496790738000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"(Well, depends on the browser UI, but again, you're using browser UI, the browser gets to make the decisions.)","msgtype":"m.text"},"ts":1496790739000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Indeed, you're supposed to use max=\"\" instead for numbers","msgtype":"m.text"},"ts":1496790758000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Are we going 'round in circles?","msgtype":"m.text"},"ts":1496790783000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Yeah, seems like","msgtype":"m.text"},"ts":1496790787000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maxlength=\"\" is not a guarantee that you can't type longer. Several mobile browsers just make the field invalid, I believe","msgtype":"m.text"},"ts":1496790803000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Around a hole in the spec?","msgtype":"m.text"},"ts":1496790804000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"The spec doesn't prescribe UI","msgtype":"m.text"},"ts":1496790828000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So this cannot be a problem with the spec","msgtype":"m.text"},"ts":1496790834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It is valid per the spec for input type=\"number\" to accept the string \"nine hundred and ninety nine\"","msgtype":"m.text"},"ts":1496790852000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or perhaps more realistically, 三百五","msgtype":"m.text"},"ts":1496790886000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The hole is the lack of support for selections in text fields","msgtype":"m.text"},"ts":1496790899000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"How would you \"select\" a numeric keypad?","msgtype":"m.text"},"ts":1496790911000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's not a text field","msgtype":"m.text"},"ts":1496790915000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you want a text field, use input type=\"text\"","msgtype":"m.text"},"ts":1496790920000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Another valid UI is a dial","msgtype":"m.text"},"ts":1496790927000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If the UA falls back on a text field, provide selction-related properties/methods.","msgtype":"m.text"},"ts":1496790931000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Noop out otherwise","msgtype":"m.text"},"ts":1496790936000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"As explained above, that doesn't work because of cross-browser issues","msgtype":"m.text"},"ts":1496790946000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What wouldn't work?","msgtype":"m.text"},"ts":1496790974000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"19:04:48 <TabAtkins> UAs shouldn't do that in the first place, and having APIs that work differently like that encourages bad design - it's easy to test on the one browser you usually use, and not realize you have a broken site for someone using another browser.","msgtype":"m.text"},"ts":1496790983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(having APIs that work differently depending on platform, like you suggest with your \"if... noop out otherwise\")","msgtype":"m.text"},"ts":1496791026000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's also valid, in particular, to type \"00009\", which will contain the numeric value 9, and send \"9\" when submitted.","msgtype":"m.text"},"ts":1496791054000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There's no reason to prevent people from typing that if it's a number.","msgtype":"m.text"},"ts":1496791068000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If it's not a number, but just a string that only contains digits, then you want to use type=text and inputmode=digits, if I recall the attribute value correctly.","msgtype":"m.text"},"ts":1496791099000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And then you can just use maxlength like normal.","msgtype":"m.text"},"ts":1496791107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, if your goal is to limit people to e.g. between 0 and 999, trying some maxlength=\"3\" equivalent will fail badly on 三千 (=3000)","msgtype":"m.text"},"ts":1496791128000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Maybe that can be helpful in convincing your client :)","msgtype":"m.text"},"ts":1496791180000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll see how `inputmode` gels with the accessibility team, thanks. The site is French/English only... Arabic numbers only.","msgtype":"m.text"},"ts":1496791189000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Sure but lots of people visit French/English sites from other-language phones or computer OSs, which is what input type=\"number\" will care about (the OS's settings)","msgtype":"m.text"},"ts":1496791299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Positive integers... So I'm already filtering out non-digits with JS. Those are weird requirements, I agree... I'm several steps removed from the people who make those decisions, so it's not easy to argue...","msgtype":"m.text"},"ts":1496791327000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Heh, yeah, I've been there...","msgtype":"m.text"},"ts":1496791337000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"All I can say is HTML designed min/max for this use case, so hopefully that'll work for those folks... if not then they probably don't want an actual number input, but a text input with some restrictions, yeah.","msgtype":"m.text"},"ts":1496791382000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's an insurance site, to order insurance products in Canada.","msgtype":"m.text"},"ts":1496791382000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"I hear Canada has a lot of Chinese expats","msgtype":"m.text"},"ts":1496791397000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What's the actual \"number\" you're putting in?","msgtype":"m.text"},"ts":1496791498000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic, truth, i am one","msgtype":"m.text"},"ts":1496791523000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"Again, is it a real number, or just a string that's limited to digits? (That is, is doing math on the value meaningful, or is it just an identifier?)","msgtype":"m.text"},"ts":1496791528000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"vancouver is dubbed as little Hong Kong","msgtype":"m.text"},"ts":1496791533000,"senderName":"KiChjang","senderId":"KiChjang@irc"},
{"content":{"body":"Money amounts.","msgtype":"m.text"},"ts":1496791545000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Used either to for comparison, or to be sent over the network (as floats, yuck)","msgtype":"m.text"},"ts":1496791613000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Okay, so then yeah, just use <input type=number max=999> or whatever.  That's literally all you need.","msgtype":"m.text"},"ts":1496791642000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Remember that you have to do validation on the value on the server side, too - there's no way to prevent the client from sending whatever random data it wants.)","msgtype":"m.text"},"ts":1496791663000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I know, the server is none of my business. All I have is a schema, and an endpoint.","msgtype":"m.text"},"ts":1496791702000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Also: um, you might want to kick it up the chain that representing money as floats can sometimes have legal consequences when pennies are added or lost.  They should be integers representing cents, or whatever fraction of cents you're legally required to work in.","msgtype":"m.text"},"ts":1496791727000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I already did","msgtype":"m.text"},"ts":1496791760000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"to no avail","msgtype":"m.text"},"ts":1496791777000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"I asked for amounts in cents, as integers, it fell on deaf ears.","msgtype":"m.text"},"ts":1496791823000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"The server sends non-integers amounts, and I convert them immediately to integer cents amounts","msgtype":"m.text"},"ts":1496791913000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Thanks for the discussion guys :-) `input[inputmode=numeric]` is the actual value (which isn't reflected as poperty on the element)","msgtype":"m.text"},"ts":1496792552000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Well \"numeric\" is the value, and \"inputmode\" isn't reflected... the previous sentence didn't make any sense :-)","msgtype":"m.text"},"ts":1496792732000,"senderName":"pygy","senderId":"pygy@irc"},
{"content":{"body":"Bye","msgtype":"m.text"},"ts":1496792742000,"senderName":"pygy","senderId":"pygy@irc"}
]