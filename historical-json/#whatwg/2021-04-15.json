[
{"content":{"body":"yoav: noamr: I was looking at https://github.com/w3c/resource-timing/pull/266/files and noticed \"<<<<<<< HEAD\" in there","msgtype":"m.text"},"ts":1618467011000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oops, fixing","msgtype":"m.text"},"ts":1618467085000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"So is transferSize the only place where we expose something is in the cache? I guess it's less problematic now we have partitioned caches, but it still doesn't seem ideal.","msgtype":"m.text"},"ts":1618467144000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not a fan of that either, but it's a reflection of current implementations. IMO it should be more explicit","msgtype":"m.text"},"ts":1618467333000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"there are a few metrics in resource/navigation timing are used to extrapolate information like \"cache mode\" and \"total worker time\" implicitly, I think one of the next challenges for performance WG, now that the models are beginning to be integrated with HTML/FETCH, is to define them more explicitly.","msgtype":"m.text"},"ts":1618467474000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"yoav: https://github.com/w3c/resource-timing/pull/270 fixes the stray <<< thingy","msgtype":"m.text"},"ts":1618467521000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: in the meantime, when you get a chance, https://github.com/whatwg/fetch/pull/1202 is ready for another look, and I'm trying to understand what you mean in https://github.com/whatwg/xhr/pull/319#discussion_r612452423 :)","msgtype":"m.text"},"ts":1618467616000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"RE cache exposure, it's been an explicit use case. I agree that a more direct boolean would be nicer (or enum to cover the case of revalidations)","msgtype":"m.text"},"ts":1618468620000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"The input we got from security folks over the years is that it can already be considered exposed (hence cache partitioning)","msgtype":"m.text"},"ts":1618468668000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I guess that's true, though there was never interest to have response.fromCache somehow","msgtype":"m.text"},"ts":1618480752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: hola, reminding you re. https://github.com/w3c/ServiceWorker/pull/1575 when you get a chance","msgtype":"m.text"},"ts":1618483812000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: in reverting responseObject -> response you also reverted actual responseObject vars","msgtype":"m.text"},"ts":1618484663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: \"Let <var>timingInfo</var> be <var>response</var>'s <a for=response>timing info</a>.\" can also be removed now","msgtype":"m.text"},"ts":1618484706000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: cheers, I'll do that now","msgtype":"m.text"},"ts":1618486330000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: ok!","msgtype":"m.text"},"ts":1618486643000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: fixed","msgtype":"m.text"},"ts":1618488981000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I still see the unused timingInfo","msgtype":"m.text"},"ts":1618489784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: done!","msgtype":"m.text"},"ts":1618490310000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: thanks! changes applied, ready for another round (with a TODO, since finishing this would depend on a FETCH change)","msgtype":"m.text"},"ts":1618491685000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: one minor nit, but LGTM. I guess it makes sense to wait until the fetch PR is ready, then remove that comment before merging?","msgtype":"m.text"},"ts":1618491862000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the TODO is there because it's a circular dependency... we need this to be in as it contains the struct definition, in order to pass the FETCH PR","msgtype":"m.text"},"ts":1618491923000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"(in lieu of \"forward declarations\" in specs)","msgtype":"m.text"},"ts":1618491942000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"https://github.com/w3c/ServiceWorker/pull/1575#discussion_r612402054","msgtype":"m.text"},"ts":1618491998000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: wasn't the idea to copy-and-paste the struct into its own PR?","msgtype":"m.text"},"ts":1618492037000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would work","msgtype":"m.text"},"ts":1618492056000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"noamr: then merge that, then merge the Fetch bits, then this one","msgtype":"m.text"},"ts":1618492058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I can do that if that's better than putting the \"associate\" part in a TODO","msgtype":"m.text"},"ts":1618492090000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"It would create cleaner history","msgtype":"m.text"},"ts":1618492121000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"gotcha. on it","msgtype":"m.text"},"ts":1618492139000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"I'll merge that new PR once it lands","msgtype":"m.text"},"ts":1618492315000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"noamr: can you join the service worker group for ipr?","msgtype":"m.text"},"ts":1618492378000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"https://labs.w3.org/repo-manager/pr/id/w3c/ServiceWorker/1581","msgtype":"m.text"},"ts":1618492385000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1618492414000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"sorry about the churn here","msgtype":"m.text"},"ts":1618492424000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea I'm used to it :) no problem","msgtype":"m.text"},"ts":1618492506000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"Domenic: so part of my confusion reading OP https://github.com/whatwg/html/issues/6509#issue-835244786 is that _host_ is not defined","msgtype":"m.text"},"ts":1618495406000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm that is confusing, what did I mean...","msgtype":"m.text"},"ts":1618495454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: I think it's \"Let host be the result of parsing hostSuffixString.\"","msgtype":"m.text"},"ts":1618495559000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1618495576000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i.e. I think this is meant to replace step 4","msgtype":"m.text"},"ts":1618495580000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hmm, but this doesn't seem to deal with the IP address scenario at all","msgtype":"m.text"},"ts":1618495960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: at least the current text returns true if are on an IP address and you set document.domain to the same IP address","msgtype":"m.text"},"ts":1618496010000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm yeah. Can we just keep 4.1? I dunno, this was just sleevi hacking something together over DM, we should be more rigorous as you are being...","msgtype":"m.text"},"ts":1618496023000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I pushed it forward a fair bit, but I'd like sleevi to give me more examples :-)","msgtype":"m.text"},"ts":1618498612000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We can try, although I don't think he works on this stuff these days so it's mostly a question of if we can nerd snipe him :)","msgtype":"m.text"},"ts":1618498668000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, it seems that PSL is largely unowned, which isn't great","msgtype":"m.text"},"ts":1618498833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've been thinking about how to put the PSL on firmer ground lately","msgtype":"m.text"},"ts":1618499867000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"we could follow the WPT model and stand up some lightweight governance etc, and get each browser vendor to put some engineering time toward it","msgtype":"m.text"},"ts":1618499924000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"though ultimately the PSL is basically a registry, so maybe we should treat it as such and stand it up as a registry at W3C, IANA, or here at the WHATWG","msgtype":"m.text"},"ts":1618499955000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"I know singer has been trying to improve W3C process around registries; I dunno how far along that is though","msgtype":"m.text"},"ts":1618499979000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: it's somewhat unique in that it needs to be ingested by browsers directly, but yeah","msgtype":"m.text"},"ts":1618500941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: tobie: I think PR preview is having problems (not wattsi-server) since it's happening for Bikeshed specs, e.g. https://github.com/whatwg/dom/pull/969","msgtype":"m.text"},"ts":1618506879000,"senderName":"Domenic","senderId":"Domenic@irc"}
]