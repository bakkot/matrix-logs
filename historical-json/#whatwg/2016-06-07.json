[
{"content":{"body":"Domenic: in streams section 3.9.5 (ReadableStreamDefaultControllerEnqueue), does step 5.d.ii mean to rethrow the exception?  I'm not really familiar with the \"abrupt cancellation\" terminology","msgtype":"m.text"},"ts":1465259168000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: woops... mean step 5.b.ii.2","msgtype":"m.text"},"ts":1465259196000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"or I guess its the same usage there","msgtype":"m.text"},"ts":1465259205000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yep, that's the idea.","msgtype":"m.text"},"ts":1465259855000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I thought I was finally starting to understand spec language... and then I have to go learn ES spec language :-)","msgtype":"m.text"},"ts":1465259880000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: it builds character ;)","msgtype":"m.text"},"ts":1465259917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it builds something","msgtype":"m.text"},"ts":1465259927000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"what was the exact reason why Object.observe brought down?","msgtype":"m.text"},"ts":1465275157000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: https://esdiscuss.org/topic/an-update-on-object-observe","msgtype":"m.text"},"ts":1465276301000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Thanks MikeSmith","msgtype":"m.text"},"ts":1465276659000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"hallvors, ping","msgtype":"m.text"},"ts":1465284529000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: pong","msgtype":"m.text"},"ts":1465284563000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors, trying to figure out where the spec backs http://w3c-test.org/XMLHttpRequest/send-content-type-charset.htm","msgtype":"m.text"},"ts":1465284582000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Especially the \"charset given but wrong, fix it\" ones","msgtype":"m.text"},"ts":1465284592000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Let me investigate a bit - we may have to ping annevk too, I think several of those assertations were written by him originally","msgtype":"m.text"},"ts":1465284696000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Ms2ger: anything not backed by step 4 of https://xhr.spec.whatwg.org/#the-send()-method is likely wrong","msgtype":"m.text"},"ts":1465284765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh wait","msgtype":"m.text"},"ts":1465284788000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: it seems to be testing that from skimming it and those requirements might well have been tweaked a little bit since I wrote that test (or part of it)","msgtype":"m.text"},"ts":1465284791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, I seem to have missed the last paragraph","msgtype":"m.text"},"ts":1465284821000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1465284842000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I was about to point to step 4, last para too :)","msgtype":"m.text"},"ts":1465284891000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Though I'm not sure that requires the exact string values in the test","msgtype":"m.text"},"ts":1465284926000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"notes that even the test's meta data is correct","msgtype":"m.emote"},"ts":1465284934000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"for once :) (lots of meta data is outdated and I have ambitious plans for fixing that)","msgtype":"m.text"},"ts":1465284966000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Someone want to reply to https://github.com/w3c/web-platform-tests/issues/3121?","msgtype":"m.text"},"ts":1465285028000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: about experimenting with https://github.com/whatwg/html/issues/1351 “Remove parse error for dashes in comments”, do we want to experiment with also dropping the warning “The document is not mappable to XML 1.0 due to two consecutive hyphens in a comment.”, or do you want to continue to emit that?","msgtype":"m.text"},"ts":1465285142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk - I mostly agree with the 3121 issue, but I think you defended the test when I brought it up earlier (\"be strict in what you send\" etc). Leaving to you to reply ;)","msgtype":"m.text"},"ts":1465285254000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"MikeSmith: i think we should keep that, at least for now. if the people using the validator don't care about those warnings then all of them should be turned off by default, not just for -- in comments","msgtype":"m.text"},"ts":1465285281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1465285292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"imho","msgtype":"m.text"},"ts":1465285297000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1465285303000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: OK so FYI take a look at the adjustDoubleHyphenAndAppendToStrBufAndErr function at https://github.com/validator/htmlparser/blob/master/src/nu/validator/htmlparser/impl/Tokenizer.java#L922","msgtype":"m.text"},"ts":1465285326000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and https://github.com/validator/htmlparser/blob/master/src/nu/validator/htmlparser/impl/Tokenizer.java#L476","msgtype":"m.text"},"ts":1465285405000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess by default it does ALTER_INFOSET","msgtype":"m.text"},"ts":1465285416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah wait though, if that were true it wouldn’t be emitting the warning","msgtype":"m.text"},"ts":1465285448000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will need to look at the checker code further to see what it is setting","msgtype":"m.text"},"ts":1465285496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe the validator doesn't use the parser's default","msgtype":"m.text"},"ts":1465285527000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah I think it must not","msgtype":"m.text"},"ts":1465285536000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, the simplest change would of course be just to drop the errConsecutiveHyphens(); call at line 924","msgtype":"m.text"},"ts":1465285542000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Ms2ger: hallvors: I left a reply","msgtype":"m.text"},"ts":1465285554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: but in looking at that code, I could also just move the errConsecutiveHyphens() call into the ALLOW and FATAL cases","msgtype":"m.text"},"ts":1465285608000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that for ALTER_INFOSET case it would just silently alter the infoset, with no error and no warning","msgtype":"m.text"},"ts":1465285651000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: don't we still want to use ALLOW in the checker?","msgtype":"m.text"},"ts":1465285688000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I guess in the context of the checker it doesn’t really matter much since nothing actually consumes the parse tree it creates","msgtype":"m.text"},"ts":1465285692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"to get the warning if nothing else","msgtype":"m.text"},"ts":1465285720000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1465285724000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so that is what I will do for not","msgtype":"m.text"},"ts":1465285743000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*for now","msgtype":"m.text"},"ts":1465285746000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and push it to https://checker.html5.org/","msgtype":"m.text"},"ts":1465285754000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what about <!-- <!-- -->","msgtype":"m.text"},"ts":1465285813000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://github.com/w3c/webcomponents/issues/496#issuecomment-223529711 o_O","msgtype":"m.text"},"ts":1465285875000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: https://github.com/validator/htmlparser/blob/master/src/nu/validator/htmlparser/impl/Tokenizer.java#L2602 was also moved to be an error when seeing \">\" in COMMENT_END_BANG instead","msgtype":"m.text"},"ts":1465286211000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what about it? we want to try to dropping that error too?","msgtype":"m.text"},"ts":1465286323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: it's a new error, that won't be reported otherwise","msgtype":"m.text"},"ts":1465286373000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1465286403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"we we want to *add* new reporting for it?","msgtype":"m.text"},"ts":1465286418000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks back that the issue discussion","msgtype":"m.emote"},"ts":1465286427000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: https://github.com/whatwg/html/pull/1356/commits/b4d672b4976740cea236f197cc340a066cf0ac6e","msgtype":"m.text"},"ts":1465286429000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/validator/htmlparser/blob/master/src/nu/validator/htmlparser/impl/Tokenizer.java#L2602 is for --! right?","msgtype":"m.text"},"ts":1465286696000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"how is that relevant?","msgtype":"m.text"},"ts":1465286702000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right. i suppose it's a separate thing but i changed it in the PR, because i didn't see any reason to disallow <!-- --! -->","msgtype":"m.text"},"ts":1465286813000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1465286911000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sorry this was not a one-line change :-)","msgtype":"m.text"},"ts":1465286933000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1465287306000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK will need to set aside more time to write it up","msgtype":"m.text"},"ts":1465287328000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"👍","msgtype":"m.text"},"ts":1465287356000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: https://fetch.spec.whatwg.org/#cors-preflight-fetch-0","msgtype":"m.text"},"ts":1465287963000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: from what it says there, if you have a header `content-type: x-pony`, which is not in accesscontrolallowheaders, it should error, yes?","msgtype":"m.text"},"ts":1465287997000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"because http://web-platform.test:8000/XMLHttpRequest/send-redirect-to-cors.htm seems to think otherwise?","msgtype":"m.text"},"ts":1465288031000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: yeah, that's not a CORS-safelisted request-header","msgtype":"m.text"},"ts":1465288074000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so is the test wrong? O.o","msgtype":"m.text"},"ts":1465288115000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"it somehow passes in firefox","msgtype":"m.text"},"ts":1465288124000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hold on","msgtype":"m.text"},"ts":1465288125000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: ok, not sure what's going on, this test should fail","msgtype":"m.text"},"ts":1465288220000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(it fails in servo, but not firefox)","msgtype":"m.text"},"ts":1465288240000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: looking at corsenabled.py I'm not sure why it should fail","msgtype":"m.text"},"ts":1465288291000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: as in?","msgtype":"m.text"},"ts":1465288323000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: we send a content-type: x-pony header with it","msgtype":"m.text"},"ts":1465288331000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so the preflight fetch should return a network error, since that's not an allowed header","msgtype":"m.text"},"ts":1465288354000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Oh yes, and it seems Firefox doesn't even issue a preflight here","msgtype":"m.text"},"ts":1465288374000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unless the network console cannot be trusted","msgtype":"m.text"},"ts":1465288383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I just assumed that the preflight isn't put in the network console","msgtype":"m.text"},"ts":1465288407000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I hope that's not true","msgtype":"m.text"},"ts":1465288509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, from the wptserve log -- it doesn't","msgtype":"m.text"},"ts":1465288510000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: it should be issuing a preflight, right?","msgtype":"m.text"},"ts":1465288521000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Yeah, I think so, otherwise you could use a redirect to circumvent preflights...","msgtype":"m.text"},"ts":1465288543000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Which seems to be what is happening here","msgtype":"m.text"},"ts":1465288554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1465288573000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"chrome fails these tests","msgtype":"m.text"},"ts":1465288581000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"but not the way servo fails","msgtype":"m.text"},"ts":1465288584000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Yeah, also in a weird way","msgtype":"m.text"},"ts":1465288594000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"curses redirects","msgtype":"m.emote"},"ts":1465288605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome, too, doesn't do preflights","msgtype":"m.text"},"ts":1465288609000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"brb filing bug on chrome to make tons of bounty monies","msgtype":"m.text"},"ts":1465288632000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"chrome doesn't preflight, but it *does* scrub the headers","msgtype":"m.text"},"ts":1465288672000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: can you file one against Firefox too and against wpt?","msgtype":"m.text"},"ts":1465288677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1465288686000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Not the best way to start the day","msgtype":"m.text"},"ts":1465288698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh :)","msgtype":"m.text"},"ts":1465288704000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"well, for once the failure isn't servo's fault :)","msgtype":"m.text"},"ts":1465288714000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: chrome runs wpt too, right?","msgtype":"m.text"},"ts":1465288730000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I'm not sure at what stage they are","msgtype":"m.text"},"ts":1465288750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: given that no browser does this properly, I assume this isn't a security bug (for firefox?)","msgtype":"m.text"},"ts":1465288769000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: it kinda is, but we just discussed it in public","msgtype":"m.text"},"ts":1465288793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: copy Jonas Sicking","msgtype":"m.text"},"ts":1465288806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1465288811000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/issues/3123","msgtype":"m.text"},"ts":1465289077000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"should we mark it an easy bug?","msgtype":"m.text"},"ts":1465289126000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: probably not, since we want to keep some variant of that test around","msgtype":"m.text"},"ts":1465289245000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: we just need to change the pass conditions","msgtype":"m.text"},"ts":1465289262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: and I guess we want a new test for what the old test actually wanted to test","msgtype":"m.text"},"ts":1465289273000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right, the current test should check for a network error","msgtype":"m.text"},"ts":1465289312000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: how do you recommend I write a testcase for this?","msgtype":"m.text"},"ts":1465289557000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: the existing testcase can be changed to invoke assert_unreached() from xhr.onload and test.done() from xhr.onerror","msgtype":"m.text"},"ts":1465289786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but that needs wpt","msgtype":"m.text"},"ts":1465289800000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I want to write one that doesn't need wpt","msgtype":"m.text"},"ts":1465289807000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"trying to write a netcat test case rn","msgtype":"m.text"},"ts":1465289813000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: what are you looking to test?","msgtype":"m.text"},"ts":1465289835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that the preflight doesn't happen","msgtype":"m.text"},"ts":1465289856000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"for the gecko/chrome bug","msgtype":"m.text"},"ts":1465289862000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: you could test that if a preflight did happen, the server would reply something bogus","msgtype":"m.text"},"ts":1465289909000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, now I'm not sure what's happening","msgtype":"m.text"},"ts":1465290495000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I am getting an OPTIONS request with http://manishearth.anapnea.net/tmp/test.html","msgtype":"m.text"},"ts":1465290506000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"I don't get one if there are no headers, but that's ok","msgtype":"m.text"},"ts":1465290536000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"on firefox, that is","msgtype":"m.text"},"ts":1465290546000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: what if you set Content-Type instead?","msgtype":"m.text"},"ts":1465290577000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no OPTIONS, only GET","msgtype":"m.text"},"ts":1465290709000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: there you go","msgtype":"m.text"},"ts":1465290723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: and without redirect?","msgtype":"m.text"},"ts":1465290728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: I guess maybe the check post-redirect is not the same check as normal, which would be pretty bad architecture","msgtype":"m.text"},"ts":1465290761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: both firefox and chrome skip OPTIONS when there are no strange headers, even on a direct XHR","msgtype":"m.text"},"ts":1465290827000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"and they replace POST with GET","msgtype":"m.text"},"ts":1465290836000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"in both cases","msgtype":"m.text"},"ts":1465290854000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"the only time I get OPTIONS is when I add a strange header","msgtype":"m.text"},"ts":1465290877000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"this happens even without redirects","msgtype":"m.text"},"ts":1465290903000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"cookies are scrubbed, too","msgtype":"m.text"},"ts":1465290925000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"So basically Firefox does not restrict Content-Type: unknown/type?","msgtype":"m.text"},"ts":1465290930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, not tried that","msgtype":"m.text"},"ts":1465290936000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Sure, no cookies is normal","msgtype":"m.text"},"ts":1465290939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Replacing POST with GET based on a redirect is normal","msgtype":"m.text"},"ts":1465290952000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's all per spec","msgtype":"m.text"},"ts":1465290958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, it does not restrict","msgtype":"m.text"},"ts":1465290972000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1465290978000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome just scrubs the content-type header if it's strange","msgtype":"m.text"},"ts":1465290983000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Pffff","msgtype":"m.text"},"ts":1465290999000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, chrome unconditionally scrubs that header","msgtype":"m.text"},"ts":1465291026000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: wait I goofed up","msgtype":"m.text"},"ts":1465291045000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hold on","msgtype":"m.text"},"ts":1465291047000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1465291067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"on direct POST, with content type text/plain","msgtype":"m.text"},"ts":1465291088000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"firefox keeps it a post","msgtype":"m.text"},"ts":1465291099000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"and keeps the content","msgtype":"m.text"},"ts":1465291104000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"if the content-type is strange, it gives an OPTIONS","msgtype":"m.text"},"ts":1465291129000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Okay, so only with a redirect?","msgtype":"m.text"},"ts":1465291140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"chrome has the same behavior for direct","msgtype":"m.text"},"ts":1465291163000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"on redirects","msgtype":"m.text"},"ts":1465291229000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"all POSTs become GETs","msgtype":"m.text"},"ts":1465291234000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"good content-types are let through","msgtype":"m.text"},"ts":1465291243000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"firefox lets through bad content-types","msgtype":"m.text"},"ts":1465291248000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"chrome scrubs them","msgtype":"m.text"},"ts":1465291252000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"So both those behaviors are wrong","msgtype":"m.text"},"ts":1465291285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but not dangerous","msgtype":"m.text"},"ts":1465291295000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"POST -> GET is fine, for 301/302 (not the others)","msgtype":"m.text"},"ts":1465291297000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why is not sending a preflight ok?","msgtype":"m.text"},"ts":1465291344000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: that part is not okay","msgtype":"m.text"},"ts":1465291376000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: even when there is a text/plain content type?","msgtype":"m.text"},"ts":1465291388000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: scrubbing is not okay either","msgtype":"m.text"},"ts":1465291388000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: text/plain is safelisted","msgtype":"m.text"},"ts":1465291403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, but spec-wise that check happens *after* the preflight, no?","msgtype":"m.text"},"ts":1465291417000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: no","msgtype":"m.text"},"ts":1465291428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the short-term fix for the test suite bug is to set headers allowed to *","msgtype":"m.text"},"ts":1465291445000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Manishearth: we check for safelisted request-headers and only if they're outside that range we preflight","msgtype":"m.text"},"ts":1465291460000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But given the details here we clearly need better tests","msgtype":"m.text"},"ts":1465291461000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1465291472000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so we can catch the implementations that are currently not quite doing the right thing","msgtype":"m.text"},"ts":1465291475000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"okay, so servo has a bug here too","msgtype":"m.text"},"ts":1465291477000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hallvors: that's not a good fix","msgtype":"m.text"},"ts":1465291480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you get a bug. you get a bug. everybodygetsabug!","msgtype":"m.text"},"ts":1465291489000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hallvors: first of all, * is a new feature for those headers so won't work","msgtype":"m.text"},"ts":1465291493000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah..so we're having this discussion because the spec is changing? Got it..","msgtype":"m.text"},"ts":1465291535000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: we could add \"content-type\" to the list, but apparently the preflight is not even happening, so we also need some tests that set other headers","msgtype":"m.text"},"ts":1465291541000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: noooo","msgtype":"m.text"},"ts":1465291546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: we're having this discussion because implementations have bugs with the spec as written before wildcarding became a thing for header names","msgtype":"m.text"},"ts":1465291575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: btw, where in the spec does it mention POST -> GET for redirects?","msgtype":"m.text"},"ts":1465291595000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"well, we need better tests - so we can use Manishearth's bug for that","msgtype":"m.text"},"ts":1465291603000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"wait no nv","msgtype":"m.text"},"ts":1465291604000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"nvm","msgtype":"m.text"},"ts":1465291606000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: in the HTTP-redirect section","msgtype":"m.text"},"ts":1465291639000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, found it","msgtype":"m.text"},"ts":1465291646000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: fairly recent change (HTTP calls it out a bit, but not normative enough)","msgtype":"m.text"},"ts":1465291662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"BTW to all in #whatwg - there's a request for more tests here, should be trivial to add: https://github.com/w3c/web-platform-tests/issues/3124 - would be great if someone could jump in and add stuff :)","msgtype":"m.text"},"ts":1465291670000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: yeah, there's even servo code handling that, wonder why it didn't get hit","msgtype":"m.text"},"ts":1465291712000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"wait, no, it *did* get hit","msgtype":"m.text"},"ts":1465291722000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1465291722000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: why are we nitpicky baout content-type, btw?","msgtype":"m.text"},"ts":1465292311000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"*about","msgtype":"m.text"},"ts":1465292316000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"there is no content anyway, that gets scrubbed","msgtype":"m.text"},"ts":1465292324000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"also, why only 301/302/303 for making the method GET?","msgtype":"m.text"},"ts":1465292397000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: same-origin policy violations for Content-Type was restricted to <form> historically","msgtype":"m.text"},"ts":1465292470000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1465292516000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: but form doesn't use fetch?","msgtype":"m.text"},"ts":1465292521000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: only 301/302 change POST to GET for historical reasons, mostly because browsers maybe mistakenly did that and sites relied on it","msgtype":"m.text"},"ts":1465292523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: 303 changes to GET always because that's just what it does","msgtype":"m.text"},"ts":1465292536000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what happens for the other redirect methods?","msgtype":"m.text"},"ts":1465292545000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"or are those the only 3 ?","msgtype":"m.text"},"ts":1465292549000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: <form> uses navigate which uses fetch, but it doesn't use \"cors\", it uses \"navigate\"","msgtype":"m.text"},"ts":1465292554000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, navigate uses fetch now?","msgtype":"m.text"},"ts":1465292564000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: 307/308 preserve the method","msgtype":"m.text"},"ts":1465292567000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: more or less","msgtype":"m.text"},"ts":1465292575000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what about script/link/etc?","msgtype":"m.text"},"ts":1465292588000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: there's a lot of work to be done still, hopefully over the summer","msgtype":"m.text"},"ts":1465292590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: yeah those all use Fetch","msgtype":"m.text"},"ts":1465292596000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh ok","msgtype":"m.text"},"ts":1465292598000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"oh, really?nice","msgtype":"m.text"},"ts":1465292601000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Yeah, that happened last year I think","msgtype":"m.text"},"ts":1465292613000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I saw some changes but wasn't sure if it was everywhere yet","msgtype":"m.text"},"ts":1465292626000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: another XHR question in https://bugzilla.mozilla.org/show_bug.cgi?id=918764 - about letters (not) allowed in script-set headers","msgtype":"m.text"},"ts":1465292722000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: there's a couple of spec issues on that","msgtype":"m.text"},"ts":1465292773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm just skimming bugmail - is RFC 7230 too strict for the web, or is the test misinterpreting it? If all browsers fail the test is probably wrong..","msgtype":"m.text"},"ts":1465292774000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: might be too strict","msgtype":"m.text"},"ts":1465292785000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"a few links in the bug report would be great :)","msgtype":"m.text"},"ts":1465292805000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1278493","msgtype":"m.text"},"ts":1465292877000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"hallvors: done","msgtype":"m.text"},"ts":1465293078000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: ta","msgtype":"m.text"},"ts":1465293095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: filed https://bugs.chromium.org/p/chromium/issues/detail?id=617902","msgtype":"m.text"},"ts":1465293122000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: thanks :)","msgtype":"m.text"},"ts":1465293252000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: more possibly buggy spec tests?","msgtype":"m.text"},"ts":1465294869000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: https://fetch.spec.whatwg.org/#concept-http-fetch","msgtype":"m.text"},"ts":1465294883000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"the 401 line","msgtype":"m.text"},"ts":1465294886000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"response is returned if request's credentials mode is not \"include\".","msgtype":"m.text"},"ts":1465294901000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"however","msgtype":"m.text"},"ts":1465294904000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"https://xhr.spec.whatwg.org/#the-send()-method","msgtype":"m.text"},"ts":1465294931000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"> If the withCredentials attribute value is true, \"include\", and \"same-origin\" otherwise.","msgtype":"m.text"},"ts":1465294958000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so by default the credentials mode is same origin","msgtype":"m.text"},"ts":1465294972000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"however, https://github.com/w3c/web-platform-tests/blob/master/XMLHttpRequest/send-authentication-competing-names-passwords.htm doesn't set withcredentials","msgtype":"m.text"},"ts":1465295067000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: perhaps the spec should say \"the cors flag is set AND credentials mode is not include\"","msgtype":"m.text"},"ts":1465295142000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"annevk: https://github.com/whatwg/fetch/issues/319","msgtype":"m.text"},"ts":1465295404000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"try-catch with async-await is a pain in the....","msgtype":"m.text"},"ts":1465296036000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Object.values but not give null values?","msgtype":"m.text"},"ts":1465296058000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Manishearth: why?","msgtype":"m.text"},"ts":1465297004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Manishearth: it says one of","msgtype":"m.text"},"ts":1465297017000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, will follow up in the issue","msgtype":"m.text"},"ts":1465298416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the spec needs fixing, right? I wasn't sure from your response","msgtype":"m.text"},"ts":1465298820000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"Manishearth: I think so","msgtype":"m.text"},"ts":1465299065000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so what does fetch(..., { token }) mean per ES6?","msgtype":"m.text"},"ts":1465306447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fetch(..., { token: token })","msgtype":"m.text"},"ts":1465307917000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: interesting","msgtype":"m.text"},"ts":1465307965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: does it take after the variable name?","msgtype":"m.text"},"ts":1465308125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I understand what you're asking, yes?","msgtype":"m.text"},"ts":1465308192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"It's just a shortcut. { x } is always shortcut for { x: x }","msgtype":"m.text"},"ts":1465308201000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1465308233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think at some point I learned about that and then never used it enough to remember","msgtype":"m.text"},"ts":1465308249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: How stable is the CE spec now?","msgtype":"m.text"},"ts":1465316208000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Is it ready to be implemented in Q3?","msgtype":"m.text"},"ts":1465316215000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah","msgtype":"m.text"},"ts":1465317302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I guess you run tip-of-tree bikeshed?","msgtype":"m.text"},"ts":1465317778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should probably update","msgtype":"m.emote"},"ts":1465317791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I git pull and bikeshed update before every commit...","msgtype":"m.text"},"ts":1465317825000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1465317835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://twitter.com/bergi_bergos/status/740193424209522688","msgtype":"m.text"},"ts":1465320390000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it just me or DOM uses CEReactions but doesn't include a reference to its definition?","msgtype":"m.text"},"ts":1465337652000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: yeah, https://github.com/tabatkins/bikeshed/issues/677","msgtype":"m.text"},"ts":1465338213000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Thanks for the link.","msgtype":"m.text"},"ts":1465338243000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"That's an easy fix, I should get on that one.","msgtype":"m.text"},"ts":1465338944000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"However, I just added support for getting the 100% accurate line number from a line!","msgtype":"m.text"},"ts":1465338975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just need to annotate every single die()/warn() call to pass the right info.","msgtype":"m.text"},"ts":1465338992000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"s/from a line/for an error/","msgtype":"m.text"},"ts":1465339044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]