[
{"content":{"body":"hey @Domenic - could you help me figure out the number and order of pulls and tests that we need in order to get this interface name changed?","msgtype":"m.text"},"ts":1584633990000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I'm happy to do whatever, but it feels like we are going in circles a little and while I'm sure we can work through it, I'm unsure how.  The changed `HTMLOrForeignObject` interfafce name isn't 'observeable', but the things that reference it are and have impacts. There seems to be confusion, at least for me, about how to resolve this appropriately... would appreciate any guidance","msgtype":"m.text"},"ts":1584634183000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: it sounds like you need to do a PR to change tabIndex's behavior on HTMLOrSVGElement first.","msgtype":"m.text"},"ts":1584634582000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so... first a pull that adds the tabIndex behaviors for links in MathML Core, very like the one reviewed earlier, right?","msgtype":"m.text"},"ts":1584634913000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: no, to HTML","msgtype":"m.text"},"ts":1584634928000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"bkardell: i.e. pull out https://github.com/whatwg/html/pull/5248/files#diff-36cd38f49b9afa08222c0dc9ebfe35ebR74621 into a separate one-line PR, with its own issue template, which can have its own implementer-support debate with rniwa.","msgtype":"m.text"},"ts":1584634978000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that is what I meant - that behavior is decided by mathml core, based on your questions","msgtype":"m.text"},"ts":1584635016000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"previously, it basically wasnt specified","msgtype":"m.text"},"ts":1584635025000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1584635038000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"will do... just wanted to make sure I didn't send that and someone say \"why this?\" and we work backwards back to where we were :)","msgtype":"m.text"},"ts":1584635077000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yeah, I mean, I prefer doing them together, but rniwa seems to feel pretty strongly, I guess because the tabIndex changes are more controversial than anticipated.","msgtype":"m.text"},"ts":1584635367000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(This makes me extra glad we didn't just do the renaming, and used it as an opportunity to get the appropriate scrutiny on the integration!)","msgtype":"m.text"},"ts":1584635394000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"shu: did you consider deleting SAB on Window only?","msgtype":"m.text"},"ts":1584636439000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That TC39 discussion sure is full of confusion btw","msgtype":"m.text"},"ts":1584636468000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it explained or written anywhere the reasons or motivations or benefits of HTML having tag omission built in?","msgtype":"m.text"},"ts":1584637694000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"Legacy of extremely old HTML parsers written to be permissive to badly-written HTML, where people thought that tags were formatting commands rather than tree-building instructions.","msgtype":"m.text"},"ts":1584637866000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"No, it was an SGML brevity feature","msgtype":"m.text"},"ts":1584638083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: deleting SAB on window only instead of?","msgtype":"m.text"},"ts":1584638157000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: we have many globals","msgtype":"m.text"},"ts":1584638175000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: Window, 3 worker variants, X worklet variants, some WebRTC thing I believe never shipped","msgtype":"m.text"},"ts":1584638241000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well i'm not proposing anything for what HTML should do. on 262 i think all we're gonna do is add a sentence that says SAB might not be there","msgtype":"m.text"},"ts":1584638243000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: oh workers, i see,","msgtype":"m.text"},"ts":1584638260000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: wait what? I thought V8 was proposing to not expose it?","msgtype":"m.text"},"ts":1584638277000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: in an HTML issue","msgtype":"m.text"},"ts":1584638299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we are. i'm sorry i misunderstood the globals things","msgtype":"m.text"},"ts":1584638336000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: the goal here is just backwards compat and i don't have data on what kinds of globals the feature detection code runs on in addition to window","msgtype":"m.text"},"ts":1584638384000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: i imagine workers would need removal as well","msgtype":"m.text"},"ts":1584638396000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: worklets, probably not? i just don't have the data though","msgtype":"m.text"},"ts":1584638406000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: I’m also very surprised Firefox has not had one report of something being broken","msgtype":"m.text"},"ts":1584638437000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: did you try Firefox Nightly on one of these sites?","msgtype":"m.text"},"ts":1584638474000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me see if i have the data to try","msgtype":"m.text"},"ts":1584638537000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: I don't think that's right? That's the <foo/> feature.","msgtype":"m.text"},"ts":1584638538000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"innovati is, I believe, talking about end-tag omission and html/head/body omission.","msgtype":"m.text"},"ts":1584638554000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Seems unlikely it would affect service workers","msgtype":"m.text"},"ts":1584638562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: DTDs encoded that kind of stuff iirc","msgtype":"m.text"},"ts":1584638578000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the thing is how do i actually check for breakage?","msgtype":"m.text"},"ts":1584638598000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"TabAtkins: it’s not new in HTML”5”","msgtype":"m.text"},"ts":1584638616000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"non sequitur? nobody mentioned it being new.","msgtype":"m.text"},"ts":1584638650000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"shu: dunno, an ad that stops working seems kinda okay","msgtype":"m.text"},"ts":1584638663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: up until 5 it was SGML-based","msgtype":"m.text"},"ts":1584638677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that is a not a product decision i can make, you know?","msgtype":"m.text"},"ts":1584638686000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: Ok, I have no idea what you think you're responding to.","msgtype":"m.text"},"ts":1584638785000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That tags being optional is related to bad parsers; it was by design","msgtype":"m.text"},"ts":1584638818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"end tags being optional was never an sgml feature","msgtype":"m.text"},"ts":1584638833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Some stuff is related to bad parsers, but not that","msgtype":"m.text"},"ts":1584638840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: that’s wrong","msgtype":"m.text"},"ts":1584638899000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"SGML had the ability to close a tag with a plain /, but you couoldn't completely omit it afaik","msgtype":"m.text"},"ts":1584638921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"p/her'es some test in a paragraph/","msgtype":"m.text"},"ts":1584638934000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"DTDs which afaik are SGML-based can express optional end tags for elements","msgtype":"m.text"},"ts":1584639025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah I recommend reading the syntax section on Wikipedia or some such","msgtype":"m.text"},"ts":1584639055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah indeed i'm wrong","msgtype":"m.text"},"ts":1584639072000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1584639074000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://en.wikipedia.org/wiki/Tag_omission","msgtype":"m.text"},"ts":1584639126000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SGML very muh had the design philosophy \"there should be at least three, and preferably more than three, increasingly non-obvious ways to do it\"","msgtype":"m.text"},"ts":1584639422000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: okay, i don't think there's much value in having SAB omitted from only a subset of globals in html","msgtype":"m.text"},"ts":1584639557000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: that would be an even weirder transitional state","msgtype":"m.text"},"ts":1584639581000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: mostly to enshrine the hopefully temporary nature of this","msgtype":"m.text"},"ts":1584639595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fair enough. though to me that enshrining is that you can workaround via wasm","msgtype":"m.text"},"ts":1584639627000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: i'll raise the question internally","msgtype":"m.text"},"ts":1584639649000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"about e.g. worklets","msgtype":"m.text"},"ts":1584639654000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: fair, I don’t care strongly, was mostly curious","msgtype":"m.text"},"ts":1584639664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: btw, do you know why Memory requires maximum when shared is true?","msgtype":"m.text"},"ts":1584639697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that i do not","msgtype":"m.text"},"ts":1584639704000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"i've heard that wasm memory have restrictions in general, like alignment and page boundaries and such","msgtype":"m.text"},"ts":1584639721000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: also, with the 262 “approach” I’m not really sure what HTML should say","msgtype":"m.text"},"ts":1584639965000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: prose I suppose whenever we create a global that indicates it?","msgtype":"m.text"},"ts":1584640004000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i think HTML is safe to go ahead with speccing it as a deletion","msgtype":"m.text"},"ts":1584640058000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"the 262 PR, AFAIU, is only to give allowance for being \"conformant\" in accordance with that paragraph, even if SAB isn't there, because there're different interpretations of \"should all globals be present to be considered conformant\"","msgtype":"m.text"},"ts":1584640102000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"which, tbqh for me, is a pedantic non-interesting question","msgtype":"m.text"},"ts":1584640111000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Yeah it doesn’t help","msgtype":"m.text"},"ts":1584640303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And the continued insistence that host equals implementation also continues to baffle me","msgtype":"m.text"},"ts":1584640360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, as an editor, i am happy to better define the terms up front","msgtype":"m.text"},"ts":1584640417000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: what's the language HTML uses to distinguish?","msgtype":"m.text"},"ts":1584640439000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"Indeed I did mean </foo> and not <foo /> but thanks very much for the replies! very insightful <3","msgtype":"m.text"},"ts":1584640627000,"senderName":"innovati","senderId":"innovati@irc"},
{"content":{"body":"shu: HTML directly targets user agents","msgtype":"m.text"},"ts":1584641007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: so implementation-defined is per-user-agent","msgtype":"m.text"},"ts":1584641029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: I would expect host-defined things to be consistent across user agents of a given host (unless the host makes it implementation-defined)","msgtype":"m.text"},"ts":1584641093000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: also, didn’t know you were, congrats","msgtype":"m.text"},"ts":1584641252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so the contention has always been that ecma262 can't distinguish implementation-specific and host (upstream spec)-specific observability. the reality is something like, editorially, host-defined means \"go read about it upstream\" and implementation-defined means \"good luck\"","msgtype":"m.text"},"ts":1584641295000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: thanks!","msgtype":"m.text"},"ts":1584641302000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"(Did notice you resolving one of the event loop integration issues which was nice to see!)","msgtype":"m.text"},"ts":1584641309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah sorry that took so long :/","msgtype":"m.text"},"ts":1584641317000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"shu: in that case make everything a hook and let upstream decide, but I don’t think that’s what implementers want","msgtype":"m.text"},"ts":1584641409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: I suspect implementers want some stuff to not be defined and are happy with upstream deciding the remainder","msgtype":"m.text"},"ts":1584641463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: correct","msgtype":"m.text"},"ts":1584641507000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"annevk: some things are legit impl-defined, like exponentiation, etc","msgtype":"m.text"},"ts":1584641523000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"NaN bits","msgtype":"m.text"},"ts":1584641525000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"dont forget those early sgml ideas are from when memory was extremely precious too ...","msgtype":"m.text"},"ts":1584641535000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"the reasoning of something like 'a paragraph, by definition, can not be inside another' so we can save some characters made some sense","msgtype":"m.text"},"ts":1584641597000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"waded into conversation late, with no good relevant input :-p ","msgtype":"m.emote"},"ts":1584641687000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Some, maybe, but the fact you’d need a DTD in order to parse, maybe not from that perspective","msgtype":"m.text"},"ts":1584644185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"shu: yeah, that matches my understanding; be great to slowly move things in that direction","msgtype":"m.text"},"ts":1584644461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bkardell: It did occur to me that if I'd said something mean about SGML in 2007 there would have immediately been a thread on xml-dev complaining about how WHATWG people don't understand CS or something, so compared to that…","msgtype":"m.text"},"ts":1584648558000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1584649434000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"shu: “Or is the confusion perhaps that providing concurrent access is a dynamic property, and not a host property?” Yup","msgtype":"m.text"},"ts":1584652330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah ha, let me ponder that and try to wordsmith","msgtype":"m.text"},"ts":1584652431000,"senderName":"shu","senderId":"shu@irc"},
{"content":{"body":"I mean, I guess it’s both","msgtype":"m.text"},"ts":1584652833000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk thoughts on changing it to \"Hosts are not required to provide the SharedArrayBuffer constructor *in cases where* they do not provide concurrent access to SharedArrayBuffer objects\"","msgtype":"m.text"},"ts":1584656997000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"(here \"in cases where\" has replaced \"if\")","msgtype":"m.text"},"ts":1584657003000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"unrelated: with CSP, does `strict-dynamic` allow inserting inline scripts?","msgtype":"m.text"},"ts":1584657008000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"chrome and firefox say yes, the spec (afaict) says no","msgtype":"m.text"},"ts":1584657017000,"senderName":"Bakkot","senderId":"Bakkot@irc"},
{"content":{"body":"I asked on the CSP issue tracker as well but I have lost all hope of getting responses to my questions there","msgtype":"m.text"},"ts":1584657023000,"senderName":"Bakkot","senderId":"Bakkot@irc"}
]