[
{"content":{"body":"I wonder how much webcomponents implementation slows down normal DOM operations and whether to have a fast path when page doesn't use webcomponents","msgtype":"m.text"},"ts":1525087428000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: custom elements, shadow trees, or both?","msgtype":"m.text"},"ts":1525090132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"both","msgtype":"m.text"},"ts":1525090151000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"CE adds CEReactions overhead, and element creation etc","msgtype":"m.text"},"ts":1525090164000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"shadow dom affects to event dispatch and such","msgtype":"m.text"},"ts":1525090171000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, https://w3c.github.io/touch-events/#dom-touchevent-targettouches may need some tweaks in shadow DOM case.","msgtype":"m.text"},"ts":1525091472000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"depends on what 'target' refers to","msgtype":"m.text"},"ts":1525091487000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: there's an issue on that","msgtype":"m.text"},"ts":1525095518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"there is?","msgtype":"m.text"},"ts":1525095581000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"there is that other touch event issue","msgtype":"m.text"},"ts":1525095587000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps they are the same issue","msgtype":"m.text"},"ts":1525095615000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I thought the other one was about retargeting touch.target in general","msgtype":"m.text"},"ts":1525095639000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but targetTouches needs to also change because of touch.target == event.target check","msgtype":"m.text"},"ts":1525095681000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's supposed to be for touches/targetTouches/changedTouches","msgtype":"m.text"},"ts":1525095695000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: the idea is to store all of those in a flat list (event's touch target list), which then gets modified as appropriate by the dispatch algorithm","msgtype":"m.text"},"ts":1525095752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: and then make sure touch.target grabs it from the correct location","msgtype":"m.text"},"ts":1525095773000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure. It is just that other lists don't need to be changed, only their touch objects target","msgtype":"m.text"},"ts":1525095799000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"targetTouches list itself needs to be modified","msgtype":"m.text"},"ts":1525095823000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh sorry","msgtype":"m.text"},"ts":1525095851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"touch events :/","msgtype":"m.text"},"ts":1525095869000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, not exactly simple API, and designed behind closed doors","msgtype":"m.text"},"ts":1525095975000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"falken: for the chrome-extension:// service workers... do you intercept cross-origin subresource requests to http/https?  and do you enforce CORS there?","msgtype":"m.text"},"ts":1525097609000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: do you think touch.targetTouches list object should be modified or replaced with a new one?","msgtype":"m.text"},"ts":1525100013000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"er, touchEvent.targetTouches","msgtype":"m.text"},"ts":1525100090000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I guess you need multiple lists otherwise you can hold onto one and then if you peek at the appropriate time it'd be similar to the window.event leak","msgtype":"m.text"},"ts":1525100159000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1525100180000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, I was thinking too to create a new list","msgtype":"m.text"},"ts":1525100186000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just looking what blink does","msgtype":"m.text"},"ts":1525100193000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I doubt they do anything at the moment","msgtype":"m.text"},"ts":1525100202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I think both Chrome and Safari haven't fixed these issues","msgtype":"m.text"},"ts":1525100215000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"blink does adjust touch objects","msgtype":"m.text"},"ts":1525100523000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"somehow","msgtype":"m.text"},"ts":1525100530000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"window.event leak is different","msgtype":"m.text"},"ts":1525103606000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is an object hanging on the global","msgtype":"m.text"},"ts":1525103614000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: I don't quite understand what's going on in https://github.com/w3c/web-platform-tests/pull/10712 . You're using createElementNS, but browsers still end up with Element and not HTMLAnchorElement?","msgtype":"m.text"},"ts":1525106999000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"What does that have to do with node document vs. global?","msgtype":"m.text"},"ts":1525107012000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: sure, but conceptually it’s similar; you hold onto some object; some code runs while the event is in the shadow tree, can you find a way in?","msgtype":"m.text"},"ts":1525107014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: how is that different to event itself?","msgtype":"m.text"},"ts":1525107037000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: they do not end up with Element?","msgtype":"m.text"},"ts":1525107045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: good point","msgtype":"m.text"},"ts":1525107054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: check http://w3c-test.org/submissions/10712/dom/nodes/Document-constructor.html","msgtype":"m.text"},"ts":1525107059000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you use your script editor to log a.constructor.name it's Element","msgtype":"m.text"},"ts":1525107072000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah, html -> xhtml","msgtype":"m.text"},"ts":1525107140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Namespaces are hard, can fix later","msgtype":"m.text"},"ts":1525107153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, OK. Then what is your comment about, node document vs. global?","msgtype":"m.text"},"ts":1525107160000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I draw the wrong conclusions thus far; I was thinking the URL stuff failed because it used the global to find a base URL and encoding","msgtype":"m.text"},"ts":1525107221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see, OK","msgtype":"m.text"},"ts":1525107242000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the output not being ASCII did not tip me off…","msgtype":"m.text"},"ts":1525107244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, thus the comment I just added about including a sanity check. The failure mode being \".href just gives you back what you set\" makes this test hard to reason about.","msgtype":"m.text"},"ts":1525107270000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Will do","msgtype":"m.text"},"ts":1525107338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I think you missed https://github.com/w3c/web-platform-tests/pull/10686 since it wasn't linked from a GitHub comment","msgtype":"m.text"},"ts":1525109461000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, and I had not removed the \"needs tests\" label","msgtype":"m.text"},"ts":1525109568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What's am I missing on TransformStream here? -> https://jsfiddle.net/gnumanth/yve4froq/","msgtype":"m.text"},"ts":1525118985000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"'pipeThrough' on 'ReadableStream': parameter 1's 'writable' property is undefined.","msgtype":"m.text"},"ts":1525119002000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"shouldn't TransformStream return both write and read streams?","msgtype":"m.text"},"ts":1525119190000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"/cc @Domenic ^^","msgtype":"m.text"},"ts":1525119196000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: you are passing a function, not a TransformStream.","msgtype":"m.text"},"ts":1525119282000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: duh! my bad, thanks, so it's rather `await resp.body.pipeThrough(markedTransform())` is there a way to `.pipeTo` console?","msgtype":"m.text"},"ts":1525119359000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"No, neat idea though.","msgtype":"m.text"},"ts":1525119371000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"pipeTo(new WritableStream({ write: console.log })) should probably work though","msgtype":"m.text"},"ts":1525119385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"agree, just for debugging purpose","msgtype":"m.text"},"ts":1525119524000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Domenic: could you tell me what `console.countReset()`produces in Edge (any output at all?, warning that no previous count exists?)","msgtype":"m.text"},"ts":1525119758000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it outputs \" null: 0\"","msgtype":"m.text"},"ts":1525119801000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If I call it again it outputs nothing","msgtype":"m.text"},"ts":1525119813000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This seems surprising","msgtype":"m.text"},"ts":1525119818000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Whoah really","msgtype":"m.text"},"ts":1525119820000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Uhhh now I've broken the console by reloading","msgtype":"m.text"},"ts":1525119848000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I guess reloading on about:blank does not make the Edge console happy","msgtype":"m.text"},"ts":1525119876000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Anyway same results on another random page","msgtype":"m.text"},"ts":1525119884000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://jsfiddle.net/gnumanth/yve4froq/3/ done :-)","msgtype":"m.text"},"ts":1525119897000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"we can't pipeTO dom yet, right? (unless we do that iframe trick thinge)","msgtype":"m.text"},"ts":1525119921000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Oh boy lol","msgtype":"m.text"},"ts":1525119960000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":":D","msgtype":"m.text"},"ts":1525119995000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Ok, I am leaning towards what all browsers are doing now for timeEnd with no timer (a warning)","msgtype":"m.text"},"ts":1525120018000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"is something wrong with `.pipeThrough(new TextDecoder())` ?","msgtype":"m.text"},"ts":1525120092000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Will see if we can get edge and node on board since they're the impls that have countReset as of now","msgtype":"m.text"},"ts":1525120134000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: would you mind calling it again with a label like \"a\" or something? Want to make sure the behavior you're seeing is not a default conversion issue, but an actual anomaly with the API","msgtype":"m.text"},"ts":1525120362000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: uhhh it appears that it's similar. The first time I call it it prints \" a: 0\". Future times it prints nothing.","msgtype":"m.text"},"ts":1525121704000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Gotcha, thanks. That's messy","msgtype":"m.text"},"ts":1525121723000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Domenic: RE you're console comment: ahh that's right, whoops I misunderstood. Hopefully we can get this specc'd that'll be nice :)","msgtype":"m.text"},"ts":1525122706000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Yeah current Edge behavior seems pretty bonkers","msgtype":"m.text"},"ts":1525122718000,"senderName":"Domenic","senderId":"Domenic@irc"}
]