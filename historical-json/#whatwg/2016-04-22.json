[
{"content":{"body":"Hmm, no event discussion ugh","msgtype":"m.text"},"ts":1461302820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh man","msgtype":"m.text"},"ts":1461307846000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was going to post a link to https://twitter.com/w3c/status/723167929395605509 here for the lulz","msgtype":"m.text"},"ts":1461307883000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I see Domenic and hsivonen are already way ahead of me and have favorited it","msgtype":"m.text"},"ts":1461307922000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I saw that, hsivonen make a point of retweeting those events","msgtype":"m.text"},"ts":1461307927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mkaes*","msgtype":"m.text"},"ts":1461307933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"makes*","msgtype":"m.text"},"ts":1461307935000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yt?","msgtype":"m.text"},"ts":1461313667000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah","msgtype":"m.text"},"ts":1461313682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: fixing non-dispatchy things","msgtype":"m.text"},"ts":1461313693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, so origins are shared and mutable now, right?","msgtype":"m.text"},"ts":1461313703000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: partially mutable, yes","msgtype":"m.text"},"ts":1461313718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: and yes, they are shared freely","msgtype":"m.text"},"ts":1461313733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"About that \"partially\" bit... It can't change opaque <-> tuple, or if it's a tuple, change scheme/host/port, correct?","msgtype":"m.text"},"ts":1461313771000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: if it's tuple, it can change domain, that's it","msgtype":"m.text"},"ts":1461313786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, great","msgtype":"m.text"},"ts":1461313799000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"scheme/host/port never change, opaque never changes, they never change from opaque to tuple","msgtype":"m.text"},"ts":1461313826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That's what I thought, thanks","msgtype":"m.text"},"ts":1461313842000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"If you file an issue I can add a note underneath that details these invariants","msgtype":"m.text"},"ts":1461313847000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"at some point","msgtype":"m.text"},"ts":1461313853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/whatwg/html/issues/1093","msgtype":"m.text"},"ts":1461313954000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what's the implication of a \"relevant mutation\" of an img element?","msgtype":"m.text"},"ts":1461317780000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"zcorpan should know","msgtype":"m.text"},"ts":1461317805000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: so I think that referrerpolicy should probably be part of relevant mutations","msgtype":"m.text"},"ts":1461317933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jochen__: it runs \"update the image data\"","msgtype":"m.text"},"ts":1461317949000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jochen__: it seems that the eventual request happens asynchronously at a later point so can be updated","msgtype":"m.text"},"ts":1461317953000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1461318525000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"i guess we should have a test for that","msgtype":"m.text"},"ts":1461318530000,"senderName":"jochen__","senderId":"jochen__@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1461319404000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan, fyi https://github.com/whatwg/html/issues/1099","msgtype":"m.text"},"ts":1461330189000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: so I guess I'll wait a bit with defining events until that issue is sorted","msgtype":"m.text"},"ts":1461333054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: it's a little annoying feedback from the others is slow since everything else seems to depend on it","msgtype":"m.text"},"ts":1461333079000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: e.g., I created a patch for <script> in HTML, but the \"load\" event it dispatches needs to be scoped...","msgtype":"m.text"},"ts":1461333099000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"that issue\"?","msgtype":"m.text"},"ts":1461333133000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"event dispatching in shadow DOM?","msgtype":"m.text"},"ts":1461333155000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: https://github.com/w3c/webcomponents/issues/485","msgtype":"m.text"},"ts":1461333166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yeah","msgtype":"m.text"},"ts":1461333169000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I wonder...this iframe + session history.","msgtype":"m.text"},"ts":1461333332000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if the top level page is navigated back() and then forward(), I assume the iframe in shadow dom will get a new session history","msgtype":"m.text"},"ts":1461333367000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(bfcache is different since that keeps the iframe alive)","msgtype":"m.text"},"ts":1461333402000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I'm not sure I know enough about it, but that sounds right if there's no cache","msgtype":"m.text"},"ts":1461333458000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and random note, I _think_ having separate session history for iframes should be easy to implement in Gecko. In xul:browser (which internally uses the same code as html:iframe), we support disablehistory attribute. If not set, session history is created for the contained browsing context (and its descendants)","msgtype":"m.text"},"ts":1461333658000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"JakeA: does chrome return workers as Client objects from matchAll() yet?  I wonder if that will confuse sites when we start doing that","msgtype":"m.text"},"ts":1461334928000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: not working on streams just yet?","msgtype":"m.text"},"ts":1461335402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I started this week, but then Matt Gaunt wrote a bug that has been ruining my day for a few days now","msgtype":"m.text"},"ts":1461335453000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ðŸ˜¢","msgtype":"m.text"},"ts":1461335629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Uh, how am I meant to animate a changing SVG path nowadays?","msgtype":"m.text"},"ts":1461335770000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I presume with JS?","msgtype":"m.text"},"ts":1461335782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wanderview: hm, not sure. It won't show up unless you pass an option to matchAll though right?","msgtype":"m.text"},"ts":1461335854000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"thats true","msgtype":"m.text"},"ts":1461335862000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ok, that seems safe","msgtype":"m.text"},"ts":1461335865000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#enumdef-clients-clienttype","msgtype":"m.text"},"ts":1461335897000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea... I forgot about that","msgtype":"m.text"},"ts":1461335913000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: the whole \"order by most recently focused\" thing might be interesting with workers in the mix","msgtype":"m.text"},"ts":1461335941000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: hmm, good point, we need to define that","msgtype":"m.text"},"ts":1461335982000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: like workers count as never being focused... so always at the end","msgtype":"m.text"},"ts":1461336001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"That's probably good enough tbh","msgtype":"m.text"},"ts":1461336038000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll write an issue","msgtype":"m.text"},"ts":1461336066000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/887","msgtype":"m.text"},"ts":1461342028000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Taa!","msgtype":"m.text"},"ts":1461342077000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"gsnedders: The 'd' property is in the process of being specced/implemented, so you can animate that.","msgtype":"m.text"},"ts":1461342133000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Now if you want to animate it *today*, SMIL still works everywhere but IE.","msgtype":"m.text"},"ts":1461342148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But if you want IE support, yeah, JS is the way to go.","msgtype":"m.text"},"ts":1461342155000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, to properly specify Link rel=serviceworker support in http response headers I'd like to somehow express that: for subresource requests the request was made from a secure context, and for non-subresource requests the resulting document/worker will be a secure context. For the subresource case I can just check if the requests client is a secure context. For workers the requests client is the new worker, so that same check should work. But for","msgtype":"m.text"},"ts":1461349459000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"navigations the settings object for which I care if it is a secure context doesn't exist yet until well after the fetch is complete...","msgtype":"m.text"},"ts":1461349460000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: err... why would we allow it on http response headers at all?  regardless of how it was initiated it could have be mitm'd, right?","msgtype":"m.text"},"ts":1461358043000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: the regular registration checks already ensure that various origins match, are all secure origins, http/https only etc.","msgtype":"m.text"},"ts":1461358154000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"so I meant http the protocol, not http vs https","msgtype":"m.text"},"ts":1461358172000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"oh, sorry","msgtype":"m.text"},"ts":1461358178000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins: this freakin' sucks","msgtype":"m.text"},"ts":1461358266000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"woot, I filed html issue 1111 :P (okay, not sure why that number amuses me)","msgtype":"m.text"},"ts":1461369272000,"senderName":"Mek","senderId":"Mek@irc"}
]