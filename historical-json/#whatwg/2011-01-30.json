[
{"content":{"body":"Hixie, why drop the syntax sugar for walking the keys of a Storage object?","msgtype":"m.text"},"ts":1296346320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Syntax sugar is nice.","msgtype":"m.text"},"ts":1296346321000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: because it only saved 4 characters anyway, it was inconsistent in setting and getting, only 1 browser out of 5 implemented it, and what the other browsers did is not compatible (they couldn't implement it without potentially breaking content that assumed their behaviour).","msgtype":"m.text"},"ts":1296356700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hi all","msgtype":"m.text"},"ts":1296383340000,"senderName":"Figaroo","senderId":"Figaroo@irc"},
{"content":{"body":"it seems adding an link with the 'tel:' attribute will annoy more users than it will help, as desktop browser that can't handle it still render the link clickable","msgtype":"m.text"},"ts":1296383460000,"senderName":"benjoffe","senderId":"benjoffe@irc"},
{"content":{"body":"that is, when a new line is created and overflows the element's height, the text should have an ellipsis","msgtype":"m.text"},"ts":1296383580000,"senderName":"sholmes","senderId":"sholmes@irc"},
{"content":{"body":"You know what I'm saying?","msgtype":"m.text"},"ts":1296383581000,"senderName":"sholmes","senderId":"sholmes@irc"},
{"content":{"body":"wait my last message didn't go through.","msgtype":"m.text"},"ts":1296383640000,"senderName":"sholmes","senderId":"sholmes@irc"},
{"content":{"body":"Is it possible to use text-overflow for text that overflows the height?","msgtype":"m.text"},"ts":1296383641000,"senderName":"sholmes","senderId":"sholmes@irc"},
{"content":{"body":"Opera has an extension for that ellipsis problem...","msgtype":"m.text"},"ts":1296393360000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"true? -> \"In HTML5, rel and rev are no-longer paired, and the rel attribute no longer describes the direction of a relationship. Microformats which use rev will need to use rel instead.\"","msgtype":"m.text"},"ts":1296407880000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"rel no longer has directionality, as in \"currentdoc rel href\" as a typed directed link is no longer the case, and rel is some generic relation between the two uris, such that \"A rel B\" and \"B rel A\" both hold as true","msgtype":"m.text"},"ts":1296407940000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3, there's no rev","msgtype":"m.text"},"ts":1296408840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, yup i know there's no rev, but what about directionality, and how do you actually do a reverse link?","msgtype":"m.text"},"ts":1296411480000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"well, no rev in the draft html 5 / living standard spec, well there is it's mentioned in a few places, but shouldn't be used, but when it is, it's catered for, in some places","msgtype":"m.text"},"ts":1296411540000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"rel is directional, and you can do a reverse link by using a rel keyword with the opposing meaning","msgtype":"m.text"},"ts":1296411541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"okay, so directionality is based on the property used in the rel ya?","msgtype":"m.text"},"ts":1296411542000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"Yes, that defines the directionality of the meaning","msgtype":"m.text"},"ts":1296411600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"e.g. rel=\"next\" says the linked page is next after the current one, and rel=\"prev\" says it's previous to the current one","msgtype":"m.text"},"ts":1296411660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so instead of rev=\"next\" you can use rel=\"prev\", etc","msgtype":"m.text"},"ts":1296411720000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"A next B infers B prev A","msgtype":"m.text"},"ts":1296411721000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"which is typically less confusing (people use rev wrongly about as often as they use it correctly)","msgtype":"m.text"},"ts":1296411722000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and some are bidirectional i assume? alternate for example?","msgtype":"m.text"},"ts":1296411840000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"what's the inverse of author?","msgtype":"m.text"},"ts":1296411900000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: The inverse of author is to add a rel=\"author\" back from the authored page to the author page.","msgtype":"m.text"},"ts":1296412020000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hmm.  I should have tested extend() with diacritics.","msgtype":"m.text"},"ts":1296412560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Thankfully Firefox is sane and treats the offsets as corresponding to characters (or maybe code units?) and not grapheme clusters.","msgtype":"m.text"},"ts":1296412740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But modify() still works on grapheme clusters.","msgtype":"m.text"},"ts":1296412741000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"At least with \"character\".","msgtype":"m.text"},"ts":1296412742000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems like it's all code units.","msgtype":"m.text"},"ts":1296412800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Okay, so in WebKit all Range boundary points have to fall on grapheme cluster boundaries, it looks like . . . that seems bad.","msgtype":"m.text"},"ts":1296413100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"goes with Firefox and the current spec on that point","msgtype":"m.emote"},"ts":1296413101000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Does \"grapheme cluster boundaries\" mean \"code unit boundaries after NFC normalisation\"?","msgtype":"m.text"},"ts":1296413880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1296413881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So, what should happen to cx.createImageData(\"1\", \"2\")?","msgtype":"m.text"},"ts":1296414060000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Philip`, no, because a character and its diacritics count as one grapheme cluster even if there's no composed form.","msgtype":"m.text"},"ts":1296414061000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"In fact, UAX29 defines everything in terms of NFD.","msgtype":"m.text"},"ts":1296414062000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger: It should teach API designers the foolishness of typed-based overloading in a dynamically-typed language","msgtype":"m.text"},"ts":1296414420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I was actually hoping you'd write a test ;)","msgtype":"m.text"},"ts":1296414421000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"and then it should do whatever the convoluted algorithms in WebIDL say it should do, unless WebIDL is wrong","msgtype":"m.text"},"ts":1296414422000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Maybe WebIDL just looks at the number of arguments and ignores the types?)","msgtype":"m.text"},"ts":1296414480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Hmm, no, it can't do that)","msgtype":"m.text"},"ts":1296414481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1296414482000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"webben, you you're saying that on an html page if I do \"A author B\" then it infers that \"B is author of A\" and if I do \"A author B\" on another page (the authors page) then it infers that \"A is author of B\"","msgtype":"m.text"},"ts":1296414900000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"just rewrote everything in DOM Range like \"If the position of new start relative to the context object's end is after\" to something like \"If new start is after the context object's end\"","msgtype":"m.emote"},"ts":1296415320000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I love the convention of making normal words mean magical stuff by making them hyperlinks.","msgtype":"m.text"},"ts":1296415380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sounds like you're one of those fancy modern programmers who likes using subroutines","msgtype":"m.text"},"ts":1296415500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't think they'll catch on - much better to be explicit and write everything out in full each time","msgtype":"m.emote"},"ts":1296415560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Who uses functions anyway?","msgtype":"m.text"},"ts":1296415860000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hsivonen: the validator could maybe give a clearer message if you put body stuff in head","msgtype":"m.text"},"ts":1296416700000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://validator.nu/?doc=http%3A%2F%2Fdevelopers.whatwg.org%2F","msgtype":"m.text"},"ts":1296416701000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: yeah. grammars strike again","msgtype":"m.text"},"ts":1296416760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: but you could do something in the html parser, no?","msgtype":"m.text"},"ts":1296416761000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: do you mean error 6 and keeping track of whether body was implied?","msgtype":"m.text"},"ts":1296416820000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: e.g. when you see </head> or <body> but body was implied, emit a warning saying which token implied body and say it should be moved into the body or so","msgtype":"m.text"},"ts":1296416821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1296416822000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok. that's doable","msgtype":"m.text"},"ts":1296416880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"should i file a bug?","msgtype":"m.text"},"ts":1296417060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: that would be nice","msgtype":"m.text"},"ts":1296417420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"webr3: No.","msgtype":"m.text"},"ts":1296417540000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webr3: I'm saying there isn't a registered inversion of author","msgtype":"m.text"},"ts":1296417600000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webr3: Nobody's registered authoredby or anything like that.","msgtype":"m.text"},"ts":1296417660000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Hixie, okay, so do you really want me to try figuring out what things like \"sentenceboundary\" mean?  I assume that's got to be left mostly platform-specific anyway.","msgtype":"m.text"},"ts":1296417840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm not sure what parts we'd want to spec here.  Ideally not too vague . . .","msgtype":"m.text"},"ts":1296417900000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But I can't see how to realistically be specific.","msgtype":"m.text"},"ts":1296418020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm thinking stuff like \"paragraphboundary: The beginning or end of a paragraph, where a paragraph might correspond to the text selected when the user triple-clicks (on platforms using that convention).\"  I.e., enough to give you an idea, not much more.","msgtype":"m.text"},"ts":1296418080000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"webben, looks like you're seeing author as it's inversion, { <page> author <person> } means <person> is the author of <page>, <link rel=\"author\" href=\"<person>\" /> - I'm looking for the inverse of that, which would be \"author of\" in english, not \"authored by\" - \"authored by\" is the meaning of the \"author\" rel","msgtype":"m.text"},"ts":1296418200000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"webr3: Sorry, yeah I mean pageauthoredby or work or something.","msgtype":"m.text"},"ts":1296418260000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webr3: Anyway nobody's registered what you want, so if you want it, define and register it I guess.","msgtype":"m.text"},"ts":1296418261000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"that process is going to have to be repeated for every rel, which is a shame","msgtype":"m.text"},"ts":1296418320000,"senderName":"webr3","senderId":"webr3@irc"},
{"content":{"body":"shrugs.","msgtype":"m.emote"},"ts":1296418440000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webr3, that's assuming we need all reverse relationships. The fact that rev has never taken off suggests we don't","msgtype":"m.text"},"ts":1296418620000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: if it's an API, i don't see how ti can be anything but strictly defined","msgtype":"m.text"},"ts":1296419580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: otherwise people will use the API and get different results","msgtype":"m.text"},"ts":1296419581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, because selection.modify(\"extend\", \"right\", \"line\") is meant to mimic the effect of Shift+Down, for instance.  In particular, its effect depends on things like where lines are broken and what font is used.","msgtype":"m.text"},"ts":1296419640000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's no way we can spec that unless CSS is specced pixel-perfect.","msgtype":"m.text"},"ts":1296419641000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Logically, this is a visual API, not a DOM one.","msgtype":"m.text"},"ts":1296419700000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(the modify() part is, I mean)","msgtype":"m.text"},"ts":1296419701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(extend() can be defined in terms of DOM alone, although WebKit seemingly doesn't implement it that way)","msgtype":"m.text"},"ts":1296419702000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, we want modify(\"extend\", \"right\", \"character\") to depend on the definition of a grapheme cluster, which isn't really defined anywhere and should defer to how the platform behaves when the user does Shift+Right anyway.","msgtype":"m.text"},"ts":1296419760000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Similarly modify(\"extend\", \"right\", \"word\") == Ctrl+Shift+Right, etc.","msgtype":"m.text"},"ts":1296419820000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"zcorpan: thanks for the bug report","msgtype":"m.text"},"ts":1296420180000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"benschwarz: thanks for fixing it :)","msgtype":"m.text"},"ts":1296420300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh you meant the newest bug","msgtype":"m.text"},"ts":1296420360000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"one at a time :)","msgtype":"m.text"},"ts":1296420420000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"I have no idea why the spec splitter is doing that right now","msgtype":"m.text"},"ts":1296420421000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"I actually had a brief look over the weekend","msgtype":"m.text"},"ts":1296420422000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1296420423000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Philip`: ^","msgtype":"m.text"},"ts":1296420540000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doing what?","msgtype":"m.text"},"ts":1296420600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: we have a <header class=\"head\"> in the developer spec. The spec splitter seems to place it inside <head>","msgtype":"m.text"},"ts":1296420660000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"really it should be <header role=\"banner\">, but thats another story :)","msgtype":"m.text"},"ts":1296420900000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"role=banner is implied by <header> no?","msgtype":"m.text"},"ts":1296420960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"or maybe that was dropped","msgtype":"m.text"},"ts":1296420961000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: if its at the top level… I think","msgtype":"m.text"},"ts":1296420962000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"seems spec says header has no implied role but banner is allowed","msgtype":"m.text"},"ts":1296421020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"...to be specified","msgtype":"m.text"},"ts":1296421021000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"benschwarz: What's the input file?","msgtype":"m.text"},"ts":1296421140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Also, what version of the spec-splitter?","msgtype":"m.text"},"ts":1296421141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Also, what command-line arguments?","msgtype":"m.text"},"ts":1296421200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ttp://www.whatwg.org/specs/web-apps/current-work/dev-index","msgtype":"m.text"},"ts":1296421201000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"only --html5lib-serialiser","msgtype":"m.text"},"ts":1296421202000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"AryehGregor: that's why this is hard","msgtype":"m.text"},"ts":1296421260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: doesn't mean we don't define it :-)","msgtype":"m.text"},"ts":1296421261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"someone remembers why all attribute float changed to attribute double?","msgtype":"m.text"},"ts":1296421262000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"AryehGregor: there's nothing wrong with referencing CSS in these definitions","msgtype":"m.text"},"ts":1296421263000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: as for version… its HEAD about a week about","msgtype":"m.text"},"ts":1296421320000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"ago","msgtype":"m.text"},"ts":1296421321000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Hixie: good morning :)","msgtype":"m.text"},"ts":1296421322000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"hey ben","msgtype":"m.text"},"ts":1296421323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: we have rudimentary offline support and search…","msgtype":"m.text"},"ts":1296421380000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1296421381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, we can't get script-testable interop anyway.  Things like line breaking aren't specced.  CSS itself doesn't define word or character boundaries for the purposes of things like :first-letter.","msgtype":"m.text"},"ts":1296421382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Besides, the whole point of the API is to match what the user does when they hit arrow keys and so on, which is inherently platform- and browser-dependent.","msgtype":"m.text"},"ts":1296421383000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I need to roll to the office. First day back for this client","msgtype":"m.text"},"ts":1296421440000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Using uniform definitions that don't match what browsers do for normal user interaction defeats the point of the API, and I doubt browsers would implement it.","msgtype":"m.text"},"ts":1296421441000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"the whatwg logo. is there a canonical svg version?","msgtype":"m.text"},"ts":1296421442000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Philip`: it looks like http://www.whatwg.org/specs/web-apps/current-work/dev-index is missing a <HEAD> to begin with…","msgtype":"m.text"},"ts":1296421443000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"solicits Ms2ger's opinion","msgtype":"m.emote"},"ts":1296421500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Present, sir!","msgtype":"m.text"},"ts":1296421501000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: at least \"line\", \"paragraph\", \"line boundary\", and \"document boundary\" are completely definable","msgtype":"m.text"},"ts":1296421502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: looks like a lot of the others aren't interoperably implemented anyway and maybe shouldn't be defined","msgtype":"m.text"},"ts":1296421503000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, are they?  \"Line\" depends on line-breaking, which isn't interoperable.","msgtype":"m.text"},"ts":1296421504000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"benschwarz: The head start tag is optional","msgtype":"m.text"},"ts":1296421560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not interoperable, but still definable","msgtype":"m.text"},"ts":1296421561000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: just define it in whatever terms CSS uses so that as we fix CSS it'll become interoperable","msgtype":"m.text"},"ts":1296421562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"benschwarz: I'm wondering whether your version of lxml is accidentally parsing the header as inside the head, or something","msgtype":"m.text"},"ts":1296421563000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"found it http://lists.w3.org/Archives/Public/www-archive/2009Apr/att-0042/logo.svg","msgtype":"m.text"},"ts":1296421564000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"AryehGregor: e.g. use the same wording for letter boundaries as ::first-letter, or whatnot","msgtype":"m.text"},"ts":1296421565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: in the real world, everyone uses a <head>","msgtype":"m.text"},"ts":1296421620000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"AryehGregor: same wording for word boundaries as text-transform:capitalise","msgtype":"m.text"},"ts":1296421621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, so how do I work CSS into it?  Does CSS have any notion of mapping between line boxes and the parts of the DOM they represent?","msgtype":"m.text"},"ts":1296421622000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"IIRC, CSS just doesn't define those.  :)","msgtype":"m.text"},"ts":1296421623000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"so despite the fact that its optional. most people expect them","msgtype":"m.text"},"ts":1296421624000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"It makes more sense to informatively reference UAX#29.","msgtype":"m.text"},"ts":1296421625000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: start reading and learning the css2.1 spec :-)","msgtype":"m.text"},"ts":1296421626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I have . . . it's horrifyingly vague.","msgtype":"m.text"},"ts":1296421627000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"maybe all I have to do is plead with Hixie to add a <head> :)","msgtype":"m.text"},"ts":1296421680000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"benschwarz: Hmm, did you modify the splitter so the serialiser outputs explicit <head> etc?","msgtype":"m.text"},"ts":1296421681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It doesn't seem to do that by default)","msgtype":"m.text"},"ts":1296421682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"benschwarz: dev-index is generated by anolis","msgtype":"m.text"},"ts":1296421683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Look at this, it just doesn't define line boundaries at all: http://www.w3.org/TR/CSS21/selector.html#first-line-pseudo","msgtype":"m.text"},"ts":1296421740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There's nothing to reference.","msgtype":"m.text"},"ts":1296421741000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"benschwarz: but <head> is optional, the element is still there even if the tag isn't","msgtype":"m.text"},"ts":1296421742000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"benschwarz: so so long as you're using a conforming parser you should be fine","msgtype":"m.text"},"ts":1296421743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: for line boxes you want chapters 8, 9 and 10 iirc, not ::first-line","msgtype":"m.text"},"ts":1296421744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I've read those before.","msgtype":"m.text"},"ts":1296421800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I don't see how they're useful.","msgtype":"m.text"},"ts":1296421801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"benschwarz: Where does the <link rel=\"stylesheet\" href=\"/css/master.css\"> come from?","msgtype":"m.text"},"ts":1296421802000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think I should ask the people implementing this what sort of description they'd like to see.","msgtype":"m.text"},"ts":1296421920000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: they define how the display boxes (line boxes, inline boxes, line-wrapping, etc) are done","msgtype":"m.text"},"ts":1296421921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`: I add it in postprocessing","msgtype":"m.text"},"ts":1296421922000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Added how?","msgtype":"m.text"},"ts":1296421923000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I would guess your postprocessing tools are probably using non-HTML5-conforming parsers","msgtype":"m.text"},"ts":1296421980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and are failing to correctly imply a <body> start tag when they see the <header> start tag","msgtype":"m.text"},"ts":1296421981000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"since the splitter seems to be working correctly, as far as I can tell","msgtype":"m.text"},"ts":1296421982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1296422040000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"let me verify","msgtype":"m.text"},"ts":1296422041000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"(lxml looks okay to me)","msgtype":"m.text"},"ts":1296422042000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: lxml would've been okay for many versions by now","msgtype":"m.text"},"ts":1296422043000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"I'll send an RFC to whatwg.","msgtype":"m.text"},"ts":1296422100000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not the IETF?","msgtype":"m.text"},"ts":1296422101000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you must be right Philip`","msgtype":"m.text"},"ts":1296422160000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"The splitter outputs <html ...><title>...</title><!-- ... --><meta ...> <script src=\"link-fixup.js\"></script> <header class=\"head\"> ...","msgtype":"m.text"},"ts":1296422161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which is perfectly valid and means the header element is inside the body element","msgtype":"m.text"},"ts":1296422162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The parser I'm using is nokogiri, which is uses on libxml2…","msgtype":"m.text"},"ts":1296422163000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"due to the amount of postprocessing I'm doing, a <head> would be useful anyway…","msgtype":"m.text"},"ts":1296422220000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Add omit_optional_tags=False in the splitter's HTMLSerializer line if you want nothing omitted","msgtype":"m.text"},"ts":1296422280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Thanks Philip` I will try that","msgtype":"m.text"},"ts":1296422460000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"now… I need to leave for the office","msgtype":"m.text"},"ts":1296422461000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"or else I'll be late :)","msgtype":"m.text"},"ts":1296422462000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Philip`: hmm. header still in the head","msgtype":"m.text"},"ts":1296422580000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"I'll keep trying to diagnose it later…","msgtype":"m.text"},"ts":1296422581000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"thanks for the heads up","msgtype":"m.text"},"ts":1296422582000,"senderName":"benschwarz","senderId":"benschwarz@irc"},
{"content":{"body":"Is any version of .innerText specced anywhere?","msgtype":"m.text"},"ts":1296430200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1296430320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yay.","msgtype":"m.text"},"ts":1296430380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I assume it's unreasonably complicated.","msgtype":"m.text"},"ts":1296430381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"It's more complex than it seems at face-value, IIRC","msgtype":"m.text"},"ts":1296430440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Note WebKit has a high-cost for changing their innerText behaviour as a lot of their tests depend upon the exact serialization.","msgtype":"m.text"},"ts":1296430441000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Nice.","msgtype":"m.text"},"ts":1296430500000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"we could easily make the tests use something than innerText","msgtype":"m.text"},"ts":1296430501000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's not encoded in every text or anything","msgtype":"m.text"},"ts":1296430502000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So what's an example of a difference between innerText and textContent?","msgtype":"m.text"},"ts":1296430560000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but it would suck to carry around multiple conversion to plaintext algorithms","msgtype":"m.text"},"ts":1296430561000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Converting existing tests' expectations would be expensive, though, at least provided you actually check the change","msgtype":"m.text"},"ts":1296430562000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: head element, scripts","msgtype":"m.text"},"ts":1296430620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah.","msgtype":"m.text"},"ts":1296430621000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"yeah, but there's no need to convert expectations","msgtype":"m.text"},"ts":1296430622000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we would convert the test harness","msgtype":"m.text"},"ts":1296430623000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Ah, to match the current innerText behaviour?","msgtype":"m.text"},"ts":1296430624000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"innerText also seems to do newline collapsing of some kind.","msgtype":"m.text"},"ts":1296430740000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Actually, whitespace collapsing generally.","msgtype":"m.text"},"ts":1296430800000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gets to work writing a spec","msgtype":"m.emote"},"ts":1296430801000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Also note it should be affected by the computed style","msgtype":"m.text"},"ts":1296431460000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/809 for example","msgtype":"m.text"},"ts":1296431461000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah, I've figured that part out.","msgtype":"m.text"},"ts":1296431462000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"display: none is suppressed, display: block adds newlines, etc.","msgtype":"m.text"},"ts":1296431520000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: the float and position properties change semantics too","msgtype":"m.text"},"ts":1296431521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Oh, dear.","msgtype":"m.text"},"ts":1296431522000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Wait, how so in this case?  I get \"foo magic bar\" as I'd expect.","msgtype":"m.text"},"ts":1296431580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Try removing the float.","msgtype":"m.text"},"ts":1296431640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It becomes \"foo\\nmagic\\nbar\" v. \"foo magic bar\" with the float","msgtype":"m.text"},"ts":1296431641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Ah, so it makes it behave like an inline.","msgtype":"m.text"},"ts":1296431642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Or something.","msgtype":"m.text"},"ts":1296431643000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Does Firefox not implement this?","msgtype":"m.text"},"ts":1296431644000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"innerText isn't supported by Gecko","msgtype":"m.text"},"ts":1296431700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Doesn't that imply it's not needed for compat, so we can retire it in favor of textContent?  Why do we want to spec it?","msgtype":"m.text"},"ts":1296431701000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Also, on a somewhat related note, does anyone know if Ranges' stringifier does anything weird?  It looks like it behaves more or less like textContent, just copying the DOM.","msgtype":"m.text"},"ts":1296431880000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Which would be nice if true.","msgtype":"m.text"},"ts":1296431881000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"if(vjo.dsf.client.Browser.bFirefox){oL.textContent=_d;}else{oL.innerText=_d;}","msgtype":"m.text"},"ts":1296431882000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(on search.blogs.ebay.com)","msgtype":"m.text"},"ts":1296431940000,"senderName":"Philip`","senderId":"Philip`@irc"}
]