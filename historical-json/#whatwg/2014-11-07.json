[
{"content":{"body":"doesn't it?","msgtype":"m.text"},"ts":1415318412000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: because it doesn’t prevent component users intruding into its implementaion","msgtype":"m.text"},"ts":1415318419000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"2) no API is provided which lets code outside the component poke at the shadow DOM. Only internals that the component chooses to expose are exposed.\"","msgtype":"m.text"},"ts":1415318419000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: oh sorry, I misunderstood.","msgtype":"m.text"},"ts":1415318430000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rubys: I can't comment on that thread anymore; don't know what's up.","msgtype":"m.text"},"ts":1415318484000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: Anyway, linking issues are fixed. Thanks for pointing them out.","msgtype":"m.text"},"ts":1415318494000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rubys: The constructor and stringifier not linking is a known issue. Hopefully it's okay to leave them unlinked for now.  I'll work on that next week with some other WebIDL fixes I've been putting off.","msgtype":"m.text"},"ts":1415318525000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: right, we want to support 2 & 4.","msgtype":"m.text"},"ts":1415318591000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: because for things like “like button” we need at least 3 if not 4.","msgtype":"m.text"},"ts":1415318614000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: and for regular reusable components, we want 2.","msgtype":"m.text"},"ts":1415318632000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"seems to me that an opt-in attribute that blocks the shadow-piercing CSS combinator, and blocks the use of the shadowRoot getter on Element, would go a long way towards type 2 encapsulation.","msgtype":"m.text"},"ts":1415318651000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: indeed.","msgtype":"m.text"},"ts":1415318662000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: that would probably be sufficient for type 2","msgtype":"m.text"},"ts":1415318675000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"roc: I think for type 4, you need that plus script isolation","msgtype":"m.text"},"ts":1415318685000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"+ a way to name internal pieces that *can* be styled. You really need that for it to be useful.","msgtype":"m.text"},"ts":1415318699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"roc: part of the right reason I care about type 2 is that I think it’s a good building block for type 4","msgtype":"m.text"},"ts":1415318708000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"is gone for the day and can't follow up; is busy being on vacation.","msgtype":"m.emote"},"ts":1415318724000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: yes, controlled styling access is obviously useful (arguably useful even if you also have unconstrained internals styling access)","msgtype":"m.text"},"ts":1415318729000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, roc: yeah, scripts fiddling with prototype probably belongs to 4","msgtype":"m.text"},"ts":1415318732000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I need to think about it more, but currently I'm not enthusiastic about providing 4 in Web Components.","msgtype":"m.text"},"ts":1415318742000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: because it’s a different way of writing iframe?","msgtype":"m.text"},"ts":1415318765000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I hope that the Like-button example can be satisfied with a Web Component hosting a cross-origin IFRAME.","msgtype":"m.text"},"ts":1415318766000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"rniwa: because I suspect it would add a ton of complexity to the platform.","msgtype":"m.text"},"ts":1415318784000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: the problem is that like button may need to show a pop over to type in comments","msgtype":"m.text"},"ts":1415318791000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: i think script isolation already exists in the form of browser extensions","msgtype":"m.text"},"ts":1415318809000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1415318838000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: but I have no doubt it introduces some complexity to the platform.","msgtype":"m.text"},"ts":1415318838000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: !? Firefox extensions run in the browser’s main world/isolate?","msgtype":"m.text"},"ts":1415318856000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"e.g. our XBL <video controls> and <marquee> are not trusted.","msgtype":"m.text"},"ts":1415318863000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: interesting. but how about browser extensions injected scripts?","msgtype":"m.text"},"ts":1415318892000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"not trusted, but have non-web view of things","msgtype":"m.text"},"ts":1415318912000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"rniwa: some do, some don't. We do support isolated script worlds. But multiple isolated script worlds living in the same page ... we don't really support that.","msgtype":"m.text"},"ts":1415318927000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: oh I see.","msgtype":"m.text"},"ts":1415318939000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: okay, so there could be some challege there.","msgtype":"m.text"},"ts":1415318944000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: I think combining iframe + dialog element may work","msgtype":"m.text"},"ts":1415318962000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yes we do, via wrappers","msgtype":"m.text"},"ts":1415318965000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"roc: we just need to sort out use cases and figure out what’s needed for those social media buttons","msgtype":"m.text"},"ts":1415318981000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: as well as DISQUS and other cross-origin widgets","msgtype":"m.text"},"ts":1415318997000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"social button case is particularly interesting because the button itself is super tiny and yet the comment form needs to be much larger than the button","msgtype":"m.text"},"ts":1415319032000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"/me suggests asking bholley about Gecko's wrappers","msgtype":"m.text"},"ts":1415319049000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"smaugB2g: we support isolated script worlds manipulating objects from other pages. But you can't, for example, add a DOM node with a different principal to the rest of the page. Without that, I'm not comfortable claiming we have isolated worlds inthe same page.","msgtype":"m.text"},"ts":1415319091000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: oh I see.","msgtype":"m.text"},"ts":1415319135000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: but I don’t think we need to support something that complicate","msgtype":"m.text"},"ts":1415319144000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: we can solve that in DOM API instead","msgtype":"m.text"},"ts":1415319152000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: e.g. we can treat shadow root like iframe’s document element","msgtype":"m.text"},"ts":1415319166000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I just don't want to spec and expose an entirely new kind of isolation in the Web.","msgtype":"m.text"},"ts":1415319172000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: I used to think like that.","msgtype":"m.text"},"ts":1415319192000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: but I think we want the same components model work both same-origin and cross-origin","msgtype":"m.text"},"ts":1415319205000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: and we might be able to use iframe’s machinary","msgtype":"m.text"},"ts":1415319216000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: instead of inventing its own","msgtype":"m.text"},"ts":1415319220000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: ideally, we’ll be just re-using some code we have for iframe already in terms of implementation","msgtype":"m.text"},"ts":1415319242000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if we can do that by actually using an iframe, that's so much better.","msgtype":"m.text"},"ts":1415319249000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: i agree we defintely don’t want to introduce a new security model, etc...","msgtype":"m.text"},"ts":1415319253000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: indeed.","msgtype":"m.text"},"ts":1415319259000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: at some point, I had an iframe to suguar-coat iframe and provide some nice components API instead","msgtype":"m.text"},"ts":1415319275000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: so something like that might work","msgtype":"m.text"},"ts":1415319280000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: but this is precisely why we should talk about these stuff :)","msgtype":"m.text"},"ts":1415319293000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: and would love to have it spec'ed","msgtype":"m.text"},"ts":1415319298000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: perhaps we can have an in-person meeting some time?  it’s hard to talk about this without a white board.","msgtype":"m.text"},"ts":1415319321000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1415319341000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"this is a great time to visit New Zealand","msgtype":"m.text"},"ts":1415319350000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1415319368000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: oh, you’re in New Zealand?","msgtype":"m.text"},"ts":1415319385000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415319392000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: coming to the bay area anytime?","msgtype":"m.text"},"ts":1415319401000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"no doubt, but not for a few months at least","msgtype":"m.text"},"ts":1415319418000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: or WebApps F2F in the spring (presumably in paris)?","msgtype":"m.text"},"ts":1415319419000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"probably not","msgtype":"m.text"},"ts":1415319438000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: Okay. Please let me know when you do because I don’t think I’m in a hurry to talk about it at the moment.","msgtype":"m.text"},"ts":1415319451000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"this isn't really my bailiwick","msgtype":"m.text"},"ts":1415319458000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: so the next few months will probably work for me.","msgtype":"m.text"},"ts":1415319464000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: okay.","msgtype":"m.text"},"ts":1415319468000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: I think wil chen & sicking are both SF? so it might make sense to meet there.","msgtype":"m.text"},"ts":1415319505000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415319511000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"personally, given the market realities, I think it's a mistake to try to block Web Components on cross-origin stuff. I think we should get the simple type 2 encapsulation added, opt-in, and move forward.","msgtype":"m.text"},"ts":1415319545000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you want bholley for any encapsulation discussions","msgtype":"m.text"},"ts":1415319568000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"for the technical part at least","msgtype":"m.text"},"ts":1415319608000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"roc: I agree although I want to make sure we have a rough sketch on how to approach type 4 as well","msgtype":"m.text"},"ts":1415320020000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: so that our design for type 2 encapsulation isn’t entirely inconsistent with what we’re going to add later on","msgtype":"m.text"},"ts":1415320044000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: may I have your email?","msgtype":"m.text"},"ts":1415320149000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaugB2g: who is bholley?","msgtype":"m.text"},"ts":1415320160000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: mine is nick at apple.com","msgtype":"m.text"},"ts":1415320182000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(as in <my IRC nick> at apple.com)","msgtype":"m.text"},"ts":1415320197000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"robert⊙oo","msgtype":"m.text"},"ts":1415320229000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"rniwa: have you got a thorough list of use-cases?","msgtype":"m.text"},"ts":1415320283000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: yeah, we have a list of use cases","msgtype":"m.text"},"ts":1415320300000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"   rniwa: search for bholley+mozilla","msgtype":"m.text"},"ts":1415320302000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"rniwa: can you point me at them?","msgtype":"m.text"},"ts":1415320317000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: we have an internal list","msgtype":"m.text"},"ts":1415320376000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: it’s kind of messy at the moment with all the notes mangled up","msgtype":"m.text"},"ts":1415320389000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"roc: so let me clean that up and send it to you","msgtype":"m.text"},"ts":1415320395000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: naturally you'll want also bz' comments","msgtype":"m.text"},"ts":1415320417000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"smaugB2g: most definitely.","msgtype":"m.text"},"ts":1415320440000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaugB2g: is bz in MV or SF?","msgtype":"m.text"},"ts":1415320451000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"east coast","msgtype":"m.text"},"ts":1415320467000,"senderName":"smaugB2g","senderId":"smaugB2g@irc"},
{"content":{"body":"oh I see.","msgtype":"m.text"},"ts":1415320483000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"perhaps I need to stop by when I go to WebApps F2F in Paris in spring","msgtype":"m.text"},"ts":1415320500000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: if you could send it to a mailing list, webapps probably, and let me know, that'd be great","msgtype":"m.text"},"ts":1415320616000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"roc: okay, I can do that.","msgtype":"m.text"},"ts":1415320627000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1415320666000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"anyone who works on HTML validators: why exactly would a validator emit a \"Text run is not in Unicode Normalization Form C.\" warning?  it seemed like the point of composed/non-composed was to permit exactly that flexibility, so I don't see why warning is reasonable for this, on first pale","msgtype":"m.text"},"ts":1415323184000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"hi jwalden","msgtype":"m.text"},"ts":1415323211000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I work on the validator code","msgtype":"m.text"},"ts":1415323225000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think we have an open bug about this","msgtype":"m.text"},"ts":1415323233000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will grant that my use case is a rather esoteric one, to be sure :-)","msgtype":"m.text"},"ts":1415323249000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"what's your use case?","msgtype":"m.text"},"ts":1415323278000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm doing a blog post about the JS Intl API, and some of my examples include deliberately non-composed text, to demonstrate collation examples work regardless of composition or not","msgtype":"m.text"},"ts":1415323294000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"var decoratedBrowsers = [\"A\\u0362maya\", \"CH\\u035Br&ocirc;me\", \"Firef&Oacute;x\", \"sAf&agrave;ri\", \"o\\u0323pERA\", \"I\\u0352E\"];","msgtype":"m.text"},"ts":1415323313000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1415323316000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1415323317000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1415323318000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so yeah that is a bit esoteric, but still","msgtype":"m.text"},"ts":1415323338000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyays, that message is a warning, not an error, right?","msgtype":"m.text"},"ts":1415323348000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, just a warning","msgtype":"m.text"},"ts":1415323358000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"MikeSmith: just seemed a little strange to be anything, because of composition being optional being a feature and all","msgtype":"m.text"},"ts":1415323381000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1415323387000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"maybe we should just drop it at this point","msgtype":"m.text"},"ts":1415323396000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jwalden: we'd need to get some attention from hsivonen","msgtype":"m.text"},"ts":1415323407000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: or at least have it not as part of the default warnings, perhaps","msgtype":"m.text"},"ts":1415323416000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"it's not an unreasonable thing to want to know about, potentially","msgtype":"m.text"},"ts":1415323442000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: fwiw for now, if you go to http://validator.w3.org/nu/ and check your doc and then push the \"Message filtering\" button, you can uncheck that message and you will never see it again (it persists the filtering)","msgtype":"m.text"},"ts":1415323497000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: interesting; that's a next-gen unstable validator or so?","msgtype":"m.text"},"ts":1415323559000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Hixie and I have been talking about appending a \"Do you think this message is not helpful. If so, please post a comment  to _this bug_.\" (or something) thing to particular error messages, to collect feedback from authors/devs","msgtype":"m.text"},"ts":1415323618000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jwalden: that is an alternative UI. hsivonen and I should maybe merge that and the html5.validator.nu UI at some point.","msgtype":"m.text"},"ts":1415323665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems reasonable","msgtype":"m.text"},"ts":1415323691000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jgraham: but that UI is for the same backend instance that the main (legacy) http://validator.w3.org/ validator uses for checking HTML5 docs","msgtype":"m.text"},"ts":1415323710000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it will probably become the UI for http://validator.w3.org/ itself eventually (after retiring the old perl+SGML w3c validator to http://validator.w3.org/old or some such)","msgtype":"m.text"},"ts":1415323775000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mm, Perl, SGML","msgtype":"m.text"},"ts":1415323790000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"s/jgraham/jwalden","msgtype":"m.text"},"ts":1415323791000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1415323794000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup and DTDs too","msgtype":"m.text"},"ts":1415323805000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tasty","msgtype":"m.text"},"ts":1415323817000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1415323863000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway I'll bug hsivonen about the Unicode normalization thing","msgtype":"m.text"},"ts":1415323884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jwalden: we don't yet have any way to opt-in to stricter warnings. I'm pretty sure we wouldn't want to add one, since the trend over the years has been been make the user-facing behavior of validator.nu simpler, with fewer knobs to turn","msgtype":"m.text"},"ts":1415324252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1415324274000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I guess it depends what you want to lint for, really","msgtype":"m.text"},"ts":1415324288000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"true","msgtype":"m.text"},"ts":1415324294000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that's why I added the message-filtering thing","msgtype":"m.text"},"ts":1415324308000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that gives the user the choice about what to see and not see","msgtype":"m.text"},"ts":1415324321000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and philosophically, this tool really is more like a linter than it is like the old w3c validator. It's just that the linting rules are formally defined in a spec (the HTML spec)","msgtype":"m.text"},"ts":1415324389000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's really mostly meant just to help people catch unintended mistakes -- not to give a pass/fail certification or something","msgtype":"m.text"},"ts":1415324425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that's also the philosophy that I think Hixie has moslty always taken when adding document (authoring) conformance requirements to the HTML spec","msgtype":"m.text"},"ts":1415324481000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jwalden: fyi I just raised a new bug for this http://bugzilla.validator.nu/show_bug.cgi?id=1009 Feel free to comment there if you have more to say","msgtype":"m.text"},"ts":1415325384000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wilco","msgtype":"m.text"},"ts":1415325395000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"thanks for taking time to ask about it","msgtype":"m.text"},"ts":1415325493000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it's always nice to know that people actually working on Web platform stuff actually do use the validator sometimes","msgtype":"m.text"},"ts":1415325597000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I know you may not care about this so much but if/when you have a few minutes, it would be great if you could go into https://github.com/settings/emails and add your @iki.fi address and also add the hsivonen@c6dcca6c-c432-0410-a79e-3fbb6554aff1 and hsivonen@e7398766-c432-0410-9565-638d39ca0058 and hsivonen@cc716562-c432-0410-be78-79d2286756cb and hsivonen@5bfc576b-c432-0410-be1c-015b6bc4b1a2 pseudo-addresses (and probably a few others)","msgtype":"m.text"},"ts":1415326205000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: otherwise, when somebody view https://github.com/validator/validator/graphs/contributors it looks like you've only made 64 commits to the validator sources, which obviously is pretty misleading","msgtype":"m.text"},"ts":1415326308000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: do to the degree it matters we have a somewhat more accurate record available from the github Web UI it would be nice","msgtype":"m.text"},"ts":1415326350000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"rniwa - isn't that the point of the Extensible Web Summits?","msgtype":"m.text"},"ts":1415328435000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"re: in-person meeting on Web Components","msgtype":"m.text"},"ts":1415328459000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I don’t think Extensible Web Summits are necessarily for Web components","msgtype":"m.text"},"ts":1415328556000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tantek: they talk about a lot of other new Web technologies","msgtype":"m.text"},"ts":1415328564000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it would seem the Extensible Web Summits would attract the same people you would want in the room to discuss Web Componenets","msgtype":"m.text"},"ts":1415328597000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: I guess so at least for Web developers","msgtype":"m.text"},"ts":1415328630000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa - I see that as a feature - if you're \"fixing\" web components, you likely need web developer perspective in the room to be sure you're \"fixing\" them the right (read: practical/relevant for webdevs) way.","msgtype":"m.text"},"ts":1415328668000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"too many times I feel I've seen browser-dev-only minutia discussions go off into the weeds and end up with weird edge case conclusions that are nothing but super confusing for webdevs.","msgtype":"m.text"},"ts":1415328707000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"having webdevs in the room is an excellent reality check for that kind of thing - certainly has been in the CSSWG.","msgtype":"m.text"},"ts":1415328733000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"> every mailing list thread ever","msgtype":"m.text"},"ts":1415328734000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(not always effective, but often)","msgtype":"m.text"},"ts":1415328740000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"caitp - hah, yeah. the \"useful\" mailing list threads anyway that aren't just support forum q&a.","msgtype":"m.text"},"ts":1415328770000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: oh sure","msgtype":"m.text"},"ts":1415328877000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tantek: but I think I’ve done that part already.","msgtype":"m.text"},"ts":1415328889000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tantek: what I really need is coming up with some strawman proposal I can tell developer","msgtype":"m.text"},"ts":1415328904000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa - then you have all the answers? I was under the impression that you needed to collaborate with others to \"fix\" web components.","msgtype":"m.text"},"ts":1415328920000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the point is to have the webdevs in the room when you come up with the strawman proposals in-person at a f2f meeting","msgtype":"m.text"},"ts":1415328953000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: oh, what I need to do is talking with other browser vendors to come up with a solution that everyone can agree to","msgtype":"m.text"},"ts":1415328957000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"right, *that* is what I'm talking about needing webdevs in the room for","msgtype":"m.text"},"ts":1415328973000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"otherwise, \"everyone can agree to\" ==  aformentioned \"go off into the weeds and end up with weird edge case conclusions that are nothing but super confusing for webdevs\"","msgtype":"m.text"},"ts":1415328996000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: well, I don’t think we necesarily need web devs with us all the time","msgtype":"m.text"},"ts":1415329018000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"tantek: we just need to get feedback early and often","msgtype":"m.text"},"ts":1415329028000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"nor should we treat \"check with webdevs\" as a waterfall step","msgtype":"m.text"},"ts":1415329034000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: but most importantly, we need to understand their use cases","msgtype":"m.text"},"ts":1415329036000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yes, agreed on that","msgtype":"m.text"},"ts":1415329045000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"terrible decisions get made when users aren't around and paying attention","msgtype":"m.text"},"ts":1415329049000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"^^^ this","msgtype":"m.text"},"ts":1415329057000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"caitp: right","msgtype":"m.text"},"ts":1415329059000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but at the same time, a terrible design will be chosen if we had asked users to come up with a design","msgtype":"m.text"},"ts":1415329083000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so we need to balance the two.","msgtype":"m.text"},"ts":1415329093000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"although to be fair, web devs are developers so they aren’t like ordinary notive users","msgtype":"m.text"},"ts":1415329118000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"end* users","msgtype":"m.text"},"ts":1415329123000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"we have to deal with in other feature development","msgtype":"m.text"},"ts":1415329128000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"technical constraints can't win over user appeal, it's not worth it","msgtype":"m.text"},"ts":1415329204000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: well, if something is a technical constraint, we can’t just remove it.","msgtype":"m.text"},"ts":1415329231000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"caitp: that’s why it’s a “constraight\"","msgtype":"m.text"},"ts":1415329242000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"what we need to do is to understand use cases web developers care about","msgtype":"m.text"},"ts":1415329299000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and address those pain points by coming up with a solution that works around technical constraints we have","msgtype":"m.text"},"ts":1415329313000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that’s our job","msgtype":"m.text"},"ts":1415329315000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"it's my job too, and I've found that we usually do a pretty awful job at it","msgtype":"m.text"},"ts":1415329340000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we build systems where we're actually unable to make things work better","msgtype":"m.text"},"ts":1415329352000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: examples?","msgtype":"m.text"},"ts":1415329395000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"maybe that's a case of not getting enough user input to begin with, but I think it's mostly that we're pulling things out of our asses to accomodate internal applications without thinking about the bigger picture","msgtype":"m.text"},"ts":1415329398000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you end up with a lot of internal \"we need this otherwise corner case X, so build all these walls nobody wants\"","msgtype":"m.text"},"ts":1415329458000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and then the system becomes unmalleable very quickly","msgtype":"m.text"},"ts":1415329473000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and at that point it becomes very depressing to maintain it, whether \"it\" is a spec or implementation","msgtype":"m.text"},"ts":1415329505000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so for real, get user stories, make sure user use cases are covered, and make sure the use cases that you want to cover, are covered __well__","msgtype":"m.text"},"ts":1415329544000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and FFS, please *document* the user stories and use cases somewhere openly like on a wiki","msgtype":"m.text"},"ts":1415329627000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"sorry, examples --- i'm mainly talking about in framework land, but there are a lot of similarities to the web at large in terms of our complete inability to change things lest we break people :(","msgtype":"m.text"},"ts":1415329814000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp, tantek: I agree documenting use cases well and continously evaluating desing against them is critical.","msgtype":"m.text"},"ts":1415332590000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"amen to what tantek said about \"having webdevs in the room is an excellent reality check for that kind of thing\"","msgtype":"m.text"},"ts":1415332884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and \"too many times I feel I've seen browser-dev-only minutia discussions go off into the weeds and end up with weird edge case conclusions that are nothing but super confusing for webdevs\"","msgtype":"m.text"},"ts":1415332895000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: indeed.","msgtype":"m.text"},"ts":1415334001000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Is there a spec for devicePixelRatio?","msgtype":"m.text"},"ts":1415338620000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"And by devicePixelRatio I mean the one like window.devicePixelRatio","msgtype":"m.text"},"ts":1415338641000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Whoops, maybe it’s http://dev.w3.org/csswg/cssom-view/#dom-window-devicepixelratio","msgtype":"m.text"},"ts":1415338711000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"hsivonen: did you see my earlier ping about the github stuff?","msgtype":"m.text"},"ts":1415351592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: please keep the NFC warning","msgtype":"m.text"},"ts":1415352130000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I appreciate someone finding an exception to the rule, but in practice that stuff can end up being very confusing if your code is infected by it","msgtype":"m.text"},"ts":1415352178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK","msgtype":"m.text"},"ts":1415352980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess then we should add a link in the warning message to some place where authors can find more info on how to fix it","msgtype":"m.text"},"ts":1415353030000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also maybe we should consider actually adding it as a document conformance requirement to the HTML spec","msgtype":"m.text"},"ts":1415353072000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: could point to http://www.unicode.org/reports/tr15/ I guess","msgtype":"m.text"},"ts":1415353408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I meant something more user-friendly. Because there are python libraries and such that fuck this stuff up (e.g., like lxml or something causes through the spec-splitter or anolis code when generating the formatted HTML spec) and it's then not obvious to an author how to fix that","msgtype":"m.text"},"ts":1415354061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: example: http://validator.w3.org/nu/?doc=http%3A%2F%2Fwww.w3.org%2FTR%2Fhtml%2Fsingle-page.html","msgtype":"m.text"},"ts":1415354134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"those problems are in the giant character-references table in the spec, and caused by some python thing in the spec-generation toolchain doing the wrong thing","msgtype":"m.text"},"ts":1415354232000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for &langle; and &rangle;","msgtype":"m.text"},"ts":1415354950000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: what's up with the TAG not responding to the security questionnaire proposal?","msgtype":"m.text"},"ts":1415355742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: ah okay, now you mention this... explaining this to someone that has not taken a deep dive seems hard","msgtype":"m.text"},"ts":1415355814000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Yeah","msgtype":"m.text"},"ts":1415355911000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I sometimes forget I've been doing this for a decade","msgtype":"m.text"},"ts":1415355944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"You're getting old, man","msgtype":"m.text"},"ts":1415355986000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: now Unicode and encoding discussions feel totally natural, but before e.g. 2008 that was not really the case","msgtype":"m.text"},"ts":1415355997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah this stuff is totally arcane to most web devs","msgtype":"m.text"},"ts":1415356035000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I noticed some thinning hair","msgtype":"m.text"},"ts":1415356040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: and finally it almost can be, since encodings are such a thing from the past","msgtype":"m.text"},"ts":1415356098000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, we're moving to a lot better place","msgtype":"m.text"},"ts":1415356124000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Although, iso-2022-jp... I feel like I should really turn some of these quick tests into proper test case, but it's just such a hassle to do that correctly","msgtype":"m.text"},"ts":1415356147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. testharness with its absolute URLs requires a local server running... Although I suppose I could develop them online someplace","msgtype":"m.text"},"ts":1415356188000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"iso-2022-jp is just an ongoing world of hurt","msgtype":"m.text"},"ts":1415356221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm getting there: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27256","msgtype":"m.text"},"ts":1415356249000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybeyou could do it with wptserve","msgtype":"m.text"},"ts":1415356271000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Although the new design is a tad more complicated. Two state tracking variables. One byte tracking variable. And a flag. (Most likely, not done yet.)","msgtype":"m.text"},"ts":1415356303000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: sounds like something I should look into","msgtype":"m.text"},"ts":1415356325000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ohthat's a very recent big","msgtype":"m.text"},"ts":1415356336000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bug","msgtype":"m.text"},"ts":1415356342000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: talk to jgraham","msgtype":"m.text"},"ts":1415356374000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: yeah, though it's based on three older bugs","msgtype":"m.text"},"ts":1415356432000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wptserve is your friend.","msgtype":"m.text"},"ts":1415356449000,"senderName":"wilhelm_","senderId":"wilhelm_@irc"},
{"content":{"body":"annevk, you can just run `python serve.py` in wpt root, with a little bit of one-time setup","msgtype":"m.text"},"ts":1415357785000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: sounds pretty awesome","msgtype":"m.text"},"ts":1415358070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, we (and by that I mean jgraham) have tried to make it as painless as possible :)","msgtype":"m.text"},"ts":1415358687000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-webappsec/2014Nov/0097.html (feel free to reuse for other groups that get this wrong)","msgtype":"m.text"},"ts":1415359966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: thanks for that, this looks great","msgtype":"m.text"},"ts":1415363022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: wish I had known this earlier","msgtype":"m.text"},"ts":1415363029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Np :)","msgtype":"m.text"},"ts":1415363045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"goes to setup a test for iso-2022-jp to make spec writing easier","msgtype":"m.emote"},"ts":1415363052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I already have my @iki.fi address set on github","msgtype":"m.text"},"ts":1415364635000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: where do the pseudo-addresses come from?","msgtype":"m.text"},"ts":1415364649000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: from the old cvs-svn-hg commit messages","msgtype":"m.text"},"ts":1415364723000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: how do I find the full list I need to add including \"(and probably a few others)\"?","msgtype":"m.text"},"ts":1415364765000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: by doing git log | grep hsivonen | uniq","msgtype":"m.text"},"ts":1415364852000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or some such","msgtype":"m.text"},"ts":1415364862000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I added the four pseudoaddresses, but they can't receive email, so they are unverified","msgtype":"m.text"},"ts":1415364919000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is that enough?","msgtype":"m.text"},"ts":1415364922000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"decode([0x1b, 0x24, 0x40, 0x50, 0x50], \"佩\", \"Multibyte ESC, character\") <3","msgtype":"m.text"},"ts":1415365006000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I feel so stupid now for not having set this up earlier","msgtype":"m.text"},"ts":1415365032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Bah, Safari doesn't support TextDecoder yet","msgtype":"m.text"},"ts":1415365080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: yeah that's expected; same case as me for my older commits","msgtype":"m.text"},"ts":1415365124000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: OK, I've added them all","msgtype":"m.text"},"ts":1415365151000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: thanks","msgtype":"m.text"},"ts":1415365155000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"MikeSmith: how often does github recrunch the numbers?","msgtype":"m.text"},"ts":1415365168000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: thanks much. I don't think those ever change, so that should cover it forever","msgtype":"m.text"},"ts":1415365214000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Oh rhe data","msgtype":"m.text"},"ts":1415365235000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah I dunno how often. maybe only once a day or so","msgtype":"m.text"},"ts":1415365267000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok.","msgtype":"m.text"},"ts":1415365287000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What are you doing?","msgtype":"m.text"},"ts":1415367018000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi! In the fetch spec it says \"Let HTTPRequest be a copy of request, except that HTTPRequest's body is a tee of request's body. \". What does \"tee\" mean?","msgtype":"m.text"},"ts":1415368969000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: pain","msgtype":"m.text"},"ts":1415369197000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"was hoping for https://streams.spec.whatwg.org/ to define it, but it seems that's missing","msgtype":"m.emote"},"ts":1415369226000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: haha","msgtype":"m.text"},"ts":1415369236000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: http://en.wikipedia.org/wiki/Tee_%28command%29","msgtype":"m.text"},"ts":1415369248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: there's a comment in the source that stream-related terminology needs to be grounded at some point","msgtype":"m.text"},"ts":1415369272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: doesn't help you much of course :-(","msgtype":"m.text"},"ts":1415369283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: could you please put in layman's terms? why split the source stream? where does the other copy go?","msgtype":"m.text"},"ts":1415369396000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: so one copy goes over the wire","msgtype":"m.text"},"ts":1415369417000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: the other one remains part of request, in case we need it again","msgtype":"m.text"},"ts":1415369433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: (we need it again if we hit a redirect or authentication)","msgtype":"m.text"},"ts":1415369464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and the reason we use \"tee\" rather than just copy is because the body is like a pipe rather than a block of bytes?","msgtype":"m.text"},"ts":1415369557000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: yeah, you can't copy a stream","msgtype":"m.text"},"ts":1415369574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: whereas everything else from a request can be copied","msgtype":"m.text"},"ts":1415369590000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah! now it makes sense. thank you very much :)","msgtype":"m.text"},"ts":1415369607000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"happy to help, hopefully in due Domenic will have defined tee","msgtype":"m.text"},"ts":1415369647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"due course, even","msgtype":"m.text"},"ts":1415369836000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi mukilan :)","msgtype":"m.text"},"ts":1415370108000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Hi!!","msgtype":"m.text"},"ts":1415370129000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"tantek: Interestingly, it's precisely \"having webdevs in the room\" that led to the current \"minimal encapsulation\" WC design. (One particular group of advanced authors, but still, authors doing actual Dev with it.) Every time we tried to have stronger encapsulation, it made their job much harder and they howled over it. So our minimum viable product ended up","msgtype":"m.text"},"ts":1415377042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"being \"encapsulated unless you choose to pierce it in purpose\".","msgtype":"m.text"},"ts":1415377042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: e.path is piercing?","msgtype":"m.text"},"ts":1415377142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No, we clean event paths when the events cross boundaries, unless that's somehow changed in the last few months.","msgtype":"m.text"},"ts":1415377425000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think that changed way earlier","msgtype":"m.text"},"ts":1415377646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"google folks, any chance to get http://updates.html5rocks.com/2012/07/Drag-and-drop-a-folder-onto-Chrome-now-available updated to not use webkit prefixes","msgtype":"m.text"},"ts":1415377657000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"oh, hmm","msgtype":"m.text"},"ts":1415377686000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is using google only file system stuff too, I guess","msgtype":"m.text"},"ts":1415377700000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but that is still wrong","msgtype":"m.text"},"ts":1415378007000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the File system API has been abandoned","msgtype":"m.text"},"ts":1415378019000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: you might know who maintains html5rocks.com","msgtype":"m.text"},"ts":1415378039000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jgraham: there's no encoding requirement around web-platform tests, right?","msgtype":"m.text"},"ts":1415378561000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: everything should be utf-8 except when there's good reason, IMO","msgtype":"m.text"},"ts":1415378711000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I don't think you have to tell me that... I want to know if something might break","msgtype":"m.text"},"ts":1415378760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really see another way to test e.g. iso-2022-jp's encoder","msgtype":"m.text"},"ts":1415378780000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Nothing should break.","msgtype":"m.text"},"ts":1415378786000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm not sure how well tested that is, though :)","msgtype":"m.text"},"ts":1415378804000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well it's happening","msgtype":"m.text"},"ts":1415378831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: In the HTTP fetch spec, section 4.3 step 11, it says \"If HTTPRequest's body is non-null, run these substeps:\" this does not apply to GET and HEAD methods right ?","msgtype":"m.text"},"ts":1415378936000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: I don't think we allow the combination of those methods and a body, right","msgtype":"m.text"},"ts":1415379005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, but is it assumed that the check is performed in HTTP spec? i'm asking because of this test /XMLHttpRequest/send-entity-body-get-head-async.htm","msgtype":"m.text"},"ts":1415379151000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"mukilan: I think XHR has such a check itself","msgtype":"m.text"},"ts":1415379232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mukilan: https://xhr.spec.whatwg.org/#dom-xmlhttprequest-send \"If the request method is GET or HEAD, set body to null.\"","msgtype":"m.text"},"ts":1415379255000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ha! i missed that. sorry for the trouble :)","msgtype":"m.text"},"ts":1415379287000,"senderName":"mukilan","senderId":"mukilan@irc"},
{"content":{"body":"smaug____: I'll try to remember to bug them on Monday. On vacation now.  (I'm bad at vacation.)","msgtype":"m.text"},"ts":1415379815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"vacation, what is that ;)","msgtype":"m.text"},"ts":1415379901000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: thanks","msgtype":"m.text"},"ts":1415379907000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Hmm","msgtype":"m.text"},"ts":1415380129000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\\u005C\\u203E\\uFF90 -> \\%1B(J~%1B$B%_%1B(B","msgtype":"m.text"},"ts":1415380146000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Note how the %1B is sensible, but %_ is not, yet both Firefox and Chrome do the exact same thing","msgtype":"m.text"},"ts":1415380193000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Note also how https://url.spec.whatwg.org/#query-state endorses this madness by not escaping %","msgtype":"m.text"},"ts":1415381285000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Not sure what to think of this...","msgtype":"m.text"},"ts":1415381330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, is a 404 a \"network error\"?","msgtype":"m.text"},"ts":1415382193000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: no","msgtype":"m.text"},"ts":1415382200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: network error has status 0","msgtype":"m.text"},"ts":1415382232000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hrm","msgtype":"m.text"},"ts":1415382271000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I can't figure out what's expected from importScripts(\"NonExistentFile.js\")","msgtype":"m.text"},"ts":1415382355000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: are we talking HTTP 404?","msgtype":"m.text"},"ts":1415382433000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes","msgtype":"m.text"},"ts":1415382451000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Hixie doesn't really define it","msgtype":"m.text"},"ts":1415382476000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Lovely","msgtype":"m.text"},"ts":1415382485000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic: is chai-as-promised expected to work with promise APIs that don't try to look like ES6 Promises?","msgtype":"m.text"},"ts":1415382491000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Ms2ger: but if we assume <script> processing model, it should just parse and execute","msgtype":"m.text"},"ts":1415382492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(someone filed a bug on us, and I'm not seeing how it would possibly work)","msgtype":"m.text"},"ts":1415382506000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I've got tests from MS that expect a NetworkError","msgtype":"m.text"},"ts":1415382513000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: does HTTP define that as a successful load or a failed load?","msgtype":"m.text"},"ts":1415382531000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it's not defined in terms of HTTP though","msgtype":"m.text"},"ts":1415382552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ms2ger's case was http","msgtype":"m.text"},"ts":1415382575000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: the HTML spec just says \"If the fetching attempt failed\"","msgtype":"m.text"},"ts":1415382601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so it depends on the protocol's definition of success","msgtype":"m.text"},"ts":1415382617000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, given <script> and <img> and such I'm inclined to say that this should just work","msgtype":"m.text"},"ts":1415382622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That seems very sketchy","msgtype":"m.text"},"ts":1415382631000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We should define things in terms of network errors vs non network errors (what <script> and <img> do) or in terms of status codes","msgtype":"m.text"},"ts":1415382699000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also not quite obvious","msgtype":"m.text"},"ts":1415382705000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"file a bug saying what you want it to say (ideally matching implementations)","msgtype":"m.text"},"ts":1415382720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: ^","msgtype":"m.text"},"ts":1415382770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Filing","msgtype":"m.text"},"ts":1415382776000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=27276","msgtype":"m.text"},"ts":1415382821000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I guess I'll finish this iso-2022-jp rewrite this weekend","msgtype":"m.text"},"ts":1415383083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And submit some tests for it","msgtype":"m.text"},"ts":1415383090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://wiki.whatwg.org/wiki/DragAndDropEntries might use a comment that the File System API is obsolete","msgtype":"m.text"},"ts":1415383352000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wonders if he has account for that wiki","msgtype":"m.emote"},"ts":1415383377000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"jsbell: can you reopen this issue?  https://code.google.com/p/chromium/issues/detail?id=429832","msgtype":"m.text"},"ts":1415392727000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"jsbell: based on this spec issue: https://github.com/slightlyoff/ServiceWorker/issues/551","msgtype":"m.text"},"ts":1415392737000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: done","msgtype":"m.text"},"ts":1415392918000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: thanks!  sorry for my initial confusion in that bug","msgtype":"m.text"},"ts":1415392934000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: re: response bodies... yeah, I was pondering that too. they're more subtle since e.g. text() on a response consumes the body even if it's empty. We don't implement optional bodies on Responses yet either via script ctor","msgtype":"m.text"},"ts":1415393181000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: aren't Request and Response identical in how they handle empty bodies per the spec?  the default is \"Let stream be an empty byte stream.\" ... which I guess could be consumed,  but it would be nice to avoid that","msgtype":"m.text"},"ts":1415393370000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hrm, right.","msgtype":"m.text"},"ts":1415393585000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I think the fetch spec needs to be clarified:  https://github.com/slightlyoff/ServiceWorker/issues/550#issuecomment-62209952","msgtype":"m.text"},"ts":1415393588000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"+1","msgtype":"m.text"},"ts":1415393608000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Also, bleah, we apparently support new Response(null) but not new Response()","msgtype":"m.text"},"ts":1415393635000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: I hope new Response(null) is equal to new Response(\"null\")","msgtype":"m.text"},"ts":1415393693000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you may be disappointed. :) crbug.com/412027","msgtype":"m.text"},"ts":1415393746000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Hmm, guess I have to review that issue at some point","msgtype":"m.text"},"ts":1415393748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(agreed it *should* turn into \"null\", though)","msgtype":"m.text"},"ts":1415393818000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"On a tangent, union support in Blink's IDL compiler is almost usable. Yaaaay! *kermit flail*","msgtype":"m.text"},"ts":1415393883000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"It's really hard to balance getting work done and answering difficult emails","msgtype":"m.text"},"ts":1415393934000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"On the upside I'm almost done with iso-2022-jp (again), and on the downside there's a bunch of emails that need looking into plus I don't know what else","msgtype":"m.text"},"ts":1415393974000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jsbell: unrelated question... is there IDB 2.0 spec going on? possibly including the KeyRange.inList() thing I proposed a year or so ago?","msgtype":"m.text"},"ts":1415394094000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: SW has been eating my time. I've got a team member exploring API changes to improve perf, including the inList thing actually","msgtype":"m.text"},"ts":1415394123000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: cool... I haven't looked at recently (because SW!), but I didn't want to miss the boat again","msgtype":"m.text"},"ts":1415394154000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: we need batched fetches of some sort too; the overhead of an event per result is too damn high","msgtype":"m.text"},"ts":1415394155000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"wanderview; not missing anything. I'll make noise when there's any attempt at concrete progress","msgtype":"m.text"},"ts":1415394181000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: awesome, thanks!","msgtype":"m.text"},"ts":1415394188000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I've been noodling on IDB+Promises again too.... https://gist.github.com/inexorabletash/8c122c84a65de65c35b3","msgtype":"m.text"},"ts":1415394209000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"not sure that holds together or not yet, or that it's an improvement","msgtype":"m.text"},"ts":1415394257000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"seems reasonable","msgtype":"m.text"},"ts":1415394309000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"takes a break to watch http://us.battle.net/overwatch/en/","msgtype":"m.emote"},"ts":1415394491000,"senderName":"wanderview","senderId":"wanderview@irc"}
]