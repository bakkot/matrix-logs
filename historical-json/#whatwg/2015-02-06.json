[
{"content":{"body":"annevk: Sure, I'll take a look","msgtype":"m.text"},"ts":1423182544000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk, Domenic: For reasons unknown, there is no way to change a user's e-mail address without editing the database directly.","msgtype":"m.text"},"ts":1423183881000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk, Domenic: I have done so, and sent a new password reset e-mail.","msgtype":"m.text"},"ts":1423183894000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"annevk, Domenic: If this turns out to be a bogus request, though, it's on you. ;)","msgtype":"m.text"},"ts":1423183913000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: thanks! All sorted.","msgtype":"m.text"},"ts":1423184432000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1423184508000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"This was an excellent discussion. https://bugzilla.mozilla.org/show_bug.cgi?id=946370","msgtype":"m.text"},"ts":1423204660000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"https://dvcs.w3.org/hg/IndieUI/raw-file/default/src/indie-ui-context.html#screenreader this addresses my need to identify content for screenreaders.","msgtype":"m.text"},"ts":1423204817000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Hmm, I guess I should start writing a wiki page for Shadow DOM too with a summary of all those emails","msgtype":"m.text"},"ts":1423211244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"75 emails","msgtype":"m.text"},"ts":1423211252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I should read them all and say something constructive instead of just snarking","msgtype":"m.text"},"ts":1423211341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"My main takeaway is that event retargeting is contentious","msgtype":"m.text"},"ts":1423211787000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Encapsulation is still a problem","msgtype":"m.text"},"ts":1423211795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And per rniwa I get the impression that there are some aspects of the current design that prevent isolation","msgtype":"m.text"},"ts":1423211831000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I've unfortunately poorly kept track of Shadow DOM discussion to date so I would have to do some digging","msgtype":"m.text"},"ts":1423211884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I might start doing that soonish","msgtype":"m.text"},"ts":1423211915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the current design doesn’t have isolation","msgtype":"m.text"},"ts":1423212164000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don’t think it would be that hard to add","msgtype":"m.text"},"ts":1423212181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"making it the default (as I think it should be) would probably require a compat break with what what shipped in Chrome","msgtype":"m.text"},"ts":1423212207000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: actual isolation requires something worker-like though, no?","msgtype":"m.text"},"ts":1423212259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, really real isolation?","msgtype":"m.text"},"ts":1423212270000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"not really","msgtype":"m.text"},"ts":1423212272000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I am not sure why people suggest that at all","msgtype":"m.text"},"ts":1423212278000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"The +1 button?","msgtype":"m.text"},"ts":1423212288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the actual UA doesn’t use workers to implement built-in elements","msgtype":"m.text"},"ts":1423212291000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"there’s no need to have a separate thread of control","msgtype":"m.text"},"ts":1423212302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Well yeah I don't mean workers per se, I just mean that the globals can't reach each other","msgtype":"m.text"},"ts":1423212309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"you just need a two-way membrane and separate global objects","msgtype":"m.text"},"ts":1423212318000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Workers have that the best, the <iframe> setup is rather special","msgtype":"m.text"},"ts":1423212330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"assuming you want to protect the component from the page","msgtype":"m.text"},"ts":1423212340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So Gecko has a really cool membrane setup as I understand it, but nobody else is interested in adopting it","msgtype":"m.text"},"ts":1423212368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"basically the way the page could attack the component is by pre-hacking the JS global environment (for example modifying methods on prototypes), or by passing it poison values","msgtype":"m.text"},"ts":1423212375000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you can solve the first by giving a component (or maybe set of components loaded from a given origin) its own global object","msgtype":"m.text"},"ts":1423212398000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"So in your estimation we just need to tweak the existing shadow DOM a bit?","msgtype":"m.text"},"ts":1423212426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the second either by using very crude message passing, or by making method/property access do an extended version of the structured clone algorithm at the boundaries","msgtype":"m.text"},"ts":1423212431000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it’s been a while since I looked into the details of what it would take to provide just the DOM level of encapsulation","msgtype":"m.text"},"ts":1423212460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but once you have that, you need a way to instantiate components from a separate global","msgtype":"m.text"},"ts":1423212473000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don’t think Shadow DOM quite has that in scope","msgtype":"m.text"},"ts":1423212482000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I always imagined some form of cross-domain safe thing like HTML imports where you can also import custom elements from it","msgtype":"m.text"},"ts":1423212500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and those custom elements have all their JS run in a separate global object with the membrane thing","msgtype":"m.text"},"ts":1423212512000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Okay so yeah, you're looking at something quite different then compared to what is there now","msgtype":"m.text"},"ts":1423212534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Adam Barth sort of agreed a while ago that this basic plan could lead to the possibility of sound two-way isolation","msgtype":"m.text"},"ts":1423212537000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think the shadow DOM piece is mostly right (except for its failure to do DOM encapsulation)","msgtype":"m.text"},"ts":1423212558000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"doing script isolation requires a separate mechanism","msgtype":"m.text"},"ts":1423212565000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"you can’t tack it onto shadow DOM","msgtype":"m.text"},"ts":1423212574000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"because by the time you have some script creating a shadow DOM, it’s too late","msgtype":"m.text"},"ts":1423212584000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so the mechanism has to come in earlier than that","msgtype":"m.text"},"ts":1423212589000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I sort of explained it in this email: https://lists.w3.org/Archives/Public/public-webapps/2014JulSep/0024.html","msgtype":"m.text"},"ts":1423212646000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"This all sounds quite familiar","msgtype":"m.text"},"ts":1423212656000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it sounds like XBL2","msgtype":"m.text"},"ts":1423212675000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Heh","msgtype":"m.text"},"ts":1423212759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"here’s Adam more or less agreeing that my approach is a sensible general direction: https://lists.w3.org/Archives/Public/public-webapps/2014JulSep/0038.html","msgtype":"m.text"},"ts":1423212775000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Did he ever report back?","msgtype":"m.text"},"ts":1423212837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not that I recall","msgtype":"m.text"},"ts":1423212848000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I think he might be mostly working on a non-Blink project these days","msgtype":"m.text"},"ts":1423212864000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I got that impression too, hardly see him around anymore","msgtype":"m.text"},"ts":1423212890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I love the latest objection against deprecating synchronous XMLHttpRequest. \"Do you really want script writers to deal with scroll events while an ajax is outstanding?\"","msgtype":"m.text"},"ts":1423213217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I am terrified of the mindset that would produce that comment","msgtype":"m.text"},"ts":1423213343000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"annevk: tried to sum up the postMessage stuff over at https://github.com/slightlyoff/ServiceWorker/issues/609#issuecomment-71622477 - let me know if I've gotten any of it wrong","msgtype":"m.text"},"ts":1423221711000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I'm going to try and get this in front of external devs looking to implement push messaging for their take","msgtype":"m.text"},"ts":1423221738000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I don't see how you can communicate with Worker and SharedWorker \"the standard way\"","msgtype":"m.text"},"ts":1423222022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it's also not clear to me that complex library usage is going to be discovered early on in the deployment of this, that seems overly optimistic","msgtype":"m.text"},"ts":1423222059000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I also suggested actually having a MessagePort like object on each side on a per-client basis","msgtype":"m.text"},"ts":1423222101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought you said it was ok to have instance of dedicatedworker in the serviceworker, and have postMessage work. The standard way with SharedWorker would be the connect event and passing ports through (which I dislike, but it's how it's defined)","msgtype":"m.text"},"ts":1423222111000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so the object that receives the message can also send is, which happens to be how most of these postMessage() APIs work","msgtype":"m.text"},"ts":1423222121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: I did at one point, but then later on we figured out that it couldn't possibly work...","msgtype":"m.text"},"ts":1423222142000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: A SW instantiating a Worker/SharedWorker is different from it controlling one","msgtype":"m.text"},"ts":1423222172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ohh, I thought it was the other way around, that you thought it couldn't work then realised it could. If a SW gets a reference to a DedicatedWorker via the clients API, what stops it being able to postMessage to it?","msgtype":"m.text"},"ts":1423222242000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: how can two windows possibly have a Worker object that references the same worker?","msgtype":"m.text"},"ts":1423222268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: s/two windows/two globals/","msgtype":"m.text"},"ts":1423222294000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Seems like I'm misremembering the history of the dedicated worker bit","msgtype":"m.text"},"ts":1423222449000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: how about SharedWorkers? No problem exposing those right?","msgtype":"m.text"},"ts":1423222475000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Same problem","msgtype":"m.text"},"ts":1423222480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean, we talked about this, I'm not sure what to say","msgtype":"m.text"},"ts":1423222489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I said several times that Window, Worker, and SharedWorker all need a way, the same way, to receive and post messages to their SW","msgtype":"m.text"},"ts":1423222514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Fair, I guess getting a SharedWorker would need to be equivalent to constructing a SharedWorker, which could call the connect event, which doesn't really make sense","msgtype":"m.text"},"ts":1423222957000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Exactly","msgtype":"m.text"},"ts":1423223250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And DedicatedWorker cannot suddenly go from 1:1 to 1:2","msgtype":"m.text"},"ts":1423223280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: \"I also suggested actually having a MessagePort like object on each side on a per-client basis\" - you weren't happy with navigator.serviceWorker.onmessage being that thing right?","msgtype":"m.text"},"ts":1423223570000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, if we always have navigator.serviceWorker.postMessage() to go with it, sure","msgtype":"m.text"},"ts":1423223592000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also*","msgtype":"m.text"},"ts":1423223597000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really care where we place the endpoints","msgtype":"m.text"},"ts":1423223608000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: The problem is we need to land the message on the client somewhere client specific, a ServiceWorker instance isn't that. But posting from page to ServiceWorker should be serviceWorker.postMessage. SharedWorker gets around this using the connect & posts model which is horrible but also doesn't work with SWs because SWs terminate","msgtype":"m.text"},"ts":1423223836000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: navigator.serviceWorker.onmessage has the benefit of being client specific, lives in ServiceWorker-API space, doesn't interfere with things like window.onmessage, but it doesn't meet the navigator.serviceWorker.postMessage requirement as there no sensible place for that to post to","msgtype":"m.text"},"ts":1423223942000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk, is there a mozilla bug for SWR.showNotification()?","msgtype":"m.text"},"ts":1423226929000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"beverloo: I'm not sure, feel free to file one","msgtype":"m.text"},"ts":1423227399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"finds https://bugzilla.mozilla.org/show_bug.cgi?id=531817 but that seems to be something else","msgtype":"m.emote"},"ts":1423227428000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I found that as well, but that predates the API :)","msgtype":"m.text"},"ts":1423227454000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"I'll file one later today","msgtype":"m.text"},"ts":1423227459000,"senderName":"beverloo","senderId":"beverloo@irc"},
{"content":{"body":"JakeA: each global has its own ServiceWorker instance","msgtype":"m.text"},"ts":1423227463000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: and each SW has Client instances","msgtype":"m.text"},"ts":1423227501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: that seems alright to me","msgtype":"m.text"},"ts":1423227521000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: but I can see how you don't want to to use Client instances as the other side...","msgtype":"m.text"},"ts":1423227604000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: though then you'd need to branch in the onmessage handler on the SW side which doesn't seem great either","msgtype":"m.text"},"ts":1423227667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"meh","msgtype":"m.text"},"ts":1423227668000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"beverloo: ta","msgtype":"m.text"},"ts":1423227672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Have we considered speccing web components by reality TV show? We lock all the participants in a house with some cameras and every week the public get to vote off whoever isn't providing something useful. At the end of it we either have a spec or everyone involved has killed each other.","msgtype":"m.text"},"ts":1423230136000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: that's your idea of better than the status quo?","msgtype":"m.text"},"ts":1423230185000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lol annevk","msgtype":"m.emote"},"ts":1423230202000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"annevk: It seems like you have much better incentives than in the status quo","msgtype":"m.text"},"ts":1423230221000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If you don't do useful things you get voted off and so your opinion is discounted","msgtype":"m.text"},"ts":1423230240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Depends, would there be memes? https://twitter.com/w3cmemes","msgtype":"m.text"},"ts":1423230248000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Also it would provide W3C with a revenue source so they can stop offering jQuery training","msgtype":"m.text"},"ts":1423230263000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I'm sure there would be memes","msgtype":"m.text"},"ts":1423230376000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"You know what actually could be intersting - public debates","msgtype":"m.text"},"ts":1423230703000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"debate style... moderator, make your case, video stream","msgtype":"m.text"},"ts":1423230756000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I'd watch - I bet I could get a lot of people to watch and comment","msgtype":"m.text"},"ts":1423230782000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I don't think that will lead to an inclusive design","msgtype":"m.text"},"ts":1423233412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Though I guess it might be entertaining","msgtype":"m.text"},"ts":1423233422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: do you have any sense about how often devs will want to use Cache prefix matching?  from chrome telemetry or just talking to folks?","msgtype":"m.text"},"ts":1423235416000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wonders what the \"Other Data\" in the Firefox import is","msgtype":"m.emote"},"ts":1423236376000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's some nice clear UI.","msgtype":"m.text"},"ts":1423236382000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wanderview: unfortunately it's mostly from my head. I was making sure we had something similar to appcache's FALLBACK matching","msgtype":"m.text"},"ts":1423236526000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: if there's an implementation concern around it, I'm open to removing it. It's the least important of the match filters","msgtype":"m.text"},"ts":1423236576000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"(I think query string ignoring is pretty important)","msgtype":"m.text"},"ts":1423236593000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: its not a concern per-se... I already have it implemented... but its likely I will optimize non-prefix-matching at the expense of making prefix-matching even slower","msgtype":"m.text"},"ts":1423236608000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: it comes down to the sqlite schema... the URL text column can be quite large to begin with and using an index on the column essentially duplicates the data on disk again","msgtype":"m.text"},"ts":1423236666000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"What if [hidden] accepted a list of media types? I need something like [hidden=\"screen\"] to describe stuff I want hidden from the screen but perceivable to screenreaders.","msgtype":"m.text"},"ts":1423238260000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"wanderview: at the moment we have lots of engineers visiting London, which includes the people working on our cache impl. They also see prefix-matching as a deopt. Let's get rid of it! We can always add it back later.","msgtype":"m.text"},"ts":1423238882000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: actually I need it for a side project I'm working on :-)","msgtype":"m.text"},"ts":1423238912000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I guess I could skin that cat a different way","msgtype":"m.text"},"ts":1423238940000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: ohhh interesting. What's the use-case? Is it tough to do without the filter?","msgtype":"m.text"},"ts":1423238942000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sent you a private message","msgtype":"m.text"},"ts":1423239253000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: yeah, can't use client.onmessage for client-to-sw messages due to SW termination","msgtype":"m.text"},"ts":1423241221000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"stashing ports in SW gives us a way to recreate the SharedWorker style of messaging, but ugh","msgtype":"m.text"},"ts":1423241281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"and also GC observation, potential leaks, and also ugh","msgtype":"m.text"},"ts":1423241310000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well you could, if all clients are always available","msgtype":"m.text"},"ts":1423241756000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you'd synchronously register onmessage handlers at the start","msgtype":"m.text"},"ts":1423241767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it's rather sad","msgtype":"m.text"},"ts":1423241779000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Could hand-wave it to a \"clientmessage\" global event. But that that point it may as well be onmessage. Hmm.","msgtype":"m.text"},"ts":1423241892000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"So the annoying thing is that everywhere else the message event protocol avoids branching inside the handler","msgtype":"m.text"},"ts":1423241956000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Do service workers already use self.onmessage for something?","msgtype":"m.text"},"ts":1423241984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wouldn't mind clientmessage to signify its uniqueness, but hmm","msgtype":"m.text"},"ts":1423242003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: serviceWorker.postMessage ends up there","msgtype":"m.text"},"ts":1423242026000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I gotta go, will have more time during the weekend and beyond","msgtype":"m.text"},"ts":1423242039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That part is similar to dedicated workers","msgtype":"m.text"},"ts":1423242042000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Well yes, currently","msgtype":"m.text"},"ts":1423242043000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"have a good weekend!","msgtype":"m.text"},"ts":1423242052000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I have a deskbeer so I'm completely useless now","msgtype":"m.text"},"ts":1423242102000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"you too, but sounds like you started already :-)","msgtype":"m.text"},"ts":1423242556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is there something better than lists.w3.org and less smarmy-adsy than Nabble to link to public-webapps discussions?","msgtype":"m.text"},"ts":1423253162000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"annevk: you here?","msgtype":"m.text"},"ts":1423253267000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"dglazkov: readable-email.org was trying for a while but seems to have not kept up with recent messages :(","msgtype":"m.text"},"ts":1423253290000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"dglazkov: oh it seems to have caught up since last I saw it hmm","msgtype":"m.text"},"ts":1423253310000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that was the best :(","msgtype":"m.text"},"ts":1423253310000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"oh?","msgtype":"m.text"},"ts":1423253314000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"whoa","msgtype":"m.text"},"ts":1423253351000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"dglazkov - why not post such \"emails\" on your own site, and only a copy to mailing lists?","msgtype":"m.text"},"ts":1423253462000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: trying to do the other way around -- excavate old email threads","msgtype":"m.text"},"ts":1423253505000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"does it worry anyone that we're shipping prollyfills as prollyfills before they are out of flags or we even have good signals from all the browsers?","msgtype":"m.text"},"ts":1423253924000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"arg... shipping prollyfills as polyfills","msgtype":"m.text"},"ts":1423253936000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"shouldn't we be more careful about that? otherwise, what's the point in dev'ing them outside a flag?","msgtype":"m.text"},"ts":1423253959000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: well, who is shipping","msgtype":"m.text"},"ts":1423254111000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug___: when I say \"we\" I mean anyone :)  Is it a bad idea","msgtype":"m.text"},"ts":1423254217000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"and what do you actually mean. If prollyfill ends up implementing something which never get then implemented after all, users can still use that prollyfill, right?","msgtype":"m.text"},"ts":1423254233000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and then it is just a script library exposing random API not implemented anywhere","msgtype":"m.text"},"ts":1423254250000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug___: yes! the problem is what if it doesn't match","msgtype":"m.text"},"ts":1423254261000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"s/implemented/implemented natively/","msgtype":"m.text"},"ts":1423254267000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this is a pattern that needs advice/discussion imo","msgtype":"m.text"},"ts":1423254279000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"https://github.com/github/fetch for example - I'm seeing a hella lot of people using that","msgtype":"m.text"},"ts":1423254291000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"ah, and then implementations will do something a bit different, and the prollyfill implementation is behind the native implementations ?","msgtype":"m.text"},"ts":1423254331000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I dont know that we've had any signals from ms or apple at all - say for example - a change is necessary somewhere","msgtype":"m.text"},"ts":1423254332000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1423254347000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes, basically we've seen this happen a buncha times","msgtype":"m.text"},"ts":1423254349000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"array contains?","msgtype":"m.text"},"ts":1423254356000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"same deal","msgtype":"m.text"},"ts":1423254367000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"it would be indeed interesting to hear more feedback from MS and Apple to ServiceWorkers","msgtype":"m.text"},"ts":1423254384000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"in the case of fetch promises are kinda done deal, so why not just ._fetch()","msgtype":"m.text"},"ts":1423254392000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"if it works for you today it will work for you tomorrow - probably better since browsers tend to get better","msgtype":"m.text"},"ts":1423254416000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"if you get lucky, remove the _","msgtype":"m.text"},"ts":1423254423000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"or alias it with native","msgtype":"m.text"},"ts":1423254429000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"was thinking of sending that feedback, esp since it is now listed on ft labs polyfill service","msgtype":"m.text"},"ts":1423254457000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I think that is sending mixed messages and creating an issue that is easily avoided","msgtype":"m.text"},"ts":1423254477000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"am I making too much of nothing?","msgtype":"m.text"},"ts":1423254486000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: what's the worst that could happen? storage? appcache?","msgtype":"m.text"},"ts":1423254518000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: how is appcache related?","msgtype":"m.text"},"ts":1423254544000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"just a couple of problematic APIs off the top of my head","msgtype":"m.text"},"ts":1423254567000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"*local storage","msgtype":"m.text"},"ts":1423254574000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1423254574000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"storage and appcache were both real things","msgtype":"m.text"},"ts":1423254578000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no I am thinking more like Array.prototype.contains","msgtype":"m.text"},"ts":1423254586000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"which the later were noticed to be rather bad ones","msgtype":"m.text"},"ts":1423254588000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"then","msgtype":"m.text"},"ts":1423254592000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ES had to change it at the last minute because you can't - you'll break web stuff","msgtype":"m.text"},"ts":1423254605000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: then could prollyfills help avoid the \"later noticed\" problem and notice sooner when APIs are bad?","msgtype":"m.text"},"ts":1423254620000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: sure, you could - that's part of the idea","msgtype":"m.text"},"ts":1423254637000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"tantek: like, we put native implementations behind a flag - we used to prefix them - to tell people \"these are experimental\"","msgtype":"m.text"},"ts":1423254671000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"but we found that that is a footgun","msgtype":"m.text"},"ts":1423254680000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"a prollyfill is a way to stride the chasm","msgtype":"m.text"},"ts":1423254691000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"I guess it is mainly about when one can think some API is \"stable\"","msgtype":"m.text"},"ts":1423254699000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and that depends on who to ask","msgtype":"m.text"},"ts":1423254704000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, and it's kinda what I'm saying... it's about managing risk and I dont know how risky it is in this particular case","msgtype":"m.text"},"ts":1423254728000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"smaug____: clearly \"stable\" != good","msgtype":"m.text"},"ts":1423254751000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"I do know though that there's no signals at all from apple and ms has, according to chrome status, given mixed signals","msgtype":"m.text"},"ts":1423254753000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"or not necessarily","msgtype":"m.text"},"ts":1423254755000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"tantek: indeed, but stable is usually something browsers ends up shipping","msgtype":"m.text"},"ts":1423254777000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"we haven't removed that many APIs","msgtype":"m.text"},"ts":1423254782000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but especially in this case, it seems easy to avoid the worst risk","msgtype":"m.text"},"ts":1423254785000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"by just saying underscore the prollyfill","msgtype":"m.text"},"ts":1423254795000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"since it's api has no complex intertwined dependencies, it's basically one method","msgtype":"m.text"},"ts":1423254822000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"so... is it crazy to suggest that? am I tilting at windmills needlessly?","msgtype":"m.text"},"ts":1423254874000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"it feels like so close to really good  - if it goes wrong, that will be sad","msgtype":"m.text"},"ts":1423255052000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: what about ft polyfill? =)","msgtype":"m.text"},"ts":1423255096000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"good! you are on!","msgtype":"m.text"},"ts":1423255106000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"read above","msgtype":"m.text"},"ts":1423255110000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"i did, but i didn’t follow the conversation.","msgtype":"m.text"},"ts":1423255160000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"starting http://krijnhoetmer.nl/irc-logs/whatwg/20150206#l-592","msgtype":"m.text"},"ts":1423255179000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"is it still unclear?","msgtype":"m.text"},"ts":1423255231000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yea, polyfill is pretty aggressive, but unlike browsers, users can stick to one version of an api.","msgtype":"m.text"},"ts":1423255244000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"they can until there is a true version which claims to be the same version","msgtype":"m.text"},"ts":1423255266000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"right?","msgtype":"m.text"},"ts":1423255269000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"It would be like if you could ‘use strict 1.5.2’; in js.","msgtype":"m.text"},"ts":1423255274000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"that will present a problem","msgtype":"m.text"},"ts":1423255276000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"say the draft today says the api should look like foo(x, y)","msgtype":"m.text"},"ts":1423255314000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yea … you are touching on something I wanted to see, which is levels of polyfill compliance.","msgtype":"m.text"},"ts":1423255324000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"well, this is pretty simple to avoid - just use ._fetch","msgtype":"m.text"},"ts":1423255346000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"You’re not really using a polyfill as a polyfill then.","msgtype":"m.text"},"ts":1423255374000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I'm suggesting simply we dont claim to be the real thing until we can say for sure what the real thing is","msgtype":"m.text"},"ts":1423255384000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"it's not a polyfill","msgtype":"m.text"},"ts":1423255389000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"its a prollyfill","msgtype":"m.text"},"ts":1423255392000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"the lack of distinction is the part that worries me","msgtype":"m.text"},"ts":1423255417000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: we never claim, we wait for a spec, and the only difference between a prollyfill and a polyfill is an implementation not behind a flag.","msgtype":"m.text"},"ts":1423255418000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"i know because i usually write prollyfills before a spec exists, but I’ve protected myself from allowing them into the project until I see a spec. .closest was a good example.","msgtype":"m.text"},"ts":1423255463000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"you're misreading my point, I'm not saying you claim as in you state it in words","msgtype":"m.text"},"ts":1423255477000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"You mean, we treat prollyfills and polyfills the same, and people are probably leveraging prollyfills (instead of just polyfills) more and more?","msgtype":"m.text"},"ts":1423255506000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"JonathanNeal: no, that's a good thing - it's what I want... I just want them to do it safely.  Appearance in a spec definitely does not mean that that is what we will get","msgtype":"m.text"},"ts":1423255545000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"And that’s dangerous if the functionality changes between the prollyfill and the real thing?","msgtype":"m.text"},"ts":1423255548000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"yes!","msgtype":"m.text"},"ts":1423255553000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"not just dangerous in code though - browsers and standards care","msgtype":"m.text"},"ts":1423255584000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yea. The problem with prefixing apis is that people never unprefix them.","msgtype":"m.text"},"ts":1423255587000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"doesn't matter if you unprefix fetch or not in this case, does it?","msgtype":"m.text"},"ts":1423255612000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Unless every api some kind of .spec or .lastUpdated key we could reference to know whether or not we should use native functionality.","msgtype":"m.text"},"ts":1423255646000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"if you were so lucky as to have it match then you could simply say _fetch = fetch; and be done","msgtype":"m.text"},"ts":1423255659000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Alternatively, I see people doing very complex tests before a polyfills to determine if the polyfill should deploy.","msgtype":"m.text"},"ts":1423255677000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I dont understand why that matters tho... that's about browsers prefixing which they have basically agreed to stop doing and put behind a flag for basically this reason","msgtype":"m.text"},"ts":1423255710000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Yea, but when the functionality is really desired, the moment it appears in a spec, we’re gonna get an issue filed to include it.","msgtype":"m.text"},"ts":1423255742000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"if you write code that uses an experimental thing, but you also provide the experimental implementation (prollyfill) you can go about your day - job done","msgtype":"m.text"},"ts":1423255744000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"so include it, I love that!","msgtype":"m.text"},"ts":1423255757000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"Same for when something changes, it’s within hours.","msgtype":"m.text"},"ts":1423255762000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"just asking that we do _fetch or something instead of .fetch","msgtype":"m.text"},"ts":1423255773000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"at least until we're pretty sure","msgtype":"m.text"},"ts":1423255779000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"yea but what if the name changes.","msgtype":"m.text"},"ts":1423255781000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what name changes?","msgtype":"m.text"},"ts":1423255789000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"_fetch becomes _get or something","msgtype":"m.text"},"ts":1423255795000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"do you want to take this privately or is anyone else interested?","msgtype":"m.text"},"ts":1423255799000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"_has becomes _contains, etc.","msgtype":"m.text"},"ts":1423255809000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"I don’t have a solution, but I think the problem you are describing is a big web question.","msgtype":"m.text"},"ts":1423255833000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"Did the canvas on worker porposal go anywhere?   https://lists.w3.org/Archives/Public/public-whatwg-archive/2012Nov/0199.html","msgtype":"m.text"},"ts":1423255833000,"senderName":"lerc","senderId":"lerc@irc"},
{"content":{"body":"In a world with evergreen browsers, who’s going to wait for native functionality anymore?","msgtype":"m.text"},"ts":1423255876000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"People who don't want to wait for stuff to go through standardization before using it","msgtype":"m.text"},"ts":1423256597000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i.e., the \"why can't I track steps using a web app\" problem","msgtype":"m.text"},"ts":1423256610000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Are you under the impression that that is what I am suggesting in some way?","msgtype":"m.text"},"ts":1423257049000,"senderName":"bkardell","senderId":"bkardell@irc"},
{"content":{"body":"bkardell: nope, just responding to JonathanNeal's perspective.","msgtype":"m.text"},"ts":1423257061000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/perspective/question","msgtype":"m.text"},"ts":1423257067000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Yeah, that would have suprised me :)","msgtype":"m.text"},"ts":1423257351000,"senderName":"bkardell","senderId":"bkardell@irc"}
]