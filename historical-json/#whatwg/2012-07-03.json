[
{"content":{"body":"JS guys: \\c escapes for control characters in regular expressions are non-standard too, right? I can’t find anything about it in ES5.1.","msgtype":"m.text"},"ts":1341300559000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"you mean like \"\\1\" ?","msgtype":"m.text"},"ts":1341300790000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: no, like `/\\cA/.test('\\x01'); // true`","msgtype":"m.text"},"ts":1341301044000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"`\\cA` till `\\cZ`,","msgtype":"m.text"},"ts":1341301055000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"so to speak","msgtype":"m.text"},"ts":1341301059000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"e.g. \\cA sends Ctrl+A, which is U+0001","msgtype":"m.text"},"ts":1341301244000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i totally didn't know about this","msgtype":"m.text"},"ts":1341301313000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if it’s so obscure even zcorpan had never heard of it, it must be non-standard","msgtype":"m.text"},"ts":1341301505000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"i don't see it in the syntax of regex literals in the spec and nothing in annex b","msgtype":"m.text"},"ts":1341301689000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: ok, thanks for confirming","msgtype":"m.text"},"ts":1341301715000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"not in ES3 either","msgtype":"m.text"},"ts":1341301767000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"specs","msgtype":"m.emote"},"ts":1341301775000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"http://mathias.html5.org/specs/javascript/#control-character-escape-sequences","msgtype":"m.text"},"ts":1341303451000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: regular expression *literals* no?","msgtype":"m.text"},"ts":1341303686000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: fixed","msgtype":"m.text"},"ts":1341303747000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: saying \"must be supported\" doesn't really say what is supposed to happen. i think there needs to be something that extends the syntax or regular expression literals and then some prose that says what the semantic is of the added syntax","msgtype":"m.text"},"ts":1341303832000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i guess add a line in RegularExpressionNonTerminator ::","msgtype":"m.text"},"ts":1341303956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: right","msgtype":"m.text"},"ts":1341303963000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: i guess it should say more than just “literals” too, as RegExp('\\\\cA').test('\\x01') should work too","msgtype":"m.text"},"ts":1341303992000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"​’s TODO list explodes","msgtype":"m.emote"},"ts":1341304023000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"oh, ok, i thought it was a quirk for just literals","msgtype":"m.text"},"ts":1341304027000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hey, hold on","msgtype":"m.text"},"ts":1341304333000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"c ControlLetter","msgtype":"m.text"},"ts":1341304345000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://ecma-international.org/ecma-262/5.1/#sec-A.7","msgtype":"m.text"},"ts":1341304353000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"FFFFFUUUUU","msgtype":"m.text"},"ts":1341304389000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"LOL","msgtype":"m.text"},"ts":1341304396000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://ecma-international.org/ecma-262/5.1/#sec-15.10.2.10 has the semantic requirement","msgtype":"m.text"},"ts":1341304484000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: __lookupGetter__ says \"If a getter for the prop property has been defined on the this object through the use of __defineGetter__, return the getter function; else, return undefined.\". It should also return the getter if it was defined in the object literal. (Same for Setter).","msgtype":"m.text"},"ts":1341304548000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: defined in the object literal? how?","msgtype":"m.text"},"ts":1341304604000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: var o = {get p() { return 1; }}","msgtype":"m.text"},"ts":1341304638000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"woah, i thought that was Fx-only for some reason","msgtype":"m.text"},"ts":1341304682000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"this complicates things","msgtype":"m.text"},"ts":1341304704000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: the new graph looks better, but it's not really clear how the webapp makes a request to the UA. maybe the arrow should have an XHR code snippet to make it concrete (and more correct, since the app doesn't really make a HTTP request to the browser)","msgtype":"m.text"},"ts":1341304713000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"matjas: it's in http://es5.github.com/#x11.1.5","msgtype":"m.text"},"ts":1341304717000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"zcorpan: Hmm. Okay. That might work and still be short enough. Like     xhr.open('get', 'http://example.com/resource.txt')   xhr.send()","msgtype":"m.text"},"ts":1341304782000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"It's a bit longer.","msgtype":"m.text"},"ts":1341304789000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hasather: thanks","msgtype":"m.text"},"ts":1341304792000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: yeah","msgtype":"m.text"},"ts":1341304800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"odinho: dunno if the final arrow also should have a code snippet for symmetry","msgtype":"m.text"},"ts":1341304832000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"xhr.onload = function() { alert(xhr.response) }","msgtype":"m.text"},"ts":1341304862000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Although it's conceptual the whole image, -- and CORS is really not tied to XHR.","msgtype":"m.text"},"ts":1341304875000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"matjas: isn't the name \"Web ECMAScript\" enough? This spec is not what people mean when they say \"JavaScript\". :) Plus, \"JavaScript\" is a registered trademark.","msgtype":"m.text"},"ts":1341304876000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: annevk suggested it, and i liked it","msgtype":"m.text"},"ts":1341304908000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hasather: i’d argue this spec is what people mean when they say “javascript”","msgtype":"m.text"},"ts":1341304923000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"odinho: yeah but not everything matches the flow chart","msgtype":"m.text"},"ts":1341304952000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"odinho: e.g. <img> sans crossorigin doesn't use CORS","msgtype":"m.text"},"ts":1341304969000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hasather: e.g. 'foo'.substr() is not ECMAScript, but it is JavaScript (who wouldn’t call it so?)","msgtype":"m.text"},"ts":1341304990000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: people say JavaScript and refer to ECMAScript usually, not the browser extensions","msgtype":"m.text"},"ts":1341304993000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"zcorpan:   get ( lyrics.com/hello.txt )   looks cleaner, though. -- But can't find a way to codify the return.","msgtype":"m.text"},"ts":1341305017000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"The return has a different color tho'. Because it's supposed to be a body etc.","msgtype":"m.text"},"ts":1341305034000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I'm not sure if any code will make it clearer, I think it makes it harder to visualize at least :P","msgtype":"m.text"},"ts":1341305056000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"matjas: s/not the browser extensions/not *only* the browser extensions","msgtype":"m.text"},"ts":1341305067000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"hasather: #whatwg regulars people might refer to ECMAScript more often, but I’ll bet the average web developer means “anything that looks like ECMAScript and works in all browsers”","msgtype":"m.text"},"ts":1341305071000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"zcorpan: \"request lyrics.com/hello.txt\"  then? Instead of GET","msgtype":"m.text"},"ts":1341305080000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: wfm","msgtype":"m.text"},"ts":1341305092000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hasather: this spec requires an ES implementation + the extras, so it’s the whole package","msgtype":"m.text"},"ts":1341305102000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Okay :D It looks better than the old.","msgtype":"m.text"},"ts":1341305105000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"matjas: yea, but this only specs a subset","msgtype":"m.text"},"ts":1341305106000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"matjas: ok then :)","msgtype":"m.text"},"ts":1341305125000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"zcorpan: Updated.","msgtype":"m.text"},"ts":1341305129000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: it should really also be GET /hello.txt HTTP/1.1 :-)","msgtype":"m.text"},"ts":1341305276000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: No. I put my foot down to your correctness :P","msgtype":"m.text"},"ts":1341305309000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"shortness > correctness  for explanation picture :]","msgtype":"m.text"},"ts":1341305326000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"fine :-P","msgtype":"m.text"},"ts":1341305331000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i'm still gonna grumble like an old fart","msgtype":"m.text"},"ts":1341305343000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Well, technical non-relvevant detail correctness.","msgtype":"m.text"},"ts":1341305345000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"minus spelling errors.","msgtype":"m.text"},"ts":1341305358000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Speaking of which, fixed matjas spelling fix also. Only waiting for anne now...","msgtype":"m.text"},"ts":1341305411000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hasather: fixed — “If a getter for the prop property has been defined on the this object through the use of __defineGetter__ or the get syntax in the object initializer, return the getter function; else, return undefined.” + added examples","msgtype":"m.text"},"ts":1341305934000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1647","msgtype":"m.text"},"ts":1341311674000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Seems to be some disagreement about whether document.write causes load events","msgtype":"m.text"},"ts":1341311690000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"In any case the spec is wrong (it's an infinite loop in the spec)","msgtype":"m.text"},"ts":1341311715000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(for some value of 'loop')","msgtype":"m.text"},"ts":1341311739000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"matjas: __lookupGetter__ and friends probably want to be defined in terms of AccessorDescriptors as per ES5","msgtype":"m.text"},"ts":1341311942000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Look at e.g. http://es5.github.com/#x8.7.1 for clues","msgtype":"m.text"},"ts":1341312066000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":" /win 18","msgtype":"m.text"},"ts":1341312693000,"senderName":"volkmar","senderId":"volkmar@irc"},
{"content":{"body":"jgraham: thanks, added to TODO. I was trying to keep things simple :'[","msgtype":"m.text"},"ts":1341314063000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"MikeSmith: can you add matjas' work to http://platform.html5.org/ please?","msgtype":"m.text"},"ts":1341314397000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1341314409000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what's the URL?","msgtype":"m.text"},"ts":1341314416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: http://mathias.html5.org/specs/javascript/","msgtype":"m.text"},"ts":1341314435000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"(WIP)","msgtype":"m.text"},"ts":1341314452000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"everything is WIP :)","msgtype":"m.text"},"ts":1341314484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK added","msgtype":"m.text"},"ts":1341314651000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"does this mean IE will have to implement __proto__?","msgtype":"m.text"},"ts":1341314656000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"did like this: \"JavaScript (based on ECMAScript)\"","msgtype":"m.text"},"ts":1341314657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"niloy: No. Like all web standards it doesn't force anyone to do anything.","msgtype":"m.text"},"ts":1341314697000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but they should right?","msgtype":"m.text"},"ts":1341314710000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"niloy: IE will (sadly, IMO) be implementing __proto__ fairly soon, when ES6 support starts to come along.","msgtype":"m.text"},"ts":1341314732000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(It's simply not tenable to not support it on mobile where so much content relies upon WebKit behaviour.)","msgtype":"m.text"},"ts":1341314771000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"great! I was just wondering if exposing __proto__ is a good thing","msgtype":"m.text"},"ts":1341314803000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"Not really. Immutable prototype chains would be far nicer.","msgtype":"m.text"},"ts":1341314819000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"However, the web relies on it, so it's just another inelegant thing that's part of the web platform.","msgtype":"m.text"},"ts":1341314847000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh... sad","msgtype":"m.text"},"ts":1341314908000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"MikeSmith: nice","msgtype":"m.text"},"ts":1341314914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seemed like the simplest way to handle it","msgtype":"m.text"},"ts":1341314933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"niloy: As currently spec'd in ES6 it's really horrible, a magic data property with magic in [[Get]] and [[Put]]. Would be far nicer to have an accessor property.","msgtype":"m.text"},"ts":1341314954000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeh","msgtype":"m.text"},"ts":1341315060000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"niloy: if they want to be ES6-compliant, yeah","msgtype":"m.text"},"ts":1341315156000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: They're going to do it regardless of whether it's in ES6.","msgtype":"m.text"},"ts":1341315184000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: oh, cool","msgtype":"m.text"},"ts":1341315195000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"matjas: It's simply not viable on mobile anymore with the ubquity of WebKit-expecting content.","msgtype":"m.text"},"ts":1341315216000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I always felt taht not exposing __proto__ was one of the good things IE has done, apart from ajax","msgtype":"m.text"},"ts":1341315229000,"senderName":"niloy","senderId":"niloy@irc"},
{"content":{"body":"I'd still like to see first trying Object.defineProperty(Object.prototype, \"__proto__\", {get: function(o){return Object.getPropertyOf(o);},configurable:true});","msgtype":"m.text"},"ts":1341315296000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(i.e., a read-only __proto__, which as such can be entirely described by ES5 semantics)","msgtype":"m.text"},"ts":1341315313000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"But apparently, in large part down to a couple of libraries, that isn't possible for the mobile web.","msgtype":"m.text"},"ts":1341315334000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"it seemed that part if it was because most __proto__ uses are in order to mutate the [[prototype]] of newly created objects, and a point of contention was the syntax that was to be introduced to cover that important use-case. At the end of the day, it was new, non-backward compatible syntax vs. __proto__ which works on mobile and works on now the majority of desktop environments by user percent.","msgtype":"m.text"},"ts":1341315696000,"senderName":"benvie","senderId":"benvie@irc"},
{"content":{"body":"Given the fact that using the new syntax is a syntax error in existing browsers, and that __proto__ is already in the wild and widely used, the discussion shifted toward formalizing what already exists","msgtype":"m.text"},"ts":1341315697000,"senderName":"benvie","senderId":"benvie@irc"},
{"content":{"body":"benvie: Certainly almost everyone would've rather have gotten rid of the setter if possible, even if that meant introducing new syntax.","msgtype":"m.text"},"ts":1341315806000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that's where `<|` and `.{` came in and, I may have misinterpreted what I read, but those were what eventually fell by the wayside in favor of just using __proto__","msgtype":"m.text"},"ts":1341315911000,"senderName":"benvie","senderId":"benvie@irc"},
{"content":{"body":"http://play-ttd.com/ <-- don't tell Hixie","msgtype":"m.text"},"ts":1341316337000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't know what the status of this is, but it'd be ideal http://wiki.ecmascript.org/doku.php?id=harmony:proto_operator","msgtype":"m.text"},"ts":1341316612000,"senderName":"benvie","senderId":"benvie@irc"},
{"content":{"body":"jgraham: sweet","msgtype":"m.text"},"ts":1341317143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: now someone make it happen for Dungeon Keeper 2","msgtype":"m.text"},"ts":1341317153000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: do we still want to publish the Notification LCWD this week?","msgtype":"m.text"},"ts":1341317656000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see the message from Artur Ortega came in","msgtype":"m.text"},"ts":1341317699000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess we should address those comments first somehow","msgtype":"m.text"},"ts":1341317711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1341317715000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: need to find out what Apple/Google think","msgtype":"m.text"},"ts":1341317732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't know how you plan to resolve the remaining i18n comments","msgtype":"m.text"},"ts":1341317737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: exposing direction seems sensible, language seems overkill","msgtype":"m.text"},"ts":1341317751000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: OK, I'm planning to talk to Richard about that tonight","msgtype":"m.text"},"ts":1341317772000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Aren't you supposed to be depleting the crustacean population of western europe?","msgtype":"m.text"},"ts":1341317801000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"MikeSmith: at the end of the day, it's a lot of additional complexity to put into those systems and the benefit is small","msgtype":"m.text"},"ts":1341317804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1341317812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"jgraham: we're about to go cycling :)","msgtype":"m.text"},"ts":1341317815000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, fun :)","msgtype":"m.text"},"ts":1341317836000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: do you get notifications about testharness.js pull requests from github?","msgtype":"m.text"},"ts":1341319339000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Yes","msgtype":"m.text"},"ts":1341319411000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1341319416000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I got ones for the requests Lachy made anyway","msgtype":"m.text"},"ts":1341319424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Kind of annoying that step 3 has to be \"now commit using mercurial\"","msgtype":"m.text"},"ts":1341319455000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah :(","msgtype":"m.text"},"ts":1341319463000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Well step 4 I guess","msgtype":"m.text"},"ts":1341319467000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the actually-important step","msgtype":"m.text"},"ts":1341319480000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"1) Make patch 2) Upload to github 3) Get review 4) commit using mercurial to dvcs.w3.org","msgtype":"m.text"},"ts":1341319497000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can anyone tell me what \"whatwg\" is?","msgtype":"m.text"},"ts":1341319507000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"MikeSmith, jgraham: I want notification as well.","msgtype":"m.text"},"ts":1341319536000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Anyone know if Simon Pieters is in here and awake?","msgtype":"m.text"},"ts":1341319544000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: --> zcorpan:","msgtype":"m.text"},"ts":1341319556000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I got this error on w3c validator: Bad value rpuPostId for attribute name on element meta: Keyword rpupostid is not registered.","msgtype":"m.text"},"ts":1341319558000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"odinho: I can add you to the github w3c account","msgtype":"m.text"},"ts":1341319561000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Ohyea!","msgtype":"m.text"},"ts":1341319567000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"odinho: cool, thanks","msgtype":"m.text"},"ts":1341319572000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"how can I fix that?","msgtype":"m.text"},"ts":1341319575000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"odinho: what is your user name?","msgtype":"m.text"},"ts":1341319580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: Velmont","msgtype":"m.text"},"ts":1341319584000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hai","msgtype":"m.text"},"ts":1341319588000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(p.s. if anyone else might be interested, http://webcomponents.github.com/ :)","msgtype":"m.text"},"ts":1341319596000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"guestlald: a mailing list on which people, including several major browser vendors, discuss proposals for changes to the web; principally the HTML spec","msgtype":"m.text"},"ts":1341319600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"guestlald: you need to read the full text of that error message","msgtype":"m.text"},"ts":1341319615000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(x-tags ftw)","msgtype":"m.text"},"ts":1341319615000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"full text?","msgtype":"m.text"},"ts":1341319633000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"<meta name='rpuPostId' content='1914'><meta name='rpuPlugin' content='v2.7'/>… Syntax of metadata name: A metadata name listed in the HTML specification or listed in the WHATWG wiki. You can register metadata names on the WHATWG wiki yourself.","msgtype":"m.text"},"ts":1341319656000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: rpuPlugin is not a valid value for meta @name","msgtype":"m.text"},"ts":1341319700000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"its a plugin I use on my blog","msgtype":"m.text"},"ts":1341319723000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"zcorpan: when you are awake can you ping me please :)","msgtype":"m.text"},"ts":1341319727000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"I didn't put that in meta","msgtype":"m.text"},"ts":1341319738000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: it's not registered anywhere","msgtype":"m.text"},"ts":1341319739000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"expects zcorpan is awake","msgtype":"m.emote"},"ts":1341319744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Unless he is taking an afternoon nap","msgtype":"m.text"},"ts":1341319757000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tanepiper: i'm awake","msgtype":"m.text"},"ts":1341319758000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"expects he is busy writing CORS inline tests","msgtype":"m.emote"},"ts":1341319759000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"should I just remove the plugin?","msgtype":"m.text"},"ts":1341319763000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"Which would noy be a bad idea!","msgtype":"m.text"},"ts":1341319764000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"guestlald: you can safely ignore that message if you want","msgtype":"m.text"},"ts":1341319783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or should I not worry about those errors?","msgtype":"m.text"},"ts":1341319784000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1341319788000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"yeah, that","msgtype":"m.text"},"ts":1341319789000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: cool - Patrick Lauke said you are probably the person I need to talk to re: web components in Opera","msgtype":"m.text"},"ts":1341319790000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"guestlald: If you don't want that message, you can fix the plugin, remove it, or ignore the message.","msgtype":"m.text"},"ts":1341319793000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"doesn't slow down my site if I ignore message?","msgtype":"m.text"},"ts":1341319808000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: No.","msgtype":"m.text"},"ts":1341319820000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"tanepiper: zcorpan or I are probably good to talk to. Maybe odinho also","msgtype":"m.text"},"ts":1341319829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"thank you :)","msgtype":"m.text"},"ts":1341319833000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"anyone know if a w3c validation irc chatroom exists?","msgtype":"m.text"},"ts":1341319853000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"tanepiper: what jgraham said :-)","msgtype":"m.text"},"ts":1341319853000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"guestlald: no there is not one. but you can always ask here","msgtype":"m.text"},"ts":1341319876000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"A charset attribute on a meta element found after the first 512 bytes. …134593'></script> <meta charset=\"UTF-8\"/><title>You Are Stronger | The Optimis…","msgtype":"m.text"},"ts":1341319895000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"http://www.anthonysabilities.com/blog/yas/","msgtype":"m.text"},"ts":1341319916000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: You should put it at the top, right after <!doctype html>","msgtype":"m.text"},"ts":1341319918000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"above head?","msgtype":"m.text"},"ts":1341319929000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: You don't need head, but if you have <head> there do it right after <head> then.","msgtype":"m.text"},"ts":1341319944000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"jgraham: ah cool - yea, basically I;ve spoken to Daniel Buchner at Moz about this, and he's on board with getting the idea going - basically I'd like to do this 'not in a vacuum' but I've been tracking web components for a bit of time now, since Alex Russel talked about them - and after the GoogleIO talk and seeing the X-Tags implementation I've kicked off http://webcomponents.github.com/","msgtype":"m.text"},"ts":1341319959000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"its already like this <head>   <meta charset=\"<?php bloginfo('charset'); ?>\" />    <title><?php atom()->documentTitle(); ?></title>","msgtype":"m.text"},"ts":1341319971000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"but my minify plugin adds more code before it","msgtype":"m.text"},"ts":1341319993000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: So you have nasty plugins doing nasty things.","msgtype":"m.text"},"ts":1341319997000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"<!DOCTYPE html><html dir=\"ltr\" lang=\"en-US\" xmlns:fb=\"http://www.facebook.com/2008/fbml\"><head><link rel='stylesheet' href='http://www.anthonysabilities.com/blog/wp-content/plugins/wp-minify/min/?f=wp-content/plugins/custom-about-author/cab-style.css,wp-content/plugins/wp-single-post-navigation/css/single-post-navigation.css,wp-content/themes/mystique/css/core.css,wp-content/themes/mystique/css/style-blue.css,wp-content/themes/my","msgtype":"m.text"},"ts":1341320039000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"ideally i'd like to get a dev rel member on board from each of the browser vendors (sans Apple, because mehh) so we have people who can sanity check and make sure X-Tags, and moving on to proper web components, that are developer-proposed are sane :)","msgtype":"m.text"},"ts":1341320054000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"ignore that code, didn't paste right lol","msgtype":"m.text"},"ts":1341320059000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"odinho: added you https://github.com/w3c don't know if that means you will get the notifications or not (I don't understand how github handles the settings for that)","msgtype":"m.text"},"ts":1341320080000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"tanepiper: what's mehh about Apple?","msgtype":"m.text"},"ts":1341320090000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tanepiper: Oh well none of us are dev-rel","msgtype":"m.text"},"ts":1341320091000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"but wpminify adds that link code","msgtype":"m.text"},"ts":1341320093000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"before meta","msgtype":"m.text"},"ts":1341320100000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"MikeSmith: Cool, guess that should be enough.","msgtype":"m.text"},"ts":1341320101000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"can I just put the meta before head?","msgtype":"m.text"},"ts":1341320116000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"after <!DOCTYPE html>","msgtype":"m.text"},"ts":1341320128000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"tanepiper: ted is cool.","msgtype":"m.text"},"ts":1341320144000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"zcorpan: afaik they don't do much dev rel around Safari? I may be wrong, but that's the impression I get","msgtype":"m.text"},"ts":1341320144000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"guestlald: I guess you could try omitting the head start tags and end tags completely. Though dunno that might make your plugin choke.","msgtype":"m.text"},"ts":1341320204000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"<!DOCTYPE html> <html <?php language_attributes('html'); ?>>  <head>   <meta charset=\"<?php bloginfo('charset'); ?>\" />    <title><?php atom()->documentTitle(); ?></title>","msgtype":"m.text"},"ts":1341320224000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"tanepiper: just so we understand each other, what do you mean with dev rel?","msgtype":"m.text"},"ts":1341320227000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"change to","msgtype":"m.text"},"ts":1341320229000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"<!DOCTYPE html> <meta charset=\"<?php bloginfo('charset'); ?>\" /><html <?php language_attributes('html'); ?>>  <head>      <title><?php atom()->documentTitle(); ?></title>","msgtype":"m.text"},"ts":1341320241000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"The organisation exists around https://github.com/WebComponents - and i'm hoping to finaise the submission guidelines this week, get Moz's existing X-tags from http://mozilla.github.com/x-tag/ imported in as repos and get some discussion started on improving them","msgtype":"m.text"},"ts":1341320247000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1341320249000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"tanepiper: Edward O'Connor is apple and very responsive and cool.","msgtype":"m.text"},"ts":1341320263000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"I need the head tags","msgtype":"m.text"},"ts":1341320274000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"guestlald: that's not going to validate but it will if you drop the head start tag and end tag","msgtype":"m.text"},"ts":1341320275000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"guestlald: why?","msgtype":"m.text"},"ts":1341320281000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: good question i suppose - really we want to make sure that proposed web components are sane for the browser vendors","msgtype":"m.text"},"ts":1341320281000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"wordpress put them there","msgtype":"m.text"},"ts":1341320293000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"tanepiper: apple people can have good feedback, i wouldn't exclude them up front :-)","msgtype":"m.text"},"ts":1341320334000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"guestlald: then you're probably better off asking in a wordpress forum","msgtype":"m.text"},"ts":1341320335000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1341320344000,"senderName":"guestlald","senderId":"guestlald@irc"},
{"content":{"body":"doesn't really know what x-tags is, but web components in general is quite vendor driven","msgtype":"m.emote"},"ts":1341320401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"tanepiper: We're spec and web tech people in Opera. We have something called devrel too, they are more working with developers, w/ some specs on the side.","msgtype":"m.text"},"ts":1341320410000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"ideally at least one member from each will have full admin rights on the organisation to help keep things in check, potentially do merges on repos from incoming patch requests (the plan is to initially start with X-tags so we can have the likes of http://mozilla.github.com/x-tag/demo.html#tabbox or http://mozilla.github.com/x-tag/demo.html#modal - get these speced)","msgtype":"m.text"},"ts":1341320415000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: You have seen http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html ?","msgtype":"m.text"},"ts":1341320449000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: X-Tag is based on the Custom Elements portion of the W3 Web Components spec.","msgtype":"m.text"},"ts":1341320466000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"i.e. a polyfill developers can use now :)","msgtype":"m.text"},"ts":1341320486000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"it's less to do with the implementation and more to do with what developers will actually do with this stuff","msgtype":"m.text"},"ts":1341320513000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"e.g. one tab compoenent to rule them all vs 50,000,000 different tab components","msgtype":"m.text"},"ts":1341320535000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"odinho: that's maybe who I should be speaking to then, but I was directed here via a question on twitter :)","msgtype":"m.text"},"ts":1341320626000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: Yea, you spoke to the devrel people, they sent you to us, who have our hands a bit more dirty and deeper into the specs etc.","msgtype":"m.text"},"ts":1341320662000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"tanepiper: it's probably my fault you ended up here :-) but at least now we know a bit more about what you're after","msgtype":"m.text"},"ts":1341320791000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: :) Cool, yea this is a project very much about defining standard <element>'s - not how you guys are implementing what we'll be using as devs","msgtype":"m.text"},"ts":1341320853000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: yeah, our devrel people seems more suitable for that kind of thing","msgtype":"m.text"},"ts":1341321142000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"assuming one of them can commit to it","msgtype":"m.text"},"ts":1341321161000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"maybe they'll just go \"LOL I dunno nothing about web components, buy me a slab of beer and i'll *consider* it\"","msgtype":"m.text"},"ts":1341321262000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thought Patrick Lauke was in dev rel","msgtype":"m.emote"},"ts":1341321458000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: He is.","msgtype":"m.text"},"ts":1341321467000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"so you dudes should pass the hot potato back to him","msgtype":"m.text"},"ts":1341321487000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or karlcow","msgtype":"m.text"},"ts":1341321492000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: i just as a MS developer evangelist 'trying to make html5 work for everyone' - he also asked what are web components :)","msgtype":"m.text"},"ts":1341321610000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"*le sigh*","msgtype":"m.text"},"ts":1341321621000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"But well, I don't know... For my part, I feel normal spec/webtech people is better suited than devrel. Although, I don't really know what different stuff devrel do, -- they do more Twitter and less tests than the rest of us at least.","msgtype":"m.text"},"ts":1341321644000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"Less arguing on mailing lists.","msgtype":"m.text"},"ts":1341321656000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"hmm well testing will be a big part of this - we don't want x-tags (custom elements) going out that will break things badly :D","msgtype":"m.text"},"ts":1341321700000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"is reading the backlog for the hot potato","msgtype":"m.emote"},"ts":1341321750000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"MikeSmith: in fact there is one for validation or more exactly two ;) question of guestald #validator on freenode, #validator on w3c irc","msgtype":"m.text"},"ts":1341321894000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"\"Web Components Organisation — We don't need no stinkin' standards bodies\" …","msgtype":"m.text"},"ts":1341321981000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Wait, so for computed styles, what does \"As specified, but with relative lengths converted into absolute lengths\" actually mean?","msgtype":"m.text"},"ts":1341322201000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"What unit should be used for the absolute length, for instance?","msgtype":"m.text"},"ts":1341322211000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have read the http://webcomponents.github.com/ a few days ago… and not sure what the goal is, specifically with the inflammatory tone at the start.","msgtype":"m.text"},"ts":1341322249000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"AryehGregor: i think it means converted to px, but that's not what it says is it...","msgtype":"m.text"},"ts":1341322281000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1341322285000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Hmm, you know, I guess it makes no difference except for in the CSSOM.","msgtype":"m.text"},"ts":1341322300000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Because CSSOM aside, computed value is only used for inheritance, so units are irrelevant.","msgtype":"m.text"},"ts":1341322340000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Seems like \"convert to px\" is how all UAs handle getComputedStyle() for line-height, at least.","msgtype":"m.text"},"ts":1341322413000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tanepiper: not sure what do you want exactly","msgtype":"m.text"},"ts":1341322989000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"oh wow http://darobin.github.com/test-harness-tutorial/docs/using-testharness.html is nice","msgtype":"m.text"},"ts":1341324142000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bravo Berjon","msgtype":"m.text"},"ts":1341324147000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"gsnedders, Ms2ger et al. is there any way to predefine the slugs instead of letting Anolis create them?","msgtype":"m.text"},"ts":1341324165000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Slugs?","msgtype":"m.text"},"ts":1341324180000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: e.g. I’d like http://mathias.html5.org/specs/javascript/#array.prototype.splice(start,-deletecount-,-item1-,-item2-,-…-)) to just say http://mathias.html5.org/specs/javascript/#array.prototype.splice","msgtype":"m.text"},"ts":1341324188000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"hasn't every good distruptive project started by having a go at the old way :)  And the goal is, browser vendors are finally giving developers the necessary tools to build our own tags and components, outwith defined specs, which means we'll start to see the likes of <x-modal>, <x-datepicker>, etc - but rather than have the current situation where you have 50 different date pickers to choose from - why not","msgtype":"m.text"},"ts":1341324233000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"instead have developers come together and try agree one to rule them all.  Then as browser vendors scower the web post-html5 final spec, looking for new tags to add nativly (as per the suggestion in the GoogleIO talk) - then all these should be speced out rather well","msgtype":"m.text"},"ts":1341324236000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"<h3 id=array.prototype.splice>... should work, I think","msgtype":"m.text"},"ts":1341324245000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: hah, just like that huh :)","msgtype":"m.text"},"ts":1341324279000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"All thanks to gsnedders, that :)","msgtype":"m.text"},"ts":1341324312000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"DON'T BLAME ME.","msgtype":"m.text"},"ts":1341324320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hmm.  So why does the resolved value for transform-origin and perspective-origin resolve percentages to absolute lengths, but transform not?","msgtype":"m.text"},"ts":1341324365000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"tanepiper, nobody has a problem with dev-written libraries, like jQuery or whatever.  Specs still need to exist to define things that are better implemented in browsers directly, such as for reasons of efficiency or because scripts lack some capabilities or because not everyone wants to pull in a 100k library to get basic functionality.","msgtype":"m.text"},"ts":1341324463000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I have more than enough problems with jQuery :)","msgtype":"m.text"},"ts":1341324500000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, but things like it are going to exist, and that's fine.","msgtype":"m.text"},"ts":1341324512000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"well why can't these libraries, instead of creating their own markup and functionality over and over for the same thing (and making it almost impossible to mix-and-match libraries too) why can't they use agreed upon custom components?  Isn't this what custom components are all about?","msgtype":"m.text"},"ts":1341324656000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"Not really… I mean if you have two libraries that implement datepickers with different feature sets and expose different APIs, it will be quite hard to make them the same","msgtype":"m.text"},"ts":1341324728000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"By giving us the shadow DOM, etc, do you really want developers going out their way to write <mycustomvideo> tags? Or shouldn't you want them to use the pre-spec'ed <video> tag that's there - same with custom components.  Why does the web need to be filled with <tanes-datepicker>, <joes-datepicker>, etc (i used those tag names as descriptive only)","msgtype":"m.text"},"ts":1341324751000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"Well I sort of agree with Hixie that I don't want them writing their own tags at all","msgtype":"m.text"},"ts":1341324780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and how will google, scraping the web, know that both these are really the same thing and lots of people are using them","msgtype":"m.text"},"ts":1341324796000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"anyway, meeting","msgtype":"m.text"},"ts":1341324801000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: any point of extensions will be used… in a way which is not consensual. This is the goal of extensions. I understand your goals but it seems a case of let create yet another thing on the pile of all other things.","msgtype":"m.text"},"ts":1341325144000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"MikeSmith: the first code snippet is wrong though, should use root-relative url","msgtype":"m.text"},"ts":1341325189000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tanepiper: more exactly it is a case of XKCD 927 http://xkcd.com/927/","msgtype":"m.text"},"ts":1341325218000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"zcorpan: oh. alert Berjon. But I think he's mostly away this week","msgtype":"m.text"},"ts":1341325252000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: It is wrong for submissions to the W3C, but right for the text he gives there","msgtype":"m.text"},"ts":1341325401000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"in that it is the easiest way to get started writing a test","msgtype":"m.text"},"ts":1341325415000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Oh yes, I should poke Lachy about using root-relative urls","msgtype":"m.text"},"ts":1341325469000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I did, didn't I?","msgtype":"m.text"},"ts":1341325489000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ms2ger, which URLs did I use wrongly?","msgtype":"m.text"},"ts":1341325618000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Looks like you got it right","msgtype":"m.text"},"ts":1341325636000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Now I'm confused","msgtype":"m.text"},"ts":1341325646000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"jgraham: yeah, that's fair enough. i haven't finished reading it, but maybe it should have a note about submission to w3c since people who wanna write tests and submit to w3c might well read this as how to do it","msgtype":"m.text"},"ts":1341325656000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, also to get them imported into browser test suites, no?","msgtype":"m.text"},"ts":1341325705000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Yes","msgtype":"m.text"},"ts":1341325720000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I am aware though that there is a tension between \"how do I get going quickly\" and \"how do I write perfect tests\"","msgtype":"m.text"},"ts":1341325751000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think making step 1) \"install a local web server\" might be a bit off-putting","msgtype":"m.text"},"ts":1341325771000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"assert_equals(actual, expected, description) checks that actual and expected have the same value (without necessarily being the same object).\" seems wrong","msgtype":"m.text"},"ts":1341325782000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jgraham, depends. There are very easy ways to get set up with a local web server on some platforms","msgtype":"m.text"},"ts":1341325797000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: Sure. But as a prerequisite it increases the barrier to entry","msgtype":"m.text"},"ts":1341325821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Although we should just make a node.js based server specifically for running the tests. People don't take projects seriously anymore unless step 1) is \"install node.js and npm\"","msgtype":"m.text"},"ts":1341325887000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, running V8, that sounds like a good idea :)","msgtype":"m.text"},"ts":1341325925000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"(note: that was satire. If you think it is a serious suggestion, your doctor advises that you start monitoring your koolaid consumption)","msgtype":"m.text"},"ts":1341325930000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Btw, is Opera going to implement the Blob constructor at some point?","msgtype":"m.text"},"ts":1341326034000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Why wouldn';tt we?","msgtype":"m.text"},"ts":1341326125000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Ms2ger: i think that's already done (might not be shipped yet)","msgtype":"m.text"},"ts":1341326125000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Doesn't look implemented in my opera-next :)","msgtype":"m.text"},"ts":1341326206000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Anyway, you may be interested in http://w3c-test.org/webapps/FileAPI/tests/submissions/Ms2ger/Blob-constructor.html","msgtype":"m.text"},"ts":1341326225000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: nice, thanks","msgtype":"m.text"},"ts":1341326290000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Ooh cool","msgtype":"m.text"},"ts":1341326299000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(I wanted to write a test for passing null for dictionaries, but it got a bit out of hand)","msgtype":"m.text"},"ts":1341326349000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: (making a function called assert_blob that lives outside a test() is very weird. Rename it to test_blob?)","msgtype":"m.text"},"ts":1341326504000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Fair point, done","msgtype":"m.text"},"ts":1341326658000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1341326729000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"karlcow: you are the second person to link me to that (or maybe it was you on HN?) but the fact is, we're getting the tools to do this, it's happening - but lets not let idiots fuck it up for the rest of us - so what if there is 1 more competing spec, better than everyone coming up with their own individual snowflake spec :)","msgtype":"m.text"},"ts":1341327274000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"doesn't want the web to explode","msgtype":"m.emote"},"ts":1341327292000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"tanepiper: the Web will not explode. ☺ Not in that way at least.","msgtype":"m.text"},"ts":1341327670000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"So you are targeting mainly the Web developers and encouraging a kind of best practices. Not sure how browsers devrel have any impacts or should have impacts on it. You were promoting Anarchy (let's say ala Proudhon and not Bakounine), it will then settle down by itself with the agreement of people participating to your project.","msgtype":"m.text"},"ts":1341327670000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"well a) devrel can help promote it beyond my efforts (as I mentioned the Moz guy I spoke to is keen) b) Despite the anarchy, there still needs to be final agreement on things that won't break browsers (and the anarchy is really more around the proposal stage, let devs go hog wild with suggestions, and through discussion the wheat and chaff can be seperated)","msgtype":"m.text"},"ts":1341328527000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"ah not anarchy then","msgtype":"m.text"},"ts":1341328958000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Given a WebIDL dictionary, which defines a value like the following:","msgtype":"m.text"},"ts":1341329033000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"dictionary X {","msgtype":"m.text"},"ts":1341329036000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"  RegExp foo;","msgtype":"m.text"},"ts":1341329036000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"}","msgtype":"m.text"},"ts":1341329038000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Is that handled by the ECMAScript conversion algorithm for object http://dev.w3.org/2006/webapi/WebIDL/#es-object ?","msgtype":"m.text"},"ts":1341329067000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Invalid, there's no such thing as \"RegExp\" in WebIDL","msgtype":"m.text"},"ts":1341329093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"hmm.","msgtype":"m.text"},"ts":1341329101000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"That's what I was afraid of.","msgtype":"m.text"},"ts":1341329109000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Ms2ger, so, then to handle such a case in a spec, it would have to be defined as { object foo; } and then use prose to check if it's a regular expression?","msgtype":"m.text"},"ts":1341329244000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Either that or change WebIDL","msgtype":"m.text"},"ts":1341329282000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"karlcow: Not anarchy in the sense of 'lets throw stuff through the bank window' - that would be silly.  But also no situation where one person can say, decide a tag is no longer required despite the weight of developers disagreeing with that","msgtype":"m.text"},"ts":1341329364000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"well, it's for an internal opera extensions feature that I'm doing QA for. So we could just accept it as being a willful violation too.","msgtype":"m.text"},"ts":1341329369000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"*cough*","msgtype":"m.text"},"ts":1341329374000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"no no ☺ Anarchy has a precise meaning at least for me. Anarchy != mess","msgtype":"m.text"},"ts":1341329409000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"https://en.wikipedia.org/wiki/Anarchism","msgtype":"m.text"},"ts":1341329431000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"Maybe Anarchy is wrong, but it's certainly not democratic (because Democracy is a suckers game) and no dictatorship because that never works","msgtype":"m.text"},"ts":1341329464000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"oh, and it's not against the 'state' here (despite my opening paragraph) - quite the opposite, it's working with the state :)","msgtype":"m.text"},"ts":1341329570000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"that'll get toned down once I actually sit down this week and finish some of the documentation around it","msgtype":"m.text"},"ts":1341329593000,"senderName":"tanepiper","senderId":"tanepiper@irc"},
{"content":{"body":"can tell TabAtkins_ is the primary editor of a draft when it uses terms like \"webapps\" and \"multicol\" in spec prose","msgtype":"m.emote"},"ts":1341330342000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"You sure love your contractions.","msgtype":"m.text"},"ts":1341330362000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger: http://w3c-test.org/webapps/FileAPI/tests/submissions/Opera/","msgtype":"m.text"},"ts":1341330530000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hmm, so is it well/correctly defined how the load event in an iframe interacts with the parent document","msgtype":"m.text"},"ts":1341330627000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The spec says \"When there is an active parser in the iframe, and when anything in the iframe is delaying the load event of the iframe's browsing context's active document, the iframe must delay the load event of its document\"","msgtype":"m.text"},"ts":1341330652000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And it has an active parser whilst the parser is not stopped or aborted","msgtype":"m.text"},"ts":1341330696000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But \"stopped\" links to \"the end\"","msgtype":"m.text"},"ts":1341330705000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"So it isn't clear if \"has an active parser\" becomes untrue at the start or at the end of that set of steps","msgtype":"m.text"},"ts":1341330742000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The text makes it sound like the end of those steps, but that can't be true or you would get the load event on the parent document before the load event on the iframe","msgtype":"m.text"},"ts":1341330918000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk - congrats on Fullscreen being published as a FPWD","msgtype":"m.text"},"ts":1341330953000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://www.w3.org/TR/2012/WD-fullscreen-20120703/","msgtype":"m.text"},"ts":1341331045000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"jgraham: maybe The end should have a step that says \"now the document no longer *has an active parser*\" that it can hook into, or so?","msgtype":"m.text"},"ts":1341331136000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, something like that","msgtype":"m.text"},"ts":1341331207000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"all links to terms like \"browsing context\" have been updated only in the static /TR/2012/ copy to link to http://www.w3.org/TR/2012/WD-html5-20120329/ instead of http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#browsing-context - no change in dvcs","msgtype":"m.text"},"ts":1341331323000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"zcorpan, hmm, that wasn't there before :)","msgtype":"m.text"},"ts":1341331363000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I wonder if that means that someone will do those (semi)automatically again next for the next TR snapshot, or if it doesn't matter that there's another TR snapshot.","msgtype":"m.text"},"ts":1341331364000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Ms2ger: indeed","msgtype":"m.text"},"ts":1341331421000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well at least the FPWD kicks off the call-for-exclusions","msgtype":"m.text"},"ts":1341331468000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"AryehGregor: Hehe.","msgtype":"m.text"},"ts":1341331488000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"gsnedders: working on fixing one last issue with __proto__ as accessor, hopefully it'll be done today and I'll send mail","msgtype":"m.text"},"ts":1341332597000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"thought I had it done yesterday, ran into a last-minute issue I didn't have time to debug before end of day","msgtype":"m.text"},"ts":1341332623000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"tries to find an empty workspace to try and finish his stuff off","msgtype":"m.emote"},"ts":1341333150000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: You going for origin-restricted? (i.e., the setter only works on same-global objects?)","msgtype":"m.text"},"ts":1341333306000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: origin-restricted, or global-restricted?","msgtype":"m.text"},"ts":1341333347000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gsnedders: right now I'm going for no restrictions","msgtype":"m.text"},"ts":1341333357000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"gsnedders: since there are no restrictions on __proto__ across globals right now, other than the ones enforced by the normal property lookup process","msgtype":"m.text"},"ts":1341333382000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"I","msgtype":"m.text"},"ts":1341333473000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1341333475000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: I mean taking the __proto__ setter (through getOwnPropertyDescriptor) from another global. That's something you can't do today, because of the lack of getters.","msgtype":"m.text"},"ts":1341333854000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"once the __proto__ setter escapes, it goes where it will","msgtype":"m.text"},"ts":1341333980000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"Right, so you're following the same route as JSC, against the wiki proposal and what's needed for SES.","msgtype":"m.text"},"ts":1341334205000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"there's an actual wiki proposal for it right now?  wasn't aware of that","msgtype":"m.text"},"ts":1341334241000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"http://wiki.ecmascript.org/doku.php?id=strawman:magic_proto_property#normative-optional_proposal_currently_in_es5_spec_language","msgtype":"m.text"},"ts":1341334416000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"If O is not an object from this context, throw a TypeError exception.\" notably.","msgtype":"m.text"},"ts":1341334431000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(which JSC doesn't implement, and I really don't want to for reasons I've said before)","msgtype":"m.text"},"ts":1341334444000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"was going to poison Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\").set instead","msgtype":"m.emote"},"ts":1341334624000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(But that requirement, or something else making the setter useless or unavailable is needed for SES)","msgtype":"m.text"},"ts":1341334782000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: I know Brendan was especially worried about letting the setter out in the wild, even with the wiki proposal. Poisioning .set seems the simple way to do this.","msgtype":"m.text"},"ts":1341336702000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"brendan is always worried about backwards-compatibility, with some frequency to the point of excess, I think","msgtype":"m.text"},"ts":1341336739000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"It's not the BC concern here, but the extra security surface risk.","msgtype":"m.text"},"ts":1341336758000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"witness why we still have E4X, although thankfully that's dying very very soon now","msgtype":"m.text"},"ts":1341336760000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"(Hey, if I could convince others, I'd be all for dropping the setter and trying to evangelize it through)","msgtype":"m.text"},"ts":1341336791000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(But that looks less and less likely :()","msgtype":"m.text"},"ts":1341336798000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"also for security, too, although with somewhat more justification there","msgtype":"m.text"},"ts":1341336805000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"the more we simplify our algorithms and code, the easier it is to make changes with less security-conscious hesitance","msgtype":"m.text"},"ts":1341336827000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"and if there's one thing we are doing all the time now, it's simplifying","msgtype":"m.text"},"ts":1341336847000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"jwalden: I've got .set poisoned now, hopefully get that in (along with moving it to an accessor) really soon.","msgtype":"m.text"},"ts":1341337147000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jwalden: Basically, the SES people want to make it impossible to mutate prototypes within a global context, so other global's setter functions can't work on it.","msgtype":"m.text"},"ts":1341337202000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"if we want to make __proto__ setting not work across contexts, that should be fairly simple to bolt on after the initial patch for us","msgtype":"m.text"},"ts":1341337266000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":" 1 file changed, 14 insertions(+), 1 deletion(-)","msgtype":"m.text"},"ts":1341337284000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think that counts as simple. :)","msgtype":"m.text"},"ts":1341337289000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, you made me curious.  Now I'm doing this on mozilla-central: hg log -I '**/*.cpp' -I '**/*.h' -p -u ayg | diffstat","msgtype":"m.text"},"ts":1341337830000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Have I made Gecko simpler or more complicated so far?  :)","msgtype":"m.text"},"ts":1341337840000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Heh. Will, given there are commits from CVS-days which makes git believe I've written code I haven't…","msgtype":"m.text"},"ts":1341338046000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"*Well","msgtype":"m.text"},"ts":1341338049000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":" 155 files changed, 6085 insertions(+), 6713 deletions(-)","msgtype":"m.text"},"ts":1341338236000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Not bad.","msgtype":"m.text"},"ts":1341338237000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Ms2ger is:  2430 files changed, 52892 insertions(+), 116678 deletions(-)","msgtype":"m.text"},"ts":1341338339000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: \"yes\"","msgtype":"m.text"},"ts":1341338611000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"annevk: I'm not sure what \"a camping full of hippies\" is. Campsite, perhaps?","msgtype":"m.text"},"ts":1341347480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"camping site?","msgtype":"m.text"},"ts":1341347546000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in french, and maybe other non-english languages, there's a single noun for \"camping site\" that sounds like \"camping\"","msgtype":"m.text"},"ts":1341347574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, and in english there's \"campsite\" :)","msgtype":"m.text"},"ts":1341347600000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oops, i read that as \"composite\" -_-","msgtype":"m.text"},"ts":1341347614000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Did you see the question about delaying the load event in iframes earlier","msgtype":"m.text"},"ts":1341347737000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i did not","msgtype":"m.text"},"ts":1341347743000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20120703#l-774","msgtype":"m.text"},"ts":1341347758000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(except I think I might have said \"end\" and meant \"start\" but I'm not sure)","msgtype":"m.text"},"ts":1341347828000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(yes I did)","msgtype":"m.text"},"ts":1341347879000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: it doesn't link to \"the end\" it links to the definition of \"stops parsing\"","msgtype":"m.text"},"ts":1341347986000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: which is the condition that begins running the steps","msgtype":"m.text"},"ts":1341347994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: the parser says when you \"stop parsing\" (typically in response to an EOF token)","msgtype":"m.text"},"ts":1341348019000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But then the document would stop delaying the load event of the parent before those steps run, no?","msgtype":"m.text"},"ts":1341348134000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Whereas you have to have the load event on the child fire before the load event on the parent","msgtype":"m.text"},"ts":1341348206000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's quite possible the spec has a bug :-)","msgtype":"m.text"},"ts":1341348400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well I can file a bug if you like :) I'm just checking first in case I am missing something subtle or indeed something blindingly obvious","msgtype":"m.text"},"ts":1341348442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"as specced, if the parser in a nested iframe is the only thing delaying the load event of the parent then the parent will likely fire 'load' before the child.","msgtype":"m.text"},"ts":1341348495000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as far as i can tell","msgtype":"m.text"},"ts":1341348500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so if that's not compatible, yes, please send feedback","msgtype":"m.text"},"ts":1341348509000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(or file a bug)","msgtype":"m.text"},"ts":1341348510000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: thanks will fix","msgtype":"m.text"},"ts":1341348642000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: OK. I'm pretty sure that frames always have to fire load events before their parents","msgtype":"m.text"},"ts":1341348680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thought camping was pretty universal for some reason","msgtype":"m.text"},"ts":1341348746000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Filed bug 17680","msgtype":"m.text"},"ts":1341348758000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: Also I feel that \"stinged\" should probably be \"stang\" or \"stung\"","msgtype":"m.text"},"ts":1341348812000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Perhaps the latter? My native-speaker intuition fails me","msgtype":"m.text"},"ts":1341348829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"anything wrong with clean-shaven or shaven?","msgtype":"m.text"},"ts":1341348925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"spellchecker is marking them as incorrect...","msgtype":"m.text"},"ts":1341348932000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(it's also not happy with Nirvana)","msgtype":"m.text"},"ts":1341348948000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: yeah, i doubt i tested that when writing that part of the spec to be honest","msgtype":"m.text"},"ts":1341349127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: I think [clean-]shaven is fine","msgtype":"m.text"},"ts":1341349151000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cool cool","msgtype":"m.text"},"ts":1341349178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"clean-shaven is definitely fine.","msgtype":"m.text"},"ts":1341349582000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"shaven by itself seems less common to my ears, but there's nothing wrong with it.  I think it's usually conjugated as \"shaved\" when alone, though.","msgtype":"m.text"},"ts":1341349611000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"Do many user-agents actually use the media attribute of the style tag?","msgtype":"m.text"},"ts":1341350088000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1341350135000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"How are they selected? Example:","msgtype":"m.text"},"ts":1341350156000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"Or wait, I don't know if <style media> is used.  <link rel=stylesheet media> definitely does.","msgtype":"m.text"},"ts":1341350165000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"that applies also, since I'd be using it instead of <style>","msgtype":"m.text"},"ts":1341350182000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"yada.css\" /> <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"yada_screen.css\" />","msgtype":"m.text"},"ts":1341350241000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"Media Queries just return a boolean - do they match or not?  Then all the ones that match are used.","msgtype":"m.text"},"ts":1341350247000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1341350269000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"TabAtkins_: so the regular cascade order applies, nothing fancy?","msgtype":"m.text"},"ts":1341350281000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"Yup.","msgtype":"m.text"},"ts":1341350285000,"senderName":"TabAtkins_","senderId":"TabAtkins_@irc"},
{"content":{"body":"cool, thank you","msgtype":"m.text"},"ts":1341350289000,"senderName":"guzzlefry","senderId":"guzzlefry@irc"},
{"content":{"body":"Do you think that HTTP 2.0 will be released soon in a Windows 95 style commercial jippo with new versions of all major browsers coming out within a week with full support for it and where the protocol supports native and standard and super-safe payments totally free from transaction fees and where any webpage (such as our HTML 5 games) may ask if the user wants to insta-pay $0.1 to play the game,","msgtype":"m.text"},"ts":1341358643000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"},
{"content":{"body":"or any other amount, and when they click yes, it's transferred instantly to our bank account? Because that would be a very, very, very welcome addition to HTML 5 + CSS 3 + modern JavaScript.","msgtype":"m.text"},"ts":1341358644000,"senderName":"smokeyrat","senderId":"smokeyrat@irc"}
]