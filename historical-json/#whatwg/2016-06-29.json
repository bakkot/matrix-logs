[
{"content":{"body":"botie, inform zcorpan made some changes on the as-attribute branch in response to Domenic’s review comments, so make sure to pull before you do more work there locally","msgtype":"m.text"},"ts":1467173222000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1467173222000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"zcorpan, at 2016-06-29 04:07 UTC, MikeSmith said: made some changes on the as-attribute branch in response to Domenic’s review comments, so make sure to pull before you do more work there locally","msgtype":"m.text"},"ts":1467174719000,"senderName":"botie","senderId":"botie@irc"},
{"content":{"body":"annevk: there are bunch of different places in the HTML spec that say, “Let request be a new request whose… destination is \"subresource\"” but \"subresource\" is not (any longer) a valid destination","msgtype":"m.text"},"ts":1467179982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: so am I misunderstanding something, or do those places need to be updated/fixed?","msgtype":"m.text"},"ts":1467180018000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: and if so I’m happy to write up a PR with the fix, but first I need to understand what it should be changed to…","msgtype":"m.text"},"ts":1467180323000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: need to be changed to the new values we introduced","msgtype":"m.text"},"ts":1467180375000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: there is an open issue","msgtype":"m.text"},"ts":1467180392000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1467180408000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks for the issue","msgtype":"m.emote"},"ts":1467180417000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: should be pretty easy mapping; Fetch also has a table near def of destination","msgtype":"m.text"},"ts":1467180509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467180567000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK I can try writing up a patch","msgtype":"m.text"},"ts":1467180606000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t see an open issue other than https://github.com/whatwg/html/issues/1142","msgtype":"m.text"},"ts":1467180643000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: thanks for the link. forwarded to ajeffrey, who is working with navigation in servo","msgtype":"m.text"},"ts":1467180978000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"(I'm not really looking at navigation right now; I came across that bug when going through how javascript: works)","msgtype":"m.text"},"ts":1467181001000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"> This algorithm has so much drama.","msgtype":"m.text"},"ts":1467181018000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"so true","msgtype":"m.text"},"ts":1467181019000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"you should replace the algorithm with \"just load the effin page\"","msgtype":"m.text"},"ts":1467181046000,"senderName":"Manishearth","senderId":"Manishearth@irc"},
{"content":{"body":"MikeSmith: hmm not sure","msgtype":"m.text"},"ts":1467181164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no worries I don’t think I need it","msgtype":"m.text"},"ts":1467181462000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: so just for one example, in the algorithm for handling ping=, at https://html.spec.whatwg.org/multipage/semantics.html#hyperlink-auditing, it should set destination just to \"\", right?","msgtype":"m.text"},"ts":1467181669000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: per https://fetch.spec.whatwg.org/#concept-request-destination, yes","msgtype":"m.text"},"ts":1467181750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1467181757000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"OK, thanks, will make a PR","msgtype":"m.text"},"ts":1467181769000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: raised https://github.com/whatwg/html/pull/1470 for the “destination is subresource” fixes","msgtype":"m.text"},"ts":1467183831000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"JakeA: in chrome, does a <link rel=\"prefetch\"> or <link rel=\"preload\"> trigger a FetchEvent?","msgtype":"m.text"},"ts":1467214140000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Good question. Let's find out! *writes test*","msgtype":"m.text"},"ts":1467214167000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"They *should*","msgtype":"m.text"},"ts":1467214172000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: should they?  because if the intent is to populate the http cache, then the SW gets in the way... although its a nice way to spin up the SW early before the user clicks a link","msgtype":"m.text"},"ts":1467214275000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"same thing with preconnect","msgtype":"m.text"},"ts":1467214325000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"prerender seems like it must go through service worker","msgtype":"m.text"},"ts":1467214337000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think they all should","msgtype":"m.text"},"ts":1467214430000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: it still feels to me like the PlzNavigate \"preflight\" is basically a preload or prefetch","msgtype":"m.text"},"ts":1467214434000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"in terms of spec concept","msgtype":"m.text"},"ts":1467214443000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Service worker needs to be in control","msgtype":"m.text"},"ts":1467214444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the problem is that it basically destroys the benefit of prefetch/preload if you have to start a cold service worker... by the time the user clicks the link you may not have started the network fetch yet","msgtype":"m.text"},"ts":1467214486000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I don't think that comparison makes sense, re preflight","msgtype":"m.text"},"ts":1467214505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"assuming the SW is going to go the network","msgtype":"m.text"},"ts":1467214508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I'm not talking about CORS preflight... I'm talking about the issue slightlyoff wrote","msgtype":"m.text"},"ts":1467214527000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Well the document just came from the SW, so…","msgtype":"m.text"},"ts":1467214546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: neither am I?","msgtype":"m.text"},"ts":1467214558000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: where the browser initiates a network request based on the user typing in the URL bar... and starts loading the page for the most likely entry","msgtype":"m.text"},"ts":1467214562000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"to me thats pretty much exactly prefetch or preload, no?","msgtype":"m.text"},"ts":1467214571000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Not coupled with the proposal of bypassing SW for network activity","msgtype":"m.text"},"ts":1467214622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I thought preload or preflight could be cross-origin navigation links... like from search results page, etc","msgtype":"m.text"},"ts":1467214628000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: looks like preload isn't just to warm up the HTTP cache http://w3c.github.io/preload/#dfn-preload-resource-has-been-obtained","msgtype":"m.text"},"ts":1467214672000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"looks like there's intent to have a page-level cache somewhat like <img>","msgtype":"m.text"},"ts":1467214687000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"In which case a service worker's response here could be useful","msgtype":"m.text"},"ts":1467214706000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I wonder if anyone implements it that way","msgtype":"m.text"},"ts":1467214735000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"It's not properly defined, so I guess not","msgtype":"m.text"},"ts":1467214787000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I just feel there is something missing from the route proposal that doesn't meet the original use case...  I think they wanted to return something different for the \"PlzNavigate preflight\" case, but only if there is a service worker, and without blocking the \"PlzNavigate preflight\" request on starting up the service worker","msgtype":"m.text"},"ts":1467214888000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I guess we have to ask thme","msgtype":"m.text"},"ts":1467214897000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, I was wondering what the setPreflightHeader bit was for. If it's important, we could add it as an option to FetchSource","msgtype":"m.text"},"ts":1467214987000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think my gut feeling is still to wait on the routing solution... lets see what frameworks become popular/dominant to see what use cases people really care about","msgtype":"m.text"},"ts":1467215063000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: but if there was a way to help the preload/prefetch/preflight case do something today that can't be polyfilled, maybe it would be worth doing if it can be kept small and simple","msgtype":"m.text"},"ts":1467215098000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah, it feels early to me too. I'd only want to push forward on it if this SW startup time proves to be mega disastrous","msgtype":"m.text"},"ts":1467215113000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: do you know where most of the SW startup time comes from in chrome?  is it v8 specific?","msgtype":"m.text"},"ts":1467215178000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I'm worried that we're scenario-solving by doing that. Also worried that we don't have a great picture of the problem","msgtype":"m.text"},"ts":1467215187000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: Not sure. If it's v8 then parsed code caching should solve it, but I get the impression it's something more","msgtype":"m.text"},"ts":1467215242000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I do agree... but feels there is just a small piece missing... \"bypass service worker for pre-* network request\"... then the SW can just use existing fetch(url, {cache: only-if-cached}) to get the result of the pre-*","msgtype":"m.text"},"ts":1467215244000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"that could be a very small API that does a well defined thing... and would be useful for continuing to prefetch http cache resources","msgtype":"m.text"},"ts":1467215296000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"for sites that want that behavior","msgtype":"m.text"},"ts":1467215301000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: pages are generally not cachable though","msgtype":"m.text"},"ts":1467215321000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: also, I don't like that there's no opt-in/out for this extra network request. What if I'm navigating to a movie I've cached?","msgtype":"m.text"},"ts":1467215357000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: what bothers me is the numbers I've seen come from sites that have added an empty SW just to get a feel for what the startup time is. It's not surprising that SW isn't free, but it seems broken not to compare that to the gains of actually using SW","msgtype":"m.text"},"ts":1467215428000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: the service worker doesn't have to use the result of the preflight... it could decide to use Cache.match","msgtype":"m.text"},"ts":1467215429000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: the numbers that were mentioned to me were 200ms... thats a lot of ground to make up","msgtype":"m.text"},"ts":1467215463000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: right, so now I've got a 3gb video downloading in the background?","msgtype":"m.text"},"ts":1467215466000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"that I didn't need to download","msgtype":"m.text"},"ts":1467215503000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or is the stream cancelled?","msgtype":"m.text"},"ts":1467215512000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, the SW proposal was an opt-in thing... so I assume you would not opt-in if you expect your navigations to be 3GB videos","msgtype":"m.text"},"ts":1467215610000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: for PlzNavigate itself... thats a browser-specific optimization... hopefully they take that issue into account before downloading tons of network","msgtype":"m.text"},"ts":1467215634000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"as I understand it, anyway","msgtype":"m.text"},"ts":1467215681000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: anyway, I'm happy to just say \"not yet\" and focus on getting SW startup times down... that benefits everyone... not just huge sites that can afford to micro-optimize this kind of stuff","msgtype":"m.text"},"ts":1467215714000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but I also kind of see where they are coming from","msgtype":"m.text"},"ts":1467215734000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I don't see the opt-in in Alex's proposal :(","msgtype":"m.text"},"ts":1467215735000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Also, if it blocks the fetch event on this preflight returning headers, it's breaking the offline-first usecase","msgtype":"m.text"},"ts":1467215802000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: ah... as its was described to me by the partner... they suggested an opt-in... if I call a method in install handler, do the preflight with a particular RequestInit value","msgtype":"m.text"},"ts":1467215803000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: yea... that part I agree is not well defined for what they are trying to do... it sounds like they want to race, but then Alex's proposal said it had the response in the fetch event","msgtype":"m.text"},"ts":1467215838000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: Would be great to get partners involved in that issue. Feels like the use-cases are a bit vague, to me anyway","msgtype":"m.text"},"ts":1467215880000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: If you're going to have the race, surely you'd want to use the network response if it wins? Waiting for the fetch event still at that point seems like it's missing a trick","msgtype":"m.text"},"ts":1467215990000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: in the use case that was described to me they wanted to return a json object and have the SW do extra processing","msgtype":"m.text"},"ts":1467216021000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"¯\\_(ツ)_/¯","msgtype":"m.text"},"ts":1467216041000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: did that processing affect the response, or was it additional non-response work like caching","msgtype":"m.text"},"ts":1467216062000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: also, giv","msgtype":"m.text"},"ts":1467216067000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"bah","msgtype":"m.text"},"ts":1467216070000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"wanderview: also, if this is json, it doesn't sound like a navigation","msgtype":"m.text"},"ts":1467216079000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: sounded to me like client side rendering using a stream... most of the shell is cached and they use the json to construct the html just in time","msgtype":"m.text"},"ts":1467216113000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: wouldn't the SW be awake from the shell fetch in that case?","msgtype":"m.text"},"ts":1467216156000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I think this is the case where the user hasn't had the site open for a while, but they expect it was previously installed... so SW is likely timed out and cold","msgtype":"m.text"},"ts":1467216185000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: as in page is open, SW has terminated, user clicks something that triggers the JSON download?","msgtype":"m.text"},"ts":1467216228000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA:  as in page is closed, user types the name of the site in the url bar, hits enter, triggers JSON download, previously installed service worker renders html","msgtype":"m.text"},"ts":1467216272000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: this is why they wanted a custom header so they know its safe to serve the json instead of html","msgtype":"m.text"},"ts":1467216286000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I think","msgtype":"m.text"},"ts":1467216292000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: so without a service worker the site just displays JSON?","msgtype":"m.text"},"ts":1467216369000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I feel like my brain has fallen off the rails a bit","msgtype":"m.text"},"ts":1467216385000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: without a service worker the \"please preflight with this header\" API is never called... the server does not see the special header... the server sends html","msgtype":"m.text"},"ts":1467216408000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"and the browser displays html","msgtype":"m.text"},"ts":1467216427000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: very complicated!  and for how big a win?","msgtype":"m.text"},"ts":1467216437000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ahh I see, so in the SW case the shell would be loaded, which then makes a request for the page but with Accept: application/json or whatever","msgtype":"m.text"},"ts":1467216548000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1467216587000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"but they want to be able to get that fetched without the SW startup cost","msgtype":"m.text"},"ts":1467216601000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Even if we give them this preflight + header thing their first render is still blocked on SW startup","msgtype":"m.text"},"ts":1467216686000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea, they just want to make it parallel with the fetch event they know they want to attempt in this case","msgtype":"m.text"},"ts":1467216714000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"And doing this preflight for *all* URLs, even though they only want it for a subset, feels like a dodgy solution","msgtype":"m.text"},"ts":1467216738000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, in this case I think they had the impression PlzNavigate would only do it for URLs that show up as likely results in the URL bar","msgtype":"m.text"},"ts":1467216771000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: The routes thing I'm handwaving about would let them get on screen with their shell and fetch their JSON without the SW starting up at all","msgtype":"m.text"},"ts":1467216793000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: well, they still need to process the JSON into html somehow","msgtype":"m.text"},"ts":1467216818000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: are they not doing that from the page anyway?","msgtype":"m.text"},"ts":1467216845000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I agree the routes thing is a better defined mechanism that probably meets their use case...","msgtype":"m.text"},"ts":1467216850000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: my impression the JSON was going to be rendered into the index.html in the SW... but I could be mistaken","msgtype":"m.text"},"ts":1467216872000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: think of it like delta-encoding... they just want to send a diff down for their index.html","msgtype":"m.text"},"ts":1467216903000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I guess you could do it as a stream, which would make doing it in the SW a benefit.","msgtype":"m.text"},"ts":1467216930000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"That puts them in the same use-case as my blog, so racing the network for the full response becomes a better solution","msgtype":"m.text"},"ts":1467216948000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"yea, I think they want something like that","msgtype":"m.text"},"ts":1467216969000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: that's the final example in https://github.com/slightlyoff/ServiceWorker/issues/920#issuecomment-229390344","msgtype":"m.text"},"ts":1467217047000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"But yeah, I'm reaching out to teams/partners to try and get more details on this. Feel in the dark about the use cases a bit","msgtype":"m.text"},"ts":1467217116000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: yea... I just go back to the concern about adding a relatively large general purpose framework in the browser when its still pretty early in SW adoption","msgtype":"m.text"},"ts":1467217116000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"JakeA: I do like the route framework, but I'm hesitant after something as simple as cache.add() was not quite right","msgtype":"m.text"},"ts":1467217179000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"absolutely agree","msgtype":"m.text"},"ts":1467217192000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"for added fun, this was just written: https://github.com/slightlyoff/ServiceWorker/issues/921","msgtype":"m.text"},"ts":1467217218000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"which could play into how all this works","msgtype":"m.text"},"ts":1467217231000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: fwiw, this suggests rel=prefetch is intended to speed up the next navigation https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/","msgtype":"m.text"},"ts":1467217876000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: sure, but it doesn't skip the SW","msgtype":"m.text"},"ts":1467217902000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It makes sense to me that preconnect skips service worker but prefetch does not","msgtype":"m.text"},"ts":1467218013000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"prefetch hints to perform a fetch, which if performed, goes through service worker. preconnect is below the fetch level","msgtype":"m.text"},"ts":1467218057000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Agreed","msgtype":"m.text"},"ts":1467218062000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"preconnect just establishes a network connection (defined in terms of something defined in Fetch)","msgtype":"m.text"},"ts":1467218492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yeah","msgtype":"m.text"},"ts":1467218500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sounds reasonable","msgtype":"m.text"},"ts":1467218843000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"strangely, I can't find a site that actually uses <link rel=\"prefetch\">","msgtype":"m.text"},"ts":1467218858000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Depending on how http://w3c.github.io/preload/#dfn-preload-resource-has-been-obtained works, it might be useless for cross-navigation resources. Unless they end up in the SW/HTTP cache as a result","msgtype":"m.text"},"ts":1467218958000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: they're always going to be \"blocked\" on SW startup, but the network request for fresh data isn't. We're talking about the difference here between being able to serve your site's header and stream content in almost as soon as that's in place, vs waiting for the SW startup before you ever get the request for the content out to the network","msgtype":"m.text"},"ts":1467221069000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"and routing doesn't help here","msgtype":"m.text"},"ts":1467221081000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"it isn't about getting UI from the server; it's about pivoting the request from being all your UI to just being your data (which could be an HTML \"partial\" or similar)","msgtype":"m.text"},"ts":1467221131000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: I've shown in the issue that routing can help here, even in the particular case you're talking about. And doesn't result in a lot of wasted requests.","msgtype":"m.text"},"ts":1467221236000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"I'll respond in the issue, but none of the proposed problems that JakeA outlined are the problems that big sites are facing w/ SW latency","msgtype":"m.text"},"ts":1467221238000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"slightlyoff: please provide actual details for what sites are trying to do","msgtype":"m.text"},"ts":1467221281000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Will do","msgtype":"m.text"},"ts":1467221287000,"senderName":"slightlyoff","senderId":"slightlyoff@irc"},
{"content":{"body":"wishes html spec would in the attribute definitions have some link to the algorithms using that particular attribute","msgtype":"m.emote"},"ts":1467228884000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: in ReadableByteStreamControllerPullInto, what is \"the typed array constructors table\"?  the link seems busted","msgtype":"m.text"},"ts":1467231273000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"smaug____: the dfn popup should do that for you, shouldn't it?","msgtype":"m.text"},"ts":1467231296000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: ah... the links are just missing ecma262 path","msgtype":"m.text"},"ts":1467231316000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: haha wow that is a busted link. thank you.","msgtype":"m.text"},"ts":1467231325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I thought maybe it was a proposal or something","msgtype":"m.text"},"ts":1467231352000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"fixed","msgtype":"m.text"},"ts":1467231378000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's much more boring than that","msgtype":"m.text"},"ts":1467231385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1467231402000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I love that the hash is #table-49 but the table is now table 50","msgtype":"m.text"},"ts":1467231430000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: is there a reason we don't use .BYTES_PER_ELEMENT?","msgtype":"m.text"},"ts":1467231667000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: mutable by authors","msgtype":"m.text"},"ts":1467231675000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: \"dfn popup\" ?","msgtype":"m.text"},"ts":1467231685000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: click a <dfn>, you get a nice popup showing all its uses?","msgtype":"m.text"},"ts":1467231696000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I don't know what is dfn","msgtype":"m.text"},"ts":1467231711000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: bold things","msgtype":"m.text"},"ts":1467231715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that when you hover over them have a hand cursor","msgtype":"m.text"},"ts":1467231722000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: TypedArray.prototype.BYTES_PER_ELEMENT is [[Writable]]:false... doesn't that prevent script from messing with it?","msgtype":"m.text"},"ts":1467231731000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Domenic: so, I start from https://html.spec.whatwg.org/#htmlanchorelement, click 'download'","msgtype":"m.text"},"ts":1467231748000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"wanderview: nah, just assigning. You can still do `Object.defineProperty(Uint8Array.prototype, \"BYTES_PER_ELEMENT\", { get() { throw new Error(\"boo\"); } })","msgtype":"m.text"},"ts":1467231763000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and download just gives link back to htmlanchorelement","msgtype":"m.text"},"ts":1467231767000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes. Then click the bolded \"download\"","msgtype":"m.text"},"ts":1467231802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that you ended up at","msgtype":"m.text"},"ts":1467231812000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: and then what?","msgtype":"m.text"},"ts":1467231881000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"See the nice popup in this screenshot? https://usercontent.irccloud-cdn.com/file/dUYdvuFC/2016-06-29.png","msgtype":"m.text"},"ts":1467231908000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1467231918000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's below the \"HTML\" bookmark","msgtype":"m.text"},"ts":1467231926000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"right next to the bold word \"download\"","msgtype":"m.text"},"ts":1467231931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"in the upper left","msgtype":"m.text"},"ts":1467231935000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: clicking in the HTMLAnchorElement download leads to https://html.spec.whatwg.org/#dom-a-download","msgtype":"m.text"},"ts":1467231960000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I see, you're clicking on the IDL attribute","msgtype":"m.text"},"ts":1467231983000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes, what else would I click?","msgtype":"m.text"},"ts":1467231996000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"No algorithms use the IDL attribute","msgtype":"m.text"},"ts":1467231998000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The content attribute","msgtype":"m.text"},"ts":1467232000000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which leads to https://html.spec.whatwg.org/#attr-hyperlink-download","msgtype":"m.text"},"ts":1467232017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"and the idl attribute definition doesn't link to the content attribute","msgtype":"m.text"},"ts":1467232021000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes, it's assumed it's clear what \"the same name\" means","msgtype":"m.text"},"ts":1467232038000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah, those two are very far apart. I had to click around a bit before I finally found the content attribute.","msgtype":"m.text"},"ts":1467232038000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: It's clear, yes. It's not easily jumpable, tho.","msgtype":"m.text"},"ts":1467232093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you wind up looking at the IDL rather than the elementdef table, there's no obvious way to reach the content attribute.","msgtype":"m.text"},"ts":1467232119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: is it intentional that ReadableByteStreamControllerRespond shadow the bytesWritten argument?","msgtype":"m.text"},"ts":1467234998000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"using \"let\" instead of \"set\"","msgtype":"m.text"},"ts":1467235019000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"nit picks","msgtype":"m.emote"},"ts":1467235026000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Hmm, not really","msgtype":"m.text"},"ts":1467235261000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Unsure whether we should pick a non-colliding name or just use Set","msgtype":"m.text"},"ts":1467235268000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"probably \"ste\"","msgtype":"m.text"},"ts":1467235271000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah, non-colliding operating name. Bold move.","msgtype":"m.text"},"ts":1467235821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*operation","msgtype":"m.text"},"ts":1467235825000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]