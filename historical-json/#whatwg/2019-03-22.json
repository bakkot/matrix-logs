[
{"content":{"body":"littledan: so this nested event loop investigation Iâ€™m doing might influence the way we split the runtime between ES and hosts a bit","msgtype":"m.text"},"ts":1553239749000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: at least some UAs have the ability to pause a job, execute the remaining ones, and then execute the remainder of the paused job (simplified)","msgtype":"m.text"},"ts":1553239834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Annevk, yeah, I have been watching this thread with some interest. Do you have a test case?","msgtype":"m.text"},"ts":1553239952000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"This can happen while processing multiple mutationobserver callbacks?","msgtype":"m.text"},"ts":1553239998000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: any microtask really, no test yet","msgtype":"m.text"},"ts":1553240039000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: I guess another way of putting it is that some privileged callers have direct access to the queue","msgtype":"m.text"},"ts":1553240083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, for the potential layering change, I would imagine that, at most, the microtask queue is in JS, and the rest of the event loop remains in HTML","msgtype":"m.text"},"ts":1553240112000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"So, it would help to understand how the access is privileged with respect to the microtask queue specifically","msgtype":"m.text"},"ts":1553240203000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I saw wording about the incumbent settings object as well","msgtype":"m.text"},"ts":1553240222000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"And active document iirc","msgtype":"m.text"},"ts":1553240283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Annevk: well, thanks for the investigation and summary, this is helpful for my presentation to TC39 to codify HTML's role in the willful violation layering","msgtype":"m.text"},"ts":1553240344000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Which has confused folks in the past","msgtype":"m.text"},"ts":1553240360000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: I think part of that was being able to land text in the JS spec without much review","msgtype":"m.text"},"ts":1553243268000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"littledan: from the beginning Hixie asked for a diff archirecture and pointed out issues with what was put in","msgtype":"m.text"},"ts":1553243310000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I am not a big fan of the JS spec's current text at all. I would imagine something much simpler, without using the word implementation-defined, and without trying to outline how the event loop works","msgtype":"m.text"},"ts":1553248920000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"(that is, if we want to go with something other than the current HTML text, and I am happy with the current text)","msgtype":"m.text"},"ts":1553248956000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"annevk: in a recent call with some framework authors, we got a lot of interest in discussing HTML topics. See https://docs.google.com/document/d/1vvL357Z6r9IYTItvNwBf0wRH-uT4J_bAFIqnbQb-13I and grep for HTML to see the list","msgtype":"m.text"},"ts":1553249047000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"I'd welcome WHATWG folks to the next call to discuss these topics","msgtype":"m.text"},"ts":1553249068000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Several DOM things too","msgtype":"m.text"},"ts":1553249074000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"Let me know if you want me to send an invite","msgtype":"m.text"},"ts":1553249085000,"senderName":"littledan","senderId":"littledan@irc"},
{"content":{"body":"littledan: please do","msgtype":"m.text"},"ts":1553249184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/web-platform-tests/wpt/pull/15769 should be good now btw","msgtype":"m.text"},"ts":1553266633000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I want to pull down locally and debug in Chrome; those errors are still very surprising.","msgtype":"m.text"},"ts":1553267970000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: presumably that shouldn't affect the test though given results in Firefox and Safari?","msgtype":"m.text"},"ts":1553268154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, seems fine I guess","msgtype":"m.text"},"ts":1553268183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My suspicion is another Chrome bug/interop problem with e.g. onload is preventing the test from actually testing named property behavior.","msgtype":"m.text"},"ts":1553268466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Speaking of which, it'd be really nice if we got toward a world with consistent load events","msgtype":"m.text"},"ts":1553268559000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes... it is surprising that we mostly run into this in tests, instead of web developers running into it all the time and being mad.","msgtype":"m.text"},"ts":1553270657000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"lgrahl/annevk: I can confirm that I wasn't thinking about the permission store itself being behind an IPC when I wrote https://www.w3.org/TR/permissions/#reading-current-states. It's possible it needs a note like in https://www.w3.org/TR/permissions/#requesting-more-permission warning spec authors to only call it in parallel. I *think* that all the uses already obey that, but I haven't checked them all.","msgtype":"m.text"},"ts":1553278507000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: that doesn't work though, there's no settings objects there","msgtype":"m.text"},"ts":1553278605000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hmm. https://www.w3.org/TR/permissions/#requesting-more-permission has that problem too, and talks about the \"current realm\", which also isn't accessible from \"in parallel\". We only use the settings object to call https://w3c.github.io/webappsec-secure-contexts/#is-settings-object-contextually-secure, which I think relies only on immutable bits of the settings object? So, is there actually a race condition here, or","msgtype":"m.text"},"ts":1553278926000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"just some need to make the immutable parts of a settings object available from asynchronous contexts?","msgtype":"m.text"},"ts":1553278926000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: what if the settings object has gone away?","msgtype":"m.text"},"ts":1553279019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: \"current\" definitely doesn't work so you'd require to pass it in","msgtype":"m.text"},"ts":1553279038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: but it seems safer to require someone passing the bits in they need","msgtype":"m.text"},"ts":1553279054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: and it seems safer still to provide some kind of \"in parallel\" wrapper for specs to use","msgtype":"m.text"},"ts":1553279080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That was a bit unclear, require passing the bits of a settings object that your algorithm needs","msgtype":"m.text"},"ts":1553279107000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-for-spec-authors the only place we actually say that you can't use settings objects from \"in parallel\"?","msgtype":"m.text"},"ts":1553279125000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"And then abstract from there to make it still reasonable to call","msgtype":"m.text"},"ts":1553279128000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: could be, we have very little documentation around \"in parallel\" and as we discussed in the past \"in parallel\" isn't the greatest","msgtype":"m.text"},"ts":1553279161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(Noting that I don't really mind having the permissions algorithms taking the few bits of a settings object that they actually need explicitly...) There's a natural meaning for the \"current realm\" in a parallel context: it's just the current realm of whatever step fired off the parallel task. I'd want to handle tasks that are running after the settings object has \"gone away\" in the same way we handle anything else using","msgtype":"m.text"},"ts":1553279385000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"something that has gone away: the garbage collector must not create that situation.","msgtype":"m.text"},"ts":1553279385000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: that's an interesting argument","msgtype":"m.text"},"ts":1553279570000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: it's also a fair amount of magic that I'm hoping won't backfire in some way","msgtype":"m.text"},"ts":1553279606000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jyasskin: with event loops we're fairly conservative as to what can cross the boundary (tasks)","msgtype":"m.text"},"ts":1553279663000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We do have problems around users closing windows, which should neuter some objects, and I don't think we have the terminology we need to talk about that well. But document objects already survive past that user action.","msgtype":"m.text"},"ts":1553279815000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I think \"queue a task\" has some of its own problems if settings objects die in the middle of parallel steps. Where the task gets queued and the \"current realm\" of that task is totally implicit.","msgtype":"m.text"},"ts":1553279925000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"I should get a *really good* intern to spend a summer figuring all of this out.","msgtype":"m.text"},"ts":1553279991000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Isnâ€™t it up to senior folks to sort tech debt so interns can do something new or some such?","msgtype":"m.text"},"ts":1553282338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That would be awesome.","msgtype":"m.text"},"ts":1553284894000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]