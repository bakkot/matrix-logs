[
{"content":{"body":"jyasskin: not sure what you mean","msgtype":"m.text"},"ts":1464326454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"scshunt: 1xx doesn't really reach APIs","msgtype":"m.text"},"ts":1464326469000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: I did, thanks; lots of confusion there, but also some good stuff","msgtype":"m.text"},"ts":1464326490000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tantek: you need some alt text on that sunglasses tweet man","msgtype":"m.text"},"ts":1464328595000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't think twitter has API for that alt text yet - does it?","msgtype":"m.text"},"ts":1464328642000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"alt=\"the 1990s called me today saying they want their sunglasses back\"","msgtype":"m.text"},"ts":1464328658000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah they just added it today","msgtype":"m.text"},"ts":1464328665000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the API?","msgtype":"m.text"},"ts":1464328669000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"hmm thought the docs said so","msgtype":"m.text"},"ts":1464328726000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks for the docs","msgtype":"m.emote"},"ts":1464328737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah yeah no mention actually in https://support.twitter.com/articles/20174660","msgtype":"m.text"},"ts":1464328772000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"right the lack of API support for the alt is the issue","msgtype":"m.text"},"ts":1464328796000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"but if anyone figures that out / finds it - I can work on getting various indieweb twitter-posting tools updated","msgtype":"m.text"},"ts":1464328814000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"annevk: that's what I figured. Wanted to check, since there's no explicit handling and Expect: 100-continue would be really convenient for what I'm working on","msgtype":"m.text"},"ts":1464329786000,"senderName":"scshunt","senderId":"scshunt@irc"},
{"content":{"body":"scshunt: see issues against Fetch","msgtype":"m.text"},"ts":1464330445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"scshunt: might want to mention use cases there, maybe we can convince implementers","msgtype":"m.text"},"ts":1464330484000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you please link?","msgtype":"m.text"},"ts":1464330507000,"senderName":"scshunt","senderId":"scshunt@irc"},
{"content":{"body":"scshunt: later, commuting","msgtype":"m.text"},"ts":1464330997000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1464331015000,"senderName":"scshunt","senderId":"scshunt@irc"},
{"content":{"body":"scshunt: https://github.com/whatwg/fetch/issues/41","msgtype":"m.text"},"ts":1464332404000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"scshunt: I thought there was another issue too, can't find it easily","msgtype":"m.text"},"ts":1464332415000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hi, is there a single document with all the documents and properties that I can use to validate a HTML5 file? Something similar to Doctype DTD for older HTML versions ?","msgtype":"m.text"},"ts":1464338078000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"Sorry, I meant element and properties.","msgtype":"m.text"},"ts":1464338099000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1464338181000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"larry1981: https://html.spec.whatwg.org/multipage/","msgtype":"m.text"},"ts":1464338182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"larry1981: if you really want single, https://html.spec.whatwg.org/, but that takes a while to load","msgtype":"m.text"},"ts":1464338200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The last link is not working","msgtype":"m.text"},"ts":1464338238000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"What I want is a file with all the element and properties so I could build a software that allow to create valid HTML5 with all possible element and properties available. I don't want a manual.","msgtype":"m.text"},"ts":1464338390000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"larry1981: maybe your client includes the trailing comma as part of the link?","msgtype":"m.text"},"ts":1464338412000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"larry1981: I see, there's no such thing","msgtype":"m.text"},"ts":1464338436000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"larry1981: there's approximations of that, but no sigar, there's also a thesis that explains why this is the case: https://hsivonen.fi/thesis/html5-conformance-checker","msgtype":"m.text"},"ts":1464338481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What I need is something similar to tables in this page, with all possible element, attributes, events etc...: https://html.spec.whatwg.org/multipage/indices.html#index","msgtype":"m.text"},"ts":1464338995000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"zcorpan: thanks for merging those","msgtype":"m.text"},"ts":1464339441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and reviewing)","msgtype":"m.text"},"ts":1464339445000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Guess I better fix the rest today","msgtype":"m.text"},"ts":1464339456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"np","msgtype":"m.text"},"ts":1464339461000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"larry1981: maybe you can use the RELAXNG schemas from the html checker, but again note that they have holes that are plugged with Schematron or custom Java code","msgtype":"m.text"},"ts":1464339653000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"larry1981: they might also be a bit out of date","msgtype":"m.text"},"ts":1464339678000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"larry1981: but it'd be cool if you started from a different angle and give checker.html5.org some competition :-)","msgtype":"m.text"},"ts":1464339809000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I don't really need to validate HTML. I just need to know which attribute or event is available for each HTML element.","msgtype":"m.text"},"ts":1464339841000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"I want to build something similar to Bootstrap Studio but I would like to support full HTML5, Bootstrap and Foundation.","msgtype":"m.text"},"ts":1464339935000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"larry1981: then the spec's index is probably the best","msgtype":"m.text"},"ts":1464340521000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"gsnedders: Who could help you review https://github.com/html5lib/html5lib-tests/pull/65?","msgtype":"m.text"},"ts":1464341542000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I guess my best information source would be https://www.w3.org/TR/html5/index.html#index","msgtype":"m.text"},"ts":1464342297000,"senderName":"larry1981","senderId":"larry1981@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1464342337000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"TR stands for \"TRash\"","msgtype":"m.text"},"ts":1464342345000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"larry1981: you might want to read https://annevankesteren.nl/2016/01/film-at-11 before trusting what they publish","msgtype":"m.text"},"ts":1464342384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: does index-jis0208 have duplicates and that's why \"index Shift_JIS pointer\" has been defined the way it has?","msgtype":"m.text"},"ts":1464345471000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: if yes, a note to that effect would be good. if no, it would be nice to say that you just filter on the pointer returned after normal index jis0208 lookup","msgtype":"m.text"},"ts":1464345570000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: an issue would be good ðŸ˜Š","msgtype":"m.text"},"ts":1464345629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: but yeah, pretty sure there are duplicates","msgtype":"m.text"},"ts":1464345648000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. thanks","msgtype":"m.text"},"ts":1464345718000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"fun times. the Encoding Standard spec offers math in a sequence that overflows a 16-bit integer but doesn't if reordered.","msgtype":"m.text"},"ts":1464346165000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(the half-width math for EUC-JP and Shift_JIS, specifically)","msgtype":"m.text"},"ts":1464346193000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: 0xFF61 + byte âˆ’ 0xA1?","msgtype":"m.text"},"ts":1464346307000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: compilers don't help with that?","msgtype":"m.text"},"ts":1464346328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: time for one more small PR before I do a bigger one or would you prefer I group them?","msgtype":"m.text"},"ts":1464348067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i can review a small PR","msgtype":"m.text"},"ts":1464348113000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: hmm never mind, more complicated than I thought","msgtype":"m.text"},"ts":1464348158000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: mailto: doesn't seem to ever use multipart/form-data, but it does use application/x-www-form-urlencoded...","msgtype":"m.text"},"ts":1464348221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: and text/plain","msgtype":"m.text"},"ts":1464348230000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, that constant plus variable minus constant","msgtype":"m.text"},"ts":1464348306000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: that panics with an integer overflow in debug-mode Rust when doing the math as u16","msgtype":"m.text"},"ts":1464348341000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: when integer overflow is an error, the compiler apparently doesn't do the sort of rearraging and constant folding that would remove the error","msgtype":"m.text"},"ts":1464348386000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: if you don't mind, one more issue? I'll happily change that (and maybe leave a note in the source for myself)","msgtype":"m.text"},"ts":1464348405000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1464348416000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan: I guess I should make multipart/form-data a special case for \"Submit as entity body\"","msgtype":"m.text"},"ts":1464348546000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: that would also make it easier the remove the weird \"multipart/form-data boundary string\" and have the algorithm just return that","msgtype":"m.text"},"ts":1464348588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. i haven't studied this section in detail yet so i don't know if what you say makes sense yet :-)","msgtype":"m.text"},"ts":1464348638000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: this section doesn't make sense","msgtype":"m.text"},"ts":1464348682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, I should get some lunch","msgtype":"m.text"},"ts":1464348697000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"lunch makes sense","msgtype":"m.text"},"ts":1464348721000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"filed https://github.com/whatwg/encoding/issues/49","msgtype":"m.emote"},"ts":1464348869000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"feel free to shock people who prefer BNF specs with that issue report. :-)","msgtype":"m.text"},"ts":1464348914000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk: is it intentional that data:,foo bar when parsed and serialized is data:,foo bar rather than data:,foo%20bar ?","msgtype":"m.text"},"ts":1464351412000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://url.spec.whatwg.org/#cannot-be-a-base-url-path-state would encode a space, no?","msgtype":"m.text"},"ts":1464351492000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, it would not","msgtype":"m.text"},"ts":1464351512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: it does look intentional, but it's been a while","msgtype":"m.text"},"ts":1464351542000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: seems like it wouldn't work so well in contexts that assume you can split on spaces, like ping=\"\", srcset=\"\" etc","msgtype":"m.text"},"ts":1464351692000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: something something logic","msgtype":"m.text"},"ts":1464351753000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i also don't see anything in the syntax section that allows URLs that don't have a slash after the colon. am i missing something there?","msgtype":"m.text"},"ts":1464351800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i can file issue(s)","msgtype":"m.text"},"ts":1464351880000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I think you are missing something","msgtype":"m.text"},"ts":1464351912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://url.spec.whatwg.org/#syntax-url-relative -> https://url.spec.whatwg.org/#syntax-url-path-relative-scheme-less -> https://url.spec.whatwg.org/#syntax-url-path-relative","msgtype":"m.text"},"ts":1464351945000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah thx","msgtype":"m.text"},"ts":1464352135000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: tracked it back to https://github.com/whatwg/url/commit/ad3660f97132738b6b2ff0020656e4cb87365f00","msgtype":"m.text"},"ts":1464352872000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"http://krijnhoetmer.nl/irc-logs/whatwg/20121026#l-573","msgtype":"m.text"},"ts":1464352956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: PR is up, but no longer trivial","msgtype":"m.text"},"ts":1464353696000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://news.ycombinator.com/item?id=11785456 Hah.","msgtype":"m.text"},"ts":1464353940000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"filed https://github.com/whatwg/url/issues/125","msgtype":"m.text"},"ts":1464354030000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"nox: https://resources.whatwg.org/logo-url.svg is the only right answer","msgtype":"m.text"},"ts":1464354095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Neat. :)","msgtype":"m.text"},"ts":1464354122000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: that is actually mostly a joke on https://github.com/nodejs/node-v0.x-archive/pull/1580 which tantek found and put on http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces","msgtype":"m.text"},"ts":1464354210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: which has funny-at-the-time-memes such as https://camo.githubusercontent.com/bd208bf0093648b4ad23a56faa584596580f76f5/687474703a2f2f692e696d6775722e636f6d2f3163776d352e706e67","msgtype":"m.text"},"ts":1464354233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://camo.githubusercontent.com/bd208bf0093648b4ad23a56faa584596580f76f5/687474703a2f2f692e696d6775722e636f6d2f3163776d352e706e67 is the best","msgtype":"m.text"},"ts":1464354653000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"heh http://krijnhoetmer.nl/irc-logs/whatwg/20121026#l-964","msgtype":"m.text"},"ts":1464355998000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: couple more months I guess?","msgtype":"m.text"},"ts":1464356258000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah. mark your calendars, folks","msgtype":"m.text"},"ts":1464356315000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Only if there will be cake","msgtype":"m.text"},"ts":1464356355000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"sure why not","msgtype":"m.text"},"ts":1464356386000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"we can bikeshed over :","msgtype":"m.text"},"ts":1464356408000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm pretty sure you will need a : to eat cake","msgtype":"m.text"},"ts":1464356433000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"[citation needed]","msgtype":"m.text"},"ts":1464356475000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"do you fine people know if the behaviour of Gecko for document.createElement('p', null) (which will produce <p is=\"null\">) is intentional?","msgtype":"m.text"},"ts":1464358107000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it doesn't match the spec, but I don't know if it's intentionally different or not","msgtype":"m.text"},"ts":1464358139000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(it's certainly unhelpful)","msgtype":"m.text"},"ts":1464358166000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"zcorpan: Let's make http:://google.fr a valid URL.","msgtype":"m.text"},"ts":1464358467000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"darobin: hmmm Gecko already does custom elements?","msgtype":"m.text"},"ts":1464359029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think so, but it does *something* with that second argument","msgtype":"m.text"},"ts":1464359046000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: that seems like a bug","msgtype":"m.text"},"ts":1464359055000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, I'll file","msgtype":"m.text"},"ts":1464359060000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: though the fact that null becomes \"null\" is quite reasonable","msgtype":"m.text"},"ts":1464359064000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"also, undefined becomes \"undefined\"","msgtype":"m.text"},"ts":1464359076000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: if you want to omit arguments, use undefined","msgtype":"m.text"},"ts":1464359076000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ooh","msgtype":"m.text"},"ts":1464359080000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: that's pretty bad","msgtype":"m.text"},"ts":1464359084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure, this came up as a bug in React","msgtype":"m.text"},"ts":1464359088000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"with current React and recent Firefox, *all* elements created through React have is=\"null\"","msgtype":"m.text"},"ts":1464359109000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"because they have code that is like document.createElement(elName, isAttr ? isAttr : null)","msgtype":"m.text"},"ts":1464359134000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: seems like a React thing","msgtype":"m.text"},"ts":1464359140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, I fixed it in React, but Firefox's behaviour is wrong","msgtype":"m.text"},"ts":1464359153000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: they probably overwrite document.createElement","msgtype":"m.text"},"ts":1464359154000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no, of course not!","msgtype":"m.text"},"ts":1464359162000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"why would they do that?","msgtype":"m.text"},"ts":1464359167000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: that is, in Firefox nightly I don't get an is=\"\" attribute","msgtype":"m.text"},"ts":1464359170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"darobin: reasons?","msgtype":"m.text"},"ts":1464359186000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do","msgtype":"m.text"},"ts":1464359192000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"in 48.0a2","msgtype":"m.text"},"ts":1464359207000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I don't think there's a JS framework out there that has been doing anything to built-in stuff since PrototypeJS went out of fashion","msgtype":"m.text"},"ts":1464359245000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: have you tested it outside the framework?","msgtype":"m.text"},"ts":1464359264000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in the console, document.createElement('p', null) -> <p is=\"null\">","msgtype":"m.text"},"ts":1464359269000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"no is attribute for me 49.0a1 (2016-05-25)","msgtype":"m.text"},"ts":1464359288000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"on a page that doesn't load the framework darobin?","msgtype":"m.text"},"ts":1464359295000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for http://software.hixie.ch/utilities/js/live-dom-viewer/saved/4240","msgtype":"m.text"},"ts":1464359297000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah, I guess it got fixed, cool","msgtype":"m.text"},"ts":1464359299000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah, this is Bugzilla","msgtype":"m.text"},"ts":1464359303000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"oh wait","msgtype":"m.text"},"ts":1464359319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I do get it in the console","msgtype":"m.text"},"ts":1464359324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I wonder if Firefox's developer console has a bug here","msgtype":"m.text"},"ts":1464359340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"File a bug on that?","msgtype":"m.text"},"ts":1464359351000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That is broken","msgtype":"m.text"},"ts":1464359365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"let me update to the latest dev and see if it's still there","msgtype":"m.text"},"ts":1464359370000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I use Nightly and it's there so","msgtype":"m.text"},"ts":1464359379000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it's console-specific, I was also getting it in page","msgtype":"m.text"},"ts":1464359390000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"but indeed I can't repro in the DOM Viewer","msgtype":"m.text"},"ts":1464359500000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"nox: where did you get those error strings from? did you just copy html5lib?","msgtype":"m.text"},"ts":1464359602000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Not sure I understand the question.","msgtype":"m.text"},"ts":1464359625000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: wrt https://github.com/html5lib/html5lib-tests/pull/65","msgtype":"m.text"},"ts":1464360240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: you have line, column position, and then a string. where does that string come frm?","msgtype":"m.text"},"ts":1464360253000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: does html5ever have the same set of strings that html5lib does?","msgtype":"m.text"},"ts":1464360270000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: No, I think I didn't know where the strings come from when I did that, it's quite an old PR.","msgtype":"m.text"},"ts":1464360296000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1276240","msgtype":"m.text"},"ts":1464360297000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"gsnedders: I just invented some strings that correspond to the right errors, IIRC.","msgtype":"m.text"},"ts":1464360310000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: so they're arbitrarily made up strings in both html5lib and html5ever","msgtype":"m.text"},"ts":1464360346000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"nox: which is what I was expecting","msgtype":"m.text"},"ts":1464360351000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"still thinks we should try and standardise some set of strings","msgtype":"m.emote"},"ts":1464360361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Obviously if your implementation merges a number of the parse errors (because the spec only requires a *number* of parse errors in the right place, not specific types)","msgtype":"m.text"},"ts":1464360390000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"then you should either just check the positions or you should have a list of which of your parse errors correspond to what","msgtype":"m.text"},"ts":1464360415000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"what is module worker?","msgtype":"m.text"},"ts":1464360913000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"darobin: ta","msgtype":"m.text"},"ts":1464360984000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in other words, annevk I have no idea what https://github.com/whatwg/html/issues/1322 is about :)","msgtype":"m.text"},"ts":1464360986000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"a pleasure sire annevk","msgtype":"m.text"},"ts":1464360998000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"smaug____: module worker is one that runs module scripts","msgtype":"m.text"},"ts":1464361022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____, a worker that's an ES module","msgtype":"m.text"},"ts":1464361022000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm still baffled as to why it does not trigged in either Live DOM or JSBin, but *shrug*","msgtype":"m.text"},"ts":1464361036000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"and module worker is useful because?","msgtype":"m.text"},"ts":1464361047000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: because devs want to use modules","msgtype":"m.text"},"ts":1464361083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, not helpful yet. Why do we need special workers for modules?","msgtype":"m.text"},"ts":1464361131000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"how do they behave differently to normal workers?","msgtype":"m.text"},"ts":1464361143000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/normal/dedicated/","msgtype":"m.text"},"ts":1464361151000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: different JS syntax","msgtype":"m.text"},"ts":1464361155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"still don't understand. I guess I'm not familiar enough with modules","msgtype":"m.text"},"ts":1464361286000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I thought they were useful when integrated with other JS stuff","msgtype":"m.text"},"ts":1464361299000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: the JavaScript needs to be parsed differently so need some kind of opt-in","msgtype":"m.text"},"ts":1464361309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so that module could export \"API\"s","msgtype":"m.text"},"ts":1464361312000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: so the export functionality wouldn't be really used in module workers?","msgtype":"m.text"},"ts":1464361340000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"just ability to load a module in worker, just like in main thread using <script> ?","msgtype":"m.text"},"ts":1464361357000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: there's a main script that imports other scripts, which would export functionality","msgtype":"m.text"},"ts":1464361370000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: in the main thread you need to use <script type=module>","msgtype":"m.text"},"ts":1464361383000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: they're analogous","msgtype":"m.text"},"ts":1464361394000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"now I'm lost","msgtype":"m.text"},"ts":1464361411000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: you cannot use modules without opt-in","msgtype":"m.text"},"ts":1464361413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you're saying even in module worker there is main script which imports other stuff?","msgtype":"m.text"},"ts":1464361444000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: and a module script is something that either imports or exports, there's not much more to it","msgtype":"m.text"},"ts":1464361453000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: yes","msgtype":"m.text"},"ts":1464361467000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so why do we need module worker","msgtype":"m.text"},"ts":1464361481000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: to be able to do that","msgtype":"m.text"},"ts":1464361487000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if the main script is just plain normal js","msgtype":"m.text"},"ts":1464361494000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it's not","msgtype":"m.text"},"ts":1464361500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: I just said it's a module script","msgtype":"m.text"},"ts":1464361505000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"plain normal JS can't import?","msgtype":"m.text"},"ts":1464361508000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: indeed","msgtype":"m.text"},"ts":1464361514000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"even in main thread?","msgtype":"m.text"},"ts":1464361516000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1464361519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ohhoh, I didn't know the setup is so odd","msgtype":"m.text"},"ts":1464361530000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1464361532000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"as I said, main thread needs <script type=module>","msgtype":"m.text"},"ts":1464361547000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so if modules are being used, all the script usage will be <script type=module>, pretty much","msgtype":"m.text"},"ts":1464361564000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"some main module importing other modules","msgtype":"m.text"},"ts":1464361580000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, unless you want to mix things up I suppose","msgtype":"m.text"},"ts":1464361583000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, why do we then want to change worker loading depending on whether we're dealing with module worker?","msgtype":"m.text"},"ts":1464361647000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it didn't seem worth the hassle to support CORS for classic workers","msgtype":"m.text"},"ts":1464361772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't find where we do same origin check for workers in the spec.","msgtype":"m.emote"},"ts":1464362262000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: it happens in Fetch","msgtype":"m.text"},"ts":1464362332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: the request mode is \"same-origin\" or \"cors\" (module workers)","msgtype":"m.text"},"ts":1464362350000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: though we need to bring one check back: https://github.com/whatwg/html/pull/1332","msgtype":"m.text"},"ts":1464362384000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Gotta go","msgtype":"m.text"},"ts":1464362441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is rather error prone that module workers even fetch data so differently","msgtype":"m.text"},"ts":1464362450000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: from what perspective would it be \"so different\"?","msgtype":"m.text"},"ts":1464362752000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: same-origin vs CORS is nearly identical for most purposes","msgtype":"m.text"},"ts":1464362765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why do we have different fetch based on the type","msgtype":"m.text"},"ts":1464362783000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I would expect fetch type depend on some option passed to ctor, but not on the worker type","msgtype":"m.text"},"ts":1464362837000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"like WorkerOptions having fetchType or some such. But I totally don't know the background for all this","msgtype":"m.text"},"ts":1464362899000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"TabAtkins: so I think \"nay Rust\" was actually correct","msgtype":"m.text"},"ts":1464367712000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: having done some searching, \"nÃ©e\" seems to about names, whereas \"nay\" means \"or rather\"","msgtype":"m.text"},"ts":1464367754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"changes it back","msgtype":"m.emote"},"ts":1464367799000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Speaking of nÃ©e/nay, your name is pronounced like \"annÃ©e\" right?","msgtype":"m.text"},"ts":1464368152000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: annuh","msgtype":"m.text"},"ts":1464368172000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Mmmh. Is that a \"uh\" that the French me can never succeed in pronouncing correctly?","msgtype":"m.text"},"ts":1464368193000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: annÃ¨","msgtype":"m.text"},"ts":1464368233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh! Ok! That I can do. :D","msgtype":"m.text"},"ts":1464368247000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"personally I think I say it more \"uh\" but \"eh\" works","msgtype":"m.text"},"ts":1464368269000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: I can, I thought you wanted Domenic to sign off","msgtype":"m.text"},"ts":1464368691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Tiy can't really say either neÃ© or nay in that context","msgtype":"m.text"},"ts":1464368722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think the word you are looking for is \"or\"","msgtype":"m.text"},"ts":1464368733000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Tiy?","msgtype":"m.text"},"ts":1464368748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mounir: annevk: still digging myself out of the post-TC39 email pile, but I plan to do Streams and HTML today, so likely to happen...","msgtype":"m.text"},"ts":1464368760000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: You, but shifted one key left :)","msgtype":"m.text"},"ts":1464368777000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm not looking for \"or\"","msgtype":"m.text"},"ts":1464368866000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: I'm looking for \"or rather\" or \"^H^H^H^H^H\" expressed in a word","msgtype":"m.text"},"ts":1464368895000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: A nay B, implies not A but B.","msgtype":"m.text"},"ts":1464368935000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yeah","msgtype":"m.text"},"ts":1464368955000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: that's good","msgtype":"m.text"},"ts":1464368961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There are still browsers written in C++ though","msgtype":"m.text"},"ts":1464368976000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I know","msgtype":"m.text"},"ts":1464368980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"So it doesn't make sense","msgtype":"m.text"},"ts":1464368980000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that's why there's parenthesis","msgtype":"m.text"},"ts":1464368985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right, it still doesn't make sense","msgtype":"m.text"},"ts":1464368998000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I guess I disagree, even though I'm probably wrong","msgtype":"m.text"},"ts":1464369105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: I take that as that you'll merge them","msgtype":"m.text"},"ts":1464369246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1464369253000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nice! https://github.com/blog/2178-multiple-assignees-on-issues-and-pull-requests?utm_source=twitter&utm_medium=social&utm_campaign=multiple-assignees","msgtype":"m.text"},"ts":1464371211000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Good to see GH finally giving the issue tracker some TLC lately.","msgtype":"m.text"},"ts":1464371273000,"senderName":"Garbee","senderId":"Garbee@irc"},
{"content":{"body":"Thanks for sharing Domenic.","msgtype":"m.text"},"ts":1464371283000,"senderName":"Garbee","senderId":"Garbee@irc"},
{"content":{"body":"annevk: \"nay\" can't be used to mean \"other\" in *that* way, at least in English as I know it.","msgtype":"m.text"},"ts":1464372698000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(But as someone correctly pointed out, if nÃ©e *is* used, it's the wrong way around - it indicates maiden names, old company names, etc.","msgtype":"m.text"},"ts":1464372719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":")","msgtype":"m.text"},"ts":1464372721000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"nay pretty much means voting \"no\" http://www.thefreedictionary.com/nay","msgtype":"m.text"},"ts":1464372862000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Yeah, I'm trying to come up with a usage in my vernacular that isn't implicitly just referring to \"yay/nay\".","msgtype":"m.text"},"ts":1464373093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"smaug____: ping on https://github.com/whatwg/html/pull/1284","msgtype":"m.text"},"ts":1464373197000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: Anyway, the most reasonable wording my vernacular would be \"(or now Rust)\" or similar.","msgtype":"m.text"},"ts":1464373257000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: back from sauna. looking...","msgtype":"m.text"},"ts":1464373675000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"always clicks the wrong link when is supposed to review something","msgtype":"m.emote"},"ts":1464373707000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: does the patch need some merging","msgtype":"m.text"},"ts":1464374242000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what do you mean?","msgtype":"m.text"},"ts":1464374257000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: it is unmerged pending review, if that's what you mean","msgtype":"m.text"},"ts":1464374282000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I mean if I look at the latest spec, there are some steps in the algorithm I don't see in that patch","msgtype":"m.text"},"ts":1464374325000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"like there should be \"Set history.state to state.\" somewhere there","msgtype":"m.text"},"ts":1464374356000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that is just GitHub showing insufficient context in the diff :(","msgtype":"m.text"},"ts":1464374376000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"those \"expand\" buttons do not work","msgtype":"m.text"},"ts":1464374390000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ugh","msgtype":"m.text"},"ts":1464374403000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and we really want to use github :/","msgtype":"m.text"},"ts":1464374412000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ok, I guess r+","msgtype":"m.text"},"ts":1464374420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"can I somehow download raw patch","msgtype":"m.text"},"ts":1464374447000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes, https://patch-diff.githubusercontent.com/raw/whatwg/html/pull/1284.patch","msgtype":"m.text"},"ts":1464374650000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"which is what you get redirected to if you add .patch to the end of the PR URL, i.e. https://github.com/whatwg/html/pull/1284","msgtype":"m.text"},"ts":1464374668000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1464374670000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://github.com/whatwg/html/pull/1284.patch","msgtype":"m.text"},"ts":1464374673000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"aha, that is something I've been told many times but I always forget","msgtype":"m.text"},"ts":1464374925000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but ok, the raw patch isn't really more useful either","msgtype":"m.text"},"ts":1464374942000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"yeah, local git client or compiled results is kind of the only way","msgtype":"m.text"},"ts":1464375289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'd like to get a CI server that automatically serves us the compiled spec, actually","msgtype":"m.text"},"ts":1464375303000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: For Bikeshed, I think we can hack http://hg.csswg.org/dev/bikeshed-web/ to do the test, and have the 'Details' link be the compiled spec. That server already has URLs that'll serve the output.","msgtype":"m.text"},"ts":1464375567000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: oh, cool. My plan was to have Travis CI use https://zeit.co/now/#whats-now to stand up a quick static file server with the results that Travis compiled, which if I understand correctly that service will host indefinitely for us.","msgtype":"m.text"},"ts":1464376157000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or we could just ssh the results onto the final server; that's what streams does for PRs that are based on in-repo branches (instead of forks): https://github.com/whatwg/streams/blob/master/deploy.sh#L60-L71 + https://streams.spec.whatwg.org/branch-snapshots/?C=M;O=D","msgtype":"m.text"},"ts":1464376214000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: The existing URLs are like https://api.csswg.org/bikeshed/?url=https://raw.githubusercontent.com/jyasskin/permissions/ua-can-return-anything/index.bs, which you can paste into the PR description. The main benefit from having api.csswg.org/bikeshed be the CI server is that it could set a \"commit status\" into github so the link is accessible even if","msgtype":"m.text"},"ts":1464385533000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"you forget to write it in the PR.","msgtype":"m.text"},"ts":1464385533000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"oh very interesting...","msgtype":"m.text"},"ts":1464386539000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Any bikeshed experts know if you can get <ol class=algorithm> from a markdown 1. ... -style list, or should I be regretting removing the markup?","msgtype":"m.text"},"ts":1464389583000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"TabAtkins: ^ (but I don't think you can get [class=Algorithm] from markdown.","msgtype":"m.text"},"ts":1464389871000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Nah, you gotta wrap it in a div","msgtype":"m.text"},"ts":1464389891000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Alas, that doesn't appear to slap the class on the ol (which makes substeps more visible); bs bug?","msgtype":"m.text"},"ts":1464390027000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"er, should I file a bs issue to suggest this","msgtype":"m.text"},"ts":1464390035000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"The substeps become mroe visible if it's on the ol? Is this a feature I wrote and then forgot about?","msgtype":"m.text"},"ts":1464390059000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It's in W3C's stylesheet... e.g. https://w3c.github.io/IndexedDB/ and (once respec is done its think) jump to e.g. \"Object Store Storage Operation\"","msgtype":"m.text"},"ts":1464390139000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Oh! I didn't realize that would happen!","msgtype":"m.text"},"ts":1464390204000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In obviously related news, suggestions for https://github.com/w3c/IndexedDB/blob/bikeshed/index.bs welcome before I merge it","msgtype":"m.text"},"ts":1464390335000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Documented at https://w3c.github.io/tr-design/src/sample.html#algorithm","msgtype":"m.text"},"ts":1464390644000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: I fixed the issue in Bikeshed's stylesheet, and opened a PR for it on the W3C's stylesheet.","msgtype":"m.text"},"ts":1464392583000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jyasskin: So you can use a wrapper div","msgtype":"m.text"},"ts":1464392815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Tell jsbell when he gets back.","msgtype":"m.text"},"ts":1464392856000,"senderName":"jyasskin","senderId":"jyasskin@irc"}
]