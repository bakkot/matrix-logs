[
{"content":{"body":"https://github.com/gsnedders/dom-test-suite has that old DOM testsuite in git, if anyone cares","msgtype":"m.text"},"ts":1533521552000,"senderName":"gsnedders|ooo","senderId":"gsnedders|ooo@irc"},
{"content":{"body":"forgets why he did that now","msgtype":"m.emote"},"ts":1533521559000,"senderName":"gsnedders|ooo","senderId":"gsnedders|ooo@irc"},
{"content":{"body":"We are still running versions of that suite for jsdom... maybe not necessary anymore... although given that we still can't mark WPT test files as partially passing, we might not be able to use WPT to replace all that coverage just yet.","msgtype":"m.text"},"ts":1533531491000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Is https://w3c.github.io/DOM-Parsing/#the-domparser-interface the correct spec to read for DOMParser?","msgtype":"m.text"},"ts":1533557679000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes","msgtype":"m.text"},"ts":1533559299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1533561200000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TIL: Chrome adds the parseerror element as the first child of root in the document returned by DOMParser instead of following the spec","msgtype":"m.text"},"ts":1533561246000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: Is there a good way for me to search Shepherd for uses of https://fetch.spec.whatwg.org/#concept-construct-readablestream?","msgtype":"m.text"},"ts":1533571231000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"And if so, is it documented somewhere I should have looked?","msgtype":"m.text"},"ts":1533571244000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"jyasskin: https://tabatkins.github.io/bikeshed/#cli-refs , but I don't have a way to search by URL.","msgtype":"m.text"},"ts":1533571346000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I believe `bikeshed refs --text=\"construct a ReadableStream object\"` searches for the definition, not the uses.","msgtype":"m.text"},"ts":1533571432000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"Oh, I misread!","msgtype":"m.text"},"ts":1533571442000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1533571446000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"No, don't have that functionality yet, but it's on my shortlist.","msgtype":"m.text"},"ts":1533571454000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I want to change the interface for that definition (https://github.com/whatwg/fetch/pull/781), but I'm worried I'll break uses outside Fetch.","msgtype":"m.text"},"ts":1533571501000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"TabAtkins: Would you mind looking it up for me?","msgtype":"m.text"},"ts":1533571514000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"yup, taht's precisely the use-case I want it for.","msgtype":"m.text"},"ts":1533571515000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't have the *data* yet, so no.","msgtype":"m.text"},"ts":1533571524000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, ok. Thanks anyway. :)","msgtype":"m.text"},"ts":1533571531000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"If I did, beleive me, the UI would be there immediately.","msgtype":"m.text"},"ts":1533571534000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So it appears document.open() can make the document's URL not equal to the URL of the corresponding session history entry. That's... fun.","msgtype":"m.text"},"ts":1533585364000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Can anyone think of other ways those things can get out of sync?","msgtype":"m.text"},"ts":1533585372000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug____: you may know ^","msgtype":"m.text"},"ts":1533585385000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Tentatively TimothyGu and I believe this is very bad and should be fixed. A lot of the spec, and some impl code he dove through, assumes they are the same.","msgtype":"m.text"},"ts":1533587220000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: what is very bad?","msgtype":"m.text"},"ts":1533587376000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"rniwa_: document.open() can make the document's URL not equal to the URL of its session history entry","msgtype":"m.text"},"ts":1533587454000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh, fascinating.","msgtype":"m.text"},"ts":1533587466000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"Domenic: so history.push(~) and then document.open() can move the URL back to the original URL","msgtype":"m.text"},"ts":1533587493000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"Domenic: but without adding a new history entry?","msgtype":"m.text"},"ts":1533587504000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"Yeah also it breaks (per-spec) fragment navigation","msgtype":"m.text"},"ts":1533587512000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh snap","msgtype":"m.text"},"ts":1533587518000,"senderName":"rniwa_","senderId":"rniwa_@irc"},
{"content":{"body":"Domenic: can't recall. (I wouldn't be surprised if something in pushState handling could lead to similar behavior though)","msgtype":"m.text"},"ts":1533592978000,"senderName":"smaug____","senderId":"smaug____@irc"}
]