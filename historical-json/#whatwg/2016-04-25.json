[
{"content":{"body":"Domenic: in https://streams.spec.whatwg.org/ is there a difference between foo@[[bar]] and foo.[[bar]] ? it seems to use both forms","msgtype":"m.text"},"ts":1461574767000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: suspect the latter is in error","msgtype":"m.text"},"ts":1461575724000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wtf http://stackoverflow.com/questions/36837781/cors-with-chrome-50-0-2661-86-in-node","msgtype":"m.text"},"ts":1461584790000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"PATCH http method?","msgtype":"m.text"},"ts":1461584819000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"wow so it actually exists","msgtype":"m.text"},"ts":1461584884000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sounds like you've somehow avoided all of the \"blah blah blah RESTful blah blah blah\" on the internet over the past decade or so :) nice","msgtype":"m.text"},"ts":1461585040000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah I have I think","msgtype":"m.text"},"ts":1461585129000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"avoided most of it by just not reading the www-tag list very closely in the past","msgtype":"m.text"},"ts":1461585155000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"replies","msgtype":"m.emote"},"ts":1461585176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"where the 5 people in the universe who actually care about that stuff used to have their discussions with each other about it","msgtype":"m.text"},"ts":1461585209000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Quite a few APIs in the wild understand PATCH though.","msgtype":"m.text"},"ts":1461585272000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I think PATCH is quite popular, it comes up now and then since folks think fetch() should uppercase it","msgtype":"m.text"},"ts":1461585302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There's an outstanding issue on fetch() to provide some examples around it, e.g., how patch and PATCH are different","msgtype":"m.text"},"ts":1461585332000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"man I still feel like this is just part of some conspiracy to troll me","msgtype":"m.text"},"ts":1461585381000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess I just don’t get around enough","msgtype":"m.text"},"ts":1461585397000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"reads https://www.mnot.net/blog/2012/09/05/patch","msgtype":"m.emote"},"ts":1461585437000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if you try to design a RESTful api, which you probably do if you're being hit in the face with it at conferences and on twitter and in books and in school and etc, you probably like the idea of PATCH vs PUT, for most changes to existing articles","msgtype":"m.text"},"ts":1461585478000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I never have occasion to even use PUT","msgtype":"m.text"},"ts":1461585582000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so again I guess this is basically all lost on me and I am revealing what at dilettante I am","msgtype":"m.text"},"ts":1461585638000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"not that I claim to actually be a real web developer","msgtype":"m.text"},"ts":1461585679000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: I'm thinking of taking a stab at merging the <source> element sections","msgtype":"m.text"},"ts":1461585837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I think the conspiracy would be all the carefully introduced idiosyncrasies of the web, keeping us busy for decades","msgtype":"m.text"},"ts":1461585938000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well thank god for that then, for keeping us all employed","msgtype":"m.text"},"ts":1461586009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I guess the downside of it is that you in particular are working yourself out of job","msgtype":"m.text"},"ts":1461586028000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Or into a job that's actually fun ;)","msgtype":"m.text"},"ts":1461586100000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sounds good, more time to enjoy all this spring snow","msgtype":"m.text"},"ts":1461586117000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok. i had planned to fix <template> content model first since it affects <source> but i suppose either way works","msgtype":"m.text"},"ts":1461588333000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"slightlyoff, ping","msgtype":"m.text"},"ts":1461589408000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Or anyone who knows a thing or two about service workers","msgtype":"m.text"},"ts":1461589461000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: ended up being a pretty big change","msgtype":"m.text"},"ts":1461590089000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking at the diff now","msgtype":"m.text"},"ts":1461590101000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: main thing that is new is saying which attributes must not be present in the media element case","msgtype":"m.text"},"ts":1461590164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah","msgtype":"m.text"},"ts":1461590834000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wish I could link to specific versions of ES","msgtype":"m.text"},"ts":1461592014000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"you can, sort of","msgtype":"m.text"},"ts":1461592256000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"maybe if someone will pay for hosting, snapshots of the living standard could be uploaded every week or something","msgtype":"m.text"},"ts":1461592309000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but the snapshots on ecma-international.org (and ToT of the living standard) are probably good enough for most uses?","msgtype":"m.text"},"ts":1461592379000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Ms2ger: I know a few things, tho I don't promise it's enough.","msgtype":"m.text"},"ts":1461592726000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#on-fetch-request-algorithm step 18.5 mentions \"activeWorker�s environment settings object\"","msgtype":"m.text"},"ts":1461592790000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Is that \"the ECMAScript global environment associated with\" activeWorker as in WebIDL?","msgtype":"m.text"},"ts":1461592810000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"It's the [[GlobalObject]] field of the Realm associated with the activeWorker's environment settings object, per HTML.","msgtype":"m.text"},"ts":1461593009000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So: probably, yes.","msgtype":"m.text"},"ts":1461593012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm asking what \"activeWorker's environment settings object\" is, though","msgtype":"m.text"},"ts":1461593093000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"The xref is useless, since it links to the definition of \"environment settings object\" as a concept, rather than a property of a service worker","msgtype":"m.text"},"ts":1461593132000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Ah, following defs back a bit, it comes from the \"service worker client\", which is the document that talks to the SW, a la the \"client\" concept of SharedWorkers.","msgtype":"m.text"},"ts":1461593555000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, while I have you...","msgtype":"m.text"},"ts":1461593820000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://github.com/heycam/webidl/commit/54ebc4cef602a80747ae4b6e502c46d157165a00 broke the toc generation for common-ArrayBufferView and friends, because the section no longer has an id","msgtype":"m.text"},"ts":1461593857000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh! I didn't realize that processor depended on the section having an id.","msgtype":"m.text"},"ts":1461593955000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is common-ArrayBufferView actually the ID we want for the concept?","msgtype":"m.text"},"ts":1461593982000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I would have thought dom-ArrayBufferView or typedef-ArrayBufferView or something","msgtype":"m.text"},"ts":1461593999000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Yeah, it's probably not. It was just the nearest appropriate ID.","msgtype":"m.text"},"ts":1461594024000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"BS won't complain if I put another ID there?","msgtype":"m.text"},"ts":1461594085000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Nope. It just wants *some* ID on the heading, because it's providing a ref anchor.","msgtype":"m.text"},"ts":1461594122000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ok, thanks","msgtype":"m.text"},"ts":1461594127000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wishes idl was on BS already","msgtype":"m.emote"},"ts":1461594213000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Sorry, I didn't want to spend the time converting it. :/","msgtype":"m.text"},"ts":1461594291000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, can't blame you","msgtype":"m.text"},"ts":1461594844000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"zcorpan: annevk: foo.[[bar]] is for record fields, foo@[[bar]] is for object internal slots. Inherited from ES, which uses foo.[[bar]] and \"the [[foo]] internal slot of bar\"","msgtype":"m.text"},"ts":1461595255000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Isn't .[[ unique anyway?","msgtype":"m.text"},"ts":1461595331000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"unique in what way?","msgtype":"m.text"},"ts":1461595368000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Not sure what justifies the @","msgtype":"m.text"},"ts":1461595416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, it lets you know whether you're looking at a field of a record or a private slot of an object","msgtype":"m.text"},"ts":1461595450000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's obvious from the type of foo, no?","msgtype":"m.text"},"ts":1461595589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yes, in a hypothetical world where you can hover over any references to foo and see its strongly-typed declaration.","msgtype":"m.text"},"ts":1461595629000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Or just look slightly upwards to where in the algorithm it's declared.","msgtype":"m.text"},"ts":1461595833000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Often things are passed as parameters (and parameters don't have type declarations)","msgtype":"m.text"},"ts":1461596292000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Input params should be declared at the top of the algorithm; if not that's just confusing spec writing, and should be considered a bug.","msgtype":"m.text"},"ts":1461596460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Though maybe they should)","msgtype":"m.text"},"ts":1461596463000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"considers implementing Hindly-Miller type inference for Bikeshed...","msgtype":"m.emote"},"ts":1461596492000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: should CORS check follow 301 by default (ie. if no Access-Control-* flags)?","msgtype":"m.text"},"ts":1461596525000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"mounir: nope","msgtype":"m.text"},"ts":1461597681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks :)","msgtype":"m.text"},"ts":1461597696000,"senderName":"mounir","senderId":"mounir@irc"},
{"content":{"body":"annevk: is https://github.com/annevk/webvtt still current?","msgtype":"m.text"},"ts":1461599663000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"it doesn't look like there's much in terms of JS tooling for WebVTT","msgtype":"m.text"},"ts":1461599676000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: I think so; I have thus far refused to add some new features that seemed only implemented by a single browser","msgtype":"m.text"},"ts":1461599710000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I suspect zcorpan might know better, but it appears he's gone","msgtype":"m.text"},"ts":1461599735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gone!!!","msgtype":"m.text"},"ts":1461599740000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Forever","msgtype":"m.text"},"ts":1461599747000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seriously?","msgtype":"m.text"},"ts":1461599752000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1461599755000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh :-p","msgtype":"m.text"},"ts":1461599760000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"do you just want to keep it as is or are changes to turn it into more of a reusable thing of interest?","msgtype":"m.text"},"ts":1461599810000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: sounds fine, depends a bit on whether I can still read the result I suppose","msgtype":"m.text"},"ts":1461599834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm mostly thinking about making it usable from Node and all","msgtype":"m.text"},"ts":1461599850000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(this is assuming I end up actually needing a parser, I'm still surveying options)","msgtype":"m.text"},"ts":1461599865000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah seems fine","msgtype":"m.text"},"ts":1461599894000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cool ta","msgtype":"m.text"},"ts":1461599898000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"if I need it I'll make you some PRs","msgtype":"m.text"},"ts":1461599903000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"probably not ES6ify it so you don't need dependencies and all","msgtype":"m.text"},"ts":1461599934000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"well at least not babel, 'cause that's hell","msgtype":"m.text"},"ts":1461599949000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"yeah, no dependencies please","msgtype":"m.text"},"ts":1461600014000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"stuff that ships in browsers seems fine","msgtype":"m.text"},"ts":1461600026000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. (x) => yay(x)","msgtype":"m.text"},"ts":1461600038000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1461600143000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"a build step fine (so as to support UMD and other ways of loading)? otherwise I guess I can just fork it, but it seems like a shame","msgtype":"m.text"},"ts":1461600182000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"I mean I guess if you just want to use it to try out correctness and such anything that makes it more like a lib is a hassle","msgtype":"m.text"},"ts":1461600205000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"Yeah... Hmm, perhaps forking is better","msgtype":"m.text"},"ts":1461600299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's also deployed here https://quuz.org/webvtt/","msgtype":"m.text"},"ts":1461600314000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Kinda want to keep that working without lots of work","msgtype":"m.text"},"ts":1461600326000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if I get to use it I'll make you a lightweight PR; if you like it take it, if it's too much hassle I'll just fork it","msgtype":"m.text"},"ts":1461600344000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"okido","msgtype":"m.text"},"ts":1461600664000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Can someone click this link in Safari and tell us what happens: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4101","msgtype":"m.text"},"ts":1461602749000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the same things as in Firefox","msgtype":"m.text"},"ts":1461602918000,"senderName":"yury`moz","senderId":"yury`moz@irc"},
{"content":{"body":"Domenic: and Chrome, anything in particular we shall look at?","msgtype":"m.text"},"ts":1461603011000,"senderName":"yury`moz","senderId":"yury`moz@irc"},
{"content":{"body":"yury`moz: hmm I see different behavior in Chrome and Firefox","msgtype":"m.text"},"ts":1461603031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yury`moz: sorry, I meant click the \"test\" link","msgtype":"m.text"},"ts":1461603039000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"if you click on `test` you get 5 in firefox","msgtype":"m.text"},"ts":1461603042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"`error: SyntaxError: Unexpected token ')' on line 1`","msgtype":"m.text"},"ts":1461603043000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah nothing in safari","msgtype":"m.text"},"ts":1461603061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ohhh let's try not an arrow function, one sec","msgtype":"m.text"},"ts":1461603065000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yeah, `error: SyntaxError: Unexpected token ')' on line 1` for 'test' click","msgtype":"m.text"},"ts":1461603085000,"senderName":"yury`moz","senderId":"yury`moz@irc"},
{"content":{"body":"http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=4103","msgtype":"m.text"},"ts":1461603086000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no '5' now","msgtype":"m.text"},"ts":1461603126000,"senderName":"yury`moz","senderId":"yury`moz@irc"},
{"content":{"body":"except in Firefox :)","msgtype":"m.text"},"ts":1461603137000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok cool","msgtype":"m.text"},"ts":1461603139000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"is firefox correct in doing that? seems weird","msgtype":"m.text"},"ts":1461603215000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: well the spec is ambiguous, which is what we're trying to fix","msgtype":"m.text"},"ts":1461603296000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"caitp: so it seems like the interoperable behavior is \"if the result is a string, use it as the response body\". Whereas Firefox does ToString(result)","msgtype":"m.text"},"ts":1461603323000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ah I see","msgtype":"m.text"},"ts":1461603359000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"gsnedders: I'll be around SF first week of May.","msgtype":"m.text"},"ts":1461612879000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: do you have any interest in meeting and/or think it'll be at all useful?","msgtype":"m.text"},"ts":1461613456000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: interest, yes; I'm not sure there's much to learn other than \"we need to make it work\" but I'm sure there will be something to learn/share","msgtype":"m.text"},"ts":1461613668000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: if you're in SF that really does make it easy, at least, and worst case we lose a small amount of time","msgtype":"m.text"},"ts":1461613785000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I am, and agree it seems worthwhile.","msgtype":"m.text"},"ts":1461613875000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"Domenic, annevk: I'm doing some shuffling in how Bikeshed handles stylesheets - the styles that Bikeshed *expects* to exist so that it can render properly (like autolink and selflink styles) are now added automatically, rather than being expected to be embedded in the spec's stylesheet.  Since WHATWG specs handle these already via bikeshed.css, I'm adding","msgtype":"m.text"},"ts":1461615216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"some stuff to WHATWG's defaults.include to omit the extra stylesheets.","msgtype":"m.text"},"ts":1461615216000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Just a heads up.","msgtype":"m.text"},"ts":1461615219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":" TabAtkins: hmm could you pull request bikeshed.css to remove stuff instead?","msgtype":"m.text"},"ts":1461624740000,"senderName":"Domenic","senderId":"Domenic@irc"}
]