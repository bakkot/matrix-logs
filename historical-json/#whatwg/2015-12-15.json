[
{"content":{"body":"so, some colleagues were talking about some security issues they were working on for stands implementation, and one was not convinced there was any need to do things differently from plain user space js","msgtype":"m.text"},"ts":1450148044000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i tried to explain the threat model of leaking info synchronously, but admittedly, it's hard to come up with something compelling","msgtype":"m.text"},"ts":1450148096000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: what is \"stands\"","msgtype":"m.text"},"ts":1450148140000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"streams","msgtype":"m.text"},"ts":1450148150000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Swype-o","msgtype":"m.text"},"ts":1450148158000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1450148318000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I wasn't aware there's what new security risks Streams exposes","msgtype":"m.text"},"ts":1450148399000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"looks at the spec","msgtype":"m.emote"},"ts":1450148403000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in this case they're talking about [[private field]] vs normal fields, afaik","msgtype":"m.text"},"ts":1450148433000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"properties*","msgtype":"m.text"},"ts":1450148441000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1450148461000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't remember reading discussion of that yet","msgtype":"m.text"},"ts":1450148565000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean in the github issue trackers discussions for Streams","msgtype":"m.text"},"ts":1450148592000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but maybe I need to read more carefully","msgtype":"m.text"},"ts":1450148614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it was either about implementation in blink or WebKit, probably blink because it sounded like they were using the private symbols thing there","msgtype":"m.text"},"ts":1450148644000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so not spec specific necessarily","msgtype":"m.text"},"ts":1450148654000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1450148655000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"incidentally I realize now that it seems like Streams discussion has slowed down a lot recently","msgtype":"m.text"},"ts":1450148681000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I used to get a lot of issue notifications for it but not much at all lately","msgtype":"m.text"},"ts":1450148700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1450148707000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway at that level it seems like there are all kinds of gotchas when implementing something like this","msgtype":"m.text"},"ts":1450148771000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean in C++","msgtype":"m.text"},"ts":1450148783000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there is definitely a potential issue if user space gets control of non user space stuff, but i mean more in general about cross origin communications channels in DOM","msgtype":"m.text"},"ts":1450148849000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"seems like it could be useful for notifying an attacker of some kind of side channel, maybe","msgtype":"m.text"},"ts":1450148880000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1450148933000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I see now","msgtype":"m.text"},"ts":1450148941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: btw you working on browser-engine code these days?","msgtype":"m.text"},"ts":1450149033000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"still contributing to Angular?","msgtype":"m.text"},"ts":1450149065000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"v8/webkit/blink, from most frequently to least frequently","msgtype":"m.text"},"ts":1450149074000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1450149120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"didn't know","msgtype":"m.text"},"ts":1450149127000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"peruses some commit logs","msgtype":"m.emote"},"ts":1450149237000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ara","msgtype":"m.text"},"ts":1450149287000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"caitp: you working at Igalia?","msgtype":"m.text"},"ts":1450149298000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeeah, joined this summer/fall","msgtype":"m.text"},"ts":1450149326000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"very cool","msgtype":"m.text"},"ts":1450149369000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"massive respect to them","msgtype":"m.text"},"ts":1450149378000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"seems like a very exceptional group of people","msgtype":"m.text"},"ts":1450149429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i think at least some of them hang out in here from time to time :p","msgtype":"m.text"},"ts":1450149438000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"didn't know that","msgtype":"m.text"},"ts":1450149452000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I guess there's probably a few more people working there now than I realize","msgtype":"m.text"},"ts":1450149489000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don't actually personally know anybody else who works there so well","msgtype":"m.text"},"ts":1450149521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well I know Joanie some","msgtype":"m.text"},"ts":1450149528000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Joanmarie","msgtype":"m.text"},"ts":1450149554000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"super cool","msgtype":"m.text"},"ts":1450149558000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yeah, I thought spec editors would probably know her","msgtype":"m.text"},"ts":1450149560000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah, I'm extremely glad she's able to spend time contribuing to spec discussions, especially for accessibility stuff","msgtype":"m.text"},"ts":1450149614000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think she's a major asset to the accessibility effort","msgtype":"m.text"},"ts":1450149635000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and voice of reason, etc.","msgtype":"m.text"},"ts":1450149642000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: will review the build PR today","msgtype":"m.text"},"ts":1450168178000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok thx","msgtype":"m.text"},"ts":1450168192000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(wasn't ignoring it, but just been working on trying to get a new validator release out)","msgtype":"m.text"},"ts":1450168207000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: btw I finally changed the validator behavior to not report errors for ampersand cases that the spec says are not errors","msgtype":"m.text"},"ts":1450168270000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(no worries)","msgtype":"m.text"},"ts":1450168292000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"MikeSmith: oh, cool. didn't you want the rules to be simpler there? or is the current spec OK?","msgtype":"m.text"},"ts":1450168395000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: current spec is OK by me","msgtype":"m.text"},"ts":1450168727000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what I implemented in the parser conforms to the current spec, as far as I can remember","msgtype":"m.text"},"ts":1450168750000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1450168767000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm a little fuzzy on it because I wrote the patch probably a year ago","msgtype":"m.text"},"ts":1450168798000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and to be the change hasn't been merged into the parser trunk; I'm resorting to checking it into a branch and having the validator use a build from that branch","msgtype":"m.text"},"ts":1450168897000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*and to be clear,","msgtype":"m.text"},"ts":1450168904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1450170216000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"What does the service worker has acess to?","msgtype":"m.text"},"ts":1450170454000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"I can't access DOM for sure, nor XHR","msgtype":"m.text"},"ts":1450170465000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: you can use fetch()","msgtype":"m.text"},"ts":1450170868000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"howdoi: it should have most APIs that are exposed in workers, minus a few","msgtype":"m.text"},"ts":1450170888000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there any list of which it can access and which it can't ?","msgtype":"m.text"},"ts":1450171106000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"annevk: I am reading http://www.w3.org/TR/service-workers/","msgtype":"m.text"},"ts":1450171119000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: don't really know if anyone keeps a list","msgtype":"m.text"},"ts":1450171132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"howdoi: read https://slightlyoff.github.io/ServiceWorker/spec/service_worker/ instead","msgtype":"m.text"},"ts":1450171152000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"howdoi: TR/ drafts are almost always the wrong thing to be reading","msgtype":"m.text"},"ts":1450171164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" Working Draft  would be talking about it in bits and pieces","msgtype":"m.text"},"ts":1450171174000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: I'm not sure what you mean, but the SW specification would not really talk about what APIs are available from ServiceWorkerGlobalScope, that's mostly up to other specifications","msgtype":"m.text"},"ts":1450171233000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks, I shall re-read it","msgtype":"m.text"},"ts":1450171947000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"annevk: friendly ping re https://github.com/whatwg/dom/pull/123 :)","msgtype":"m.text"},"ts":1450172300000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Thanks, so many GitHub things to look at... Halved the list so far.","msgtype":"m.text"},"ts":1450173399000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: are you using an older version of bikeshed?","msgtype":"m.text"},"ts":1450173448000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe...","msgtype":"m.text"},"ts":1450173457000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I'll update and see if it changes things","msgtype":"m.text"},"ts":1450173465000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it seems your generated dom.html changes the formatting of a bunch of things","msgtype":"m.text"},"ts":1450173466000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yoav: I guess I can merge and overwrite that locally","msgtype":"m.text"},"ts":1450173481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm trying to update and see what it does, but feel free to merge and overwrite if you prefer","msgtype":"m.text"},"ts":1450173560000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: it seems that might be the problem; I merged this one, I guess now you've updated it'll be fine for the patch that fixes where supported tokens lives","msgtype":"m.text"},"ts":1450173770000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah, the update was the issue :)","msgtype":"m.text"},"ts":1450173800000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"annevk: No need to thank me, I introduced that damn typo. :)","msgtype":"m.text"},"ts":1450176721000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1450176735000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Well, I reviewed that change...","msgtype":"m.text"},"ts":1450176748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Hah, true. :)","msgtype":"m.text"},"ts":1450176798000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: jsfeatures.in is a progressive webapp, but the add to home screen banner is not getting triggered even after the bypass flag is enabled, any idea?","msgtype":"m.text"},"ts":1450182560000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"howdoi: nope","msgtype":"m.text"},"ts":1450185321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, I think I'm still missing webapps mailing list emails","msgtype":"m.text"},"ts":1450185704000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"annevk: is https://github.com/whatwg/html/pull/373 ready to go or still reviewing?","msgtype":"m.text"},"ts":1450185736000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"MikeSmith: is there some way to know who all are subscribed to webapps mailing list?","msgtype":"m.text"},"ts":1450185763000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I wonder if most of the people were kicked out there last week","msgtype":"m.text"},"ts":1450185781000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: I think it requires globalThis to land on the other side, no?","msgtype":"m.text"},"ts":1450185877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: oh, that happened already, that's when I removed the \"do not merge\" label :)","msgtype":"m.text"},"ts":1450185894000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"execution context tracking (for the script execution PR) is still in progress, but globalThis and InitializeHostDefinedRealm are now in ES","msgtype":"m.text"},"ts":1450185942000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: hmm, the ECMAScript PR still has globalThis as an outstanding commit","msgtype":"m.text"},"ts":1450185954000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/tc39/ecma262/commit/9474c58c6baf54e8b5347a182c2fa6ee10dab071 but I guess maybe that PR needs rebasing?","msgtype":"m.text"},"ts":1450186007000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the \"master es2016-draft-20151210 \" in the header of the commit means it's been merged into master and released in a tagged snapshot","msgtype":"m.text"},"ts":1450186064000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ah it's that GitHub UI bug","msgtype":"m.text"},"ts":1450186107000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so I think it's good to merge then, ideally heycam also reviews this but we can ask him to come in after the fact","msgtype":"m.text"},"ts":1450186113000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"He merged 3/4 commits in the PR, but GitHub doesn't update the PR to show that","msgtype":"m.text"},"ts":1450186135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1450186141000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Yeah IDL needs more updates...","msgtype":"m.text"},"ts":1450186145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"IDL doesn't even talk about script settings objects, it talks about \"stack of scripts\"?","msgtype":"m.text"},"ts":1450186154000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This experience has convinced me to move IDL updates up on the priority stack, although they are still below cancelable promises which are below this script/module work.","msgtype":"m.text"},"ts":1450186196000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I think I convinced heycam last week to do most of my outstanding requests regarding internal slots, more formalized algorithms, this, current realm, etc. but I'm not sure what timeline we're looking at","msgtype":"m.text"},"ts":1450186207000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so will you merge 373 yourself?","msgtype":"m.text"},"ts":1450186286000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah I will, when I get to work in a couple hours.","msgtype":"m.text"},"ts":1450186299000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"such great refactoring","msgtype":"m.text"},"ts":1450186319000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"My biggest requests for IDL are an update for latest ES, and a merger of the two type sections/getting rid of the seperate \"ES binding\" concept.","msgtype":"m.text"},"ts":1450186320000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ahaa, bug in session history algo. \"8. If the specified entry is not an entry with persisted user state, but its URL has a fragment identifier, scroll to the fragment identifier.\" should not happen when coming from bfcache","msgtype":"m.text"},"ts":1450186332000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I guess that wasn't considered since only Firefox has a bfcache :/","msgtype":"m.text"},"ts":1450186361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why is bfcache allowed in the standard? Can't it be a nonstandard Firefox extension if only one browser implements it and it affects interop in these kind of ways?","msgtype":"m.text"},"ts":1450186391000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: webkit has it too","msgtype":"m.text"},"ts":1450186409000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1450186429000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: so apparently WebKit has it too, but there's events too and I think someone told me a lot of the same issues come up with preload","msgtype":"m.text"},"ts":1450186447000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah this seems like the kind of interop situation we try to fix, not codify into the standard as \"do either one, it's fine\"","msgtype":"m.text"},"ts":1450186471000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hmm, perhaps that step 8 is fine if \"entry with persisted user state\" is interpreted certain way","msgtype":"m.text"},"ts":1450186495000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: so I think Chrome is not convinced about the complexity of this feature and believes that typically the network is fast enough so that reloading is fine","msgtype":"m.text"},"ts":1450186872000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: whereas other browsers want to retain some representation","msgtype":"m.text"},"ts":1450186887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"await is boring with try-catch block","msgtype":"m.text"},"ts":1450186892000,"senderName":"howdoi","senderId":"howdoi@irc"},
{"content":{"body":"Domenic: also, this being history and that fundamentally being tied to UI makes it hard to see a fully interoperable future, but perhaps we can get closer in some aspects","msgtype":"m.text"},"ts":1450186946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: so should https://bugs.ecmascript.org/show_bug.cgi?id=1898 be marked fixed?","msgtype":"m.text"},"ts":1450187659000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Perhaps better to ask that in jslang","msgtype":"m.text"},"ts":1450187667000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, annevk: is https://github.com/domenic/window-proxy-spec still worth looking at?","msgtype":"m.text"},"ts":1450188053000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: for same-origin only","msgtype":"m.text"},"ts":1450188067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Right","msgtype":"m.text"},"ts":1450188074000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I need to find time to study the discussion from last week and write up something more coherent, but thus far I'm mostly catching up","msgtype":"m.text"},"ts":1450188119000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ok","msgtype":"m.text"},"ts":1450188133000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: and apparently I'm somewhat legally obliged to take more holiday for the remainder of the year starting Friday so...","msgtype":"m.text"},"ts":1450188138000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders trying to make nox write it up","msgtype":"m.emote"},"ts":1450188154000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I would like some WebIDL stuff to actually support WindowProxy.","msgtype":"m.text"},"ts":1450188198000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Heh, it's an interesting challenge for sure","msgtype":"m.text"},"ts":1450188212000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Because the current WindowProxy stuff in HTML is laughable.","msgtype":"m.text"},"ts":1450188227000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: what would IDL provide?","msgtype":"m.text"},"ts":1450188228000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: as I understand it all we need is internal methods which IDL doesn't really help with in any meaningful way","msgtype":"m.text"},"ts":1450188250000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"No idea, but it seems insane to me that we have WindowProxy in the middle of nowhere, with a very vague definition, etc etc.","msgtype":"m.text"},"ts":1450188254000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk is working on the \"vague\" part, at least","msgtype":"m.text"},"ts":1450188269000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Well, ES6 has proxies, WebIDL doesn't, what about \"proxy WindowProxy { /* what goes there to be defined */ }\"","msgtype":"m.text"},"ts":1450188295000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"What Domenic has written up coupled up with more internal methods overrides and origin checks is roughly what we'll end up with I suspect","msgtype":"m.text"},"ts":1450188318000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: if your IDL \"interface\" (to be renamed \"class\" one day) defines getter/setter stuff you'll get a proxy","msgtype":"m.text"},"ts":1450188343000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Still sounds better than prose with a interface not defined anywhere in actual IDL.","msgtype":"m.text"},"ts":1450188346000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smaug____: there's no public way to view the set of subscribers to a list afaik. I can see it myself though","msgtype":"m.text"},"ts":1450188400000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I think you would need a pretty new language if you wanted to write up WindowProxy in IDL","msgtype":"m.text"},"ts":1450188411000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: Ah?","msgtype":"m.text"},"ts":1450188417000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: that API is available to Members too","msgtype":"m.text"},"ts":1450188456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: it doesn't correspond to basically any concepts in IDL as it exists today. Extending IDL to give enough power would essentially create a micro-language inside IDL which is entirely composed of features to make WindowProxy work.","msgtype":"m.text"},"ts":1450188460000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I see.","msgtype":"m.text"},"ts":1450188473000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: w3.org 404s have mixed content","msgtype":"m.text"},"ts":1450188537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, will try to get those 404 pages fixed","msgtype":"m.text"},"ts":1450188568000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"The only thing WindowProxy needs from IDL is acknowledgment that it exists and can be used in IDL interfaces","msgtype":"m.text"},"ts":1450188579000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: And WebIDL doesn't provide that, right?","msgtype":"m.text"},"ts":1450188596000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk, Domenic: What if we had just \"proxy WindowProxy;\"?","msgtype":"m.text"},"ts":1450188624000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: actually those will be fixed when they deploy upgrade-insecure-requests, right?","msgtype":"m.text"},"ts":1450188629000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"sure or \"typename WindowProxy\"","msgtype":"m.text"},"ts":1450188635000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"we need the same thing for ReadableStream","msgtype":"m.text"},"ts":1450188643000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"win 35","msgtype":"m.text"},"ts":1450188657000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Gecko does \"interface WindowProxy;\"","msgtype":"m.text"},"ts":1450188664000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: I guess","msgtype":"m.text"},"ts":1450188666000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(IIRC).","msgtype":"m.text"},"ts":1450188669000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"yeah that seems reasonable too","msgtype":"m.text"},"ts":1450188682000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"nox: it's the same problem Uint8Array et al have","msgtype":"m.text"},"ts":1450188682000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: but IDL mentions those already in various places to make things work","msgtype":"m.text"},"ts":1450188703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, heycam|away: Btw, have you thought a bit more about [[HasInstance]] for NodeFilter?","msgtype":"m.text"},"ts":1450188717000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"perhaps if Domenic's grand flattening plan is executed that problem disappears altogether","msgtype":"m.text"},"ts":1450188726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I haven't, was happy for you all to sort it out","msgtype":"m.text"},"ts":1450188750000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, I was happy this meeting happened too.","msgtype":"m.text"},"ts":1450188779000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"The code I had to read was extremely confusing, glad that bz confirmed it was actually mostly dead code.","msgtype":"m.text"},"ts":1450188796000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"smaug____: as annevk reminds me there's member-only access to subscriber lists, so I'll find a URL you can try","msgtype":"m.text"},"ts":1450188804000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> Worker initialization was refactored extensively, to avoid creating WorkerGlobalScope objects before the corresponding realm was created. (The existing setup had the problem where it was creating a WorkerGlobalScope, derived from Object, in a thread that didn't even exist yet.)","msgtype":"m.text"},"ts":1450188837000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Woo","msgtype":"m.text"},"ts":1450188838000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: smaug____: https://www.w3.org/Member/Mail/AuditForm","msgtype":"m.text"},"ts":1450188865000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Though,","msgtype":"m.text"},"ts":1450188878000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"thanks annevk","msgtype":"m.text"},"ts":1450188885000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I just realised we didn't have any meeting about whichever step in document.write() that confuses me. :(","msgtype":"m.text"},"ts":1450188893000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: smaug____: https://www.w3.org/services/list-audit/query?queryList=public-webapps in particular","msgtype":"m.text"},"ts":1450188903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, did we get a bug filed about the dead code?","msgtype":"m.text"},"ts":1450188905000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: No idea.","msgtype":"m.text"},"ts":1450188923000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: Ask bz.","msgtype":"m.text"},"ts":1450188928000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I don't think so","msgtype":"m.text"},"ts":1450188929000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"bz is on vacation to NZ","msgtype":"m.text"},"ts":1450188936000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh right.","msgtype":"m.text"},"ts":1450188941000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"So probably not.","msgtype":"m.text"},"ts":1450188949000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: smaug____:  the main problem though is that for lists that are partially DB-backed you'll also need to check who is part of the group since those will also have gotten the email and are not listed on that page, aiui","msgtype":"m.text"},"ts":1450188950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox, can you write down what exactly is dead code, so I can file?","msgtype":"m.text"},"ts":1450188981000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: filing GitHub issues is a decent substitute for meetings though","msgtype":"m.text"},"ts":1450188983000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: True.","msgtype":"m.text"},"ts":1450189002000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ms2ger: Will do that tonight.","msgtype":"m.text"},"ts":1450189009000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I'm still supposed to work on insane PHP code, mind you. :P","msgtype":"m.text"},"ts":1450189020000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Send me an email?","msgtype":"m.text"},"ts":1450189062000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Will do.","msgtype":"m.text"},"ts":1450189106000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Thanks","msgtype":"m.text"},"ts":1450189124000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: Maybe \"external interface Foo;\" would be better? Bikeshedding though.","msgtype":"m.text"},"ts":1450191618000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: it's not clear to me that we need to use IDL syntax for them","msgtype":"m.text"},"ts":1450191728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: what we need is something that makes it clear they can be used in IDL using verbiage X coupled perhaps with some restrictions where they can be used (e.g., using WindowProxy in worker APIs would be bad)","msgtype":"m.text"},"ts":1450191774000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: and we need to define what it means to create new instances of them from within IDL algorithms","msgtype":"m.text"},"ts":1450191818000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: there might be some other things","msgtype":"m.text"},"ts":1450191834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see.","msgtype":"m.text"},"ts":1450191848000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: but \"bikeshed syntax\" doesn't really solve any of those per se","msgtype":"m.text"},"ts":1450191853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Definitely.","msgtype":"m.text"},"ts":1450191861000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"MikeSmith: ok, thanks. Looks like some essential people are now missing from the mailing list","msgtype":"m.text"},"ts":1450195169000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and Apple isn't currently a member of the wg","msgtype":"m.text"},"ts":1450195194000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: per https://www.w3.org/services/list-audit/query?queryList=public-webapps most Apple employees do get emails though","msgtype":"m.text"},"ts":1450195426000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, not rniwa for example","msgtype":"m.text"},"ts":1450195494000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I see, sigh","msgtype":"m.text"},"ts":1450195732000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think proxy … { … } would be the way to go. We could then say that interfaces with special operations get an implicit proxy on which these operations are defined, and we could make something like [Proxy=WindowProxy] on Window or any interface which need a more exotic proxy thing.","msgtype":"m.text"},"ts":1450195985000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: what problem are you trying to solve?","msgtype":"m.text"},"ts":1450196030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"None particularly, I just hate how WindowProxy is specified and would like it to be more WebIDL-friendly.","msgtype":"m.text"},"ts":1450196074000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I really don't see a need to put anything in Web IDL for this","msgtype":"m.text"},"ts":1450196181000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Right, inventing IDL syntax does not solve problems so I'm also at a loss","msgtype":"m.text"},"ts":1450196509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic, annevk: Disregard me then. :)","msgtype":"m.text"},"ts":1450197088000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"http://stackoverflow.com/questions/9675750/if-ie-comments-showing-up-in-ie9 is weird, seems like parsing of conditional comments in old IE can end up with valid comments being treated as text o_O","msgtype":"m.text"},"ts":1450197411000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: Should DOM be updated to use FrozenArray?","msgtype":"m.text"},"ts":1450197556000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: where?","msgtype":"m.text"},"ts":1450197585000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Never mind I thought arrays were used in there somehow.","msgtype":"m.text"},"ts":1450197674000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Oh, add-topic is dead?","msgtype":"m.text"},"ts":1450198307000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what is add-topic?","msgtype":"m.text"},"ts":1450198565000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"<annevk> No need to introduce new ADD-TOPIC or REMOVE-TOPIC syntax. It's no longer used.","msgtype":"m.text"},"ts":1450198597000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: oh, see, with uppercase it's much clearer","msgtype":"m.text"},"ts":1450198621000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ms2ger: yeah, that died with the transition to GitHub","msgtype":"m.text"},"ts":1450198628000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what did it do?","msgtype":"m.text"},"ts":1450199150000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it was used for emailing folks when a topic they cared about ended up being changed","msgtype":"m.text"},"ts":1450200757000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: we discussed it to some extent when migrating and it wasn't used enough to care","msgtype":"m.text"},"ts":1450200772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: can I help with the CORS-preflight cache confusion?","msgtype":"m.text"},"ts":1450203896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, I'd appreciate that!","msgtype":"m.text"},"ts":1450203905000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I'm not sure what it *accomplishes*","msgtype":"m.text"},"ts":1450203912000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"like I can see it's doing this stuff but it seems very circular to me","msgtype":"m.text"},"ts":1450203920000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"if there's no cache, then make the cache to compare against later?","msgtype":"m.text"},"ts":1450203929000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"what I'm thinking is the answer right now is how CORS-preflight Fetch can return a network error","msgtype":"m.text"},"ts":1450203963000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: if there's no cache entry, make this preflight fetch to populate the cache (and make sure the server knows about CORS at the same time)","msgtype":"m.text"},"ts":1450203966000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is that so if something is in the cache, we can be sure it's good? and if it doesn't match the catch, we need to run validation on it again?","msgtype":"m.text"},"ts":1450203990000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: correct","msgtype":"m.text"},"ts":1450204012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ahh, I get it now! thanks","msgtype":"m.text"},"ts":1450204030000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I mean, \"we can be sure it's good\" is pretty simple, but I'm sure I'll get a better idea of what validity means as I gain more experience with Fetch :)","msgtype":"m.text"},"ts":1450204078000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"would it be accurate to say it checks for CORS security?","msgtype":"m.text"},"ts":1450204126000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: it's basically a check to see the server understands CORS and is happy to handle cross-origin requests that go outside the traditional security model of the web","msgtype":"m.text"},"ts":1450204165000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gotcha, thanks!","msgtype":"m.text"},"ts":1450204180000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: if you can think of places where some extra explanation would help that'd be welcome as issues / PR","msgtype":"m.text"},"ts":1450204203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think more notes in general would be a good thing. whenever a step has a note it usually seems to be giving me the reason for the step","msgtype":"m.text"},"ts":1450204240000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I don't always understand what the note itself means, but I often get that it's relating to something beyond the Fetch spec itself, and that I'd be doing something that'll be used later","msgtype":"m.text"},"ts":1450204279000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: notes are typically included based on PRs/issues or when I find something particularly complicated myself","msgtype":"m.text"},"ts":1450204280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess they might still be too abstract at times...","msgtype":"m.text"},"ts":1450204304000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"well my main thing is like","msgtype":"m.text"},"ts":1450204318000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I've gone through all the steps, but it's not easy to understand the big picture","msgtype":"m.text"},"ts":1450204326000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I don't know what the *point* of each different Fetch function is from the outset","msgtype":"m.text"},"ts":1450204342000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"like I kinda get that things enter in Fetch; go to Main Fetch to get sorted to Basic Fetch or HTTP Fetch; and HTTP Fetch covers a lot of different ground","msgtype":"m.text"},"ts":1450204377000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"but all the introductions are like \"To perform an HTTP-network fetch using request with an optional credentials flag, run these steps:\" and I don't know what the *goal* is","msgtype":"m.text"},"ts":1450204435000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"well the goal is representing response = fetch(request)","msgtype":"m.text"},"ts":1450204465000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"things are abstracted into their own algorithm if they are reused or when that is good for clarity","msgtype":"m.text"},"ts":1450204486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that makes sense","msgtype":"m.text"},"ts":1450204495000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"I hadn't thought about the reusing aspect, though I have noted what gets called where","msgtype":"m.text"},"ts":1450204506000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"we could have some more notes with a basic explanation I suppose, but a lot of the algorithms don't mean much by themselves","msgtype":"m.text"},"ts":1450204551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and we might change the arrangement I suppose if that becomes necessary at some point","msgtype":"m.text"},"ts":1450204581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1450204585000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"E.g., \"main fetch\" is a fairly recent addition we didn't need before","msgtype":"m.text"},"ts":1450204602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think something could be done for the CORS-preflight cache on pointing out what I eventually concluded","msgtype":"m.text"},"ts":1450204609000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"huh, are the steps in main fetch new? or were they elsewhere?","msgtype":"m.text"},"ts":1450204622000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: they used to be in \"fetch\"","msgtype":"m.text"},"ts":1450204646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nikkibee: would that help at the top of CORS-preflight fetch though or in HTTP fetch step 4.1?","msgtype":"m.text"},"ts":1450204703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that sounds like a good change, if at least so each method is a bit shorter","msgtype":"m.text"},"ts":1450204705000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"annevk: both I think. like you would say different things in each place","msgtype":"m.text"},"ts":1450204731000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: we made it because we needed to reinvoke \"fetch\" from redirects, but wanted to keep some things unchanged","msgtype":"m.text"},"ts":1450204743000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"like in HTTP fetch step 4.1 it could be like \"if something is in the cache, it's been validated. if it's not, we need to validate it\"","msgtype":"m.text"},"ts":1450204751000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: so now redirects reinvoke \"main fetch\" and whatever is done in \"fetch\" is left alone","msgtype":"m.text"},"ts":1450204762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1450204769000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"nikkibee: could you comment in the preflightResponse issue to that effect? I'll add some notes tomorrow","msgtype":"m.text"},"ts":1450204804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure thing","msgtype":"m.text"},"ts":1450204883000,"senderName":"nikkibee","senderId":"nikkibee@irc"},
{"content":{"body":"philipj: https://www.chromestatus.com/metrics/feature/timeline/popularity/1061 looks excellent, but I guess we need to wait longer","msgtype":"m.text"},"ts":1450205030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"philipj: btw, going directly to that URL in Firefox doesn't update the <select> correctly","msgtype":"m.text"},"ts":1450205058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: what you're seeing is probably https://github.com/GoogleChrome/chromium-dashboard/issues/220","msgtype":"m.text"},"ts":1450205442000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: and yes, that use counter will be in M49, with an \"Estimated Week of Stable\" Feb 29th, 2016","msgtype":"m.text"},"ts":1450205544000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"it does look pretty promising compared to some other recent counters, though","msgtype":"m.text"},"ts":1450205598000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"annevk: if there's any hurry, a googler might be able to tell you numbers from the dev channel","msgtype":"m.text"},"ts":1450205619000,"senderName":"philipj","senderId":"philipj@irc"},
{"content":{"body":"is importScripts() just sync xhr in disguise?","msgtype":"m.text"},"ts":1450206340000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Who wants to add a \"never show this again\" to the \"too slow\" checkbox. jeez.","msgtype":"m.text"},"ts":1450206990000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"s/checkbox/popup/","msgtype":"m.text"},"ts":1450207009000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although I guess if it uses cookies it's not going to work on my file:// URL copy","msgtype":"m.text"},"ts":1450207016000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: importScripts() is sync, but only for workers","msgtype":"m.text"},"ts":1450207092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah i guess we allow workers to jank themselves anyway","msgtype":"m.text"},"ts":1450207186000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we also do some special things for importScripts() in service workers","msgtype":"m.text"},"ts":1450208417000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"monkey patching: https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#importscripts","msgtype":"m.text"},"ts":1450208458000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: yeah i saw junkees did a nice refactoring a while back to allow ServiceWorkerGlobalScope.importScripts to reuse most of the algorithm","msgtype":"m.text"},"ts":1450208461000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's not monkeypatching :). What was there before was monkeypatching... \"do importScripts but instead of step 7, do X, and after step 8, do Y.\"","msgtype":"m.text"},"ts":1450208503000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1450208528000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"hello i am starting on this bug https://github.com/whatwg/html/issues/176, needed some starting points for it","msgtype":"m.text"},"ts":1450208603000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"rits: do you need help with the tooling, or with the contents of the bug? If the latter, annevk is the person to ask. If he's not around in this channel right now you can try asking clarifying questions on the bug thread itself.","msgtype":"m.text"},"ts":1450208761000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, according to timezone he is not around now, i will discuss with him for the content part tomorrow, thanks","msgtype":"m.text"},"ts":1450208914000,"senderName":"rits","senderId":"rits@irc"},
{"content":{"body":"majidvp: about scrollRestoration","msgtype":"m.text"},"ts":1450209685000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"majidvp: the spec currently hints that history.scrollRestoration = 'manual'; somewhere in a script in head is enough to give manual handling everywhere","msgtype":"m.text"},"ts":1450209725000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but #hash handling in session history doesn't get that","msgtype":"m.text"},"ts":1450209740000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"hmm, I should just file a bug about the example in the spec I guess","msgtype":"m.text"},"ts":1450209767000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or perhaps we want to change the spec","msgtype":"m.text"},"ts":1450209773000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"speaking of which","msgtype":"m.text"},"ts":1450209912000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"does majidvp or smaug____ want to make a PR for https://github.com/whatwg/html/issues/350#issuecomment-159753715","msgtype":"m.text"},"ts":1450209931000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"should probably try to figure out how to write a pr for the spec","msgtype":"m.emote"},"ts":1450209989000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but it is github","msgtype":"m.text"},"ts":1450210046000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"which means hassle to me","msgtype":"m.text"},"ts":1450210051000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Domenic: so, which file should I modify?","msgtype":"m.text"},"ts":1450210099000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"source?","msgtype":"m.text"},"ts":1450210101000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yep. https://github.com/whatwg/html#pull-requests should give the info needed.","msgtype":"m.text"},"ts":1450210135000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"smaug: I can make the PR for issue 350 if you don't have the repo  setup.","msgtype":"m.text"},"ts":1450210436000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"majidvp: thanks","msgtype":"m.text"},"ts":1450210456000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"majidvp: any feedback to https://github.com/whatwg/html/issues/404","msgtype":"m.text"},"ts":1450210473000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"great issue number :)","msgtype":"m.text"},"ts":1450210479000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: As for the #hash, my read of the spec is that \"history.scrollRestoration=manual\" takes precedent over hash. In particular, step 8 says \"If the specified entry is not an entry with persisted user state, but its URL has a fragment identifier, scroll to the fragment identifier.\"","msgtype":"m.text"},"ts":1450210678000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"smaug____: In other words, if we have any scroll information for the entry (including scrollRestoration='manual') then we should not scroll to hash.","msgtype":"m.text"},"ts":1450210747000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"majidvp: FYI, chrome does scrolls with #hash","msgtype":"m.text"},"ts":1450210755000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/scroll/scroll/","msgtype":"m.text"},"ts":1450210760000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so #hash takes precedence","msgtype":"m.text"},"ts":1450210772000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"majidvp: also \"entry with persisted user state\" doesn't mean scrollRestoration state","msgtype":"m.text"},"ts":1450210856000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"as far as I see","msgtype":"m.text"},"ts":1450210861000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"since scrollRestoration is an explicitly defined state","msgtype":"m.text"},"ts":1450210873000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"The Chrome behaviour is that it scrolls to hash on first load (where scrollRestoration = Auto) but it does not on any history traversal if the page has already set scrollRestoration=Manual.","msgtype":"m.text"},"ts":1450211158000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/LayoutTests/fast/history/scroll-restoration/scroll-restoration-fragment-navigation-crossdoc.html&sq=package:chromium&type=cs","msgtype":"m.text"},"ts":1450211164000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"smaug____: what do you think the right behaviour should be? The spec gives precedent on history scroll restoration over navigation to hash so I think scrollRestoration=Manual should also take precedent over hash.","msgtype":"m.text"},"ts":1450211359000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"majidvp: the spec gives precedence to fragment navigation","msgtype":"m.text"},"ts":1450211542000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but I think that is wrong","msgtype":"m.text"},"ts":1450211544000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thouhg","msgtype":"m.text"},"ts":1450211556000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"thouhg","msgtype":"m.text"},"ts":1450211558000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"though :)","msgtype":"m.text"},"ts":1450211561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what should happen to the hashchange event?","msgtype":"m.text"},"ts":1450211578000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it would still be dispatched, even without scrolling?","msgtype":"m.text"},"ts":1450211587000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"majidvp: which behavior you want?","msgtype":"m.text"},"ts":1450211663000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I guess dispatching hashchange is fine even without scrolling","msgtype":"m.text"},"ts":1450211973000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is scrollRestoration is 'manual'","msgtype":"m.text"},"ts":1450211985000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/is/if/","msgtype":"m.text"},"ts":1450211990000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes, firing hashchange is independent of scrolling to fragment. It happens even if there is no fragment matching the hash.","msgtype":"m.text"},"ts":1450212160000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"majidvp: you'll file a blink bug?","msgtype":"m.text"},"ts":1450212266000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"or should I?","msgtype":"m.text"},"ts":1450212273000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm pretty excited about killing UTF16 in textencoder","msgtype":"m.text"},"ts":1450212289000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":" smaug____:I can file a bug. Do you have a repro? Is it on first load, or when traversing back to the page?","msgtype":"m.text"},"ts":1450212561000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"majidvp: when traversing back at least","msgtype":"m.text"},"ts":1450212634000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I just manually tried something with http://mxr.mozilla.org/mozilla-central/source/dom/events/Event.cpp","msgtype":"m.text"},"ts":1450212657000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"load that, set 'manual'","msgtype":"m.text"},"ts":1450212663000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"scroll/click 199 on the left","msgtype":"m.text"},"ts":1450212679000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"then load about:blank","msgtype":"m.text"},"ts":1450212686000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and go back","msgtype":"m.text"},"ts":1450212689000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the mode is still manual, but page is scrolled","msgtype":"m.text"},"ts":1450212700000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"majidvp: note, there is also \"update the session history with the new page\" where steps 4-6 do fragment scrolling","msgtype":"m.text"},"ts":1450212858000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"That sounds like a bug. I will file it.","msgtype":"m.text"},"ts":1450212998000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"Hmmm,  my first read suggests that \"update the session history with the new page\" is only invoked for new entries (i.e., history.scrollRestoration != Manual) which probably means it can be left as is.","msgtype":"m.text"},"ts":1450213601000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"on closer examination, the algorithm allows UA to spin the event loop for sometime before trying to scroll to fragment in a loop. So it is potentially possible for script to run in mean time and update scroll restoration mode for the entry to Manual. I think, it is more appropriate to leave this as is, i.e., scroll to fragment for new pages is not impacted","msgtype":"m.text"},"ts":1450214111000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"by scroll restoration mode.","msgtype":"m.text"},"ts":1450214111000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"\"traverse the history\" in step 1 calls \"navigate\", which then calls 7.6.2 which does 'update the session history with the new page'","msgtype":"m.text"},"ts":1450214318000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but maybe I'm missing some step in 'navigate' where we'd return early","msgtype":"m.text"},"ts":1450214337000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I think you maybe right. I left a comment on the issue.","msgtype":"m.text"},"ts":1450215725000,"senderName":"majidvp","senderId":"majidvp@irc"},
{"content":{"body":"Hmm Chrome regressed typeof document.all to \"object\" and it didn't break the internet https://code.google.com/p/chromium/issues/detail?id=567998","msgtype":"m.text"},"ts":1450219258000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean it kind of broke some stuff but not completely","msgtype":"m.text"},"ts":1450219316000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: oh man, i'd be afraid of how many dhtml menus are suddenly busted","msgtype":"m.text"},"ts":1450220993000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"(on sites that nobody visits, probably)","msgtype":"m.text"},"ts":1450221003000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"jgraham: critic appears to not have an up-to-date master for html5lib","msgtype":"m.text"},"ts":1450223380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: this is quite possibly why it hasn't been creating reviews","msgtype":"m.text"},"ts":1450223422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: It appears that you rewrote history on master","msgtype":"m.text"},"ts":1450223608000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well I hope it was you","msgtype":"m.text"},"ts":1450223614000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I'm gonna look innocent. Though it seems not entirely implausible.","msgtype":"m.text"},"ts":1450223825000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Please tell me you didn't rewrite history to reformat a commit message","msgtype":"m.text"},"ts":1450223925000,"senderName":"jgraham","senderId":"jgraham@irc"}
]