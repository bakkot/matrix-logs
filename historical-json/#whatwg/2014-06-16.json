[
{"content":{"body":"nah, you're an ideographic or phonetic language, where you don't need two+ characters for every consonant and vowel, even with utf8 where your average cjk character is 3 bytes, it still doesnt make utf16 massive savings","msgtype":"m.text"},"ts":1402881117000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"whether it's used or not is besides the point, it's still not heavily used for interchange","msgtype":"m.text"},"ts":1402881149000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we use it internally because it's slightly easier to work with, but for interchange it doesn't make a whole lot of sense","msgtype":"m.text"},"ts":1402881173000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"slightly bigger characters, but fewer characters used","msgtype":"m.text"},"ts":1402881212000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i'd attribute the fact that actual documents use it more to the nature of tools than anything else","msgtype":"m.text"},"ts":1402881359000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but it's not really a storage size win, it's not a network traffic performance win","msgtype":"m.text"},"ts":1402881680000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"not that any of it really matters a whole lot","msgtype":"m.text"},"ts":1402881692000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: so I've been wondering how things will end up evolving with the big js mvc frameworks once web components actually becomes a cross-browser-implemented part of the platform","msgtype":"m.text"},"ts":1402883447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if it ever does","msgtype":"m.text"},"ts":1402883451000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well, we're hoping it does, but these frameworks aren't just about drawing pretty widgets","msgtype":"m.text"},"ts":1402883485000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"they're about application structure, right","msgtype":"m.text"},"ts":1402883490000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"sure yeah I realize that","msgtype":"m.text"},"ts":1402883496000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I guess the thing that happens is, ideally, web components and other parts of the framework are easy to test, and it makes it nice and easy for us to help people structure applications, large and small","msgtype":"m.text"},"ts":1402883548000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's not clear to me how much of, e.g., angular is handling the bits that web components does natively","msgtype":"m.text"},"ts":1402883548000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402883555000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"s/framework/platform/","msgtype":"m.text"},"ts":1402883576000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"well, a good answer to that question is \"look at the angular 2.0 prototype stuff\", a big issue that they're dealing with is fitting the web component model into an application framework, IE fitting them into the dependency injection model, and making them aware of their surrounding DOM nodes","msgtype":"m.text"},"ts":1402883700000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"it's pretty interesting, and it's not a super easy problem to solve as web components exists currently","msgtype":"m.text"},"ts":1402883723000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so that's another question I had","msgtype":"m.text"},"ts":1402883774000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"which is, what's lacking in web components as it exists currently","msgtype":"m.text"},"ts":1402883804000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I mean, what have you seen that angular could use that web components should ideally provide but doesn't yet","msgtype":"m.text"},"ts":1402883857000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I was thinking about this today after seeing abarth's message about his <marquee>-in-js implementation","msgtype":"m.text"},"ts":1402883886000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in particular https://groups.google.com/a/chromium.org/d/msg/blink-dev/sQndrT36l1A/b9fJoUK3RAUJ","msgtype":"m.text"},"ts":1402883937000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"There were a couple things that I couldn't implement correctly because they're magic pieces of the platform we haven't explained yet...\"","msgtype":"m.text"},"ts":1402883975000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I've been following that thread a bit, but I'm not sure of the magic necessary for marquee --- but I guess what we're dealing with is, custom elements are always instantiated asynchronously (as far as I'm aware), and you can't really do any magic like inject some parameters into their \"constructors\", if such a thing were to exist. the hack around it is to do the dependency injection logic in the attach callback","msgtype":"m.text"},"ts":1402884161000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so in other words the platform doesn't enable that natively, and that's our mechanism for making controls aware of their relationship to the application","msgtype":"m.text"},"ts":1402884184000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and the whole asynchronous \"upgrading\" of elements has other issues WRT testability, which I think have been raised with the test-the-web-forward people","msgtype":"m.text"},"ts":1402884221000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"as far as the testing issue goes, the subset of the test-the-web-forward people working on writing tests for web components and reviewing those tests are actually the same people from Google who implemented web components in blink","msgtype":"m.text"},"ts":1402884383000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so I think we're planning on them to also come up with some solution to any special testing issues it creates","msgtype":"m.text"},"ts":1402884429000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i expect so","msgtype":"m.text"},"ts":1402884456000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there are some other things that are sort of frustrating, but I only really hear about it during meetings, since I'm working on other areas at the moment. might be some of it available in the meeting notes","msgtype":"m.text"},"ts":1402884587000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"yeah, looks like a lot of the discussion is recorded","msgtype":"m.text"},"ts":1402884720000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: I guess I'll trust that that folks from angular are getting the feedback to dglazkov and hayato and others working on the web-components implementations and specs","msgtype":"m.text"},"ts":1402884976000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"i've suggested it, but I don't know if it's getting there. have to ask dglazkov if he's heard anything","msgtype":"m.text"},"ts":1402885021000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"MikeSmith: that's one of the reasons to use web components internally in the engine: you discover what's missing","msgtype":"m.text"},"ts":1402887380000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"MikeSmith: One thing I didn't mention on the list is I haven't figured out how to do inline event handlers properly","msgtype":"m.text"},"ts":1402887404000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"<marquee onbounce=\"...\">Foo</marquee>","msgtype":"m.text"},"ts":1402887420000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"setting up the right JS environment for the ... is a bit subtle","msgtype":"m.text"},"ts":1402887430000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1402887434000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the engine does that all the time, but it's not clear how to authors can do precisely the same thing","msgtype":"m.text"},"ts":1402887456000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"I think I've got the script version working right","msgtype":"m.text"},"ts":1402887467000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"foo.onbounce = ...","msgtype":"m.text"},"ts":1402887472000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"but the attribute version is subtly different","msgtype":"m.text"},"ts":1402887483000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"it's cool to see these gaps getting exposed","msgtype":"m.text"},"ts":1402887507000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"though I guess in the short term you'd just like to have a way to make it work","msgtype":"m.text"},"ts":1402887563000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also incidentally I guess this could be added to the list of reasons why inlining event handlers is not a best practice","msgtype":"m.text"},"ts":1402887668000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm not really injecting much opinion","msgtype":"m.text"},"ts":1402887730000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"just trying to make thing A work the same way as thing B","msgtype":"m.text"},"ts":1402887738000,"senderName":"abarth","senderId":"abarth@irc"},
{"content":{"body":"krit: ah okay, guess I have some time to read up on SVG then :-)","msgtype":"m.text"},"ts":1402899012000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: utf-16 is the only encoding that's not ASCII-compatible","msgtype":"m.text"},"ts":1402899120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: about https://bugzilla.mozilla.org/show_bug.cgi?id=1024447#c12 I don't think the EME spec specifies the \"keysystem\" content attribute for the source element sufficiently, and it would be better to have it defined properly in the HTML spec -- provided that the attribute is actually suppored in UAs.","msgtype":"m.text"},"ts":1402900686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: I mean, for one thing, the relevant text in the EME spec reads in whole just, \"The keysystem content attribute is added to HTMLSourceElement.\"","msgtype":"m.text"},"ts":1402900686000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: did you file a bug on that?","msgtype":"m.text"},"ts":1402900795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: you should really file bugs :-)","msgtype":"m.text"},"ts":1402900802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: what, no \"TODO: flesh out\"?","msgtype":"m.text"},"ts":1402900815000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"JakeA: Headers is now defined in more detail","msgtype":"m.text"},"ts":1402901708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool. Will review in detail tomorrow. Stupid I/O deadline today.","msgtype":"m.text"},"ts":1402902033000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: I'll mostly be working on SVG this week so that seems fine","msgtype":"m.text"},"ts":1402902096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: you already in SF?","msgtype":"m.text"},"ts":1402902108000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: nah, heading out on Friday","msgtype":"m.text"},"ts":1402902371000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"finds out jungkees has been busy","msgtype":"m.emote"},"ts":1402904036000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: you called it! (re: DnD/picture)","msgtype":"m.text"},"ts":1402905086000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: what do you mean?","msgtype":"m.text"},"ts":1402906214000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: https://github.com/slightlyoff/ServiceWorker/issues/235","msgtype":"m.text"},"ts":1402906451000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"annevk: with this particular thread, what should be fixed more?","msgtype":"m.text"},"ts":1402906500000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: looking at https://slightlyoff.github.io/ServiceWorker/spec/service_worker/#default-method","msgtype":"m.text"},"ts":1402906624000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: step 3.2 needs to be removed","msgtype":"m.text"},"ts":1402906634000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: if response is a network error you need to reject with a TypeError","msgtype":"m.text"},"ts":1402906692000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: and you need to explain how this relates to the overall lifecycle","msgtype":"m.text"},"ts":1402906711000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: alright","msgtype":"m.text"},"ts":1402907035000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: I think the spec still does not do a great job of explaining the overall model and how all the various pieces interact with it","msgtype":"m.text"},"ts":1402907486000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: e.g. what is .default() plugging into that makes \"handle a fetch\" return the correct thing?","msgtype":"m.text"},"ts":1402907520000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: will add them after sorting out the hooks to Fetch this week","msgtype":"m.text"},"ts":1402907575000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: ah yeah, Nikhil opened an issue for that","msgtype":"m.text"},"ts":1402907657000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'll add informal sections to explain the overall hook model and the use of fetch API in SW context xref to Fetch esp. Request/Response/Fetch part","msgtype":"m.text"},"ts":1402907866000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"jungkees: I'm not talking non-normative","msgtype":"m.text"},"ts":1402907887000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: my concern is with the normative model","msgtype":"m.text"},"ts":1402907903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jungkees: the current setup is not sufficient","msgtype":"m.text"},"ts":1402907925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: i assumed it would be simple & a no-brainer but you realized logic doesn’t necessarily apply in the world of Web Standards","msgtype":"m.text"},"ts":1402907930000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: as I'll remove the Request/Response interfaces from SW","msgtype":"m.text"},"ts":1402907937000,"senderName":"jungkees","senderId":"jungkees@irc"},
{"content":{"body":"mathiasbynens: ah. yeah","msgtype":"m.text"},"ts":1402907956000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"annevk: am back… back online","msgtype":"m.text"},"ts":1402910561000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"zcorpan: hi. I uploaded a couple of DOMRect,DOMPoint and DOMQuad tests. If you have time, please review them. https://github.com/w3c/csswg-test/pulls #551-#553","msgtype":"m.text"},"ts":1402910651000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: ok nice","msgtype":"m.text"},"ts":1402910679000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"krit: okay, how to best do this?","msgtype":"m.text"},"ts":1402910765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heycam: would you need some [\"foo\", \"bar\"] defaults values for the dictionary/eventinit ?","msgtype":"m.text"},"ts":1402910791000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"krit: it seems your best bet is assuming the model HTML has outlined","msgtype":"m.text"},"ts":1402910796000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we could switch to #svg on w3c irc server… it is recorded as well IIRC","msgtype":"m.text"},"ts":1402910799000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: we can discuss it here. Just not sure if we produce to much noise","msgtype":"m.text"},"ts":1402910825000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: here is fine, this channel is known to be noisy","msgtype":"m.text"},"ts":1402910845000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok","msgtype":"m.text"},"ts":1402910851000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: agree that we should start from the HTML model","msgtype":"m.text"},"ts":1402910879000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: For standalone SVG’s the model should be identical","msgtype":"m.text"},"ts":1402910898000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: not much different to inline SVG","msgtype":"m.text"},"ts":1402910908000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: given that, it's not clear why https://svgwg.org/specs/integration/ is needed, it seems the text should just be in https://svgwg.org/svg2-draft/","msgtype":"m.text"},"ts":1402910927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Problem comes with fetching further resources… more specifically, SVG as fetch resource","msgtype":"m.text"},"ts":1402910936000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I think the SVG WG wanted to produce an anchor for specs using SVG","msgtype":"m.text"},"ts":1402910976000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: something light weighted that provides all reference modes","msgtype":"m.text"},"ts":1402910993000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: also, it would apply to all SVG specs, regardless of the version W3C status as REC and so on","msgtype":"m.text"},"ts":1402911020000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I think that's the wrong way to think about SVG. The way I see it is that we have some new elements (elements in the SVG namespace) and a special processing mode for XML with an \"image/svg+xml\" MIME type loaded as image","msgtype":"m.text"},"ts":1402911054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think for the security model, the WG would be open to put it back to SVG2.","msgtype":"m.text"},"ts":1402911106000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: that doesn’t seem to be the biggest issue :)","msgtype":"m.text"},"ts":1402911119000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so you'd need to define the processing model for these new elements and you need to define a special algorithm for the \"image\" case that disables scripting and such","msgtype":"m.text"},"ts":1402911125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there might be more modes…. SVG OpenType fonts could have a different set","msgtype":"m.text"},"ts":1402911169000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: fair, that might be a third","msgtype":"m.text"},"ts":1402911187000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: although I think fonts and images have roughly similar security characteristics","msgtype":"m.text"},"ts":1402911205000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: At least for SVG images and SVG external resources (<pattern>, <filter>) we already agreed on the same policy","msgtype":"m.text"},"ts":1402911206000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: agree, just that SVG as font gets context information to color the font","msgtype":"m.text"},"ts":1402911234000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: but I am fine with keeping SVG as font as a special case that we handle later.","msgtype":"m.text"},"ts":1402911286000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so far there is just one implementer willing to implement SVG OpenType fonts","msgtype":"m.text"},"ts":1402911304000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: back to SVG as document and SVG as image/svg+xml","msgtype":"m.text"},"ts":1402911357000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: https://etherpad.mozilla.org/fixing-svg-processing","msgtype":"m.text"},"ts":1402911357000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: so <svg:image> is like <img> these days?","msgtype":"m.text"},"ts":1402911550000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it ought to be","msgtype":"m.text"},"ts":1402911563000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: if it loads SVG that SVG cannot execute script?","msgtype":"m.text"},"ts":1402911564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: sounds good","msgtype":"m.text"},"ts":1402911569000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: still need to add cross origin attribute","msgtype":"m.text"},"ts":1402911575000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: yes, same model as <img>","msgtype":"m.text"},"ts":1402911587000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: that's fine, as long as the security model is equivalent","msgtype":"m.text"},"ts":1402911599000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: do you know why CSS was seen as a risk? is it the fetching?","msgtype":"m.text"},"ts":1402911654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the WebAppsSec WG wanted to disable styling in general… they feared that some data could be used to trick the user","msgtype":"m.text"},"ts":1402911692000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: example is coloring the image dependent on viewport size","msgtype":"m.text"},"ts":1402911705000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: by using media queries and selectors","msgtype":"m.text"},"ts":1402911735000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: ah okay, so the attack vector would be anything that can read from the environment","msgtype":"m.text"},"ts":1402911740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that was the strongest argument, yes","msgtype":"m.text"},"ts":1402911759000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: while “read” does not mean that the attacker can read","msgtype":"m.text"},"ts":1402911785000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hmm yeah, need better word","msgtype":"m.text"},"ts":1402911802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just a different display behavior dependent on context","msgtype":"m.text"},"ts":1402911803000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so https://svgwg.org/svg2-draft/linking.html#processingIRI has a long list of things that can fetch","msgtype":"m.text"},"ts":1402911871000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: let me check if it is accurate","msgtype":"m.text"},"ts":1402911905000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: for each of those we need to figure out what happens with the resources retrieved","msgtype":"m.text"},"ts":1402911913000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: a view elements can’t anymore: mask, filter.. otherwise correct","msgtype":"m.text"},"ts":1402911950000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"few?","msgtype":"m.text"},"ts":1402911963000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes :)","msgtype":"m.text"},"ts":1402911972000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I think with the exception of script, a, (cursor?) the policy can be the same for all elements","msgtype":"m.text"},"ts":1402912024000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: can they all reference externally too?","msgtype":"m.text"},"ts":1402912028000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402912033000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: but they're a bit different from the SVG as image case right?","msgtype":"m.text"},"ts":1402912052000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don’t think so...","msgtype":"m.text"},"ts":1402912072000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: actually they can'y","msgtype":"m.text"},"ts":1402912078000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"t","msgtype":"m.text"},"ts":1402912079000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: you basically extract some elements to act as a paint server or some such?","msgtype":"m.text"},"ts":1402912084000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: they must be treated the same","msgtype":"m.text"},"ts":1402912085000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: <use>, <text> and a couple of other elements reference elements for drawing, other elements are pain sources…. to differ here is not necessary","msgtype":"m.text"},"ts":1402912134000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/pain/paint/","msgtype":"m.text"},"ts":1402912148000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"well it seems good to make a difference since you'd invoke different algorithms","msgtype":"m.text"},"ts":1402912179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in this case there are 4:","msgtype":"m.text"},"ts":1402912197000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"one is draw an image given a response object and some height/width criterea","msgtype":"m.text"},"ts":1402912200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the others would be not that :)","msgtype":"m.text"},"ts":1402912211000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: image, as paint source(gradients patterns), as operator (mask, clipPath, filter)","msgtype":"m.text"},"ts":1402912223000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and referenced (external) elements that are drawn in the context of the current document","msgtype":"m.text"},"ts":1402912258000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: example for the last: <use xlink:href=“other.svg#path/>","msgtype":"m.text"},"ts":1402912283000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: A <path> element is “copied” from the document other.svg and added in the place of <use>","msgtype":"m.text"},"ts":1402912308000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: but you don't actually change the DOM, correct?","msgtype":"m.text"},"ts":1402912324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: this is some kind of shadow DOM thingy?","msgtype":"m.text"},"ts":1402912336000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no, it is implemented with shadow DOM","msgtype":"m.text"},"ts":1402912343000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1402912349000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"same-origin restriction?","msgtype":"m.text"},"ts":1402912366000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: none defined yet","msgtype":"m.text"},"ts":1402912373000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: part of the new security model :)","msgtype":"m.text"},"ts":1402912388000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"do scripts execute?","msgtype":"m.text"},"ts":1402912389000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1402912391000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"please start calling it processing model ;)","msgtype":"m.text"},"ts":1402912408000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"security is just one aspect of the many things that are not defined here :)","msgtype":"m.text"},"ts":1402912422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that was brought up recently : <use xlink:href=“other.svg#g”/> that references <g><script></script></g>","msgtype":"m.text"},"ts":1402912426000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and it is not executed","msgtype":"m.text"},"ts":1402912435000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"okay, so potentially less volatile than HTML imports","msgtype":"m.text"},"ts":1402912462000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if implemented correctly :)","msgtype":"m.text"},"ts":1402912479000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: does <use> have an object model?","msgtype":"m.text"},"ts":1402912566000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it was removed","msgtype":"m.text"},"ts":1402912583000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what about hit testing on <use> does that return the <use> element?","msgtype":"m.text"},"ts":1402912610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so hit testing applies in general to <use>… do you mean event handlers?","msgtype":"m.text"},"ts":1402912645000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what would elementFromPoint() return?","msgtype":"m.text"},"ts":1402912671000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: something like onmouseover may apply… need to check","msgtype":"m.text"},"ts":1402912678000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: but yes, event handlers, :hover, etc.","msgtype":"m.text"},"ts":1402912679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: note that hit testing can return different things depending on who is asking","msgtype":"m.text"},"ts":1402912698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: elementFromPoint would not go into the <use> tree","msgtype":"m.text"},"ts":1402912700000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: hit testing not being defined is of course problematic for that...","msgtype":"m.text"},"ts":1402912714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there are no restrictions to hit testing for <use>… think that is defined","msgtype":"m.text"},"ts":1402912742000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: “The event handling for the non-exposed tree works as if the referenced element had been textually included as a deeply cloned child of the ‘use’ element, and events are dispatched according to the shadow tree event dispatching algorithm [SHADOWDOM].\"","msgtype":"m.text"},"ts":1402912832000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so basically this is defined in terms of shadow DOM, except shadow DOM does not actually provide encapsulation at the moment","msgtype":"m.text"},"ts":1402912915000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: only Chrome has such a thing","msgtype":"m.text"},"ts":1402912927000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402912940000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"mkay, I guess you guys can clean that up at some point, hit testing should prolly follow from that","msgtype":"m.text"},"ts":1402913001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: is there an example in HTML?","msgtype":"m.text"},"ts":1402913019000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: how HTML defines hit testing?","msgtype":"m.text"},"ts":1402913027000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: nobody defines hit testing","msgtype":"m.text"},"ts":1402913033000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: it's a big problem","msgtype":"m.text"},"ts":1402913044000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that sounds like a meme","msgtype":"m.text"},"ts":1402913046000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"might be something about anne and being a broken record on hit testing","msgtype":"m.text"},"ts":1402913067000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: so is <use> non-isolated or isolated?","msgtype":"m.text"},"ts":1402913324000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not isolated for styling, isolated for DOM","msgtype":"m.text"},"ts":1402913347000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1402913358000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hooking up <use> on shadow DOM is new… there might potentially be changes","msgtype":"m.text"},"ts":1402913395000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so <use> fetches a resources, parses it as XML, then locates node by ID and deepclones it into the shadow tree?","msgtype":"m.text"},"ts":1402913440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: and when it parsers it does so with scripting disabled","msgtype":"m.text"},"ts":1402913457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so, what happens in implementations is that we fetch the document and run it though the parser… then we look for the id and deep clone it (some implementations just create the render tree)","msgtype":"m.text"},"ts":1402913519000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"if you just create the render tree, you exclude Scripting already","msgtype":"m.text"},"ts":1402913542000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"well the render tree is created from the shadow tree","msgtype":"m.text"},"ts":1402913574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and the parser is what executes script","msgtype":"m.text"},"ts":1402913591000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: animations can not be disables=d by author ATM. This is one problem with Canvas’s drawImage() “first frame” doesn’t really apply for SVG… in this case the UA indeed disables the animation","msgtype":"m.text"},"ts":1402913756000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"okay","msgtype":"m.text"},"ts":1402913837000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: \"(result of rendering to a bitmap or something else?)\" is about how we'd define it; how it's implemented is immaterial","msgtype":"m.text"},"ts":1402913916000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, defining it by bitmap is the easiest","msgtype":"m.text"},"ts":1402913937000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: (resolution depends on the device of course)","msgtype":"m.text"},"ts":1402913980000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: xref == xlink:href ?","msgtype":"m.text"},"ts":1402914198000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: cross-reference","msgtype":"m.text"},"ts":1402914210000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: makes sense :P","msgtype":"m.text"},"ts":1402914221000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: beside elementFromPoint() we have CSSOM calls like getClientsRect() and so on… which of course don’t look into the shadow tree","msgtype":"m.text"},"ts":1402914312000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: not sure if there is a common expression for these kind of interfaces","msgtype":"m.text"},"ts":1402914336000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: layout APIs?","msgtype":"m.text"},"ts":1402914354000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: maybe","msgtype":"m.text"},"ts":1402914368000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: render tree APIs I suppose, as they operate on that","msgtype":"m.text"},"ts":1402914371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: basically all APIs in http://dev.w3.org/csswg/cssom-view/ :P","msgtype":"m.text"},"ts":1402914407000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: CSS WG refuses to deifne render tree. so layout actually sounds good","msgtype":"m.text"},"ts":1402914523000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: is there anything in particular with getClientsRect()?","msgtype":"m.text"},"ts":1402914534000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: it seems if you use it on <use> it would reveal the render size of the shadow tree?","msgtype":"m.text"},"ts":1402914557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: <use> it would","msgtype":"m.text"},"ts":1402914651000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: *it would","msgtype":"m.text"},"ts":1402914661000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: seems like <use> should be same-origin / CORS","msgtype":"m.text"},"ts":1402914675000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes… it is in Firefox","msgtype":"m.text"},"ts":1402914703000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: In FF the same for paint sources and operators","msgtype":"m.text"},"ts":1402914755000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: And it shouldn’t be a problem to add this requirement in the spec. External references are just implemented in Firefox so far.","msgtype":"m.text"},"ts":1402914791000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and Opera <= 12","msgtype":"m.text"},"ts":1402914805000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I remember there was a problem with CSS and SVG together?","msgtype":"m.text"},"ts":1402914825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: where for CSS we did not want to have that restriction and so we ended up making the distinction through fragment identifiers?","msgtype":"m.text"},"ts":1402914853000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you probably mean the mask-image: url() problem, where url() can reference an image or an SVG resource?","msgtype":"m.text"},"ts":1402914860000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: well, we went away from present fragment switching and required the same policies for both","msgtype":"m.text"},"ts":1402914895000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: this indeed seems critical with same origin requirement for SVG resources :/","msgtype":"m.text"},"ts":1402914915000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, so if that's always same-origin that's great","msgtype":"m.text"},"ts":1402914960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hm… need to think about it","msgtype":"m.text"},"ts":1402914961000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: well, for use definitely","msgtype":"m.text"},"ts":1402914975000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: for paint sources/operators maybe not so much because if the url() CSS function issue","msgtype":"m.text"},"ts":1402914992000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/if/of/","msgtype":"m.text"},"ts":1402915006000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I think I remember what I proposed to roc","msgtype":"m.text"},"ts":1402915023000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Ah! FF added the restriction because the resource was allowed to fetch more data","msgtype":"m.text"},"ts":1402915050000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: IIRC","msgtype":"m.text"},"ts":1402915053000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and with the new model, operators and paint sources are not allowed to fetch anything no matter what","msgtype":"m.text"},"ts":1402915100000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"That we would make the cross-origin fetch, but if the resulting document was SVG, we would treat it as an error","msgtype":"m.text"},"ts":1402915102000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: I thought you could still do some amount of discovery based on what gets masked on the page","msgtype":"m.text"},"ts":1402915136000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for clipPath yes, it affects hit testing","msgtype":"m.text"},"ts":1402915157000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: that wasn’t seen as issue by the CSS WG when I brought it up","msgtype":"m.text"},"ts":1402915182000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: yeah, so I'm thinking that blocking tainted SVG is probably the way to go (while allowing tainted images)","msgtype":"m.text"},"ts":1402915190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'm not sure the CSS WG is the best place for security issues","msgtype":"m.text"},"ts":1402915217000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's not like CSS' processing model is very clear","msgtype":"m.text"},"ts":1402915229000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, atm implementations fetch resources with certain policies… there is no checking for further policies after fetching","msgtype":"m.text"},"ts":1402915257000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"I'm not sure what that means","msgtype":"m.text"},"ts":1402915271000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you fetch a resource with same origin requirement, or you fetch it without any requirements… (to make it simple just the two cases)","msgtype":"m.text"},"ts":1402915311000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1402915328000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: once the implementation has the resource, it is assumed that everything is ok IIRC","msgtype":"m.text"},"ts":1402915329000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but you can make a check once you get something back to see whether you want it","msgtype":"m.text"},"ts":1402915337000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"similarly to doing a content-type check as we sometimes do","msgtype":"m.text"},"ts":1402915347000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: so if we fetch SVG without policies… then we do not check it a second time","msgtype":"m.text"},"ts":1402915350000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yes, but we could, to make this work","msgtype":"m.text"},"ts":1402915361000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: but do we do that today?","msgtype":"m.text"},"ts":1402915364000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"without the ridiculous check the url's fragment nonsense","msgtype":"m.text"},"ts":1402915378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I mean somewhere?","msgtype":"m.text"},"ts":1402915380000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"well, SVG introduced this image or SVG problem","msgtype":"m.text"},"ts":1402915410000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: true","msgtype":"m.text"},"ts":1402915424000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"and the way it was initially solved was by trying to distinguish them upfront by checking if the url had a fragment","msgtype":"m.text"},"ts":1402915450000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"which is broken","msgtype":"m.text"},"ts":1402915452000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402915464000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"so either we create separate properties for the two cases or we distinguish after the fetch","msgtype":"m.text"},"ts":1402915471000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and if you distinguish after the fetch between image and SVG, you can still discard one or the other if there's a problem","msgtype":"m.text"},"ts":1402915495000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"such as the response being tainted and being SVG","msgtype":"m.text"},"ts":1402915509000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to step back… masking does affect the visual output but does not contribute to hit testing","msgtype":"m.text"},"ts":1402915520000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it is just clip-path which does it","msgtype":"m.text"},"ts":1402915527000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so maybe we can limit it to clip-path only?","msgtype":"m.text"},"ts":1402915538000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: clip-path property does not fetch images","msgtype":"m.text"},"ts":1402915550000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"my memory of the public-fx thread was that this was bigger","msgtype":"m.text"},"ts":1402915568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: bigger?","msgtype":"m.text"},"ts":1402915586000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: http://lists.w3.org/Archives/Public/public-fx/2013AprJun/0046.html","msgtype":"m.text"},"ts":1402915686000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there is just one thing that could be exposed: rendering time… it take more time to render a mask than no mask","msgtype":"m.text"},"ts":1402915687000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so it could have affect on rAF","msgtype":"m.text"},"ts":1402915696000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"was about mask","msgtype":"m.text"},"ts":1402915700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-fx/2013AprJun/0021.html","msgtype":"m.text"},"ts":1402915760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the first link still assumes that the document with the <mask> element can reference images from the same origin… which we don’t allow anymroe","msgtype":"m.text"},"ts":1402915852000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: it must be in the document itself… no fetching","msgtype":"m.text"},"ts":1402915864000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so if you put a data URL there it'll always fail?","msgtype":"m.text"},"ts":1402915946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dataURLs do not fetch by default, do they? they could have elements within that would try to fetch… which always fails.","msgtype":"m.text"},"ts":1402915995000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, I guess I see what you meant with respect to <mask>, you guys changed the model to be as \"SVG as image\" since that email exchange and now you think you can allow tainted responses","msgtype":"m.text"},"ts":1402916101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: does Firefox no longer do special casing for fragments then?","msgtype":"m.text"},"ts":1402916125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hehe, right","msgtype":"m.text"},"ts":1402916130000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I don’t think it ever did?","msgtype":"m.text"},"ts":1402916141000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: mask still just allows SVG resource in Gecko","msgtype":"m.text"},"ts":1402916154000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"okay, so it might be same-origin restricted at the moment?","msgtype":"m.text"},"ts":1402916182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think it is ATM","msgtype":"m.text"},"ts":1402916203000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, I want to take a break for a bit; I guess when we come back we should enumerate all the places that fetch","msgtype":"m.text"},"ts":1402916321000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, will be here","msgtype":"m.text"},"ts":1402916335000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: prolly hour and a bit","msgtype":"m.text"},"ts":1402916385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, thanks for looking into this!","msgtype":"m.text"},"ts":1402916406000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: https://svgwg.org/ Streaming Draft link is broken","msgtype":"m.text"},"ts":1402921518000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: doesn’t work for me too","msgtype":"m.text"},"ts":1402921601000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: very strange, it is in the repository","msgtype":"m.text"},"ts":1402921683000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: reported it to heycam, all I can do at the moment","msgtype":"m.text"},"ts":1402921816000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: k","msgtype":"m.text"},"ts":1402921835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: https://etherpad.mozilla.org/fixing-svg-processing","msgtype":"m.text"},"ts":1402921838000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: trying to complete the list of elements that fetch","msgtype":"m.text"},"ts":1402921846000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: then I guess we can collect them into buckets somehow","msgtype":"m.text"},"ts":1402921861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: <style> does external references right?","msgtype":"m.text"},"ts":1402922416000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402922434000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1402922461000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"mistaken","msgtype":"m.text"},"ts":1402922464000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so can <cursor> be defined in terms of 'cursor'?","msgtype":"m.text"},"ts":1402922480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: as in, it might be good to remove the elements that can be described in terms of CSS","msgtype":"m.text"},"ts":1402922503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: old content might use it, but let me bring it up to SVG WG conf","msgtype":"m.text"},"ts":1402922554000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I mean spec-wise","msgtype":"m.text"},"ts":1402922564000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: e.g. HTML defines <font> in terms of CSS","msgtype":"m.text"},"ts":1402922574000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: needed to check, but yes","msgtype":"m.text"},"ts":1402922622000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: cursor property might even be more powerful","msgtype":"m.text"},"ts":1402922635000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: is the same true for other elements?","msgtype":"m.text"},"ts":1402922713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looks like SVG has <cursor> to get the cursor position","msgtype":"m.text"},"ts":1402922714000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1402922723000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: we have <font> in SVG which is the treated the same as in HTML","msgtype":"m.text"},"ts":1402922736000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: <cursor> does not seem to be about getting the cursor position","msgtype":"m.text"},"ts":1402922764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the x and y attributes are described about that + cursor image of course","msgtype":"m.text"},"ts":1402922787000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402922795000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://www.w3.org/TR/SVG/interact.html#CursorElement","msgtype":"m.text"},"ts":1402922798000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"no, x and y are about where the image is to be placed relative to the mouse pointer","msgtype":"m.text"},"ts":1402922820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: see http://dev.w3.org/csswg/css-ui/#cursor","msgtype":"m.text"},"ts":1402922844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for the property yes, but the SVG text implies otherwise","msgtype":"m.text"},"ts":1402922945000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: that seems like one of the SVG's many bugs","msgtype":"m.text"},"ts":1402922980000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: moving the keysystem attribute from EME to the HTML spec is a whole can of worms politically","msgtype":"m.text"},"ts":1402923036000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"because it doesn't actually make sense","msgtype":"m.text"},"ts":1402923041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: not even sure if we implement it in WebKit/Blink","msgtype":"m.text"},"ts":1402923061000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"MikeSmith: I'd rather have it better defined in EME itself as a first step","msgtype":"m.text"},"ts":1402923083000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"krit: can <feImage> be expressed in CSS?","msgtype":"m.text"},"ts":1402923112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it does the same as <image> with the exception that it can reference an element","msgtype":"m.text"},"ts":1402923230000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: which is than drawn in an offscreen buffer","msgtype":"m.text"},"ts":1402923240000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: (maybe <image> can do the same? unsure)","msgtype":"m.text"},"ts":1402923262000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"is that observable somehow?","msgtype":"m.text"},"ts":1402923280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: observable how?","msgtype":"m.text"},"ts":1402923348000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I mean what do you want to observe?","msgtype":"m.text"},"ts":1402923370000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"nm","msgtype":"m.text"},"ts":1402923464000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: do you know for all of these what the default fetching mode is?","msgtype":"m.text"},"ts":1402923512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: e.g. which are no CORS, which are CORS, and which are same-origin?","msgtype":"m.text"},"ts":1402923527000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: again, definition is as <image> in general… added the cross origin attribute even http://dev.w3.org/fxtf/filters/#element-attrdef-crossorigin","msgtype":"m.text"},"ts":1402923608000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so it is no CORS by default, but can CORS can be set","msgtype":"m.text"},"ts":1402923631000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"what's the benefit of CORS in that case?","msgtype":"m.text"},"ts":1402923652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://dev.w3.org/fxtf/filters/#security","msgtype":"m.text"},"ts":1402923728000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1402923776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hehe, I guess I will never see a smile :)","msgtype":"m.text"},"ts":1402923806000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1402923824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Okay, so feImage is tainted if the response's type is opaque","msgtype":"m.text"},"ts":1402923861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: I guess what I'm really interested in is whether the elements and properties we listed are same-origin or no-CORS by default","msgtype":"m.text"},"ts":1402923940000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen: ok I guess I'll do as annevk suggested and raise a bug against the EME spec","msgtype":"m.text"},"ts":1402923942000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: please copy Chris Pearce and maybe me","msgtype":"m.text"},"ts":1402923962000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402923982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: all no-CORS since CORS didn’t existed when SVG 1.1 was speced","msgtype":"m.text"},"ts":1402924001000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: (specification wise of course)","msgtype":"m.text"},"ts":1402924024000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: nothing was same-origin restricted?","msgtype":"m.text"},"ts":1402924054000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: and CSS doesn’t handle CORS yet either","msgtype":"m.text"},"ts":1402924055000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: no","msgtype":"m.text"},"ts":1402924060000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: nothing","msgtype":"m.text"},"ts":1402924065000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"can we talk implementation-wise now?","msgtype":"m.text"},"ts":1402924075000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: CSS is still no-CORS","msgtype":"m.text"},"ts":1402924093000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: same as in HTML","msgtype":"m.text"},"ts":1402924099000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"even clip-path?","msgtype":"m.text"},"ts":1402924100000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: clip-path, mask, fill, stroke are same origin in Firefox","msgtype":"m.text"},"ts":1402924126000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: they don’t fetch in WebKit and Blink yet","msgtype":"m.text"},"ts":1402924141000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"mask is mask-image?","msgtype":"m.text"},"ts":1402924155000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: with the exception of -webkit-mask and -webkit-filter and -webkit-clip-path","msgtype":"m.text"},"ts":1402924161000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402924171000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"ah, and -webkit- properties load images, not SVG, and do so no-CORS?","msgtype":"m.text"},"ts":1402924184000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: remove -webkit-mask from the list","msgtype":"m.text"},"ts":1402924186000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: -webkit-filter and -webkit-clip-path do load external resources as well. IIRC no self origin at the moment","msgtype":"m.text"},"ts":1402924220000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: talking for general documents of course… not for SVG images","msgtype":"m.text"},"ts":1402924263000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402924279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the SVG elements do not fetch in Blink at all","msgtype":"m.text"},"ts":1402924319000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no SVG element?","msgtype":"m.text"},"ts":1402924335000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: in WebKit we have the <use> element that did fetch. Think it is broken again","msgtype":"m.text"},"ts":1402924338000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: In Firefox elements fetch same origin","msgtype":"m.text"},"ts":1402924357000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: as in <svg><image xlink:href=...></svg> is broken?","msgtype":"m.text"},"ts":1402924362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Opera <=12 fetches for CSS and elements without any restrictions","msgtype":"m.text"},"ts":1402924377000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I am unspecific","msgtype":"m.text"},"ts":1402924390000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: operators and paint source elements don’t fetch","msgtype":"m.text"},"ts":1402924404000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"in Blink and WebKit","msgtype":"m.text"},"ts":1402924411000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"in no context?","msgtype":"m.text"},"ts":1402924422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1402924428000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but they support inline references?","msgtype":"m.text"},"ts":1402924435000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402924441000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"okay, so lets figure out the algorithm to get to an SVG element","msgtype":"m.text"},"ts":1402924472000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how is it established that you have an inline reference?","msgtype":"m.text"},"ts":1402924483000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I am not aware of restrictions for <script>, <?…stylesheet…?>, <image>, <feImage> specification wise","msgtype":"m.text"},"ts":1402924493000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: we parse URL but just use the fragment identifier and search in the same document","msgtype":"m.text"},"ts":1402924524000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: This caused a bug where the URL is a different document but we still search for the fragment ID in the same document","msgtype":"m.text"},"ts":1402924570000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: might still be broken","msgtype":"m.text"},"ts":1402924593000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"given a document /doc and a base URL /a/ and a fragment in /doc that reads #text where should we look?","msgtype":"m.text"},"ts":1402924630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what if the fragment/reference reads /a/#text","msgtype":"m.text"},"ts":1402924652000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exclusively speaking for WebKit/Blink: we do not resolve the URL… we just take the string specified by the user and use the fragment identifier of it…. no resolving of URL yet","msgtype":"m.text"},"ts":1402924712000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what if the string does not start with a #?","msgtype":"m.text"},"ts":1402924730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, the parsing process looks for the fragment identifier exclusively… example: “other.svg#test”… we do not resolve the base address of other.svg","msgtype":"m.text"},"ts":1402924787000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what is this \"parsing process\"?","msgtype":"m.text"},"ts":1402924802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: you just try to find a #?","msgtype":"m.text"},"ts":1402924808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: let me check, but that is what I remember","msgtype":"m.text"},"ts":1402924821000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: the parsing algorithm is 350 loc","msgtype":"m.text"},"ts":1402924945000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I can say that we do not “simply” search for #… the algorithm does a lot more… just say we extract the fragment identifier from the string","msgtype":"m.text"},"ts":1402925010000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"let me find the link","msgtype":"m.text"},"ts":1402925032000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: http://trac.webkit.org/browser/trunk/Source/WebCore/platform/URL.cpp#L1088","msgtype":"m.text"},"ts":1402925081000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: oh okay, so it seems to properly parse a URL, but then ignore all the good bits","msgtype":"m.text"},"ts":1402925279000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems to warrant a :(","msgtype":"m.text"},"ts":1402925289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: actually, it was a security pro caution and is limited to SVG","msgtype":"m.text"},"ts":1402925389000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"if you ignore the path and such that's not a security procaution, that's a bug","msgtype":"m.text"},"ts":1402925443000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: this way we didn’t need to look into when we allow external resources. In the first days of SVG integration in WebKit this seemed wise. And then we never actually came to implement it correctly and there wasn’t a huge demand either","msgtype":"m.text"},"ts":1402925461000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"sure, I'm not advocating that we support Fetch","msgtype":"m.text"},"ts":1402925479000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is a bug, true","msgtype":"m.text"},"ts":1402925482000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"but not properly parsing the URL and making sure it actually is relative to the document before proceeding is a huge forward compat issue","msgtype":"m.text"},"ts":1402925508000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I know, but implementations are ramping up and now it gets important","msgtype":"m.text"},"ts":1402925515000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: agree, that was a bug we didn’t thought about at the time","msgtype":"m.text"},"ts":1402925531000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"o_O","msgtype":"m.text"},"ts":1402925540000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"okay, lets move on, I started drafting an algorithm","msgtype":"m.text"},"ts":1402925552000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: ping; can you give me both your code, how to build it, and how to run it, then I'll try?","msgtype":"m.text"},"ts":1402925879000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"krit: data URLs and blob URLs will work due to the fetching algorithm","msgtype":"m.text"},"ts":1402925950000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: though for data URLs we'd need explicit opt in","msgtype":"m.text"},"ts":1402925959000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: which section is that in URL spec?","msgtype":"m.text"},"ts":1402925978000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: it's in the fetch spec","msgtype":"m.text"},"ts":1402925991000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: looking","msgtype":"m.text"},"ts":1402926043000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: still, your algorithm compares document URL with parsed URL… if they are equal and the URL has a frag id, then we search for an element in the same document OTHERWISE: 1)return network error if fetch is disabled…","msgtype":"m.text"},"ts":1402926217000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: or do we not quit at 1)?","msgtype":"m.text"},"ts":1402926226000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: ah","msgtype":"m.text"},"ts":1402926252000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: no, blob and data URLs would just proceed to step 3","msgtype":"m.text"},"ts":1402926316000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right. Just mean that 3.1) says return on fetching disabled","msgtype":"m.text"},"ts":1402926351000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: so dataURL and blob would return with negative result at 3.1","msgtype":"m.text"},"ts":1402926370000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402926371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if fetching is disabled","msgtype":"m.text"},"ts":1402926380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: for SVG image it is… and we should still allow blob and dataURL","msgtype":"m.text"},"ts":1402926403000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"how can an \"SVG image\" contain a blob URL?","msgtype":"m.text"},"ts":1402926418000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: dholbert had a weird example","msgtype":"m.text"},"ts":1402926434000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I’ll ask him about the example again","msgtype":"m.text"},"ts":1402926457000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: Asked him. He is in PSD timezone and should be awake in a couple of hours","msgtype":"m.text"},"ts":1402926533000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"s/awake/online/","msgtype":"m.text"},"ts":1402926550000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: okay, we could maybe make it a flag on Fetch","msgtype":"m.text"},"ts":1402926572000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: \"no networking flag\" or some such","msgtype":"m.text"},"ts":1402926595000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, what about dataURLs and base64?","msgtype":"m.text"},"ts":1402926607000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: I guess it might be okay to allow those yes","msgtype":"m.text"},"ts":1402926629000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it is important! :) People embed there PNGs in SVG files today","msgtype":"m.text"},"ts":1402926655000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: External fonts seems to be the biggest problem for SVG Images… not sure how Firefox handles that today… not even sure how webkit does","msgtype":"m.text"},"ts":1402926691000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: think WebKit doesn’t fetch web fonts today","msgtype":"m.text"},"ts":1402926733000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: for SVG images","msgtype":"m.text"},"ts":1402926740000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: \"SVG images\" is ambiguous","msgtype":"m.text"},"ts":1402926754000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: indeed. In SVG WG we refer to image/svg+xml usually","msgtype":"m.text"},"ts":1402926795000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: what is important for now is to define a model that's somewhat realistic, once we have that we can address various features","msgtype":"m.text"},"ts":1402926823000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes","msgtype":"m.text"},"ts":1402926953000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: so no scripting seems reasonably solid","msgtype":"m.text"},"ts":1402926968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you refer to blobs?","msgtype":"m.text"},"ts":1402926992000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"krit: no, lets leave blob/data URLs alone for now, not important","msgtype":"m.text"},"ts":1402927008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: not doing scripting for an external resource is straightforward","msgtype":"m.text"},"ts":1402927032000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: you simply don't invoke the parser with scripting enabled","msgtype":"m.text"},"ts":1402927045000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: not doing fetching however, is processing layer","msgtype":"m.text"},"ts":1402927060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: so somewhere there's an algorithm that takes an SVG element and does something with it; use it as a mask/image/paint server/clip","msgtype":"m.text"},"ts":1402927090000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: might be various such algorithms","msgtype":"m.text"},"ts":1402927112000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: those need to be allowed to process elements, but also need to ensure no fetching is done","msgtype":"m.text"},"ts":1402927135000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: for the CSS part of that CSS will need to gain a flag of \"no fetching\"","msgtype":"m.text"},"ts":1402927147000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: which suggests maybe that flag should be passed all the way down to the fetching layer","msgtype":"m.text"},"ts":1402927168000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"krit: which then can decide whether to allow certain URLs, such as data URLs","msgtype":"m.text"},"ts":1402927179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in that mode","msgtype":"m.text"},"ts":1402927183000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: another idea was to flag document","msgtype":"m.text"},"ts":1402927218000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: and look at the status of document. So in general yes, fetching must pass the mode","msgtype":"m.text"},"ts":1402927241000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah that seems equivalent","msgtype":"m.text"},"ts":1402927246000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: fetchingEnables","msgtype":"m.text"},"ts":1402927248000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"d","msgtype":"m.text"},"ts":1402927258000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"so for HTML most fetching is disabled if there's no browsing context","msgtype":"m.text"},"ts":1402927334000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it seems that wouldn't work here","msgtype":"m.text"},"ts":1402927338000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: right","msgtype":"m.text"},"ts":1402927508000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: sorry, need to take care of kids… slow in responce","msgtype":"m.text"},"ts":1402927532000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"se","msgtype":"m.text"},"ts":1402927533000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: could we continue tomorrow morning?","msgtype":"m.text"},"ts":1402927740000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"yeah sure, thanks for the help","msgtype":"m.text"},"ts":1402927766000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: wrong way around ;)","msgtype":"m.text"},"ts":1402927777000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"need to think a bit how to proceed here","msgtype":"m.text"},"ts":1402927791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll let some Gecko people know we're trying to lock these things down","msgtype":"m.text"},"ts":1402927804000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool! roc , bz and dholbert might be the right ppl to talk too","msgtype":"m.text"},"ts":1402928048000,"senderName":"krit","senderId":"krit@irc"},
{"content":{"body":"annevk: I might just be very stupid, but your response about why .to() is preferred over .toX() didn't make any sense to me","msgtype":"m.text"},"ts":1402930313000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*waves magic wand to make jgraham understand unstated things*","msgtype":"m.text"},"ts":1402930491000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The \"state them\" wand?","msgtype":"m.text"},"ts":1402930592000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: unclear","msgtype":"m.text"},"ts":1402930625000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Erm. You posted the mail, I kind of assumed you already knew what you had stated","msgtype":"m.text"},"ts":1402930626000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: you assumed I would understand what part didn't make sense to you?","msgtype":"m.text"},"ts":1402930647000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1402930655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"All of it didn't","msgtype":"m.text"},"ts":1402930664000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hence \"any sense\"","msgtype":"m.text"},"ts":1402930669000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1402930671000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"seems pretty clear to me","msgtype":"m.text"},"ts":1402930702000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyway, I have to do something else","msgtype":"m.text"},"ts":1402930718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't think it's at all clear conceptually (wihout reading the spec) why you can only call to() once, or why it would be worse with toX()","msgtype":"m.text"},"ts":1402930732000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Neither seems more complicated than the other to implement, really","msgtype":"m.text"},"ts":1402930790000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But the concerns about feature detection seem legitimate","msgtype":"m.text"},"ts":1402930802000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Does anyone know if Google use Dart for anything significant?","msgtype":"m.text"},"ts":1402931071000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(presumably in dart2js form)","msgtype":"m.text"},"ts":1402931076000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"the greentea stuff, at least","msgtype":"m.text"},"ts":1402931266000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i guess it depends how you define \"significant\", though","msgtype":"m.text"},"ts":1402931407000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: yeah, I guess we can look into it again","msgtype":"m.text"},"ts":1402933719000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is anyone trying this? https://loop.services.mozilla.com/calls/kfsTnuhULV9QzkcMbR4Xu1vJVV2hi-lQ4blJD1JVxcVlQ5lmH6isvyOI9iroY09PmTtX8hxuXCdeT-D4dXMwswZRId7DvBBEF728FxUOa0uS80v_TAt-pyak6A_Kubg0HU9qpbeQawu8KlEGuxcXYB9cpUPfAtoTWC6OJTMbx4YzxMnSnR0WfJwGJo41VsAVH_gC5W3lSIxArBE9V2-WG-CJ9fA","msgtype":"m.text"},"ts":1402936622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The <output>, even those with a name, never have their value sumbitted along with the associated form, right?","msgtype":"m.text"},"ts":1402944126000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"estellevw: right","msgtype":"m.text"},"ts":1402944561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1402944583000,"senderName":"estellevw","senderId":"estellevw@irc"},
{"content":{"body":"annevk: do you have that list of stream concepts that would be nice to define?","msgtype":"m.text"},"ts":1402944737000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"gsnedders: ok here now","msgtype":"m.text"},"ts":1402945063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you could just email me ;P","msgtype":"m.text"},"ts":1402945094000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"that sounds like crazy talk","msgtype":"m.text"},"ts":1402945136000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402945138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so","msgtype":"m.text"},"ts":1402945138000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tests","msgtype":"m.text"},"ts":1402945139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's see","msgtype":"m.text"},"ts":1402945144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git diff gives me a 1653 line diff","msgtype":"m.text"},"ts":1402945159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how do you want them, one file at a time?","msgtype":"m.text"},"ts":1402945207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: related changes together","msgtype":"m.text"},"ts":1402945271000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"how do i do that?","msgtype":"m.text"},"ts":1402945281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: you can use git add -p to select what to commit at each time","msgtype":"m.text"},"ts":1402945283000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Google or prod someone else as to how, I need to phone my sister before I go out ;P","msgtype":"m.text"},"ts":1402945302000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402945306000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man git makes no sense to me at all","msgtype":"m.text"},"ts":1402945494000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the equivalent of \"svn commit\", meaning, the thing that sends my change upstream?","msgtype":"m.text"},"ts":1402945508000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"everyone on the web is talking about multi-step processes involving web pages","msgtype":"m.text"},"ts":1402945557000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"`git push`?","msgtype":"m.text"},"ts":1402945611000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and waht does that push? all my commits?","msgtype":"m.text"},"ts":1402945634000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm, anyone know a reference for the term \"tofu\"?","msgtype":"m.text"},"ts":1402945665000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: context?","msgtype":"m.text"},"ts":1402945724000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that stuff you see when you don't have the right font","msgtype":"m.text"},"ts":1402945741000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"usually little boxes, sometimes with hex codes in them","msgtype":"m.text"},"ts":1402945789000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"oh the little squares?","msgtype":"m.text"},"ts":1402945790000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it will push the objects needed for the local refs to make sense remotely","msgtype":"m.text"},"ts":1402945795000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i've no idea what that means","msgtype":"m.text"},"ts":1402945808000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: do i run git add, then git push? or git add, then git commit, then git push?","msgtype":"m.text"},"ts":1402945828000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you have to commit before you can push changes","msgtype":"m.text"},"ts":1402945839000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"how do i get several patches up to gsnedders?","msgtype":"m.text"},"ts":1402945840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"commit each patch","msgtype":"m.text"},"ts":1402945847000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"then push the lot of them somewhere and inform him of where","msgtype":"m.text"},"ts":1402945862000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"branch per patch, if they are independent","msgtype":"m.text"},"ts":1402945882000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"it's easier to explain with a chalkboard, but for the most part it's not worth worrying about the specifics of what gets pushed --- the simple case is, you have a branch, and you want to update a remote branch to match it","msgtype":"m.text"},"ts":1402945894000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so you push your branch to the remote, and if it's a fast-forward commit, it will just work","msgtype":"m.text"},"ts":1402945913000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and if it's not a fast-forward commit, then you should think carefully about it :d","msgtype":"m.text"},"ts":1402945944000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"ok so with subversion, all i have to do is \"svn diff\", then i have the patch for review, then \"svn commit\", then it's upstream.","msgtype":"m.text"},"ts":1402945959000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in git you can commit first and review second","msgtype":"m.text"},"ts":1402945987000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"you can do that in subversion too. svn commit, then svn diff with the revision numbers.","msgtype":"m.text"},"ts":1402946004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand why git has to be so much more complicated.","msgtype":"m.text"},"ts":1402946014000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes, but without it being upstream","msgtype":"m.text"},"ts":1402946019000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i want it upstream","msgtype":"m.text"},"ts":1402946026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's the point of it not being upstream :-P","msgtype":"m.text"},"ts":1402946032000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's pretty simple, but there's a bit of a learning curve maybe. once you get the hang of it, it is totally natural","msgtype":"m.text"},"ts":1402946048000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Hixie: git is used by many who don't have write access to upstream","msgtype":"m.text"},"ts":1402946053000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1402946068000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you're saying i should git add, then git commit, then git push, then git add, then git commit, then git push, etc?","msgtype":"m.text"},"ts":1402946088000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"until i've got no more local changes?","msgtype":"m.text"},"ts":1402946095000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't have to commit -> push -> commit -> push","msgtype":"m.text"},"ts":1402946107000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you can commit -> commit -> commit -> push","msgtype":"m.text"},"ts":1402946113000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"if it's easier =)","msgtype":"m.text"},"ts":1402946117000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and that results in multiple patches on gsnedders' side?","msgtype":"m.text"},"ts":1402946178000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"separate \"pull requests\" or whatever they're called?","msgtype":"m.text"},"ts":1402946185000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it results in separate commits, but not separate patches","msgtype":"m.text"},"ts":1402946232000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"for separate patches, you should make separate branches","msgtype":"m.text"},"ts":1402946240000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Has anyone gotten Anolis + Travis-CI up and running?","msgtype":"m.text"},"ts":1402946251000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"separate _branches_?","msgtype":"m.text"},"ts":1402946273000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Alternately, TabAtkins, how do I switch to Bikeshed?","msgtype":"m.text"},"ts":1402946275000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"just to commit two separate files?","msgtype":"m.text"},"ts":1402946288000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"branches are basically equivalent to commits in git","msgtype":"m.text"},"ts":1402946301000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"they are not heavyweight as in svgn","msgtype":"m.text"},"ts":1402946306000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i'm not finding anything online that leads me to that conclusions :-)","msgtype":"m.text"},"ts":1402946442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Branches are pointers to commits","msgtype":"m.text"},"ts":1402946455000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"literally if you look in the .git directory there will be files saying something like \"branch_name: deadb33f\"","msgtype":"m.text"},"ts":1402946479000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"maybe i should just send gsnedders diffs","msgtype":"m.text"},"ts":1402946547000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"branches are *names* for commits","msgtype":"m.text"},"ts":1402946601000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: you can use \"git send-email\" for that ;-P","msgtype":"m.text"},"ts":1402946608000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"after committing everything","msgtype":"m.text"},"ts":1402946616000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or get format-patch","msgtype":"m.text"},"ts":1402946624000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"is there no real documentation got git? i'm not finding anything sane on the web.","msgtype":"m.text"},"ts":1402946632000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"for git","msgtype":"m.text"},"ts":1402946636000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not got git","msgtype":"m.text"},"ts":1402946637000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you could try the manpages","msgtype":"m.text"},"ts":1402946646000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic: What are you switching from?","msgtype":"m.text"},"ts":1402946649000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git manpages are terrible.","msgtype":"m.text"},"ts":1402946670000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Anolis. Not too much complicated stuff yet. https://github.com/whatwg/streams/blob/master/index.html","msgtype":"m.text"},"ts":1402946672000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"the man pages are impenetrable","msgtype":"m.text"},"ts":1402946673000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1402946685000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"http://git-man-page-generator.lokaltog.net/","msgtype":"m.text"},"ts":1402946691000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: That's pretty easy to switch from, since it's similar to the old CSSWG preprocessor, and Bikeshed is a spiritual descendent.","msgtype":"m.text"},"ts":1402946699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I can convert for you, or you can just follow the docs and ask me questions.","msgtype":"m.text"},"ts":1402946711000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: http://git-scm.com/book is probably the best","msgtype":"m.text"},"ts":1402946719000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: anwyay, the nice thing is that anything you screw up before you push, you can still fix","msgtype":"m.text"},"ts":1402946741000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Domenic: i don't even know where to begin with that","msgtype":"m.text"},"ts":1402946767000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: (i've been trying to read that for the past half hour)","msgtype":"m.text"},"ts":1402946777000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ugh, there's a super-great visual guide to git I'm trying to find.","msgtype":"m.text"},"ts":1402946787000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: hmm documentation has gotten much better since I last saw. I'll give it a shot and ask questions if I get stuck. Thanks!","msgtype":"m.text"},"ts":1402946788000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: It's been stable for like a year, so you must have looked at it a *long* time ago. ^_^","msgtype":"m.text"},"ts":1402946808000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://marklodato.github.io/visual-git-guide/index-en.html","msgtype":"m.text"},"ts":1402946815000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: maybe http://eagain.net/articles/git-for-computer-scientists/ will help?","msgtype":"m.text"},"ts":1402946819000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: ^^^ this was super informative to me.","msgtype":"m.text"},"ts":1402946831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: you aren't scared of DAGs are you?","msgtype":"m.text"},"ts":1402946832000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i'm not _scared_ of them, i just find the idea that i need to know about hashes and branches and DAGs and so forth just to submit some small diffs to be absurd","msgtype":"m.text"},"ts":1402946870000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: thanks, loking","msgtype":"m.text"},"ts":1402946885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[24~looking","msgtype":"m.text"},"ts":1402946886000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"l o o k i n g","msgtype":"m.text"},"ts":1402946890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: The link I gave gives you a great, easy visual guide to the commands and what effect they have on the working directory, the index, and the history.","msgtype":"m.text"},"ts":1402946894000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hahahaha","msgtype":"m.text"},"ts":1402946897000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: well you don't have to know much about hashes to use it","msgtype":"m.text"},"ts":1402946917000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"The hardest part of getting into git is (a) learning, intuitiveyl, what the index is for and why it's exposed, and (b) what commands interact with what thing.","msgtype":"m.text"},"ts":1402946928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"call it the staging area","msgtype":"m.text"},"ts":1402946949000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hard when you're used to a VCS that doesn't expose an index, at least.","msgtype":"m.text"},"ts":1402946950000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, same deal.","msgtype":"m.text"},"ts":1402946956000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: that explains the local stuff, but my real problem here is i don't care about the local stuff and just want to upload stuff to a remote server","msgtype":"m.text"},"ts":1402946988000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the chief virtual of calling it an \"index\" is that that is less misleading than \"cache\"","msgtype":"m.text"},"ts":1402946992000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"er.","msgtype":"m.text"},"ts":1402946995000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i literally have zero use for the fact that git stores anything locally","msgtype":"m.text"},"ts":1402946998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s/virtual/virtue/","msgtype":"m.text"},"ts":1402946998000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: Pushing to a remote is just (1) get the stuff into your history, then (2) git push.","msgtype":"m.text"},"ts":1402947007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: you do it locally and then upload when you've got all the things locally that you want remotely","msgtype":"m.text"},"ts":1402947018000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"TabAtkins: but what does it push?","msgtype":"m.text"},"ts":1402947025000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just pretend you are the server for the moment","msgtype":"m.text"},"ts":1402947027000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Your history.","msgtype":"m.text"},"ts":1402947030000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i only want to push one diff","msgtype":"m.text"},"ts":1402947037000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: all it needs to push to keep the dag in one piece","msgtype":"m.text"},"ts":1402947039000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"(Using the \"visual guide\" terms.)","msgtype":"m.text"},"ts":1402947040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"you can't push a diff","msgtype":"m.text"},"ts":1402947043000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"git has no diffs","msgtype":"m.text"},"ts":1402947046000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: You're already tracking the server, right?","msgtype":"m.text"},"ts":1402947051000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So you pulled from the server, then made changes and committed them, and want to push?","msgtype":"m.text"},"ts":1402947060000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"tracking\"?","msgtype":"m.text"},"ts":1402947060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Sorry, I keep using terms of art. ^_^","msgtype":"m.text"},"ts":1402947083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: you have it in the output of \"git remote -v\"?","msgtype":"m.text"},"ts":1402947090000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Point is: how did you get the code you were hacking on?","msgtype":"m.text"},"ts":1402947103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"With a `git pull`?","msgtype":"m.text"},"ts":1402947107000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i've no idea how i got my working directory, at this point, it's scrolled off the top of my .bash_history :-)","msgtype":"m.text"},"ts":1402947107000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Or `git clone`, whatever?","msgtype":"m.text"},"ts":1402947113000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: so what says \"git remote -v\"?","msgtype":"m.text"},"ts":1402947123000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"You probably cloned it.  There a `.git` folder in the top-level folder?","msgtype":"m.text"},"ts":1402947125000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git remote -v says \"origin  https://github.com/html5lib/html5lib-tests (fetch)\" (and origin)","msgtype":"m.text"},"ts":1402947126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, cool.","msgtype":"m.text"},"ts":1402947132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"er, and push","msgtype":"m.text"},"ts":1402947132000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so yeah, you're tracking it","msgtype":"m.text"},"ts":1402947155000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"now i have several changes in this direcory, and i'd like to submit them as separate patches. pull requests. whatever.","msgtype":"m.text"},"ts":1402947159000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, you wanna do PRs.","msgtype":"m.text"},"ts":1402947174000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"hmm, separate pull requests means you'll need a branch for each","msgtype":"m.text"},"ts":1402947176000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"That makes things a touch more complex.","msgtype":"m.text"},"ts":1402947178000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Want a walkthrough?","msgtype":"m.text"},"ts":1402947187000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if you're happy to give me one i would be much obliged, but i'd happily settle for documentation :-)","msgtype":"m.text"},"ts":1402947202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Github's docs are okay for this, but it'll be compolicated since you've already made your changes all together.","msgtype":"m.text"},"ts":1402947231000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"git gui\" is your friend, I think","msgtype":"m.text"},"ts":1402947246000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"they're in different files, fwiw","msgtype":"m.text"},"ts":1402947252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, that's easier.","msgtype":"m.text"},"ts":1402947258000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh, then \"git add\" is all you need","msgtype":"m.text"},"ts":1402947262000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Have you committed them yet? \"No\" is okay.","msgtype":"m.text"},"ts":1402947265000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(if they're not we'll pretend they are and then apologise to gsnedders later)","msgtype":"m.text"},"ts":1402947271000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1402947278000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, cool.","msgtype":"m.text"},"ts":1402947282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So you've got a lot of new files added, and none of them have had `git add` or `git commit` run on them yet, right?","msgtype":"m.text"},"ts":1402947298000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(\"yes\" would have been okay too)","msgtype":"m.text"},"ts":1402947299000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"no new files iirc, just edits to existing files","msgtype":"m.text"},"ts":1402947310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(these are changes to the html5lib tests)","msgtype":"m.text"},"ts":1402947315000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"SamB: (Yeah, but I was trying to head off a \"No, but I'm doing it now\").","msgtype":"m.text"},"ts":1402947316000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Okay.","msgtype":"m.text"},"ts":1402947319000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: \"git add\" isn't just for new files","msgtype":"m.text"},"ts":1402947325000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"So for each PR you wanna do, you'll need a fresh branch.","msgtype":"m.text"},"ts":1402947326000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402947339000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"grabs some wood","msgtype":"m.emote"},"ts":1402947342000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So run `git checkout -b my-new-branch-name`.","msgtype":"m.text"},"ts":1402947343000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That'lll make a new branch and switch you to it.","msgtype":"m.text"},"ts":1402947355000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is that going to create new directories or anything?","msgtype":"m.text"},"ts":1402947357000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No.","msgtype":"m.text"},"ts":1402947361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"or just change the local directory to be in a branch?","msgtype":"m.text"},"ts":1402947367000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Branches are a magic git concept, not reflected in your directory structure.","msgtype":"m.text"},"ts":1402947369000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're just a way of naming commits.","msgtype":"m.text"},"ts":1402947373000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so this is basically a way of naming the next commit(s)?","msgtype":"m.text"},"ts":1402947387000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The Yeah.","msgtype":"m.text"},"ts":1402947392000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it switches which branch git considers to be your current branch","msgtype":"m.text"},"ts":1402947407000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Once you're in a new branch, `git add` the files you changed that you want to submit in a single PR, and `git commit`.","msgtype":"m.text"},"ts":1402947414000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then make a new branch, and repeat.","msgtype":"m.text"},"ts":1402947420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"are these branch names local only, or should i take care to make them relevant in the future?","msgtype":"m.text"},"ts":1402947428000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Your uncommited files will follow you around as yous witch branches.","msgtype":"m.text"},"ts":1402947429000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: shouldn't he switch back to \"master\" or whatever before he makes the next one?","msgtype":"m.text"},"ts":1402947441000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"They'll go away as soona s the PR is merged.","msgtype":"m.text"},"ts":1402947441000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"SamB: Oh yeah, right.","msgtype":"m.text"},"ts":1402947448000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402947459000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: the branch names don't have to last","msgtype":"m.text"},"ts":1402947460000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Do `git checkout master` after each commit, or your history'll be weird.","msgtype":"m.text"},"ts":1402947461000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And github will be unhappy.","msgtype":"m.text"},"ts":1402947472000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I mean, probably the branches will be around forever but nobody will care once they've been merged up","msgtype":"m.text"},"ts":1402947480000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: GH's UI lets you delete the branches.","msgtype":"m.text"},"ts":1402947491000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"well, sure","msgtype":"m.text"},"ts":1402947496000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"where do i put the commit message?","msgtype":"m.text"},"ts":1402947497000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"At least, remotely, and then that'll sync down.","msgtype":"m.text"},"ts":1402947499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git commit -m\"\" ?","msgtype":"m.text"},"ts":1402947500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: `git commit -m \"\"`","msgtype":"m.text"},"ts":1402947505000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402947506000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but most people don't seem to bother to actually delete them ;-)","msgtype":"m.text"},"ts":1402947512000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"and that gets sent to gsnedders somehow as part of the pull request?","msgtype":"m.text"},"ts":1402947524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yes","msgtype":"m.text"},"ts":1402947530000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Not quite.","msgtype":"m.text"},"ts":1402947531000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1402947533000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This is preparing them for that.","msgtype":"m.text"},"ts":1402947537000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There are ways to do the PR from teh command-line, but I've never learned them.","msgtype":"m.text"},"ts":1402947551000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I do it through github's UI.","msgtype":"m.text"},"ts":1402947556000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: you will want to checkout master (or gh-pages or whatever is the default branch) before doing the next git checkout -b foo","msgtype":"m.text"},"ts":1402947567000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"TabAtkins: github can see my server?","msgtype":"m.text"},"ts":1402947574000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: well, it does get included in the PR more-or-less","msgtype":"m.text"},"ts":1402947579000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: It can after you push.","msgtype":"m.text"},"ts":1402947596000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You'll be pushing the branches individually, and then you can tell GH to turn each branch into a PR.","msgtype":"m.text"},"ts":1402947610000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Like I said, there are more direct ways to do this last part, but I ahven't learned them yet.","msgtype":"m.text"},"ts":1402947625000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, so i've done git checkout -b format-changes; git add README.md; git commit -m\"Update README file to include new and recent changes to the format\"","msgtype":"m.text"},"ts":1402947656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Now checkout master.","msgtype":"m.text"},"ts":1402947686000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then repeat those steps for each other change.","msgtype":"m.text"},"ts":1402947690000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1402947697000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This'll clear out your working directory, which'll make things simpler if you have to resolve conflicts or whatever.","msgtype":"m.text"},"ts":1402947706000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not push first?","msgtype":"m.text"},"ts":1402947708000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"git push origin -u format-changes","msgtype":"m.text"},"ts":1402947718000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: Yeah, I'm just worrying about merge conflicts, though I guess that can be handled later.","msgtype":"m.text"},"ts":1402947735000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"There won't be any conflict with the initial push.","msgtype":"m.text"},"ts":1402947746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So yeah, do what zcorpan says.","msgtype":"m.text"},"ts":1402947750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402947831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wonders what his username is","msgtype":"m.emote"},"ts":1402947842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Is it asking for that?","msgtype":"m.text"},"ts":1402947854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's your github username/pw.","msgtype":"m.text"},"ts":1402947861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(if you want to make more commits to the same PR later, you can just checkout that branch and make your change, git add <file>; git commit -m \"...\"; git push )","msgtype":"m.text"},"ts":1402947861000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(to fix review comments or rebase etc)","msgtype":"m.text"},"ts":1402947905000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1402947922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"tries to log in via the web site","msgtype":"m.emote"},"ts":1402947927000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought i knew my credentials...","msgtype":"m.text"},"ts":1402947933000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: did you clone with https: URL?","msgtype":"m.text"},"ts":1402947981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"The requested URL returned error: 403 while accessing https://github.com/html5lib/html5lib-tests/info/refs\"","msgtype":"m.text"},"ts":1402947995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i guess yes?","msgtype":"m.text"},"ts":1402947998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you have two-factor auth on you get screwed and have to generate a new per-machine password","msgtype":"m.text"},"ts":1402948004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"looks like chrome knows my password","msgtype":"m.text"},"ts":1402948021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"good old chrome","msgtype":"m.text"},"ts":1402948026000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"now i just need to get chrome to tell it to me :-)","msgtype":"m.text"},"ts":1402948027000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That's in your settings page.","msgtype":"m.text"},"ts":1402948040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah, chrome i know how to use. :-P","msgtype":"m.text"},"ts":1402948066000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok well it's what i thought it was","msgtype":"m.text"},"ts":1402948072000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weird","msgtype":"m.text"},"ts":1402948073000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1402948116000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no two factor auth...","msgtype":"m.text"},"ts":1402948155000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oooh!","msgtype":"m.text"},"ts":1402948164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You may have used your keys, and it's asking for your key password.","msgtype":"m.text"},"ts":1402948180000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though, if it's asking for username, that's not right.","msgtype":"m.text"},"ts":1402948185000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it's asking for my username first, yeah...","msgtype":"m.text"},"ts":1402948189000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh wait, that might still be right.","msgtype":"m.text"},"ts":1402948206000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"my .gitconfig has different information","msgtype":"m.text"},"ts":1402948207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder if that's the problem","msgtype":"m.text"},"ts":1402948210000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Maybe your key password for whatever key you gave to github?","msgtype":"m.text"},"ts":1402948220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i have no ssh keys set up","msgtype":"m.text"},"ts":1402948222000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, then never mind that.","msgtype":"m.text"},"ts":1402948229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"though maybe i should just do that","msgtype":"m.text"},"ts":1402948236000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It means no un/pw, so that's what I do.","msgtype":"m.text"},"ts":1402948264000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402948346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok done","msgtype":"m.text"},"ts":1402948346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's try git push again","msgtype":"m.text"},"ts":1402948353000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"still asking for username","msgtype":"m.text"},"ts":1402948361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"wtf","msgtype":"m.text"},"ts":1402948362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://help.github.com/articles/https-cloning-errors is unhelpful...","msgtype":"m.text"},"ts":1402948446000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i've just discovered you can use svn with github","msgtype":"m.text"},"ts":1402948525000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's rather tempting","msgtype":"m.text"},"ts":1402948529000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Haha, you'll have to learn git someday!","msgtype":"m.text"},"ts":1402948555000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I think it just uses git-svn behind the scenes, but it's probably not as tempting as you think","msgtype":"m.text"},"ts":1402948567000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(Though, learning GitHub is somewhat harder than just learning git.)","msgtype":"m.text"},"ts":1402948572000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok seriously, why is github not letting me login","msgtype":"m.text"},"ts":1402948580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i can ssh to github fine","msgtype":"m.text"},"ts":1402948583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"annevk: Which spec was it that I offered to Bikeshed for you? Was it DOM?","msgtype":"m.text"},"ts":1402948627000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: which remote url are you using? if its your own repository, and you aren't using the secure url, you should be able to login with your github user/pass","msgtype":"m.text"},"ts":1402948688000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"https://help.github.com/articles/why-is-git-always-asking-for-my-password seems likely to be what's going on, but i don't understand the words on that page","msgtype":"m.text"},"ts":1402948694000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's the secure url, you should associate a key with your account and make sure git knows where to find it","msgtype":"m.text"},"ts":1402948710000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i'm trying to push to https://github.com/html5lib/html5lib-tests","msgtype":"m.text"},"ts":1402948716000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"caitp: and i have the key set up such that ssh -T git⊙gc works fine","msgtype":"m.text"},"ts":1402948727000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's not an account you have write access to, you're out of luck regardless","msgtype":"m.text"},"ts":1402948730000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"you can push to the ssh url if you want to use ssh key to auth","msgtype":"m.text"},"ts":1402948731000,"senderName":"jamesr_","senderId":"jamesr_@irc"},
{"content":{"body":"i'm guessing you have write access to html5lib","msgtype":"m.text"},"ts":1402948758000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"actually, I don't see you in the members list for that org","msgtype":"m.text"},"ts":1402948776000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: i'm just trying to upload a pull request, presumably i don't need any rights to do that","msgtype":"m.text"},"ts":1402948781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh yeah, that's probably it.","msgtype":"m.text"},"ts":1402948783000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"for a pull request, you'd upload to your own account","msgtype":"m.text"},"ts":1402948798000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"To do a PR without commit right, you need to fork the repo to your own account.","msgtype":"m.text"},"ts":1402948800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Then you push to your fork, and issue a PR from that.","msgtype":"m.text"},"ts":1402948809000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(seriously, what was wrong with the way we did it five years ago)","msgtype":"m.text"},"ts":1402948817000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: is there a quick way to delete all the branches then?","msgtype":"m.text"},"ts":1402948820000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"The main account can then accept the PR to integrate the change into themselves.","msgtype":"m.text"},"ts":1402948820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"defunkt's `hub` tool makes this workflow pretty nice","msgtype":"m.text"},"ts":1402948823000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so you might want to look into that","msgtype":"m.text"},"ts":1402948829000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"so...","msgtype":"m.text"},"ts":1402948833000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If you have commit rights its easier.","msgtype":"m.text"},"ts":1402948834000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"how do i do that","msgtype":"m.text"},"ts":1402948836000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i thought i had already done my own fork","msgtype":"m.text"},"ts":1402948842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Go into GitHub, and click the \"fork\" button.","msgtype":"m.text"},"ts":1402948846000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn't that the whole point of git","msgtype":"m.text"},"ts":1402948849000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then we can change your remote.","msgtype":"m.text"},"ts":1402948852000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what metadata can I use to get something like the headers on http://fetch.spec.whatwg.org/ et al?","msgtype":"m.text"},"ts":1402948855000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"And push your branches there instead.","msgtype":"m.text"},"ts":1402948858000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cloning and forking are distinct","msgtype":"m.text"},"ts":1402948862000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Domenic: We don't have WHATWG boilerplate yet, but you can add that yourself really easily.","msgtype":"m.text"},"ts":1402948884000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: sounds good, will do later.","msgtype":"m.text"},"ts":1402948897000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: \"forking\" is a GH concept, not a git one.","msgtype":"m.text"},"ts":1402948900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok https://github.com/Hixie/html5lib-tests exists, whatever that is","msgtype":"m.text"},"ts":1402948912000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: All of these instructions are *way* more complicated than they have to be, because you're working within the GH model, but didn't *start* that way.","msgtype":"m.text"},"ts":1402948925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i'd be happy to work in some other model if it's simpler","msgtype":"m.text"},"ts":1402948944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Easiest model is to ask gsnedders to give you commit rights, and just push your changes. ^_^&","msgtype":"m.text"},"ts":1402948961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i just want to have gsnedders review my changes and then have them committed to the repo","msgtype":"m.text"},"ts":1402948968000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then you can set up cleanly with the GH model.","msgtype":"m.text"},"ts":1402948974000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In the GH model, you do all your work in your own fork, and throw PRs at the main repo.","msgtype":"m.text"},"ts":1402949003000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the GH model is typically, you have your organization with a canonical repository, which is considered upstream, you have your own fork on your own account, and you have your local clones on however many machines","msgtype":"m.text"},"ts":1402949037000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"TabAtkins: so in the GH model, you have a local repo, and then you push to a GH repo, and then you push from there to another GH repo?","msgtype":"m.text"},"ts":1402949065000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"man","msgtype":"m.text"},"ts":1402949077000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so all of your pushes should be against your fork on your github account, and you can submit those pushes for review in the canonical repository, it's pretty elegant","msgtype":"m.text"},"ts":1402949077000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"again","msgtype":"m.text"},"ts":1402949079000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You push from your local repo to your fork, then PR over to the main fork, yeah.","msgtype":"m.text"},"ts":1402949083000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"life was so much easier back in the subversion days","msgtype":"m.text"},"ts":1402949084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but whatever","msgtype":"m.text"},"ts":1402949086000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Depends on what you mean by \"easier\".","msgtype":"m.text"},"ts":1402949093000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is there some way to change my local working copy to point to https://github.com/Hixie/html5lib-tests instead?","msgtype":"m.text"},"ts":1402949106000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The GH model is designed for easy collaboration with strangers without allowing them to stomp on everything.","msgtype":"m.text"},"ts":1402949108000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And it works, once you know how to use it.","msgtype":"m.text"},"ts":1402949115000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"this model really grows on you, I am looking forward to chromium fully switching to git so that it's less crazy","msgtype":"m.text"},"ts":1402949132000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Yes, `git remote set-url origin <url-here>`","msgtype":"m.text"},"ts":1402949148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"caitp: so far this model has only grown on me like a disgusting fungus :-P","msgtype":"m.text"},"ts":1402949157000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You'll have to do this for each branch, I think?  I'm not super-sure, haven't done that before.","msgtype":"m.text"},"ts":1402949160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: You're just experiencing change aversion due to trying to apply your SVG mental model on top of git.","msgtype":"m.text"},"ts":1402949179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They're close, but not exact, so the friction feels like errors.","msgtype":"m.text"},"ts":1402949188000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"no, i'm pretty sure it's not change aversion :-)","msgtype":"m.text"},"ts":1402949194000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Adn then having to deal with GH's structure on top of it is makign it worse.","msgtype":"m.text"},"ts":1402949199000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Having used both SVG and git extensively, I know it's not just \"git is fucked up and hard\". ^_^","msgtype":"m.text"},"ts":1402949214000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's a little bit more complex, but most of the time you don't see that, and the complexity is actually quite worthwhile.","msgtype":"m.text"},"ts":1402949236000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: You may be able to make changes directly to .git/config","msgtype":"m.text"},"ts":1402949262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so .git/config has no mention of the old url at all anymore","msgtype":"m.text"},"ts":1402949329000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the basics are super simple, and intermediate stuff like complicated rebasing and refactoring stuff across multiple commits is actually really straight forward, but I guess I should focus on meetings and do less git-evangelism","msgtype":"m.text"},"ts":1402949332000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"but i'm still getting prompted for my username","msgtype":"m.text"},"ts":1402949336000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what if I have <dfn>Chunks</dfn> and want to (auto?) link to it from the word \"chunk\"","msgtype":"m.text"},"ts":1402949338000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: That happens automatically.","msgtype":"m.text"},"ts":1402949366000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"such magic :O","msgtype":"m.text"},"ts":1402949377000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"When it doesn't, use the title attribute to provide alternate text.","msgtype":"m.text"},"ts":1402949380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Is there any difference between <a> and '?","msgtype":"m.text"},"ts":1402949397000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: We can make this easier","msgtype":"m.text"},"ts":1402949404000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Bikeshed automatically accounts for common plurals, possessives, and -ing for both definitions and auotlinks.)","msgtype":"m.text"},"ts":1402949407000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Big diff. Single quotes are for CSS property autolinks.","msgtype":"m.text"},"ts":1402949421000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: The GitHub model is broken for cases like this","msgtype":"m.text"},"ts":1402949423000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<a> by itself is a dfn autolink.","msgtype":"m.text"},"ts":1402949428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah k","msgtype":"m.text"},"ts":1402949429000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That is, a definition of type \"dfn\".","msgtype":"m.text"},"ts":1402949433000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A normal term, in other words.","msgtype":"m.text"},"ts":1402949438000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You should push to a branch of the main repo","msgtype":"m.text"},"ts":1402949439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Then gsnedders or whoever can make pushes to fix your commits if needed","msgtype":"m.text"},"ts":1402949453000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: He just needs commit right for that, which he currently doesn't have.","msgtype":"m.text"},"ts":1402949478000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: That seems like a solvable problem","msgtype":"m.text"},"ts":1402949519000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"That's what I said. ^_^","msgtype":"m.text"},"ts":1402949529000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, i've changed my password and now it lets me use that to push","msgtype":"m.text"},"ts":1402949578000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins, Hixie: OK, now you have push access","msgtype":"m.text"},"ts":1402949580000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"still isn't using ssh","msgtype":"m.text"},"ts":1402949581000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but whatever","msgtype":"m.text"},"ts":1402949583000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: ah","msgtype":"m.text"},"ts":1402949595000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Okay, so just pushing to the main repo should be good now.","msgtype":"m.text"},"ts":1402949599000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"General question (not Bikeshed specific): when should I use a normative vs. informative reference?","msgtype":"m.text"},"ts":1402949605000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"does \"push\" affect my local repo at all?","msgtype":"m.text"},"ts":1402949618000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or can i just change the remote url and push again","msgtype":"m.text"},"ts":1402949625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: Will a change in the reference cause your spec to need to change? If so, normative.","msgtype":"m.text"},"ts":1402949626000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In this case I am using the reference in an example, so it is presumably informative, but curious what the dividing line is.","msgtype":"m.text"},"ts":1402949626000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: Don't bother with remote urls now.","msgtype":"m.text"},"ts":1402949636000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: nice, that's a pretty clear line. thanks.","msgtype":"m.text"},"ts":1402949638000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: normative reference means that implementations of your spec need to read and implement the other spec or your spec won't make sense","msgtype":"m.text"},"ts":1402949693000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: But no, a push does nothing to your local repo. It just copies commits from your history to the remote repo's history.","msgtype":"m.text"},"ts":1402949699000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: non-normative means that the other document could be deleted from the world, and your spec would be unaffected","msgtype":"m.text"},"ts":1402949708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: but that readers might still want to see that other spec for context","msgtype":"m.text"},"ts":1402949718000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: k","msgtype":"m.text"},"ts":1402949723000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Thanks Hixie.","msgtype":"m.text"},"ts":1402949735000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: Just like how \"add\" just copies changes from your working area to your staging area, and \"commit\" just copies changes from your staging area to your history. ^_^","msgtype":"m.text"},"ts":1402949758000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: well, that was pretty darn easy; impressive tool.","msgtype":"m.text"},"ts":1402949802000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: You want to do something like git remote add github git⊙gc:html5lib/html5lib-tests.git; git push --set-upstream github HEAD:hixie/new_tests","msgtype":"m.text"},"ts":1402949822000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Starting from Anolis makes some things easy. It's also possible that your dfns aren't typed correctly yet. ^_^","msgtype":"m.text"},"ts":1402949826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: what's the best way to get WHATWG boilerplate in? Pull request bikeshed, or can I have it take a boilerplate from external?","msgtype":"m.text"},"ts":1402949833000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I'll give it a lookover if you want.","msgtype":"m.text"},"ts":1402949835000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: there sure are a lot of different stages in the git/gh model","msgtype":"m.text"},"ts":1402949837000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is whatwg boilerplate?","msgtype":"m.text"},"ts":1402949852000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: PR bikeshed - the /include directory has all the boilerplate files.","msgtype":"m.text"},"ts":1402949854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there shouldn't be any whatwg boilerplate","msgtype":"m.text"},"ts":1402949862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Just make new ones for whatever you need.","msgtype":"m.text"},"ts":1402949865000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: The entire header and footer are boilerplate.","msgtype":"m.text"},"ts":1402949873000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Eek, that means I have to get it running locally on Windows... wheeee","msgtype":"m.text"},"ts":1402949877000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"there's no standard header and footer for whatwg specs","msgtype":"m.text"},"ts":1402949885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unless you mean the DOCTYPE","msgtype":"m.text"},"ts":1402949888000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You should make one. ^_^","msgtype":"m.text"},"ts":1402949898000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: \"boilerplate\" in this case includes <script> and <link> files","msgtype":"m.text"},"ts":1402949899000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But also, the Group can be as granular as needed.","msgtype":"m.text"},"ts":1402949906000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: no, i mean, there's no standard. it's whatever the spec writer wants.","msgtype":"m.text"},"ts":1402949913000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. whatwg/html and whatwg/dom are quite different","msgtype":"m.text"},"ts":1402949924000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML's a special case.  Everyone else is mostly different just because of the lack of a standard.","msgtype":"m.text"},"ts":1402949943000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Crafting a stadnardized header would be fine for most of them.","msgtype":"m.text"},"ts":1402949962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"noooooo","msgtype":"m.text"},"ts":1402949974000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no bureaucracy","msgtype":"m.text"},"ts":1402949977000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no boilerplate","msgtype":"m.text"},"ts":1402949979000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the spec author should be responsible for all spec content","msgtype":"m.text"},"ts":1402949994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's nothing to do with \"bureacracy\".","msgtype":"m.text"},"ts":1402950007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's just that the header is pretty formulaic.","msgtype":"m.text"},"ts":1402950016000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it shouldn't be","msgtype":"m.text"},"ts":1402950021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And so typing it all out yourself is dumb.","msgtype":"m.text"},"ts":1402950022000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it should be compelling","msgtype":"m.text"},"ts":1402950026000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it should draw the reader in","msgtype":"m.text"},"ts":1402950031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's formulaic then we're doing something wrong","msgtype":"m.text"},"ts":1402950038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"different specs have different needs","msgtype":"m.text"},"ts":1402950048000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Those needs are much less unique and special than I think you're indicating.  Case in point: most WHATWG specs have nearly identical-looking headers.","msgtype":"m.text"},"ts":1402950119000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"and they all suck","msgtype":"m.text"},"ts":1402950127000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And I'll bet that whenever Anne makes a new one, he copy/pastes from an old one.","msgtype":"m.text"},"ts":1402950132000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"seriously they're ugly headers right now","msgtype":"m.text"},"ts":1402950139000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we shouldn't create new specs that look like that","msgtype":"m.text"},"ts":1402950149000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then figure out what they *should* look like, and standardize on that.","msgtype":"m.text"},"ts":1402950188000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it will surely change regularly","msgtype":"m.text"},"ts":1402950217000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as different spec authors experiment","msgtype":"m.text"},"ts":1402950224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Then change it regularly.","msgtype":"m.text"},"ts":1402950229000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there shouldn't be an \"it\"","msgtype":"m.text"},"ts":1402950238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"This is far easier to do when it's generated by the tool.","msgtype":"m.text"},"ts":1402950239000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it should just be part of the spec source","msgtype":"m.text"},"ts":1402950293000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's nothing to generate","msgtype":"m.text"},"ts":1402950298000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Welp, most of it is repetitive garbage no matter what you do, so I guess I totally disagree.","msgtype":"m.text"},"ts":1402950325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"there shouldn't be anything repetitive about it","msgtype":"m.text"},"ts":1402950398000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if it's repetitive it shouldn't be in the spec","msgtype":"m.text"},"ts":1402950403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I *would* be happier right now if I could just port over the existing parts of the spec source, and have Bikeshed only touch the main body of the spec... there's like 15 lines that I'm going to spend the next few hours duplicating","msgtype":"m.text"},"ts":1402950425000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: If you do that, you'll lose the auto-genned index, refs, issues index, etc.","msgtype":"m.text"},"ts":1402950481000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But you can trick Bikeshed into not doing the header generation by including a doctype.","msgtype":"m.text"},"ts":1402950495000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If the first line is the html doctype, Bikeshed assumes you're providing your own header.","msgtype":"m.text"},"ts":1402950508000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hm, I can't remember if it still includes the footer in that case.  Lemme see...","msgtype":"m.text"},"ts":1402950529000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"um, so i broke something with this git stuff i'm doing","msgtype":"m.text"},"ts":1402950564000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, it does not.","msgtype":"m.text"},"ts":1402950571000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i tried to be clever and use git add -p to add just one part of a change","msgtype":"m.text"},"ts":1402950573000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and now it's saying \"error: You have local changes to 'tree-construction/template.dat'; cannot switch branches\" when i try to checkout master","msgtype":"m.text"},"ts":1402950589000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: \"git stash\" now","msgtype":"m.text"},"ts":1402950608000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"Hixie: You need to commit them first.","msgtype":"m.text"},"ts":1402950610000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"then \"git stash pop\" after you switch back","msgtype":"m.text"},"ts":1402950616000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"i did commit them","msgtype":"m.text"},"ts":1402950622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm following the same steps you gave before :-)","msgtype":"m.text"},"ts":1402950629000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, but they're to the file that's also commited.","msgtype":"m.text"},"ts":1402950631000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git checkout -b BRANCHNAME; git add FILES; git commit -m\"MESSAGE\"; git push origin -u BRANCHNAME; git checkout master","msgtype":"m.text"},"ts":1402950634000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Okay, yeah, stash.","msgtype":"m.text"},"ts":1402950635000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what does git stash pop do?","msgtype":"m.text"},"ts":1402950651000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"`git stash` now will save and undo all the remaining uncommitted local changes.","msgtype":"m.text"},"ts":1402950652000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"pop throws them away, don't do that.","msgtype":"m.text"},"ts":1402950657000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it says \"nothing to apply\"","msgtype":"m.text"},"ts":1402950660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1402950664000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"I thought pop applied them first, THEN threw them away if that worked","msgtype":"m.text"},"ts":1402950674000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"how do i see my \"local changes\"?","msgtype":"m.text"},"ts":1402950702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and what are they local to?","msgtype":"m.text"},"ts":1402950719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So, back to the visual guide. ^_^","msgtype":"m.text"},"ts":1402950727000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"since there's three levels just in my own repo...","msgtype":"m.text"},"ts":1402950730000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"working directory is the current state of your files.","msgtype":"m.text"},"ts":1402950736000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"What you actually see.","msgtype":"m.text"},"ts":1402950739000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: once committed, they don't count as \"local\" according to git","msgtype":"m.text"},"ts":1402950746000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"staging area is what's getting ready for a commit.","msgtype":"m.text"},"ts":1402950748000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"so which are the local changes? staged or working?","msgtype":"m.text"},"ts":1402950768000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(This exists for a few reasons, one of which is so that `git add -p` can exist and make sense)","msgtype":"m.text"},"ts":1402950773000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It usually means \"not committed\".","msgtype":"m.text"},"ts":1402950781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git diff looks at working vs current comitted state of the branch?","msgtype":"m.text"},"ts":1402950782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: git status shows the files with changes","msgtype":"m.text"},"ts":1402950787000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git diff looks at lots of things depending on the args.","msgtype":"m.text"},"ts":1402950794000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Visual guide explains that.","msgtype":"m.text"},"ts":1402950797000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Split into staged / unstaged / untracked","msgtype":"m.text"},"ts":1402950799000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Better than I'd be able to.","msgtype":"m.text"},"ts":1402950801000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git diff shows the unstaged changes","msgtype":"m.text"},"ts":1402950812000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git diff --staged shows the staged changes","msgtype":"m.text"},"ts":1402950823000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git diff --staged is empty","msgtype":"m.text"},"ts":1402950834000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git status shows everything under \"On branch newtemplatetest\" \"Changed but not updated\"","msgtype":"m.text"},"ts":1402950849000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"presumably this is because i commited just one bit of one of these changed files","msgtype":"m.text"},"ts":1402950876000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it doesn't know how to throw just that change away when going back to the earlier branch","msgtype":"m.text"},"ts":1402950887000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"while keeping my other changes","msgtype":"m.text"},"ts":1402950897000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i guess i do git diff > foo.patch; git reset; patch < foo.patch ?","msgtype":"m.text"},"ts":1402950915000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Can you pastebin the output somewehre","msgtype":"m.text"},"ts":1402950918000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"output of what?","msgtype":"m.text"},"ts":1402950922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"No, if you're using patch files you're doing it wrong","msgtype":"m.text"},"ts":1402950931000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: git status","msgtype":"m.text"},"ts":1402950936000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"damowmow.com/temp/git-output","msgtype":"m.text"},"ts":1402950960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://damowmow.com/temp/git-output","msgtype":"m.text"},"ts":1402950964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"$ git checkout master","msgtype":"m.text"},"ts":1402950980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"error: You have local changes to 'tree-construction/template.dat'; cannot switch branches.","msgtype":"m.text"},"ts":1402950981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"template.dat is the file for which i commited just one chunk","msgtype":"m.text"},"ts":1402950995000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on the current branch","msgtype":"m.text"},"ts":1402951003000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Just to make sure I know, what are you trying to achieve","msgtype":"m.text"},"ts":1402951015000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The scrollback was quite hard to follow","msgtype":"m.text"},"ts":1402951024000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"trying to get gsnedders a bunch of patches","msgtype":"m.text"},"ts":1402951031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"one for each related change","msgtype":"m.text"},"ts":1402951036000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(brb getting food, back in 5 min)","msgtype":"m.text"},"ts":1402951044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"OK, and you have committed one patch and want to make more","msgtype":"m.text"},"ts":1402951058000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: And specifically, he's commited part of a changed file with add -p, and wants the rest of the file's changes in another branch.","msgtype":"m.text"},"ts":1402951151000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1402951158000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: So the advice from everyone about git stash was correct","msgtype":"m.text"},"ts":1402951239000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git stash basically commits all the changes in your working directory to a temporary branch","msgtype":"m.text"},"ts":1402951296000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"These temporary areas are notionally arranged as a stack","msgtype":"m.text"},"ts":1402951322000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"so git stash; git checkout master; git stash pop","msgtype":"m.text"},"ts":1402951345000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: yeah, DOM I think","msgtype":"m.text"},"ts":1402951346000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"back","msgtype":"m.text"},"ts":1402951351000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: ok cool, thanks","msgtype":"m.text"},"ts":1402951393000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: that's basically the same as what i said about with diff and patch","msgtype":"m.text"},"ts":1402951400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Domenic: hmm \"tee\", push x to stream, read from stream (and read until empty or read current buffer)","msgtype":"m.text"},"ts":1402951403000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: if stream is closed/open I guess","msgtype":"m.text"},"ts":1402951504000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(I currently use \"is fully read\" for closed)","msgtype":"m.text"},"ts":1402951515000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if i added something to my staging area in error, how do i remove it?","msgtype":"m.text"},"ts":1402951640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git reset?","msgtype":"m.text"},"ts":1402951704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah that seems to be it","msgtype":"m.text"},"ts":1402951744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how about a way to diff the working directory against the staged stuff?","msgtype":"m.text"},"ts":1402951757000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i can tell what i haven't staged?","msgtype":"m.text"},"ts":1402951762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: VISUAL GUIDE","msgtype":"m.text"},"ts":1402951775000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It has all of these questions in beautiful diagram form.","msgtype":"m.text"},"ts":1402951788000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it claims \"git diff\" does what i want","msgtype":"m.text"},"ts":1402951820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but it's not clear that that is true","msgtype":"m.text"},"ts":1402951831000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It hasn't lied to me yet, so shrug.","msgtype":"m.text"},"ts":1402951843000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1402951868000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"part of the problem is that things that seem symmetric have entirely different names","msgtype":"m.text"},"ts":1402951885000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"e.g. look at the diff diagram on that page","msgtype":"m.text"},"ts":1402951890000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1402951901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"diff maint, diff HEAD, diff, diff --cached, wtf","msgtype":"m.text"},"ts":1402951905000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's all over the place","msgtype":"m.text"},"ts":1402951917000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Note that \"maint\" is just a branch name there, not a command.","msgtype":"m.text"},"ts":1402951947000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And HEAD is a magic commit name that always refers to the tip of your branch.","msgtype":"m.text"},"ts":1402951960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402951980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So `diff` is WD against SA, `diff <commit/branch/etc>` is WD against history, `diff <commit/etc> <commit/etc>` is commit against commit.","msgtype":"m.text"},"ts":1402952012000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The --cached one is weird, but it's also rare to have to diff staging area against history.","msgtype":"m.text"},"ts":1402952023000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"basically i think git suffers from two fundamental problems (both made orders of magnitude worse by github): it's over-engineered, and it has a horrible inconsistent ui","msgtype":"m.text"},"ts":1402952038000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ignore the GH parts right now.  They have a simple and consistent model that is terribly confusing if you come at it piecemeal and trying to slowly adapt your working process to it.","msgtype":"m.text"},"ts":1402952076000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Once you actually learn it and use it proper, it's fairly easy and simple.","msgtype":"m.text"},"ts":1402952090000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"accidentally types git checkout -p foo instead of -b foo and hopes that didn't break anything","msgtype":"m.emote"},"ts":1402952126000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I can't make the same argument as strongly for git itself, because it does have some weird edges, but its core is pretty simple and elegant.","msgtype":"m.text"},"ts":1402952152000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Though again, piecemeal changing your process from SVG to git is confusing, and it burned me too.","msgtype":"m.text"},"ts":1402952168000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Once I found the visual guide everything made way more sense.","msgtype":"m.text"},"ts":1402952179000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not trying to change my process at all","msgtype":"m.text"},"ts":1402952192000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm just trying to commit this one set of changes","msgtype":"m.text"},"ts":1402952201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1402952203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Your process being \"make changes, commit them\". ^_^","msgtype":"m.text"},"ts":1402952214000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Point me to a spec that you want to use the heading portion of, and I'll make boilerplates for you to use.","msgtype":"m.text"},"ts":1402952247000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: If you and annevk can agree on what heading stuff to use, all the better.","msgtype":"m.text"},"ts":1402952277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Also, I'm happy to review your bikeshedded file, to make sure you're using the right dfn types (so Shepherd will be happy when it starts parsing your spec).","msgtype":"m.text"},"ts":1402952325000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: (btw, thanks for setting me up with access)","msgtype":"m.text"},"ts":1402952346000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: excellent. i am very close to being done with a bikeshed draft that repros my current stuff, will ping you in 10 minutes probably","msgtype":"m.text"},"ts":1402952362000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1402952368000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Is \"dom-core.html\" an important filename to maintain for the generated file?","msgtype":"m.text"},"ts":1402952497000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Totally fine if it is, just making sure what you want.","msgtype":"m.text"},"ts":1402952504000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ok i've committed everything","msgtype":"m.text"},"ts":1402952545000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: is there somewhere i can review these changes?","msgtype":"m.text"},"ts":1402952556000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"pushed everything ,rather","msgtype":"m.text"},"ts":1402952565000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In the github UI, you can change what branch you're looking at.","msgtype":"m.text"},"ts":1402952567000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And if you need to make changes, `git checkout my-branch-name`, make changes, commit, push.","msgtype":"m.text"},"ts":1402952589000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"then i hit \"create pull request\"?","msgtype":"m.text"},"ts":1402952687000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"PRing from a branch to another branch in the same repo is fiddly.","msgtype":"m.text"},"ts":1402952726000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Better to just ping gsnedders about it and let him deal with it.","msgtype":"m.text"},"ts":1402952739000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"He can pull the branch and merge it himself.","msgtype":"m.text"},"ts":1402952746000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ah ok these are all publicly viewable already? good","msgtype":"m.text"},"ts":1402952767000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://github.com/html5lib/html5lib-tests/branches","msgtype":"m.text"},"ts":1402952772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah.","msgtype":"m.text"},"ts":1402952795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"gsnedders: ok dude, https://github.com/html5lib/html5lib-tests/branches","msgtype":"m.text"},"ts":1402952795000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: thanks so much for the help","msgtype":"m.text"},"ts":1402952801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and to everyone else also","msgtype":"m.text"},"ts":1402952809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but mainly tab :-)","msgtype":"m.text"},"ts":1402952815000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Now in the *future*, this can be much easier.","msgtype":"m.text"},"ts":1402952816000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because you can do it right from the start.","msgtype":"m.text"},"ts":1402952822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Clone your fork instead.","msgtype":"m.text"},"ts":1402952831000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heh, Python doesn't like Unicode","msgtype":"m.text"},"ts":1402952841000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Then make branches whenever you want to submit something.","msgtype":"m.text"},"ts":1402952842000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"*Then* the \"create PR\" button in GitHub is easy and does the right thing.","msgtype":"m.text"},"ts":1402952858000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Bikeshed errors? Plz let me know, everything should be clean by now.","msgtype":"m.text"},"ts":1402952871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Would it annoy you if I converted your indentation to tabs?","msgtype":"m.text"},"ts":1402953100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: No it isn't","msgtype":"m.text"},"ts":1402953114000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: What isn't?","msgtype":"m.text"},"ts":1402953130000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Fiddly to create PRs from branches in the same repo","msgtype":"m.text"},"ts":1402953145000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"There is like a big green button for that","msgtype":"m.text"},"ts":1402953156000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Working from a fork is *much* harder","msgtype":"m.text"},"ts":1402953180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because there are 3 repos to worry about rather than two","msgtype":"m.text"},"ts":1402953193000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and it's much harder for anyone else to help you out","msgtype":"m.text"},"ts":1402953203000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"because they can't push commits","msgtype":"m.text"},"ts":1402953209000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: In my experience with picture-element, it was really annoying.","msgtype":"m.text"},"ts":1402953237000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But maybe that was because we used a non-master main branch.","msgtype":"m.text"},"ts":1402953244000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Perhaps","msgtype":"m.text"},"ts":1402953251000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The GH UI was just super-unfriendly for this.","msgtype":"m.text"},"ts":1402953262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And defaulted to doing some crazy shit when trying to specify what branch you were PRing against.","msgtype":"m.text"},"ts":1402953277000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In all the situations where I use GH I vastly prefer working with one upstream rather than a fork and a master","msgtype":"m.text"},"ts":1402953283000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"s/master/origin/","msgtype":"m.text"},"ts":1402953292000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i have no experience of this, so my opinion is worthless, but what jgraham is saying makes more sense to me. :-)","msgtype":"m.text"},"ts":1402953324000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: For example https://github.com/html5lib/html5lib-tests/tree/newtemplatetest seems to be one of Hixie's branches","msgtype":"m.text"},"ts":1402953333000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and the green button to the left of the branch name creates a PR from that branch against master","msgtype":"m.text"},"ts":1402953352000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I've worked with several repos in the \"fork and PR\" model, and it's always worked well for me.","msgtype":"m.text"},"ts":1402953363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: Okay, so my difficulty may have mainly been from the non-master main branch.","msgtype":"m.text"},"ts":1402953377000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Stupid gh-pages bullshit.","msgtype":"m.text"},"ts":1402953381000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In Anolis, does <span> by itself do anything?","msgtype":"m.text"},"ts":1402953417000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If you then want to make a PR against another branch, you can do it using the \"pick a branch","msgtype":"m.text"},"ts":1402953421000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\" UI after you select \"create pull request\"","msgtype":"m.text"},"ts":1402953430000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"wished he knew that a few hours ago","msgtype":"m.emote"},"ts":1402953442000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Yeah, that UI *completely bugged out* when I last used it in the picture-element repo.","msgtype":"m.text"},"ts":1402953463000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: https://github.com/whatwg/streams/tree/bikeshed","msgtype":"m.text"},"ts":1402953500000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"index.html is the old Anolis source; output.html is the bikeshed output.","msgtype":"m.text"},"ts":1402953514000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"In the future will have Travis run bikeshed on gh-pages branch and not commit the output at all.","msgtype":"m.text"},"ts":1402953524000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Okay.","msgtype":"m.text"},"ts":1402953535000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Haven't started using implicit paragraphs yet but I think I got most other things like references and definitions updated.","msgtype":"m.text"},"ts":1402953562000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"https://rawgit.com/whatwg/streams/bikeshed/output.html is the rendered output","msgtype":"m.text"},"ts":1402953595000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: OH man, use them. They're so good!","msgtype":"m.text"},"ts":1402953601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: Markdown headings should work now.","msgtype":"m.text"},"ts":1402953607000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ooooh","msgtype":"m.text"},"ts":1402953614000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But they're still technically experimental.","msgtype":"m.text"},"ts":1402953617000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Have I updated the docs yet?  Hm...","msgtype":"m.text"},"ts":1402953628000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Can I use them for no-num no-toc or similar?","msgtype":"m.text"},"ts":1402953633000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"<span> is just a cross-ref source (<a>)","msgtype":"m.text"},"ts":1402953653000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in anolis","msgtype":"m.text"},"ts":1402953656000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I have not.","msgtype":"m.text"},"ts":1402953657000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: Not quite yet.","msgtype":"m.text"},"ts":1402953664000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: I have a shorthand for adding an id, but not for marking them no-num or no-toc.","msgtype":"m.text"},"ts":1402953675000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: Thanks.","msgtype":"m.text"},"ts":1402953684000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: any other markdown features to know about? E.g. links?","msgtype":"m.text"},"ts":1402953765000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: No inline markdown yet.","msgtype":"m.text"},"ts":1402953774000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Still slightly unsure if I want to do them or not.","msgtype":"m.text"},"ts":1402953781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ya","msgtype":"m.text"},"ts":1402953786000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"But code blocks work.","msgtype":"m.text"},"ts":1402953791000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And I'm working on lists.","msgtype":"m.text"},"ts":1402953795000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oooh","msgtype":"m.text"},"ts":1402953799000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"fenced code blocks? dare i ask, with syntax highlighting??","msgtype":"m.text"},"ts":1402953814000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Plan to add syntax highlighting to code blocks a la gfm","msgtype":"m.text"},"ts":1402953814000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yessss will make these examples so much better","msgtype":"m.text"},"ts":1402953850000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, I haven't added the code block support quite yet!","msgtype":"m.text"},"ts":1402953854000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'll do that today, it's easy.","msgtype":"m.text"},"ts":1402953863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok so now that i have an html parser i need to figure out what features i need in my pipeline","msgtype":"m.text"},"ts":1402953957000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: what does bikeshed do that's critical?","msgtype":"m.text"},"ts":1402953964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Biggest one is cross-spec cross-references.","msgtype":"m.text"},"ts":1402953976000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok, got that one","msgtype":"m.text"},"ts":1402953982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"outline, also","msgtype":"m.text"},"ts":1402953983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Totally automagic unless there's a conflict.","msgtype":"m.text"},"ts":1402953987000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"not so worried about the magic aspect, i like being explicit","msgtype":"m.text"},"ts":1402954002000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Bleh, okay.","msgtype":"m.text"},"ts":1402954007000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Railroad diagrams seem to be a lot of people's favorite feature. ^_^","msgtype":"m.text"},"ts":1402954026000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i also need spec splitting, and back-references from <dfn>","msgtype":"m.text"},"ts":1402954031000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"IDL auto-markup, too.","msgtype":"m.text"},"ts":1402954044000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(That is, inserting <dfn> or <a>, as appropriate, on all the things in an IDL block.)","msgtype":"m.text"},"ts":1402954061000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1402954084000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'll just stick to using <span>s for now","msgtype":"m.text"},"ts":1402954094000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i need to get this up and running before i start making it clever :-)","msgtype":"m.text"},"ts":1402954104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, those were all nice-to-haves that I added later.","msgtype":"m.text"},"ts":1402954131000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"cross-spec refs were the actual reason I started Bikeshed.","msgtype":"m.text"},"ts":1402954142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"adds that to the \"v2\" list","msgtype":"m.emote"},"ts":1402954163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: When I do \"<dfn>Some term</dfn> means ...\" at the start of a paragraph, it gets capitalized in the index, which seems silly.","msgtype":"m.text"},"ts":1402955095000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: You can manually specify the linking test with title='', just like Anolis.","msgtype":"m.text"},"ts":1402955124000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't want to tweak any capitalization normally, as that will often be wrong.","msgtype":"m.text"},"ts":1402955148000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"niiice","msgtype":"m.text"},"ts":1402955199000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: Is your definition of \"throw\" supposed to be the same as WebIDL's, or something different?","msgtype":"m.text"},"ts":1402955470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"annevk: Hmmmm, the version of DOM on GitHub is different from the version on whatwg.org.  Where's the canonical source?","msgtype":"m.text"},"ts":1402955799000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is going to stop working on Bikeshedding this until figuring this out, in case he has to redo anything.","msgtype":"m.emote"},"ts":1402955818000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic: So it sounds like you were encountering unicode errors in Bikeshed?","msgtype":"m.text"},"ts":1402956569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's very strange, because unicode *definitely* works when run on linux and mac.","msgtype":"m.text"},"ts":1402956591000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So there's something wrong with your setup on Windows that is screwing things up.","msgtype":"m.text"},"ts":1402956602000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I was actually using just the curl version","msgtype":"m.text"},"ts":1402956700000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"albeit, via Windows curl...","msgtype":"m.text"},"ts":1402956705000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"There's something getting fucked up in the middle, then.","msgtype":"m.text"},"ts":1402956717000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmmmm","msgtype":"m.text"},"ts":1402956719000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(The apostrophe thing is because Bikeshed automagically converts apostrophes to curly aposes when it can.)","msgtype":"m.text"},"ts":1402956750000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Totally willing to believe it's Windows' fault","msgtype":"m.text"},"ts":1402956751000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"well, it shouldn't do that inside comments ;)","msgtype":"m.text"},"ts":1402956762000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Possibly, but it's done as a source-level hack, before parsing occurs.","msgtype":"m.text"},"ts":1402956786000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And comments are stripped out, too, so shrug.","msgtype":"m.text"},"ts":1402956792000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"close-quote-as-apostrophe is terrible","msgtype":"m.text"},"ts":1402958293000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Tell that to people who care about typography.","msgtype":"m.text"},"ts":1402958319000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"quotes are quotes, apostrophes are apostrophes, and ' is apostrophe","msgtype":"m.text"},"ts":1402958348000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Or a quote.","msgtype":"m.text"},"ts":1402958357000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You know, depending.","msgtype":"m.text"},"ts":1402958361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"close-single-quote is a quote; using it as an apostrophe is just making *it* ambiguous too","msgtype":"m.text"},"ts":1402958383000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's absurd that unicode introduced a set of characters that are unambiguously quotes, then proceeded to recommend that everyone use them as ... apostrophes","msgtype":"m.text"},"ts":1402958516000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Unicode defines it as the preferred form.","msgtype":"m.text"},"ts":1402958522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So shrug.","msgtype":"m.text"},"ts":1402958526000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: bad security cert on https://resources.whatwg.org/logo-streams.svg ?","msgtype":"m.text"},"ts":1402958800000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"If you follow the link, there's a server error anyway.","msgtype":"m.text"},"ts":1402958826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i was too scared of the hax0rs","msgtype":"m.text"},"ts":1402958867000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"My Travis auto-build is working pretty awesomely though","msgtype":"m.text"},"ts":1402958902000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: there's no cert at all, is there?","msgtype":"m.text"},"ts":1402958920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: it says there's one issued to sni.dreamhost.com","msgtype":"m.text"},"ts":1402958940000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"odd","msgtype":"m.text"},"ts":1402958945000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm surprised there's even an https server at that domain","msgtype":"m.text"},"ts":1402958954000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I kind of thought we fixed this somewhat recently and got resources working over https","msgtype":"m.text"},"ts":1402958954000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1402958956000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course there is","msgtype":"m.text"},"ts":1402958958000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's the same IP as whatwg.org","msgtype":"m.text"},"ts":1402958961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we got a cert for www.whatwg.org for one year","msgtype":"m.text"},"ts":1402958975000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"gtg grab food before kitchen closes, bbiab","msgtype":"m.text"},"ts":1402958977000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"missing intermediate CAs?","msgtype":"m.text"},"ts":1402958988000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but didn't get any other certs","msgtype":"m.text"},"ts":1402958998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i don't expect to renew the one in one year, either, given how much of a pain that was","msgtype":"m.text"},"ts":1402959007000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if anyone wants to take charge on this, be my guest :-)","msgtype":"m.text"},"ts":1402959019000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's pretty simple, but it's definitely lame to have to pay the SSL Tax, heh","msgtype":"m.text"},"ts":1402959047000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i found some free provider","msgtype":"m.text"},"ts":1402959103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the only free certificate providers i tried were a huge pain in the ass","msgtype":"m.text"},"ts":1402959125000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"see above. :-)","msgtype":"m.text"},"ts":1402959135000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but that's the fault of the shtity provider","msgtype":"m.text"},"ts":1402959146000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"also shitty","msgtype":"m.text"},"ts":1402959148000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think the one I tried wanted users to create client certificates to log in and didn't have passwords at all, which is a nice option but given the actual level of security certs provide, absurd to require","msgtype":"m.text"},"ts":1402959206000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"yep, that's the one","msgtype":"m.text"},"ts":1402959254000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah. better off just paying the $20 or whatever on a real provider","msgtype":"m.text"},"ts":1402959287000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"send me the $20 and i'll get right on that :-)","msgtype":"m.text"},"ts":1402959305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm already paying plenty to actually host the server","msgtype":"m.text"},"ts":1402959317000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that seems to me to have a higher benefit-per-dollar ratio","msgtype":"m.text"},"ts":1402959326000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my SSL cert off of godaddy was $13/year for a 5-year","msgtype":"m.text"},"ts":1402959371000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(single domain, not wildcard; those are the ones they want stupid money for)","msgtype":"m.text"},"ts":1402959396000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"mumbles something about \".\" and \"..\" messing up his \"is this directory empty\" logic","msgtype":"m.emote"},"ts":1402959401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"given how many domains whatwg.org has, it might be best to go wildcard","msgtype":"m.text"},"ts":1402959417000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course, the \"xhr.spec.whatwg.org\" hostname layout will screw you there, too","msgtype":"m.text"},"ts":1402959459000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"never use hostnames more than one deep","msgtype":"m.text"},"ts":1402959470000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's not really clear to me why we care about encryption here anyway","msgtype":"m.text"},"ts":1402959484000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're specs","msgtype":"m.text"},"ts":1402959486000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we _want_ people to read them","msgtype":"m.text"},"ts":1402959497000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and it's not like some encryption is going to stop people from inserting random crap into them","msgtype":"m.text"},"ts":1402959516000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the w3c already does that in broad daylight","msgtype":"m.text"},"ts":1402959521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh godaddy wants $300/year for wildcard","msgtype":"m.text"},"ts":1402959525000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(but they also want $70/year for regular--you have to search out coupon codes to get the real prices, I guess there's no avoiding some form of stupid crap)","msgtype":"m.text"},"ts":1402959561000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which is probably why I renewed for 5 years, I probably found a good coupon (also it means I don't have to screw with it for a long time)","msgtype":"m.text"},"ts":1402959600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i suppose it's unlikely that somebody would bother initiating an MITM attack on whatwg.org that randomly changes the word \"must\" to \"should\"","msgtype":"m.text"},"ts":1402959652000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not only is it unlikely, it'd be pretty hilarious","msgtype":"m.text"},"ts":1402959672000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1402960414000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"doing those commits and stuff seems to have removed some of the changes from my local copy","msgtype":"m.text"},"ts":1402960426000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: is there some way to fetch all the changes back somehow?","msgtype":"m.text"},"ts":1402960437000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not sure i even know what question i should be asking","msgtype":"m.text"},"ts":1402960448000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: You probably ruined everything at some point, so... no.","msgtype":"m.text"},"ts":1402960470000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But... maybe.","msgtype":"m.text"},"ts":1402960473000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Probably no.","msgtype":"m.text"},"ts":1402960480000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it ssays i'm \"ahead by two commits\"","msgtype":"m.text"},"ts":1402960496000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is there some way to see what those are?","msgtype":"m.text"},"ts":1402960501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(\"it\" being sgit status)","msgtype":"m.text"},"ts":1402960511000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git","msgtype":"m.text"},"ts":1402960514000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That means you've got two commits more than your remote repo.","msgtype":"m.text"},"ts":1402960522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"git log @{u}..","msgtype":"m.text"},"ts":1402960537000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have no idea what that means.","msgtype":"m.text"},"ts":1402960552000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"@{u} is short for @{upstream}","msgtype":"m.text"},"ts":1402960553000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is the upstream branch that the current branch is tracking","msgtype":"m.text"},"ts":1402960570000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do i get a diff though?","msgtype":"m.text"},"ts":1402960572000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git dif @{u}..","msgtype":"m.text"},"ts":1402960584000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*diff","msgtype":"m.text"},"ts":1402960587000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"that didn't show me anything","msgtype":"m.text"},"ts":1402960590000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i tried that)","msgtype":"m.text"},"ts":1402960592000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the log gives two checkins from march","msgtype":"m.text"},"ts":1402960621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which seems unlikely?","msgtype":"m.text"},"ts":1402960624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well what does git show HEAD show?","msgtype":"m.text"},"ts":1402960625000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it gives a commit id","msgtype":"m.text"},"ts":1402960649000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and a couple of merge ids","msgtype":"m.text"},"ts":1402960655000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then says me, and march","msgtype":"m.text"},"ts":1402960662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no idea what to do with that","msgtype":"m.text"},"ts":1402960672000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You have a merge in your history? That sounds pretty odd","msgtype":"m.text"},"ts":1402960698000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's the way that git diff gives no content that baffles me","msgtype":"m.text"},"ts":1402960772000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what is the git diff command you're using?","msgtype":"m.text"},"ts":1402960789000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"just git diff BASE HEAD?","msgtype":"m.text"},"ts":1402960799000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"git diff <blabla> where blabla is the id of any of the last three checkins in git log","msgtype":"m.text"},"ts":1402960820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git diff BASE HEAD says \"fatal: ambiguous argument 'BASE': unknown revision or path not in the working tree\"","msgtype":"m.text"},"ts":1402960840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I should have said <BASE>","msgtype":"m.text"},"ts":1402960857000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and <HEAD>, like, the base revision and the head revision you want to check against it","msgtype":"m.text"},"ts":1402960878000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"assuming these commits were just me messing about, and are in fact empty","msgtype":"m.text"},"ts":1402960982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: If it's a merge commit and there are no conflicts there wouldn't be any","msgtype":"m.text"},"ts":1402960983000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do i throw them away and just be at tip of tree?","msgtype":"m.text"},"ts":1402960994000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i just want to be at whatever html5lib is, then i want to pull in all my changes i uploaded earlier","msgtype":"m.text"},"ts":1402961010000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<Hixie> the w3c already does that in broad daylight // literal lol'ing happened","msgtype":"m.text"},"ts":1402961033000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hixie: You have just seperated out all your changes into seperate branches","msgtype":"m.text"},"ts":1402961160000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1402961168000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's not terribly easy to get into a state where you have the changes from all of those branches at the same time","msgtype":"m.text"},"ts":1402961219000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I mean you can","msgtype":"m.text"},"ts":1402961230000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But you probably don't want to","msgtype":"m.text"},"ts":1402961237000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"my code won't compile until i do...","msgtype":"m.text"},"ts":1402961243000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, it'll compile, but it won't pass its tests","msgtype":"m.text"},"ts":1402961252000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You really want to wait until they're accepted, then just pull the main repo again.","msgtype":"m.text"},"ts":1402961272000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That'll have everything in it at that point.","msgtype":"m.text"},"ts":1402961280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i really want to run my code right now :-)","msgtype":"m.text"},"ts":1402961285000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i presumably have these branches locally","msgtype":"m.text"},"ts":1402961310000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i wonder if i can stash each one and pop it on my main branch","msgtype":"m.text"},"ts":1402961325000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Nothing to stash, as they're all committed up.","msgtype":"m.text"},"ts":1402961338000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can make a separate branch, rebase all the other branches over it. That might work?","msgtype":"m.text"},"ts":1402961357000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or just merge them all, possibly simpler.","msgtype":"m.text"},"ts":1402961367000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Merge on a separate branch.)","msgtype":"m.text"},"ts":1402961376000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can make a branch and cherry-pick all the changes onto it","msgtype":"m.text"},"ts":1402961381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"no idea what \"rebase\" means, but ok?","msgtype":"m.text"},"ts":1402961382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"rebase is fun, you'll love it","msgtype":"m.text"},"ts":1402961390000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"Don't try to use rebase","msgtype":"m.text"},"ts":1402961391000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"haha","msgtype":"m.text"},"ts":1402961397000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"aw.","msgtype":"m.text"},"ts":1402961398000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"It's an awesome tool, but not what you want in this case","msgtype":"m.text"},"ts":1402961408000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"how do i find a list of all my branches?","msgtype":"m.text"},"ts":1402961412000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"git branch","msgtype":"m.text"},"ts":1402961416000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"then create a new branch","msgtype":"m.text"},"ts":1402961424000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git branch -a or -v, to list branches","msgtype":"m.text"},"ts":1402961432000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"git checkout -b all_hixie_changes origin/master","msgtype":"m.text"},"ts":1402961439000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Just git branch in this case","msgtype":"m.text"},"ts":1402961450000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"ah I guess branch on its own does list them, without remotes","msgtype":"m.text"},"ts":1402961469000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(the second argument to git checkout means that the branch starts off at origin/master)","msgtype":"m.text"},"ts":1402961486000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"And then for each branch that you have created","msgtype":"m.text"},"ts":1402961498000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"git cherry-pick my_other_branch_name","msgtype":"m.text"},"ts":1402961509000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which will take the topmost commit from the other branch and put it onto your combined branch","msgtype":"m.text"},"ts":1402961529000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"cool, thanks","msgtype":"m.text"},"ts":1402961536000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I am assuming that there is only one commit on each of the other branches","msgtype":"m.text"},"ts":1402961542000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"let's assume that for now","msgtype":"m.text"},"ts":1402961550000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"-> slep","msgtype":"m.emote"},"ts":1402961576000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*sleep","msgtype":"m.text"},"ts":1402961578000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"nn!","msgtype":"m.text"},"ts":1402961592000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I strongly recommend reading something that explains the git data model","msgtype":"m.text"},"ts":1402961592000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and thanks for the help","msgtype":"m.text"},"ts":1402961596000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the data model isn't really the source of my confusion","msgtype":"m.text"},"ts":1402961606000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Once you basically understand that everything becomes much simpler","msgtype":"m.text"},"ts":1402961607000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the workflow?","msgtype":"m.text"},"ts":1402961617000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"i mean, i get the model, it's the just UI for manipulating the model makes no sense to me","msgtype":"m.text"},"ts":1402961620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1402961626000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"My experience is once you understand the data model the manipulation of it makes a lot more sense","msgtype":"m.text"},"ts":1402961652000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you use IDs here, branches there, weird punctuation in the other place, or arguments, all depending on... some black magic logic","msgtype":"m.text"},"ts":1402961653000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean why \"origin\" but \"@{u}\" ?","msgtype":"m.text"},"ts":1402961669000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://wildlyinaccurate.com/a-hackers-guide-to-git","msgtype":"m.text"},"ts":1402961683000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"instead of @{o} and @{u} or origin and upstream?","msgtype":"m.text"},"ts":1402961683000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Probably not the best guide, but I saw it recently and it","msgtype":"m.text"},"ts":1402961698000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"'s not inaccurate","msgtype":"m.text"},"ts":1402961702000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and fundamentally imho it's just over-engineered. but then i don't want distributed version control...","msgtype":"m.text"},"ts":1402961719000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have no idea what @{u} is and i've used git for a couple years now","msgtype":"m.text"},"ts":1402961776000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm not sure what \"@{u}\" is supposed to be either, and I'm pretty good with git","msgtype":"m.text"},"ts":1402961778000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"there are tons of things you just don't need to know in git","msgtype":"m.text"},"ts":1402961787000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that's pretty much the problem","msgtype":"m.text"},"ts":1402961800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and a pretty clear sign of something being over-engineered","msgtype":"m.text"},"ts":1402961813000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"personally i think _svn_ is too complicated","msgtype":"m.text"},"ts":1402961820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"It's really not over-engineered","msgtype":"m.text"},"ts":1402961821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"If anything it's too simple","msgtype":"m.text"},"ts":1402961829000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Hixie: you can use names of branches as aliases for the commit at the top of the branch","msgtype":"m.text"},"ts":1402961832000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: likewise tags","msgtype":"m.text"},"ts":1402961840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Most of the things that confuse people are because the data model is poking through","msgtype":"m.text"},"ts":1402961849000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"there are definitely things which are weird and unobvious which suggests questionable design to me","msgtype":"m.text"},"ts":1402961862000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"git's data model is /really, really, really/ simple. And arguably the problems are lack of absractions on it.","msgtype":"m.text"},"ts":1402961869000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"add, rm, commit, rebase, push, pull, checkout, remote cherry-pick, format-patch, am, log, and maybe rev-parse for scripting, and not necessarily in that order","msgtype":"m.text"},"ts":1402961882000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"most of those commands are simple and self-explanatory","msgtype":"m.text"},"ts":1402961892000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"e.g. origin/master is literally the path .git/refs/origin/master","msgtype":"m.text"},"ts":1402961898000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which is a file containing a SHA1","msgtype":"m.text"},"ts":1402961908000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Which points to the head of the origin/master branch","msgtype":"m.text"},"ts":1402961928000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp: ref-log is also useful","msgtype":"m.text"},"ts":1402961966000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i just want a remote file system that's versioned","msgtype":"m.text"},"ts":1402961967000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no branches, tags, local repos, etc","msgtype":"m.text"},"ts":1402961975000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"different workflows need different thing","msgtype":"m.text"},"ts":1402961991000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just a way to commit, a way to diff, a way to revert","msgtype":"m.text"},"ts":1402961992000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, but that's not what we want in order to share work with you","msgtype":"m.text"},"ts":1402961995000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"i've never once needed format-patch","msgtype":"m.text"},"ts":1402962000000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm not really looking to share work with anyone :-P","msgtype":"m.text"},"ts":1402962012000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well here you are","msgtype":"m.text"},"ts":1402962025000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But your needs are strange because you usually work alone","msgtype":"m.text"},"ts":1402962030000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"format-patch made working on mozilla-central from git a lot easier","msgtype":"m.text"},"ts":1402962031000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"That is very much the 0.1% case","msgtype":"m.text"},"ts":1402962039000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"caitp: moz-git-tools","msgtype":"m.text"},"ts":1402962047000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"this was from a while back","msgtype":"m.text"},"ts":1402962059000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"the whole \"patch sets to mailing lists\" workflow seems pretty terrible to me, heh","msgtype":"m.text"},"ts":1402962059000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Yeah, it is","msgtype":"m.text"},"ts":1402962067000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"The whole patches attached to bugzilla workflow is also terrible","msgtype":"m.text"},"ts":1402962079000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"the #1 biggest thing open source has gained from git is being able to send patches *without* having to send patches","msgtype":"m.text"},"ts":1402962083000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think people working alone is more like the 99.999% case, but sure","msgtype":"m.text"},"ts":1402962095000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i agree that other people have other needs","msgtype":"m.text"},"ts":1402962104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in some ways, I think bugzilla's model kind of beats rietveld. _.","msgtype":"m.text"},"ts":1402962107000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"fork github project, make changes in a branch, send a PR, and the whole \"sending a patch\" thing is invisible--which has lowered the bar for sending patches massively","msgtype":"m.text"},"ts":1402962122000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"alright, my tests pass again","msgtype":"m.text"},"ts":1402962150000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"excellent","msgtype":"m.text"},"ts":1402962152000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"horray","msgtype":"m.text"},"ts":1402962158000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"jgraham: thanks again, btw, especially for putting up with my whining","msgtype":"m.text"},"ts":1402962162000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zewt: Yeah, it's pretty amazing that forms the central value proposition of github","msgtype":"m.text"},"ts":1402962178000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Especially when their implementation is so halfassed","msgtype":"m.text"},"ts":1402962189000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: thanks for putting up with Hixie's whining so I could go and drink cider","msgtype":"m.text"},"ts":1402962223000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hixie: np","msgtype":"m.text"},"ts":1402962223000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"oddly i tend to make a comparison between git and twitter--twitter has essentially zeroed the cost for sending a message to someone else (even if those messages are excessively limited)","msgtype":"m.text"},"ts":1402962233000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gsnedders: https://github.com/html5lib/html5lib-tests/branches","msgtype":"m.text"},"ts":1402962238000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: aye, I saw in the backlog","msgtype":"m.text"},"ts":1402962245000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"tomorrow's problem, assuming I don't kill someone and end up in jail during driving lesson :)","msgtype":"m.text"},"ts":1402962263000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: I doubt the cider will help</protip>","msgtype":"m.text"},"ts":1402962284000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"really is going to sleep now","msgtype":"m.emote"},"ts":1402962293000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: roger, good luck","msgtype":"m.text"},"ts":1402962307000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ooh, yeah, \"Hacker's Guide to Git\" works quite well as an explanation of the data model.","msgtype":"m.text"},"ts":1402962314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: I'm pretty sure I can cope with one bottle ten hours before.","msgtype":"m.text"},"ts":1402962330000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"git is one of those things that you sort of have to both 1: read a bunch and then 2: suck up and use it for a couple months to get past the curve","msgtype":"m.text"},"ts":1402962383000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"which isn't an indicator of great design, but worth it in its case","msgtype":"m.text"},"ts":1402962401000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I think it's easier if you didn't learn a previous VCS.","msgtype":"m.text"},"ts":1402962513000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But yeah, intuitively getting what commits/tags/branches represent, and how they're different from files and folders, is a little hard.","msgtype":"m.text"},"ts":1402962542000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"rebasing can be a bit tricky too","msgtype":"m.text"},"ts":1402962557000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"most of git makes sense if you understand the underlying model","msgtype":"m.text"},"ts":1402962565000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Super-easy once you understand cherrypicking.","msgtype":"m.text"},"ts":1402962569000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but only if you understand the underlying model","msgtype":"m.text"},"ts":1402962573000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Because rebase is just \"automatically cherry-pick everything from the common ancestor to here for me\".","msgtype":"m.text"},"ts":1402962582000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"what helped me a lot was to peek into .git while it was rebasing; once you see a directory with a couple dozen numbered patch files, it's pretty clear what it's doing","msgtype":"m.text"},"ts":1402962586000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i guess one of the weaker points is force pushing","msgtype":"m.text"},"ts":1402962682000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"because explaining it goes like this: \"you should never ever ever do this, except when you should\"","msgtype":"m.text"},"ts":1402962702000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"that might be more due to the github pull request model that was layered on top (where you have to force push over the PR branch to update it); in the original linux kernel model maybe there was no normal workflow reason to ever do it","msgtype":"m.text"},"ts":1402962766000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you should always assume others have cloned your repo and have things based on that branch","msgtype":"m.text"},"ts":1402962815000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hence getting rid of that is bad","msgtype":"m.text"},"ts":1402962820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"What *&is* a good reason to force push?","msgtype":"m.text"},"ts":1402962954000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I've never had to do so.","msgtype":"m.text"},"ts":1402962958000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A good reason? You committed your password to the repo and want to entirely remove it from history.","msgtype":"m.text"},"ts":1402963003000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"However, note anyone who already has a clone still has it","msgtype":"m.text"},"ts":1402963012000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Right, you can't amend othe rpeople's histories.","msgtype":"m.text"},"ts":1402963035000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The typical case in the GitHub case is when rebasing a PR","msgtype":"m.text"},"ts":1402963060000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]