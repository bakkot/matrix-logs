[
{"content":{"body":"gah, and this same page is navigating on middle click, so when I try to open new tabs from search results it eats the search result window","msgtype":"m.text"},"ts":1401063036000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"EVILLL!","msgtype":"m.text"},"ts":1401063285000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"\"sloppy\"","msgtype":"m.text"},"ts":1401063307000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie: fyi the w3c bugzilla now supports private tags. Which apparently are just like keyboards except that they're private, so nobody else can see them and no bugmail notification gets sent went you add them","msgtype":"m.text"},"ts":1401072455000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"*keywords","msgtype":"m.text"},"ts":1401072467000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: however I can't find anything in the UI that exposes them","msgtype":"m.text"},"ts":1401072497000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Hixie: but doing ?quicksearch=tag:TAGNAME will show them","msgtype":"m.text"},"ts":1401072529000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup, MikeSmith I use that on mozilla bugzilla to cater for some of my bugs list with categories","msgtype":"m.text"},"ts":1401072902000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"the search can't be shared. as the tag is private it will have no effect for someone else","msgtype":"m.text"},"ts":1401072930000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: yeah that much I gleaned from the docs, but nowhere in the UI can a find a link to my tags","msgtype":"m.text"},"ts":1401073003000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: docs seem to indicate that the tags you create should show up in every page footer, where the saved searches show up","msgtype":"m.text"},"ts":1401073052000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: but I see nothing there","msgtype":"m.text"},"ts":1401073058000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the tags are not visible for me too on Mozilla, just the feature for adding the tag.","msgtype":"m.text"},"ts":1401073088000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: ah OK, that's good  :(","msgtype":"m.text"},"ts":1401073109000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: good that it's not just me but sad for you","msgtype":"m.text"},"ts":1401073137000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1401073174000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: I was worried that it might be a results of w3c bugzilla using custom page templates or something","msgtype":"m.text"},"ts":1401073174000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"another thing which is practical in the mozilla bugzilla is the tag on specific comments","msgtype":"m.text"},"ts":1401073201000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"which in this case is public and shared","msgtype":"m.text"},"ts":1401073209000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"and visible","msgtype":"m.text"},"ts":1401073212000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"we used it for making a wrapper selecting some specific comments","msgtype":"m.text"},"ts":1401073430000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"The wrapper: http://webcompat.com/simplebug/index.html#mozilla/843126","msgtype":"m.text"},"ts":1401073436000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"the bug https://bugzilla.mozilla.org/show_bug.cgi?id=843126","msgtype":"m.text"},"ts":1401073451000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"the comment with the tag","msgtype":"m.text"},"ts":1401073472000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/show_bug.cgi?id=843126#c7","msgtype":"m.text"},"ts":1401073472000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"ah interesting the tags are visible only if logged in :)","msgtype":"m.text"},"ts":1401073529000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"http://www.la-grange.net/2014/05/26/tagged-bug","msgtype":"m.text"},"ts":1401073622000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: http://www.bugzilla.org/releases/4.4.4/release-notes.html#v44_feat_bug_tags ーNote that when you add a new tag, no saved search based on this tag is created anymore, as you can easily create it yourself if you really need it.","msgtype":"m.text"},"ts":1401073737000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: tag on specific comments?","msgtype":"m.text"},"ts":1401073770000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1401073778000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"checks karlcow URLs","msgtype":"m.emote"},"ts":1401073785000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"oh wow","msgtype":"m.text"},"ts":1401073803000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno if we have that comment-tagging thing yet in our 4.4.2 instance at w3c, do we?","msgtype":"m.text"},"ts":1401073839000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that would be great for tagging all the noise comments in bugs so that they don't show up","msgtype":"m.text"},"ts":1401073882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or conversely for tagging just all the useful comments","msgtype":"m.text"},"ts":1401073904000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hmm but only if it actually shows/hides","msgtype":"m.text"},"ts":1401073949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: I don't see what actually happens when I click any of the \"Comment Tags:\" links at https://bugzilla.mozilla.org/show_bug.cgi?id=843126","msgtype":"m.text"},"ts":1401074007000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it seems not in W3C bugzilla. In Mozilla bugzilla, I have in the prefs a \"Enable tags for bugs \"","msgtype":"m.text"},"ts":1401074021000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1401074079000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nothing happens it just tag the comments. The way we used is to cherry-pick some comments for using in another apps.","msgtype":"m.text"},"ts":1401074079000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"ah OK","msgtype":"m.text"},"ts":1401074105000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"You could imagine for example, a spec with links to the issues and the described resolution of an issue is in a specific comment which is automatically extracted because it carries a specific tag.","msgtype":"m.text"},"ts":1401074143000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1401074320000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"there are many cases already where I could have used this","msgtype":"m.text"},"ts":1401074344000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"karlcow: but the biggest case I can think of is for auto-generating a Disposition of Comments report for last call","msgtype":"m.text"},"ts":1401074390000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"indeed","msgtype":"m.text"},"ts":1401074415000,"senderName":"karlcow","senderId":"karlcow@irc"},
{"content":{"body":"karlcow: so I can tag a particular comment as the resolution for the bug, and maybe also some other comment as a statement from the bug report that they're satisfied with the resolution","msgtype":"m.text"},"ts":1401074468000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: reminder http://krijnhoetmer.nl/irc-logs/whatwg/20140505#l-608","msgtype":"m.text"},"ts":1401090790000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"MikeSmith: so if Glenn Adams keeps doing that, I think we should just have a WHATWG XMLHttpRequest component","msgtype":"m.text"},"ts":1401092844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: the second link now works","msgtype":"m.text"},"ts":1401092890000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: again, note that these tests are not necessarily up to date","msgtype":"m.text"},"ts":1401092903000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: i know, i ended up writing my own scripts that generated e.g. https://github.com/mathiasbynens/windows-1252/blob/c234dee4d60da023542cad4d8684428e47692ae3/tests/tests.js#L47-L48","msgtype":"m.text"},"ts":1401093343000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"but still, nice – thanks!","msgtype":"m.text"},"ts":1401093360000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: that looks good, I guess you also want to have random order and such of the bytes","msgtype":"m.text"},"ts":1401093393000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: and boundary checks where it switches from outputting bytes / code points to reading from a table first","msgtype":"m.text"},"ts":1401093425000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: and then ideally submit them to the platform-tests initiative","msgtype":"m.text"},"ts":1401093456000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://tech.oimou.com/post/86713933184/xmlhttprequest-responseurl seems like there's a lot of people wanting to detect redirects in XMLHttpRequest","msgtype":"m.text"},"ts":1401093630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I could try pointing them to http://fetch.spec.whatwg.org/#atomic-http-redirect-handling","msgtype":"m.text"},"ts":1401093654000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: remind me what Glenn did?","msgtype":"m.text"},"ts":1401093668000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: ... this time","msgtype":"m.text"},"ts":1401093672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mathiasbynens link?","msgtype":"m.text"},"ts":1401093692000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith, reopen bugs because they were only fixed in the whatwg spec","msgtype":"m.text"},"ts":1401093693000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=25540#c3","msgtype":"m.text"},"ts":1401093698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1401093699000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well that's just obnoxious","msgtype":"m.text"},"ts":1401093716000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"You remember who you're talking about, right?","msgtype":"m.text"},"ts":1401093733000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wait.. the normal answer would be \"me\"","msgtype":"m.text"},"ts":1401093788000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway yeah I'm happy to create an XHR component if needed","msgtype":"m.text"},"ts":1401093812000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I'm also happy to remind Glenn that the W3C XHR editors are on record as claiming that they are just publishing a \"snapshot\" of the upstream XHR spec","msgtype":"m.text"},"ts":1401093854000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"unless the tune has changed since the last time I was paying attention","msgtype":"m.text"},"ts":1401093870000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I suspect a new component would waste minimal time","msgtype":"m.text"},"ts":1401093907000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1401093941000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"well if/when annevk wants it actually created, I'll make it. I seem to remember that last time somebody suggested we create one, annevk said he didn't want it created (yet)","msgtype":"m.text"},"ts":1401094009000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: lets see how it plays out I guess","msgtype":"m.text"},"ts":1401094049000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1401094059000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Somewhat surprising that the only noise online about the addition of XMLHttpRequest.prototype.responseURL is coming from Japan","msgtype":"m.text"},"ts":1401094171000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: you mean a link to the script that generated that test data? it’s not public (but i can make it public if you’d like)","msgtype":"m.text"},"ts":1401094178000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"foolip: thanks for the webvtt idl review & merge. that'ill make plh happy","msgtype":"m.text"},"ts":1401094187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"basically parses annevk’s index.txt files in the Encoding Standard, and then goes from there","msgtype":"m.text"},"ts":1401094203000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: why don't you use the JSON file?","msgtype":"m.text"},"ts":1401094227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the index files are normative, but the JSON file isn’t","msgtype":"m.text"},"ts":1401094265000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"darobin: you keep breaking threading","msgtype":"m.text"},"ts":1401094288000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: nah it's OK. I was just a bit confused. Trying to read several things at the same time..","msgtype":"m.text"},"ts":1401094292000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"mathiasbynens: except you probably know I generate the index files from the JSON :-)","msgtype":"m.text"},"ts":1401094315000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Maybe I should say the JSON file is normative? Hmm","msgtype":"m.text"},"ts":1401094333000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"http://utf-8.jp/ :-)","msgtype":"m.text"},"ts":1401094359000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: np","msgtype":"m.text"},"ts":1401094364000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"annevk: well, it would’ve helped me a tiny bit :)","msgtype":"m.text"},"ts":1401094415000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: you should have just trusted the json file despite not being normative :-P","msgtype":"m.text"},"ts":1401094579000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: NEVER!","msgtype":"m.text"},"ts":1401094708000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: huh?","msgtype":"m.text"},"ts":1401094713000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"darobin: your replies in the \"Re: Should minimal contentEditable default text input\" thread keep creating a new thread in Gmail","msgtype":"m.text"},"ts":1401094744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, I'm reyplying normally and I see them threaded here — Gmail bug?","msgtype":"m.text"},"ts":1401094768000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"(barring that, Thunderbird bug)","msgtype":"m.text"},"ts":1401094776000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"mathiasbynens: :-)","msgtype":"m.text"},"ts":1401094826000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"darobin: one or the other I guess","msgtype":"m.text"},"ts":1401094886000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: not sure how to resolve that, I'm taught not to have multiple normative formats","msgtype":"m.text"},"ts":1401094910000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just checked, the In-Reply-To header on my reply to you is correct, so GMail threading is trying to be overly smart","msgtype":"m.text"},"ts":1401094935000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"mathiasbynens: aah, I know, I'll say that the JSON one is non-normative but is also the source of the data, so if you can reverse engineer it, it's normative","msgtype":"m.text"},"ts":1401094937000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Email sucks. Film at 11.","msgtype":"m.text"},"ts":1401094944000,"senderName":"darobin","senderId":"darobin@irc"},
{"content":{"body":"mathiasbynens: as in, I'll explain more clearly that the reason it's non-normative is because I don't want to define two formats","msgtype":"m.text"},"ts":1401094957000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: and the other format one due to historical precedence","msgtype":"m.text"},"ts":1401094968000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Almost Normative™","msgtype":"m.text"},"ts":1401094977000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"Normative Enough For mathiasbynens","msgtype":"m.text"},"ts":1401095001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it’s fine really, both formats are easy to consume anyway","msgtype":"m.text"},"ts":1401095012000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"rfc6919 might be relevant here","msgtype":"m.text"},"ts":1401095037000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"if this were TC39 we’d just call it Annex B","msgtype":"m.text"},"ts":1401095057000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"annevk: why did you keep the from parameter in http://html5.org/tools/web-apps-tracker?from=8647 instead of to?","msgtype":"m.text"},"ts":1401096724000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"seems like an odd choice if it's only possible to show a single revision diff anyway","msgtype":"m.text"},"ts":1401096740000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: hadn't really thought about it much","msgtype":"m.text"},"ts":1401096802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I think ideally I just make the short URLs work","msgtype":"m.text"},"ts":1401096819000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: and no longer redirect to the longer form","msgtype":"m.text"},"ts":1401096826000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, that would work too","msgtype":"m.text"},"ts":1401098190000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: done","msgtype":"m.text"},"ts":1401099644000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: the short URL link is a bit useless now :)","msgtype":"m.text"},"ts":1401101727000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"oh, and yay \\o/","msgtype":"m.text"},"ts":1401101744000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: good point","msgtype":"m.text"},"ts":1401101881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I like how much this thing is simplified now","msgtype":"m.text"},"ts":1401102058000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: http://html5.org/r/8640 is a bit useless because it didn't touch source, did the old script show only revisions that did?","msgtype":"m.text"},"ts":1401102650000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I made a change to at least output the change message there","msgtype":"m.text"},"ts":1401102797000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: however, for the main page it would probably be good to filter them somehow","msgtype":"m.text"},"ts":1401102844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: git log -- source would be the command","msgtype":"m.text"},"ts":1401102896000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"maybe the \"--\" isn't necessary when you're doing it from a script","msgtype":"m.text"},"ts":1401102914000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: was just adding that","msgtype":"m.text"},"ts":1401102930000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: well the way I invoke git is kind of hacky","msgtype":"m.text"},"ts":1401102944000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: due to an old Python version","msgtype":"m.text"},"ts":1401102949000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"'Paths may need to be prefixed with \"-- \" to separate them from options or the revision range, when confusion arises.' is what the manpage says","msgtype":"m.text"},"ts":1401102952000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: https://github.com/whatwg/web-apps-tracker/commit/08e8fa780846f38cd29858e551ca0b7b8fb5b8dd","msgtype":"m.text"},"ts":1401103029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh, the person contributing patches for responseURL seems to be Japanese","msgtype":"m.text"},"ts":1401103767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cool, everything works now AFAICT. do you have the autoupdate set up?","msgtype":"m.text"},"ts":1401104483000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: yeah, via a push hook","msgtype":"m.text"},"ts":1401104708000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess at some point I could look into having the splitter using the same source for the spec so I don't have two copies","msgtype":"m.text"},"ts":1401104744000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Although Hixie seems to be building his own toolchain so maybe that'll just obsolete it","msgtype":"m.text"},"ts":1401104765000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: jtcranmer: maybe instead of domainToASCII and such we should have new Domain() or some such","msgtype":"m.text"},"ts":1401104920000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: to replace anolis, or just for splitting?","msgtype":"m.text"},"ts":1401104977000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I think both","msgtype":"m.text"},"ts":1401105005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip: I want to switch to Bikeshed personally at some point (Tab's tool)","msgtype":"m.text"},"ts":1401105029000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is that why recently when the spec loads it takes a second before the style is applied?","msgtype":"m.text"},"ts":1401105029000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"doing more with scripts?","msgtype":"m.text"},"ts":1401105051000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: I think that's Hixie experimenting with the style sheet, as far as I know the toolchain has not been changed","msgtype":"m.text"},"ts":1401105060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1401105066000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"foolip: no, I think the main idea was to have a faster version of what Anolis and the splitter are doing now","msgtype":"m.text"},"ts":1401105086000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: jtcranmer: it depends a bit as to what kind of things we're interested in exposing, TLDs, labels, effectiveTLDs, DNS queries?","msgtype":"m.text"},"ts":1401105157000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess DNS might be bad for privacy, although maybe that's exposed through timing already","msgtype":"m.text"},"ts":1401105190000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what do you mean by effective TLDs? would it just return the TLD for a given domain, or do something more clever based on https://www.publicsuffix.org/?","msgtype":"m.text"},"ts":1401105383000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"having those methods on URL (as it is now) seems more convenient in most cases i imagine","msgtype":"m.text"},"ts":1401105470000,"senderName":"mathiasbynens","senderId":"mathiasbynens@irc"},
{"content":{"body":"mathiasbynens: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=25865 for effective TLD","msgtype":"m.text"},"ts":1401105522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mathiasbynens: yeah I guess I should try to avoid churn as well; we can always layer these statics on a lower-level primitive later","msgtype":"m.text"},"ts":1401105557000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It'd be kinda cool if IDL had knowledge of window / document objects / script setting objects","msgtype":"m.text"},"ts":1401108851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Instead of something accepting a DOMString, you could have \"ToURL\" that'd do the ScalarValueString dance, but also parsing relative to the script settings object and just hand you the URL where you write the rest of the algorithm","msgtype":"m.text"},"ts":1401108900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And throw a TypeError if the URL parser returns failure","msgtype":"m.text"},"ts":1401108917000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: ^^","msgtype":"m.text"},"ts":1401109792000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Taking decisions away from specification authors seems like a good thing","msgtype":"m.text"},"ts":1401109806000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: maybe give a different box than \"Note\" for domintro?","msgtype":"m.text"},"ts":1401113643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: why does https://slightlyoff.github.io/ServiceWorker/spec/service_worker/ now render without style sheet?","msgtype":"m.text"},"ts":1401114679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: progress events seems like another case that'd be different between default() and fetch()","msgtype":"m.text"},"ts":1401115499000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: don't you have devtools you could use to find out what's preventing the stylesheet from loading ;-P","msgtype":"m.text"},"ts":1401115641000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"annevk: how so?","msgtype":"m.text"},"ts":1401116721000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no idea how XHR upload progress events should work otherwise","msgtype":"m.text"},"ts":1401116748000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Both fetch & default resolve after headers","msgtype":"m.text"},"ts":1401116796000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: *upload*","msgtype":"m.text"},"ts":1401116854000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: is the idea respondWith(event.default()) or just event.default() is the whole deal","msgtype":"m.text"},"ts":1401116877000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: in the latter case, should it return anything?","msgtype":"m.text"},"ts":1401116889000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's still passed to respondWith, so it can be used as a fallback to another thing","msgtype":"m.text"},"ts":1401116978000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so it's different from the default (not handling the event)","msgtype":"m.text"},"ts":1401117003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: bit confusing but okay","msgtype":"m.text"},"ts":1401117008000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: see http://jakearchibald.com/2014/service-worker-first-draft/#recovering-from-failure","msgtype":"m.text"},"ts":1401117031000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: I think event.default is a terrible API, that's why I keep trying to find ways not to have it :D","msgtype":"m.text"},"ts":1401117058000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/242#issuecomment-44197133","msgtype":"m.text"},"ts":1401117105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: anyway, upload progress events would get lost without it","msgtype":"m.text"},"ts":1401117122000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if request.body is a stream, wouldn't upload progress be based on the reading of that stream?","msgtype":"m.text"},"ts":1401117155000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"annevk: but yeah, if you consumed all of that stream in the SW, you'd get to 100% quickly","msgtype":"m.text"},"ts":1401117195000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: no, upload progress events are about transmitted bytes","msgtype":"m.text"},"ts":1401117203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"But it would work fine with fetch()","msgtype":"m.text"},"ts":1401117206000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: so e.g. if you have compression or some such that would matter","msgtype":"m.text"},"ts":1401117216000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: so it's up to the network layer and not up to request.body","msgtype":"m.text"},"ts":1401117243000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, need to look at the XHR spec more closely for that","msgtype":"m.text"},"ts":1401117254000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: and it wouldn't work fine with fetch(), since you've lost context at that point","msgtype":"m.text"},"ts":1401117259000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(well, I guess you haven't since you're reading that stream... however, we don't have streams, let alone streams that span realms)","msgtype":"m.text"},"ts":1401117313000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: can you add a ticket for that? (Sorry, bank holiday here so I'm not at laptop)","msgtype":"m.text"},"ts":1401117359000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: for which bit?","msgtype":"m.text"},"ts":1401117378000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: handling progress events","msgtype":"m.text"},"ts":1401117402000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: we could not have default() btw and just use a flag on the request object and keep track of magic request objects that way, but using a different method seems clearer","msgtype":"m.text"},"ts":1401117551000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"JakeA: https://github.com/slightlyoff/ServiceWorker/issues/289","msgtype":"m.text"},"ts":1401117556000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"How does one get notified on gist.github.com activity?","msgtype":"m.text"},"ts":1401117884000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: there's a watch button on repos","msgtype":"m.text"},"ts":1401117910000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: not on GitHubGist?","msgtype":"m.text"},"ts":1401117958000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ah sorry, not reading properly","msgtype":"m.text"},"ts":1401118572000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"SamB: any updates on https://github.com/whatwg/resources.whatwg.org/pull/1 ?","msgtype":"m.text"},"ts":1401119309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: hmm, perhaps I should look at fixing the bugs in rsvg/inkscape ...","msgtype":"m.text"},"ts":1401120664000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"or at least forwarding them to the respective upstreams","msgtype":"m.text"},"ts":1401120715000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"<SamB> annevk: hmm, perhaps I should look at fixing the bugs in rsvg/inkscape ...","msgtype":"m.text"},"ts":1401120886000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"<SamB> or at least forwarding them to the respective upstreams","msgtype":"m.text"},"ts":1401120887000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"SamB: yeah saw that","msgtype":"m.text"},"ts":1401120896000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wasn't sure","msgtype":"m.text"},"ts":1401120899000,"senderName":"SamB","senderId":"SamB@irc"},
{"content":{"body":"cool, logo licensing sorted","msgtype":"m.text"},"ts":1401122900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":" #omgomg Did we just land a specification for Element#closest in DOM? Like jQuery#closest a bit","msgtype":"m.text"},"ts":1401126184000,"senderName":"Krinkle","senderId":"Krinkle@irc"},
{"content":{"body":"Gist notifications were removed about 1.5 years ago and still haven't returned. Much rage.","msgtype":"m.text"},"ts":1401144784000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Also, yay, I have internet again!)","msgtype":"m.text"},"ts":1401144799000,"senderName":"Domenic","senderId":"Domenic@irc"}
]