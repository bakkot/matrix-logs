[
{"content":{"body":"notices that his text node coalescence thing totally breaks with foster parenting","msgtype":"m.emote"},"ts":1202690220000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"img src=x.svg is a canvas with x.svg drawn onto it","msgtype":"m.text"},"ts":1202692380000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"(ha ha)","msgtype":"m.text"},"ts":1202692381000,"senderName":"kig","senderId":"kig@irc"},
{"content":{"body":"Oh, and now the foster parenting breaks my previous mechanism for splitting the generic CDATA algorithm to work on tokens one at a time","msgtype":"m.text"},"ts":1202694480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"really doesn't like it :-(","msgtype":"m.emote"},"ts":1202694540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://parsetree.validator.nu/?doc=http://philip.html5.org/misc/fostered-adoption-2.html","msgtype":"m.text"},"ts":1202696280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"html5lib and Validator.nu don't match Firefox or Safari for that","msgtype":"m.text"},"ts":1202696281000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I don't know whether html5lib etc is implementing HTML5 non-buggily or not)","msgtype":"m.text"},"ts":1202696400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"just wants to decide that the fostering thing is broken so he can not bother implementing it","msgtype":"m.emote"},"ts":1202696401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie, do you still stand by https://bugzilla.mozilla.org/show_bug.cgi?id=54696#c13 ?","msgtype":"m.text"},"ts":1202696640000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, or do you think Mozilla's list-around-float behavior should just switch to match Safari and IE?","msgtype":"m.text"},"ts":1202696641000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, (I'd note that float-displace seems to have disappeared from all CSS drafts...)","msgtype":"m.text"},"ts":1202696642000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"dbaron: if you care: http://lists.kde.org/?l=kde-commits&m=119170968024486&w=2","msgtype":"m.text"},"ts":1202696760000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"IOW, at least some people rely on something like that.","msgtype":"m.text"},"ts":1202696820000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Not sure it's the same thing, actually, but perhaps the testcase in http://bugs.kde.org/show_bug.cgi?id=150474#c2 will tell you something. (Could just be a similar-sounding bug, I don't know the rendering/CSS stuff)","msgtype":"m.text"},"ts":1202696940000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"dbaron: what do the other two browsers do?","msgtype":"m.text"},"ts":1202703060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, other browsers make the bullets overlap the floats","msgtype":"m.text"},"ts":1202703061000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, the bullet is always displaced from the first line by border+padding","msgtype":"m.text"},"ts":1202703062000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, but the line isn't moved to compensate","msgtype":"m.text"},"ts":1202703063000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"so the bullet are on the left of a left float?","msgtype":"m.text"},"ts":1202703120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, (see also the three messages I just sent to www-style about float-displace)","msgtype":"m.text"},"ts":1202703121000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, no, they overlap a left float","msgtype":"m.text"},"ts":1202703122000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"right but on which side though? left?","msgtype":"m.text"},"ts":1202703180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they're a fixed distance (border + padding of the list item) from the right edge of the left float","msgtype":"m.text"},"ts":1202703181000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"it's the formula you'd want if you also had float-displace indenting the line","msgtype":"m.text"},"ts":1202703240000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"then i don't understand what you mean by \"the line isn't moved to compensate\"","msgtype":"m.text"},"ts":1202703241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"except float-displace isn't indenting the line, so the bullet overlaps the float","msgtype":"m.text"},"ts":1202703300000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Starting from the beginning, what other browsers do is position the bullet relative to the first line box of the block.","msgtype":"m.text"},"ts":1202703301000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"or the place that said line box would start if there were one","msgtype":"m.text"},"ts":1202703302000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"that line box is flush against the float","msgtype":"m.text"},"ts":1202703360000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"looks for a testcase","msgtype":"m.emote"},"ts":1202703361000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"i guess i don't understand how that differs from float-displace, given the right values of float-displace","msgtype":"m.text"},"ts":1202703362000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"https://bugzilla.mozilla.org/attachment.cgi?id=302070","msgtype":"m.text"},"ts":1202703420000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"it's like everybody's doing the right thing, except without setting float-displace:line on list items","msgtype":"m.text"},"ts":1202703421000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"which means if we become consistent","msgtype":"m.text"},"ts":1202703422000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"we'll never be able to change that default","msgtype":"m.text"},"ts":1202703423000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"whereas now Mozilla is doing something that means float-displace:line would be a compromise between existing browsers","msgtype":"m.text"},"ts":1202703424000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"so people could move to that default","msgtype":"m.text"},"ts":1202703480000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"i have to admit finding it difficult to really care :-)","msgtype":"m.text"},"ts":1202703540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think we should introduce float-displace and the other property","msgtype":"m.text"},"ts":1202703541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, float-displace as specced is rather broken","msgtype":"m.text"},"ts":1202703542000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"but it's easily fixable","msgtype":"m.text"},"ts":1202703543000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"but i've given up trying to make bert and fantasai see reason, so i'm not planning on trying to get any work done in the csswg any time soon","msgtype":"m.text"},"ts":1202703544000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, I guess I'll back out my patch","msgtype":"m.text"},"ts":1202703600000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"what did your patch do?","msgtype":"m.text"},"ts":1202703601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or most of it, anyway","msgtype":"m.text"},"ts":1202703602000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"it made Mozilla match the behavior of other browsers","msgtype":"m.text"},"ts":1202703603000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"where the bullets overlap the float","msgtype":"m.text"},"ts":1202703604000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"but we don't move blocks","msgtype":"m.text"},"ts":1202703605000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"isn't that one of the values of float-displace and company?","msgtype":"m.text"},"ts":1202703720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"moving blocks is, but it really sucks","msgtype":"m.text"},"ts":1202703721000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"I think we want to get rid of it, except for things that introduce new BFCs","msgtype":"m.text"},"ts":1202703722000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"where it would be the default","msgtype":"m.text"},"ts":1202703723000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"so what's wrong with the behaviour of other browsers?","msgtype":"m.text"},"ts":1202703780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bullets overlap floats","msgtype":"m.text"},"ts":1202703781000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"pretty much any time they're next to floats","msgtype":"m.text"},"ts":1202703782000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1202704200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that does suck","msgtype":"m.text"},"ts":1202704201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I don't think I have a good excuse for implementing float-displace this far after feature freeze.","msgtype":"m.text"},"ts":1202704202000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"But I think I can leave most of what I fixed in.","msgtype":"m.text"},"ts":1202704260000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202704261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but still back out the change removing -moz-float-edge: margin-box from li","msgtype":"m.text"},"ts":1202704920000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, actually, backing out doesn't yield as good behavior as I thought it did.","msgtype":"m.text"},"ts":1202706840000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, we had -moz-float-edge on the wrong element, essentially, so we overlapped the bullets too.","msgtype":"m.text"},"ts":1202706841000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, so we're probably stuck with it...","msgtype":"m.text"},"ts":1202706842000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, although I'd consider implementing float-displace and seeing what breaks","msgtype":"m.text"},"ts":1202706900000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, and I think bug 57882 was your fault, too :-P","msgtype":"m.text"},"ts":1202708820000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"hendry - ping me when you are back on","msgtype":"m.text"},"ts":1202708940000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dbaron: oh?","msgtype":"m.text"},"ts":1202709060000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, moving -moz-float-edge from ul,ol to li in your html.css cleanup","msgtype":"m.text"},"ts":1202709061000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, when I wanted to back out, I was thinking our use of -moz-float-edge prevented bug 57882 and I had caused it","msgtype":"m.text"},"ts":1202709062000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"Hixie, but we had it all along, so I think what I did is an improvement","msgtype":"m.text"},"ts":1202709063000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"anyway, enough confusing myself for today.","msgtype":"m.text"},"ts":1202709120000,"senderName":"dbaron","senderId":"dbaron@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1202709420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have no idea how to find examples of what julian is saying doesn't happen","msgtype":"m.text"},"ts":1202712720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: yt?","msgtype":"m.text"},"ts":1202718120000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"aye","msgtype":"m.text"},"ts":1202718180000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i'm looking at your application cache feedback, in particular your use case for a map application wanting to pick a tile that is known to be available locally as the starting point of a transition","msgtype":"m.text"},"ts":1202718181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is this something you think we should resolve in v1 of the api?","msgtype":"m.text"},"ts":1202718182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"or something for the future?","msgtype":"m.text"},"ts":1202718240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I don't have an opinion on that","msgtype":"m.text"},"ts":1202718300000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I know people have asked for it","msgtype":"m.text"},"ts":1202718301000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Google Maps people","msgtype":"m.text"},"ts":1202718302000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"I don't know how to prioritize these things","msgtype":"m.text"},"ts":1202718303000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1202718304000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: let me know if you end up pressured to implement something for that use case and i'll bring it up, but for now i'm going to shunt that to v2.","msgtype":"m.text"},"ts":1202718480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"roc: i want to try and get the basic API nailed down first.","msgtype":"m.text"},"ts":1202718481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sounds reasonable","msgtype":"m.text"},"ts":1202718540000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"we did actually implement something","msgtype":"m.text"},"ts":1202718541000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"should we take it out?","msgtype":"m.text"},"ts":1202718542000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"http://mxr.mozilla.org/seamonkey/search?string=islocallyavailable","msgtype":"m.text"},"ts":1202718543000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"looks","msgtype":"m.emote"},"ts":1202718600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lordy, nsGlobalWindow is trying to catch up to nsCSSFrameConstructor","msgtype":"m.text"},"ts":1202718660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"don't look there","msgtype":"m.text"},"ts":1202718661000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"well, i would rename it mozIsLocallyAvailable","msgtype":"m.text"},"ts":1202718960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in case we introduce it later with different semantics or something","msgtype":"m.text"},"ts":1202719020000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but no, don't remove it, it'd be good to find out how people use it","msgtype":"m.text"},"ts":1202719021000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"implementation feedback is a great way to inform the spec","msgtype":"m.text"},"ts":1202719022000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1202719080000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"you know we're actually shipping supposedly-HTML5-complaint offline-application support in FF3","msgtype":"m.text"},"ts":1202719140000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"really? sweet","msgtype":"m.text"},"ts":1202719141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is that implemented yet?","msgtype":"m.text"},"ts":1202719200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202719201000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"yeah it is","msgtype":"m.text"},"ts":1202719202000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"wow, cool","msgtype":"m.text"},"ts":1202719203000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"didn't hear any feedback from whoever implemented it, as far as i recall; i hope the spec was clear enough","msgtype":"m.text"},"ts":1202719204000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you have a recent FF3 build, check out \"Tools ... Clear Private Data\"","msgtype":"m.text"},"ts":1202719205000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"Offline Website Data?","msgtype":"m.text"},"ts":1202719206000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1202719207000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202719208000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i guess i should test it :-)","msgtype":"m.text"},"ts":1202719260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be interesting :-)","msgtype":"m.text"},"ts":1202719261000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"is busy testing SVG filters :-(","msgtype":"m.emote"},"ts":1202719320000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"i've already found two bugs","msgtype":"m.text"},"ts":1202720280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i've only written five lines of code","msgtype":"m.text"},"ts":1202720281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.hixie.ch/tests/adhoc/html/offline/","msgtype":"m.text"},"ts":1202721900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox fails at least 003","msgtype":"m.text"},"ts":1202721901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bed time now","msgtype":"m.text"},"ts":1202721902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"any opinion whether Validator.nu TLS cert handling should copy trusted certificates from e.g. Mozilla or just skip trust checking?","msgtype":"m.text"},"ts":1202722680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Maybe it would be useful if the validator trusted the intersection of what's trusted by each major browser, so it can tell you if some fraction of users will experience problems","msgtype":"m.text"},"ts":1202723700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I'd expect it really needs some way to validate pages that are behind untrusted certificates, because people might do that intentionally (and ask users to accept or install the certificate) and will still want to validate their pages","msgtype":"m.text"},"ts":1202723820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: yeah, given the current state of HttpClient, it is hard to have it both ways","msgtype":"m.text"},"ts":1202723880000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: and having yet another checkbox would suck","msgtype":"m.text"},"ts":1202723881000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I've tried to find a way to manage HttpClient cert trust on a per HttpClient instance or on a per request basis","msgtype":"m.text"},"ts":1202723940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"but it seems that it can only be managed on a per-classloader basis, which is rather bad in case someone wants to run the validator servlet in a larger app server","msgtype":"m.text"},"ts":1202724000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: as for the intersection, I can see practical reasons to to the intersection thing","msgtype":"m.text"},"ts":1202724001000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: I can also don't like the inherent problem of root trust-based trust management that blesses a relatively small number of gatekeepers who can extract money from anyone who wishes to do TLS in a user-friendly way","msgtype":"m.text"},"ts":1202724120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://html5.validator.nu/?doc=https%3A%2F%2Flabs.mozilla.com%2Fforum%2F","msgtype":"m.text"},"ts":1202725380000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"validator.nu is now totally promiscuous when it comes to cert checking","msgtype":"m.text"},"ts":1202725381000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"On Sat, 13 Nov 2004, Henri Sivonen wrote:\" heh","msgtype":"m.text"},"ts":1202725800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"fortunately comments are not addressed in chronological order","msgtype":"m.text"},"ts":1202725801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm. the French Wikipedia says that its XHTML article is part of a series on programming languages...","msgtype":"m.text"},"ts":1202727480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so defaultChecked does change the checked state in browsers, but only if it was not changed before","msgtype":"m.text"},"ts":1202729160000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, defaultChecked is actually more weird than that","msgtype":"m.text"},"ts":1202730120000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":":(","msgtype":"m.text"},"ts":1202730121000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox makes a distinction between setAttribute(\"checked\", \"checked\") and defaultChecked","msgtype":"m.text"},"ts":1202730240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, either Acid3 should test a bunch of other things regarding defaultChecked so that we can extract a sane spec/impl out of it. If not it should simply avoid it so we won't be constrained further on","msgtype":"m.text"},"ts":1202730840000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"to the people doing dom5: kill hasFeature","msgtype":"m.text"},"ts":1202730960000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(and friends)","msgtype":"m.text"},"ts":1202730961000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"begins to suspect that http://james.html5.org/cgi-bin/parsetree/parsetree.py?uri=http://philip.html5.org/misc/fostered-adoption-3.html is a bug in html5lib, because it should be impossible to append the p to the table element","msgtype":"m.emote"},"ts":1202731500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: http://parsetree.validator.nu/?doc=http://philip.html5.org/misc/fostered-adoption-3.html","msgtype":"m.text"},"ts":1202731560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: looks like two independent implementations share the bug...","msgtype":"m.text"},"ts":1202731620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yaiks","msgtype":"m.text"},"ts":1202731680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Firefox does move the <p><b> thingie before <table>","msgtype":"m.text"},"ts":1202731681000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"probably time for revising the parser section","msgtype":"m.text"},"ts":1202731860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I'm not sure the spec is wrong here","msgtype":"m.text"},"ts":1202733480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"those two statements were not tightly related :)","msgtype":"m.text"},"ts":1202733600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sorry","msgtype":"m.text"},"ts":1202733601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, okay :-)","msgtype":"m.text"},"ts":1202733960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, looks like html5lib/validator.nu are correct, and the spec is wrong","msgtype":"m.text"},"ts":1202735580000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"my main issue with spec changes at this point is fixing html5lib","msgtype":"m.text"},"ts":1202735640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i hope someone will add more parsing tests based on the updated spec and that we can then sort of figure out what needs to happen","msgtype":"m.text"},"ts":1202735641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm, Gmail's sponsored links aren't entirely appropriate when reading email about the foster parenting algorithm","msgtype":"m.text"},"ts":1202737740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"latest rumors: Y! to merge with AOL, Y! to form alliances with Google/Disney","msgtype":"m.text"},"ts":1202738700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: do you have feedback on text/html encoding sniffing from browser vendors? is the current spec language considered virtually final?","msgtype":"m.text"},"ts":1202738701000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Mozilla should buy Yahoo","msgtype":"m.text"},"ts":1202738940000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh, that'd be something","msgtype":"m.text"},"ts":1202738941000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"using money secretly donated by Google","msgtype":"m.text"},"ts":1202739000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen, I doubt it had much review...","msgtype":"m.text"},"ts":1202739001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok.","msgtype":"m.text"},"ts":1202739002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I won't implement it now then","msgtype":"m.text"},"ts":1202739003000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I've already written one tentative implementation, so now it's someone else's turn :-)","msgtype":"m.text"},"ts":1202739060000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"\"The attribute value must be serialised without the use of character entity references of any kind. \" fun, fun, fun","msgtype":"m.text"},"ts":1202739061000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"go layering","msgtype":"m.text"},"ts":1202739062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that's actually pretty complex if you don't encounter it in the prescan","msgtype":"m.text"},"ts":1202739180000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and since there's no longer a max bytes limit...","msgtype":"m.text"},"ts":1202739181000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: why are entities prohibited if the algorithm now involves running the real tokenizer?","msgtype":"m.text"},"ts":1202739240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=<table><b><p></b> - hmm, EOF should cause an implied </p> which should get foster-parented which should result in one more parse error than is shown","msgtype":"m.text"},"ts":1202739300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"} else if (\"meta\" == name) { // XXX do charset stuff","msgtype":"m.text"},"ts":1202739301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"that explains why the parser wasn't doing what Sam Ruby suggested","msgtype":"m.text"},"ts":1202739302000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"although I though it already did...","msgtype":"m.text"},"ts":1202739360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if it would be bad to commit evil tests to html5lib without offering to fix the code to pass them","msgtype":"m.emote"},"ts":1202739361000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1202739362000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: I suggest putting evil tests to a separate test file","msgtype":"m.text"},"ts":1202739420000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we still need to organize all those tests one day","msgtype":"m.text"},"ts":1202739421000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but maybe we should wait for the spec to update itself first","msgtype":"m.text"},"ts":1202739422000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the spec updates itself? oh,","msgtype":"m.text"},"ts":1202739480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought Hixie did the updating.","msgtype":"m.text"},"ts":1202739481000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"does the spec say anywhere that it is an error for HTTP charset and meta charset to disagree?","msgtype":"m.text"},"ts":1202739482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"</bad_joke>","msgtype":"m.text"},"ts":1202739483000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: as far as I can see, no","msgtype":"m.text"},"ts":1202739600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ok","msgtype":"m.text"},"ts":1202739601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hmm, I assume that <table><td><a><table></table> shouldn't give a stack overflow","msgtype":"m.text"},"ts":1202740500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: does it somewhere?","msgtype":"m.text"},"ts":1202740560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It does in my implementation","msgtype":"m.text"},"ts":1202740620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Actually, that <a> is unnecessary","msgtype":"m.text"},"ts":1202740680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Ah, it's just my ReprocessAsIf being broken if the insertion mode changes while reprocessing...","msgtype":"m.text"},"ts":1202740860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"...which seems impossible to solve without adding even more state variables :-(","msgtype":"m.text"},"ts":1202741520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://en.wikipedia.org/wiki/Acid3","msgtype":"m.text"},"ts":1202743140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wow, webkit has improved a lot in acid3 over the last few weeks","msgtype":"m.text"},"ts":1202743740000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Are there IE8 previews somewhere already? :)","msgtype":"m.text"},"ts":1202743980000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"sigh, we still get data url parsing wrong :-(","msgtype":"m.text"},"ts":1202744160000,"senderName":"alp","senderId":"alp@irc"},
{"content":{"body":"alp: \"we\"?","msgtype":"m.text"},"ts":1202744220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"WebKit, GTK+ port","msgtype":"m.text"},"ts":1202744221000,"senderName":"alp","senderId":"alp@irc"},
{"content":{"body":"is there a published algorithm? maybe that's going to work better than my interpretation of the RFC","msgtype":"m.text"},"ts":1202744340000,"senderName":"alp","senderId":"alp@irc"},
{"content":{"body":"krijnh, not yet","msgtype":"m.text"},"ts":1202744820000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Bummer","msgtype":"m.text"},"ts":1202744821000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"krijnh, the IE blog will most likely annonce it when there are","msgtype":"m.text"},"ts":1202744822000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Would be cool to see how it's doing now","msgtype":"m.text"},"ts":1202744880000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"hmm. Gecko and WebKit don't require http-equiv='content-type' to sniff charset","msgtype":"m.text"},"ts":1202744940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"it seems that Opera 9.5 and IE7 do","msgtype":"m.text"},"ts":1202744941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://browsershots.org/screenshots/63d26493fb4be33bb27db91ac31fd9a1/","msgtype":"m.text"},"ts":1202744942000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yay for interop","msgtype":"m.text"},"ts":1202744943000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders: it turned out i was using a base64 decoder special-cased for window.atob(). using a generalised base64 decoder fixed acid3 test 97","msgtype":"m.text"},"ts":1202745600000,"senderName":"alp","senderId":"alp@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1202745601000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"webkit's special-case b64 decoder needs a better name than base64Decode() clearly","msgtype":"m.text"},"ts":1202745660000,"senderName":"alp","senderId":"alp@irc"},
{"content":{"body":"wonders if anyone who knows XPath is around","msgtype":"m.emote"},"ts":1202746380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is there anyway to find any comment node in the document with the content, \"foobar\"?","msgtype":"m.text"},"ts":1202746680000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://www.w3.org/TR/xpath","msgtype":"m.text"},"ts":1202746740000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'd use grep","msgtype":"m.text"},"ts":1202746741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: Reading the spec (actually, 2.0, not 1.0) makes me think no","msgtype":"m.text"},"ts":1202746800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: does that work on trees? :P","msgtype":"m.text"},"ts":1202746801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(i.e., I can't use grep)","msgtype":"m.text"},"ts":1202746802000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Serialise the tree then use grep","msgtype":"m.text"},"ts":1202746860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I really don't want to be playing around with HTML with grep. HTML is too mad :)","msgtype":"m.text"},"ts":1202746861000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"something like //comment() plus something else might work","msgtype":"m.text"},"ts":1202746862000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Serialise the tree to XML then use grep","msgtype":"m.text"},"ts":1202746920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: too much serialising and parsing :)","msgtype":"m.text"},"ts":1202746921000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"annevk: seems to work in Safari (though that only claims to support 1.0), so I guess the Python impl I'm using is broken","msgtype":"m.text"},"ts":1202746980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"dives back into Python","msgtype":"m.emote"},"ts":1202746981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"It sounds like you have determined the limit of \"too much\" totally arbitrarily just so you can reject my idea :'-(","msgtype":"m.text"},"ts":1202746982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: 2MB documents + Python = Slow enough all ready","msgtype":"m.text"},"ts":1202747100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: and seeming a stated aim of the spec-gen clone is to be quicker than the official one (which is written in Perl, sed, and C), parsing it too many times will make it too slow","msgtype":"m.text"},"ts":1202747101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(the real reason why the spec-gen is so slow is that it parses _loads_ of times)","msgtype":"m.text"},"ts":1202747160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"from skimming the XPath spec it should be possible","msgtype":"m.text"},"ts":1202747161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: that's what I think, too","msgtype":"m.text"},"ts":1202747162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I think I've just hit a bug in my very new Python impl","msgtype":"m.text"},"ts":1202747163000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(well, not my impl, but the one I'm using)","msgtype":"m.text"},"ts":1202747164000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hooray, more text issues","msgtype":"m.text"},"ts":1202748960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"html5lib says <!DOCTYPE HTML><frameset>test should only create one parse error for the text, but the spec unambiguously requires each character token to generate an individual parse error","msgtype":"m.text"},"ts":1202749020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"conclusion: \"test\" is a single character","msgtype":"m.text"},"ts":1202749260000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"or a single \"character\" token? :-)","msgtype":"m.text"},"ts":1202749320000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"Perhaps it's a single Multicode character","msgtype":"m.text"},"ts":1202749321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"SadEagle: A single character token contains a single character","msgtype":"m.text"},"ts":1202749380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(except in the reality of implementations)","msgtype":"m.text"},"ts":1202749381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: IIRC, Hixie said that in principle you should be able to treat runs of characters as units","msgtype":"m.text"},"ts":1202749382000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: but the foster parenting stuff breaks that","msgtype":"m.text"},"ts":1202749383000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what WebKit does is most sane IMO","msgtype":"m.text"},"ts":1202749384000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"what Gecko does seems unnecessarily complex","msgtype":"m.text"},"ts":1202749385000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Even without foster parenting, whitespace breaks that","msgtype":"m.text"},"ts":1202749440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: where?","msgtype":"m.text"},"ts":1202749441000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"(I'm assuming that the frameset case above isn't *really* mean to spew an error on each char separately)","msgtype":"m.text"},"ts":1202749500000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hixie also mentioned that parse errors may be collapsed","msgtype":"m.text"},"ts":1202749501000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"no idea if that's reflected by the spec","msgtype":"m.text"},"ts":1202749502000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Philip`: fwiw, the cases where html5lib and V.nu disagree on the exact # of tree construction errors, either one is just collapsing errors that would be guaranteed to fire together","msgtype":"m.text"},"ts":1202749560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: it didn't make sense to follow html5lib exactly, because IIRC, html5lib didn't follow the spec 100%, either","msgtype":"m.text"},"ts":1202749561000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"With something like \"<frameset>    test\" the spec says the whitespace and non-whitespace characters are handled through different paths, so you have to handle characters individually or split the text run up into whitespace and non-whitespace runs or think cleverly about how to make it work regardless","msgtype":"m.text"},"ts":1202749562000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"oh, right.","msgtype":"m.text"},"ts":1202749620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"you can only coalesce runs of whitespace and runs of non-whitespace","msgtype":"m.text"},"ts":1202749621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It'd be inefficient to not coalesce combined whitespace-and-not characters in the common cases of big paragraphs of un-marked-up text","msgtype":"m.text"},"ts":1202749680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the trick case that shows WebKit vs. Gecko difference is when you have: <table>foo<!-- --> <!-- --> bar</table>, IIRC","msgtype":"m.text"},"ts":1202749681000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1202749682000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"from the impl point of view I like what WebKit does: coalesce a run first and then check if it is all whitespace","msgtype":"m.text"},"ts":1202749740000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"which is why the crafter comment case tricks WebKit","msgtype":"m.text"},"ts":1202749741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"crafted","msgtype":"m.text"},"ts":1202749742000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"What if you want to do incremental display, and add Text nodes to the document before you've finished tokenising a run of characters?","msgtype":"m.text"},"ts":1202749743000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: you'd assume that no single text run on normal pages is long enough without intervening markup to justify rendering a run of text incrementally","msgtype":"m.text"},"ts":1202749800000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"1) how common is the case of a long run of characters w/o whitespace?  2) you can always update TextNodes, as long as you don't let JS run prematurely, anyway","msgtype":"m.text"},"ts":1202749801000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"\"<plaintext>5MB of text from Gutenberg\"","msgtype":"m.text"},"ts":1202749920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that has whitespace, no? ","msgtype":"m.text"},"ts":1202749980000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: that has no whitespace","msgtype":"m.text"},"ts":1202749981000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"SadEagle: 2) The difficult is that you'd have to move the Text node from inside the table to outside, once you've discovered a non-whitespace character at the end","msgtype":"m.text"},"ts":1202750040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Maybe stating the definition would help the discussion :)","msgtype":"m.text"},"ts":1202750041000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"SadEagle: 1) I'm assuming whitespace in the middle of a run of characters is coalesced with non-whitespace, because it seems inefficient otherwise","msgtype":"m.text"},"ts":1202750100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: ah, and you mean the rendering might \"jump\" due to the node movement?","msgtype":"m.text"},"ts":1202750101000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"I mostly mean that the node movement is kind of complex and likely to include bugs :-)","msgtype":"m.text"},"ts":1202750160000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what does the 5mb matter then? :-)","msgtype":"m.text"},"ts":1202750161000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"justify incremental rendering?","msgtype":"m.text"},"ts":1202750220000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ah :-). Well, never mind me, I am dumb when 90% of my brain is dedicated to something else </lameexcuse>","msgtype":"m.text"},"ts":1202750280000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"parse error: unmatched closing tag lameexcuse","msgtype":"m.text"},"ts":1202750340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Grargh, I'm adopting children backwards","msgtype":"m.text"},"ts":1202750460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://vesa.piittinen.name/doctype/","msgtype":"m.text"},"ts":1202763360000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Doesn't really work in Opera..","msgtype":"m.text"},"ts":1202764440000,"senderName":"krijnh","senderId":"krijnh@irc"},
{"content":{"body":"works in Opera 9.5 I think","msgtype":"m.text"},"ts":1202764560000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"string based apps and XML always go wrong: http://vesa.piittinen.name/doctype/?doctype=%3C%21DOCTYPE+html+PUBLIC+%22-%2F%2FWAPFORUM%2F%2FDTD+WML+2.0%2F%2FEN%22+%22http%3A%2F%2Fwww.wapforum.org%2FDTD%2Fwml20.dtd%22%3E&content-type=text%2Fxml","msgtype":"m.text"},"ts":1202764620000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"seems he never tested the XML stuff him/herself...","msgtype":"m.text"},"ts":1202764680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: XML is easy. Don't you know? :)","msgtype":"m.text"},"ts":1202764681000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"better than you :p","msgtype":"m.text"},"ts":1202764860000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hey! My brain is a non-fatal XML parser! It's easy!","msgtype":"m.text"},"ts":1202764920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"how well does it support external entities? :-)","msgtype":"m.text"},"ts":1202765100000,"senderName":"SadEagle","senderId":"SadEagle@irc"},
{"content":{"body":"SadEagle: it ignores them","msgtype":"m.text"},"ts":1202765101000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(the built-in memory is too restrictive, as it would cause a segfault)","msgtype":"m.text"},"ts":1202765160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: So it's non-validating?","msgtype":"m.text"},"ts":1202765580000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Dashiva: totally.","msgtype":"m.text"},"ts":1202765640000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Dashiva: it totally ignores all errors, so why bother using a validating parser? It just complicates matters by needing to get external entities!","msgtype":"m.text"},"ts":1202765641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, even if you ignore errors you might want to keep track of them, so you don't propagate them onto other, validating parsers ;)","msgtype":"m.text"},"ts":1202765820000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"gsnedders: how about the internal subset?","msgtype":"m.text"},"ts":1202766180000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"zcorpan_: yeah, I parse that","msgtype":"m.text"},"ts":1202766181000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"feeds the billion laughs attack to gsnedders' brain","msgtype":"m.emote"},"ts":1202766240000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"notes recursion (at any level) and throws a \"too lazy\" error","msgtype":"m.emote"},"ts":1202766241000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"passes a U+2664 SPADE through gsnedders' head","msgtype":"m.emote"},"ts":1202766300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1202766301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Surely it would be better to use U+FDD0 before the joke gets too old","msgtype":"m.text"},"ts":1202766302000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"oh gwad/.","msgtype":"m.text"},"ts":1202766420000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I actually looked that up.","msgtype":"m.text"},"ts":1202766421000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I'm that willing to believe a comic!","msgtype":"m.text"},"ts":1202766422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1202766480000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: the html5 spec requires that the content type declarations match the encoding used","msgtype":"m.text"},"ts":1202770260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: so that's one way you could justify mismatched declarations as being an error","msgtype":"m.text"},"ts":1202770320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: ok. thanks. It could be clearer, though.","msgtype":"m.text"},"ts":1202770620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1202770680000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are there any test-cases for cross-browser syntax for embedding Java applets without applet that don't rely on conditional comments?","msgtype":"m.text"},"ts":1202770800000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(or alternately, any good description of why the draft currently obsoletes applet?)","msgtype":"m.text"},"ts":1202770860000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"we need someone to figure out how <applet> works, last i checked","msgtype":"m.text"},"ts":1202770861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"The problem with <applet> is that it's a vendor-prefixed name","msgtype":"m.text"},"ts":1202770920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1202770921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"isn't sure what that means","msgtype":"m.emote"},"ts":1202770922000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"that's funny","msgtype":"m.text"},"ts":1202770923000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not having worked out how something works doesn't sound like a rationale for obsoleting it.","msgtype":"m.text"},"ts":1202771040000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"html5 isn't done","msgtype":"m.text"},"ts":1202771041000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I don't really see how it's un-doneness is relevant. People are being asked to look at a series of draft documents.","msgtype":"m.text"},"ts":1202771100000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"can't help you there","msgtype":"m.text"},"ts":1202771101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if something is simply un-thought-out, it's better to mark it as such","msgtype":"m.text"},"ts":1202771160000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"annevk: is there a reason to expect that how <applet> really works is significantly more complex than what Sun documents?","msgtype":"m.text"},"ts":1202771161000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"It might be helpful to add a placeholder section that just says we don't quite know what should be done yet, to avoid misleading people that it's been intentionally removed","msgtype":"m.text"},"ts":1202771162000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, like what webben said","msgtype":"m.text"},"ts":1202771163000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"or alternately, don't publish official drafts","msgtype":"m.text"},"ts":1202771220000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben, you're overreacting","msgtype":"m.text"},"ts":1202771221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hsivonen, dunno","msgtype":"m.text"},"ts":1202771280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i have no intention of adding <applet> to the spec, btw","msgtype":"m.text"},"ts":1202771281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<object> should be enough for any proprietary binary embedding, whether it's activex, java, sliverlight, or whatever.","msgtype":"m.text"},"ts":1202771282000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you mean object plus conditional comments?","msgtype":"m.text"},"ts":1202771340000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"conditional comments are not part of html5","msgtype":"m.text"},"ts":1202771341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if anyone wants to do something minor to help the spec-gen clone, can they get Py html5lib's dom treebuilder/walker to work with other dom implementations (i.e., not minidom, I need pxdom). I looked through it very quickly earlier and it really looks like next to no work.","msgtype":"m.text"},"ts":1202771400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"why conditional comments?","msgtype":"m.text"},"ts":1202771401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: to get markup that works in IE too?","msgtype":"m.text"},"ts":1202771402000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"Also, on the subject of the spec-gen clone, I hope to get something working over my half-term (this Wednesday to Sunday).","msgtype":"m.text"},"ts":1202771403000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"webben: IE doesn't support java in <object>?","msgtype":"m.text"},"ts":1202771460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: what's in the spec now doesn't cover activex","msgtype":"m.text"},"ts":1202771520000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: by the time HTML5 is done, Java will be non-proprietary","msgtype":"m.text"},"ts":1202771521000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie: AFAIK, you need conditional comments if you want both non-IE and IE to work with OBJECT + Java. I was hoping the idea of deprecating APPLET was prefaced on test cases showing that somehow this wasn't necessary.","msgtype":"m.text"},"ts":1202771522000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"hsivonen: in the same way that open office is non-proprietary?","msgtype":"m.text"},"ts":1202771580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: in the way that you can get a Free Software impl","msgtype":"m.text"},"ts":1202771581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"webben: no, the obsoletion of applet is based purely on my prejudices.","msgtype":"m.text"},"ts":1202771582000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: \"proprietary\" may be hte wrong term here.","msgtype":"m.text"},"ts":1202771640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"noticed recently that the spec changed from section numbers like \"1.2.3.\" to \"1.2.3\", and wonders if that's an artifact of the spec-gen script","msgtype":"m.emote"},"ts":1202771641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"webben: HTML 5 is being developed from a clean slate, so everything has made it's way in it through use cases being presented, and not the other way around","msgtype":"m.text"},"ts":1202771642000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: yeah, that's all spec-gen","msgtype":"m.text"},"ts":1202771643000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`: no idea, i didn't even notice that","msgtype":"m.text"},"ts":1202771644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: I've seen that elsewhere too","msgtype":"m.text"},"ts":1202771645000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2008/000397.html","msgtype":"m.text"},"ts":1202771700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"<http://www.w3.org/Tools/HTML-XML-utils/> — 4.4 update","msgtype":"m.text"},"ts":1202771701000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"wow, i wonder what caused that","msgtype":"m.text"},"ts":1202771702000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(a lot of the spec-gen is just calling those utils, all of which parse the HTML themselves then serialise it, which makes it that dog slow)","msgtype":"m.text"},"ts":1202771703000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, Bert changed his tool, yes","msgtype":"m.text"},"ts":1202771704000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what parser does the script use?","msgtype":"m.text"},"ts":1202771760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"The drafts don't dispute that applet has a /use/.","msgtype":"m.text"},"ts":1202771761000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"num(1), specially","msgtype":"m.text"},"ts":1202771762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"They claim it's unnecessary for its use.","msgtype":"m.text"},"ts":1202771763000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/www-html-editor/2005JulSep/0003.html - the non-dot form is apparently an ISO standard","msgtype":"m.text"},"ts":1202771764000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: very naïve ones. download the source and look, it's really basic custom stuff","msgtype":"m.text"},"ts":1202771765000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"The following elements are not included because they have not been used often, created confusion or can be handled by other elements: .... applet has been obsoleted in favor of object.\"","msgtype":"m.text"},"ts":1202771766000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"gsnedders: Are you really sure you want to use DOM? :)","msgtype":"m.text"},"ts":1202771767000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: yes.","msgtype":"m.text"},"ts":1202771820000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1202771821000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"webben: the only reason <applet> is not in html5 is my own personal prejudice against Java and my desire to not special-case one particular extension language.","msgtype":"m.text"},"ts":1202771822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"HTML5 already does special-case JS.","msgtype":"m.text"},"ts":1202771823000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: i would personally be quite happy to not support Java at all.","msgtype":"m.text"},"ts":1202771880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webben: JS isn't an extension language for HTML, it's its scripting language.","msgtype":"m.text"},"ts":1202771881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"java is at the level of flash or silverlight","msgtype":"m.text"},"ts":1202771882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: all the decent XPath impls. require it, and not using XPath means recursing through the document manually, while changing it, even more times than otherwise needed","msgtype":"m.text"},"ts":1202771883000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(by all the decent XPath impls., I basically mean WebPath)","msgtype":"m.text"},"ts":1202771884000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh, I'm not sure \"extension\" is quite the word for such things.","msgtype":"m.text"},"ts":1202771885000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(btw I will be happy to support pyxdom or whatever in html5lib but I can't promise any time to look at it soon)","msgtype":"m.text"},"ts":1202771940000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I have a strong prejudice against Java *applets*, but I still think that Java via <applet> is better than Java via <object>","msgtype":"m.text"},"ts":1202771941000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"JS seems more like an \"extension\" of HTML.","msgtype":"m.text"},"ts":1202771942000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"gsnedders: lxml","msgtype":"m.text"},"ts":1202771943000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"webben: ok, well, whatever you want to call them :-)","msgtype":"m.text"},"ts":1202771944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jgraham: needs to be compiled to be used. I'd really like it to work without compiling anything.","msgtype":"m.text"},"ts":1202771945000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Java applets might have been great if AWT didn't suck so incredibly badly","msgtype":"m.text"},"ts":1202771946000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Any reason for that requirement? easy_install lxml isn't so hard...","msgtype":"m.text"},"ts":1202772000000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"and there was some other reason why lxml wouldn't do.","msgtype":"m.text"},"ts":1202772001000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"webben: please raise the <applet> issue on public-html","msgtype":"m.text"},"ts":1202772002000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"nn","msgtype":"m.text"},"ts":1202772003000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"jgraham: I can't actually get it working locally.","msgtype":"m.text"},"ts":1202772004000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: I'm not a member of the WG. (And I can't join either.)","msgtype":"m.text"},"ts":1202772005000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"(but that wasn't the reason, I admittedly didn't try hard)","msgtype":"m.text"},"ts":1202772006000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"webben: s/public-html/whatwg or public-html-comments/","msgtype":"m.text"},"ts":1202772007000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Yep, not at all clear to me I can safely post there either.","msgtype":"m.text"},"ts":1202772060000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1202772061000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Indeed, just chatting here is a bit dodgy.","msgtype":"m.text"},"ts":1202772062000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: feel free to e-mail me directly ian⊙hc","msgtype":"m.text"},"ts":1202772063000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webben: i can keep any feedback confidential","msgtype":"m.text"},"ts":1202772064000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(actually if specgen requires comments before the html element our current lxml treebuilder won't work so well. Although it could be fixed I think)","msgtype":"m.text"},"ts":1202772120000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"webben: that sucks (not being able to post feedback)","msgtype":"m.text"},"ts":1202772180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"gsnedders: Basically because of the way the W3C patent policy infects pretty much everything employees of member companies do.","msgtype":"m.text"},"ts":1202772181000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"jgraham: you should see what the real spec-gen does. it doesn't actually really parse it then serialise it, it just spits out everything until it finds something it wants to add/remove/change","msgtype":"m.text"},"ts":1202772240000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"like i said, feel free to send me unofficial feedback straight to ian⊙hc","msgtype":"m.text"},"ts":1202772241000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it will never be made public","msgtype":"m.text"},"ts":1202772242000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"webben: Can you say who your employer is?","msgtype":"m.text"},"ts":1202772243000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"is just curious, it's not important","msgtype":"m.emote"},"ts":1202772300000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"hasn't set about trying to break the spec-gen (because he don't have access), but it could be easily done","msgtype":"m.emote"},"ts":1202772301000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://benjaminhawkeslewis.com/ suggests Y!","msgtype":"m.text"},"ts":1202772302000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that information is still accurate","msgtype":"m.text"},"ts":1202772360000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"wonders where he's seen webben before. rss-public? uf-*?","msgtype":"m.emote"},"ts":1202772361000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"maybe not for long, depending on how the takeover struggle goes :-)","msgtype":"m.text"},"ts":1202772362000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"discovers that reading the specs properly in case the insane behaviour of one's code is actually correct and not a bug is a good idea","msgtype":"m.emote"},"ts":1202772363000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"roc: That I definitely can't comment on ;)","msgtype":"m.text"},"ts":1202772364000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1202772420000,"senderName":"roc","senderId":"roc@irc"},
{"content":{"body":"gsnedders: Oh, I used to post to whatwg quite a lot and often lurk/grumble in here.","msgtype":"m.text"},"ts":1202772421000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1202772422000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(just to be 100% clear, nothing I say is an official Y! position, or a semi-official Y! position, or likely to be based on even talking to other Y! employees)","msgtype":"m.text"},"ts":1202772480000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"gsnedders: I do post on the uf- mailing lists though, along with a couple other Y! folk.","msgtype":"m.text"},"ts":1202772540000,"senderName":"webben","senderId":"webben@irc"},
{"content":{"body":"webben: ah. I was sure I'd seen you elsewhere. I rarely post on the uf- lists, though I read quite a bit","msgtype":"m.text"},"ts":1202772600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://james.html5.org/cgi-bin/parsetree/parsetree.py?source=%3C!doctype%20html%3Efoo%3Chtml%20x%3E - why is that a parse error?","msgtype":"m.text"},"ts":1202772660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The <html> shouldn't hit the \"If this start tag token was not the first start tag token, then it is a parse error.\" case since it is the first start tag token","msgtype":"m.text"},"ts":1202772661000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: if I allow other dom modules to be used for the dom treebuilder/walker, I assume I should just add a second param (like on etree), and have it default to minidom for backwards compat.?","msgtype":"m.text"},"ts":1202772720000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Should I just commit it as long as it doesn't break anything?","msgtype":"m.text"},"ts":1202772780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://parsetree.validator.nu/?doc=http://philip.html5.org/misc/html-after-chars.html complains too, and I think it shouldn't","msgtype":"m.text"},"ts":1202772781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(someone who isn't jgraham who knows about html5lib policy can answer too)","msgtype":"m.text"},"ts":1202772840000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: Exactly","msgtype":"m.text"},"ts":1202772841000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think I even wrote in the docs that that might happen in the future","msgtype":"m.text"},"ts":1202772842000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah, you did","msgtype":"m.text"},"ts":1202772843000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, with implied start tag tokens it's not","msgtype":"m.text"},"ts":1202772844000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders: You should add the new dom thing to the tests as well. Then check they all pass :)","msgtype":"m.text"},"ts":1202772900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: add in what way?","msgtype":"m.text"},"ts":1202772901000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: add param for mindom?","msgtype":"m.text"},"ts":1202772960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"In the tokenizer tests file we run all the tests on every DOM implementation we claim to support, if the user has them installed","msgtype":"m.text"},"ts":1202772961000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: That would be annoying for me, since implied tokens are handled in the same way as reprocess-the-current-token tokens, and the <html> gets reprocessed a couple of times before it's tested for firstness","msgtype":"m.text"},"ts":1202772962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and the spec isn't clear enough about what it means there, so I'll stick with my interpretation because it's easy","msgtype":"m.text"},"ts":1202773020000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"either way there's a parse error there","msgtype":"m.text"},"ts":1202773021000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i guess it's ok if you collapse them, but Hixie should clarify that","msgtype":"m.text"},"ts":1202773022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and http://canvex.lazyilluminati.com/misc/cgi/issues.cgi/message/%3C251FD893-EFFA-4A53-9015-21349E494B74%40iki.fi%3E should allow it to work better in the future anyway","msgtype":"m.text"},"ts":1202773023000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"annevk: I'm not sure why there's a parse error either way","msgtype":"m.text"},"ts":1202773024000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: where?","msgtype":"m.text"},"ts":1202773080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, oh wait... hmm","msgtype":"m.text"},"ts":1202773081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"gsnedders:","msgtype":"m.text"},"ts":1202773082000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"try:","msgtype":"m.text"},"ts":1202773083000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    import pyxdom","msgtype":"m.text"},"ts":1202773084000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    treeTypes[\"pyxdom\"] = treebuilders.getTreeBuilder(\"dom\", \"pyxdom\")","msgtype":"m.text"},"ts":1202773085000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"except ImportError:","msgtype":"m.text"},"ts":1202773086000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"    pass","msgtype":"m.text"},"ts":1202773087000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Philip`, there should be a parse error there though","msgtype":"m.text"},"ts":1202773088000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jgraham: what file?","msgtype":"m.text"},"ts":1202773089000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"in python/tests/test_parser.py","msgtype":"m.text"},"ts":1202773140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk: Do you mean there should be one according to the spec, or there should be one according to common sense?","msgtype":"m.text"},"ts":1202773141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"will probably have a go tomorrow","msgtype":"m.emote"},"ts":1202773142000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Philip`, currently only the latter I guess","msgtype":"m.text"},"ts":1202773143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wonders if he should bother emailing about it","msgtype":"m.emote"},"ts":1202773144000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's also easier to handle this case if you turn insertion modes into phases","msgtype":"m.text"},"ts":1202773260000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"does that in his implementation","msgtype":"m.emote"},"ts":1202773261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"in that you can never end up with <html> in the in body phase","msgtype":"m.text"},"ts":1202773320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"continues hating things that require more than one token at a time","msgtype":"m.emote"},"ts":1202773860000,"senderName":"Philip`","senderId":"Philip`@irc"}
]