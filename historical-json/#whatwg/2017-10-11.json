[
{"content":{"body":"does anyone know where Acid3 test 99 comes from?","msgtype":"m.text"},"ts":1507682762000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"\"check for the weirdest bug ever\"","msgtype":"m.text"},"ts":1507682770000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I presume some browser at some point genuinely failed it","msgtype":"m.text"},"ts":1507682779000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"or is it literally just there as a sanity test?","msgtype":"m.text"},"ts":1507682805000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Hello! Would it be possible for fetch to set a header like X-Requested-With: XMLHttpRequest by default?","msgtype":"m.text"},"ts":1507687011000,"senderName":"ali0","senderId":"ali0@irc"},
{"content":{"body":"Libraries like jQuery set it without the user knowing, and server frameworks such as Rails use it to identify that it was an AJAX request","msgtype":"m.text"},"ts":1507687070000,"senderName":"ali0","senderId":"ali0@irc"},
{"content":{"body":"alwu: https://github.com/whatwg/fetch/issues/58#issuecomment-110339399 is relevant","msgtype":"m.text"},"ts":1507688199000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"also, why not just check for the Origin header","msgtype":"m.text"},"ts":1507688373000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"question for any git experts here:","msgtype":"m.text"},"ts":1507688935000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"when I do a `git log --decorate` on a clone of git⊙gc:w3c/web-platform-tests.git","msgtype":"m.text"},"ts":1507689001000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or https://github.com/w3c/web-platform-tests.git","msgtype":"m.text"},"ts":1507689006000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"it shows `(origin/marcoscaceres-patch-1)` for commit 5516a2bcb3a7e67da0ba3d69b973ef008c7c350b","msgtype":"m.text"},"ts":1507689042000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"= “Remove @alphan102, add @mnoorenberghe”","msgtype":"m.text"},"ts":1507689067000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and for commit b0c75cd8857f9f9596a744fac65c3be5e526aede (origin/TimothyGu/jsdom-tmp)","msgtype":"m.text"},"ts":1507689112000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but it only shows the branch names like that for those two commits","msgtype":"m.text"},"ts":1507689133000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1507689134000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what’s special about those commits?","msgtype":"m.text"},"ts":1507689152000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I don’t see any metadata in the raw commit log that would cause those to be show differently like that","msgtype":"m.text"},"ts":1507689187000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"TimothyGu: maybe you know","msgtype":"m.text"},"ts":1507689197000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"is there a mechanism / is there a proposed mechanism for custom pseudoclasses in web components (or something equivalent?) — in some cases, css vars do the trick, but in others it doesn’t work out that way","msgtype":"m.text"},"ts":1507699779000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"so to close the loop on the git question I asked here earlier about the branch refs in the WPT git log --decorate:","msgtype":"m.text"},"ts":1507700004000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the branch refs were shown for those two commits because the branches were still in the origin","msgtype":"m.text"},"ts":1507700047000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"that is, it basically is showing that those two cases are for merged PR branches that somebody forgot to delete when they merged the commits from the PRs for those","msgtype":"m.text"},"ts":1507700141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so it’s kind of a handy indicator for visually catching those cases from the command line, so that you can know those merged branches need to deleted and locally pruned","msgtype":"m.text"},"ts":1507700260000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: git would definitely benefit from some form of branch cleanup option","msgtype":"m.text"},"ts":1507703508000,"senderName":"tobie","senderId":"tobie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1507703521000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the ongoing guessing game with git is fun though","msgtype":"m.text"},"ts":1507703546000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"git remote prune","msgtype":"m.text"},"ts":1507707772000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"git log --decorate has been the default for a long time now btw.","msgtype":"m.text"},"ts":1507707815000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"I found there are two distinct \"SyntaxError\"s : https://bugs.chromium.org/p/chromium/issues/detail?id=609415#c20","msgtype":"m.text"},"ts":1507716549000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"One is DOMException whose name is \"SyntaxError\", and the other is `SyntaxError` which is an exception itself.","msgtype":"m.text"},"ts":1507716587000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: the latter is very specific and should not be used outside ECMAScript","msgtype":"m.text"},"ts":1507716622000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yeah, I learned it today.","msgtype":"m.text"},"ts":1507716653000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Even though the webidl spec describes both, it doesn't say \"they are different\" explicitly :-(","msgtype":"m.text"},"ts":1507716924000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"I'm tempted to add a note on \"SyntaxError\" in the webidl spec.","msgtype":"m.text"},"ts":1507716994000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"kochi: https://heycam.github.io/webidl/#idl-exceptions mentions they're explicitly omitted","msgtype":"m.text"},"ts":1507717414000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kochi: but maybe you mean in the section of DOMException? Might be good","msgtype":"m.text"},"ts":1507717457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, the spec is kinda sound, but \"SyntaxError\" typeface aren't different, so without reading carefully readers may not make out the difference.","msgtype":"m.text"},"ts":1507717526000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"annevk: so yeah, in the exceptions section is okay, but adding a note in DOMException section could make sense.","msgtype":"m.text"},"ts":1507717564000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"Domenic: seen RTCIdentityProviderGlobalScope?","msgtype":"m.text"},"ts":1507727166000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: https://github.com/w3c/webrtc-pc/issues/1627","msgtype":"m.text"},"ts":1507727220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://github.com/WebAssembly/spec/issues/577 makes me wonder how much review WebAssembly's type system has had","msgtype":"m.text"},"ts":1507728810000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Turns out that strings are byte sequences in WebAssembly","msgtype":"m.text"},"ts":1507730178000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"And names are strings","msgtype":"m.text"},"ts":1507730189000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Not the first string-related misnomer.","msgtype":"m.text"},"ts":1507730538000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1507730539000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"answering my own q from last nite: I was able to achieve what I wanted through element attributes & just a bit of extra logic to ensure said attributes can not be in invalid states ... seems to be a viable substitute for pseudoclasses in at least some cases (someElemWithASlot[specialAttr] somethingInSlot {})","msgtype":"m.text"},"ts":1507730656000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"bathos: pseudo-elements are semi-planned btw","msgtype":"m.text"},"ts":1507730979000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bathos: there's an issue, I can look it up for you","msgtype":"m.text"},"ts":1507730996000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bathos: wanted to ping you earlier, but you were not around anymore","msgtype":"m.text"},"ts":1507731005000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bathos: https://github.com/w3c/webcomponents/issues/300","msgtype":"m.text"},"ts":1507731030000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, cool! I’ve occasionally wished for both pseudo elems and pseudo classes, though the latter is a lot easier to work around","msgtype":"m.text"},"ts":1507731558000,"senderName":"bathos","senderId":"bathos@irc"},
{"content":{"body":"as a browser vendor person at tpac, should I register for this meetup?  I don't want to take a web devs seat if space is limited: https://www.w3.org/2017/11/Meetup/","msgtype":"m.text"},"ts":1507736508000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I have attended such a meetup at one point; suspect it's fine","msgtype":"m.text"},"ts":1507736646000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"webcrypto question: is there an api to compute a public key from a corresponding private key?","msgtype":"m.text"},"ts":1507747111000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"That would defeat public-key crypto entirely, so no. ^_^","msgtype":"m.text"},"ts":1507747164000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"https://stackoverflow.com/questions/696472/given-a-private-key-is-it-possible-to-derive-its-public-key","msgtype":"m.text"},"ts":1507747216000,"senderName":"ondras","senderId":"ondras@irc"},
{"content":{"body":"(The public and private keys are identical in purpose; we designate one as \"public\" and one as \"private\" arbitrarily. If you could compute one from the other, pk crypto wouldn't work at all.)","msgtype":"m.text"},"ts":1507747219000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Ah, interesting, so practical concerns mean that it usually can be computed, because we make some choices that make the public key much more predictable than it should be theoretically.","msgtype":"m.text"},"ts":1507747308000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins/ondras: Generally the data we call the \"private\" key also includes the public key, whereas the public key doesn't include the private key.","msgtype":"m.text"},"ts":1507753622000,"senderName":"jyasskin","senderId":"jyasskin@irc"},
{"content":{"body":"MikeSmith: feel free to delete TimothyGu/jsdom-tmp. I forgot what it was for.","msgtype":"m.text"},"ts":1507762976000,"senderName":"TimothyGu","senderId":"TimothyGu@irc"},
{"content":{"body":"TimothyGu: thanks yeah I did already","msgtype":"m.text"},"ts":1507764224000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"}
]