[
{"content":{"body":"yoav: it seems \"coarsened shared current time\" isn't indexed","msgtype":"m.text"},"ts":1616580069000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: so the way I ended up doing coarsening is that for connection we still catch raw and then coarsen it when fetch handles the connection","msgtype":"m.text"},"ts":1616582096000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I can push a commit with that approach to show it","msgtype":"m.text"},"ts":1616582115000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I also was wondering if you'd mind if I moved some things a bit","msgtype":"m.text"},"ts":1616582125000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I think all the connection timing stuff we can define in the Connections section","msgtype":"m.text"},"ts":1616582137000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"for instance","msgtype":"m.text"},"ts":1616582140000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don’t mind, sounds good","msgtype":"m.text"},"ts":1616582207000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"yoav: https://github.com/w3c/hr-time/pull/113","msgtype":"m.text"},"ts":1616582498000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: another question, why is redirect timing info list not a list of start times?","msgtype":"m.text"},"ts":1616584077000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: I'm not sure the current approach even works as it's not making a copy of the struct","msgtype":"m.text"},"ts":1616584095000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah maybe it does if elsewhere we create new structs","msgtype":"m.text"},"ts":1616584116000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I still think it's worth simplifying this though","msgtype":"m.text"},"ts":1616584298000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it's possible to go back to changing redirectStartTime/redirectEndTime as we go along","msgtype":"m.text"},"ts":1616584410000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: it might be a better solution and not too difficult... I can do that","msgtype":"m.text"},"ts":1616584616000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: okay, I don't have anything in my queue anymore so feel free to push as you see fit","msgtype":"m.text"},"ts":1616584733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: got it","msgtype":"m.text"},"ts":1616584744000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: So I put something together for defining multipart/form-data","msgtype":"m.text"},"ts":1616585046000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"https://andreubotella.github.io/multipart-form-data/","msgtype":"m.text"},"ts":1616585046000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: pushed a simplification for redirects","msgtype":"m.text"},"ts":1616585154000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"andreubotella: oh wow, that's great, although section 3 leaves a bit to be desired :-)","msgtype":"m.text"},"ts":1616585544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah 😆","msgtype":"m.text"},"ts":1616585569000,"senderName":"andreubotella","senderId":"andreubotella@irc"},
{"content":{"body":"annevk: so seems like currently it doesn't build until the HR-TIME PR is in and is recognized by bikeshed etc. do we have anything else left there?","msgtype":"m.text"},"ts":1616585618000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: I don't think so, the <iframe> concern no longer applies as we'll have to fix that as part of updating <iframe>","msgtype":"m.text"},"ts":1616585676000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and all the filtering related to that was dropped from the PR afaict","msgtype":"m.text"},"ts":1616585688000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yeah, I think we're pretty close to landing this, which is great!","msgtype":"m.text"},"ts":1616585713000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yay!","msgtype":"m.text"},"ts":1616585722000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"andreubotella: btw, I think we could stop calling it a boundary string and just call it a boundary?","msgtype":"m.text"},"ts":1616587544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I really like all the serialization bits","msgtype":"m.text"},"ts":1616587677000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: managed to get the latest hr-time republished at https://www.w3.org/TR/hr-time-3/","msgtype":"m.text"},"ts":1616595088000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"and working on getting a WG decision to autopublish all the things","msgtype":"m.text"},"ts":1616595109000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Cool, hopefully it'll get indexed soonish (probably done by tomorrow at the latest)","msgtype":"m.text"},"ts":1616595198000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"https://fetch.spec.whatwg.org/#dom-response I wonder why this cannot be used to construct, say, a 103 response.","msgtype":"m.text"},"ts":1616597718000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: it's indexed and the build passes for the PR","msgtype":"m.text"},"ts":1616598386000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: so I guess the main thing is the IPR bit? And maybe prepare a suitable commit message and leave it in a comment?","msgtype":"m.text"},"ts":1616600070000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"noamr: oh, and the specific integration with RT I suppose, we need to land the RT change too and get that indexed","msgtype":"m.text"},"ts":1616600092000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: they're co-dependent, as the RT bit relies on the new struct in FETCH","msgtype":"m.text"},"ts":1616600112000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"so the way I was thinking to do this is to land this (once we're good to go with IPR), land the RT fix, and then add the link to \"mark\" in FETCH","msgtype":"m.text"},"ts":1616600182000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: does RT not build if it's not exported or does it not matter?","msgtype":"m.text"},"ts":1616600182000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes, the RT PR does not build without it.","msgtype":"m.text"},"ts":1616600222000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"noamr: why is it called mark btw?","msgtype":"m.text"},"ts":1616600244000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: similar to mark/measure in user timing, and to \"mark paint timing\"","msgtype":"m.text"},"ts":1616600259000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"consistency","msgtype":"m.text"},"ts":1616600262000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"but open to other naming suggestions of course","msgtype":"m.text"},"ts":1616600287000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"those all end up creating objects? bit alien to me","msgtype":"m.text"},"ts":1616600289000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"If it's consistent it seems fine, but generally I wouldn't expect \"mark\" to end up creating objects","msgtype":"m.text"},"ts":1616600320000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the way I see it, as far as FETCH/HTML are concerned, they're marking a point in time with some data. The fact that an object is created for that is a performance-API concern","msgtype":"m.text"},"ts":1616600358000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"the \"marking\" is the important bit for the caller, while object creation is more of an API mechanism","msgtype":"m.text"},"ts":1616600431000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"I think it's important for spec callers to know when objects get created so they only call those things at a safe point, but again, if the other mark things already do this","msgtype":"m.text"},"ts":1616600489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yea if it wasn't for consistency I could go with other names","msgtype":"m.text"},"ts":1616600685000,"senderName":"noamr","senderId":"noamr@irc"},
{"content":{"body":"annevk: r? https://github.com/whatwg/xhr/pull/321","msgtype":"m.text"},"ts":1616607308000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"just a retitle of the “Feature Policy integration” section to “Permissions Policy integration”","msgtype":"m.text"},"ts":1616607355000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"https://spin.atomicobject.com/2021/03/22/makefiles-vs-package-json-scripts/","msgtype":"m.text"},"ts":1616626762000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"“Why I Prefer Makefiles Over package.json Scripts","msgtype":"m.text"},"ts":1616626770000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"> JSON was meant for serializing objects. It's a lousy config format, and it's even worse at expressing a complicated build.","msgtype":"m.text"},"ts":1616626802000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"YAML is even worse :)","msgtype":"m.text"},"ts":1616626977000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Rik`: yeah no argument there","msgtype":"m.text"},"ts":1616627141000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"for watch scenarios, I like http://eradman.com/entrproject/ to avoid complex node toolchains","msgtype":"m.text"},"ts":1616627300000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"and https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html is pretty cool too","msgtype":"m.text"},"ts":1616627825000,"senderName":"Rik`","senderId":"Rik`@irc"}
]