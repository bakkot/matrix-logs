[
{"content":{"body":"MikeSmith: removed <canvas> example in IME API spec: https://dvcs.w3.org/hg/ime-api/raw-file/default/Overview.html","msgtype":"m.text"},"ts":1367488934000,"senderName":"kochi","senderId":"kochi@irc"},
{"content":{"body":"TabAtkins_: awake?","msgtype":"m.text"},"ts":1367489519000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"OH \"I'd hate to see a naked middle-aged man with pink hair, and I am one.\"","msgtype":"m.text"},"ts":1367495369000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: brucel?","msgtype":"m.text"},"ts":1367496971000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yeah","msgtype":"m.text"},"ts":1367496978000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Pretty sure I have seen him and he wasn't naked","msgtype":"m.text"},"ts":1367497008000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Pretty sure I've seen pictures where he was a book away from that","msgtype":"m.text"},"ts":1367498104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"should rel=discussion and rel=issues be registered? (or are they just not implemented in v.nu yet?)","msgtype":"m.text"},"ts":1367500060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"tantek: hsivonen_: MikeSmith: ^","msgtype":"m.text"},"ts":1367500086000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I feel like a large part of Fetch is becoming an exercise in redefining vague parts of HTTP...","msgtype":"m.text"},"ts":1367500703000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"E.g. it now defines how to follow a redirect (that you include the same headers and such, how you parse the Location header), how to do HTTP authentication (again with including the headers, not doing it for CORS, that credentials are passed via the URL), ...","msgtype":"m.text"},"ts":1367500786000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"It's pretty close to just having \"open a TCP connection, serialize this request object to an HTTP request, transmit it, parse response...\"","msgtype":"m.text"},"ts":1367500864000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: just take that step :-)","msgtype":"m.text"},"ts":1367502538000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that would get very bad with SPDY","msgtype":"m.text"},"ts":1367502568000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"why?","msgtype":"m.text"},"ts":1367502612000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"well it serializes differently, doesn't it?","msgtype":"m.text"},"ts":1367502655000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"keeps connections open longer, etc.","msgtype":"m.text"},"ts":1367502701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"might even be possible to share connections across disconnected browsing contexts","msgtype":"m.text"},"ts":1367502733000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm not familiar with spdy, but in any case it would be good with clear specs for http and spdy","msgtype":"m.text"},"ts":1367502778000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"what could possibly be taken over is all semantic-related requirements","msgtype":"m.text"},"ts":1367502784000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"maybe long term","msgtype":"m.text"},"ts":1367502811000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"after we bug the IETF about it again and show them what we need to build on top of their stuff  to actually use it...","msgtype":"m.text"},"ts":1367502830000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"anyone have comments on http://html-differences.whatwg.org/#development-model ?","msgtype":"m.text"},"ts":1367502931000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"authors seem to dislike the term authors, so maybe we should start calling them developers?","msgtype":"m.text"},"ts":1367503015000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: might also want to introduce a switch in the abstract for HTML5/HTML","msgtype":"m.text"},"ts":1367503111000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: for the document title","msgtype":"m.text"},"ts":1367503131000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"zcorpan: dunno about those rel values","msgtype":"m.text"},"ts":1367503168000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: i decided to have the same title","msgtype":"m.text"},"ts":1367503170000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: will take a look","msgtype":"m.text"},"ts":1367503180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan: <title> is still different?","msgtype":"m.text"},"ts":1367503196000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: no?","msgtype":"m.text"},"ts":1367503234000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: sorry, cache :/","msgtype":"m.text"},"ts":1367503317000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: thanks","msgtype":"m.text"},"ts":1367503662000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: oh, also just committed a small fix to xref you might want to integrate","msgtype":"m.text"},"ts":1367503728000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1367503821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"apparently today i've managed to procastinate documenting the changes on the w3c side :-P","msgtype":"m.text"},"ts":1367504028000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"such as?","msgtype":"m.text"},"ts":1367504055000,"senderName":"Redface","senderId":"Redface@irc"},
{"content":{"body":"Redface: you mean, what changes? or what?","msgtype":"m.text"},"ts":1367504089000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yesyes","msgtype":"m.text"},"ts":1367504102000,"senderName":"Redface","senderId":"Redface@irc"},
{"content":{"body":"wat changes","msgtype":"m.text"},"ts":1367504116000,"senderName":"Redface","senderId":"Redface@irc"},
{"content":{"body":"that's what i haven't documented yet :-)","msgtype":"m.text"},"ts":1367504130000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"though e.g. <hgroup> being dropped","msgtype":"m.text"},"ts":1367504144000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"i see i see","msgtype":"m.text"},"ts":1367504253000,"senderName":"Redface","senderId":"Redface@irc"},
{"content":{"body":"ffffuuu","msgtype":"m.text"},"ts":1367504630000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"forgot to check www-authenticate header","msgtype":"m.text"},"ts":1367504645000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie: why this rule in http://www.whatwg.org/style/specification ? p + * > li, p + div.status + * > li, dd li { margin: 1em 0; }","msgtype":"m.text"},"ts":1367504723000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: it makes some lists have spacing and others not, which looks weird (in html-differences at least)","msgtype":"m.text"},"ts":1367504765000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: could the selector be changed to just `li` (and use a class where you don't want the spacing)?","msgtype":"m.text"},"ts":1367504821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: http://html-differences.whatwg.org/#development-model have some suggestions for the text re 5.1 should i file a bug?","msgtype":"m.text"},"ts":1367504873000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"SteveF: sure","msgtype":"m.text"},"ts":1367504900000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ok will do","msgtype":"m.text"},"ts":1367504909000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"(you can select text in the spec and a link should appear to file a bug)","msgtype":"m.text"},"ts":1367504929000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"also noted some inaccuracies so will file bugs","msgtype":"m.text"},"ts":1367504933000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1367504939000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: (like the \"brief\" class which exists already)","msgtype":"m.text"},"ts":1367505032000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"SteveF: did you cc me or am I on the default cc list somehow?","msgtype":"m.text"},"ts":1367505512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"must be on default i just filed bugs","msgtype":"m.text"},"ts":1367505530000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"MikeSmith: can you remove me from that component? The one that reads \"HTML5 differences from HTML4 (editor: Anne van Kesteren)\"","msgtype":"m.text"},"ts":1367505649000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: (before you decide to rename the component, you want to coordinate that with zcorpan)","msgtype":"m.text"},"ts":1367505672000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"i'm OK with renaming the component. \"HTML differences from HTML4 (editor: Simon Pieters)\"","msgtype":"m.text"},"ts":1367505735000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh this was about cc","msgtype":"m.text"},"ts":1367505760000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah, renaming seems fine, but since the spec has direct links I thought I'd not ask about that :)","msgtype":"m.text"},"ts":1367505851000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: zcorpan: ok, changed the component name and removed annevk from the Cc field","msgtype":"m.text"},"ts":1367507274000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the links I'll fix later","msgtype":"m.text"},"ts":1367507289000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"ta","msgtype":"m.text"},"ts":1367507299000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: thanks. i can fix the links in html-differences","msgtype":"m.text"},"ts":1367507378000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1367507672000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"zcorpan:mike changing component name has broken the bug script a little","msgtype":"m.text"},"ts":1367508425000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"good morning, Whatwg!","msgtype":"m.text"},"ts":1367511778000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"wow , heres 1:27am :)","msgtype":"m.text"},"ts":1367511920000,"senderName":"Redface_","senderId":"Redface_@irc"},
{"content":{"body":"And here it was 18:27","msgtype":"m.text"},"ts":1367511986000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"where yall live in?","msgtype":"m.text"},"ts":1367512112000,"senderName":"Redface_","senderId":"Redface_@irc"},
{"content":{"body":"dglazkov: Is in California/USA IIRC, I'm in Oslo/Norway.","msgtype":"m.text"},"ts":1367512139000,"senderName":"odinho","senderId":"odinho@irc"},
{"content":{"body":"we span globe like a boss","msgtype":"m.text"},"ts":1367512165000,"senderName":"dglazkov","senderId":"dglazkov@irc"},
{"content":{"body":"Seoul/South Korea over here","msgtype":"m.text"},"ts":1367512180000,"senderName":"Redface_","senderId":"Redface_@irc"},
{"content":{"body":"London reporting in","msgtype":"m.text"},"ts":1367512203000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: pong","msgtype":"m.text"},"ts":1367516262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: fixed the bit I was going to ask about as I got feedback from someone else (in the DOM Standard, last two commits)","msgtype":"m.text"},"ts":1367516312000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Cool.  Looking into the threads, I'm not finding enough agreement to really justify asking you to change the resolve behavior quite yet.  I'll be putting up an email in a few looking for final sign-offs on what I want.","msgtype":"m.text"},"ts":1367516374000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Regarding automatically assimilating thenables.)","msgtype":"m.text"},"ts":1367516400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: look at the suggestion from Domenic and see if that could work for you","msgtype":"m.text"},"ts":1367516892000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Where?","msgtype":"m.text"},"ts":1367516901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: where we'd special case branded Futures","msgtype":"m.text"},"ts":1367516904000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: don't have a pointer handy and in meeting","msgtype":"m.text"},"ts":1367516912000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"kk","msgtype":"m.text"},"ts":1367516916000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If it's \"single-level unwrap native/branded futures, recursively assimilate thenables, just accept everything else\", then that's still not great for me:","msgtype":"m.text"},"ts":1367516949000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It's not *predictable*.  \"Thenable\" is a category that is larger than \"promise-like\", and it means that you can accidentally trip into the \"assimilate\" case without wanting to, just because some API returns an object with a then() method unrelated to promises.","msgtype":"m.text"},"ts":1367516997000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I won't die if that's the behavior we settle on, I'll just be unhappy, because it means that to be predictable, you have to use Future.accept() to wrap the return value of any function that's not meant to return a future/thenable.","msgtype":"m.text"},"ts":1367517142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I agree it would be nicer to not special case \"then\". I don't think that's going to fly.","msgtype":"m.text"},"ts":1367517170000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, so I'm writing up an email to see if it's acceptable now.","msgtype":"m.text"},"ts":1367517188000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"My impression is that you're getting agreement from the monad-camp and everyone else is ignoring it. But hopefully someone speaks up now.","msgtype":"m.text"},"ts":1367517221000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yeah, that's what I want to fix.","msgtype":"m.text"},"ts":1367517322000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"zcorpan rel-discussion is registered, I'm working on rel-issues","msgtype":"m.text"},"ts":1367519896000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"zcorpan, ok rel-issues registered and spec stubbed.","msgtype":"m.text"},"ts":1367520763000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"thanks for the heads-up.","msgtype":"m.text"},"ts":1367520767000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"SteveF: which script?","msgtype":"m.text"},"ts":1367522106000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: prolly the one running on html-differences.whatwg.org","msgtype":"m.text"},"ts":1367522382000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah ok","msgtype":"m.text"},"ts":1367522406000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk: Your recent commits now leave the naming and behavior in an inconsistent state.","msgtype":"m.text"},"ts":1367523800000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You call the first argument to then an \"acceptCallback\", but it still uses the recursive resolve semantics.","msgtype":"m.text"},"ts":1367523871000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"This means, for example, that it's impossible to provide an explicit callback with the same behavior as omitting the callback.","msgtype":"m.text"},"ts":1367523925000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Future.accept(Future.accept(5)).then(cb).then(alert) will, regardless of what \"cb\" is, alert a plain value, not a Future.","msgtype":"m.text"},"ts":1367523962000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"While Future.accept(Future.accept(5)).then().then(alert) will alert a Future.","msgtype":"m.text"},"ts":1367523975000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"MikeSmith: the script that makes it easier to file a bug","msgtype":"m.text"},"ts":1367524213000,"senderName":"SteveF","senderId":"SteveF@irc"},
{"content":{"body":"TabAtkins: the name of the callback indicates when it will be invoked","msgtype":"m.text"},"ts":1367524662000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: futures don't have a \"resolved\" state, it's either \"pending\", \"accepted\", or \"rejected\"","msgtype":"m.text"},"ts":1367524694000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah I see Domenic_ pointed that out already on the list","msgtype":"m.text"},"ts":1367524800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I don't think you understand what I just said, because your response is a non-sequitur.  ^_^","msgtype":"m.text"},"ts":1367525878000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: no it's not","msgtype":"m.text"},"ts":1367525914000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Remember earlier, when you said that \"Future.accept(Future.accept(5)).then(function(x) { return Future.accept(x); }).then(alert)\" would alert \"<object Future>\" rather than \"5\"?  That is, it would only strip one level of Future-ness from the value?","msgtype":"m.text"},"ts":1367525940000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah that was wrong","msgtype":"m.text"},"ts":1367525951000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Yes, and now you have a problem.","msgtype":"m.text"},"ts":1367525968000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"but that's orthogonal to the naming","msgtype":"m.text"},"ts":1367525975000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"There is no possible function you can pass to .then() that is equivalent to not passing a function, and that's dumb.","msgtype":"m.text"},"ts":1367525986000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"relevant: https://github.com/slightlyoff/DOMFuture/issues/13","msgtype":"m.text"},"ts":1367526012000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"TabAtkins: yeah, as I said to you earlier, we could introduce branding for that","msgtype":"m.text"},"ts":1367526105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"TabAtkins: has there been a discussion around :has() as a pseudo class?","msgtype":"m.text"},"ts":1367526128000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"lecuyer: Right now, the use-case for :has() is satisfied by :matches() and/or the subject indicator.","msgtype":"m.text"},"ts":1367526154000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: ah, how did I miss the subject indicator?","msgtype":"m.text"},"ts":1367526315000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"It's buried in a non-obvious section. ^_^","msgtype":"m.text"},"ts":1367526329000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"the ! is new to level 4, right? I dont' see that in 3","msgtype":"m.text"},"ts":1367526385000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"Yes.","msgtype":"m.text"},"ts":1367526389000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"foo:has(bar baz) is equivalent to :matches(!foo bar baz).","msgtype":"m.text"},"ts":1367526428000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"righto","msgtype":"m.text"},"ts":1367526446000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"(I find :has() easier to read for its use-cases, though.)","msgtype":"m.text"},"ts":1367526499000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"subject indicator is going to be amazing","msgtype":"m.text"},"ts":1367526599000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Unfortunately, we've had to put it in the \"complete\" profile, so it'll only be available to JS APIs, not normal CSS selectors.","msgtype":"m.text"},"ts":1367526681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"oh no why :(","msgtype":"m.text"},"ts":1367526705000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Because it's not fast. ^_^","msgtype":"m.text"},"ts":1367526715000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":":(. Is there another way to solve the common \"previous sibling\" requirement than `!foo bar`?","msgtype":"m.text"},"ts":1367526787000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Doing *just* a \"previous sibling\" or \"parent\" thing isn't terrible, and can probably be done in the fast profile (according to bzbarsky).","msgtype":"m.text"},"ts":1367526836000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But we haven't done so yet.","msgtype":"m.text"},"ts":1367526840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"siiiigh","msgtype":"m.text"},"ts":1367526852000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"maybe some genius on the blink or ie team will think of a way to make it fast and then everyone else will be pressured into adding it ^_^","msgtype":"m.text"},"ts":1367526900000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"oh no the reference combinator is gone too, poor labels","msgtype":"m.text"},"ts":1367526945000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"No it's not.","msgtype":"m.text"},"ts":1367526951000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Domenic_: There's ways to make it fast, it's just complicated and probably requires some sophisticated caching","msgtype":"m.text"},"ts":1367526960000,"senderName":"fantasai","senderId":"fantasai@irc"},
{"content":{"body":"it's under complete i mean","msgtype":"m.text"},"ts":1367526968000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Oh, right.  That's a borderline case - we need implementor feedback for it.","msgtype":"m.text"},"ts":1367527035000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"The Futures discussion is nice. I get to silently agree with TabAtkins and so neatly avoid the work of actually getting involved.","msgtype":"m.text"},"ts":1367527835000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: I wish more people *would* speak up.  Even if I *am* a shining voice of reason in the darkness, if I'm the only one, it's easy for \"the other side\" to treat me like a lone objector and route around me.","msgtype":"m.text"},"ts":1367528401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I think what you're asking is blazingly reasonable","msgtype":"m.text"},"ts":1367530320000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"crap, disregard the email I \"sent\", my client auto-sent when I closed the window :(","msgtype":"m.text"},"ts":1367531148000,"senderName":"lecuyer","senderId":"lecuyer@irc"},
{"content":{"body":"fantasai, TabAtkins, thanks for dealing with the scoping stuff in selectors. I should be able to get back to doing some spec work next week. I can't do it this weekend as I'm busy moving apartment.","msgtype":"m.text"},"ts":1367531297000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"though, note, hopefully the next time a spec with selectors api is published, it will be as part of the DOM spec, and not the independent selectors api 2 spec.","msgtype":"m.text"},"ts":1367531336000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"No problem!","msgtype":"m.text"},"ts":1367531348000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"mailing lists might actually help with this: http://dilbert.com/strips/comic/2013-05-02/","msgtype":"m.text"},"ts":1367532716000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"Yay, I have Jonas agreeing with me so far!","msgtype":"m.text"},"ts":1367533823000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's helpful.","msgtype":"m.text"},"ts":1367533826000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is it just me or are my emails not threading correctly -_-","msgtype":"m.text"},"ts":1367534307000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Works for me.","msgtype":"m.text"},"ts":1367534314000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: ARRRRGH, I'm not intending my mails to read as \"We made a spec and you didn't, so stfu\".","msgtype":"m.text"},"ts":1367534333000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I was getting getting angry at Mark for pretending like there's a real spec for promises-in-his-head that we all have to defer to, so that whatever I say is irrelevant.","msgtype":"m.text"},"ts":1367534358000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I was, however, intending them to be read as \"Shit or get off the pot.\"","msgtype":"m.text"},"ts":1367534383000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: are you aware of his involvement in Promises/A+?","msgtype":"m.text"},"ts":1367534883000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"Yes, definitely.","msgtype":"m.text"},"ts":1367534890000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But, to the best of my knowledge, he keeps referring to a tc39 promises spec, not the separate promises/a+ spec that you're in charge of.","msgtype":"m.text"},"ts":1367534916000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"If I'm wrong, sorry, but he hasn't made this clear. ^_^","msgtype":"m.text"},"ts":1367534928000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm not sure that's what he's referring to, but it was my impression he was, because part of the Promises/A+ goal is to be something TC39 can build on, and his involvement has been toward that.","msgtype":"m.text"},"ts":1367535474000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"My experience is that Mark is often unclear to the point of being obfuscatory. :/  It takes effort to make sure you actually know what he's talking about.","msgtype":"m.text"},"ts":1367535901000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But whatever, I'm just trying to get shit down, and don't mean to be rude to anyone. :/","msgtype":"m.text"},"ts":1367535917000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]