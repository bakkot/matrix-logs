[
{"content":{"body":"In case anyone is interested in historical trivia about innerHTML and <script>: https://bugzilla.mozilla.org/show_bug.cgi?id=155146#c10","msgtype":"m.text"},"ts":1618833582000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"That *is* fun to know","msgtype":"m.text"},"ts":1618841778000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"hello all, would anyone here be willing to give a 1 minute sanity check on a potential proposal? i feel certain it must either already exist, or it did exist but was rejected, but i couldn't find it. i could also just proceed to file a github issue but i didn't want to create noise with a dup.","msgtype":"m.text"},"ts":1618859157000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"ianlovejoy: just post it here and check the logs later","msgtype":"m.text"},"ts":1618860218000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ianlovejoy: you could also float it past WICG first","msgtype":"m.text"},"ts":1618860240000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's pretty simple to describe, so i think i'll just post it here, thanks! my apologies in advance if this has been discussed already.","msgtype":"m.text"},"ts":1618860403000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"i'm building a browser-based application with locally persistent state (IndexedDB) that talks to a server (via WebSockets) but is also intended to be resilient to temporary network failure. SharedWorker is a great help in keeping multiple tabs/windows in sync, but even so maintaining a messaging layer is adding more complexity than i'd like. so what i'd really like is to be able to have the page opt in to a single event loop / memo","msgtype":"m.text"},"ts":1618860778000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"ce across all tabs/windows, as would happen if one opened all the others. this is, of course, the way most native desktop and mobile apps work, and it allows sharing an in-memory model as well as a persistent model, without the need for a messaging layer.","msgtype":"m.text"},"ts":1618860778000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"ianlovejoy: I’m afraid no browser will want to change that. You’re stuck with messages of some kind","msgtype":"m.text"},"ts":1618861365000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, thank you for the feedback! i was afraid of / expecting that answer… can i ask why they would not want to change that?","msgtype":"m.text"},"ts":1618861437000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"i mean, it's already implemented for the case where one tab opens another… \"all\" that is missing is the opt-in capability for independently opened tabs.","msgtype":"m.text"},"ts":1618861474000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"(i wouldn't ask except that i feel like this is a significant burden on all complex, stateful web based apps)","msgtype":"m.text"},"ts":1618861551000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"Poses challenges for responsiveness, back-forward cache. In general we want to enable more parallelism and reduce the issues popups brought","msgtype":"m.text"},"ts":1618861772000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ianlovejoy: https://whatwg.org/faq#adding-new-features might of interest too; perhaps there are other solutions","msgtype":"m.text"},"ts":1618861835000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok, thank you for the feedback, much appreciated.","msgtype":"m.text"},"ts":1618861845000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"i have searched fairly extensively for other solutions, SharedWorker is the best i have found.","msgtype":"m.text"},"ts":1618861968000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"i've now taken up much more of your time than the promised one minute, so i will bug you no more, thangs again","msgtype":"m.text"},"ts":1618862042000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"ianlovejoy: there’s also BroadcastChannel (and service workers and storage events…)","msgtype":"m.text"},"ts":1618862364000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: yes indeed, thank you! and also of course IndexedDb transactions can be used to ensure data consistency in a multithreaded access scenario. the message / transactional store pattern is quite familiar to me (no doubt to all of us) from server development, but it does involve a fair amount of complexity.","msgtype":"m.text"},"ts":1618869209000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"when building a native client, given that there is only a single user at a time, i usually find it much simpler (no doubt we all do) to pass all access to local persistent state through a shared layer, which being a singleton can easily cache data in memory with complete accuracy, including complex derived data such as summary data.","msgtype":"m.text"},"ts":1618869222000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"also any changes to the data can be reflected in the interested view(s) through the observer pattern without worrying about race conditions that can occur in asynchronous messaging","msgtype":"m.text"},"ts":1618869335000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"i find this naturally reflects the user's conception of multiple windows as different views on the same underlying data","msgtype":"m.text"},"ts":1618869407000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"},
{"content":{"body":"however, you have very nicely explained that i'm not going to get that for this project! so i'll take the messaging path. :)","msgtype":"m.text"},"ts":1618869451000,"senderName":"ianlovejoy","senderId":"ianlovejoy@irc"}
]