[
{"content":{"body":"AryehGregor: i keep replying to that thread without reading the whole thin","msgtype":"m.text"},"ts":1306454520000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"i might just be making a fool of myself","msgtype":"m.text"},"ts":1306454521000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"ah well","msgtype":"m.text"},"ts":1306454522000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"jamesr: i already said that it's sort of silly to think about adding a complex feature to the platform so mirrors don't have to mirror a version of a file with a few lines of code wrapped around it :)","msgtype":"m.text"},"ts":1306454880000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not sure whether that works trivially with complex script sets like jquery (eg. to just boilerplate it automatically) or if it needs more work than that","msgtype":"m.text"},"ts":1306454940000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think it's brave to assume that script authors will step up to the plate here","msgtype":"m.text"},"ts":1306454941000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"it's also extra bytes that not all users of the script will want to care about","msgtype":"m.text"},"ts":1306454942000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"given that the only scripts we're really talking about here are big ones, adding a dozen or two lines of code around them doesn't seem worth worrying about","msgtype":"m.text"},"ts":1306454943000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"not necessarily big ones, ones that have expensive top-level statements","msgtype":"m.text"},"ts":1306455000000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"it could be a tiny-ass script that does a full DOM walk in some top-level statement","msgtype":"m.text"},"ts":1306455001000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"and even small scripts can be expensive to download if the RTT is high","msgtype":"m.text"},"ts":1306455120000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"like it is on mobile","msgtype":"m.text"},"ts":1306455121000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"so you might want to start the download asap because it takes a few seconds to set up a new HTTP connection","msgtype":"m.text"},"ts":1306455122000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"you'd also want a little more framework for this sort of thing in any case; for example, to do things like say \"load this script, and run this callback when it's available or immediately if it's already loaded\"","msgtype":"m.text"},"ts":1306455123000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"but again it doesn't seem like we need browser-level help there","msgtype":"m.text"},"ts":1306455180000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"hmm, is it possible for an external script to get its own URL? can't say I've ever tried","msgtype":"m.text"},"ts":1306455240000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"just thinking of APIs like load_script(url, callback), with the script looking like registerScript(my_url, top_level_function)","msgtype":"m.text"},"ts":1306455300000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(without hardcoding the URL in the file)","msgtype":"m.text"},"ts":1306455301000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(user-library APIs, that is, not suggesting a browser API like that)","msgtype":"m.text"},"ts":1306455480000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"Hixie, ping","msgtype":"m.text"},"ts":1306456080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yo","msgtype":"m.text"},"ts":1306456260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sup","msgtype":"m.text"},"ts":1306456261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hey, I'm trying to work out what to do with Date","msgtype":"m.text"},"ts":1306456380000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"as used in HTMLInputElement and HTMLTimeElement","msgtype":"m.text"},"ts":1306456381000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Dates in JS are mutable","msgtype":"m.text"},"ts":1306456382000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah, the attributes in question say to return a new object each time iirc","msgtype":"m.text"},"ts":1306456383000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that sounds like the same kind of undesirable behaviour that led to the \"don't allow sequences to be the type of attributes\" decision recently","msgtype":"m.text"},"ts":1306456440000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: BTW, I hate that the DOM viewer breaks the back button. Can that be fixed?","msgtype":"m.text"},"ts":1306456441000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"do we have implementations of those Date attributes yet?","msgtype":"m.text"},"ts":1306456500000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: it's bad for sequences because they almost always get used in loops","msgtype":"m.text"},"ts":1306456501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: for dates, it doesn't seem like a big deal","msgtype":"m.text"},"ts":1306456502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, true, it's probably not as bad","msgtype":"m.text"},"ts":1306456503000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: especially since dates can be implemented in js engines as a native very fast type","msgtype":"m.text"},"ts":1306456504000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: so creating a new one need not be expensive","msgtype":"m.text"},"ts":1306456505000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so what I'm wondering about really is what's the semantics of the IDL type \"Date\"","msgtype":"m.text"},"ts":1306456506000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"is it a mutable or immutable value?","msgtype":"m.text"},"ts":1306456560000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's just an object type, no?","msgtype":"m.text"},"ts":1306456561000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like RegExp or HTMLElement or Object","msgtype":"m.text"},"ts":1306456562000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"a reference type, i should say","msgtype":"m.text"},"ts":1306456563000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"mm","msgtype":"m.text"},"ts":1306456564000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so you would be able to modify it","msgtype":"m.text"},"ts":1306456620000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but the current uses of the type happen to have \"always return a new one\" behaviour","msgtype":"m.text"},"ts":1306456621000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so would never see the modifications","msgtype":"m.text"},"ts":1306456622000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"but future APIs could","msgtype":"m.text"},"ts":1306456623000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah, you could imagine an attribute that kept a reference to the object so that you could modify it","msgtype":"m.text"},"ts":1306456624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there's something that doesn't feel quite right about native JS object mutation causing something to happen in the DOM","msgtype":"m.text"},"ts":1306456680000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"wow, the webidl and html validators got huge numbers of new warnings since i last regenned the spec a few hours ago","msgtype":"m.text"},"ts":1306456681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: yeah i don't think we'd ever do that in practice","msgtype":"m.text"},"ts":1306456682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but you would be ok with having a DOM object / future API look at the \"current value\" of a Date object","msgtype":"m.text"},"ts":1306456740000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"\"Interface CanvasRenderingContext2D.drawImage() has a non-optional argument after an optional one\" that's not a bug is it?","msgtype":"m.text"},"ts":1306456741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yes it is","msgtype":"m.text"},"ts":1306456742000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it's hard to comment on future APIs without a concrete example","msgtype":"m.text"},"ts":1306456800000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sure","msgtype":"m.text"},"ts":1306456801000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"why is that not valid now?","msgtype":"m.text"},"ts":1306456802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what do you want it to mean?","msgtype":"m.text"},"ts":1306456803000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"pulls up the spec","msgtype":"m.emote"},"ts":1306456804000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: BTW, I hate that the DOM viewer breaks the back button. Can that be fixed?","msgtype":"m.text"},"ts":1306456805000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"i thought it used to mean \"you can truncate here\"","msgtype":"m.text"},"ts":1306456806000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah right","msgtype":"m.text"},"ts":1306456807000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Yuhong: oops, sorry, forgot to reply to you before","msgtype":"m.text"},"ts":1306456808000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yuhong: how does it break it?","msgtype":"m.text"},"ts":1306456809000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you are right, that used to be valid, and I took it out","msgtype":"m.text"},"ts":1306456810000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I think it looks quite confusing in the IDL","msgtype":"m.text"},"ts":1306456860000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1306456861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"as if you can omit just that middle parameter","msgtype":"m.text"},"ts":1306456862000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i can just list all the variants i guess","msgtype":"m.text"},"ts":1306456863000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1306456864000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"12 of them then? :)","msgtype":"m.text"},"ts":1306456865000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: Try typing in the textbox, and then click back several times.","msgtype":"m.text"},"ts":1306456866000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Yuhong: it seems to work... it goes back through the various states of the iframe, per spec, no?","msgtype":"m.text"},"ts":1306456867000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: some large number :-)","msgtype":"m.text"},"ts":1306456920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: Yea, but the textbox doesn't update making it useless for undo","msgtype":"m.text"},"ts":1306456921000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Yuhong: true. don't hit back :-)","msgtype":"m.text"},"ts":1306456980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: and if you do a lot of typing it is easy to lose track.","msgtype":"m.text"},"ts":1306456981000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"heycam: btw i just checked in an update for websockets that introduces an attribute whose value is a type, which might be controversial","msgtype":"m.text"},"ts":1306456982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"um","msgtype":"m.text"},"ts":1306456983000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"what now? :)","msgtype":"m.text"},"ts":1306456984000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"Hixie: I try to open it in a separate tab.","msgtype":"m.text"},"ts":1306456985000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"Hixie, link?","msgtype":"m.text"},"ts":1306457040000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"heycam: lets you pick whether you want binary data to be Blob or ArrayBuffer, so the attribute's allowed values are literally the Blob and ArrayBuffer interface objects","msgtype":"m.text"},"ts":1306457041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: and if you do a lot of typing it is easy to lose track of where you were before.","msgtype":"m.text"},"ts":1306457042000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"heycam: http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-websocket-binarytype","msgtype":"m.text"},"ts":1306457043000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: is there some way to mute the \"not yet implemented\" warnings? i use unimplemented stuff on purpose :-)","msgtype":"m.text"},"ts":1306457160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, yeah I'm not sure I like that :)","msgtype":"m.text"},"ts":1306457220000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"as a general mechanism for mentioning types, it wouldn't handle anything that doesn't have an interface object","msgtype":"m.text"},"ts":1306457221000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"or primitive types","msgtype":"m.text"},"ts":1306457222000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well, I guess you could use Number, Boolean, ...","msgtype":"m.text"},"ts":1306457223000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah what i really want is a native type type in js","msgtype":"m.text"},"ts":1306457224000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"BTW, in IE8/9 the browser and document mode if you set them using developer tools override everything else, which is why I do that in a separate tab too.","msgtype":"m.text"},"ts":1306457225000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"AryehGregor: I remember Descent had various 3D modes, like a red-green one and a uncrossed-eye one, I think, and that was a fairly important game","msgtype":"m.text"},"ts":1306457280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heycam: only 9 drawImage()s it seems, so not so bad","msgtype":"m.text"},"ts":1306457460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: what's the practical difference between Foo[] and sequence<Foo> when used as a host object argument type?","msgtype":"m.text"},"ts":1306457520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, none if there is no way to pass in an actual, existing array host object","msgtype":"m.text"},"ts":1306457640000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"if you pass in a JS native array both will \"do the right thing\"","msgtype":"m.text"},"ts":1306457641000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1306457642000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sequence probably capture the semantics better if there is no way to pass in an array host object","msgtype":"m.text"},"ts":1306457643000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"in that case i'm just changing MessagePortArray from a sequence to an array and not making any other changes and it should just be better now","msgtype":"m.text"},"ts":1306457644000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since it's used for attributes and arguments","msgtype":"m.text"},"ts":1306457700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so you can take an existing array host object (got from an attribute) and pass it in as an argument","msgtype":"m.text"},"ts":1306457701000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"when you pass it in to that argument will the object keep a hold of that object reference?","msgtype":"m.text"},"ts":1306457702000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and possibly react to it changing from user script?","msgtype":"m.text"},"ts":1306457703000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1306457760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so the function will just grab out all the array element values when you call it and do something with them?","msgtype":"m.text"},"ts":1306457761000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1306457820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1306457821000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"except for MessageEvent.initMessageEvent(), where it's undefined, i guess","msgtype":"m.text"},"ts":1306457822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so there are no practical differences between using array and sequence","msgtype":"m.text"},"ts":1306457823000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"a Foo[] attribute always returns a new object right?","msgtype":"m.text"},"ts":1306457824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sequence captures this \"passing in a copy, a refererence to it can never be kept\"","msgtype":"m.text"},"ts":1306457825000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"captures it better","msgtype":"m.text"},"ts":1306457826000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"no, a Foo[] attribute returns what you want it to","msgtype":"m.text"},"ts":1306457880000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1306457881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so wait, what's the difference between sequence<> and [] for attributes? i thought we were changing this because sequence<>s returned the same object and []s returned a new one","msgtype":"m.text"},"ts":1306457882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"no, it's sequences that would always return a new object","msgtype":"m.text"},"ts":1306457940000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"hence being disallowed","msgtype":"m.text"},"ts":1306457941000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"a T[] could return a new object or the same one, it's up to you","msgtype":"m.text"},"ts":1306457942000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1306457943000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1306457944000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but I would say that returning a new one wouldn't be good, for the reasons we disallow sequences there","msgtype":"m.text"},"ts":1306457945000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"*a new one always","msgtype":"m.text"},"ts":1306457946000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh wait, []s can be made readonly right?","msgtype":"m.text"},"ts":1306458000000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's how we get around this","msgtype":"m.text"},"ts":1306458001000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"the array object itself, yes","msgtype":"m.text"},"ts":1306458002000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"its contents can be made read only","msgtype":"m.text"},"ts":1306458003000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1306458004000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"#dfn-read-only-array or something in Web IDL","msgtype":"m.text"},"ts":1306458005000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ok so i just need to make initMessageEvent copy the array and then .ports return a readonly one","msgtype":"m.text"},"ts":1306458006000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"make it return a read only one, and make it return the same one always, yeah?","msgtype":"m.text"},"ts":1306458060000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"and then the only messages dom's idl checker will be giving me are 50 messages about [Supplemental] and one about some other attribute","msgtype":"m.text"},"ts":1306458061000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1306458062000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"having the initMessageEvent argument be a sequence<MessagePort> captures the copying semantics","msgtype":"m.text"},"ts":1306458063000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"so you wouldn't have to state that explicitly","msgtype":"m.text"},"ts":1306458064000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah but then i have to have two types","msgtype":"m.text"},"ts":1306458065000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you don't need to typedef these btw","msgtype":"m.text"},"ts":1306458120000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh, good","msgtype":"m.text"},"ts":1306458121000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"then i'll just do that then","msgtype":"m.text"},"ts":1306458122000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there was a requirement to typedef them ages ago, but that got removed","msgtype":"m.text"},"ts":1306458123000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1306458124000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that makes this much neater","msgtype":"m.text"},"ts":1306458125000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1306458126000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"AryehGregor: Minecraft has a 3d mode.","msgtype":"m.text"},"ts":1306458300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"heycam: fyi, i get 50+ of the first one of these and one of the second:","msgtype":"m.text"},"ts":1306458840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Line 0 of IDL #0:Extended attribute of Supplemental is unknown in WebIDL.","msgtype":"m.text"},"ts":1306458841000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Line 0 of IDL #0:Extended attribute of ReplaceableNamedProperties is unknown in WebIDL.","msgtype":"m.text"},"ts":1306458842000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"[ReplaceableNamedProperties] is apparently http://www.w3.org/Bugs/Public/show_bug.cgi?id=8241","msgtype":"m.text"},"ts":1306458843000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh hey you aslked me a question there","msgtype":"m.text"},"ts":1306458900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm","msgtype":"m.text"},"ts":1306458960000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heycam: didn't we recently discuss doing this by having Window inherit from something or the other way around or something?","msgtype":"m.text"},"ts":1306458961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, what's the context there?","msgtype":"m.text"},"ts":1306459080000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"the bug","msgtype":"m.text"},"ts":1306459081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"making <script> foo = 1; status = 2; var bar = 3; </script> do the right thing","msgtype":"m.text"},"ts":1306459140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I do remember discussing something about having an extra object in the proto chain or Window","msgtype":"m.text"},"ts":1306459200000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"it unfortunately doesn't seem to be paged in to my head at the moment :)","msgtype":"m.text"},"ts":1306459201000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"yeah me either","msgtype":"m.text"},"ts":1306459202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'll read up on it again next week and work out what's going on there","msgtype":"m.text"},"ts":1306459260000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"oh well k","msgtype":"m.text"},"ts":1306459261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er","msgtype":"m.text"},"ts":1306459320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"k\"","msgtype":"m.text"},"ts":1306459321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, s/methos/method/ in that recent commit","msgtype":"m.text"},"ts":1306459800000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1306459801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I forget - is <link itemprop href> allowed in <body>?","msgtype":"m.text"},"ts":1306462140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Or do you need to use <meta> to embed a link?","msgtype":"m.text"},"ts":1306462141000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Never mind, answered my own question.","msgtype":"m.text"},"ts":1306462142000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Yes.)","msgtype":"m.text"},"ts":1306462143000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: i think what guha was suggesting is slightly different","msgtype":"m.text"},"ts":1306467420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: he wants the value to be an item with an id, not a url","msgtype":"m.text"},"ts":1306467480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: as far as i can tell, he just wants to be able to omit the itemscope=\"\" attribute for brevity","msgtype":"m.text"},"ts":1306467481000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, I added a date type, but I called it \"date\" rather than \"Date\" (for consistency with \"object\" (but inconsistency with \"DOMString\"!))","msgtype":"m.text"},"ts":1306473180000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"why not Date? that's what it is in JS","msgtype":"m.text"},"ts":1306473300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was going for \"built in types are lowercase\" (except for DOMString because people complained about that)","msgtype":"m.text"},"ts":1306473360000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i'd go with all primitive types are lowercase","msgtype":"m.text"},"ts":1306473420000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and reference types are capitalised","msgtype":"m.text"},"ts":1306473421000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and then change 'object' to 'Object', mostly because that's how I always spell it anyway","msgtype":"m.text"},"ts":1306473480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1306473481000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"to the point that I've seriously considered a typedef","msgtype":"m.text"},"ts":1306473482000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":-)","msgtype":"m.text"},"ts":1306473483000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I didn't particularly want to rename object again!","msgtype":"m.text"},"ts":1306473484000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"well i was mostly kidding with that last bit","msgtype":"m.text"},"ts":1306473485000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1306473486000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"though i do really always type it Object","msgtype":"m.text"},"ts":1306473487000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"at the end of the day I don't really mind either way, but Date would be mildly less inconvenient because it's what I've used already and it's what JS has","msgtype":"m.text"},"ts":1306473540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so I don't have to have inside-baseball notes about how a \"date\" is a \"Date\" and so on","msgtype":"m.text"},"ts":1306473541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"all right","msgtype":"m.text"},"ts":1306473542000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"from a blackbox perspective, Date isn't really any more native than HTMLElement","msgtype":"m.text"},"ts":1306473600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if that helps","msgtype":"m.text"},"ts":1306473601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i mean, it's in a different spec, but that's a conway's law detail","msgtype":"m.text"},"ts":1306473602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not \"real\"","msgtype":"m.text"},"ts":1306473603000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"suppose so","msgtype":"m.text"},"ts":1306473660000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"I also made it more \"value like\" for now","msgtype":"m.text"},"ts":1306473661000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"i.e. returns new objects each time you get the attribute","msgtype":"m.text"},"ts":1306473662000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"references don't get held by dom objects","msgtype":"m.text"},"ts":1306473663000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1306473720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, renamed to \"Date\"","msgtype":"m.text"},"ts":1306473840000,"senderName":"heycam","senderId":"heycam@irc"},
{"content":{"body":"ahoy","msgtype":"m.text"},"ts":1306477980000,"senderName":"JonathanNeal","senderId":"JonathanNeal@irc"},
{"content":{"body":"what's the procedure to check why webgl doesn't work in latest safari?","msgtype":"m.text"},"ts":1306485060000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: why is binaryType not a string?","msgtype":"m.text"},"ts":1306485780000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Hixie: xhr's responseType uses strings \"arraybuffer\" and \"blob\"","msgtype":"m.text"},"ts":1306485960000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"hsivonen: so, OK if I flip the Unicode Normalization checker to emitting a warning instead of an error?","msgtype":"m.text"},"ts":1306486860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: also, I chatted with r12a about it and from that I got the impression he kind of hit a brick wall with it in previous discussions with Hixie and/or others in the group","msgtype":"m.text"},"ts":1306486980000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: ok","msgtype":"m.text"},"ts":1306486981000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1306486982000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"anyway, I'm not sure what concrete plans Richard or others from the i18n wg have for re-pursusing it","msgtype":"m.text"},"ts":1306487040000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but, I think his and their position remains that it should be a requirement in specs","msgtype":"m.text"},"ts":1306487041000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"actually, he said specifically that they now recommend late normalization but only for id and class names and selectors","msgtype":"m.text"},"ts":1306487100000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and not for content","msgtype":"m.text"},"ts":1306487101000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: he pointed me at the following as an example of the kind of reporting he thinks is useful (and that he's implemented himself)","msgtype":"m.text"},"ts":1306487220000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://validator.w3.org/i18n-checker/index?docAddr=http%3A%2F%2Frishida.net%2Ftools%2Fi18nchecker%2Ftest.php&async=true","msgtype":"m.text"},"ts":1306487221000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"in particular, see errors and warnings in the \"Detailed report\"  section","msgtype":"m.text"},"ts":1306487280000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so the key here is that normalization is a warning rather than an error?","msgtype":"m.text"},"ts":1306487340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: well, along with the fact that it doesn't do checking of content","msgtype":"m.text"},"ts":1306487580000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: what's the reason not to check content?","msgtype":"m.text"},"ts":1306487581000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"because they now do not recommend late normalization for content, but only for id and class names and selectors","msgtype":"m.text"},"ts":1306487640000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"if I understand correctly","msgtype":"m.text"},"ts":1306487641000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"dunno, maybe they do for early normalization?","msgtype":"m.text"},"ts":1306487700000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have to admit that I'm not clear on what the distinction is between early normalization and late normalization","msgtype":"m.text"},"ts":1306487760000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"or if that distinction might have relevance to whether to check for it in content rather than just in attribute values","msgtype":"m.text"},"ts":1306487761000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but I can ask him again","msgtype":"m.text"},"ts":1306487820000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: ok, r12a says, thet do generally recommend that people save content as NFC","msgtype":"m.text"},"ts":1306488060000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so a validator can warn if they don't, to be helpful","msgtype":"m.text"},"ts":1306488061000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"but he says there may be occasions where someone who knows what they are doing actually *wants* to write something in NFD","msgtype":"m.text"},"ts":1306488120000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and gives as an example, if, say, you write some javascript to do normalization, you have to be able to write some of the data in NFD for the algorithm to work","msgtype":"m.text"},"ts":1306488180000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"so, summary from discussion with him is that, yeah, it's appropriate for it to be a warning (as opposed to an error)","msgtype":"m.text"},"ts":1306488540000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"and that it's appropriate for that warning to be emitted for content as well as attribute values","msgtype":"m.text"},"ts":1306488541000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hsivonen: r12a points me to this:","msgtype":"m.text"},"ts":1306489620000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-i18n-core/2011AprJun/0085.html","msgtype":"m.text"},"ts":1306489621000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hello","msgtype":"m.text"},"ts":1306499400000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"did you guys actually write html5?","msgtype":"m.text"},"ts":1306499401000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"If you mean the actual spec text, Hixie did that, yes","msgtype":"m.text"},"ts":1306499520000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"oh man, hixie is actually here!","msgtype":"m.text"},"ts":1306499580000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"according to Introducing HTML5, Hixie moved to Google!","msgtype":"m.text"},"ts":1306499640000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"Well, he did","msgtype":"m.text"},"ts":1306499641000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"He's awesome!","msgtype":"m.text"},"ts":1306499700000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"It's funny, most of you guys have Pokemon-like names :>","msgtype":"m.text"},"ts":1306500000000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"Hixie is everywhere","msgtype":"m.text"},"ts":1306500180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"thought Dashimon was the only pokemon name around here","msgtype":"m.emote"},"ts":1306500240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Oh that may explain why I felt something weird in my pants","msgtype":"m.text"},"ts":1306500300000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"hsivonen: Pokemon names don't actually end in mon","msgtype":"m.text"},"ts":1306500420000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"A better guess would be Digimon","msgtype":"m.text"},"ts":1306500421000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"Workshiva: shows how little I know about *mon","msgtype":"m.text"},"ts":1306500480000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Then you should be careful about labeling names as pokemon, people might think you're an expert ;)","msgtype":"m.text"},"ts":1306500780000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"thought hsivonen was a pokemon expert.","msgtype":"m.emote"},"ts":1306500840000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"Workshiva: sorry","msgtype":"m.text"},"ts":1306501080000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I know all about pokeman","msgtype":"m.text"},"ts":1306501860000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I have a 7th-degree experts status in pokeman","msgtype":"m.text"},"ts":1306501861000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: I guess that's required to get residence in Japan?","msgtype":"m.text"},"ts":1306503660000,"senderName":"Workshiva","senderId":"Workshiva@irc"},
{"content":{"body":"buries MikeSmith in Yu-Gi-Oh! cards","msgtype":"m.emote"},"ts":1306504320000,"senderName":"asmodai","senderId":"asmodai@irc"},
{"content":{"body":"exit","msgtype":"m.text"},"ts":1306509000000,"senderName":"Shiningnorance","senderId":"Shiningnorance@irc"},
{"content":{"body":"wonders if someone has mentioned that if there's some way to improve script loading by modifying scripts and you want to load jQuery with it, it'd be much easier to get jQuery modified than to add features into every browser engine to work around hypothetical unmodifiability","msgtype":"m.emote"},"ts":1306520640000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm afraid you're wrong, jquery has been set in stone","msgtype":"m.text"},"ts":1306520760000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Oh, in that case browsers could just bundle jQuery and maybe even port it all to C++ so they don't have to do run-time compilation at all","msgtype":"m.text"},"ts":1306520820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So the problem's solved either way","msgtype":"m.text"},"ts":1306520821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Port it to C++ when browser vendors are moving stuff to JS? :P","msgtype":"m.text"},"ts":1306520880000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"implement jQuery in hardware and sell it as a dongle","msgtype":"m.text"},"ts":1306520881000,"senderName":"tomasf","senderId":"tomasf@irc"},
{"content":{"body":"gsnedders: JS is overrated","msgtype":"m.text"},"ts":1306521000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"C++ is the language of the future","msgtype":"m.text"},"ts":1306521001000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: pssh, everyone knows that basic is where its at","msgtype":"m.text"},"ts":1306521060000,"senderName":"jcranmer","senderId":"jcranmer@irc"},
{"content":{"body":"Someone needs to write a BASIC-to-LLVM compiler, and then attach it to that LLVM-to-JS compiler","msgtype":"m.text"},"ts":1306521120000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://stevehanov.ca/blog/index.php?id=92 - ooh","msgtype":"m.text"},"ts":1306521240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: i did point that out, yes :)","msgtype":"m.text"},"ts":1306521420000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: Ah, good, then I don't need to have said anything :-)","msgtype":"m.text"},"ts":1306521480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-May/031799.html","msgtype":"m.text"},"ts":1306521600000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"gsnedders, browser vendors are only moving non-performance-sensitive stuff to JS, right?  Parts of jQuery are probably performance-sensitive.","msgtype":"m.text"},"ts":1306521660000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"10min of playing Snake later... thanks Philip` ;)","msgtype":"m.text"},"ts":1306521720000,"senderName":"paul_irish","senderId":"paul_irish@irc"},
{"content":{"body":"AryehGregor: You like poking sleeping bears I see :)","msgtype":"m.text"},"ts":1306521960000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Occasionally.","msgtype":"m.text"},"ts":1306521961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Depends what you mean by perf-sensitive. Moz playing around with NodeList in JS, that seems fairly perf vital.","msgtype":"m.text"},"ts":1306523160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: The vital point is the gain from being able to inline stuff (and potentially optimize based upon that), the removal of the cost of calling into host code, versus the less good general optimization it'll get from the compiler","msgtype":"m.text"},"ts":1306523280000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Interesting point.","msgtype":"m.text"},"ts":1306523281000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"gsnedders, that's still written in C++, though","msgtype":"m.text"},"ts":1306523340000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I saw something from someone (bz?) about experimenting with it.","msgtype":"m.text"},"ts":1306523341000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"With proxies, but not in JS","msgtype":"m.text"},"ts":1306523342000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Ah.","msgtype":"m.text"},"ts":1306523400000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"AryehGregor: An obvious simple optimization made possible by moving, say, Node.prototype.cloneNode(boolean deep) to JS is you can inline it and then possibly remove the irrelevant deep branch if it is called with a constant argument","msgtype":"m.text"},"ts":1306523520000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"That's one jump.  Surely that can't be a significant perf improvement.","msgtype":"m.text"},"ts":1306523521000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Conditional jump, I should say.","msgtype":"m.text"},"ts":1306523580000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"But still, one instruction.","msgtype":"m.text"},"ts":1306523581000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Jumps are hard, let's go shopping","msgtype":"m.text"},"ts":1306523640000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AryehGregor: That depends if you do it as foreach (children as child) if (deep) or the other way around","msgtype":"m.text"},"ts":1306523641000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well, so just do it the other way around.","msgtype":"m.text"},"ts":1306523642000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Also branch prediction isn't perfect, removing jumps can give you gains.","msgtype":"m.text"},"ts":1306523700000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Does anyone know what happened in the end wrt all the discussions about having two interoperable implementations before finalizing ES3.1?","msgtype":"m.text"},"ts":1306524060000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(Because, well, obviously we don't. There are known compatibility issues with actually implementing the spec.)","msgtype":"m.text"},"ts":1306524180000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders es3 and es5/6?","msgtype":"m.text"},"ts":1306524840000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bga_: ES3.1 == ES5","msgtype":"m.text"},"ts":1306525620000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"es5 nonstrict","msgtype":"m.text"},"ts":1306525680000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"bga_: It's the progressive update before Harmony, so it's all of ES5.","msgtype":"m.text"},"ts":1306525740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1306525741000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"i hope - vendors will continue to support es3 (i mean, improve jit, optimizations, etc)","msgtype":"m.text"},"ts":1306525980000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"Vendors use the exact same engine for all JS versions, I hope.","msgtype":"m.text"},"ts":1306525981000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"one asi -> bytecode engine and many parsers","msgtype":"m.text"},"ts":1306526100000,"senderName":"bga_","senderId":"bga_@irc"},
{"content":{"body":"jgraham: getting 500s again","msgtype":"m.text"},"ts":1306530540000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"You could set anolis up locally ;)","msgtype":"m.text"},"ts":1306530600000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"woah, getting 500s even for the non-w3c one this time","msgtype":"m.text"},"ts":1306530601000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ms2ger: no, i hit CPU limits if i do that","msgtype":"m.text"},"ts":1306530602000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmmm","msgtype":"m.text"},"ts":1306530660000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"You could write smaller specs? :)","msgtype":"m.text"},"ts":1306530661000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"our specs are already too small and spread out","msgtype":"m.text"},"ts":1306530662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"is glad he doesn't have to deal with these crazy VPS things, dedicated hosting FTW","msgtype":"m.emote"},"ts":1306530663000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Alternatively, VPS would be okay if it were pay-by-usage instead of flat fees.  Then you could use some extra CPU or memory occasionally and not have to pay much extra for it.","msgtype":"m.text"},"ts":1306530720000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"nearlyfreespeech.net is pay-by-usage, but it's shared hosting only, alas.  They observe that they can absorb Slashdottings at a one-time cost to you of a few dollars, as compared to a fixed-resources model where you'd have to pay a fortune to be able to withstand a Slashdotting.","msgtype":"m.text"},"ts":1306530780000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Sounds like that would be somewhat harder to set up with non-shared hosting","msgtype":"m.text"},"ts":1306530900000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Well, I really meant that the problem is they only allow you to run websites off the servers, not run random processes on them.","msgtype":"m.text"},"ts":1306530960000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Shared servers where you can run random processes along with other users would work okay.","msgtype":"m.text"},"ts":1306530961000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Like a job-server setup.","msgtype":"m.text"},"ts":1306530962000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"estimates that running a low-traffic site on nearlyfreespeech.net that consists solely of a modest amount of static content would cost <$0.10/month, which is nice, because that's in line with how much they actually pay to provide it","msgtype":"m.emote"},"ts":1306531020000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'd totally look into it if I didn't have unlimited root access to two dedicated 16-core servers with 16 GB of RAM each, paid bandwidth of 10Mbps at 95th percentile, and a total of ~2.1TB of raw 10k RPM storage.","msgtype":"m.text"},"ts":1306531140000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"For free.","msgtype":"m.text"},"ts":1306531200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"AryehGregor: Yes, that's about what I paid at first.  At this point my montly hosting runs around 50c/month.","msgtype":"m.text"},"ts":1306531201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, ah, you use them?  So does my brother (ephraimgregor.com), and the site he runs for my mother (writingaboutart.org).","msgtype":"m.text"},"ts":1306531202000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"i'd consider moving too if i didn't have unlimited disk, bandwidth, users, domains, etc at dreamhost basically for free","msgtype":"m.text"},"ts":1306531260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, I've used nfsn for several years.","msgtype":"m.text"},"ts":1306531261000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"lunch, bbl","msgtype":"m.text"},"ts":1306531262000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: Pay-by-RAM-usage VPS doesn't seem particularly technically easy, since OSes and applications are generally all designed to eat as much RAM as possible","msgtype":"m.text"},"ts":1306531320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it'd be no different to simply paying up-front for a fixed amount","msgtype":"m.text"},"ts":1306531321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, Linux can change the amount of RAM it uses at runtime, for instance if it's a VM and the hypervisor gives it more RAM.","msgtype":"m.text"},"ts":1306531380000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"(maybe also if you physically install new RAM, but I dunno if the hardware supports that, never tried)","msgtype":"m.text"},"ts":1306531381000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"There are also \"balloon drivers\", recently, which try to free up RAM so it can be given back to the host if not enough is free.","msgtype":"m.text"},"ts":1306531382000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"s/host/hypervisor/","msgtype":"m.text"},"ts":1306531383000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"So in theory, you could have it configured to automatically request more RAM as needed and forfeit it when not needed.","msgtype":"m.text"},"ts":1306531440000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"That seems a bit more indirect than measuring actual usage, but there are certainly VPSes that let you buy more RAM and pay per hour and it's immediately available to the machine","msgtype":"m.text"},"ts":1306531441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and you can probably tie it into some load monitoring system so it changes automatically, if you like living dangerously","msgtype":"m.text"},"ts":1306531500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I dunno if virtualization is awesome enough yet to be able to do this kind of thing seamlessly.","msgtype":"m.text"},"ts":1306531501000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I've used gandi.net and added more RAM/CPU/bandwidth dynamically and it's worked seamlessly","msgtype":"m.text"},"ts":1306531560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Well, unless your host is running clustering or is massively overprovisioned, it's unlikely your RAM is going to be able to upgrade itself by more than a few gigabytes.","msgtype":"m.text"},"ts":1306531561000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"Unless they can shift the VM between machines transparently, which I'm under the impression can't be easily done yet, although maybe I'm wrong.","msgtype":"m.text"},"ts":1306531620000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"The cloudy way to do it is to split your application across multiple machines so you don't have to worry too much about running out of physical resources on one, I guess","msgtype":"m.text"},"ts":1306531680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'd argue that VMWare Cluster should count as cloudy too.","msgtype":"m.text"},"ts":1306531681000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"'s demands are modest enough to not need anything that fancy","msgtype":"m.emote"},"ts":1306531682000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"nfsn ftw","msgtype":"m.text"},"ts":1306534080000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"nfsn?","msgtype":"m.text"},"ts":1306534200000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"NearlyFreeSpeech.Net","msgtype":"m.text"},"ts":1306534201000,"senderName":"jamesr","senderId":"jamesr@irc"},
{"content":{"body":"AryehGregor: dreamhost's vps lets you change the ram and cpu you're paying for any time you want, and prorates you","msgtype":"m.text"},"ts":1306535400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"AryehGregor: it even has an API, so if i cared i could make anolis switch to 4GB of RAM, run the sync, and then drop down to 400MB again","msgtype":"m.text"},"ts":1306535401000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I was about to suggest that.","msgtype":"m.text"},"ts":1306535402000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"but it's easier for me to let jgraham maintain anolis :-)","msgtype":"m.text"},"ts":1306535403000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Anolis needs 4GB of RAM?)","msgtype":"m.text"},"ts":1306535700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that was just an example","msgtype":"m.text"},"ts":1306535880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think it's CPU it actually needs","msgtype":"m.text"},"ts":1306535881000,"senderName":"Hixie","senderId":"Hixie@irc"}
]