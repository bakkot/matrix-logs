[
{"content":{"body":"zewt: actually scripts _can_ detect the conditions you mention for when the network comes back -- they just need to listen for the 'online' event","msgtype":"m.text"},"ts":1341972105000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: assuming transient issues (eg. ip changes) ever make it consider itself \"offline\"","msgtype":"m.text"},"ts":1341973561000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i really don't understand the notion that pages should have to deal with this individually, when so many other web APIs go to efforts to eliminate uncommon error states and make things just work","msgtype":"m.text"},"ts":1341973615000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: it's possible we need to change the design. so far people have just been saying \"we should slightly change this api for this one case\", not \"we need to rethink the basic design of the api\"","msgtype":"m.text"},"ts":1341973998000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"simply saying that reconnection behavior, at least for most users, will be done much better if the UA handles it, and that we'll have a lot of buggy and badly-behaved apps if not","msgtype":"m.text"},"ts":1341974294000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"certainly doesn't seem like a huge change, no","msgtype":"m.text"},"ts":1341974323000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i don't know how big a change it would be since i haven't examined the implications of a fundamental design change","msgtype":"m.text"},"ts":1341974390000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sometimes one can change the basic idea of the feature without actually changing the API at all","msgtype":"m.text"},"ts":1341974406000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"other times, it simply makes no sense to even have a similar API with a change of design philosophy","msgtype":"m.text"},"ts":1341974424000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i havn't looked at it in depth either, but roughly i'd expect it to look equivalent to if it still only retried once, but it just took a long time (eg. it'd sit in CONNECTING for a long time)","msgtype":"m.text"},"ts":1341974599000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(don't really know if it'd need to expose more than that)","msgtype":"m.text"},"ts":1341974629000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(i should have said I don't expect it to be a big script-visible change)","msgtype":"m.text"},"ts":1341974773000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: i don't know, but e.g. maybe the protocol needs other features, maybe there needs to be attributes exposing or controlling it, i dunno","msgtype":"m.text"},"ts":1341975613000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yep","msgtype":"m.text"},"ts":1341975740000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"matjas: the intention is to allow it","msgtype":"m.text"},"ts":1341997764000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: not sure anything defines it as being same-origin though","msgtype":"m.text"},"ts":1341997781000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: but UAs are starting to implement it that way","msgtype":"m.text"},"ts":1341997791000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: hmm yeah so we need to make that more explicit somehow","msgtype":"m.text"},"ts":1342001544000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes please. if it wasn’t for the non-normative “note” i wouldn’t have even mentioned it","msgtype":"m.text"},"ts":1342001605000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"annevk: want me to file a CORS spec bug?","msgtype":"m.text"},"ts":1342001670000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"it's not a bug in CORS","msgtype":"m.text"},"ts":1342001684000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it's an XHR bug","msgtype":"m.text"},"ts":1342001698000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it doesn’t just apply to XHR though","msgtype":"m.text"},"ts":1342001708000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"data URL images should be same-origin too","msgtype":"m.text"},"ts":1342001719000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"or is that case already covered elsewhere?","msgtype":"m.text"},"ts":1342001733000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"\"If the XMLHttpRequest origin and the request URL are same origin\" needs to expand to also include request URLs whose scheme is data:","msgtype":"m.text"},"ts":1342001736000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: that is covered elsewhere at the moment","msgtype":"m.text"},"ts":1342001759000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: maybe we can flip things around and only special case data URLs where allowing them to be same-origin would be harmful, but that would require working through all the same-origin checks in the platform","msgtype":"m.text"},"ts":1342001816000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: it's not okay for instance for shared workers","msgtype":"m.text"},"ts":1342001834000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"somehow blob URLs are defined to be same origin with the script that created them","msgtype":"m.text"},"ts":1342001924000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that prolly works","msgtype":"m.text"},"ts":1342001936000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but that cannot work for data URLs","msgtype":"m.text"},"ts":1342001985000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"matjas: I can fix the XHR bug easily enough sometime later, but maybe we should look at data URLs again in various contexts to see if updating the same-origin definition and special casing shared workers would be enough","msgtype":"m.text"},"ts":1342002176000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm so XHR -> cross-origin -> data URL would still need to be cross-origin","msgtype":"m.text"},"ts":1342002609000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yeah, it would kind of depend on where we special case it how such scenarios would work","msgtype":"m.text"},"ts":1342002718000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"e.g. with my proposal XHR -> same-origin -> data URL would fail","msgtype":"m.text"},"ts":1342002730000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"What is the intention of the \"challenge\" attribute of the HTML 5 keygen element? Are there any use cases/examples?","msgtype":"m.text"},"ts":1342003412000,"senderName":"cheron","senderId":"cheron@irc"},
{"content":{"body":"cheron: it influences the generated signature","msgtype":"m.text"},"ts":1342003593000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cheron: the use case is mainly supporting some legacy sites that use <keygen>","msgtype":"m.text"},"ts":1342003607000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"cheron: so maybe we should move the element to the \"obsolete\" section","msgtype":"m.text"},"ts":1342003635000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ty, this helps me much with my bachelor's thesis","msgtype":"m.text"},"ts":1342003835000,"senderName":"cheron","senderId":"cheron@irc"},
{"content":{"body":"what's the subject of the thesis?","msgtype":"m.text"},"ts":1342003861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Security in HTML5","msgtype":"m.text"},"ts":1342003891000,"senderName":"cheron","senderId":"cheron@irc"},
{"content":{"body":"uh, we should definitely move keygen to obsolete","msgtype":"m.text"},"ts":1342003912000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"cheron: cool","msgtype":"m.text"},"ts":1342003933000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: file a bug ;)","msgtype":"m.text"},"ts":1342003939000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"whaat, keygen has got some new properties in HTML spec","msgtype":"m.text"},"ts":1342004015000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug__: if you file a bug can you send me the link, pls","msgtype":"m.text"},"ts":1342004360000,"senderName":"cheron","senderId":"cheron@irc"},
{"content":{"body":"annevk: yeah, pretty interesting","msgtype":"m.text"},"ts":1342004477000,"senderName":"cheron","senderId":"cheron@irc"},
{"content":{"body":"sends an email to site-comments about robots.txt","msgtype":"m.emote"},"ts":1342007308000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: what's up with robots.txt?","msgtype":"m.text"},"ts":1342007504000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: http://lists.w3.org/Archives/Public/site-comments/2012Jul/0007.html","msgtype":"m.text"},"ts":1342007535000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I can fix the dvcs.w3.org one myself","msgtype":"m.text"},"ts":1342007578000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"what should it have?","msgtype":"m.text"},"ts":1342007584000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"the www.w3.org one I'll leave up to others","msgtype":"m.text"},"ts":1342007600000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"MikeSmith: is don't see any reason to not use `User-agent: *\\nAllow: *` but maybe there is","msgtype":"m.text"},"ts":1342007665000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: I know they have had serious problems in the past with bots crawling dev.w3.org","msgtype":"m.text"},"ts":1342007724000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"creating massive load","msgtype":"m.text"},"ts":1342007735000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"bratell just had issues finding the HTML Editing APIs spec because of this, and i found out yesterday that the quirks mode spec isn't visible in google","msgtype":"m.text"},"ts":1342007793000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"yeah that's not good","msgtype":"m.text"},"ts":1342007808000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"I will talk to the systems team about it","msgtype":"m.text"},"ts":1342007817000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"thanks!","msgtype":"m.text"},"ts":1342007821000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"the /Bugs/ thing was someone complaining here in #whatwg the other day","msgtype":"m.text"},"ts":1342007874000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1342007949000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"http://simon.html5.org/sandbox/bookmarklets/w3c-cg-spec-checker.js","msgtype":"m.text"},"ts":1342022340000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Yay, I get to annoy the Opera guys again","msgtype":"m.text"},"ts":1342023444000,"senderName":"ashemedai","senderId":"ashemedai@irc"},
{"content":{"body":"matjas: i have filed a spec bug about CORS-enabled fetch to consider data: to be same-origin","msgtype":"m.text"},"ts":1342023552000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=17461","msgtype":"m.text"},"ts":1342023603000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"rniwa: values from dictionaries are read when the object is passed to some native method","msgtype":"m.text"},"ts":1342031385000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so I don't quite understand your email about the problem","msgtype":"m.text"},"ts":1342031395000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: well, you can then modify those properties","msgtype":"m.text"},"ts":1342031413000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1342031420000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: so you can do undoManager.transact({execute: function () { this.undo = ~; }})","msgtype":"m.text"},"ts":1342031430000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: so my point is that it's not a problem specific to having DOMTransaction interface","msgtype":"m.text"},"ts":1342031450000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"this.undo = wouldn't do anything sane","msgtype":"m.text"},"ts":1342031457000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: what do you mean?","msgtype":"m.text"},"ts":1342031466000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: it'll do something extremely sane","msgtype":"m.text"},"ts":1342031475000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I mean, it would put .undo property to 'this'","msgtype":"m.text"},"ts":1342031477000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this wouldn't be the dictionary object","msgtype":"m.text"},"ts":1342031488000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah but \"this\" is the dictionary object!","msgtype":"m.text"},"ts":1342031492000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: since execute is supposed to be called on the dictionary object passed into.","msgtype":"m.text"},"ts":1342031528000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"no","msgtype":"m.text"},"ts":1342031542000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"transact","msgtype":"m.text"},"ts":1342031544000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: why no?","msgtype":"m.text"},"ts":1342031551000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"execute is a property of the dictionary","msgtype":"m.text"},"ts":1342031552000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and stored separately","msgtype":"m.text"},"ts":1342031561000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes.","msgtype":"m.text"},"ts":1342031562000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: no.","msgtype":"m.text"},"ts":1342031564000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"when passed to native","msgtype":"m.text"},"ts":1342031565000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that's not how it works","msgtype":"m.text"},"ts":1342031570000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"maybe my spec isn't clear.","msgtype":"m.text"},"ts":1342031585000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: but the intent is for the dictionary to be kept alive","msgtype":"m.text"},"ts":1342031593000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: and execute, undo, redo, & executeAutomatic to be called upon on the dictionary object","msgtype":"m.text"},"ts":1342031605000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"then you should use some nointerfacecobject interface","msgtype":"m.text"},"ts":1342031619000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"not dictionary","msgtype":"m.text"},"ts":1342031629000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I'm using that.","msgtype":"m.text"},"ts":1342031630000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: it's DOMTransaction","msgtype":"m.text"},"ts":1342031635000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: with [NoInterface]","msgtype":"m.text"},"ts":1342031640000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ok, let's not talk about dictionaries then :)","msgtype":"m.text"},"ts":1342031647000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Eh, NoInterfaceObject, you shouldn't use that","msgtype":"m.text"},"ts":1342031673000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: yeah, that's the confusing part.","msgtype":"m.text"},"ts":1342031677000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan_away was talking about dictionaries in his email","msgtype":"m.text"},"ts":1342031678000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"so you're probably talking about different things... and I'm not sure what exactly :)","msgtype":"m.text"},"ts":1342031706000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, Ms2ger: http://dvcs.w3.org/hg/undomanager/raw-file/tip/undomanager.html#dom-domtransaction","msgtype":"m.text"},"ts":1342031723000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"well... it works like Dictionary to some extent","msgtype":"m.text"},"ts":1342031742000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"at least in ES5, you can create one like Dictionary","msgtype":"m.text"},"ts":1342031751000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but yeah... it's not really the same thing","msgtype":"m.text"},"ts":1342031759000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the fact we're talking about this in ES5 is making everything super confusing","msgtype":"m.text"},"ts":1342031770000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Dictionary is pretty well-defined in WebIDL","msgtype":"m.text"},"ts":1342031780000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yes, but i don't think ojan_away was talking about that.","msgtype":"m.text"},"ts":1342031796000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I thought he was talking about dictionaries","msgtype":"m.text"},"ts":1342031812000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: he and everyone else are referring to dictionary was in ordinary programming language term.","msgtype":"m.text"},"ts":1342031819000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"s/ was/ as/","msgtype":"m.text"},"ts":1342031828000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"huh","msgtype":"m.text"},"ts":1342031838000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Interfaces aren't implemented by content scripts","msgtype":"m.text"},"ts":1342031850000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: they could be.","msgtype":"m.text"},"ts":1342031858000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"No","msgtype":"m.text"},"ts":1342031863000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: but this is EXACTLY why I want to change the interface","msgtype":"m.text"},"ts":1342031871000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"because it's so damn foreign to the Web","msgtype":"m.text"},"ts":1342031875000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"when talking about WebIDL interfaces 'dictionary' certainly refers to the concept in  WebIDL","msgtype":"m.text"},"ts":1342031881000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"So, what is this DOMTransaction thing?","msgtype":"m.text"},"ts":1342031922000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: http://www.w3.org/TR/WebIDL/#es-user-objects","msgtype":"m.text"},"ts":1342031923000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: it's a user object implementing a callback interface","msgtype":"m.text"},"ts":1342031945000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but we had never used this semantics in any other API","msgtype":"m.text"},"ts":1342031965000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"What do you use it for?","msgtype":"m.text"},"ts":1342031966000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: you use it to represent an undo \"step\"","msgtype":"m.text"},"ts":1342031978000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: a unit of work that can be done, undone, or redone via undo manager","msgtype":"m.text"},"ts":1342031989000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: it represents a \"command\" in the command design pattern","msgtype":"m.text"},"ts":1342032007000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I don't buy the \"foreign to the Web\". { handleEvent: function(evt) {} } isn't foreign  to the Web","msgtype":"m.text"},"ts":1342032137000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the fact the the object may have some more properties does change anything","msgtype":"m.text"},"ts":1342032156000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"s/does/doesn't/","msgtype":"m.text"},"ts":1342032170000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: i don't think most authors are aware of the fact an event handler is an object though","msgtype":"m.text"},"ts":1342032269000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"So, you pass it to transact()?","msgtype":"m.text"},"ts":1342032287000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: i literally had never seen anyone using that explicit object form","msgtype":"m.text"},"ts":1342032289000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: right.","msgtype":"m.text"},"ts":1342032296000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Why doesn't the IDL for transact say that?","msgtype":"m.text"},"ts":1342032305000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Looks like a dictionary would work","msgtype":"m.text"},"ts":1342032395000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: yeah... i should update the spec :\\","msgtype":"m.text"},"ts":1342032408000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"dictionary doesn't work if rniwa wants the 'this' handling he mentioned above","msgtype":"m.text"},"ts":1342032441000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Well, no","msgtype":"m.text"},"ts":1342032449000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____, Ms2ger: that \"this\" handling is pretty important.","msgtype":"m.text"},"ts":1342032486000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"otherwise the benefit of using dictionary degrades significantly","msgtype":"m.text"},"ts":1342032501000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so don't use dictionary but callback interface :)","msgtype":"m.text"},"ts":1342032600000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____, Ms2ger: so are you guys opposed to yuval's proposal?","msgtype":"m.text"},"ts":1342032606000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Link?","msgtype":"m.text"},"ts":1342032655000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"I'm not sure I understand what is the \"final\" proposal","msgtype":"m.text"},"ts":1342032683000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zcorpan: thanks for the link","msgtype":"m.text"},"ts":1342032711000,"senderName":"matjas","senderId":"matjas@irc"},
{"content":{"body":"Anyway, write it up, and we'll complain then :)","msgtype":"m.text"},"ts":1342032736000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-webapps/2012JulSep/0058.html","msgtype":"m.text"},"ts":1342032741000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that hybrid form is really odd","msgtype":"m.text"},"ts":1342032773000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rniwa: just curious, did this all start from the memory management problems, or were you thinking about changing the API even before someone started to implement the API ?","msgtype":"m.text"},"ts":1342032895000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: i had never liked the API because it seemed very different from other APIs","msgtype":"m.text"},"ts":1342032930000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: and my intern had been wokring on this patch","msgtype":"m.text"},"ts":1342032938000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"and memory management thing motivated me enough to start the thread","msgtype":"m.text"},"ts":1342032966000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"can't wait to see cycle collector to be implemented for webkit ;)","msgtype":"m.emote"},"ts":1342033008000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Let's try workers first","msgtype":"m.text"},"ts":1342033085000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: that oddness solves one important weridness","msgtype":"m.text"},"ts":1342033120000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: which comes with \"native\" DOMTransactions","msgtype":"m.text"},"ts":1342033130000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: editing commands add","msgtype":"m.text"},"ts":1342033134000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"(Hah, XSLT3)","msgtype":"m.text"},"ts":1342033161000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: how about some sane NodeList & HTMLCollection","msgtype":"m.text"},"ts":1342033239000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: well, it is odd to have some sorts of callbacks and event listeners","msgtype":"m.text"},"ts":1342033244000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"rniwa, what about NodeList?","msgtype":"m.text"},"ts":1342033253000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"smaug____: no... there will be no callbacks","msgtype":"m.text"},"ts":1342033254000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Ms2ger: WebKit has namedItem or whatever on NodeList","msgtype":"m.text"},"ts":1342033266000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"new DOMTransaction(function () { ~ })","msgtype":"m.text"},"ts":1342033271000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Kill it","msgtype":"m.text"},"ts":1342033277000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"what is that function if not a callback?","msgtype":"m.text"},"ts":1342033284000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: on but that won't be added as a property","msgtype":"m.text"},"ts":1342033285000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: it'll be hidden within the object.","msgtype":"m.text"},"ts":1342033295000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1342033304000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is still a callback","msgtype":"m.text"},"ts":1342033309000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah... :\\","msgtype":"m.text"},"ts":1342033314000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: so should we just do","msgtype":"m.text"},"ts":1342033327000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"t = new DOMTransaction","msgtype":"m.text"},"ts":1342033334000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"t.onexecute = function () {~}","msgtype":"m.text"},"ts":1342033342000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"t.onundo = function () {~}","msgtype":"m.text"},"ts":1342033349000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"t.onredo = function () {~}","msgtype":"m.text"},"ts":1342033354000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1342033355000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"that one looks better","msgtype":"m.text"},"ts":1342033373000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(but I'm sure the jQuery fans will complain ;) )","msgtype":"m.text"},"ts":1342033591000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: well, people who like jQuery can wait for jQuery to support it","msgtype":"m.text"},"ts":1342033699000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"t.onexecute = function () { ~; return this; }","msgtype":"m.text"},"ts":1342033702000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"https://twitter.com/dastels/status/223059799699501056","msgtype":"m.text"},"ts":1342040450000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Not sure if praise or damning praise.","msgtype":"m.text"},"ts":1342040757000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"a bit late to the party...but, for the record, I was talking about WebIDL dictionaries","msgtype":"m.text"},"ts":1342045464000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"so what's the browser interest on the http+aes stuff?","msgtype":"m.text"},"ts":1342045744000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't that what https is supposed to do? What's http+aes?","msgtype":"m.text"},"ts":1342045981000,"senderName":"espadrine_","senderId":"espadrine_@irc"},
{"content":{"body":"<Hixie> looks like netscape was on the path of blame","msgtype":"m.text"},"ts":1342046054000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"I think IE1 was the first browser to support named colors.","msgtype":"m.text"},"ts":1342046069000,"senderName":"Yuhong","senderId":"Yuhong@irc"},
{"content":{"body":"espadrine_: a way to have content served to a client from an untrusted CDN","msgtype":"m.text"},"ts":1342046113000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some kind of CORS with a brand new protocol then?","msgtype":"m.text"},"ts":1342046257000,"senderName":"espadrine_","senderId":"espadrine_@irc"},
{"content":{"body":"no, new scheme that includes a key to decrypt the payload of an HTTP resource","msgtype":"m.text"},"ts":1342046292000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's in the spec currently","msgtype":"m.text"},"ts":1342046295000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i'm wondering if we should drop it","msgtype":"m.text"},"ts":1342046300000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"since it doesn't seem anyone really cares","msgtype":"m.text"},"ts":1342046305000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we added it because people said there was a use case for it, but i'm starting to think the use case was a fiction intended to help push a DRM scheme","msgtype":"m.text"},"ts":1342046331000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, I see","msgtype":"m.text"},"ts":1342046461000,"senderName":"espadrine_","senderId":"espadrine_@irc"},
{"content":{"body":"rniwa: it still sounds like ojan is talking about WebIDL dictionaries and you're talking about callback objects :)","msgtype":"m.text"},"ts":1342046513000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what are callback objects?","msgtype":"m.text"},"ts":1342046570000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"{ handleEvent: function() {} }","msgtype":"m.text"},"ts":1342046583000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and you store reference to that object","msgtype":"m.text"},"ts":1342046592000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah so it seems.","msgtype":"m.text"},"ts":1342046598000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"callback objects seem like a bad idea","msgtype":"m.text"},"ts":1342046629000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"callback objects are a nice idea :)","msgtype":"m.text"},"ts":1342046647000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but in this particular case dictionary should work well too","msgtype":"m.text"},"ts":1342046675000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it simplifies many things in this case","msgtype":"m.text"},"ts":1342046693000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"e.g. what happens when you reuse the object for two transact calls","msgtype":"m.text"},"ts":1342046706000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"i'm about at the end of my standards arguing rope on this discussion though...and i don't think there's much more to say...so, unless some new information comes to light...i don't have more to add to that thread","msgtype":"m.text"},"ts":1342046761000,"senderName":"ojan","senderId":"ojan@irc"},
{"content":{"body":"I don't care too much, except that the proposal to use callbacks in some cases and event listeners in some other cases looked really really odd.","msgtype":"m.text"},"ts":1342046820000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"either event listeners, or dictionary or callback object","msgtype":"m.text"},"ts":1342046834000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: that seems like a pointless idea, heh","msgtype":"m.text"},"ts":1342046871000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"very Java-ish (or more generally, any language that doesn't have first-class function objects-ish)","msgtype":"m.text"},"ts":1342046893000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"from implementation point of view callback object is easiest in Gecko, but other options are easy too","msgtype":"m.text"},"ts":1342046905000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's just completely alien to JS as a callback paradigm","msgtype":"m.text"},"ts":1342046936000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i mean, i don't know why a *user* would ever want to use that method","msgtype":"m.text"},"ts":1342046971000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(yet { handleEvent: function() {}} is commonly used, but let's not start this discussion again. It is getting late here :) )","msgtype":"m.text"},"ts":1342047007000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"never once seen it in real-world code :)","msgtype":"m.text"},"ts":1342047026000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"I'm fine with dictionary or event listener based approaches","msgtype":"m.text"},"ts":1342047077000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: you haven't looked at Firefox UI code ;)","msgtype":"m.text"},"ts":1342047094000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i have a bit; i try to avoid it at any cost :)","msgtype":"m.text"},"ts":1342047118000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"or, IIRC, OSX Dashboard","msgtype":"m.text"},"ts":1342047119000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"ojan: i replied on the thread but there were use cases for being able to keep the original object","msgtype":"m.text"},"ts":1342047157000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ojan: in particular properties on the original object.","msgtype":"m.text"},"ts":1342047162000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"( that is the use case for { handleEvent: function() {}} too. One can store state in the object easily. )","msgtype":"m.text"},"ts":1342047219000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(not really a use case for that, since you can easily pass in a bound function or a closure)","msgtype":"m.text"},"ts":1342047246000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not specific to that, I mean)","msgtype":"m.text"},"ts":1342047251000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"\"you can easily\" doesn't mean the other approach is bad","msgtype":"m.text"},"ts":1342047293000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it is if the object is meant to be a simple callback (as opposed to, say, a *set* of callbacks, in which case it's fine)","msgtype":"m.text"},"ts":1342047321000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: in this case, UndoManager, we're talking about a set of callbacks","msgtype":"m.text"},"ts":1342047350000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt: in undo manager's case it'll be 1-3 callbacks so it'll be odd.","msgtype":"m.text"},"ts":1342047352000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: in fact, you can't just pass in an object","msgtype":"m.text"},"ts":1342047364000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"ugh.. i mean pass in a function","msgtype":"m.text"},"ts":1342047372000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"then OK (that's very different from the weird handleEvent thing on event listeners)","msgtype":"m.text"},"ts":1342047377000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you need to explicitly pass in an object","msgtype":"m.text"},"ts":1342047384000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: yeah.","msgtype":"m.text"},"ts":1342047391000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I DO like the syntax of pure Dictionary or user object implementing DOMTransaction","msgtype":"m.text"},"ts":1342047411000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"the fact we can't have any readonly property, etc...","msgtype":"m.text"},"ts":1342047426000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"make things too hary","msgtype":"m.text"},"ts":1342047434000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hairly*","msgtype":"m.text"},"ts":1342047437000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: it is not at all different from event listeners. you can pass { handleEvent: function() {}, undo: function() {}, redo: function() {}} to UndoManager and to addEventListener","msgtype":"m.text"},"ts":1342047439000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it's very different from event listeners, because event listeners are a single simple callback which can (just for compatibility reasons) also be passed in as an object","msgtype":"m.text"},"ts":1342047491000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"event listeners aren't a set of functions, they're just a function","msgtype":"m.text"},"ts":1342047530000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"eh, but you can pass the *same* object implementing several callbacks","msgtype":"m.text"},"ts":1342047577000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that is the point","msgtype":"m.text"},"ts":1342047582000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"no need to play with bind() or anything","msgtype":"m.text"},"ts":1342047595000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"i don't know what you're saying; I can think of nothing you can do with addEventListener by passing in an object that you can't do easily with a function","msgtype":"m.text"},"ts":1342047660000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not sure what you mean by \"several callbacks\"; event handlers have only one callback, handleEvent)","msgtype":"m.text"},"ts":1342047700000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"{ handleEvent: function() {}, undo: function() {}, redo: function() {}}","msgtype":"m.text"},"ts":1342047703000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"you pass the same object to addEventListener, and also to UndoManager","msgtype":"m.text"},"ts":1342047730000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"that's pointless and unnecessary","msgtype":"m.text"},"ts":1342047739000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"you can keep some state in the object","msgtype":"m.text"},"ts":1342047742000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"this isn't useful discussion :)","msgtype":"m.text"},"ts":1342047755000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"if you say so :)","msgtype":"m.text"},"ts":1342047786000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if the argument is all the time something like \"that's pointless and unnecessary\" :p","msgtype":"m.text"},"ts":1342047823000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"it lets you do nothing that you can't do easily and cleanly without it; that's how I describe that","msgtype":"m.text"},"ts":1342047856000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"anyways, i'm inclined to take the flame and use the event listener approach","msgtype":"m.text"},"ts":1342047923000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"anyway, we're stuck with it for event handlers, but I hope I won't be the only one to object if someone suggests supporting it for other simple callbacks :)","msgtype":"m.text"},"ts":1342047927000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i'm sad about the verbosity but it seems better than the user object approach.","msgtype":"m.text"},"ts":1342047943000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: object to what?","msgtype":"m.text"},"ts":1342047967000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that a function taking a single, simple callback should accept either a function or an object with some method, like event handlers","msgtype":"m.text"},"ts":1342048028000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(not what you're doing)","msgtype":"m.text"},"ts":1342048049000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh yeah... that's a very odd design indeed.","msgtype":"m.text"},"ts":1342048068000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: as long as you expose event attributes, it's not *too* much more verbose (compared to having to addEventListener each of them)","msgtype":"m.text"},"ts":1342048117000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: oh yeah, definitely not addEventListener","msgtype":"m.text"},"ts":1342048141000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"well, there will be also addEventListener","msgtype":"m.text"},"ts":1342048167000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"zewt, smaug____: or maybe I should just give up and stick with the original design.","msgtype":"m.text"},"ts":1342048188000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah, if you're an EventTarget then you get addEventListener automatically","msgtype":"m.text"},"ts":1342048194000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: original was callback object, right?","msgtype":"m.text"},"ts":1342048239000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I'm fine with that, and I'm fine with dictionary, and with event listeners","msgtype":"m.text"},"ts":1342048258000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"but just don't mix  them :)","msgtype":"m.text"},"ts":1342048264000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"I kind of like the callback object approach","msgtype":"m.text"},"ts":1342048278000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: yeah.","msgtype":"m.text"},"ts":1342048288000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"smaug____: sicking really liked the callback object approach.","msgtype":"m.text"},"ts":1342048309000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1342048334000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"we don't have any way to feature detect dictionary-based APIs, do we","msgtype":"m.text"},"ts":1342048407000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"akin to func.length for simple functions","msgtype":"m.text"},"ts":1342048429000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(in cases where you can't just call it and see what happens, which isn't always workable)","msgtype":"m.text"},"ts":1342048446000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"thinking of createObjectURL(blob, {autoRevoke...})","msgtype":"m.text"},"ts":1342048485000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"aside from https://www.w3.org/Bugs/Public/show_bug.cgi?id=16953#c4, which is a bit insane","msgtype":"m.text"},"ts":1342048563000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: no :(","msgtype":"m.text"},"ts":1342048612000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"https://www.w3.org/Bugs/Public/show_bug.cgi?id=17746 heh people copying and pasting a mail from me into a bug is ... confusing","msgtype":"m.text"},"ts":1342048628000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: another thing about user object is that you can't do expandos","msgtype":"m.text"},"ts":1342048631000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"\"havn't I read this before?\"","msgtype":"m.text"},"ts":1342048632000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: i think the dictionary-feature-detection thing should be solved generically (don't know how though)","msgtype":"m.text"},"ts":1342048651000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: how do you do that?","msgtype":"m.text"},"ts":1342048668000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i said i don't know :P","msgtype":"m.text"},"ts":1342048678000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: also, what is there to feature-detect?","msgtype":"m.text"},"ts":1342048679000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"whether an argument supports a particular options argument","msgtype":"m.text"},"ts":1342048691000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"eg. whether createObjectURL supports autoRevoke","msgtype":"m.text"},"ts":1342048702000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"rniwa: which case can't you do expandos?","msgtype":"m.text"},"ts":1342048712000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"if it's a dictionary then the API doesn't really store the object itself anyway, as I understand it","msgtype":"m.text"},"ts":1342048732000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"(WebIDL basically makes a shallow copy)","msgtype":"m.text"},"ts":1342048784000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: dictionary.","msgtype":"m.text"},"ts":1342048857000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: i guess i meant the user object case then.","msgtype":"m.text"},"ts":1342048881000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: in either case, you can't really add new functionality to dom transactions.","msgtype":"m.text"},"ts":1342048896000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"unless you manually modify each object.","msgtype":"m.text"},"ts":1342048901000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"yeah, you don't get a reference back to the original object (since the API never even sees it)","msgtype":"m.text"},"ts":1342048946000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it's not quite like passing around handler objects like JS libraries like to do","msgtype":"m.text"},"ts":1342048965000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"it doesn't really lose you anything compared to event handlers, either, though","msgtype":"m.text"},"ts":1342048990000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: well in the event handler case, the object uses DOMTransaction interface","msgtype":"m.text"},"ts":1342049073000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i don't have any strong opinion on \"return an EventTarget and the user attaches listeners to it\" vs. \"pass in an object with a set of callbacks\"; there's really very little difference","msgtype":"m.text"},"ts":1342049082000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"zewt: so you can feature detect on DOMTransaction interface if any","msgtype":"m.text"},"ts":1342049083000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: one big difference is that you can add event listeners to the former after the fact","msgtype":"m.text"},"ts":1342049114000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: and observe undo/redo per dom transaction","msgtype":"m.text"},"ts":1342049125000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"zewt: wheres for the latter, we need to do that at element/document level","msgtype":"m.text"},"ts":1342049140000,"senderName":"rniwa","senderId":"rniwa@irc"}
]