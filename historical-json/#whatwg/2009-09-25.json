[
{"content":{"body":"Lachy: if you figure out how it should work, archive notes so that it can be specced in web dom core ","msgtype":"m.text"},"ts":1253836800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"why is http://html5.org/tools/web-workers-tracker empty?","msgtype":"m.text"},"ts":1253836980000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I wasn't planning on reverse engineering it. Was just curious as it was mentioned on public-webapps as a way to sort nodes in an array","msgtype":"m.text"},"ts":1253836981000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"and I never knew the method existed before","msgtype":"m.text"},"ts":1253836982000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"zcorpan: i may have broken it when i migrated everything to html5's source document","msgtype":"m.text"},"ts":1253837040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though i thought i had kept enough of a shim to keep things working","msgtype":"m.text"},"ts":1253837041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(i still check everything into the workers svn repo, i think)","msgtype":"m.text"},"ts":1253837042000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: oh i thought it was a separate source document","msgtype":"m.text"},"ts":1253837100000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"it was","msgtype":"m.text"},"ts":1253837101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i merged it in when i was splitting everything out","msgtype":"m.text"},"ts":1253837102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"to make my life easier","msgtype":"m.text"},"ts":1253837103000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but the original source document should still be being generated","msgtype":"m.text"},"ts":1253837104000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so i don't see why it wouldn't still work","msgtype":"m.text"},"ts":1253837160000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so Worker.onerror can receive two kinds of events: an Event when fetching the worker script fails, and an ErrorEvent when a runtime script error is not handled by the WorkerGlobalScope's onerror","msgtype":"m.text"},"ts":1253837580000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"r4000 next","msgtype":"m.text"},"ts":1253838180000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that'll make mpilgrim happy","msgtype":"m.text"},"ts":1253838300000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"study 2 begins!","msgtype":"m.text"},"ts":1253838480000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, what does the [Supplemental] extended attribute you're using in the IDL mean? It's not yet defined in webidl, and it seems redundant with the implements statement","msgtype":"m.text"},"ts":1253838600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"interface A { a }    [Supplmental] interface B { b } A implements B;   means the same as    interface A { a b }","msgtype":"m.text"},"ts":1253838660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"whereas","msgtype":"m.text"},"ts":1253838661000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interface A { a }    interface B { b } A implements B;   results in two interface objects","msgtype":"m.text"},"ts":1253838720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"isn't that what the [NoInterfaceObject] one deals with?","msgtype":"m.text"},"ts":1253838721000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"no NoInterfaceObject only means that the interface object doesn't exist","msgtype":"m.text"},"ts":1253838780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"with   interface A { a }    [NoInterfaceObject] interface B { b } A implements B;   A.b doesn't exist","msgtype":"m.text"},"ts":1253838781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: i thought [Supplemental] was supposed to be used as A { a } [Supplemental] interface A { b }","msgtype":"m.text"},"ts":1253839020000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"oh, right. That sort of makes sense, though [Supplements] doesn't really seem intuitive","msgtype":"m.text"},"ts":1253839021000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"zcorpan: yeah that is also a way to do it","msgtype":"m.text"},"ts":1253839080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"there are three ways [Supplemental] works","msgtype":"m.text"},"ts":1253839081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"inheritance, the same interface name twice, and 'implements'","msgtype":"m.text"},"ts":1253839140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"depending on exactly what you want","msgtype":"m.text"},"ts":1253839141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I suppose I should update Selectors API to use [Supplemental] for NodeSelector, and change the old [ImplementedOn] attributes to implements statements","msgtype":"m.text"},"ts":1253839142000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"does that mean to define matchesSelector on the Element interface, i can write it like this:","msgtype":"m.text"},"ts":1253839260000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"[Supplemental]","msgtype":"m.text"},"ts":1253839261000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Interface Element {","msgtype":"m.text"},"ts":1253839262000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"  boolean matchesSelector(in DOMString selectors);","msgtype":"m.text"},"ts":1253839263000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"};","msgtype":"m.text"},"ts":1253839264000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1253839380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"sweet. That means I don't need to make up a silly interface name like ElementMatchesSelector just for this","msgtype":"m.text"},"ts":1253839500000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"man, both studies so far indicate 'about' is a terrible property name to use for giving an item an ID","msgtype":"m.text"},"ts":1253839501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"in RDFa?","msgtype":"m.text"},"ts":1253839560000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"oooh, an authoring tool for canvas: http://www.webmonkey.com/blog/Turn_Your_Vector_Art_Into_Canvas-based_Animations_With_Opacity","msgtype":"m.text"},"ts":1253839561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Isn't that used to reference a element with an IDREF, indicating which element the metadata is describing?","msgtype":"m.text"},"ts":1253839620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: in microdata","msgtype":"m.text"},"ts":1253839621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's used to give the item a URL, equivalent to about=\"\" from RDFa","msgtype":"m.text"},"ts":1253839622000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"didn't know microdata had an about attribute. Did that get added recently?","msgtype":"m.text"},"ts":1253839623000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"not a free authoring tool, though, but then again i guess authoring tools for flash aren't free, either (or are they?)","msgtype":"m.text"},"ts":1253839624000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not an attribute","msgtype":"m.text"},"ts":1253839625000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"itemprop=about ","msgtype":"m.text"},"ts":1253839626000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1253839680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"also, both studies so far indicate that authors really have no problem with itemprop=\"\" containing full URLs","msgtype":"m.text"},"ts":1253839681000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"they just sail right by that without issue","msgtype":"m.text"},"ts":1253839682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what will 'about' be replaced with?","msgtype":"m.text"},"ts":1253839800000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"guha suggested \"itemid\"","msgtype":"m.text"},"ts":1253839801000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but i dunno, not making decisions in the usability lab :-)","msgtype":"m.text"},"ts":1253839802000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"of course you are, but you don't admit it. you'll post the study results to the list, and after much discussion, you'll stick 'itemid' into the spec, citing the fact that there's no consensus anyway","msgtype":"m.text"},"ts":1253839920000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"r4000 was an anti-climax :-(","msgtype":"m.text"},"ts":1253839980000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"zcorpan: well it's highly likely that we'll use itemid, but i don't want to think about it right now","msgtype":"m.text"},"ts":1253840340000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan: there are other changes we'll have to make where i really don't yet know what we'll do","msgtype":"m.text"},"ts":1253840341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: yeah, i was j/k","msgtype":"m.text"},"ts":1253840940000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"\"Personally I lean towards the second of these\" - http://www.jenitennison.com/blog/node/129","msgtype":"m.text"},"ts":1253841000000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(which is \"leave the creation of that DOM as implementation-defined\")","msgtype":"m.text"},"ts":1253841001000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I have matchesSelector() essentially defined now. All it took was the IDL and one line that says:","msgtype":"m.text"},"ts":1253841780000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"The matchesSelector()  method on the Element  interface must, when invoked, return true if the _context node_ is a _matching Element node_. Otherwise, the method must return false. ","msgtype":"m.text"},"ts":1253841781000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"And then a little bit of shuffling other things around in the spec to reuse what was already specified.","msgtype":"m.text"},"ts":1253841782000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"so far no real confusion over types, despite the conversations we were having here","msgtype":"m.text"},"ts":1253843220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"four more studies tomorrow","msgtype":"m.text"},"ts":1253843221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we're gonna try a couple with 'about' renamed to 'itemid'","msgtype":"m.text"},"ts":1253843280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"weinig, JohnResig http://dev.w3.org/2006/webapi/selectors-api2/#matchtesting","msgtype":"m.text"},"ts":1253843400000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"should we take the webkit prefix off of our impl?","msgtype":"m.text"},"ts":1253843460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, assuming this API is accepted by the group as-is, then yes, webkit's implementation is effectively fully conforming, aside from the known no-value bugs","msgtype":"m.text"},"ts":1253843640000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"guess we should wait a little bit to see if anyone objects to the API","msgtype":"m.text"},"ts":1253843820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, what are your thoughts on the idea of introducing a Selector object that can be used for handling the scoped selector use cases, allowing the .createSelector() factory method to handle the selector pre-processing?","msgtype":"m.text"},"ts":1253844480000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: I'm not totally clear on what you are suggesting","msgtype":"m.text"},"ts":1253844540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"can you give me an example?","msgtype":"m.text"},"ts":1253844541000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I'm thinking it might be better than introducing a whole bunch of new queryScopedSelector*() and matchesScopedSelector() interaces.","msgtype":"m.text"},"ts":1253844542000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sure, here's an example:","msgtype":"m.text"},"ts":1253844543000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wait, there's one in my mail in pubilc-webapps. I'll get the link","msgtype":"m.text"},"ts":1253844544000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://lists.w3.org/Archives/Public/public-webapps/2009JulSep/1239.html","msgtype":"m.text"},"ts":1253844600000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"see from \"Interface DocumentSelector\" in that mail","msgtype":"m.text"},"ts":1253844601000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"hmmm","msgtype":"m.text"},"ts":1253844720000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if impliedScope is an optional extra parameter to createSelector, why can't it just be an optional extra parameter to querySelector*() and matchSelector()?","msgtype":"m.text"},"ts":1253844721000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it seems like that would be a more streamlined API","msgtype":"m.text"},"ts":1253844722000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: i think introducing a selector object is a good idea if we want to reduce compile times","msgtype":"m.text"},"ts":1253844723000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"the main advantage of Selector is if we expect someone will want to test against the same selector repeatedly, and time spent parsing the selector may be a significant part of the total cost","msgtype":"m.text"},"ts":1253844780000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: but IMHO we should make the API such that functions, like querySelectorAll, accept either a string or a selector object","msgtype":"m.text"},"ts":1253844781000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"having the createSelector method gives JS libraries an easy way to test for browser support","msgtype":"m.text"},"ts":1253844782000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sicking, yes, that was the idea","msgtype":"m.text"},"ts":1253844783000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"test for browser support of scoped selectors?","msgtype":"m.text"},"ts":1253844784000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I guess that's true","msgtype":"m.text"},"ts":1253844785000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1253844786000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"but it's still needlessly awkward for simple cases","msgtype":"m.text"},"ts":1253844787000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"IMO","msgtype":"m.text"},"ts":1253844840000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"indeed, i think it should be possible to pass a string everywhere you can pass a selector object","msgtype":"m.text"},"ts":1253844841000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it might also give us a way to handle the namespace issue using the Selector object, if it can be set up with namespace resolution somehow","msgtype":"m.text"},"ts":1253844842000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"why should you have to say scopeElt.querySelector(Selector.createSelector(\"foo\", scopeElt, true))","msgtype":"m.text"},"ts":1253844843000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: that's not a bad idea","msgtype":"m.text"},"ts":1253844900000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"instead of scopeElt.querySelector(\"foo\", true)","msgtype":"m.text"},"ts":1253844901000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(actually the scope element probably should not be part of the selector by default)","msgtype":"m.text"},"ts":1253844902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually, you would need to do document.querySelectorAll(document.createSelector(\"foo\", scopeElt, true)); to give the same result as JS libraries","msgtype":"m.text"},"ts":1253844903000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"what's the 'true' argument?","msgtype":"m.text"},"ts":1253844960000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1253844961000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"the \"true\" argument means make every selector of the selector group implicitly start with :scope","msgtype":"m.text"},"ts":1253844962000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1253844963000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking, it determines if the browser should imply :scope automatically or not","msgtype":"m.text"},"ts":1253844964000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"but point being, I think you should be able to omit document.createSelector and the extra parens","msgtype":"m.text"},"ts":1253844965000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"even if we also have a Selector object","msgtype":"m.text"},"ts":1253844966000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm.. i don't feel strongly regarding if scoped selectors can be done as both string and a object","msgtype":"m.text"},"ts":1253845020000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"because the Selector object is needless code noise unless you plan to reuse the selector","msgtype":"m.text"},"ts":1253845021000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"fair enough","msgtype":"m.text"},"ts":1253845022000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"creating scoped selectors is mostly useful for libraries anyway","msgtype":"m.text"},"ts":1253845023000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"JohnResig: I had to make two changes to your test","msgtype":"m.text"},"ts":1253845024000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"then I suppose we could do this:","msgtype":"m.text"},"ts":1253845025000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it could also be useful for programmers who are used to the libraries but would like to code to the native API","msgtype":"m.text"},"ts":1253845080000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: it's really simple to add \":scope\" to the beginning of your string","msgtype":"m.text"},"ts":1253845081000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"root.webkitMatchesSelector(null)  === null -> root.webkitMatchesSelector(null) === false","msgtype":"m.text"},"ts":1253845082000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"root.webkitMatchesSelector(undefined)  === null -> root.webkitMatchesSelector(undefined) === false","msgtype":"m.text"},"ts":1253845083000,"senderName":"weinig","senderId":"weinig@irc"},
{"content":{"body":"NodeSelector.querySelectorAll(\">em\", true, scopeElement) (where scopeElement is optional and defaults to the Element it's being executed on)","msgtype":"m.text"},"ts":1253845140000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"wish we didn't bother with defining behavior for null and undefined until we've all agreed for a default behavior for the rest of the DOM","msgtype":"m.emote"},"ts":1253845141000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: it is, but if we export an API to do it automatically for convenience, then it may as well be easy to use that API","msgtype":"m.text"},"ts":1253845142000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking, we ended up removing the null and undefined definitions from selectors API. it's now left entirely up to web idl","msgtype":"m.text"},"ts":1253845200000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej: you mean to scope automatically for conveience","msgtype":"m.text"},"ts":1253845201000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Lachy: i know, but resigs test suites still test it","msgtype":"m.text"},"ts":1253845202000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"i guess what I propose is this:","msgtype":"m.text"},"ts":1253845260000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"should we remove it from the test suite for this version the level 1 API?","msgtype":"m.text"},"ts":1253845261000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Lachy: imho yes","msgtype":"m.text"},"ts":1253845262000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yes","msgtype":"m.text"},"ts":1253845320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"sicking, it's not as simple as just prefixing :scope to the beginning of the string. It requires at least basic selector parsing to do it right, cause it's a group of selectors.","msgtype":"m.text"},"ts":1253845380000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"here's what i propose: allow querySelector/querySelectorAll/matchesSelector to take a string (in which case they don't do any automatic scoping), or a Selector object. Create two functions for creating selector objects: createSelector and createScopedSelector. The latter adds an implicit \":scope\" before each selector","msgtype":"m.text"},"ts":1253845381000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Lachy: when you're typing a string, as a human, it's easy to add \":scope\" as needed","msgtype":"m.text"},"ts":1253845440000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah but if someone is used to writing \">em, >i, >span.fancy\" then it seems gratuitous to make them either write \":scope>em, :scope>i, :scope>span.fancy\" or construct a Selector object","msgtype":"m.text"},"ts":1253845500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for compat with JS libraries and existing content, and to allow JS libraries to reduce their dependence on custom selector parsing, the API should ideally handle cases like this \">em, >strong\" easily.","msgtype":"m.text"},"ts":1253845501000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Boris made a pretty good case that the performance argument for selector objects is dubious","msgtype":"m.text"},"ts":1253845502000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Lachy: why \"easily\" if we're talking about libraries, it's not a big burden to ask them to create an object IMHO","msgtype":"m.text"},"ts":1253845560000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yeah, I don't think I would do the Selector object for perf reasons. It would have to be based on what's best for authors and JS libraries to use, and what's implementable","msgtype":"m.text"},"ts":1253845620000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej: the alternative i guess is to add extra optinal parameters to all of querySelectorAll/querySelector/matchesSelector. Or create sibling functions: querySelectorAllScoped/querySelectorScoped/matchesSelectorScoped","msgtype":"m.text"},"ts":1253845621000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"creating additional methods gets messy, especially if we want to address the namespace issue with additional NS methods too.","msgtype":"m.text"},"ts":1253845680000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"agreed","msgtype":"m.text"},"ts":1253845681000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I really don't want to have to end up with queryScopedSelectorAllNS(), et al.","msgtype":"m.text"},"ts":1253845682000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"what are the limitations of html5's data attributes?","msgtype":"m.text"},"ts":1253845740000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"but so does optional arguments if we want optional arguments to handle namespaced stuff too","msgtype":"m.text"},"ts":1253845741000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"josespinal: sky's the limit :)","msgtype":"m.text"},"ts":1253845742000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I know. That's why I was thinking the Selector object would be nice, since it handles it all in once place","msgtype":"m.text"},"ts":1253845743000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sicking, heh no limitation?","msgtype":"m.text"},"ts":1253845800000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"additional methods are good for feature testing compared to optional arguments, but bad for potential API explosion","msgtype":"m.text"},"ts":1253845801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"josespinal: well, your users RAM","msgtype":"m.text"},"ts":1253845802000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"othermaciej: yup","msgtype":"m.text"},"ts":1253845803000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"including namespace mappings in a Selector object would be somewhat icky, since technically they are not part of the selector, they are part of the evaluation context","msgtype":"m.text"},"ts":1253845804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"aja","msgtype":"m.text"},"ts":1253845805000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"!","msgtype":"m.text"},"ts":1253845806000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"good point.","msgtype":"m.text"},"ts":1253845860000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"othermaciej: no, they're part of parsing","msgtype":"m.text"},"ts":1253845861000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: when getting the attributes' values with JS?","msgtype":"m.text"},"ts":1253845862000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"othermaciej: that's how XPath does it too","msgtype":"m.text"},"ts":1253845863000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"hmm.","msgtype":"m.text"},"ts":1253845864000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"sicking: I guess you could think of it that way","msgtype":"m.text"},"ts":1253845920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah, it does. I looked at the XPath stuff today. That's where I got the idea for the Selector object","msgtype":"m.text"},"ts":1253845921000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"anyway, I'm not categorically against an object, I just get suspicious of needlessly verbose APIs","msgtype":"m.text"},"ts":1253845922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i agree, i'm just not sure what a good other solution would be","msgtype":"m.text"},"ts":1253845980000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1253845981000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"I guess all we're doing is trading one type of needless verbosity with additional NS methods, with another with slightly messier syntax","msgtype":"m.text"},"ts":1253845982000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"i do would like to let the most common cases (source-wise) to not have to use objects","msgtype":"m.text"},"ts":1253845983000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"it reminds me of my discussion with hsivonen recently about whether it would be more fun to write (new XMLSerializer(\"application/xml\")).serializeToString(myElt), or myElt.xmlMarkup","msgtype":"m.text"},"ts":1253845984000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"josespinal: not sure i understand your question. The answer about RAM was mostly a joke","msgtype":"m.text"},"ts":1253846040000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"josespinal: basically there's no defined limit as far as names or values goes","msgtype":"m.text"},"ts":1253846041000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"oh ok, dumb me","msgtype":"m.text"},"ts":1253846042000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1253846043000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1253846044000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"josespinal: but i wouldn't try to do ridiculous things, like creating names that are hundreds of kB big","msgtype":"m.text"},"ts":1253846100000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"josespinal: or create thousands of attributes on the same element","msgtype":"m.text"},"ts":1253846101000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"josespinal: or stick GB of data into an attribute","msgtype":"m.text"},"ts":1253846102000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1253846103000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"in most those cases you're likely to run into implementation behavior","msgtype":"m.text"},"ts":1253846104000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"got that","msgtype":"m.text"},"ts":1253846105000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"i think gecko has a pretty low limit on number of allowed attributes on a single element","msgtype":"m.text"},"ts":1253846160000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"8 attributes would be too much i think","msgtype":"m.text"},"ts":1253846161000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1253846162000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"yeah, we don't allow more than 1024 attributes","msgtype":"m.text"},"ts":1253846163000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"but i've never heard of anyone butting up against that. Though maybe things will change now with data attributes","msgtype":"m.text"},"ts":1253846220000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"change how?","msgtype":"m.text"},"ts":1253846280000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"people might use more attributes and start running into the 1024 limit","msgtype":"m.text"},"ts":1253846340000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"I wonder what WebKit's limit is","msgtype":"m.text"},"ts":1253846341000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"I don't think there is any limit when using the DOM APIs but there might be one at parse time","msgtype":"m.text"},"ts":1253846342000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we limit it at 1024 because we store the attribute count and child count in the same 32bit bitfield","msgtype":"m.text"},"ts":1253846400000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so we use 10 bits for attr-count and 32 bits for child-count","msgtype":"m.text"},"ts":1253846460000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"err.. 22bits for child count","msgtype":"m.text"},"ts":1253846461000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1253846580000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"hopefully the world has switched to 64bit before <input> elements get 1024 defined attributes :)","msgtype":"m.text"},"ts":1253846581000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"so far it seems like a tight race","msgtype":"m.text"},"ts":1253846582000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1253846583000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"lets hope so","msgtype":"m.text"},"ts":1253846584000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"has to run","msgtype":"m.emote"},"ts":1253846700000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"thanks for everything sicking ","msgtype":"m.text"},"ts":1253846701000,"senderName":"josespinal","senderId":"josespinal@irc"},
{"content":{"body":"regarding CSS attribute reader from: http://krijnhoetmer.nl/irc-logs/whatwg/20090924#l-993","msgtype":"m.text"},"ts":1253846702000,"senderName":"sirdarckcat","senderId":"sirdarckcat@irc"},
{"content":{"body":"=> <annevk2> you cannot do much more than you can do already with JavaScript afaict ","msgtype":"m.text"},"ts":1253846703000,"senderName":"sirdarckcat","senderId":"sirdarckcat@irc"},
{"content":{"body":"thats true, but XSS filters only protect against javascript, not CSS","msgtype":"m.text"},"ts":1253846704000,"senderName":"sirdarckcat","senderId":"sirdarckcat@irc"},
{"content":{"body":"Hixie: GMail is an example of a Web app that uses paste events (uses \"paste\" and \"beforepaste\" in rich text composition mode)","msgtype":"m.text"},"ts":1253857500000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: likewise Google Docs (beforepaste, paste and copy)","msgtype":"m.text"},"ts":1253857560000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: also Google Search","msgtype":"m.text"},"ts":1253857680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: also Yahoo Mail","msgtype":"m.text"},"ts":1253857800000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: also YouTube (for some reason)","msgtype":"m.text"},"ts":1253858280000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Hixie: also the wiki server software that ships with Mac OS X ","msgtype":"m.text"},"ts":1253858820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Does anyone remember the URL of that history viewer for the HTML5 spec? ","msgtype":"m.text"},"ts":1253859540000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"aha http://html5.org/tools/web-apps-tracker ","msgtype":"m.text"},"ts":1253859541000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"In the new \"have an element in specific scope algorithm\", what does \"If node is the target node, terminate in a match state.\" mean? ","msgtype":"m.text"},"ts":1253859900000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"target node doesn't seem to refer to anything... ","msgtype":"m.text"},"ts":1253859901000,"senderName":"ezyang","senderId":"ezyang@irc"},
{"content":{"body":"othermaciej: Microsoft has actually posted to the WHATWG (http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-February/014026.html) so I assume there's not a strict policy of staying away from it entirely","msgtype":"m.text"},"ts":1253868000000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: hmmm, other MS folks (e.g. Chris Wilson) have said otherwise, at least as to reading the list, but perhaps the policy changed","msgtype":"m.text"},"ts":1253869320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`: regardless, it's probably easier to get Microsoft input by posting to W3C lists","msgtype":"m.text"},"ts":1253869380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hmm, my inbox is full of ECMA","msgtype":"m.text"},"ts":1253869620000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"http://groups.google.com/group/base2-js/browse_thread/thread/37acf844ceeb181c html5lib by dean edwards","msgtype":"m.text"},"ts":1253869860000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"sweet","msgtype":"m.text"},"ts":1253870160000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I wonder why that one guy finds IDLs hard to read","msgtype":"m.text"},"ts":1253870161000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"finds them quite convenient","msgtype":"m.emote"},"ts":1253870162000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"learned how the DOM was put together by reading IDL blocks","msgtype":"m.emote"},"ts":1253870220000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"also nice, Sec-From is gone","msgtype":"m.text"},"ts":1253870400000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"That dean edwards thing assumes <legend> in <details>","msgtype":"m.text"},"ts":1253871180000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Also, unrelatedly, having selector objects for caching seems unnecessary; if parsing selectors is a significant performance problem the UA should cache them automatically","msgtype":"m.text"},"ts":1253871240000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"would prefer a selector-object free design in general","msgtype":"m.emote"},"ts":1253871241000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I really wonder why we need to make it so complicated","msgtype":"m.text"},"ts":1253871300000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Indeed","msgtype":"m.text"},"ts":1253871301000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Though if we do we should really nuke DOM Traversal out of orbit","msgtype":"m.text"},"ts":1253871302000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Hmm, apparently it's extra impossible to implement RDFa in XSLT, because xmlns:xml=\"http://whateveritis\" attributes are treated precisely identically to there being no such attribute, so you can't tell whether the prefix has been explicitly bound or not","msgtype":"m.text"},"ts":1253871360000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"doesn't rebinding xml give you a nice violation of namespace well-formedness?","msgtype":"m.text"},"ts":1253871420000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Philip`: Is it just xmlns:xml that doesn't work or xmlns:foo in general?","msgtype":"m.text"},"ts":1253871480000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Won't there be issues with parsing being based on namespace mapping functions, so your cache would have to detect when it's passed a different function since the parse results would change?","msgtype":"m.text"},"ts":1253871481000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: I don't know what the plan is for namespaces","msgtype":"m.text"},"ts":1253871540000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"annevk2: \"The prefix xml is by definition bound to the namespace name http://www.w3.org/XML/1998/namespace. It MAY, but need not, be declared, and MUST NOT be bound to any other namespace name.\"","msgtype":"m.text"},"ts":1253871541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so it's okay as long as you use the correct value","msgtype":"m.text"},"ts":1253871600000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: But it isn't obviously impossible to make the design cacheable","msgtype":"m.text"},"ts":1253871601000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Just xmlns:xml I think - a complete implementation should allow access to namespace mappings, so xmlns:foo is okay, and the problem is just that xml is in the mapping regardless of whether it's declared","msgtype":"m.text"},"ts":1253871660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, ah ok","msgtype":"m.text"},"ts":1253871720000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"(though apparently Firefox's XSLT implementation doesn't let you access xmlns:foo at all)","msgtype":"m.text"},"ts":1253871721000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if that is a problem for other tree libs e.g. lxml","msgtype":"m.emote"},"ts":1253871722000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or XOM or whatever","msgtype":"m.text"},"ts":1253871723000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Indeed - automatic caching seems to make much more sense, in terms of shifting complexity from users to implementors","msgtype":"m.text"},"ts":1253871724000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Also, implementors could optimise their parsers)","msgtype":"m.text"},"ts":1253871960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders how an operating system and browser implemented in pure ecmascript would work","msgtype":"m.emote"},"ts":1253875680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Since there is no way to access the hardware or anything","msgtype":"m.text"},"ts":1253875740000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"yeah ...","msgtype":"m.text"},"ts":1253875800000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I just replied","msgtype":"m.text"},"ts":1253875801000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"jgraham: even taking that assumption as a given, the further conclusions don't make sense, so I decided not to argue with it","msgtype":"m.text"},"ts":1253876880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"jgraham: but it does seem so hypothetical that it's not a very strong argument against API convenience","msgtype":"m.text"},"ts":1253876940000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I noticed you had mentioned XMLSerializer in the logs","msgtype":"m.text"},"ts":1253877000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: in reference to our old discussion, yeah","msgtype":"m.text"},"ts":1253877060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it was incidental to the topic (which was Selectors API enhancements)","msgtype":"m.text"},"ts":1253877061000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: considering possible new information since we last discussed it, what's your take on changing WebKit to serialize HTML DOMs as XML if the MySpace problem were evangelized away?","msgtype":"m.text"},"ts":1253877062000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think the fact that WebKit serializes HTML DOMs as HTML was totally an accident","msgtype":"m.text"},"ts":1253877120000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and I'm surprised and alarmed that sites ever came to depend on it","msgtype":"m.text"},"ts":1253877121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: do you consider it a fixable accident?","msgtype":"m.text"},"ts":1253877122000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"if MySpace is the only significant breakage, and if it can be fixed, then yes I think it is fixable","msgtype":"m.text"},"ts":1253877180000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"our intent was to emulate the Gecko API","msgtype":"m.text"},"ts":1253877181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: OK. thanks.","msgtype":"m.text"},"ts":1253877182000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk2: given what othermaciej said, can you speculate on whether Opera would align with the Gecko trunk behavior?","msgtype":"m.text"},"ts":1253877240000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"othermaciej: Is the failure to emulate Gecko when it comes to non-void but empty http://www.w3.org/1999/xhtml elements on the XML side deliberate, though?","msgtype":"m.text"},"ts":1253877300000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I.e. WebKit does <div></div> rather than <div/>","msgtype":"m.text"},"ts":1253877301000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"ah","msgtype":"m.text"},"ts":1253877302000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"when serializing XML elements in the HTML namespace, we attempt to produce HTML-compatible XML, in all our paths for producing XML","msgtype":"m.text"},"ts":1253877360000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if that created compatibility issues in specific contexts, we could change it","msgtype":"m.text"},"ts":1253877361000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yeah, I thought that was deliberate.","msgtype":"m.text"},"ts":1253877362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well, we didn't make a conscious choice to apply it to XMLSerializer specifically","msgtype":"m.text"},"ts":1253877420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so would the agreeable convergence target be taking the WebKit XML-side behavior and making it standard on both HTML and XML trees?","msgtype":"m.text"},"ts":1253877421000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"we decided to do that based on other contexts that serialize to XML (possibly even native APIs) and decided to do it everywhere","msgtype":"m.text"},"ts":1253877422000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(so the delta to Gecko trunk would be turning <div/> into <div></div>)","msgtype":"m.text"},"ts":1253877423000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think that would make sense, if MySpace can be fixed","msgtype":"m.text"},"ts":1253877480000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Great!","msgtype":"m.text"},"ts":1253877481000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"any views from anyone from Opera?","msgtype":"m.text"},"ts":1253877482000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also for void elements we put the gratuitous space before the slash","msgtype":"m.text"},"ts":1253877483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen, I'm fine with aligning","msgtype":"m.text"},"ts":1253877484000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"<br />","msgtype":"m.text"},"ts":1253877485000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen, will you write a spec? :)","msgtype":"m.text"},"ts":1253877540000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: which alignment? :-)","msgtype":"m.text"},"ts":1253877541000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, with the spec :p","msgtype":"m.text"},"ts":1253877542000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hsivonen, I don't think we care much either way, as long as sites work, so Gecko trunk + MySpace fix would work","msgtype":"m.text"},"ts":1253877600000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: I commit to writing a spec on the spot here without approval from Mozilla, but I've worked under the assumption that morally I'm on the hook for writing a spec some day","msgtype":"m.text"},"ts":1253877601000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I *can't* commit","msgtype":"m.text"},"ts":1253877602000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"one negation makes such a difference in sentences :-(","msgtype":"m.text"},"ts":1253877660000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk2: OK. thanks.","msgtype":"m.text"},"ts":1253877661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if it's worth fighting the deprecation of text/xml in http://tools.ietf.org/html/draft-murata-kohn-lilley-xml and the continued bullshit of the charset defaulting to us-ascii in text/xml (is there a consumer out there other than mpilgrim_'s feedparser that implements that?)","msgtype":"m.emote"},"ts":1253881620000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: Validator.nu!","msgtype":"m.text"},"ts":1253881860000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk2: and I have a checkbox in the UI that amounts to \"[x] Violate RFC 3023\"","msgtype":"m.text"},"ts":1253881920000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and I haven't even gotten the t-shirt! :-(","msgtype":"m.text"},"ts":1253881921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"annevk2: the way the IETF is dealing with the text/* default brokenness is really, really sad","msgtype":"m.text"},"ts":1253882040000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"big cultural difference compared to how the WHATWG does things","msgtype":"m.text"},"ts":1253882041000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"wonders if there's an experimental sociologist taking notes and at least getting a PhD. out of this","msgtype":"m.emote"},"ts":1253882100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, agreed","msgtype":"m.text"},"ts":1253882760000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hsivonen, not sure whether to like or dislike the Validator.nu compliance :)","msgtype":"m.text"},"ts":1253882880000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hsivonen, I guess it's a fun easter egg","msgtype":"m.text"},"ts":1253882881000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"annevk2: SimplePie supports it with US-ASCII with fallback in a similar way to Universal Feed Parser","msgtype":"m.text"},"ts":1253883600000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: how does that mean it supports it if falls back onto a superset of ASCII?","msgtype":"m.text"},"ts":1253883720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: Basically yeah.","msgtype":"m.text"},"ts":1253883721000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: does it throw a bozo exception in addition to falling back?","msgtype":"m.text"},"ts":1253883722000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: I had an impl of that, but removed that, and just haven't removed the encoding magic yet.","msgtype":"m.text"},"ts":1253883780000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: BTW bibbi told me to tell you not to panic. I don't know if someone told her to tell me to tell you that or not","msgtype":"m.text"},"ts":1253883840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: She emailed me last night","msgtype":"m.text"},"ts":1253883841000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"jgraham: She may have got you to tell me because I'm not reading email much this month :)","msgtype":"m.text"},"ts":1253883900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Yes, she said that too. Did it have the words Don't Panic enblazoned in large friendly letters at the top","msgtype":"m.text"},"ts":1253883901000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"No, nor on the back.","msgtype":"m.text"},"ts":1253883902000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1253883903000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Well, it was on the back originally, though I don't know how you can have it on the back of an email…","msgtype":"m.text"},"ts":1253883960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Anyhow, I'm off (to prove I don't read email)","msgtype":"m.text"},"ts":1253883961000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Well maybe that's why she told me to tell you not to panic. It may even be why someone told her to tell me to tell you not to panic. But we don't know","msgtype":"m.text"},"ts":1253883962000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"can't find any evidence that Don't Panic was written on the back as opposed to the front","msgtype":"m.emote"},"ts":1253884140000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"it's on the top of my laptops","msgtype":"m.text"},"ts":1253884320000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"gsnedders, Don't Panic was always on the front, at least in the original radio series","msgtype":"m.text"},"ts":1253884321000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"only remembers \"on the cover\" which was also all that a quick Google search turned up","msgtype":"m.emote"},"ts":1253884620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"But on the fornt makes much more sense","msgtype":"m.text"},"ts":1253884621000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"*front","msgtype":"m.text"},"ts":1253884622000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"didn't know that the \"languages\" side bar on wikipedia supports one-to-many mappings","msgtype":"m.emote"},"ts":1253884980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"for a moment there I thought I had broken the parser","msgtype":"m.text"},"ts":1253884981000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Aren't workers likely to import standalone script libraries, which might also be imported by non-worker scripts on the same site, and which might use non-ASCII characters?","msgtype":"m.text"},"ts":1253887080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"The worker scripts themselves are likely to be new, but they'll use bits and pieces of old library code","msgtype":"m.text"},"ts":1253887140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hah","msgtype":"m.text"},"ts":1253887380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"If I apply http://www.rddl.org/rddl2rdf.xsl to http://www.w3.org/XML/1998/namespace then the output is not namespace-well-formed XML","msgtype":"m.text"},"ts":1253887381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hooray for namespaces!","msgtype":"m.text"},"ts":1253887382000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\\o/","msgtype":"m.text"},"ts":1253887440000,"senderName":"murr5y","senderId":"murr5y@irc"},
{"content":{"body":"My first attempt at supporting scoped selectors in Selectors API has been checked in. http://dev.w3.org/2006/webapi/selectors-api2/#the-apis","msgtype":"m.text"},"ts":1253888460000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"http://arstechnica.com/staff/fatbits/2009/09/metadata-madness.ars  - This article about file type on macosx reminds me about mimetypes issues.","msgtype":"m.text"},"ts":1253888640000,"senderName":"karlushi","senderId":"karlushi@irc"},
{"content":{"body":"karlushi: ping, you got mail :)","msgtype":"m.text"},"ts":1253888700000,"senderName":"Rik|work","senderId":"Rik|work@irc"},
{"content":{"body":"Rik about parisweb? Seen it yesterday evening but was too tired to really think about it. :) I'll reply tonight.","msgtype":"m.text"},"ts":1253888880000,"senderName":"karlushi","senderId":"karlushi@irc"},
{"content":{"body":"data URLs are same origin...","msgtype":"m.text"},"ts":1253889060000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"most of the time, anyway","msgtype":"m.text"},"ts":1253889061000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"It seems like a worker can use a cross-origin script with the cooperation of the page anyway","msgtype":"m.text"},"ts":1253889360000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"<script type=\"text/x-worker\" src=\"http://thirdparty.example\"></script> and then .toString() the script and postMessage it to the worker which can eval it","msgtype":"m.text"},"ts":1253889420000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Sure, but it's always possible to shoot yourself in the foot.","msgtype":"m.text"},"ts":1253889600000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You could do the same by having a helper page make a cross-origin (non-JS) request for the script, and have the worker XHR and eval it.","msgtype":"m.text"},"ts":1253889660000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: I'm not advocating cross-domain workers at all but it's not obvious why this is shooting yourself in the foot","msgtype":"m.text"},"ts":1253889780000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Just in the general sense that allowing a script on a domain you don't control to run in your security context is potentially bad.","msgtype":"m.text"},"ts":1253889781000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well yes, but the whole web is based on that working","msgtype":"m.text"},"ts":1253889840000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"At least the part of the web that relies on advertising","msgtype":"m.text"},"ts":1253889900000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, and that sorta sucks.  >_<","msgtype":"m.text"},"ts":1253889960000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But anyway, I doubt that advertising will be using Workers, so might as well keep it difficult to do this sort of thing.","msgtype":"m.text"},"ts":1253890020000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You don't envison adverts that compute the first million digits of pi in the background?","msgtype":"m.text"},"ts":1253890080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Buy viagra....π","msgtype":"m.text"},"ts":1253890140000,"senderName":"miketaylr","senderId":"miketaylr@irc"},
{"content":{"body":"Hehe.","msgtype":"m.text"},"ts":1253890200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Grah, I hate having our store hosted by someone else.  It makes editting so difficult, especially when I don't actually have a login for them, and the dude I'm supposed to be sharing with (who has appropriate permissions for me to edit the store code) isn't in yet.","msgtype":"m.text"},"ts":1253890620000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"w00t! wikipedia got made HTML5 without the space the authoritative page","msgtype":"m.text"},"ts":1253890621000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"zcorpan, next you should argue for a media type :)","msgtype":"m.text"},"ts":1253890680000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"zcorpan, come to think of it, if importScripts imports ECMAscript it probably does not make much sense to always use UTF-8","msgtype":"m.text"},"ts":1253890681000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"hsivonen, what does \"without the space the authoritative page\" mean?","msgtype":"m.text"},"ts":1253890682000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"it means HTML_5 is now named HTML5","msgtype":"m.text"},"ts":1253890683000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"I guess","msgtype":"m.text"},"ts":1253890740000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"Lachy: HTML5 used to redirect to HTML_5","msgtype":"m.text"},"ts":1253890741000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Lachy: now HTML_5 redirects to HTML5","msgtype":"m.text"},"ts":1253890742000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1253890743000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"in mediawiki terms of \"redirection\"","msgtype":"m.text"},"ts":1253890744000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"That's interesting, considering this that opposed it http://en.wikipedia.org/wiki/Talk:HTML5#Back_to_.22HTML5.22","msgtype":"m.text"},"ts":1253890800000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Firefox devs: I want tearoff tabs.  >_<","msgtype":"m.text"},"ts":1253892780000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Oh, nm, I have them now.","msgtype":"m.text"},"ts":1253892840000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Didn't realize this.","msgtype":"m.text"},"ts":1253892841000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"isn't sure he is happy with the ECMAScript people trying to constrain API design to what is implementable in pure ECMAScript","msgtype":"m.emote"},"ts":1253893080000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Because you don't consider that a valuable goal?","msgtype":"m.text"},"ts":1253893140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"It seems pretty useful for e.g. emulating new APIs in old browsers","msgtype":"m.text"},"ts":1253893141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Because a) I don't understand the reason for it and b) without knowing a) it seems more useful to have well-designed APIs than artifically constrained ones","msgtype":"m.text"},"ts":1253893200000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think Philip` provided probably the biggest practical reason.","msgtype":"m.text"},"ts":1253893260000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`: In many cases new APIs can't really be emulated in old browsers anyway","msgtype":"m.text"},"ts":1253893261000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I don't think the idea that an OS might be implemented in ecmascript is very important to worry about, though.","msgtype":"m.text"},"ts":1253893262000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"jgraham: In many cases you can make a good enough approximation for people to survive","msgtype":"m.text"},"ts":1253893263000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"e.g. with <canvas>","msgtype":"m.text"},"ts":1253893264000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: What about localStorage?","msgtype":"m.text"},"ts":1253893265000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"or you could use Flash as the backend implementation","msgtype":"m.text"},"ts":1253893320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham: Maybe Flash, or cookies, or use a remote web service for persistent storage","msgtype":"m.text"},"ts":1253893321000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"And there's that crazy window.name hack for SessionStorage.","msgtype":"m.text"},"ts":1253893380000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"In any case this seems like a tradeoff for the HTML WG to make on a case-by-case basis, not one for TC39 to insist on as a blanket restriction ","msgtype":"m.text"},"ts":1253893381000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"\"we believe that new host APIs should generally seek to avoid requiring catchalls\" sounds a long way from a blanket restriction","msgtype":"m.text"},"ts":1253893382000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Depends whether by \"generally\" they mean \"always\" or \"unless they make sense\"","msgtype":"m.text"},"ts":1253893440000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(Implementing localStorage via a remote storage service would be excellently ironic, unless I'm forgetting what \"ironic\" means)","msgtype":"m.text"},"ts":1253893441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think that's irony, yes.","msgtype":"m.text"},"ts":1253893500000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: ecma just needs __get magic like PHP and Ruby have.  Then catchalls won't be a problem.","msgtype":"m.text"},"ts":1253893501000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I thought Americans didn't get irony? ;)","msgtype":"m.text"},"ts":1253893502000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"jgraham: Well, if \"generally\" means \"always\", and \"should\" means \"must\", and \"seek to avoid\" means \"don't\"...","msgtype":"m.text"},"ts":1253893503000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I suppose then it would be a blanket restriction","msgtype":"m.text"},"ts":1253893560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Well they clearly don't like something in HTML5. And it's not like there are dozens of places where catchalls have been used","msgtype":"m.text"},"ts":1253893561000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"(\"Blanket restriction\" sounds like something you get during wartime rationing when there's not enough cloth to go around)","msgtype":"m.text"},"ts":1253893562000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So I would conclude that the restriction they have in mind is severe enough that one of the rather few instances of a new API that uses this pattern is enough to violate it","msgtype":"m.text"},"ts":1253893620000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"TabAtkins: Yeah they have been arguning about the precise way to implemtn catchalls for as long as I can remember","msgtype":"m.text"},"ts":1253893680000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Man, it ain't hard.","msgtype":"m.text"},"ts":1253893681000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which, admittedly isn't very long in this case","msgtype":"m.text"},"ts":1253893682000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Yeah, they should just copy all of PHP's design decisions","msgtype":"m.text"},"ts":1253893740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I'm glad you see things our way, Philip`.","msgtype":"m.text"},"ts":1253893741000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, it's *also* Ruby's design decision.","msgtype":"m.text"},"ts":1253893742000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://wiki.ecmascript.org/doku.php?id=strawman:catchalls","msgtype":"m.text"},"ts":1253893743000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Python has __getattr__","msgtype":"m.text"},"ts":1253893744000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"I think they should randomise the function naming conventions in the next version of ECMAScript too","msgtype":"m.text"},"ts":1253893745000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can't say he is super-thrilled by a proposal wehich appears to require first creating an object and then defining the catchalls on it seperatly","msgtype":"m.emote"},"ts":1253893860000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"Man, Philip`, my heart flutters at the mere possibility.","msgtype":"m.text"},"ts":1253893861000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Though function naming isn't that bad.  It's the *argument ordering* that really drives me crazy.)","msgtype":"m.text"},"ts":1253893920000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(Like in_array and substr taking the needle and haystack in opposite order.)","msgtype":"m.text"},"ts":1253893980000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wonders where the terms needle/haystack originated, in the context of search algorithms","msgtype":"m.emote"},"ts":1253894040000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Can a page on a secure connection link to a resource on another, different secure connection without raising the security dialog?","msgtype":"m.text"},"ts":1253894041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: It's also annoying that some functions are whatnot and others are array_whatnot","msgtype":"m.text"},"ts":1253894042000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"Philip`, isn't it obvious?  The needle/haystack metaphor has been around forever.","msgtype":"m.text"},"ts":1253894100000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't remember hearing it more than a few years ago","msgtype":"m.text"},"ts":1253894101000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Dashiva: Yeah, but honestly, that just doesn't bother me that much.  I've learned enough langauges that names just slide in.","msgtype":"m.text"},"ts":1253894102000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"\"Like finding a needle in a haystack\"?","msgtype":"m.text"},"ts":1253894103000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's an old, old expression.","msgtype":"m.text"},"ts":1253894104000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Denotes a difficult search.","msgtype":"m.text"},"ts":1253894160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I know the expression, but not its adoption into search algorithms","msgtype":"m.text"},"ts":1253894161000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, as far as I know it's been around for a long time there as well.  Been in every literature I've read since I started programming.","msgtype":"m.text"},"ts":1253894220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"It seems like a no-brainer","msgtype":"m.text"},"ts":1253894221000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"(Which, admittedly, is only like 10 years ago or so.)","msgtype":"m.text"},"ts":1253894222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.manpagez.com/man/3/strstr/ just uses s1,s2, but http://linux.die.net/man/3/strstr uses haystack,needle","msgtype":"m.text"},"ts":1253894223000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"So, I'm trying to decide if I can fake out the security dialog.  I have a page on a secure connection on a server that I have little control over, and probably no ability to store arbitrary files.  I also have a handy secure site which I *do* have completely control over already set up.","msgtype":"m.text"},"ts":1253894340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I wanna use the latter to host files for the former to link to, if it'll make the browser shut up about linking to insecure resources.","msgtype":"m.text"},"ts":1253894341000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, apparently glibc documentation used haystack/needle since at least 1995","msgtype":"m.text"},"ts":1253894400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but I'm sure I never heard it until relatively recently","msgtype":"m.text"},"ts":1253894460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: haystack/needle is ancient","msgtype":"m.text"},"ts":1253894461000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Define 'recently'.","msgtype":"m.text"},"ts":1253894462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Recently enough that I can remember thinking \"ooh, that's a good name for the arguments\" when I first noticed it","msgtype":"m.text"},"ts":1253894520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Heh, k.","msgtype":"m.text"},"ts":1253894521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Yeah, your brain is just crazy, then.","msgtype":"m.text"},"ts":1253894522000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I'm pretty sure it appears in at least one of Boyer–Moore, Rabin–Karp or Knuth–Morris–Pratt papers","msgtype":"m.text"},"ts":1253894523000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Woo, awesome, hosting on an unrelated secure server works.","msgtype":"m.text"},"ts":1253894580000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: Does the browser UI still indicate that the site is secure? (like when it shows the name of the site in a green/yellow box in the address bar, or whatever)","msgtype":"m.text"},"ts":1253894700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"has seen lots of secure sites where Opera just shows a grey \"?\" because it doesn't trust all the content on the page","msgtype":"m.emote"},"ts":1253894760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(which is particularly annoying when they're pages asking for my credit card details)","msgtype":"m.text"},"ts":1253894761000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, I'm viewing in IE, since it has the dialog most likely to produce a broken page (clicking \"yes\" makes it ignore all the insecure items).","msgtype":"m.text"},"ts":1253894762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, maybe?","msgtype":"m.text"},"ts":1253894763000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Anyway, got lots and lots of stuff to push over and change links for now.","msgtype":"m.text"},"ts":1253894764000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I just confirmed that the template CSS is working, which made me happy.","msgtype":"m.text"},"ts":1253894820000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Because ie8 users were getting a style-less, image-less page.","msgtype":"m.text"},"ts":1253894821000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(still usable, but no one who saw it wanted to, because they were confused)","msgtype":"m.text"},"ts":1253894822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Philip`, now that everything is being delivered securely, it does indeed indicate that it's a secure connection.","msgtype":"m.text"},"ts":1253897520000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"FF and IE agree.","msgtype":"m.text"},"ts":1253897521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"study three","msgtype":"m.text"},"ts":1253898600000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well that was interesting","msgtype":"m.text"},"ts":1253902200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I agree.","msgtype":"m.text"},"ts":1253902260000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"she was doing variant 002","msgtype":"m.text"},"ts":1253902320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"she didn't get the idea of scoping at all, until we showed her the variant 003 syntax, and she was like \"oooh, itemscope=\"\", yes!\"","msgtype":"m.text"},"ts":1253902321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also she had huge trouble with the idea of using URLs for identifiers","msgtype":"m.text"},"ts":1253902322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"unlike the other two, who were fine with it","msgtype":"m.text"},"ts":1253902323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we were hoping to learn more about types, but she didn't really comment on them","msgtype":"m.text"},"ts":1253902380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that didn't help much","msgtype":"m.text"},"ts":1253902381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"how many people are participating in total?","msgtype":"m.text"},"ts":1253902500000,"senderName":"annevk2","senderId":"annevk2@irc"},
{"content":{"body":"2 yesterday, 3 today","msgtype":"m.text"},"ts":1253902620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maybe 2 more monday","msgtype":"m.text"},"ts":1253902621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, are you employing a social scientist or usability psychologist for that ?","msgtype":"m.text"},"ts":1253902860000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"or is it just … \"well, lets see\"","msgtype":"m.text"},"ts":1253902861000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: yes, we have a team of usability experts here","msgtype":"m.text"},"ts":1253902862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"erlehmann: with recruiters, screeners, moderators, script writers, etc","msgtype":"m.text"},"ts":1253902920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"script writers ? the'll miss <dialog>, for sure *smirk*","msgtype":"m.text"},"ts":1253902921000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"one-way glass, eye tracking (though we're not using the eye tracking in this case), etc","msgtype":"m.text"},"ts":1253902922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh wow","msgtype":"m.text"},"ts":1253902923000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"actually usability study scripts tend to just be <li> elements :-)","msgtype":"m.text"},"ts":1253902980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's quite the setup","msgtype":"m.text"},"ts":1253902981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, your description fits my game taste perfectly. played ascii portal yet ?","msgtype":"m.text"},"ts":1253902982000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"(i was hoping we'd be able to make the videos public, but it looks like we can't because the participants only grant us rights to use the videos internally)","msgtype":"m.text"},"ts":1253902983000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"oh, how sad.","msgtype":"m.text"},"ts":1253903040000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"(though apparently if people want to see them i can show them to you if you come here and agree to the standard visitor NDAs)","msgtype":"m.text"},"ts":1253903041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"here\" ? norway ?","msgtype":"m.text"},"ts":1253903042000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: Google, Mountain View","msgtype":"m.text"},"ts":1253903220000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders, i was going by whois information, but that seems logical, yes.","msgtype":"m.text"},"ts":1253903280000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"erlehmann: Hixie runs IRC on some box in Norway because that's where he has a reliable computer he can run IRC over ssh on :P","msgtype":"m.text"},"ts":1253903340000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"in TAG meeting only available at interrupt","msgtype":"m.emote"},"ts":1253903820000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"I suppose one problem is you get no idea about long-term usability","msgtype":"m.text"},"ts":1253905080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"like whether verbose identifiers become really annoying after you've had to copy-and-paste them for the hundredth time into your document","msgtype":"m.text"},"ts":1253905140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1253905141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that is a huge problem, indeed","msgtype":"m.text"},"ts":1253905142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"though we have learnt that authors have no problem with copy and paste","msgtype":"m.text"},"ts":1253905143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"3 out of 3 authors so far have happily used context menus and copy and paste without any difficulty whatsoever","msgtype":"m.text"},"ts":1253905144000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If I remember correctly, hsivonen complains about having to copy-and-paste namespace URIs even when he only has to have them once per document","msgtype":"m.text"},"ts":1253905200000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and with complex embedded data you might have a dozen different identifiers each used a dozen times on the page","msgtype":"m.text"},"ts":1253905201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I presume the problem is more about finding a place to copy from, rather than the mechanism of copy-and-paste","msgtype":"m.text"},"ts":1253905260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1253905320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"totally agree","msgtype":"m.text"},"ts":1253905321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"So I guess your data won't be convincing evidence against the need for CURIEs","msgtype":"m.text"},"ts":1253905322000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so RDFa wins again!","msgtype":"m.text"},"ts":1253905323000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ok, IE8. What gives? All my html5 tags don't work, or they're being displayed \"inline\" or something. I have a reset stylesheet which is setting them all to display:block, but that's not taking. Is there something I should know about this issue?","msgtype":"m.text"},"ts":1253905440000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"oh we're not trying to study rdfa here","msgtype":"m.text"},"ts":1253905441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"solepixel, google frame ;)","msgtype":"m.text"},"ts":1253905500000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"Hixie, isn't 3 a really small number for extrapolation ?","msgtype":"m.text"},"ts":1253905501000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"or do you just want to uncover problems ?","msgtype":"m.text"},"ts":1253905560000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"solepixel: you probably want the createElement hack","msgtype":"m.text"},"ts":1253905561000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"ouch","msgtype":"m.text"},"ts":1253905562000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"so my html5 requires JS to run in IE8?","msgtype":"m.text"},"ts":1253905563000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"solepixel: You want http://html5shiv.googlecode.com/svn/trunk/html5.js","msgtype":"m.text"},"ts":1253905680000,"senderName":"da3d","senderId":"da3d@irc"},
{"content":{"body":"so, what you're saying is, this HTML5 that everyone's saying is OK to use \"today\" isn't really without this javascript hack?","msgtype":"m.text"},"ts":1253905681000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"wonders how the word \"shiv\" got so entrenched here","msgtype":"m.emote"},"ts":1253905740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"notes productive discussion of copy/paste difficulty as requirement has been useful, but that 'authors using text editors' are only small segment of market that create HTML pages","msgtype":"m.emote"},"ts":1253905741000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"solepixel: HTML5 features are fine to use in browsers that support them","msgtype":"m.text"},"ts":1253905742000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"solepixel: if you heard that IE8 is supporting a lot of new HTML5 features, you were misinformed","msgtype":"m.text"},"ts":1253905800000,"senderName":"inimino","senderId":"inimino@irc"},
{"content":{"body":"noting things that interfere with backward compatibility with large deployed base of existing browsers would be really helpful, most standards updates take compatibility with all sides (producers and consumers) and not just one side (old producers, i.e., existing web pages)","msgtype":"m.text"},"ts":1253905860000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"goes back to TAG meeting","msgtype":"m.emote"},"ts":1253905861000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"no, i just saw in numerous blogs/sites that people say \"yes, start using HTML5\". yet they all failed to mention hacks were required for IE8","msgtype":"m.text"},"ts":1253905862000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"Philip`: I use assistive technology for writing ns uris","msgtype":"m.text"},"ts":1253905863000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"they were misinformed: http://www.w3.org/QA/2009/05/_watching_the_google_io.html","msgtype":"m.text"},"ts":1253905920000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"Philip`: I have a program that hooks into the accessibility APIs and expands nmemonics into full uris for me","msgtype":"m.text"},"ts":1253905921000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"John Resig being one of them","msgtype":"m.text"},"ts":1253905922000,"senderName":"solepixel","senderId":"solepixel@irc"},
{"content":{"body":"however, I had a typo in the Xlink macro, so teh wrong ns got expanded all over the place. including the V.nu talisman checking","msgtype":"m.text"},"ts":1253905980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"paul_irish_: nice post re: chrome & @font-face","msgtype":"m.text"},"ts":1253906040000,"senderName":"hober","senderId":"hober@irc"},
{"content":{"body":"hober: oh thanks man! :)","msgtype":"m.text"},"ts":1253906220000,"senderName":"paul_irish_","senderId":"paul_irish_@irc"},
{"content":{"body":"hober: URL?","msgtype":"m.text"},"ts":1253906340000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://paulirish.com/2009/chrome-and-font-face-a-summary/","msgtype":"m.text"},"ts":1253906341000,"senderName":"paul_irish_","senderId":"paul_irish_@irc"},
{"content":{"body":"paul_irish_: thanks","msgtype":"m.text"},"ts":1253906760000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":":)","msgtype":"m.text"},"ts":1253906761000,"senderName":"paul_irish_","senderId":"paul_irish_@irc"},
{"content":{"body":"http://www.w3.org/html/wg/tracker/issues/53","msgtype":"m.text"},"ts":1253907360000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"http://dev.w3.org/html5/spec/Overview.html#text-html","msgtype":"m.text"},"ts":1253907540000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"erlehmann: 2 yesterday, 3 today, 2 monday. turns out more than 6 is actually not that much more information.","msgtype":"m.text"},"ts":1253907541000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie, and from what background did you pick your candidates ? web developers ?","msgtype":"m.text"},"ts":1253907720000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"yeah, engineers and web devs. we have a recruiting department, they ask screening questions to try to get people familiar with html but not familiar with html5, etc","msgtype":"m.text"},"ts":1253907721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"asking questions like \"what text editor do you use\" and \"how much do you use css\"","msgtype":"m.text"},"ts":1253907780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we figured that would help weed out the wysiwyg users a bit","msgtype":"m.text"},"ts":1253907781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Well, then i'll go for „MS Word“ and „I liked Counterstrike 1.6 more.“ :p","msgtype":"m.text"},"ts":1253907840000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"It's cool Google are doing this, though.","msgtype":"m.text"},"ts":1253907900000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hehe. jd has already drawn parallels between Silverlight and Chrome Frame","msgtype":"m.text"},"ts":1253908680000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hixie, was usability testing also employed in other regards, like naming the URI input type \"url\" etc. ?","msgtype":"m.text"},"ts":1253908681000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"or is this a first for the spec ?","msgtype":"m.text"},"ts":1253908682000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"the idea of studying this is bizarre, to pick the spec point by point for usability","msgtype":"m.text"},"ts":1253908800000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"that's like having an application user interface and asking people if they like blue or green menu items better","msgtype":"m.text"},"ts":1253908801000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"erlehmann: first time for html5","msgtype":"m.text"},"ts":1253908920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well i guess there wont be a second time then ? after all, other issues are not so complicated and last call is near.","msgtype":"m.text"},"ts":1253908980000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"masinter: you wouldn't ask them which they prefer, you'd test which makes them more productive","msgtype":"m.text"},"ts":1253908981000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it's not like asking, it's like doing a usability test to see if blue or green menu items are for whatever reason easier to use","msgtype":"m.text"},"ts":1253908982000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"if the criteria is 'consistency' and 'coherence', there's no way to discover that by asking piece by piece whether the overall language makes sense from a usability point of view","msgtype":"m.text"},"ts":1253908983000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"the latter may still be trivial and perhaps likely to produce more statistical noise than meaningful results, but at least it would not be fallacious","msgtype":"m.text"},"ts":1253908984000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"masinter: (and google does do that; we've even doing A/B comparison studies for shades of blue on the search results page!)","msgtype":"m.text"},"ts":1253908985000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"masinter: we don't ask them what they think, we make them do exercises and see how well they do with different variants","msgtype":"m.text"},"ts":1253909040000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"masinter: you can see the scripts we use here: http://damowmow.com/playground/microdata/","msgtype":"m.text"},"ts":1253909041000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"my comment about consistency and coherence of the overall language stand, no matter how you judge individual features","msgtype":"m.text"},"ts":1253909042000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"and when doing usability testing, yes, it does make sense to consider only one or a few features / tasks at a time","msgtype":"m.text"},"ts":1253909043000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"participant 4 just started, following this script: http://damowmow.com/playground/microdata/script-participant5","msgtype":"m.text"},"ts":1253909044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"er, participant 5 even","msgtype":"m.text"},"ts":1253909045000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"maciej: tasks, yes. features, no","msgtype":"m.text"},"ts":1253909100000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"masinter, html5 is not consistent at all. film at 11.","msgtype":"m.text"},"ts":1253909101000,"senderName":"erlehmann","senderId":"erlehmann@irc"},
{"content":{"body":"though it's the fourth person, we're doing them out of order because someone canceled on us earlier today","msgtype":"m.text"},"ts":1253909102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm not saying that doing experiments is bad, it's just drawing grand conclusions based on them","msgtype":"m.text"},"ts":1253909103000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"judging consistency and coherence of the whole language is useful, but not in the same way as using usability testing","msgtype":"m.text"},"ts":1253909104000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"usability testing can't generally tell you if your whole UI paradigm is wrong (if we take it back to its usual domain)","msgtype":"m.text"},"ts":1253909160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh actually we're using script 6 with this participant (http://damowmow.com/playground/microdata/script-participant6)","msgtype":"m.text"},"ts":1253909161000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"are there any reliable statistics about percentage of web pages served that are actually hand-authored, vs. generated by database tools?","msgtype":"m.text"},"ts":1253909162000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"my bad","msgtype":"m.text"},"ts":1253909163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you have to have good judgment to get the right basic ideas in the UI, and then you can use usability testing to refine them","msgtype":"m.text"},"ts":1253909164000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or built with wysiwyg tools, such as rich text email editors?","msgtype":"m.text"},"ts":1253909165000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"othermaciej: it can tell you your paradigm isn't working, though it can't tell you how to fix the whole paradigm, i'd say","msgtype":"m.text"},"ts":1253909220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just the relative importance given in the language design to hackers using emails to build HTML","msgtype":"m.text"},"ts":1253909221000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"s/email/emacs/","msgtype":"m.text"},"ts":1253909222000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"Hixie: fair enough, though if you have a design that broken, then you need a good designer more than you need usability testing","msgtype":"m.text"},"ts":1253909223000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: no argument there!","msgtype":"m.text"},"ts":1253909280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: What are the differences between 001 and 002?  I can't tell on a quick visual diff.","msgtype":"m.text"},"ts":1253909281000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"masinter: enough people (and in particular enough early adopters and educators/advocates) hand-author that it's worth considering","msgtype":"m.text"},"ts":1253909282000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"thinks extensibility, coherence, reliability of processing, locality of effects of processing, debugability etc. are more important in language design than usability, even for markup languages","msgtype":"m.emote"},"ts":1253909283000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"I think there's generally an assumption that making something nicer for hand-authoring will not materially harm the ability of tools to produce it","msgtype":"m.text"},"ts":1253909340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"TabAtkins: http://damowmow.com/playground/microdata/002-001 explains going from 002 to 001","msgtype":"m.text"},"ts":1253909341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"more pages are edited and debugged than are authored in the first place","msgtype":"m.text"},"ts":1253909342000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"sure, so making HTML write-only like Perl would be a poor choice","msgtype":"m.text"},"ts":1253909343000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that was the argument for programming languages too: programmers spend more time trying to figure out what someone else's code than they do writing stuff in the first place","msgtype":"m.text"},"ts":1253909400000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"though we are constrained by legacy to have some details that may be hard for a non-expert to infer from reading","msgtype":"m.text"},"ts":1253909401000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"for example, without knowing what elements implicitly close what other elements, and which elements are void it may be hard to read markup that doesn't go out of its way to indicate when things are closed","msgtype":"m.text"},"ts":1253909460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: the good news on that front is that authors are finding reading microdata easier than writing it","msgtype":"m.text"},"ts":1253909461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: are there any tests that involve them taking existing microdata markup and changing it to say something else?","msgtype":"m.text"},"ts":1253909462000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or just figuring out what it says and whether it says what you think it says?","msgtype":"m.text"},"ts":1253909520000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"or debugging \"i got out X and I meant for it to say Y, fix it?\"","msgtype":"m.text"},"ts":1253909521000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"masinter: Hixie did say there are tests for reading microdata which are going well","msgtype":"m.text"},"ts":1253909522000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: one exercise has them writing out the name-value pairs of http://damowmow.com/playground/microdata/002/flickr-annotated.html","msgtype":"m.text"},"ts":1253909523000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"debugging is much different from reading","msgtype":"m.text"},"ts":1253909524000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"othermaciej: and the main other exercise is getting them to annotate http://damowmow.com/playground/microdata/002/blog.html","msgtype":"m.text"},"ts":1253909580000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"metadata is more likely to be inserted using database publishing, anyway","msgtype":"m.text"},"ts":1253909581000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"hand-authored metadata is likely to be rare anyway; the most important use cases for adding metadata to web pages come from database publishing, so the relevance of usability here is really suspect","msgtype":"m.text"},"ts":1253909640000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"masinter: many authors hand-author microdata markup, or templates that contain it, so I doubt your conclusion","msgtype":"m.text"},"ts":1253909641000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i asked for statistics and you say 'many'","msgtype":"m.text"},"ts":1253909642000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"many authors also try to hand-author RDFa markup or templates containing it","msgtype":"m.text"},"ts":1253909700000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"now, i don't have statistics either, but i know about metadata through authoring tool chains and most of the metadata is added automatically in all of the workflows i know of, by the tools","msgtype":"m.text"},"ts":1253909701000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"doesn't know how you could do something like RDFa/microdata without a human writing either the markup or the markup templates","msgtype":"m.emote"},"ts":1253909760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I understand that you doubt the value of this usability study, but pre-emptively criticizing its conclusions does not seem like a good use of time","msgtype":"m.text"},"ts":1253909761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"i'm not criticizing its conclusions","msgtype":"m.text"},"ts":1253909762000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"not at all, sorry if that seemed like i was saying","msgtype":"m.text"},"ts":1253909763000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"\"i'm not saying that doing experiments is bad, it's just drawing grand conclusions based on them\"","msgtype":"m.text"},"ts":1253909820000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"exactly, i don't expect there to be any grand conclusions, do you?","msgtype":"m.text"},"ts":1253909821000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"i would imagine most pages that have microformats, rdfa, or that will have microdata, are either written by hand, or autofilled into templates that are themselves written by hand","msgtype":"m.text"},"ts":1253909822000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I expect there to be modest conclusions, which are nontheless useful","msgtype":"m.text"},"ts":1253909823000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"since that is what usually happens with usability studies","msgtype":"m.text"},"ts":1253909824000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"e.g. wordpress, a big producer of microformats, is all hand-written templates","msgtype":"m.text"},"ts":1253909825000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"othermaciej: yes, that's what i expect too, so we agree","msgtype":"m.text"},"ts":1253909880000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"hmmm, hand-written templates... that sounds right","msgtype":"m.text"},"ts":1253909881000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"it sounded like you were pre-emptively mocking the conclusions as likely to be \"grand\", when no one had presented any conclusions","msgtype":"m.text"},"ts":1253909882000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so template builders don't actually verify the metadata accuracy","msgtype":"m.text"},"ts":1253909883000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"masinter: someone hand authors the templates that are filled from a database","msgtype":"m.text"},"ts":1253909940000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: yes, that sounds reasonable. but then, the task of changing the metadata based on looking at the HTML wouldn't be the right test.","msgtype":"m.text"},"ts":1253909941000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"you want markup that someone can add to a template with low likelihood of messing up the syntax (relative to alternatives)","msgtype":"m.text"},"ts":1253909942000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: I'd posit that the power of Selectors makes it super-hard to make a WYSIWYG tool that ingests hand-written CSS","msgtype":"m.text"},"ts":1253910000000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"a test to make a template would probably be more confusing than a test to add some concrete microdata, and unlikely to give interestingly different conclusions","msgtype":"m.text"},"ts":1253910001000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: I'd agree with that.","msgtype":"m.text"},"ts":1253910002000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"if the metadata is populated by filling in a template, then the production of the metadata would be split between the template writer, the author of the software that knows how to fill in the template, the user that fills in the template ","msgtype":"m.text"},"ts":1253910003000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"hsivonen: are you saying this is a consequence of the wonderful hand-authorability of Selectors?","msgtype":"m.text"},"ts":1253910004000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"hsivonen: I also wouldn't care, because Selectors are so awesome.","msgtype":"m.text"},"ts":1253910005000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: abstractions that help hand authoring are hard for stuff that crams that stuff into different abstractions","msgtype":"m.text"},"ts":1253910120000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: selectors of nontrivial complexity are hard to hand-author","msgtype":"m.text"},"ts":1253910121000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"how does OpenOffice.org expose RDFa in ODF in the UI?","msgtype":"m.text"},"ts":1253910180000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I think the real tradeoff we are seeing here is language expressiveness vs. ability of tools to understand the language and express it in a GUI","msgtype":"m.text"},"ts":1253910181000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's great to do usability studies, and looking at hand authoring is fine, it's just that if there are limited resources to do them, doing usability studies that correspond the most important use cases would be really helpful","msgtype":"m.text"},"ts":1253910182000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"takes back what he said earlier about participants being able to extract data easily","msgtype":"m.emote"},"ts":1253910183000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"masinter: i encourage adobe to put up the resources to do usability studies for what you think is more important","msgtype":"m.text"},"ts":1253910240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's a great rejoinder, of course","msgtype":"m.text"},"ts":1253910241000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"do adobe products expose a UI for arbitrary graphs in XMP?","msgtype":"m.text"},"ts":1253910242000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"masinter: if you have ideas for studies perhaps we can even find resources elsewhere","msgtype":"m.text"},"ts":1253910243000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it's not meant as a rejoinder, i'm serious, it would be awesome if adobe could do usability studies","msgtype":"m.text"},"ts":1253910244000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hsivonen: I don't think so","msgtype":"m.text"},"ts":1253910300000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"myself, I'm not inclined to criticize data gathering simply because there is other data we could have gathered","msgtype":"m.text"},"ts":1253910301000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Adobe mainly does WYSIWYG tools for designers","msgtype":"m.text"},"ts":1253910302000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"and for the most part, Adobe customers could care less about the markup language and don't want to see it","msgtype":"m.text"},"ts":1253910303000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"i'm sorry if it sounded like i was criticizing data gathering, i was just trying to be helpful","msgtype":"m.text"},"ts":1253910360000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"wishes he can a bit more visibility into the markup language of PDFs, as he's been staring at a big problem for a while and Adobe tech support couldn't help him.","msgtype":"m.emote"},"ts":1253910361000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"masinter: what happens if a file comes in from a non-Adobe app and has a complex RDF graph in XMP?","msgtype":"m.text"},"ts":1253910362000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"s/can/could have/","msgtype":"m.text"},"ts":1253910363000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"would you imagine any of Adobe's tools ever having UI to add metadata markup (either concrete or templates)?","msgtype":"m.text"},"ts":1253910420000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or is that something that would be left to be done after the fact by editing the tool's output?","msgtype":"m.text"},"ts":1253910421000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"most adobe tools have UI to add and edit matadata, and to do template-based creation of metadata","msgtype":"m.text"},"ts":1253910480000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"embedded metadata, or whole-document level metadata?","msgtype":"m.text"},"ts":1253910481000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"and extensibility points for adding new menus, screens, user interfaces","msgtype":"m.text"},"ts":1253910482000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"and if the former, what formats are supported?","msgtype":"m.text"},"ts":1253910483000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, it depends on the product, maciej","msgtype":"m.text"},"ts":1253910484000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"I'm asking because I wonder if there is anything we can do in the design of metadata markup to make it easier for WYSIWYG tools to apply it","msgtype":"m.text"},"ts":1253910540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"masinter, what formats in total (across any/all products)?","msgtype":"m.text"},"ts":1253910541000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"lemme give you some references","msgtype":"m.text"},"ts":1253910542000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"I can imagine building a template with a graphical tool and then producing pages using that template from a database is a likely scenario","msgtype":"m.text"},"ts":1253910543000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"http://www.adobe.com/products/xmp/standards.html","msgtype":"m.text"},"ts":1253910600000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"finds Selectors absolutely trivial, and so is definitely not the guy you should ask about Selector usability.","msgtype":"m.emote"},"ts":1253910601000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"is in a discussion in TAG meeting needs to get back, will send file format issue","msgtype":"m.emote"},"ts":1253910660000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"tantek: are you aware of WYSIWYGish tools that support DRY metadata in document body?","msgtype":"m.text"},"ts":1253910661000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so XMP is file-scope metadata?","msgtype":"m.text"},"ts":1253910662000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(if I'm reading this right)","msgtype":"m.text"},"ts":1253910663000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"having a WYSIWYG UI for DRY seems like a hard problem","msgtype":"m.text"},"ts":1253910720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"part 3 http://www.adobe.com/devnet/xmp/","msgtype":"m.text"},"ts":1253910721000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"part 3 has file formats supported","msgtype":"m.text"},"ts":1253910722000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"http://www.adobe.com/devnet/xmp/pdfs/XMP-FileInfo-SDK-Overview.pdf has info on how to customize application UI for wysiwyg interfaces for custom metadata","msgtype":"m.text"},"ts":1253910780000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"PDF, InDesign and some other formats allow XMP inside embedded objects","msgtype":"m.text"},"ts":1253910840000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"http://www.adobe.com/devnet/xmp/pdfs/DynamicMediaXMPPartnerGuide.pdf says it's about dynamic media (video & audio) but it actually is a general architecture for having embedded metadata for compound objects","msgtype":"m.text"},"ts":1253910900000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"DRY = ??","msgtype":"m.text"},"ts":1253910901000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"Don't Repeat Yourself","msgtype":"m.text"},"ts":1253910902000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"tantek: file formats extensible, of course","msgtype":"m.text"},"ts":1253910903000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"wonder what app consume Illustrator-written metadata in SVG","msgtype":"m.emote"},"ts":1253910960000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"well this study is going poorly","msgtype":"m.text"},"ts":1253910961000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"dislikes the term metadata as its often unnecessarily used (where \"data\" would do), and seems to encourage separation/duplication from the actual data (violations of DRY) and invisible metadata.","msgtype":"m.emote"},"ts":1253910962000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(parts of it have a write-only flavor)","msgtype":"m.text"},"ts":1253910963000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"here's a good blog post on the overuse of the term metadata (even/especially by CS types) http://blogs.fluidinfo.com/fluidDB/2009/09/05/metadata-vs-data-a-wholly-artificial-distinction/","msgtype":"m.text"},"ts":1253911020000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"http://www.metadataworkinggroup.org/ working on integration of XMP with other legacy metadata formats for images & video (e.g., EXIF) so cameras can add metadata when the picture is taken","msgtype":"m.text"},"ts":1253911021000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"Everything is cooler when you call it meta","msgtype":"m.text"},"ts":1253911080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: Everything is cooler when you call it Semantic","msgtype":"m.text"},"ts":1253911081000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"You can't spell Semantic without meta.","msgtype":"m.text"},"ts":1253911082000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Also: You can't spell it without snic.","msgtype":"m.text"},"ts":1253911140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Clearly we need metasemantics","msgtype":"m.text"},"ts":1253911141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you can't spell Semantics without Antics","msgtype":"m.text"},"ts":1253911142000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://wordsmith.org/anagram/anagram.cgi?anagram=semantic&t=1000&a=n","msgtype":"m.text"},"ts":1253911200000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"You can't spell semantic without ace mints.","msgtype":"m.text"},"ts":1253911201000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wow, current participant is confusing me","msgtype":"m.text"},"ts":1253911260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"if you call something \"metadata\" instead of \"data\", sometimes people are less insistent on figuring out how it is useful and who will use it","msgtype":"m.text"},"ts":1253911320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej: Because you can always use more metadata.","msgtype":"m.text"},"ts":1253911321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"othermaciej: indeed, that's why i stopped calling things metadata a few months ago :-)","msgtype":"m.text"},"ts":1253911322000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i think calling it 'metadata' rather than 'data' narrows the focus usefully","msgtype":"m.text"},"ts":1253911380000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"brb","msgtype":"m.text"},"ts":1253911381000,"senderName":"masinter","senderId":"masinter@irc"},
{"content":{"body":"ok well the current participant really had trouble with containership like hte one earlier today","msgtype":"m.text"},"ts":1253911620000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but seemed to handle the itemtype=\"\" idea reasonably well in the middle of all that","msgtype":"m.text"},"ts":1253911621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - hierarchy is always difficult, even if it is just one level (containership)","msgtype":"m.text"},"ts":1253911622000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"this is something we have learned from microformats experience as well, and as a result have worked on flattening various things","msgtype":"m.text"},"ts":1253911623000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so it seems","msgtype":"m.text"},"ts":1253911624000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"some of these changes are making it into hCard 1.0.1 and hCalendar 1.0.1","msgtype":"m.text"},"ts":1253911680000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"also a big lesson: no required properties","msgtype":"m.text"},"ts":1253911681000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"the one earlier today said that the variant 003 idea of using itemscope=\"\" actually made things easier","msgtype":"m.text"},"ts":1253911682000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this is a tough one for semantic/formats-heads","msgtype":"m.text"},"ts":1253911683000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"which i found interesting","msgtype":"m.text"},"ts":1253911684000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"its is the direct OPPOSITE of draconian handling methodology","msgtype":"m.text"},"ts":1253911685000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"like, he didn't get <div item> at all, but once we had <div itemscope>, suddenly he was much happier with it","msgtype":"m.text"},"ts":1253911686000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie - that kind of terminology specific result depends *heavily* on the background of the person","msgtype":"m.text"},"ts":1253911800000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"(I know this from seeing similar results (v�\u0006t widely varying - from numerous people in classroom settings )","msgtype":"m.text"},"ts":1253911801000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"so another person will be much happier with \"item\" who has no idea what \"scope\" means","msgtype":"m.text"},"ts":1253911802000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"don't get me wrong - i'm happy to see you are doing this study and gathering data from it","msgtype":"m.text"},"ts":1253911860000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"it's quite useful to have various experiences confirmed by study etc.","msgtype":"m.text"},"ts":1253911861000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"wow. http://downforeveryoneorjustme.com/amazon.com","msgtype":"m.text"},"ts":1253911980000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"looks fine to me","msgtype":"m.text"},"ts":1253911981000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"To me too","msgtype":"m.text"},"ts":1253911982000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Me too.","msgtype":"m.text"},"ts":1253911983000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So, it's down for just them?","msgtype":"m.text"},"ts":1253912040000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"maybe amazon blocked them?","msgtype":"m.text"},"ts":1253912041000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"amazon times out for me","msgtype":"m.text"},"ts":1253912042000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Huh.  Chrome and FF agree on rendering this table-* example wrong.","msgtype":"m.text"},"ts":1253912160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, maybe form elements aren't allowed to be display:table-cell.","msgtype":"m.text"},"ts":1253912161000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Which would explain things.","msgtype":"m.text"},"ts":1253912162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Well, it wouldn't explain FF's behavior, but it's a *really* big table.","msgtype":"m.text"},"ts":1253912280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"JohnResig, yt?","msgtype":"m.text"},"ts":1253915700000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"I'll respond to your mail in more detail later, but I think you've failed to see just how flexible my proposal for selectors api actually is. In fact, it seems to address most, if not all, of your needs for the API, including scoped selectors and collective queries on node lists","msgtype":"m.text"},"ts":1253915940000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"Jeezus, it seems 1 in 5 sites on the web use jQuery.  Of the ones that actually use js, 1 in 3 are using jquery.  (I guess that means 60% of all sites on the web are using js in some way?)","msgtype":"m.text"},"ts":1253916720000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins, I'd believe that 1 in 5 web page *views* use jQuery, but there's a *really* long tail if you count by sites.","msgtype":"m.text"},"ts":1253918160000,"senderName":"AryehGregor","senderId":"AryehGregor@irc"},
{"content":{"body":"I'm just going by the stats cited by Resig & co during some recent talks.","msgtype":"m.text"},"ts":1253918220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"So that may be views, dunno.","msgtype":"m.text"},"ts":1253918221000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yeah, given the number of pages Hixie bandies about (1 trillion), that's a *very* long tail.","msgtype":"m.text"},"ts":1253918280000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"pages != views","msgtype":"m.text"},"ts":1253918281000,"senderName":"tantek","senderId":"tantek@irc"},
{"content":{"body":"But then again, sites != pages either.","msgtype":"m.text"},"ts":1253918340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://ejohn.org/blog/talks-at-the-2009-jquery-conference/  \"State of jQuery '09\", slide 16","msgtype":"m.text"},"ts":1253918400000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i kind of doubt a source like http://trends.builtwith.com/","msgtype":"m.text"},"ts":1253919180000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"I can't find a description of the process to gather such data","msgtype":"m.text"},"ts":1253919181000,"senderName":"Rik`","senderId":"Rik`@irc"},
{"content":{"body":"Well, it looks like they're only covering 3M sites, so I suppose we're mainly talking stuff you can access relatively easily with a spider.","msgtype":"m.text"},"ts":1253919300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"They do make very pretty pie charts, though, so obviously you can trust them.","msgtype":"m.text"},"ts":1253919420000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ok next participant","msgtype":"m.text"},"ts":1253919780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"this one apparently uses vim(1)","msgtype":"m.text"},"ts":1253919781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which is promising","msgtype":"m.text"},"ts":1253919782000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Burn him/her!","msgtype":"m.text"},"ts":1253919783000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"better than frontpage!","msgtype":"m.text"},"ts":1253919840000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: do they bring their own laptop or .vimrc (or whatever the pref file is called)?","msgtype":"m.text"},"ts":1253919841000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"just uses a normal text editor.","msgtype":"m.emote"},"ts":1253919900000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: 5% of pages in the dotnetdotcom sample have <script src=\"*jquery*\">","msgtype":"m.text"},"ts":1253919901000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which is a long way from 20%","msgtype":"m.text"},"ts":1253919902000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(though still quite a lot)","msgtype":"m.text"},"ts":1253919903000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hsivonen: nah, we make them use some random text editor","msgtype":"m.text"},"ts":1253919904000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Philip`, shrug.","msgtype":"m.text"},"ts":1253919905000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i forget what it's called","msgtype":"m.text"},"ts":1253919906000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TextEdit2 or something","msgtype":"m.text"},"ts":1253919907000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1253919908000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"TabAtkins: (and about 70% use <script src>)","msgtype":"m.text"},"ts":1253919960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I just wish emacs didn't use elisp.  I can't program in elisp.","msgtype":"m.text"},"ts":1253919961000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"(regardless of value)","msgtype":"m.text"},"ts":1253919962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"apparently this participant has read some press articles about html5 and likes <header> because it means she doesn't have to use <div>s with class=\"\"es anymore","msgtype":"m.text"},"ts":1253919963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yay for intended consequences!","msgtype":"m.text"},"ts":1253919964000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"she describes microdata as a simpler solution than xslt, which she called \"annoying\"","msgtype":"m.text"},"ts":1253920320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Smart participant.","msgtype":"m.text"},"ts":1253920321000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i'm not sure whether to be offended that she likened something i worked on to XSLT, or whether to be happy she called XSLT annoying unprompted, or...","msgtype":"m.text"},"ts":1253920380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I think microdata is a simpler solution than an internal combustion engine, which is big and noisy","msgtype":"m.text"},"ts":1253920740000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Not sure they're solutions to the same problem, though","msgtype":"m.text"},"ts":1253920800000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well her point was that you would use microdata instead of writing the data in xml and translating it to HTML","msgtype":"m.text"},"ts":1253920860000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which isn't exactly right","msgtype":"m.text"},"ts":1253920861000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"but could be right depending on exactly what she's doing","msgtype":"m.text"},"ts":1253920862000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"The use of XSLT to transform a page into the embedded data, or vice versa, is the equivalent use.","msgtype":"m.text"},"ts":1253920863000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"like if she's exposing XML and using XSLT to get data out","msgtype":"m.text"},"ts":1253920864000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1253920865000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"she's actually reading the documentation, i'm shocked","msgtype":"m.text"},"ts":1253920866000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"clearly she's not representative of normal authors :-P","msgtype":"m.text"},"ts":1253920920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"With Microdata you'd just encode things then throw a generic parser, rather than building an XSLT script to pull the info out.","msgtype":"m.text"},"ts":1253920921000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"wooo, she actually got as far as reading about itemfor=\"\" and actually understood it!","msgtype":"m.text"},"ts":1253920980000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1253920981000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"she's doing vocabulary 001, and so far she's confused about the way item=\"\" takes a type","msgtype":"m.text"},"ts":1253920982000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yeah, that is kind of confusing.","msgtype":"m.text"},"ts":1253921040000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"I think that confused me a bit, too.","msgtype":"m.text"},"ts":1253921041000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Heh.","msgtype":"m.text"},"ts":1253921042000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"That's 3 votes against, Hixie.  ^_^","msgtype":"m.text"},"ts":1253921043000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah i think we're going to go with renaming item=\"\" to itemtype=\"\", make it optional, and use itemscope=\"\" from proposal 003","msgtype":"m.text"},"ts":1253921044000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"also maybe we'll change itemfor=\"\" to just referring in the other direction","msgtype":"m.text"},"ts":1253921100000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"like sicking suggested","msgtype":"m.text"},"ts":1253921101000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"using <ref> or something","msgtype":"m.text"},"ts":1253921102000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Other direction? I missed this suggestion.","msgtype":"m.text"},"ts":1253921103000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"sicking thinks' it's confusing that the stranded data uses @itemfor to point to its parent, rather than the parent pointing to the stranded data.","msgtype":"m.text"},"ts":1253921160000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm. Interesting.","msgtype":"m.text"},"ts":1253921161000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"s/its parent/its Microdata parent, as opposed to its DOM parent/","msgtype":"m.text"},"ts":1253921162000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"instead of <div itemscope id=a></div> <span itemfor=a itemprop=name>value</span>","msgtype":"m.text"},"ts":1253921163000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"we would have","msgtype":"m.text"},"ts":1253921164000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"<div itemscope><itemref ref=b/></div> <span id=b itemprop=name>value</span>","msgtype":"m.text"},"ts":1253921165000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"That would allow a single piece of data to be a part of multiple items.  Is that intended?","msgtype":"m.text"},"ts":1253921220000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"it would","msgtype":"m.text"},"ts":1253921221000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And would, in fact, bring back the full power of an DAG.","msgtype":"m.text"},"ts":1253921222000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"i think that would be fine","msgtype":"m.text"},"ts":1253921223000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ROFL she complained about <i> being in the example","msgtype":"m.text"},"ts":1253921280000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"isn't that deprecated!\"","msgtype":"m.text"},"ts":1253921281000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Totally not a typical author.  ^_^","msgtype":"m.text"},"ts":1253921282000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"She sounds like she's pretty up on her standards...","msgtype":"m.text"},"ts":1253921283000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"well except for <i> not being deprecated ever :-P","msgtype":"m.text"},"ts":1253921284000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"If you can make a DAG, isn't the only thing left preventing Microdata from collapsing into RDF just the ability to make blank nodes or whatever?","msgtype":"m.text"},"ts":1253921340000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: you can make blank nodes today","msgtype":"m.text"},"ts":1253921341000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Really?","msgtype":"m.text"},"ts":1253921342000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: just don't include an \"about\" itemprop","msgtype":"m.text"},"ts":1253921343000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: There's also the lack of types","msgtype":"m.text"},"ts":1253921344000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh.","msgtype":"m.text"},"ts":1253921345000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"yeah no per-value data types is another difference","msgtype":"m.text"},"ts":1253921400000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"k.","msgtype":"m.text"},"ts":1253921401000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"I don't think that it's bad to increase the flexibility of what you can construct, as long as that complexity is not necessary for your average usecase.","msgtype":"m.text"},"ts":1253921402000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"annodomini: Yeah, I'm not saying anything against it.  I just think it's funny that this syntax is *just* below being equivalent to RDFa, and yet way easier to understand.","msgtype":"m.text"},"ts":1253921403000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thinks that <itemref> may in fact be easier to understand after all.","msgtype":"m.emote"},"ts":1253921460000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"But maybe much more verbose for expressing certain graphs","msgtype":"m.text"},"ts":1253921461000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`, maybe.  I'd need to see examples.","msgtype":"m.text"},"ts":1253921462000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"A whole new element <itemref> just for linking items to their properties? What about <link href=\"#b\"> instead?","msgtype":"m.text"},"ts":1253921520000,"senderName":"annodomini","senderId":"annodomini@irc"},
{"content":{"body":"Well, there's a certain benefit in maintaining the \"item\" prefix.","msgtype":"m.text"},"ts":1253921521000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hixie: If you're going to make @itemtype to hold the type, then I prefer just plain @item as the scope signal.","msgtype":"m.text"},"ts":1253921640000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: people seem to be confused with the item=\"\" attribute","msgtype":"m.text"},"ts":1253921760000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"How much confusion is from @item itself, and how much from @item also acting as the type specifier?","msgtype":"m.text"},"ts":1253921761000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: and we have one data point (not enough) suggesting itemscope=\"\" is clearer","msgtype":"m.text"},"ts":1253921762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: well they got confused with it in both examples that had an item=\"\"","msgtype":"m.text"},"ts":1253921763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"TabAtkins: so item=\"...id...\" and item=\"...type...\"","msgtype":"m.text"},"ts":1253921820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"both confused them","msgtype":"m.text"},"ts":1253921821000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"has to go look up what item=\"id\" means again.","msgtype":"m.emote"},"ts":1253921822000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"that's variant 002","msgtype":"m.text"},"ts":1253921823000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"equivalent of itemprop=\"about\" in the spec","msgtype":"m.text"},"ts":1253921824000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"equivalent of itemprop=\"itemid\" in proposals 001 and 003","msgtype":"m.text"},"ts":1253921880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(we found \"about\" confused the heck out of people)","msgtype":"m.text"},"ts":1253921881000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(\"itemid\" so far is faring better, though we don't have much data on that)","msgtype":"m.text"},"ts":1253921882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hm, this participant is being confused by having itemprop=\"\" values that are URLs","msgtype":"m.text"},"ts":1253921883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"she thinks they're links to the values, rather than unique property names","msgtype":"m.text"},"ts":1253921940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Yah, I think that's going to be inevitable some of the time.","msgtype":"m.text"},"ts":1253922000000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"Hmm, I can't find itemprop=about in the spec.","msgtype":"m.text"},"ts":1253922120000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"http://www.whatwg.org/specs/web-apps/current-work/#md-about","msgtype":"m.text"},"ts":1253922240000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Gotcha.  That's hidden.","msgtype":"m.text"},"ts":1253922300000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"And yeah, I can see how it would be confusing.","msgtype":"m.text"},"ts":1253922301000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"everyone is making up their own property names","msgtype":"m.text"},"ts":1253922302000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"despite us pointing them to a list of predefined vocabulary terms","msgtype":"m.text"},"ts":1253922360000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i guess that won't be such a problem if they just copy-paste from tutorials","msgtype":"m.text"},"ts":1253922361000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"derives deep joy from crafting a tool that is really easy to use and useful.","msgtype":"m.emote"},"ts":1253923080000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"ooh, interesting. she prefers itemscope=\"\" too.","msgtype":"m.text"},"ts":1253923081000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hmm.","msgtype":"m.text"},"ts":1253923140000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]