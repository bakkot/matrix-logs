[
{"content":{"body":"annevk: https://github.com/whatwg/dom/pull/121#issuecomment-160642738","msgtype":"m.text"},"ts":1448893149000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: 1) thank you 2) I have nitpicks; I would prefer first declaring the variable and then moving the if statement to where you have \"Otherwise\" now; and the variables in the note need to be marked up as such","msgtype":"m.text"},"ts":1448893309000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: also, you need to adjust step 14 to account for this new variable","msgtype":"m.text"},"ts":1448893363000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Oh right forgot that part.","msgtype":"m.text"},"ts":1448893369000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: the reason for the first nit is that it seems cleaner to only use \"let\" once","msgtype":"m.text"},"ts":1448893385000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I had written this amend and checked it out of place when I thought smaug____ was wrong. :(","msgtype":"m.text"},"ts":1448893387000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Ok.","msgtype":"m.text"},"ts":1448893390000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"HTML sometimes uses the if X, let Y, otherwise let Y style and it always seems kinda sketchy to me","msgtype":"m.text"},"ts":1448893413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I prefer two lets because that means no mutation, but I get your point.","msgtype":"m.text"},"ts":1448893421000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Amended.","msgtype":"m.text"},"ts":1448893598000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: thank you, looks good, smaug____?","msgtype":"m.text"},"ts":1448893807000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what should I look at?","msgtype":"m.text"},"ts":1448893939000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"perhaps https://github.com/nox/dom/commit/3daeba1bd04a2c8db09020ffa2a25828fba52416","msgtype":"m.text"},"ts":1448894051000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"is it defined what \"empty list\" means?","msgtype":"m.text"},"ts":1448894076000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"(just don't see from this context)","msgtype":"m.text"},"ts":1448894090000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"smaug____: I suppose:","msgtype":"m.text"},"ts":1448894122000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"<li><p>Let <var>event path</var> be a static ordered list of all <var>target</var>'s <a>ancestors</a> in <a>tree order</a>, if <var>target</var> is <a>participating</a> in a <a>tree</a>, and the empty list otherwise.","msgtype":"m.text"},"ts":1448894129000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"It's already used elsewhere.","msgtype":"m.text"},"ts":1448894136000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"\"let document be the Document most recently associated with that Window object.\"","msgtype":"m.text"},"ts":1448894159000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"k","msgtype":"m.text"},"ts":1448894159000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Ms2ger: ?","msgtype":"m.text"},"ts":1448894241000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"Wondering if that's supposed to be anything more complex than window.document","msgtype":"m.text"},"ts":1448894288000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Defined as \"The document IDL attribute must return the Window object's newest Document object.\", where \"the Window object's newest Document object\" is a link to \"Each Document in a browsing context is associated with a Window object.\"","msgtype":"m.text"},"ts":1448894361000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: Document.write?","msgtype":"m.text"},"ts":1448894375000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Ah misread your wondering. :)","msgtype":"m.text"},"ts":1448894385000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"Thought you were saying it must be the most complex thing ever.","msgtype":"m.text"},"ts":1448894394000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"No, jdm's event handler compilation stuff","msgtype":"m.text"},"ts":1448894395000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"nox: I think removedNodes should be set to null initially","msgtype":"m.text"},"ts":1448894489000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh no","msgtype":"m.text"},"ts":1448894503000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"never mind, I'm being silly","msgtype":"m.text"},"ts":1448894528000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"smaug____: \"empty list\" is about as detailed as we go typically","msgtype":"m.text"},"ts":1448894553000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Mmh, that's not as silly as it seems.","msgtype":"m.text"},"ts":1448894642000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: \"If removedNodes is given, set recordâ€™s removedNodes to removedNodes,\"","msgtype":"m.text"},"ts":1448894660000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: I feel like it shouldn't be set at all, and it's kinda a PITA to define that.","msgtype":"m.text"},"ts":1448894673000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: I think empty list and not present ends up meaning the same thing though","msgtype":"m.text"},"ts":1448894714000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nox: I guess technically the specification says \"empty NodeList\"","msgtype":"m.text"},"ts":1448894777000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm","msgtype":"m.text"},"ts":1448894778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Semantically yes, but it's not the same for the mutation record, AFAICT.","msgtype":"m.text"},"ts":1448894794000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: why not?","msgtype":"m.text"},"ts":1448894855000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: That's not what Firefox does, at the very least.","msgtype":"m.text"},"ts":1448894906000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"annevk: Never mind, it doesn't matter you are right.","msgtype":"m.text"},"ts":1448894941000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: if you could rebase I'll merge this as is, seems good enough","msgtype":"m.text"},"ts":1448895538000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Done.","msgtype":"m.text"},"ts":1448895977000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":" I put up  a web cryptography question on stack exchange http://stackoverflow.com/questions/33971634/how-can-one-distinguish-js-opaque-objects","msgtype":"m.text"},"ts":1448896092000,"senderName":"bblfish_","senderId":"bblfish_@irc"},
{"content":{"body":"annevk: https://github.com/w3c/web-platform-tests/pull/2379 That too? :)","msgtype":"m.text"},"ts":1448896122000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"nox: merged","msgtype":"m.text"},"ts":1448896206000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: Cool.","msgtype":"m.text"},"ts":1448896217000,"senderName":"nox","senderId":"nox@irc"},
{"content":{"body":"(both)","msgtype":"m.text"},"ts":1448896225000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"@annevk did I get the defaults right for RequestInit in  https://github.com/bblfish/scala-js-dom/blob/FetchAPI/src/main/scala/org/scalajs/dom/experimental/Fetch.scala#L69 ?","msgtype":"m.text"},"ts":1448899052000,"senderName":"bblfish_","senderId":"bblfish_@irc"},
{"content":{"body":"I am not sure that is the right way to do things yet ...","msgtype":"m.text"},"ts":1448899087000,"senderName":"bblfish_","senderId":"bblfish_@irc"},
{"content":{"body":"bblfish_: as I told you before, I don't really know scala","msgtype":"m.text"},"ts":1448899103000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: also, some of the defaults depend on the specifics of the constructor algorithm so you can't really declare them upfront","msgtype":"m.text"},"ts":1448899133000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"bblfish: if you could, the IDL dictionary would have included them","msgtype":"m.text"},"ts":1448899143000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if you have time before leaving for PTO, can you comment on this issue? https://code.google.com/p/chromium/issues/detail?id=559447","msgtype":"m.text"},"ts":1448899151000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"ah.","msgtype":"m.text"},"ts":1448899155000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"unless its already been discussed in github issues (I haven't read that mail yet)","msgtype":"m.text"},"ts":1448899169000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"(also, its weird that you don't show up in the members list for the channel)","msgtype":"m.text"},"ts":1448899185000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yes, it's really complicated to work out what the right way to build the constructor is","msgtype":"m.text"},"ts":1448899205000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"bblfish: well, just follow the list of steps","msgtype":"m.text"},"ts":1448899227000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: hmmmmm","msgtype":"m.text"},"ts":1448899235000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they are really long :-/","msgtype":"m.text"},"ts":1448899238000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"wanderview: so, the whole skip service worker flag seems like a distraction","msgtype":"m.text"},"ts":1448899272000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: the way this should work is that \"navigate\" does a fetch without following redirects","msgtype":"m.text"},"ts":1448899293000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yes, I kind of noticed. It depends a lot on what options you select. Perhaps a table of things that don't go together would help","msgtype":"m.text"},"ts":1448899295000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"wanderview: if it gets a redirect it creates a new request from that redirect and does it exactly like the first one, this may go to the same service worker, or not, depending on the URL","msgtype":"m.text"},"ts":1448899330000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I think the html spec navigate spec needs to clarify if it creates a new Request for each redirect follow","msgtype":"m.text"},"ts":1448899342000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: it does?  where does it say that?","msgtype":"m.text"},"ts":1448899351000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"all I could find was the vague \"handle redirects\"","msgtype":"m.text"},"ts":1448899364000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"btw. in that method declaration the thing after the = is the default value.","msgtype":"m.text"},"ts":1448899365000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"wanderview: well, it's not exactly a new request, it uses the response and the original request to create a new request, but that isn't really defined","msgtype":"m.text"},"ts":1448899368000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok... but does the not-really-defined process clear the skip-service-worker flag on the original request?","msgtype":"m.text"},"ts":1448899391000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: I have no idea about the skip-service-worker flag business","msgtype":"m.text"},"ts":1448899413000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: where does that even get set?","msgtype":"m.text"},"ts":1448899444000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: HTTP Fetch step 4","msgtype":"m.text"},"ts":1448899452000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: step 4.2","msgtype":"m.text"},"ts":1448899468000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I could create a number of constructors, one where one of the options is hardwired, and the other options are left open to help the user work out what he can chooose.... But would probably require a very very very careful study of that spec.","msgtype":"m.text"},"ts":1448899484000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"wanderview: so that only gets set if the service worker didn't give a reply","msgtype":"m.text"},"ts":1448899562000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: if the service worker returns a redirect, response cannot be null, can it?","msgtype":"m.text"},"ts":1448899581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: exactly... didn't give a reply is the case we care about","msgtype":"m.text"},"ts":1448899594000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: okay, catching up here :-)","msgtype":"m.text"},"ts":1448899610000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: if the SW doesn't give a reply... should the navigate still check further service workers for interception?","msgtype":"m.text"},"ts":1448899621000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"on redirect","msgtype":"m.text"},"ts":1448899624000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"np... its confusing","msgtype":"m.text"},"ts":1448899632000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"so yeah, I guess we should only set it when redirect mode is \"follow\"","msgtype":"m.text"},"ts":1448899665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and of course, we should define the (request, redirectResponse) -> request thingie at some point...","msgtype":"m.text"},"ts":1448899691000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so navigation can use that","msgtype":"m.text"},"ts":1448899701000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: does that make sense? I have to go now, but I'll check back in a couple of hours","msgtype":"m.text"},"ts":1448899738000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk, r? https://github.com/whatwg/html/pull/365","msgtype":"m.text"},"ts":1448899757000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"annevk: it does, but I guess I'm curious if it applies only to navigates... I'll write a spec issue","msgtype":"m.text"},"ts":1448899770000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Ms2ger: better ask someone else","msgtype":"m.text"},"ts":1448899776000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: well, navigate is the only place that doesn't follow redirects automatically","msgtype":"m.text"},"ts":1448899800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: anyway, my suggestion is to special case \"redirect mode\" rather than \"navigate\", as we did elsewhere","msgtype":"m.text"},"ts":1448899829000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"someone else: r? https://github.com/whatwg/html/pull/365","msgtype":"m.text"},"ts":1448899841000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"wanderview: (step 3.3 of the same algorithm)","msgtype":"m.text"},"ts":1448899848000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: ok, thanks","msgtype":"m.text"},"ts":1448899879000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: how are you not the perfect person to review that?","msgtype":"m.text"},"ts":1448899909000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I even dropped the period","msgtype":"m.text"},"ts":1448899992000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"time","msgtype":"m.text"},"ts":1448899995000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"can't tab-complete Domenic's name either...","msgtype":"m.emote"},"ts":1448900001000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"grumble grumble now I have to go re-learn the difference between listener and callback and other fun things...","msgtype":"m.text"},"ts":1448900031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, afaict, listener was renamed to callback in DOM","msgtype":"m.text"},"ts":1448900045000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Domenic, if that's wrong, I'll revert that bit","msgtype":"m.text"},"ts":1448900056000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: \"An event listener consists of a type, callback, and capture.\" (And in a second sentence following it, a removed flag.)","msgtype":"m.text"},"ts":1448900085000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Ms2ger: so I think your change is correct...","msgtype":"m.text"},"ts":1448900177000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"reviewing","msgtype":"m.text"},"ts":1448900178000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, looks like I was right on renaming, and HTML was way behind the times: https://github.com/whatwg/dom/commit/e89fef9c0d80688736bbea2527047862eba238f6","msgtype":"m.text"},"ts":1448900458000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Having \"event listener\" and \"event handler\" and the callback function itself be different objects is ... special? Putting on my author hat the only reaction I can imagine is a massive WAT.","msgtype":"m.text"},"ts":1448900609000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic, re-review? :)","msgtype":"m.text"},"ts":1448901178000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: all done! \\o/","msgtype":"m.text"},"ts":1448901312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"that wasn't as bad as I feared","msgtype":"m.text"},"ts":1448901321000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: I can do it next week most likely, oh, you did it, good","msgtype":"m.text"},"ts":1448902824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: why does https://github.com/heycam/webidl/pull/13 not handle {1:2,3:4} as input?","msgtype":"m.text"},"ts":1448904109000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: why would it? objects are not iterable","msgtype":"m.text"},"ts":1448905650000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"annevk: new Map({ 1: 2, 3: 4}) does not work.","msgtype":"m.text"},"ts":1448905659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it seems kind of annoying to not have that work though","msgtype":"m.text"},"ts":1448906588000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Domenic: for headers especially","msgtype":"m.text"},"ts":1448906601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it makes sense for Map where keys are arbitrary objects. For headers, sure, you would want to dispatch on whether @@iterator is present","msgtype":"m.text"},"ts":1448906620000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"okay, coupled with not doing subclassing perhaps we can go IDL all the way then for now...","msgtype":"m.text"},"ts":1448906674000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"\"Let iterator be Get(argument, @@iterator). If iterator is undefined, run algorithm for extracting from an object. Otherwise, run initializing objects from iterables\"","msgtype":"m.text"},"ts":1448906706000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i have contacted dreamhost regarding the downtime","msgtype":"m.text"},"ts":1448908871000,"senderName":"Hixie_","senderId":"Hixie_@irc"},
{"content":{"body":"Ok I think I found a good way to do the defaults: I leave it up to the browser :-)","msgtype":"m.text"},"ts":1448909538000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Mh I wonder if the client can capture more details when there is an exception due to a broken server certificate.","msgtype":"m.text"},"ts":1448909604000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"That would be very useful to report this to the user.","msgtype":"m.text"},"ts":1448909612000,"senderName":"bblfish","senderId":"bblfish@irc"},
{"content":{"body":"Can anyone help me write some basic cross-origin web platform tests? jgraham?","msgtype":"m.text"},"ts":1448920558000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I am guessing based on https://github.com/w3c/web-platform-tests/blob/master/cors/origin.htm there is a global CROSSDOMAIN variable that just points to the same files?","msgtype":"m.text"},"ts":1448920593000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"oh nope that's in https://github.com/w3c/web-platform-tests/blob/master/cors/support.js","msgtype":"m.text"},"ts":1448920624000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Hmm support.js gives a syntax error for those {{ports[http][0]}} lines","msgtype":"m.text"},"ts":1448921144000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(I am use ./serve)","msgtype":"m.text"},"ts":1448921150000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: So the trick is that there's two ways to enable template substitutions","msgtype":"m.text"},"ts":1448922851000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"You can either name the file foo.sub.ext or include it with ?pipe=sub","msgtype":"m.text"},"ts":1448922876000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"s/include/access/","msgtype":"m.text"},"ts":1448922895000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Ahh","msgtype":"m.text"},"ts":1448922903000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"So generally the foo.sub.ext is more obvious to others","msgtype":"m.text"},"ts":1448922942000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Hmm not working. support.sub.js?","msgtype":"m.text"},"ts":1448923017000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"?pipe=sub works though","msgtype":"m.text"},"ts":1448923031000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"I mean that actually has to be the filename on disk","msgtype":"m.text"},"ts":1448923176000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Oh I see","msgtype":"m.text"},"ts":1448923192000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"The query string works if it isn't the filename","msgtype":"m.text"},"ts":1448923193000,"senderName":"jgraham_","senderId":"jgraham_@irc"},
{"content":{"body":"Well I'm reusing /cors/support.js so I will just keep using ?pipe=sub","msgtype":"m.text"},"ts":1448923210000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"OK","msgtype":"m.text"},"ts":1448924131000,"senderName":"jgraham","senderId":"jgraham@irc"}
]