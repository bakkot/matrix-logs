[
{"content":{"body":"Yikes, the URL spec blew up today, didn't it :(","msgtype":"m.text"},"ts":1463020404000,"senderName":"Jasper","senderId":"Jasper@irc"},
{"content":{"body":"annevk: around?","msgtype":"m.text"},"ts":1463057145000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"In the HTML spec - User Interaction - Drag'n'drop, the DataTransfer stuff doesn't say anything about security risks associated with the *data* or the *type string* - not that I can see anyway","msgtype":"m.text"},"ts":1463057659000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"e.g. the risk that a rogue page can launch an exploit at a native application by making the user drop a data payload that will trigger a security problem on that app","msgtype":"m.text"},"ts":1463057702000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"or place something on the clipboard that, when pasted, will trigger some security issue in the target","msgtype":"m.text"},"ts":1463057732000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"In the context of clipboard API work, I was told in no uncertain terms that allowing a random script to place for example JPG binary data on the clipboard is a no-go since it might target exploitable bugs in some local application's JPG support with a malicious payload","msgtype":"m.text"},"ts":1463057815000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"shouldn't the DataTransfer API handle such stuff? For example whitelist safe types? Transcode image files for safety?","msgtype":"m.text"},"ts":1463057948000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"should perhaps mail the whatwg-list","msgtype":"m.emote"},"ts":1463057965000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: filing an issue on GitHub might be better, but yeah, it seems like it should","msgtype":"m.text"},"ts":1463058402000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: fancy improving that?","msgtype":"m.text"},"ts":1463058409000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: well, some of those limitations are already implemented .. so it should be possible to figure out what it needs to say :-o","msgtype":"m.text"},"ts":1463058683000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"If it's not done in DataTransfer I'll need to add something to Clipboard API - but then DnD would still be vulnerable so that seems silly","msgtype":"m.text"},"ts":1463058724000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: even better","msgtype":"m.text"},"ts":1463058726000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hallvors: another thing we should improve is make it an object that both drag & drop and copy & paste can use, right? Or does copy & paste use a different object these days? Haven't really followed that much","msgtype":"m.text"},"ts":1463058767000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is used in both DnD and Clipb apis","msgtype":"m.text"},"ts":1463058802000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Hixie wanted them to share the model entirely so there'd be no distinction and users that can't drag wouldn't be disadvantaged, but it seems like that is hard to do at this point","msgtype":"m.text"},"ts":1463058817000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll need some handhelding by developers though, if I'm going to write some security thingies ;)","msgtype":"m.text"},"ts":1463059393000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: regarding the DnD and Clipboard convergence Hixie wanted, I think it's a good goal, and I think if pages make sure they listen to both drop and paste events it should most just work as he intended","msgtype":"m.text"},"ts":1463059756000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"hallvors: yeah, I guess he was hoping to avoid that pages had to do both","msgtype":"m.text"},"ts":1463059793000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"We could do that if we spec'ed that pasting should fire drop events.. but it would be sort of odd","msgtype":"m.text"},"ts":1463059985000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"and go against the legacy paste events","msgtype":"m.text"},"ts":1463060015000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"Yeah, probably not possible","msgtype":"m.text"},"ts":1463060104000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but it's easy to listen to both and use basically the same code for processing both pastes and drops","msgtype":"m.text"},"ts":1463060107000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"that seems reasonable to me..","msgtype":"m.text"},"ts":1463060128000,"senderName":"hallvors","senderId":"hallvors@irc"},
{"content":{"body":"annevk: should same-origin-data-url flag be set for either <script> or <link rel=stylesheet>?","msgtype":"m.text"},"ts":1463067415000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I have to run, but will check back later...","msgtype":"m.text"},"ts":1463067429000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"I can't tell if these are intentionally not there if those specs have not been updated to use fetch","msgtype":"m.text"},"ts":1463067444000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"bemuses himself quasi-trolling the latest WHATWG blog post","msgtype":"m.emote"},"ts":1463070389000,"senderName":"jwalden","senderId":"jwalden@irc"},
{"content":{"body":"wanderview: I'm not sure","msgtype":"m.text"},"ts":1463072371000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: maybe for the latter, depends on whether user agents require the MIME type to be correct I suppose","msgtype":"m.text"},"ts":1463072395000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"jwalden: heh","msgtype":"m.text"},"ts":1463072454000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hi, is a plain text version of dom idl available somewhere?","msgtype":"m.text"},"ts":1463074085000,"senderName":"zokier`","senderId":"zokier`@irc"},
{"content":{"body":"zokier`: don't think so. there's https://dom.spec.whatwg.org/#idl-index or you can maybe scrape it from the source https://github.com/whatwg/dom/blob/master/dom.bs","msgtype":"m.text"},"ts":1463074329000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"Copying the index seems most straightforward","msgtype":"m.text"},"ts":1463074457000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"sure, thanks. kinda odd imho though","msgtype":"m.text"},"ts":1463074598000,"senderName":"zokier`","senderId":"zokier`@irc"},
{"content":{"body":"zokier`: Odd how?","msgtype":"m.text"},"ts":1463074696000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"TabAtkins: do you know if the spec says anywhere if <link rel=\"stylesheet'> data URLs should be treated same-origin or cross-origin?","msgtype":"m.text"},"ts":1463074743000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"P sure it does *not* say anywhere.","msgtype":"m.text"},"ts":1463074762000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1463074822000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"TabAtkins, its just something i would have expected to be easily downloadable","msgtype":"m.text"},"ts":1463074858000,"senderName":"zokier`","senderId":"zokier`@irc"},
{"content":{"body":"what is same-origin/cross-origin used for in link rel=\"stylesheet\"?","msgtype":"m.text"},"ts":1463074933000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: SRI in my particular case... we don't support SRI on no-cors cross-origin... we have a test case that uses SRI for a data URL","msgtype":"m.text"},"ts":1463075109000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"Mek: CSSOM access, and whether you can omit the MIME type","msgtype":"m.text"},"ts":1463075262000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"wanderview: doesn't the SRI spec explicitly say \"Since the response type for data URLs will always be “opaque” for script and link elements, such URLs are never eligible for integrity checks.\"","msgtype":"m.text"},"ts":1463075317000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"(okay, as non-normative text. But that's also how I would interpret the way css/html/fetch specify fetching stylesheets...)","msgtype":"m.text"},"ts":1463075348000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: yes, and I think thats bogus :-) https://github.com/w3c/webappsec-subresource-integrity/issues/35","msgtype":"m.text"},"ts":1463075410000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"well, the way I read the css and fetch specs, it leaves the request which its default mode=no-cors and with the same-origin data-URL flag unset, which would indeed result in an opaque response","msgtype":"m.text"},"ts":1463075455000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"Mek: css spec uses fetch spec?  can you send me the link to that?","msgtype":"m.text"},"ts":1463075495000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"wanderview: https://drafts.csswg.org/cssom/#fetch-a-css-style-sheet","msgtype":"m.text"},"ts":1463075505000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"sorry, I have to go to a meeting now","msgtype":"m.text"},"ts":1463075506000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"thanks","msgtype":"m.text"},"ts":1463075507000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"annevk: I don't understand the blob part of https://url.spec.whatwg.org/#origin","msgtype":"m.text"},"ts":1463076246000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"what does \"Let url be the result of parsing the first string in URL’s path. \" mean?","msgtype":"m.text"},"ts":1463076260000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"the url spec defines a path as a list of zero or more ascii strings, and that then parses the first string in that list as if it was a url?","msgtype":"m.text"},"ts":1463076464000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"I see","msgtype":"m.text"},"ts":1463076642000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"and (new URL(\"blob:blob:http://foo.com/bar\")).origin should be \"http://foo.com\", not blob:// what blink gives","msgtype":"m.text"},"ts":1463076672000,"senderName":"smaug____","senderId":"smaug____@irc"},
{"content":{"body":"seems like that to me, yes...","msgtype":"m.text"},"ts":1463076704000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"i'm behind with github notifications. if there's something i should look at, let me know here pls :-)","msgtype":"m.text"},"ts":1463078547000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: https://github.com/whatwg/html/pull/1236 is the other PR assigned to you. Seems reasonably small.","msgtype":"m.text"},"ts":1463079312000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Mek: bz wrote an issue for the data URL thing as well: https://github.com/whatwg/html/issues/1243","msgtype":"m.text"},"ts":1463079983000,"senderName":"wanderview","senderId":"wanderview@irc"},
{"content":{"body":"yeah, I (uninformed) agree that it seems like this might just be an accidental result of how the specs ended up rather than intentional...","msgtype":"m.text"},"ts":1463080069000,"senderName":"Mek","senderId":"Mek@irc"},
{"content":{"body":"annevk: do you want to review https://github.com/w3c/web-platform-tests/pull/2926 ? since you LGTMed the spec change 🙂","msgtype":"m.text"},"ts":1463081148000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"zcorpan: tomorrow I suppose","msgtype":"m.text"},"ts":1463081223000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ok thanks","msgtype":"m.text"},"ts":1463081248000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"jsbell: ping","msgtype":"m.text"},"ts":1463094972000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: what's up?","msgtype":"m.text"},"ts":1463094985000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: does Chrome support getting a DirectoryEntry from <input type=file>/<input type=directory> or some such?","msgtype":"m.text"},"ts":1463095026000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: yes. Edge is not planning to implement that though.","msgtype":"m.text"},"ts":1463095055000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: What's the syntax?","msgtype":"m.text"},"ts":1463095073000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: https://docs.google.com/document/d/14fCaoRf5GtdhMwJOVjcQSMDm_varTluyMq8RYyHR8vw/edit","msgtype":"m.text"},"ts":1463095090000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"HTMLInputElement has webkitEntries","msgtype":"m.text"},"ts":1463095117000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"But only populated by D&D onto an input, not via clicking","msgtype":"m.text"},"ts":1463095133000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: oh, \"but only populated via drag&drop\"??","msgtype":"m.text"},"ts":1463095142000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"Yeah, we're awesome apparently.","msgtype":"m.text"},"ts":1463095157000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"why does that restriction exist?","msgtype":"m.text"},"ts":1463095157000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: that sounds like just a bug? Or is it intentional?","msgtype":"m.text"},"ts":1463095232000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: predates me, so I don't know for certain. probably just never implemented, since D&D is a very different code path than selection via dialog","msgtype":"m.text"},"ts":1463095270000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"i suspect that if we go down the DirectoryEntry route, that we'll go all the way and implement it on <input type=file> as well. But fully through click as well","msgtype":"m.text"},"ts":1463095271000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: i see","msgtype":"m.text"},"ts":1463095286000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: I added use counters to try and see if it's used","msgtype":"m.text"},"ts":1463095301000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"But data isn't in yet","msgtype":"m.text"},"ts":1463095308000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1463095311000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"sicking: if Edge doesn't implement and it isn't used maybe we can remove. Don't know yet","msgtype":"m.text"},"ts":1463095333000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: remove what part? input.webkitEntries?","msgtype":"m.text"},"ts":1463095353000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1463095356000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"why remove that? If we're going down the DirectoryEntry path, shouldn't we make it work well?","msgtype":"m.text"},"ts":1463095373000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"just reducing surface area overall; restrict the Entry stuff to D&D, keep input restricted to Files w/ webkitRelativePath and implied structure","msgtype":"m.text"},"ts":1463095457000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"But I'm not firmly against, just trying to figure out what is *necessary*","msgtype":"m.text"},"ts":1463095483000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"I'm also just starting on a spec (like, created index.bs yesterday) for the Entry stuff, i.e. a subset of [[file-system-api]]","msgtype":"m.text"},"ts":1463095536000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"sicking: not pushed anywhere yet, I'll ping when it's more than a skeleton.","msgtype":"m.text"},"ts":1463095625000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"jsbell: i think both microsoft and mozilla want to have an API that doesn't require sync IO and which enables directory picking","msgtype":"m.text"},"ts":1463095684000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: i feel like if we go with DirectoryEntry for d'n'd, we should do the same for directory picking as well","msgtype":"m.text"},"ts":1463095708000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"that's entirely reasonable, and no objection from me","msgtype":"m.text"},"ts":1463095743000,"senderName":"jsbell","senderId":"jsbell@irc"},
{"content":{"body":"cool","msgtype":"m.text"},"ts":1463095751000,"senderName":"sicking","senderId":"sicking@irc"},
{"content":{"body":"jsbell: does that mean we can assign https://github.com/whatwg/html/issues/217 to you? :)","msgtype":"m.text"},"ts":1463095834000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Wheee. :)","msgtype":"m.text"},"ts":1463096005000,"senderName":"jsbell","senderId":"jsbell@irc"}
]