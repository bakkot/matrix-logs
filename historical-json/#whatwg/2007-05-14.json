[
{"content":{"body":"wonders if there could be getImageData(sx, sy, sw, sh, hires) where hires=true makes it return the full-resolution backing bitmap with width!=sw, otherwise it scales the bitmap down and returns with width==sw","msgtype":"m.emote"},"ts":1179109260000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so people who don't know or don't care can just do getImageData(sx, sy, sw, sh) and get what looks like sensible pixels, whereas people who really want to do high-quality filters can set hires and take more care","msgtype":"m.text"},"ts":1179109261000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(It's compatible with existing browsers and content, too...)","msgtype":"m.text"},"ts":1179109320000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: putImageData would have to have the same flag","msgtype":"m.text"},"ts":1179109380000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Philip`: then the get/put invariant would hold only in hires mode","msgtype":"m.text"},"ts":1179109381000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"Yep","msgtype":"m.text"},"ts":1179109440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"so people who just want to assume canvas pixels are really pixels can do so, and they'll get some visual degradation if they start doing get/putImageData, but it'll do what they expect","msgtype":"m.text"},"ts":1179109441000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Most people aren't going to do anything with ImageData, so normal canvas code will look high-res and fine)","msgtype":"m.text"},"ts":1179109560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179110880000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"A hires flag could work. Or maybe we should keep that as an option for future extensions...","msgtype":"m.text"},"ts":1179130440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Roger Johansson's way of saying that I win makes me think that he thinks I said something so crazy that it isn't worth talking about.","msgtype":"m.text"},"ts":1179130560000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"http://www.456bereastreet.com/archive/200705/is_html_5_a_slippery_slope/#comment26","msgtype":"m.text"},"ts":1179130620000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Hah, only entity declarations... Guess he didn't read the specification very carefully then","msgtype":"m.text"},"ts":1179130800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"XML parsing can be very simple. You simply have to ignore the hard parts.","msgtype":"m.text"},"ts":1179130801000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(At that point error handling comes almost for free.)","msgtype":"m.text"},"ts":1179130802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1179131640000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"html parsing is also easy if you ignore the hard parts","msgtype":"m.text"},"ts":1179131760000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179131820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML is easy to understand if you don't go down the rabbit hole","msgtype":"m.text"},"ts":1179131821000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"For any X, X is easy if you ignore the hard parts of X.","msgtype":"m.text"},"ts":1179132420000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for some X, it's all hard parts","msgtype":"m.text"},"ts":1179132540000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"right, but ignoring them reduces it to the empty set, which sounds pretty easy :)","msgtype":"m.text"},"ts":1179132720000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Here is a question: in the US-ASCII encoding, is 0x7F a legal octet?","msgtype":"m.text"},"ts":1179133140000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ASCII 0x7F is the control character DEL","msgtype":"m.text"},"ts":1179133200000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"so basically any 7-bit code is fine, only high bit set is garbage","msgtype":"m.text"},"ts":1179133260000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"also known as ^?","msgtype":"m.text"},"ts":1179133261000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"0x00 - 0x1F and 0x7F are not printable but they are defined","msgtype":"m.text"},"ts":1179133320000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"that's fine then","msgtype":"m.text"},"ts":1179133380000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"presumably in Latin1, 0x80 to 0x9F are garbage and need to be turned to U+FFFD?","msgtype":"m.text"},"ts":1179133440000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or passed through as is for compatibility with Windows-1252? :/","msgtype":"m.text"},"ts":1179133441000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"web pages that claim to be latin-1 have to be processed as windows-1252","msgtype":"m.text"},"ts":1179133680000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in fact, you even have to treat pages that claim to be unicode w/ range 0x80-0x9f treated as the win-latin1 characters","msgtype":"m.text"},"ts":1179133740000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179133741000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and all character references in that range too","msgtype":"m.text"},"ts":1179133742000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"HTML5 hasn't defined that yet","msgtype":"m.text"},"ts":1179133800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"so yes, the unicode spec is universally violated on the web","msgtype":"m.text"},"ts":1179133801000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it should just be redefined...","msgtype":"m.text"},"ts":1179133802000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that would be nice, actually","msgtype":"m.text"},"ts":1179133803000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Unicode5!","msgtype":"m.text"},"ts":1179133804000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"unfortunately, I think that would probably break non-web uses of unicode","msgtype":"m.text"},"ts":1179133860000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"this would also only apply to text/html I suppose?","msgtype":"m.text"},"ts":1179133861000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"(though maybe not, depending on how other Microsoft apps handle it)","msgtype":"m.text"},"ts":1179133862000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"in Safari I think we apply it to XML, but perhaps there is no need to","msgtype":"m.text"},"ts":1179133863000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"well, I guess actually someone should test it in XHR in IE","msgtype":"m.text"},"ts":1179133920000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"at least you can make a web browser without violating the TCP or IP standards","msgtype":"m.text"},"ts":1179133921000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"but I think you have to violate just about everything else in the protocol / format stack","msgtype":"m.text"},"ts":1179133922000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"actually, I don't know if the control characters are used for anything so it might not be incompatible in practice","msgtype":"m.text"},"ts":1179134100000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1179134101000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, so even 0x80-0x9f encoded in UTF-8 need to be passed through, that's cute","msgtype":"m.text"},"ts":1179134102000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: yes, or UTF-16, or UTF-32 -- it is deeply lame","msgtype":"m.text"},"ts":1179134160000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"we should just update several encoding / decoding standards :)","msgtype":"m.text"},"ts":1179134161000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"in Prince we have a hack to handle mislabelled pages that claim to be Latin1 but are actually Windows-1252","msgtype":"m.text"},"ts":1179134162000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"because fonts won't have glyphs for control codes, so we fallback to the Windows-1252 character instead","msgtype":"m.text"},"ts":1179134220000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"eg. we can't find a glyph for 0x85, so we fallback to U+2026","msgtype":"m.text"},"ts":1179134221000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"which is what 0x85 maps to in Windows-1252","msgtype":"m.text"},"ts":1179134222000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that way the hack fits in at the font / glyph layer rather than the UNICODE layer; dunno if that's any better though.","msgtype":"m.text"},"ts":1179134223000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it would fail people doing scripting etc.","msgtype":"m.text"},"ts":1179134280000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"that depends - if you have JavaScript support, it won't be sufficient","msgtype":"m.text"},"ts":1179134281000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"or support for :contains()","msgtype":"m.text"},"ts":1179134282000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would also fail attribute selectors etc.","msgtype":"m.text"},"ts":1179134283000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"we do our hack at the character set decoding layer","msgtype":"m.text"},"ts":1179134284000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"(and in the tokenizer when decoding entities)","msgtype":"m.text"},"ts":1179134340000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"html5lib only has the tokenizer bit atm","msgtype":"m.text"},"ts":1179134341000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I think the entity bit is done only by our html parser","msgtype":"m.text"},"ts":1179134460000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"good points, especially :contains(), which we support","msgtype":"m.text"},"ts":1179134520000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"none of the sites that screw up the encoding use :contains(), thankfully :)","msgtype":"m.text"},"ts":1179134521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"points out that :contains() has been dropped","msgtype":"m.emote"},"ts":1179134522000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I believe the latest proposal is foo[#text^=\"X\"]","msgtype":"m.text"},"ts":1179134523000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and td[#column=2]","msgtype":"m.text"},"ts":1179134580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it might be that I'm mistaken though","msgtype":"m.text"},"ts":1179134581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"nice to drop it after we've had it implemented for years","msgtype":"m.text"},"ts":1179134582000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"td[#column=2] { display: none } ","msgtype":"m.text"},"ts":1179134583000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"the problem is that nobody else did","msgtype":"m.text"},"ts":1179134584000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"grins","msgtype":"m.emote"},"ts":1179134640000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and I suppose it's significantly easier to support in a UA that doesn't do scripting","msgtype":"m.text"},"ts":1179134641000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1179134642000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(#column would be on the semantic level btw, not based on display:table-* crap)","msgtype":"m.text"},"ts":1179134643000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1179134700000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"td { display: table-cell } is how we determine what a table cell *is*","msgtype":"m.text"},"ts":1179134701000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"in this case you would need to have some knowledge about the HTML namespace aiui","msgtype":"m.text"},"ts":1179134760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"is #column meant to be the more CSS-ish way to do <col> styling?","msgtype":"m.text"},"ts":1179134761000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"oh, great.","msgtype":"m.text"},"ts":1179134762000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"othermaciej, yeah, think so","msgtype":"m.text"},"ts":1179134763000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but so far I haven't seen much more than just that","msgtype":"m.text"},"ts":1179134820000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but column position is determined by HTML markup only?","msgtype":"m.text"},"ts":1179134821000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"it was planned for Selectors 2 or something","msgtype":"m.text"},"ts":1179134822000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess that makes sense, to make it work with CSS tables, you would need computed style to determine matching","msgtype":"m.text"},"ts":1179134823000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":"othermaciej, iirc, yes","msgtype":"m.text"},"ts":1179134824000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or any other table markup language you support for that matter","msgtype":"m.text"},"ts":1179134825000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it is funny how often the issue that selectors can't depend on computed style comes up","msgtype":"m.text"},"ts":1179134826000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":":hover","msgtype":"m.text"},"ts":1179134880000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"and :bound-element come to mind","msgtype":"m.text"},"ts":1179134881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"how does it relate to :hover?","msgtype":"m.text"},"ts":1179135060000,"senderName":"othermaciej","senderId":"othermaciej@irc"},
{"content":{"body":":hover { display: none } is rather confusing","msgtype":"m.text"},"ts":1179135240000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for instance","msgtype":"m.text"},"ts":1179135300000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"hmm, seems like the most annoying thing about parsing is buffer management","msgtype":"m.text"},"ts":1179135420000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ah, that sounds like something we didn't have to worry about :)","msgtype":"m.text"},"ts":1179135480000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will your parser have an open source license btw?","msgtype":"m.text"},"ts":1179135481000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"waves to mikeday ","msgtype":"m.emote"},"ts":1179135482000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"hi MikeSmith ","msgtype":"m.text"},"ts":1179135483000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hei","msgtype":"m.text"},"ts":1179135484000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"annevk, yes, that way I can steal code from you guys, and the rest of the world :)","msgtype":"m.text"},"ts":1179135540000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"examines inputstream.py","msgtype":"m.emote"},"ts":1179135541000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"well, in theory you can rip html5lib apart and exploit it in some given that the license is MIT","msgtype":"m.text"},"ts":1179135600000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"but, cool!","msgtype":"m.text"},"ts":1179135601000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/given/way, given/","msgtype":"m.text"},"ts":1179135602000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"it would be nice if there were common open source libraries for HTML parsing, though","msgtype":"m.text"},"ts":1179135603000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it's something that many applications could benefit from","msgtype":"m.text"},"ts":1179135660000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yes, so go for it! :)","msgtype":"m.text"},"ts":1179135661000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"screen scrapers, search engines, unconventional browsers","msgtype":"m.text"},"ts":1179135662000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"AI projects","msgtype":"m.text"},"ts":1179135663000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"PDF formatters *cough*","msgtype":"m.text"},"ts":1179135664000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"having an open source HTML parser is vital for the web","msgtype":"m.text"},"ts":1179135665000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"pity no one thought of that back in 1996 hey :)","msgtype":"m.text"},"ts":1179135720000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"having one separate from browsers is very nice","msgtype":"m.text"},"ts":1179135721000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mikeday: Netscape did in '98 :P","msgtype":"m.text"},"ts":1179135960000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"?","msgtype":"m.text"},"ts":1179136020000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"you mean Mozilla? :)","msgtype":"m.text"},"ts":1179136021000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: Netscape Communicator.","msgtype":"m.text"},"ts":1179136022000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"did the HTML parser make it through the big rewrite?","msgtype":"m.text"},"ts":1179136023000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: I don't think so","msgtype":"m.text"},"ts":1179136080000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mikeday: the reason for the rewrite was the lack of quality of the source base, in part","msgtype":"m.text"},"ts":1179136081000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"heh, gotta love that","msgtype":"m.text"},"ts":1179136082000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"release something open source, to prompt people to develop a new thing from scratch","msgtype":"m.text"},"ts":1179136083000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: arguably it was Moz though, as Mozilla was the codename for Netscape Navigator all the time :P","msgtype":"m.text"},"ts":1179136084000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mikeday: the decision to rewrite was made after the open sourcing it. the plan when it was open soruced was to release a Netscape 5 based on that codebase","msgtype":"m.text"},"ts":1179136140000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179136141000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"fair bit of work went into it before the decision to rewrite it, right?","msgtype":"m.text"},"ts":1179136142000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: http://wp.netscape.com/newsref/pr/newsrelease558.html","msgtype":"m.text"},"ts":1179136200000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gawd, that's sad reading today","msgtype":"m.text"},"ts":1179136260000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"\"seed the market for Netcenter\" indeed","msgtype":"m.text"},"ts":1179136261000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"\"unprecedented levels of innovation in the browser market\"","msgtype":"m.text"},"ts":1179136262000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yep, the innovation was pretty unprecedented after 1998","msgtype":"m.text"},"ts":1179136263000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: looking it up, it seems as if they spent a year just getting out all the parts that they didn't have IP of","msgtype":"m.text"},"ts":1179136320000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"mikeday: shortly after they did that, it was scrapped","msgtype":"m.text"},"ts":1179136380000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"whole thing reeks of desperation, but I guess it all worked out alright in the end","msgtype":"m.text"},"ts":1179136381000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and by 2008, the web will be slightly improved over the web of 1998 :)","msgtype":"m.text"},"ts":1179136382000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"more Flash and less Java, anyway :)","msgtype":"m.text"},"ts":1179136383000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it's questionable if Gecko isn't overly bloated like Netscape before it","msgtype":"m.text"},"ts":1179136384000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"as far as OSS goes, WebKit and KHTML have _far_ smaller codebases, yet their standards compliance isn't lacking","msgtype":"m.text"},"ts":1179136440000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1179136500000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but Mozilla 2 is meant to work on cutting that down","msgtype":"m.text"},"ts":1179136501000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and the cycle continues","msgtype":"m.text"},"ts":1179136502000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"once there starts to be browsers based off WebKit for other OSes, Gecko may start simply being forced to being smaller and quicker to keep marketshare","msgtype":"m.text"},"ts":1179136560000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"anyone in the mood for a \"why are people still developing applications in C++\" rant? :)","msgtype":"m.text"},"ts":1179136561000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ergh. no.","msgtype":"m.text"},"ts":1179136562000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":":P","msgtype":"m.text"},"ts":1179136563000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"good :)","msgtype":"m.text"},"ts":1179136564000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"what is the relationship between Mozilla 2 and Firefox, exactly?","msgtype":"m.text"},"ts":1179136680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday: \"Mozilla\" nowadays is mostly all the frameworks","msgtype":"m.text"},"ts":1179136740000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"so Firefox 2 is using Mozilla 1.x?","msgtype":"m.text"},"ts":1179136741000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1179136800000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Firefox < 4 is using Mozilla 1.x","msgtype":"m.text"},"ts":1179136801000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"but Fx4 isn't expected till '09","msgtype":"m.text"},"ts":1179136860000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"groovy","msgtype":"m.text"},"ts":1179136861000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and the question is whether they can keep up while needing to change so much","msgtype":"m.text"},"ts":1179136920000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"is Firefox migrating to be a JavaScript/XUL based application?","msgtype":"m.text"},"ts":1179136921000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"huh? surely it already is?","msgtype":"m.text"},"ts":1179136980000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I thought it still had some C++ components?","msgtype":"m.text"},"ts":1179136981000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"well, sure, but the UI is all XUL","msgtype":"m.text"},"ts":1179136982000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1179137040000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but that's what an XML User Interface Language should be used for :P","msgtype":"m.text"},"ts":1179137041000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"I just thought the idea was to have more JavaScript, less C++","msgtype":"m.text"},"ts":1179137042000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm not sure how much there is for Fx4 yet","msgtype":"m.text"},"ts":1179137100000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"and less XPCOM","msgtype":"m.text"},"ts":1179137101000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"shrugs","msgtype":"m.emote"},"ts":1179137102000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"my understanding was more standard C++ and less XPCOM","msgtype":"m.text"},"ts":1179137103000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"ah, like exceptions and RTTI?","msgtype":"m.text"},"ts":1179137104000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"no idea","msgtype":"m.text"},"ts":1179137160000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"oh well :)","msgtype":"m.text"},"ts":1179137161000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"has zero knowledge of C++","msgtype":"m.emote"},"ts":1179137162000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"Is it just me, or are they totally crazy for planning to do automated refactoring of C++ with highly experimental tools?","msgtype":"m.text"},"ts":1179137163000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"live fast, die young","msgtype":"m.text"},"ts":1179137164000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"It might work, but I still think it's totally crazy","msgtype":"m.text"},"ts":1179137165000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: probably yes. but I guess that's why they need so many branches in VCS :P","msgtype":"m.text"},"ts":1179137166000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"might as well go all the way and write a C++ -> JavaScript converter","msgtype":"m.text"},"ts":1179137220000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm fairly sure they've been planning that too","msgtype":"m.text"},"ts":1179137221000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"here's JIT compiling for JS2… but I can't remember seeing anything about actually moving to JS","msgtype":"m.text"},"ts":1179137222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"(at least for things that don't need the performance and don't need access to non-JS-interfaced objects)","msgtype":"m.text"},"ts":1179137280000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://wiki.mozilla.org/Mozilla_2 - \"Semi-automated refactoring work: ... identification of C++ ripe for conversion to JS2\" - hmm, maybe not automatically doing the actual conversion","msgtype":"m.text"},"ts":1179137340000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Oh, but: http://wiki.mozilla.org/Static_Analysis - \"Identify C++ to convert to JS2...  ... and translate it automatically.  C++ candidate code uses only scriptable interfaces, strings, primitives.\"","msgtype":"m.text"},"ts":1179137400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm, so it also depends on JavaScript 2, which is relatively new...","msgtype":"m.text"},"ts":1179137460000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"all sounds rather risky :)","msgtype":"m.text"},"ts":1179137461000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"wonders if it's sensible to be worried that JIT compiling won't exactly improve Mozilla's memory usage situation","msgtype":"m.emote"},"ts":1179137462000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"anyone remember that Java version of Netscape?","msgtype":"m.text"},"ts":1179137520000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but the memory usage should go down in other parts by not having so much code, often reimplemented where OS libraries can be used","msgtype":"m.text"},"ts":1179137521000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"http://wiki.mozilla.org/Grendel ?","msgtype":"m.text"},"ts":1179137820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah, that's the one","msgtype":"m.text"},"ts":1179137940000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I guess some things do change","msgtype":"m.text"},"ts":1179138000000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"no one in 1998 would have believed that the browser would be *implemented* in JavaScript","msgtype":"m.text"},"ts":1179138001000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and that Java would be used to implement *server* applications","msgtype":"m.text"},"ts":1179138002000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"we're through the looking glass now :/","msgtype":"m.text"},"ts":1179138003000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Java doesn't seem to have the best track record of making desktop applications that aren't frustratingly slow and ugly","msgtype":"m.text"},"ts":1179138060000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"indeed.","msgtype":"m.text"},"ts":1179138120000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(I think it's a really boring language but it seems to work well enough for other types of application)","msgtype":"m.text"},"ts":1179138180000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"funny how Java is boring now","msgtype":"m.text"},"ts":1179138240000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"when it was introduced it was hot! exciting! applets! coffee!","msgtype":"m.text"},"ts":1179138241000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"first programming language with a major marketing campaign","msgtype":"m.text"},"ts":1179138242000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"'scuse me","msgtype":"m.text"},"ts":1179138300000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"C++ templates are 'interesting' and let you write compile-time Turing machines and parser generators and stuff; Java's generics look similar but merely add type restrictions and add zero extra power to the language, which is boring :-(","msgtype":"m.text"},"ts":1179138420000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I must admit I did make a web page with animated wobbling coloured text in a Java applet about ten years ago and thought it was great, though","msgtype":"m.text"},"ts":1179138480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Anyone remember Corel Office for Java?","msgtype":"m.text"},"ts":1179139080000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"That was awesome","msgtype":"m.text"},"ts":1179139081000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"Launch it, go make lunch, come back, and ooh, the splash screen's up already","msgtype":"m.text"},"ts":1179139082000,"senderName":"mpt","senderId":"mpt@irc"},
{"content":{"body":"I think I managed to avoid ever hearing about it","msgtype":"m.text"},"ts":1179139140000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"which was probably fortunate :-)","msgtype":"m.text"},"ts":1179139141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.somis.dundee.ac.uk/pub/corelindex.htm - I wonder if that version works","msgtype":"m.text"},"ts":1179139380000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(Don't have a Java-enabled browser to test with, though...)","msgtype":"m.text"},"ts":1179139381000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"installs one","msgtype":"m.emote"},"ts":1179139500000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"\"Loading Java Applet Failed\" - aha, that must be the \"Write once, run anywhere\" feature","msgtype":"m.text"},"ts":1179139560000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://www.acm.org/pubs/citations/journals/cacm/1999-42-10/p72-cusumano/ - oh, I didn't know Netscape even made their own Java VM","msgtype":"m.text"},"ts":1179139860000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what does charStack[-1] mean in Python? last item in charStack?","msgtype":"m.text"},"ts":1179141420000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1179141421000,"senderName":"Dashiva","senderId":"Dashiva@irc"},
{"content":{"body":"thanks :)","msgtype":"m.text"},"ts":1179141480000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"unless charStack is a dict, in which case it's the entry with key -1","msgtype":"m.text"},"ts":1179141540000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but a dict called charStack would not seem like a sensible idea","msgtype":"m.text"},"ts":1179141541000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's a good test of a language in a way, how much of it can you understand if you don't know it","msgtype":"m.text"},"ts":1179141600000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"By the way, I'd be quite interested in a fast (e.g. C(++)) version of html5lib since I've been complaining about how it takes ages to parse files in Python :-)","msgtype":"m.text"},"ts":1179141660000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"does \"be quite interested in\" translate to \"willing to help code a\"? :)","msgtype":"m.text"},"ts":1179141720000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just out of interest, how long does it take to parse files with html5lib?","msgtype":"m.text"},"ts":1179141780000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I have approximately no time for the next three weeks, but I should be freer after then, so then I'd probably be willing and able :-)","msgtype":"m.text"},"ts":1179141781000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"sounds good, as the task should take at least 3+n weeks","msgtype":"m.text"},"ts":1179141840000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"once you got something running it would be nice if you could host it online like on code.google.com or something","msgtype":"m.text"},"ts":1179141900000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if I can find some time I'd be interested in learning some C and looking into it :)","msgtype":"m.text"},"ts":1179141901000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"will do","msgtype":"m.text"},"ts":1179141960000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"annevk, you read the whole file into a string, use regexp to do line conversion","msgtype":"m.text"},"ts":1179141961000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"that's just cheating :)","msgtype":"m.text"},"ts":1179141962000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"also, I think I found a typo:  # Normalize new ipythonlines and null characters","msgtype":"m.text"},"ts":1179142020000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"s/new ipythonlines/newlines/ ?","msgtype":"m.text"},"ts":1179142021000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"mikeday, htmlinputstream.py is not my job","msgtype":"m.text"},"ts":1179142022000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"mikeday: For me parsing the HTML5 spec with html5lib, it takes 16 seconds normally, and 11 seconds with Pysco","msgtype":"m.text"},"ts":1179142080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jgraham, care to look at that?","msgtype":"m.text"},"ts":1179142081000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"s/Pysco/Psyco/","msgtype":"m.text"},"ts":1179142082000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think in C it should take less than a second","msgtype":"m.text"},"ts":1179142083000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"libxml2 HTML parser takes 0.3s","msgtype":"m.text"},"ts":1179142140000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Bonus points if it works as a chtml5lib module that you can plug in to Python to replace html5lib with zero effort :-)","msgtype":"m.text"},"ts":1179142141000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"mikeday, there you go :)","msgtype":"m.text"},"ts":1179142200000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the html5lib code is rather elegant","msgtype":"m.text"},"ts":1179142201000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"it would be nice if it could be compiled efficiently rather than hand optimising it","msgtype":"m.text"},"ts":1179142202000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, the inputstream has a queue of characters that have been read and then putback","msgtype":"m.text"},"ts":1179142320000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"however, the queue will never have more than 1 character on it","msgtype":"m.text"},"ts":1179142321000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"sometimes it will","msgtype":"m.text"},"ts":1179142380000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"the way we use it anyway","msgtype":"m.text"},"ts":1179142381000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if charsUntil is called multiple times...","msgtype":"m.text"},"ts":1179142382000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"some code appends to the queue","msgtype":"m.text"},"ts":1179142440000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"if we're talking about the same thing","msgtype":"m.text"},"ts":1179142441000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"oh, outside of inputstream","msgtype":"m.text"},"ts":1179142442000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and here's me thinking it was a private variable :)","msgtype":"m.text"},"ts":1179142443000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"searching for self.stream.queue in tokenizer.py should give you an idea","msgtype":"m.text"},"ts":1179142500000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yeah","msgtype":"m.text"},"ts":1179142501000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I was expecting some kind of putback method","msgtype":"m.text"},"ts":1179142560000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"annevk: i found out that you fail http://simon.html5.org/test/css/magic-body/overflow/004.htm too (updated the table)","msgtype":"m.text"},"ts":1179142561000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"that's a clever test","msgtype":"m.text"},"ts":1179142620000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, parsing is easier when you load the entire document into memory first","msgtype":"m.text"},"ts":1179142860000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but not every application is going to like that.","msgtype":"m.text"},"ts":1179142861000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Are you going to attempt to handle <script> and document.write, so the application can modify the input stream while it's being parsed?","msgtype":"m.text"},"ts":1179142920000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"eventually.","msgtype":"m.text"},"ts":1179142921000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"obviously full support would require a JavaScript interpreter","msgtype":"m.text"},"ts":1179142922000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but you could always start with a hack that just handles trivial document.write calls, for testing","msgtype":"m.text"},"ts":1179142980000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"spidermonkey","msgtype":"m.text"},"ts":1179142981000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"not every app will care about JavaScript","msgtype":"m.text"},"ts":1179142982000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"nods","msgtype":"m.emote"},"ts":1179142983000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just make it an optional dependency","msgtype":"m.text"},"ts":1179142984000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"The script interpreter could just be offloaded into the application that's using the HTML parser, with some way it can be notified of document modifications and then modify the input stream back again, rather than building any scripting into the parser library itself","msgtype":"m.text"},"ts":1179142985000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"can <script> do DOM manipulation when the entire document is not yet loaded?","msgtype":"m.text"},"ts":1179143040000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(please say no)","msgtype":"m.text"},"ts":1179143100000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1179143101000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"(sorry)","msgtype":"m.text"},"ts":1179143102000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if it couldn't, that would affect the ability to do incremental rendering","msgtype":"m.text"},"ts":1179143103000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"oh dear :)","msgtype":"m.text"},"ts":1179143104000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"do you mean loaded or parsed?","msgtype":"m.text"},"ts":1179143105000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I mean parsed","msgtype":"m.text"},"ts":1179143160000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"still a yes","msgtype":"m.text"},"ts":1179143161000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"ie. the document text has not yet finished loading","msgtype":"m.text"},"ts":1179143162000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"You could just make it a parser for script-is-disabled UAs, since real web browsers are probably going to be writing their own new parsers anyway and not many other people need scripting inside HTML :-)","msgtype":"m.text"},"ts":1179143163000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the moment </script> is emitted script is executed and affects the input stream","msgtype":"m.text"},"ts":1179143164000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what happens if it starts mucking about with the root element? is that well defined?","msgtype":"m.text"},"ts":1179143165000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"unless there's a defer attribute","msgtype":"m.text"},"ts":1179143166000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"mikeday, I think everything should work ok...","msgtype":"m.text"},"ts":1179143220000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"what if it writes out a <script> element, like a self-reproducing element?","msgtype":"m.text"},"ts":1179143221000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"although I'm not entirely sure what would happen if it just removed the entire tree...","msgtype":"m.text"},"ts":1179143222000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tested this before but can't remember what happens","msgtype":"m.emote"},"ts":1179143280000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"suicide scrips","msgtype":"m.text"},"ts":1179143281000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"ts","msgtype":"m.text"},"ts":1179143282000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"iirc the rest of the element that was removed will not be inserted into the document, but i'll test it again","msgtype":"m.text"},"ts":1179143340000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"so you could have a long page, then a script at the bottom that deletes all preceding content, then a second totally different page","msgtype":"m.text"},"ts":1179143341000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"data:text/html,<script>function f(){document.write('<script>' + f + ' f()<'+'/script>Ha ')};f()</script>","msgtype":"m.text"},"ts":1179143400000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In Firefox it's seemingly limited to 20 invocations","msgtype":"m.text"},"ts":1179143401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"In Opera it kind of loops forever","msgtype":"m.text"},"ts":1179143460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"lovely :)","msgtype":"m.text"},"ts":1179143461000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"In IE6 it's limited to 4","msgtype":"m.text"},"ts":1179143520000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(or 5, depending on whether you count the initial one)","msgtype":"m.text"},"ts":1179143521000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"wonders if that counts as a DOS bug in Opera","msgtype":"m.emote"},"ts":1179143522000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's not like we freeze","msgtype":"m.text"},"ts":1179143580000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I'll file a bug anyway to be on the safe side","msgtype":"m.text"},"ts":1179143581000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"btw, it seems that Firefox on my machine does way more invocations...","msgtype":"m.text"},"ts":1179143640000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, that's true","msgtype":"m.text"},"ts":1179143641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"though it still eats ~5MB of memory a second","msgtype":"m.text"},"ts":1179143642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"firefox doesn't add the rest of the element. opera does (and it will end up at the parent node relative to if the script didn't run). ie7 shows aborts and shows an error page...","msgtype":"m.text"},"ts":1179143643000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"eventually will trigger the OOM killer and potentially kill X-Windows","msgtype":"m.text"},"ts":1179143644000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"anyway, it's a beautiful document, makes the billion laughs attack look tame by comparison","msgtype":"m.text"},"ts":1179143700000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I'm not sure if I'm looking at the wrong numbers but it doesn't seem like Opera is freeing the half a gigabyte it used up while I had that page open...","msgtype":"m.text"},"ts":1179143760000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"seems to be fixed in more recent versions of Opera","msgtype":"m.text"},"ts":1179143761000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"they show a single \"Ha\"","msgtype":"m.text"},"ts":1179143762000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Ah, Firefox 2 goes up to 100","msgtype":"m.text"},"ts":1179143763000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Actually, it goes down from 100","msgtype":"m.text"},"ts":1179143820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(data:text/html,<script>var i=1;function f(){document.write('<script>' + f + ' f()<'+'/script> '+(i++))};f()</script>)","msgtype":"m.text"},"ts":1179143821000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(FF3 goes down from 21, IE6 goes down from 6)","msgtype":"m.text"},"ts":1179143880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"you don't need to write out ' + f + ' each time, just <script>f()</script> is sufficient","msgtype":"m.text"},"ts":1179143940000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"what's the trigger for cutting off execution, would you need to track how many script blocks were created by the original script block?","msgtype":"m.text"},"ts":1179143941000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"a bit like tracking recursion depth, but for script elements...","msgtype":"m.text"},"ts":1179143942000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Oh, that's true... This way is more quine-like, though :-)","msgtype":"m.text"},"ts":1179143943000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://simon.html5.org/test/html/parsing/dom-mutations/","msgtype":"m.text"},"ts":1179143944000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"if you just blindly added the document.write text to the input stream,","msgtype":"m.text"},"ts":1179144000000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I don't see how you'd keep track of who created it","msgtype":"m.text"},"ts":1179144001000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"this version loops 125 times in FF data:text/html,<script>var i=1;function f(){document.write(i++ + '<br><script>f()<\\/script>')};f();</script>","msgtype":"m.text"},"ts":1179144002000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"using the live DOM viewer, IE stops after 6","msgtype":"m.text"},"ts":1179144060000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"21 times for me in firefox3","msgtype":"m.text"},"ts":1179144061000,"senderName":"zcorpan","senderId":"zcorpan@irc"},
{"content":{"body":"I'm testing FF2","msgtype":"m.text"},"ts":1179144120000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"(Opera doesn't like the \\ in that address)","msgtype":"m.text"},"ts":1179144240000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well, try %-encoding it then","msgtype":"m.text"},"ts":1179144241000,"senderName":"Lachy","senderId":"Lachy@irc"},
{"content":{"body":"just used '+' instead","msgtype":"m.emote"},"ts":1179144300000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hmm, be nice if C had coroutines, or python-style generators","msgtype":"m.text"},"ts":1179144600000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"then if you run out of input halfway through parsing, you could just suspend and wait for more","msgtype":"m.text"},"ts":1179144660000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"http://www.chiark.greenend.org.uk/~sgtatham/coroutines.html - not exactly elegant, unfortunately, but that's what you get for using C","msgtype":"m.text"},"ts":1179144780000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"hah, already reading that page","msgtype":"m.text"},"ts":1179144840000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"cuter than setjmp/longjmp,","msgtype":"m.text"},"ts":1179144841000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but you can't use local variables, and only works for one single function","msgtype":"m.text"},"ts":1179144842000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Bah, who needs locals?","msgtype":"m.text"},"ts":1179144900000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"gcc labels as values would also work nicely","msgtype":"m.text"},"ts":1179144901000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and allow the use of switch statements as well I suppose","msgtype":"m.text"},"ts":1179144902000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"at the cost of making the code gcc-specific","msgtype":"m.text"},"ts":1179144903000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"doesn't like GCC-specific code","msgtype":"m.emote"},"ts":1179144904000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right","msgtype":"m.text"},"ts":1179144905000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or just make the code block on read","msgtype":"m.text"},"ts":1179144906000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and let applications use multiple threads if they care so much","msgtype":"m.text"},"ts":1179144960000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or callback on read, so the application can handle it and abort","msgtype":"m.text"},"ts":1179144961000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(I'm not entirely sure why I don't like it, but I guess it's just because portable standard code seems nicer)","msgtype":"m.text"},"ts":1179144962000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"that's what pretty much every other library does","msgtype":"m.text"},"ts":1179144963000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"annoying for application developers, but \"that's what you get for using C\"! :)","msgtype":"m.text"},"ts":1179145020000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Could something similar to libpng work?","msgtype":"m.text"},"ts":1179145080000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"libpng is callbacks","msgtype":"m.text"},"ts":1179145081000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"you say read, it reads by calling your provided read function","msgtype":"m.text"},"ts":1179145082000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"hmm, it uses setjmp/longjmp too","msgtype":"m.text"},"ts":1179145140000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but only for error handling","msgtype":"m.text"},"ts":1179145141000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Its setjmp/longjmp is a bit nasty when you want to use it in C++ :-(","msgtype":"m.text"},"ts":1179145142000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"jpeglib uses callbacks, but I think has I/O suspension as well,","msgtype":"m.text"},"ts":1179145143000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"so you can pause a read and go and do something else","msgtype":"m.text"},"ts":1179145200000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Do HTML parsers need to abort and return errors?","msgtype":"m.text"},"ts":1179145201000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I think error handling shouldn't require setjmp hackery","msgtype":"m.text"},"ts":1179145202000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"libpng is a bit exceptional in that regard (hah!)","msgtype":"m.text"},"ts":1179145203000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I was just hoping to avoid I/O callbacks if possible","msgtype":"m.text"},"ts":1179145260000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"as it's not polite for a library to take over the main loop in that way","msgtype":"m.text"},"ts":1179145261000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"doesn't seem possible without some funky code though.","msgtype":"m.text"},"ts":1179145320000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Hmm, you'd want something more like \"while (some external loop getting data from the network) { parser->heres_some_more_data(buf, size); while (! parser->needs_more_data() && ! ui_needs_to_be_more_responsive()) parser->do_some_parsing(); if (is_finished()) hooray(); }\" ?","msgtype":"m.text"},"ts":1179145440000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"right, something like that","msgtype":"m.text"},"ts":1179145441000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"although I probably wouldn't update the UI in the same thread","msgtype":"m.text"},"ts":1179145442000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"parser.open(), parser.write(), write, write, parser.close()","msgtype":"m.text"},"ts":1179145500000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"requires the parser to be able to suspend itself rather carefully when it runs out of data though","msgtype":"m.text"},"ts":1179145560000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"which complicates the parser code","msgtype":"m.text"},"ts":1179145561000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"just as demonstrated on that coroutines page","msgtype":"m.text"},"ts":1179145562000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Could it be useful to copy libxml2's interface, so the HTML5 parser could just fit in as a new input source there and users use libxml2 like they normally do?","msgtype":"m.text"},"ts":1179145620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"I would rather not to be honest, as libxml2 doesn't need to be any bigger","msgtype":"m.text"},"ts":1179145621000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"or any more complex","msgtype":"m.text"},"ts":1179145622000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"two different SAX interfaces, a DOM interface, the reader interface, etc.","msgtype":"m.text"},"ts":1179145680000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"has never actually used libxml2","msgtype":"m.emote"},"ts":1179145681000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"and too many XML-specific assumptions, which make the current libxml2 HTML parser fit rather awkwardly","msgtype":"m.text"},"ts":1179145682000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"though I have used Xerces-C, so I know what giant over-engineered XML libraries feel like","msgtype":"m.text"},"ts":1179145683000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"it's great for what it does, but it's grown by accretion and now it can't throw anything away","msgtype":"m.text"},"ts":1179145684000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"for example, I'd much rather that it didn't have its own HTTP implementation","msgtype":"m.text"},"ts":1179145685000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and just provided stubs for interfacing with curl, or whatever","msgtype":"m.text"},"ts":1179145740000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Okay, that sounds like convincing reasons to stay away from it :-)","msgtype":"m.text"},"ts":1179145741000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"there is some good code in there for specific tasks though, that's worth learning from","msgtype":"m.text"},"ts":1179145742000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"but a HTML specific library could be slightly simpler, as well as implementing more of HTML.","msgtype":"m.text"},"ts":1179145800000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"oh well, I'll have to stop procrastinating and get some of the ugly code written","msgtype":"m.text"},"ts":1179145801000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"once you accept that it's going to be ugly, and stop trying to make it elegant, you get it done quicker.","msgtype":"m.text"},"ts":1179145860000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(Hmm, Xerces is a third of a million lines, and the .dll has half a megabyte just for the exported symbol names... All I wanted was a simple plain XML parser)","msgtype":"m.text"},"ts":1179146100000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"libxml2 is < 200k lines of source","msgtype":"m.text"},"ts":1179146220000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"about 220k including headers","msgtype":"m.text"},"ts":1179146221000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"includes a fair bit of stuff though, XPath, some XSD schema and RELAX NG, etc.","msgtype":"m.text"},"ts":1179146280000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"and HTML and DocBook parsers :/","msgtype":"m.text"},"ts":1179146340000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Maybe I should use TinyXml, since that's only six thousand lines...","msgtype":"m.text"},"ts":1179146460000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"actually, libxml2 also can be configured to be smaller, eg. --without-xpath, --without-schemas","msgtype":"m.text"},"ts":1179146520000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"handy when you need a small footprint","msgtype":"m.text"},"ts":1179146521000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"(I quite like libxml2, generally speaking :)","msgtype":"m.text"},"ts":1179146522000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"I think the project I'm working on actually has three XML parsers already, since it uses a couple of external libraries that come with expat and libxml2. Plus there's a XML-converted-to-some-fast-binary-format loader, since XML parsing was too slow. Actually there's two of those (since I wanted to load some game's different binary XML format too), and also two separate XML writers. But it all works, which is enough to keep me happy","msgtype":"m.text"},"ts":1179146820000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1179146880000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"we end up linking to expat indirectly as well, because fontconfig uses it","msgtype":"m.text"},"ts":1179146881000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"feels a bit strange using two different parsers, but memory is cheap.","msgtype":"m.text"},"ts":1179146940000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"anyway, must go","msgtype":"m.text"},"ts":1179146941000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"waves","msgtype":"m.emote"},"ts":1179146942000,"senderName":"mikeday","senderId":"mikeday@irc"},
{"content":{"body":"Bye :-)","msgtype":"m.text"},"ts":1179146943000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie, postMessage() is not the only member of Document with relaxed settings: open(), write(), writeln(), close(), location have that too","msgtype":"m.text"},"ts":1179152700000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, as such, moving postMessage() doesn't make much sense to us","msgtype":"m.text"},"ts":1179152760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders about the text/xsl discussion","msgtype":"m.emote"},"ts":1179171060000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ponders?","msgtype":"m.text"},"ts":1179171300000,"senderName":"JonT","senderId":"JonT@irc"},
{"content":{"body":"v., -dered, -der·ing, -ders. To weigh in the mind with thoroughness and care.","msgtype":"m.text"},"ts":1179171360000,"senderName":"ddfreyne","senderId":"ddfreyne@irc"},
{"content":{"body":"but \"/me weighs in the mind with thoroughness and care\" sounds so much cooler than \"/me ponders\"","msgtype":"m.text"},"ts":1179171361000,"senderName":"ddfreyne","senderId":"ddfreyne@irc"},
{"content":{"body":"thanks ddfreyne","msgtype":"m.text"},"ts":1179171420000,"senderName":"JonT","senderId":"JonT@irc"},
{"content":{"body":"\"ponder, n. Obs. 1. A weight; spec. one used with a scale or balance. Hence in extended use: anything weighty, esp. a weighty attack or blow.\"","msgtype":"m.text"},"ts":1179171480000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"ponders Philip around the lug 'ole  ;-)","msgtype":"m.emote"},"ts":1179171840000,"senderName":"nickshanks","senderId":"nickshanks@irc"},
{"content":{"body":"lol","msgtype":"m.text"},"ts":1179172680000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hixie, see a bit further up btw about postMessage()","msgtype":"m.text"},"ts":1179172800000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"as far as i can tell you are wrong","msgtype":"m.text"},"ts":1179172920000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"you can't document.write() to another domain","msgtype":"m.text"},"ts":1179172921000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that would be all kinds of dangerous","msgtype":"m.text"},"ts":1179172922000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"They have a different policy from some of the other members, anyway","msgtype":"m.text"},"ts":1179173040000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"not in, e.g., safari, at least","msgtype":"m.text"},"ts":1179173220000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"even document.location?","msgtype":"m.text"},"ts":1179173340000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yup","msgtype":"m.text"},"ts":1179173520000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(you can get to it via window.location)","msgtype":"m.text"},"ts":1179173521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so contentDocument.location throws but contentWindow.location doesn't?","msgtype":"m.text"},"ts":1179173760000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"yah","msgtype":"m.text"},"ts":1179173761000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i believe so","msgtype":"m.text"},"ts":1179173762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"test it","msgtype":"m.text"},"ts":1179173763000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"actually it's contentDocument that throws","msgtype":"m.text"},"ts":1179173764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"not contentDocument.location","msgtype":"m.text"},"ts":1179173765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"bbiab, work","msgtype":"m.text"},"ts":1179173880000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I get an exception for both contentDocument.location and contentWindow.location ...","msgtype":"m.text"},"ts":1179173881000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"ah maybe \"location\" isn't one of the safe ones; try history","msgtype":"m.text"},"ts":1179173882000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"anyway","msgtype":"m.text"},"ts":1179173883000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"really. on. my. way. to. work. really.","msgtype":"m.text"},"ts":1179173940000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"contentDocument doesn't throw in Opera","msgtype":"m.text"},"ts":1179174000000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"or Firefox","msgtype":"m.text"},"ts":1179174001000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"tested using","msgtype":"m.text"},"ts":1179174002000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"data:text/html,<iframe src=http://www.google.com></iframe>x<script> alert(document.getElementsByTagName('iframe')[0].contentDocument) </script>","msgtype":"m.text"},"ts":1179174003000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Jeffrey Zeldman follows the WHATWG twitter feed","msgtype":"m.text"},"ts":1179179700000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://jeremiahgrossman.blogspot.com/2007/05/html-5-in-works.html","msgtype":"m.text"},"ts":1179179760000,"senderName":"hasather","senderId":"hasather@irc"},
{"content":{"body":"right!","msgtype":"m.text"},"ts":1179180180000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"lunch is eaten, e-mail is looked at, though not read","msgtype":"m.text"},"ts":1179180181000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"time to do some editing!","msgtype":"m.text"},"ts":1179180182000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"have fun :)","msgtype":"m.text"},"ts":1179180183000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"wow.","msgtype":"m.text"},"ts":1179183900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"talk about a lack of interoperability","msgtype":"m.text"},"ts":1179183901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"http://www.hixie.ch/tests/adhoc/html/canvas/037.html","msgtype":"m.text"},"ts":1179183902000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i have three browsers and SIX different renderings","msgtype":"m.text"},"ts":1179184080000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"And the spec gives a seventh rendering, and potentially an eighth if you interpret it differently ;-)","msgtype":"m.text"},"ts":1179184081000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"the original spec gives a 7th","msgtype":"m.text"},"ts":1179184140000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and i recently changed it to an 8th, yes","msgtype":"m.text"},"ts":1179184141000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"writes some test cases on <body bgcolor> parsing","msgtype":"m.emote"},"ts":1179184142000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"sweet kittens what a mess","msgtype":"m.text"},"ts":1179184143000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok let's see","msgtype":"m.text"},"ts":1179184200000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"opera is definitely buggy","msgtype":"m.text"},"ts":1179184201000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"safari 2 is definitely buggy","msgtype":"m.text"},"ts":1179184202000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"In the original spec I couldn't tell whether it was meant to draw a cone between offsets 0 and 1, or between -infinity and +infinity","msgtype":"m.text"},"ts":1179184203000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"well it definitely has to go through the two circles you specify in the createRadialGradient method","msgtype":"m.text"},"ts":1179184260000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and opera and safari 2 don't do that","msgtype":"m.text"},"ts":1179184261000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"nor does camino as far as i can tell","msgtype":"m.text"},"ts":1179184320000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i don't understand where camino gets its rendering from","msgtype":"m.text"},"ts":1179184321000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Oh, I noticed that problem in Opera but not in the cases I tried in Safari","msgtype":"m.text"},"ts":1179184322000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"this leaves firefox 2 linux, minefield mac, and webkit trunk as my potentially correct renderings","msgtype":"m.text"},"ts":1179184323000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"(Konqueror 3.8 is utterly broken with radial gradients too)","msgtype":"m.text"},"ts":1179184324000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"minefield mac ignores the first stop so that's wrong...","msgtype":"m.text"},"ts":1179184380000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"firefox 2 linux creates two cones, one truncated","msgtype":"m.text"},"ts":1179184381000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that's gotta be wrong","msgtype":"m.text"},"ts":1179184382000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"so that leaves webkit trunk","msgtype":"m.text"},"ts":1179184440000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"which creates an infinite cone","msgtype":"m.text"},"ts":1179184441000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's test webkit trunk with a cone that ends finitely","msgtype":"m.text"},"ts":1179184442000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"it works","msgtype":"m.text"},"ts":1179184500000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1179184501000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"that wins","msgtype":"m.text"},"ts":1179184502000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"minefield mac ignores the first stop\" - I see all four colours in 037 with Minefield on Linux","msgtype":"m.text"},"ts":1179184620000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"yeah i expect the linux one has a less buggy cairo","msgtype":"m.text"},"ts":1179184621000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Ah, okay - I think they're all using the same Cairo version, but presumably different backend code within Cairo","msgtype":"m.text"},"ts":1179184680000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"holy crap","msgtype":"m.text"},"ts":1179184740000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"minefield on linux gives us a 7th rendering","msgtype":"m.text"},"ts":1179184741000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on mac, i see a green-blue gradient, and some magenta, and some horribly aliased borders.  i don't see any black or yellow.","msgtype":"m.text"},"ts":1179185400000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"Given that Cairo doesn't even bother to do this consistently between platforms or between versions, it seems to be a case that doesn't come up very often in practice, so nobody will mind what the output is as long as it's consistent","msgtype":"m.text"},"ts":1179185401000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(firefox trunk)","msgtype":"m.text"},"ts":1179185402000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"jruderman: the existence of the green-blue gradient is the only constant in the results","msgtype":"m.text"},"ts":1179185460000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"well, except safari 2, which just draws black","msgtype":"m.text"},"ts":1179185461000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"hah","msgtype":"m.text"},"ts":1179185520000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"(the test description is wrong)","msgtype":"m.text"},"ts":1179185521000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i'm surprised, i thought canvas was simple and already consistent across browsers","msgtype":"m.text"},"ts":1179185522000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"oh","msgtype":"m.text"},"ts":1179185523000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"jruderman: it's surprisingly consistent in the areas i wrote good spec test for","msgtype":"m.text"},"ts":1179185524000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"Hixie has NFI how the test below should render.\"","msgtype":"m.text"},"ts":1179185580000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"Oh, Safari 2 just doesn't do gradients in fillRect - you can do rect() fill() instead and it'll work more usefully","msgtype":"m.text"},"ts":1179185581000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Hixie: hehe","msgtype":"m.text"},"ts":1179185582000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"(in case you want to test its actual gradient rendering)","msgtype":"m.text"},"ts":1179185583000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Philip`: yeah","msgtype":"m.text"},"ts":1179185584000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"what's with the jagged diagonal borders?","msgtype":"m.text"},"ts":1179185585000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"what's a good third dimension variable name other than t, r and z?","msgtype":"m.text"},"ts":1179185640000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"jruderman: It's consistent in the obvious cases, until you try doing something non-trivial and find different bugs in every variable :-)","msgtype":"m.text"},"ts":1179185641000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"Uh","msgtype":"m.text"},"ts":1179185642000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"s/variable/browser/","msgtype":"m.text"},"ts":1179185643000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(I don't know where that word came from)","msgtype":"m.text"},"ts":1179185700000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"probably came from you reading what i just wrote :-P","msgtype":"m.text"},"ts":1179185701000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: w?","msgtype":"m.text"},"ts":1179185702000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"w might work","msgtype":"m.text"},"ts":1179185703000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"i was thinking s","msgtype":"m.text"},"ts":1179185704000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: h, for height?","msgtype":"m.text"},"ts":1179185705000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"alpha?","msgtype":"m.text"},"ts":1179185706000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"but w is good","msgtype":"m.text"},"ts":1179185707000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alpha might work too","msgtype":"m.text"},"ts":1179185708000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"alpha is better actually yeah","msgtype":"m.text"},"ts":1179185709000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Hixie: a, for altitude, and to confuse Philip` ?","msgtype":"m.text"},"ts":1179185760000,"senderName":"jruderman","senderId":"jruderman@irc"},
{"content":{"body":"d for depth?","msgtype":"m.text"},"ts":1179185761000,"senderName":"bewest","senderId":"bewest@irc"},
{"content":{"body":"it's not a physical dimension","msgtype":"m.text"},"ts":1179185762000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"Lowercase omega, to confuse jruderman?","msgtype":"m.text"},"ts":1179185763000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"(it's a position along an imaginative line)","msgtype":"m.text"},"ts":1179185764000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ooo","msgtype":"m.text"},"ts":1179185765000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"omega","msgtype":"m.text"},"ts":1179185766000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"omega it is","msgtype":"m.text"},"ts":1179185767000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"heh","msgtype":"m.text"},"ts":1179185768000,"senderName":"bewest","senderId":"bewest@irc"},
{"content":{"body":"(or \"wibble\" as we used to call it at university)","msgtype":"m.text"},"ts":1179185820000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"I'm alright until people start using xi and zeta, and then I get totally confused","msgtype":"m.text"},"ts":1179185880000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"http://simon.html5.org/test/html/parsing/color-attributes/001.htm","msgtype":"m.text"},"ts":1179186420000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"can anyone test that in safari?","msgtype":"m.text"},"ts":1179186600000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hold on","msgtype":"m.text"},"ts":1179186660000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"just see if there are any with #00ff00","msgtype":"m.text"},"ts":1179186661000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"nope","msgtype":"m.text"},"ts":1179186662000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"interesting","msgtype":"m.text"},"ts":1179186663000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"<body>, <head>, <html> are blank; <isindex> is null","msgtype":"m.text"},"ts":1179186720000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"on trunk","msgtype":"m.text"},"ts":1179186721000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"safari 2 <noembed>, <noframes>, <nolayer>, <noscript> are also blank","msgtype":"m.text"},"ts":1179186780000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"and <isindex> is not null","msgtype":"m.text"},"ts":1179186781000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ok, i have a new, \"more mathematical\" definition for radial gradients","msgtype":"m.text"},"ts":1179186900000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"let's fix these tests to match","msgtype":"m.text"},"ts":1179186901000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"\"more mathematical\" = \"more Greek letters\"?","msgtype":"m.text"},"ts":1179186960000,"senderName":"Philip`","senderId":"Philip`@irc"},
{"content":{"body":"what happens with http://simon.html5.org/test/html/parsing/color-attributes/002.htm ?","msgtype":"m.text"},"ts":1179186961000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"Philip`: yup!","msgtype":"m.text"},"ts":1179186962000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"zcorpan_: trunk: lime, xxff","msgtype":"m.text"},"ts":1179186963000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"s2 same","msgtype":"m.text"},"ts":1179186964000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"ah, so it's not handled in the parser like in other browsers","msgtype":"m.text"},"ts":1179187020000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"ok","msgtype":"m.text"},"ts":1179187021000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"},
{"content":{"body":"hm, wonder what is most sane to do here. perhaps just the rendering section should say how to interpret bgcolor values or something","msgtype":"m.text"},"ts":1179187140000,"senderName":"zcorpan_","senderId":"zcorpan_@irc"}
]