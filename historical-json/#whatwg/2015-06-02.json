[
{"content":{"body":"https://lists.mozilla.org/pipermail/dev-platform/2015-June/010180.html","msgtype":"m.text"},"ts":1433208425000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"\"We enabled native copy-to-clipboard on github.com today for Firefox Nightly visitors. The copy buttons no longer use a Flash widget in Nightly or Chrome!\"","msgtype":"m.text"},"ts":1433208441000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"nice","msgtype":"m.text"},"ts":1433208447000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"former Chrome engineer Shiki Okasaka now has his own company making a pretty cool new ergonomic keyboard http://www.esrille.com/keyboard/ with the source for its firmware available on Github (and designed to be user-updateable relatively easily)","msgtype":"m.text"},"ts":1433211953000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"my goal is to slack off as much as possible, and with as good posture as possible, so that I don't have to worry about rsi or other injuries like that","msgtype":"m.text"},"ts":1433212636000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"and hopefully retire before 40","msgtype":"m.text"},"ts":1433212645000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"here's hopin","msgtype":"m.text"},"ts":1433212650000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"maybe it's futile :(","msgtype":"m.text"},"ts":1433212764000,"senderName":"caitp-","senderId":"caitp-@irc"},
{"content":{"body":"https://code.google.com/p/chromium/issues/detail?id=495577","msgtype":"m.text"},"ts":1433246839000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Chrome shouldn't be trying to fetch something in a background tab if it requires user interaction in order to load","msgtype":"m.text"},"ts":1433246882000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"(and then keeping a socket open waiting for the user interaction to happen)","msgtype":"m.text"},"ts":1433246914000,"senderName":"MikeSmith","senderId":"MikeSmith@irc"},
{"content":{"body":"Domenic: what's web platform branding? Not to be annoying yet again - but I can't seem to be able to google it","msgtype":"m.text"},"ts":1433258573000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: I don't know what you're referring to?","msgtype":"m.text"},"ts":1433258589000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"\"WeakSets are perfect for branding and are how I would expect web platform class branding to be explained.\"","msgtype":"m.text"},"ts":1433258605000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Oh lol, web platform _class_ branding, sorry.","msgtype":"m.text"},"ts":1433258613000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Like, why wouldn't an `instanceof` or another similar check work there Domenic ?","msgtype":"m.text"},"ts":1433258707000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: because then you could fool it with Object.create(Foo)","msgtype":"m.text"},"ts":1433258725000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"(Or with [Symbol.hasInstance], these days.)","msgtype":"m.text"},"ts":1433258739000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Why would you be _that_ defensive about it in the first place?","msgtype":"m.text"},"ts":1433258783000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"fooling instanceof isn't necessarily bad","msgtype":"m.text"},"ts":1433258870000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"I'm not being critical, I genuinely don't know where I'd be that defensive","msgtype":"m.text"},"ts":1433258870000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"it's potentially helpful for unit tests","msgtype":"m.text"},"ts":1433258880000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"caitp: here's context https://esdiscuss.org/topic/actual-weakset-use-cases","msgtype":"m.text"},"ts":1433258909000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"yes I know, I sent a reply","msgtype":"m.text"},"ts":1433258915000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"oh wait, you arleady commented there nvm","msgtype":"m.text"},"ts":1433258918000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"*already","msgtype":"m.text"},"ts":1433258922000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"caitp: wouldn't that example work with a regular set too?","msgtype":"m.text"},"ts":1433258964000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"well sure","msgtype":"m.text"},"ts":1433258971000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"(Domenic 's doesn't since the set outlive the objects)","msgtype":"m.text"},"ts":1433258976000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: because you could break C++","msgtype":"m.text"},"ts":1433258976000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"benjamingr: C++ code does stuff like getInternalCppObjectFrom(jsObject)","msgtype":"m.text"},"ts":1433258996000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: but if it's to guard C++, can't/shouldn't it be done from the C++ side anyway?","msgtype":"m.text"},"ts":1433259010000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"you're right, you could use a plain ol' Set","msgtype":"m.text"},"ts":1433259010000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"benjamingr: yes, that is how it's currently done. But if you wanted to implement things in JS (which would have its own invariants, e.g. getInternalJSObjectFrom(jsObject)) you'd use WeakSet.","msgtype":"m.text"},"ts":1433259053000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"although theoretically fn() could destroy <object>","msgtype":"m.text"},"ts":1433259061000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"and if it gets collected during iteration, not impossible, you know","msgtype":"m.text"},"ts":1433259077000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"in general any security-sensitive code that depends on object invariants would use this","msgtype":"m.text"},"ts":1433259145000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: interesting, in your example you can `.call(myFakeObject)` to add things in - but that's besides the point. I wonder if I can come up with a library example.","msgtype":"m.text"},"ts":1433259160000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"If you have existing security critical code that needs this I'd definitely love to see it.","msgtype":"m.text"},"ts":1433259174000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: like, all of browsers, or anything Mark Miller writes.","msgtype":"m.text"},"ts":1433259187000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"caitp: but you still own a reference to the object from the closure - if you had a weakref instead that'd work.","msgtype":"m.text"},"ts":1433259190000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: what do you mean by .call(myFakeObject)?","msgtype":"m.text"},"ts":1433259194000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"class constructors aren't callable, remember.","msgtype":"m.text"},"ts":1433259203000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Oh, right, my mistake","msgtype":"m.text"},"ts":1433259214000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"stop using your logic on me :p","msgtype":"m.text"},"ts":1433259222000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"weakrefs","msgtype":"m.text"},"ts":1433259232000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes, Weak isn't really ar equirement for that use case","msgtype":"m.text"},"ts":1433259236000,"senderName":"caitp","senderId":"caitp@irc"},
{"content":{"body":"we're going to have SAB, might as well have weakrefs","msgtype":"m.text"},"ts":1433259245000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: anything mark miller writes is the first place I looked (well, the thesis and recent security papers). I couldn't distill a use case from there I could show.","msgtype":"m.text"},"ts":1433259272000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"benjamingr: hmm maybe look through the SES source code. He probably uses WeakMap with dummy values.","msgtype":"m.text"},"ts":1433259296000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"That's a good idea, I'll do that thanks.","msgtype":"m.text"},"ts":1433259310000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"IIRC Mark has that really cool WeakMap shim for SES but doesn't actually use WeakSet","msgtype":"m.text"},"ts":1433259373000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Yeah that is my recollection too but it seems quite possible he uses it conceptually while using the actual WeakMap impl.","msgtype":"m.text"},"ts":1433259404000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"yes, WeakMap but no WeakSet. Your \"guarding against X\" example is pretty good though, like having verified objects that were impossible to tinker with. It can be done with a WeakMap easily but then again that's true for every Set and it's still pretty solid.","msgtype":"m.text"},"ts":1433259496000,"senderName":"benjamingr","senderId":"benjamingr@irc"},
{"content":{"body":"Yeah, a set is just a Map where you only ever use .has(), never .get().","msgtype":"m.text"},"ts":1433268935000,"senderName":"TabAtkins","senderId":"TabAtkins@irc"}
]