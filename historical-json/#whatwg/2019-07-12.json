[
{"content":{"body":"annevk: (I already commented about this on GH, sorry for the redundancy, but) I'm curious..do you think deferred iframes should not refer to the document-causing-the-navigation at their eventual-load time?","msgtype":"m.text"},"ts":1562917140000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Ohh. I think you're saying the way it would be spec'ed sounds like the iframe would reference a snapshot of the document's state","msgtype":"m.text"},"ts":1562917278000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: I think we should snapshot at navigation time generally, however here that should prolly be at attribute processing time as navigation would happen at a “weird” time","msgtype":"m.text"},"ts":1562918946000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Hmm https://github.com/tc39/proposal-intl-displaynames/issues/32#issuecomment-510637281","msgtype":"m.text"},"ts":1562920537000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: re https://github.com/whatwg/misc-server/pull/99 what I don't get is why we need a new file","msgtype":"m.text"},"ts":1562922858000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: I'm not sure the current setup where the file named redirects contains the Content-Disposition information too, which isn't a redirect afaik","msgtype":"m.text"},"ts":1562922883000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"MikeSmith: or the 410 gone data","msgtype":"m.text"},"ts":1562922911000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I’m wondering what might get us the closest behavior to existing lazy loading libraries. For example, JS-based lazy loading tools I think are likely to “insert” an iframe into the DOM just when it should be loaded, therefore attribute parsing and navigation is kicked off then. I feel like in the PR, deferring _everything_ buys us behavior closest to that, which IMO is intuitive and may match developer","msgtype":"m.text"},"ts":1562924701000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"expectations.  Does that make sense?","msgtype":"m.text"},"ts":1562924701000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: it's not clear to me why copying state at a non-deterministic point is better","msgtype":"m.text"},"ts":1562924778000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"domfarolino: it's clear why you might arrive at such a compromise in a polyfill, but this isn't that","msgtype":"m.text"},"ts":1562924808000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: you’re saying it’s non-deterministic because we’re essentially asynchronously waiting for our navigation conditions to be met?","msgtype":"m.text"},"ts":1562924838000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: yeah, it depends on something rather unrelated","msgtype":"m.text"},"ts":1562924925000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"> “it’s clear why you might arrive ...","msgtype":"m.text"},"ts":1562924939000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"True","msgtype":"m.text"},"ts":1562924941000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"annevk: Hmm. Would it be possible to wait for those conditions and then queue a task to start the navigation?","msgtype":"m.text"},"ts":1562925068000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"I see your concern though...I just wonder if it would be a gotcha","msgtype":"m.text"},"ts":1562925127000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: that's your proposed setup already (if it doesn't queue a task that's a bug)","msgtype":"m.text"},"ts":1562925132000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: it’s not explicit about it I believe. Probably should be","msgtype":"m.text"},"ts":1562925155000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"Could be wrong, Ben wrote those bits and I haven’t looked carefully","msgtype":"m.text"},"ts":1562925176000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"yes, but it's not a solution to this problem","msgtype":"m.text"},"ts":1562925179000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"I guess I don't entirely see it as a problem, but I definitely see what you're saying","msgtype":"m.text"},"ts":1562925540000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: you'll end up with weird cases where if the user does something that causes the URL to change scrolling to the thing might break some subtle thing","msgtype":"m.text"},"ts":1562925679000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: I see how that can happen, I'm just wondering if it won't, because of how developers already think about lazy loaded content (i.e., they may already expect the current state of the document to be the \"source of truth\" for an iframe lazily inserted)","msgtype":"m.text"},"ts":1562926374000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: sure, if you manage when to load it yourself, but that's not the case here and there's no callback either","msgtype":"m.text"},"ts":1562931019000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"Is it fine to say some internal state is an enum? As in: A {{Foo}} object has an associated <dfn for=\"Foo\">internal thing</dfn> which is an {{EnumOfSorts}}. Then later, the <dfn for=\"Foo\" attribute>thing</dfn> getter must return the context object's [=Foo/internal thing=].","msgtype":"m.text"},"ts":1562942522000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"Or must the internal definition duplicate the values of the enum?","msgtype":"m.text"},"ts":1562942544000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"For instance: https://fetch.spec.whatwg.org/#concept-request-credentials-mode vs https://fetch.spec.whatwg.org/#dom-requestinit-credentials. Could both of these reference the same enum?","msgtype":"m.text"},"ts":1562942679000,"senderName":"JakeA","senderId":"JakeA@irc"},
{"content":{"body":"JakeA: it should probably be okay","msgtype":"m.text"},"ts":1562943202000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"annevk: cheers!","msgtype":"m.text"},"ts":1562943709000,"senderName":"JakeA","senderId":"JakeA@irc"}
]