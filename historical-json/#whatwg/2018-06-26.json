[
{"content":{"body":"Domenic: Following our discussion from yesterday, can you take a look at https://github.com/whatwg/html/pull/3774 just as a sanity check? (to make sure the technical spec bits are in order)","msgtype":"m.text"},"ts":1529989687000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"foolip: in case you're around, I'd appreciate a look at https://github.com/whatwg/html/pull/3774 to make sure I'm not Holding It Wrongâ„¢","msgtype":"m.text"},"ts":1529992155000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: I believe he's OOO till July 5th or so","msgtype":"m.text"},"ts":1529994250000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"foolip that is","msgtype":"m.text"},"ts":1529994264000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: ok, thanks","msgtype":"m.text"},"ts":1529994275000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"yoav: afraid I'm also OOO, until July 5 in my case. Not sure exactly when annevk is back.","msgtype":"m.text"},"ts":1530006027000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"July 19","msgtype":"m.text"},"ts":1530006512000,"senderName":"annevk","senderId":"annevk@irc"},
{"content":{"body":"foolip & annevk: ok, have fun! :)","msgtype":"m.text"},"ts":1530010416000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"I have vague recollection that WPT used to have a copy of the html5lib tests, but now I don't see them. Have they been removed?","msgtype":"m.text"},"ts":1530013027000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"also: Are the html5lib encoding tests actually valid? Some seem to assume <meta> scanning beyond 1024 bytes","msgtype":"m.text"},"ts":1530013100000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"does there exist a browser test harness for html5lib encoding tests?","msgtype":"m.text"},"ts":1530013164000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen: gsnedders would know","msgtype":"m.text"},"ts":1530013185000,"senderName":"foolip","senderId":"foolip@irc"},
{"content":{"body":"hsivonen: only of the parser tests","msgtype":"m.text"},"ts":1530013212000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"hsivonen: the encoding tests there's some issue on the html5lib-tests repo that is essentially \"fix this\"","msgtype":"m.text"},"ts":1530013227000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"gsnedders: ok. :-( thanks.","msgtype":"m.text"},"ts":1530013245000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"everything is a rathole. I thought I'd fix this easy bug while waiting for a try run for another patch and now testing this properly is basically a matter of adding the html5lib encoding tests to WPT...","msgtype":"m.text"},"ts":1530013687000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"I take it that I should write a Python Handler per https://wptserve.readthedocs.io/en/latest/handlers.html#python-handlers that parses a .dat file and takes a number indicating which test in the .dat file to serve as text/html?","msgtype":"m.text"},"ts":1530014024000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"and then also parse the .dat file in JS to retrieve the corresponding expected encodings","msgtype":"m.text"},"ts":1530014044000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Or add a build step","msgtype":"m.text"},"ts":1530014210000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: what documentation should I read for that?","msgtype":"m.text"},"ts":1530014244000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Ms2ger: or do you mean a manual import script?","msgtype":"m.text"},"ts":1530014254000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Basically, yes","msgtype":"m.text"},"ts":1530014260000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: I see","msgtype":"m.text"},"ts":1530014265000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"gsnedders probably has more thoughts","msgtype":"m.text"},"ts":1530014269000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"ah, the html5lib tests are there but not in .dat form","msgtype":"m.text"},"ts":1530014770000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"so it looks like they are imported with a manually-run import script","msgtype":"m.text"},"ts":1530014788000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"is it guarateed that os.getcwd() from within a Python Handler returns the path to the top-level directory of WPT?","msgtype":"m.text"},"ts":1530015720000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"Probably not, but I don't suppose it'll change","msgtype":"m.text"},"ts":1530016074000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Might be worth filing an issue to make sure we test that","msgtype":"m.text"},"ts":1530016087000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"Ms2ger: ok. thanks","msgtype":"m.text"},"ts":1530016614000,"senderName":"hsivonen","senderId":"hsivonen@irc"},
{"content":{"body":"hsivonen, Ms2ger: we should document that either way","msgtype":"m.text"},"ts":1530022222000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"yoav: sure I can take a look for sanity check","msgtype":"m.text"},"ts":1530022394000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: awesome, thanks! :)","msgtype":"m.text"},"ts":1530022473000,"senderName":"yoav","senderId":"yoav@irc"},
{"content":{"body":"Domenic: have you gotten around to seeing https://github.com/web-platform-tests/wpt/pull/11584 by chance?","msgtype":"m.text"},"ts":1530036065000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"domfarolino: ah yeah, it slipped out, let me review","msgtype":"m.text"},"ts":1530036088000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"no worries, thanks","msgtype":"m.text"},"ts":1530036115000,"senderName":"domfarolino","senderId":"domfarolino@irc"},
{"content":{"body":"rniwa: I don't quite understand what you're saying at https://github.com/w3c/webcomponents/issues/468#issuecomment-400454801 . We're working from your preferences already; the choice is between an existing cascading order (UA level) and fake shadow root. Given that there are no new cascading orders involved, what are your thoughts?","msgtype":"m.text"},"ts":1530049004000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the literal UA cascading order wouldn't work because then user stylesheet would be overridden","msgtype":"m.text"},"ts":1530050454000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: right, it's changed so that !important is not parsed","msgtype":"m.text"},"ts":1530050466000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: yeah, that would be a new cascading behavior, which we don't want","msgtype":"m.text"},"ts":1530050485000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm, OK, in our implementation that was not a whole new cascading order.","msgtype":"m.text"},"ts":1530050496000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: it doesn't matter how many more changes you make, we always prefer fake-shadow-root approach","msgtype":"m.text"},"ts":1530050502000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: you don't need to keep asking me which one we prefer because we always prefer fake shadow root approach","msgtype":"m.text"},"ts":1530050523000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that's a little unfortunate; you seem to be saying you're not interested in hearing reasoned discussion, but always want your idea to win, instead of debating on merits.","msgtype":"m.text"},"ts":1530050527000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We were hoping we could have a discussion based on what was good for web developers, instead of on whose idea it is.","msgtype":"m.text"},"ts":1530050545000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i'm not arguing based on whose idea it was","msgtype":"m.text"},"ts":1530050564000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: we've repeatedly stated that we don't want to have a new cascading order or any other new behavior distinct from the way existing stylesheets work","msgtype":"m.text"},"ts":1530050592000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: Hmm OK, then could you help us understand the reasons, instead of just stating thta you always like your idea best, no matter what we say?","msgtype":"m.text"},"ts":1530050594000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: in order to avoid create author confusions","msgtype":"m.text"},"ts":1530050600000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: look, i've stated this reasoning 2-3 times already","msgtype":"m.text"},"ts":1530050619000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: i really don't want to keep repeating myself","msgtype":"m.text"},"ts":1530050625000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's the \"any other new behavior\" that you haven't stated before","msgtype":"m.text"},"ts":1530050625000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we have","msgtype":"m.text"},"ts":1530050633000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I understand it's hard to engage in a dialogue some times, but I hope you can find the time","msgtype":"m.text"},"ts":1530050639000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"We're concerned about the new behavior of a fake shadow root being confusing for authors.","msgtype":"m.text"},"ts":1530050659000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i really don't have a time to keep stating the exact same preference over and over","msgtype":"m.text"},"ts":1530050660000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Can you see where we're coming from with that?","msgtype":"m.text"},"ts":1530050664000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"rniwa: stating preferences is not what we're interested in; discussing tradeoffs is what I'm hoping you can help us with.","msgtype":"m.text"},"ts":1530050679000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: well, we've already discussed that internally","msgtype":"m.text"},"ts":1530050695000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: oh, OK, if you don't have time to engage, maybe some of the folks you've discussed internally with could help?","msgtype":"m.text"},"ts":1530050715000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we've considered all those options you've stated and concluded that we'd like to use fake-shadow-root approach","msgtype":"m.text"},"ts":1530050728000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: that's great, we understand that part. We're hoping you, or someone else, could help us work through the reasoning and tradeoffs.","msgtype":"m.text"},"ts":1530050747000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: maybe you can ask hober","msgtype":"m.text"},"ts":1530050747000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"OK, yeah, perspectives appreciated, hober or othermaciej","msgtype":"m.text"},"ts":1530050766000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: the reasoning is simple: we have shadow root, and worked through many issues to get it work to support both components defining its own style & letting users of components override it. we've also defined a way for component to specify important rule in a way which doesn't prevent user stylesheet from overriding it","msgtype":"m.text"},"ts":1530050826000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"given this, we have no reason to create a brand new cascading order, or a brand new style behavior such as ignoring important! rule","msgtype":"m.text"},"ts":1530050851000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"furthermore, the last time we added the support for shadow root's cascading order support, we observed a serious performance hit which is inherent to introducing a new cascading order","msgtype":"m.text"},"ts":1530050886000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"note that i've stated all of this at F2F in Tokyo before","msgtype":"m.text"},"ts":1530050909000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i find it extremely frustrating that i flew all the way to Tokyo to state all of this and i've been asked to state the exact same stuff again.","msgtype":"m.text"},"ts":1530050958000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"rniwa: I appreciate your patience, even if you believe that you're repeating yourself. Note that the discussion has changed, as we are explicitly taking into account your requirement of no new cascading order to accomodate WebKit's performance constraints; we explicitly made an alternative with an existing cascading order but tweaked !important parsing to accomodate you.","msgtype":"m.text"},"ts":1530050965000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"i understand that you're not gonna remember everything i state anywhere but i feel like this is 3rd or 4th time i've been asked to repeat myself","msgtype":"m.text"},"ts":1530050993000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I do not believe it was ever stated that any new behavior was unacceptable, as at the F2F you stated it was a performance issue with WebKit and new cascading orders, not any changes to their CSS infrastructure at all.","msgtype":"m.text"},"ts":1530051025000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i've already said that that wouldn't work because it wouldn't let components to set an important rule which prevent users of components from overriding","msgtype":"m.text"},"ts":1530051034000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Sorry, I apologize for not remembering that was a requirement. That kind of requirement was what rakina and I were trying to draw out from you with the tables and such.","msgtype":"m.text"},"ts":1530051071000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: i'm pretty sure our statement was that the behavior of this styling mechanism should be identical to that of using a shadow root","msgtype":"m.text"},"ts":1530051088000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"I appreciate you engaging on the level of actual use cases and requirements like \"components must be able to create styles that users of the component cannot override\" instead of \"we always prefer the fake SR approach because we discussed it internally and it's best\"","msgtype":"m.text"},"ts":1530051101000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"another big concern we have with this constructible stylesheet & custom element combo is the developer tools","msgtype":"m.text"},"ts":1530051187000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"today, it's pretty easy to find a stylesheet because it's in the DOM tree","msgtype":"m.text"},"ts":1530051195000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"with this new mechanism, stylesheet is not in the DOM so we'd need a new mechanism to display & let authors interact with it.","msgtype":"m.text"},"ts":1530051214000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"which would require a new UI, etc... in our developer tool","msgtype":"m.text"},"ts":1530051222000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"i'm not saying that we wouldn't do it because of it","msgtype":"m.text"},"ts":1530051233000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"but this feature already has a high cost of implementation just because of that aspect","msgtype":"m.text"},"ts":1530051245000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"there is no way we'd accept any other complication from more custom behaviors","msgtype":"m.text"},"ts":1530051256000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"It's good to hear about what engineering tradeoffs make it harder to implement things in WebKit. For our part it seems most things are implementable; we're concerned about the developer-facing issues like how to explain the use of :host/:host-context/::slotted selectors on something that doesn't have a shadow DOM.","msgtype":"m.text"},"ts":1530051325000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: we can disallow those if you'd like","msgtype":"m.text"},"ts":1530051406000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: and use :root instead","msgtype":"m.text"},"ts":1530051410000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: but i don't think :root makes much sense","msgtype":"m.text"},"ts":1530051418000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: so maybe we'd need a new pseudo class?","msgtype":"m.text"},"ts":1530051426000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Hmm, interesting, I thought that would go against your requirement of no changes to your CSS infrastructure.","msgtype":"m.text"},"ts":1530051433000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: no, adding a new pseudo class would be re-using the existing machinary","msgtype":"m.text"},"ts":1530051454000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"Domenic: adding a new cascading order or ignoring !important is not","msgtype":"m.text"},"ts":1530051465000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"OK, good to know.","msgtype":"m.text"},"ts":1530051475000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"This is really helpful; with that in hand I'm hopeful we can make progress on the fake-SR approach.","msgtype":"m.text"},"ts":1530051530000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Thanks for taking the time, and having the patience.","msgtype":"m.text"},"ts":1530051542000,"senderName":"Domenic","senderId":"Domenic@irc"},
{"content":{"body":"Domenic: np","msgtype":"m.text"},"ts":1530051550000,"senderName":"rniwa","senderId":"rniwa@irc"},
{"content":{"body":"if I create a document with document.implementation.createDocument, can I somehow get a iframe containing that document?","msgtype":"m.text"},"ts":1530057186000,"senderName":"gsnedders","senderId":"gsnedders@irc"},
{"content":{"body":"given a Document object, how can I apply CSS styles to that? There's no Element.style, and I can't see a way to append a stylesheet to a document?","msgtype":"m.text"},"ts":1530057269000,"senderName":"gsnedders","senderId":"gsnedders@irc"}
]