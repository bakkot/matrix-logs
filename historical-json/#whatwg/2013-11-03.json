[
{"content":{"body":"Anyone know the status of css-content?","msgtype":"m.text"},"ts":1383443252000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: i was just asking about that. status seems to me orphaned.","msgtype":"m.text"},"ts":1383444725000,"senderName":"Hixie","senderId":"Hixie@irc"},
{"content":{"body":"... a=Object(); b=Object(); c=Map(); c[a] = 1; c[b] = 2 <- c[a] == c[b] == c[\"[object Object]\"] in FF. isn't the whole damned *point* of Map that it uses objects as keys and not strings?","msgtype":"m.text"},"ts":1383445482000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"wonders if TabAtkins is looking for another spec to edit","msgtype":"m.emote"},"ts":1383449805000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"oh, apparently that was also discussed recently","msgtype":"m.text"},"ts":1383450478000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"in other news, the abbreviation for GitHub sometimes confuses me","msgtype":"m.text"},"ts":1383450505000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"(good thing it's not GitPageHub or something)","msgtype":"m.text"},"ts":1383450528000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"zewt: map doesn't change how [] works in JS. Use map.set and map.get","msgtype":"m.text"},"ts":1383451257000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"that's worthless","msgtype":"m.text"},"ts":1383451497000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"introducing a new container class before designing a way to make that work the way every programmer is going to expect is nonsensical","msgtype":"m.text"},"ts":1383451622000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"i think it would be a much worse wtf if all of a sudden [] no longer accessed properties of an object but instead some magical data store where objects could be keys","msgtype":"m.text"},"ts":1383452477000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"map[\"constructor\"] // wtf this is undefined because nobody set it? i just want the constructor!","msgtype":"m.text"},"ts":1383452521000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"doesn't seem any stranger than any other custom getter/setter; it seems exceptionally strange (and confusing) to have a native map class that doesn't work with getter syntax","msgtype":"m.text"},"ts":1383453191000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"properties are always strings; breaking that assumption would break so many programs","msgtype":"m.text"},"ts":1383463341000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"GPHemsley, Hixie: http://dev.w3.org/csswg/css-content/ has a big red obsoletion notice","msgtype":"m.text"},"ts":1383472106000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"… which is not on http://www.w3.org/TR/css3-content/ for bad reasons","msgtype":"m.text"},"ts":1383472142000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":",school","msgtype":"m.text"},"ts":1383476951000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"'school","msgtype":"m.text"},"ts":1383476954000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"`school","msgtype":"m.text"},"ts":1383476956000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"where was I/","msgtype":"m.text"},"ts":1383476962000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"School, perhaps?","msgtype":"m.text"},"ts":1383477024000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1383477036000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I want to be presented with HTML/CSS learning materials.","msgtype":"m.text"},"ts":1383477049000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I was given them with school command.","msgtype":"m.text"},"ts":1383477057000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"I don't remember which channel had that command.","msgtype":"m.text"},"ts":1383477068000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":",help","msgtype":"m.text"},"ts":1383477071000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"'help","msgtype":"m.text"},"ts":1383477073000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"`help","msgtype":"m.text"},"ts":1383477075000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"nothing","msgtype":"m.text"},"ts":1383477078000,"senderName":"crocket","senderId":"crocket@irc"},
{"content":{"body":"Not this one, definitely","msgtype":"m.text"},"ts":1383477088000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"SimonSapin: Meaning, it should be on the TR version, too?","msgtype":"m.text"},"ts":1383486960000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"yes","msgtype":"m.text"},"ts":1383486972000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"glwt","msgtype":"m.text"},"ts":1383487008000,"senderName":"Ms2ger","senderId":"Ms2ger@irc"},
{"content":{"body":"AFAIU nobody has bothered to go through W3C bureaucracy to change a publish document without making a new publication","msgtype":"m.text"},"ts":1383487018000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"Domenic_: it would break zero programs, because we're talking about a new API","msgtype":"m.text"},"ts":1383488624000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"is there a single list of pseduo-elements? (are there really not that many?)","msgtype":"m.text"},"ts":1383504869000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"GPHemsley: there is four defined here: http://www.w3.org/TR/selectors/#pseudo-elements","msgtype":"m.text"},"ts":1383505147000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"I believe they’re the only ones consistently implemented","msgtype":"m.text"},"ts":1383505161000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"::selection was removed from the spec","msgtype":"m.text"},"ts":1383505169000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"a bunch of proposals add more, eg. http://dev.w3.org/csswg/css-overflow/#fragment-pseudo-element","msgtype":"m.text"},"ts":1383505191000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"and some implementations have a bunch of proprietary pseudo-elements for various things","msgtype":"m.text"},"ts":1383505226000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"eg. https://developer.mozilla.org/en-US/docs/Web/CSS/Reference/Mozilla_Extensions#Pseudo-elements_and_pseudo-classes","msgtype":"m.text"},"ts":1383505278000,"senderName":"SimonSapin","senderId":"SimonSapin@irc"},
{"content":{"body":"hmm, thanks","msgtype":"m.text"},"ts":1383505636000,"senderName":"GPHemsley","senderId":"GPHemsley@irc"},
{"content":{"body":"zewt: Yeah, it does often seem that TC39 are big on consistency and bad on usability. It isn't obvious why you couldn't add the ability to override the meaning of [] in particular classes and use that to make map less user hostile","msgtype":"m.text"},"ts":1383520358000,"senderName":"jgraham","senderId":"jgraham@irc"},
{"content":{"body":"you would be unable to pass a Map into a lot of existing code that assumes existing object keys are strings.","msgtype":"m.text"},"ts":1383520797000,"senderName":"Domenic_","senderId":"Domenic_@irc"},
{"content":{"body":"so?","msgtype":"m.text"},"ts":1383520875000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"can't think of any case in any code i've ever written where that would matter more than having a map interface that isn't gross","msgtype":"m.text"},"ts":1383520941000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"and it trades for being able to use the class in tons of existing code that assumes object keys are the keys of the dictionary","msgtype":"m.text"},"ts":1383521045000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"function sum_values(dict) { var total = 0; for(var key in dict) total += dict[key]; return total; }","msgtype":"m.text"},"ts":1383521101000,"senderName":"zewt","senderId":"zewt@irc"},
{"content":{"body":"would work for both types, instead of having to write separate code for maps with their different interface","msgtype":"m.text"},"ts":1383521122000,"senderName":"zewt","senderId":"zewt@irc"}
]